{
    "offices_search_service_stateisocode_keyword_for_transportistas_de_argentina": "List of offices for iso state and postcode.",
    "tracking_correo_argentino_result_task_task_id_for_transportistas_de_argentina": "Result for one Task ID.",
    "quotes_postcode_oca_cuit_operativa_cost_weight_volume_postcodesrc_postcodedst_for_transportistas_de_argentina": "Quote for postcode in OCA e-Pack.",
    "get_tracking_data_for_create_container_tracking": "The user will be able to retrieve the data using this endpoint.",
    "il_for_turkey_postal_codes": "Turkish plates. 1 to 81",
    "checkhealth_for_squake": " ",
    "projects_for_squake": " ",
    "transitaire_for_transitaires": "R\u00e9cup\u00e8re un transitaire donn\u00e9e",
    "transitaires_for_transitaires": "Renvoie tous les transiatires",
    "api_tracking_for_pack_send": "If you support your Pack & Send Reference Number, we can provide your with some relevant information.",
    "retorna_dados_do_endere_o_atrav_s_do_cep_for_cep_brazil": "Retorna dados endere\u00e7o",
    "track_package_for_amex_australia_fastway_australia_tracking": "Track a package shipping details using a package tracking number",
    "count_for_suivi_colis": "Compte le nombre d'\u00e9tapes de l'historique, pratique pour limiter la consommation r\u00e9seau ou les ressources sur un IoT. Permet par exemple de poller un \u00e9tat de mani\u00e8re optimale.",
    "latest_for_suivi_colis": "L'\u00e9tat courant (ie. le dernier \u00e9tat du colis).",
    "health_for_suivi_colis": "Get the API's health",
    "all_for_suivi_colis": "Tout l'historique du colis depuis son envoi jusqu'au dernier \u00e9tat en cours.",
    "get_track_info_for_pridnestrovie_post": "Get track info by track number",
    "packages_track_deprecated_for_trackingmore_v2": "Get tracking information of specific package",
    "packages_v2_track_for_trackingmore_v2": "Get tracking information of specific package",
    "carriers_list_for_trackingmore_v2": "List all supported carriers",
    "companies_for_kargom_nerede": "Companies",
    "pull_track_for_air_cargo_co2_track_and_trace": "By providing a valid AWB, you can get tracking information for the shipment.",
    "carriers_detect_for_trackingmore_v2": "Detect carrier by providing tracking number",
    "parse_for_gs1parser": " ",
    "transactions_for_orderful": "Get Transaction by ID",
    "cities_search_stateisocode_keyword_for_transportistas_de_argentina": "Search city for iso state and keyword name.",
    "quotes_postcode_correo_argentino_weight_postcodesrc_postcodedst_for_transportistas_de_argentina": "List of quote for postcode in Correo Argentino.",
    "cities_states_for_transportistas_de_argentina": "List of states for Argentina with iso code.",
    "cities_postcode_stateisocode_postcode_for_transportistas_de_argentina": "List of city for iso state and postcode.",
    "cities_states_stateisocode_for_transportistas_de_argentina": "List of city for iso state.",
    "quotes_city_correo_argentino_weight_stateisocodesrc_normalizecitynamesrc_stateisocodedst_normalizecitynamedst_for_transportistas_de_argentina": "List of quote for iso state and city keyword name in Correo Argentino.",
    "offices_postcode_service_postcode_for_transportistas_de_argentina": "List of offices for iso state and postcode.",
    "autocomplete_for_web_search": "Suggest as-you-type completion.",
    "imagesearch_for_web_search": "Get relevant images for a given query.",
    "spellcheck_for_web_search": "Check spelling.",
    "index_for_breachdirectory": "Base URL for using each of BreachDirectory's API functions: auto, sources, and password.",
    "countries_for_referential_db": "Get the list of countries.",
    "country_details_for_referential_db": "Get the country details by country code",
    "cities_in_a_country_for_referential_db": "Get the list of cities in a country.",
    "poor_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts",
    "exact_url_non_english_for_best_backlink_checker_api": "Get backlinks of a specific URL. Non English URL's only",
    "exact_url_for_best_backlink_checker_api": "Get backlinks of a specific URL.",
    "course_url_for_udemy_course_scrapper_api": "Provide the course URL",
    "course_name_for_udemy_course_scrapper_api": "Provide course name",
    "course_instructor_for_udemy_course_scrapper_api": "Provide the course Instructor",
    "rates_for_freecurrencyapi_free_currency_data": "Getting the latest foreign exchange rates",
    "nslookup_for_whois_lookup_v5": "NsLookup queries the specified DNS server and retrieves the requested records that are associated with the domain name you provided. These records contain information like the domain name\u2019s IP addresses.",
    "search_domains_websites_on_same_ip_shared_for_websites_on_same_ip": "Search domain and get other domains on same IP address, use IP address OR domain name",
    "getcompanybywebsite_for_returns_company_info_based_on_the_website": "For valid response use valid website domain.  Other values will generate exceptions. Subdomains will be removed.",
    "products_for_api_telecom": "details products",
    "get_latest_laptop_deals_for_latest_laptop_deals": "Get Latest Laptop Deals available right now.",
    "info_for_youtube_video_info": "Get all the Information of an YouTube Video, including Audio and Video Streams",
    "search_for_real_time_image_search": "Get real-time image search results from across the web. Supports all Google Images search filters.",
    "get_places_reviews_for_local_businesses_by_outscraper": "Returns Places Maps reviews from places when using search queries (e.g., `restaurants, Manhattan, NY, USA`) or from a single place when using IDs or names (e.g., `NoMad Restaurant, NY, USA`, `0x886916e8bc273979:0x5141fcb11460b226`, `ChIJrZhup4lZwokRUr_5sLoFlDw`). In addition to the reviews, it returns places information.\n\nIn case no reviews were found by your search criteria, your search request will consume the usage of one request.\n\nThis endpoint is optimized for fast responses and can be used as a real-time API. Set the `reviewsLimit` parameter to 10 to achieve the maximum response speed.",
    "search_places_for_local_businesses_by_outscraper": "Returns places from Places Maps based on a given search query (or many queries).\n\nThe results from searches are the same as you would see by visiting a regular Maps site. However, in most cases, it's recommended to use locations inside queries (e.g., bars, NY, USA) as the IP addresses of Outscraper's servers might be located in different countries.\n\nThis endpoint is optimized for fast responses and can be used as a real-time API.",
    "salvagecheck_for_simple_salvage_vin_check": "Returns true if the VIN was in a salvage database in the past. False otherwise. Must be a valid 17 digit vin from North America.",
    "historical_for_fear_and_greed_index": "Get the index for the given date.",
    "index_for_fear_and_greed_index": "Actual Fear and Greed index",
    "search_for_wayback_machine": "Search",
    "calendar_for_wayback_machine": "Calendar",
    "content_for_wayback_machine": "Content",
    "free_job_postings_api_for_arbeitnow_free_job_board": "Built in Berlin, Arbeitnow helps companies hire candidates with visa sponsorship / four day work week / remote opportunities.\n\nFour day work weeks - Companies offering better work life balance with a shorter work week results in improved productivity and helps retain candidates. Get your company listed on the\u00a0[4 day work week jobs](https://arbeitnow.com/4-day-work-week-jobs)\u00a0page\n\nHiring without Whiteboard - No trivia questions or stress inducing whiteboard interviews? We will include you in our popular section among tech\u00a0& software developers -\u00a0[hiring without whiteboard.](https://arbeitnow.com/hiring-without-whiteboard)\n\n[Jobs with Salary / Compensation](https://arbeitnow.com/jobs-with-salary)\u00a0information helps bring transparency to candidates on what they can expect from an offer.",
    "domainstatus_for_tomba": "Returns domain status if is webmail or disposable.",
    "linkedinfinder_for_tomba": "This API endpoint generates or retrieves the most likely email address from a Linkedin URL.",
    "emailfinder_for_tomba": "generates or retrieves the most likely email address from a domain name, a first name and a last name.",
    "retrieve_all_queue_times_for_unofficial_efteling_api": "Retrieve all the queue times in the efteling, data will be updated every 10 minutes",
    "retrieve_specific_queue_time_for_unofficial_efteling_api": "retrieve a specific queue item based on the ID that can be retrieved from the /queue endpoint",
    "retrieve_the_latest_blogs_for_unofficial_efteling_api": "Retrieve the latest blogs, these are updated once every hour",
    "authorfinder_for_tomba": "This API endpoint generates or retrieves the most likely email address from a blog post url.",
    "emailverifier_for_tomba": "verify the deliverability of an email address.",
    "get_demographic_county_overview_for_a_single_state_for_us_counties": "stat",
    "get_basic_county_data_for_all_u_s_counties_for_us_counties": "counties",
    "get_metadata_for_us_counties": "metadata",
    "cities_in_a_state_for_referential_db": "Get the list of cities in a state.",
    "search_for_zenserp": "Get a SERP",
    "get_categories_for_sign_hexagram": "Return a list of category of sign with description and image link.",
    "get_sign_hexagram_for_sign_hexagram": "Return one of the sign with full info by given category.",
    "getevents_for_azure_smartable": "Get Azure events",
    "getfutureevents_for_azure_smartable": "Get future Azure events.",
    "getpastevents_for_azure_smartable": "Get past Azure events.",
    "getcountrybynumber_for_telephonetocountry": "Returns country info by phone number",
    "get_article_parse_for_article_extractor": "Extract main article and meta data from a news entry or blog post.",
    "supported_locations_for_linkedin_company_and_profile_data": "Get a list of the supported LinkedIn locations. You can use these locations to get personalized search results when using an API endpoint that supports location parameter.",
    "live_for_france_2d": "Live",
    "history_for_france_2d": "History",
    "retreive_collections_for_blur": "This endpoint is used to retrieve information about all collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_tokens_for_blur": "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nFilter for Listed Tokens: {\"cursor\":null,\"traits\":[],\"hasAsks\":true}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_active_user_lend_eth_offers_for_blur": "This endpoint is used to retrieve active user lend ETH offers\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "get_colors_for_cigars": "Get Enum of Cigar colors",
    "get_cigar_by_id_for_cigars": "Get a Cigar by it's Database ID",
    "get_cigar_average_length_for_cigars": "Get the average length of cigars, filter supported",
    "user_feed_for_100_success_instagram_api_scalable_robust": "Get user feed",
    "user_info_for_100_success_instagram_api_scalable_robust": "Get data of user profile",
    "fbsearch_places_for_100_success_instagram_api_scalable_robust": "Get results of fbsearch-places endpoint",
    "about_for_sample_api": "About our website",
    "get_subtitle_in_srt_format_for_subtitles_for_youtube_v3": "Get subtitle in SRT format",
    "get_subtitle_in_json_format_for_subtitles_for_youtube_v3": "Get Subtitle in JSON format",
    "get_subtitle_in_text_format_for_subtitles_for_youtube_v3": "Get subtitle in TEXT format",
    "iso_for_phone": "Get the ISO codes from a given Country",
    "flag_for_phone": "Get the Flag Image from a given Country",
    "region_for_phone": "Get the Geographic Region information",
    "getsearchresults_for_youtube_influencer_search": "Get the results from a certain search id",
    "getallsearches_for_youtube_influencer_search": "Get all searches",
    "get_data_for_jiosaavn": "Get Jiosaavn Data (Get all possible data of songs, albums, playlists & lyrics)",
    "get_cities_in_a_country_for_geoapi": "Get cities in a country based on population.",
    "get_city_detail_for_geoapi": "Get details of a city from its name.",
    "get_country_details_for_geoapi": "Get details of country from its name and prefix.",
    "v1_animals_for_animals_by_api_ninjas": "API Ninjas Animals API endpoint. Returns up to 10 results matching the input name parameter.",
    "get_request_for_email_and_internal_links_scraper": "Pass URL as \"url\" GET parameter.\nExample: /?url=https://example.com",
    "ip_address_for_ip_to_income": "IP address",
    "x2y2_get_for_opensea_v2": "x2y2 API endpoint (https://api.x2y2.io)\nMake over 1000 requests / minute\n\nSimply copy the path into the x2y2_path header.\n\n![](https://i.ibb.co/WKYfTDy/x2y2-path-get-header.png)",
    "retreive_portfolio_for_opensea_v2": "This endpoint is used to retrieve portfolio details for a single wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "asset_information_for_opensea_v2": "Scrape all the HTML information from the NFT asset page without having to use chrome , scrape 10,000  NFTs images, & metadata in under 11min (*using top plan)",
    "domain_seo_analysis_for_domain_seo_analysis": "Get popular SEO metrics for a given domain name",
    "serp_analysis_for_domain_seo_analysis": "SERP Analysis aka keyword overview. Discover thousands of great keyword ideas, analyze their ranking difficulty and calculate their traffic potential.",
    "get_requests_for_cloudflare_bypass": "Scrape any website with GET requests\n\nURL: enter full URL required",
    "crops_list_for_crops": "This endpoint returns back all crops that are grown in Spain, being possible to filter them through query string (see Optional Parameters).",
    "superfund_search_for_epa_superfunds": "Search Superfunds by {lat, lng, radius}",
    "v1_historicalfigures_for_historical_figures_by_api_ninjas": "API Ninjas Historical Figures API endpoint. Returns a list of up to 10 people that match the search parameters. Either **name** and/or **title** parameter is required.",
    "get_railway_period_for_utc_date_for_railway_periods": "This endpoint will return railway period between:\n{\"millis\":\"0\",\"railwayPeriod\":\"1969-1970 P10\"} (01/01/1970 00:00:00)\nAnd\n{\"millis\":\"8640000000000\",\"railwayPeriod\":\"2243-2244 P8\"} (17/10/2243 00:00:00)",
    "latest_news_for_currents_news": "Get the latest news",
    "search_for_currents_news": "This endpoint allow you to search through ten millions of article over 14,000 large and small news sources and blogs. This includes breaking news, blog articles, forum content. This endpoint is well suited for article discovery and analysis, but can be used to retrieve articles for display, too.",
    "ip_reputation_for_ip_reputation_geoip_and_detect_vpn": "Fetch detailed information about the specified IPv4 or IPv6 address. Get the country by geolocation, ISP or hosting provider. You will also find out if this IP address has a history of abuse or malicious activity.",
    "get_vrbo_listing_reviews_for_vrm_str_tools": "Returns up to the last 10 reviews on a listing from VRBO\n\n**Where to find your VRBO Listing ID**\n![](https://vitesa.com/rapidAPI_Images/vrbo_listingID.png)",
    "get_airbnb_listing_ratings_for_vrm_str_tools": "Returns the ratings from a listing on Airbnb\n\n**Where to find your Airbnb Listing ID**\n![](https://vitesa.com/rapidAPI_Images/airbnb_listingID.png)",
    "get_airbnb_listing_reviews_for_vrm_str_tools": "Returns up to the last 10 reviews on a listing from Airbnb\n\n**Where to find your Airbnb Listing ID**\n![](https://vitesa.com/rapidAPI_Images/airbnb_listingID.png)",
    "check_user_existence_for_mls_router": "Check User Existence.",
    "list_properties_for_mls_router": "top: this parameter determines the number of records on each page (max is 200, default is 10).\n\nskip: this parameter determines the page number (default is 0).\n\nselect: this parameter determines the needed fields (default is all). note: more than 20 fields cannot be selected explicitly.\n\nfilter: this determines the filtered criteria which are implemented by users. note: filters must be defined in Odata format.\n\norderby: this parameter sorts results by the defined field (default is ListingKey). note: this parameter accepts \u201casc\u201d and \u201cdesc\u201d as an argument (default is \u201casc\u201d).",
    "topic_headlines_for_real_time_news_data": "Get the latest news headlines for a topic.",
    "language_list_for_real_time_news_data": "Get valid languages for a country code, to be used with all other APIs.",
    "top_headlines_for_real_time_news_data": "Get the latest news headlines/top stories for a country.",
    "5_day_forecast_for_weather": "3 hour interval - 5 day forecast for a given lat/lon",
    "current_weather_data_of_a_location_for_weather": "Returns the current (most recent) weather observation of a given location",
    "120_hour_forecast_for_weather": "Returns a forecast for up to 120 hours in the future (default 48 hours)",
    "summary_for_real_estate_records": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
    "detail_for_real_estate_records": "Return all detailed historical transactions of a given address. To call this API, it requires to call summary API first using address information. Then use the Id value returned from the summary API and call this API with the same Id. This API requires a subscription cost.",
    "address_for_real_estate_records": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index",
    "gettechdomains_for_runs_tech": "Retrieve the domains that use a specific technology",
    "getdomaintech_for_runs_tech": "retrieve domain technology information",
    "getalltech_for_runs_tech": "returns a list of all of the technology that runs.tech can find",
    "solve_for_captcha": "Solve a Captcha given an image URL",
    "nearest_stations_for_nrel_national_renewable_energy_laboratory": "Return the nearest alternative fuel stations within a distance of a given location.",
    "all_stations_for_nrel_national_renewable_energy_laboratory": "Return a full list of alternative fuel stations that match your query.",
    "utility_rates_for_nrel_national_renewable_energy_laboratory": "This service returns annual average utility rates ($/kWH) for residential, commercial and industrial sectors as well as the local utility name for a specific location. This service does not return complex rate information.  Version 3 is the current version of the utility rates API. Previous versions have been deprecated and its users are encouraged to migrate to this newly enhanced version.",
    "get_ip_information_for_all_information_about_ip": "Get IP information",
    "query_by_date_for_vietnamese_news": "- Show all articles and all of their metadata fields that have the publish date match the provided string.\n- For the URL, `date` can be shortened to `d`.\n- Each query will return **10 results**, sorted by date incrementally. Add `/1`, `/2`, etc. at the end of the URL to fetch more. Default is equal to `/0`.",
    "user_post_for_instagram_downloader": "get all post",
    "user_for_instagram_downloader": "get user info",
    "url_for_instagram_downloader": "download by url",
    "genderize_for_genderize_nationalize": "Get gender of provided name",
    "nationalize_for_genderize_nationalize": "Get nationality of provided name",
    "url_for_magiceden": "Enter the full Magic Eden URL to bypass in the header request",
    "get_info_by_city_for_zippopotam_us": "",
    "get_zip_code_info_for_zippopotam_us": "",
    "get_detailed_data_for_all_counties_for_a_single_state_for_us_counties": "county",
    "get_top_100_county_lists_by_demographic_category_for_us_counties": "list",
    "getcountrybyip_for_countrybyip": "Get Country code by IP address. IPV4 & IPV6 both are supported.",
    "get_random_user_for_ai_random_user_generator": "Get random user",
    "v1_covid_for_covid_19_news": "Highly customizable search through our database of news only on the next specific keywords: \n`covid`,`covid-19`, `coronavirus`, `\u043a\u043e\u0440\u043e\u043d\u0430\u0432\u0438\u0440\u0443\u0441`, `koronavir\u00fcs`, `koronavir\u00fcs`, `coronavir\u00fcs`, `\u0627\u0644\u062a\u0627\u062c\u0649`\nAll filters and sorting options are allowed.",
    "phone_for_phone_validation": "Get info on phone number",
    "get_regions_for_gis_engine": "Get regions  per country\n\n- country_code can be fetch from Get Countries endpoint.",
    "get_cities_for_gis_engine": "Get cities by providing the country code and region code\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint",
    "get_all_countries_for_gis_engine": "Get all supported countries",
    "addresses_for_seeding_data": "Get 100 addresses with en_US locale",
    "images_for_seeding_data": "Get 100 kitten images with height of 300 pixels and locale en_US",
    "products_for_seeding_data": "Get 100 products with en_US locale and taxes of 10% and categories type set as string",
    "realtorpropertylist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`",
    "realtorschoollist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`",
    "realtoragentlist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`",
    "phonelist_for_whatsapp_api": " ",
    "productdata_for_whatsapp_api": " ",
    "logs_for_whatsapp_api": " ",
    "getcategories_for_motivational_quotes": " ",
    "getquote_for_motivational_quotes": " ",
    "historic_views_and_subscribers_for_historical_youtube_data": "Returns historic views and subscribers for a channel, along with basic details of the channel (name, handle, thumbnails, etc.).\n\n**Note:**\n `viewsHist`/ `subsHist` data format: \n`[[timestampInMilliSecondsA, valueA], [timestampInMilliSecondsB, valueB], ...]`.",
    "screenshot_endpoint_for_screenshot_url_to_image": "Take a screenshot from a webpage url.",
    "get_search_for_fluximmo": "get_search",
    "get_portail_api_for_fluximmo": " ",
    "get_annonce_by_urls_for_fluximmo": " ",
    "token_for_oauthecho": " ",
    "echo_for_oauthecho": " ",
    "estimate_market_value_for_car_utils": "Estimate market value of the car with specified VIN.",
    "decode_vin_for_car_utils": "Decode VIN, get valuable information for the car you are interested in.",
    "get_vehicle_models_for_car_utils": "Get all supported vehicle models for specified make.",
    "search_sex_offenders_for_sex_offenders": "Params:\n@lat: latitude\n@lng: longitude\n@radius: search radius in Miles (Mi), e.g. radius = 0.2 means the API will search for sex offenders within 0.2 miles of the given lat and lng\n\nResponse:\n@offenders: List of Offender Object; If no offenders are found, it will return empty list `offenders: []`.\n\nExtensive database of National Registered Sex Offenders API for the United States. This API covers 750k+ offender records, 1M+ crime records, 19k+ cities, and all 50 states. Supports lat/lng search with radius.",
    "directory_for_phone": "Get all the Local Area Codes from a given Country",
    "facts_for_cat_facts": "Retrieve and query facts",
    "global_statistics_for_covid_19_live_data": "The Global live data statistics",
    "search_product_details_for_barcodes": "It returns product results if you enter a search term, and returns product details if you enter a barcode number.",
    "getmostrecentday_for_trinidad_covid_19_statistics": "This endpoint fetches the most recent Trinidad & Tobago Covid 19 statistics.  It returns data for that specific day alone.",
    "getstatsbymonth_for_trinidad_covid_19_statistics": "This endpoint fetches Trinidad & Tobago Covid 19 statistics by month. For a valid response, the months are input as \"01\" or \"12\" and not the actual month name such as \"January\" or \"December\".",
    "getstatsbyyear_for_trinidad_covid_19_statistics": "This endpoint delivers Trinidad & Tobago Covid 19 statistics by year. For a valid response, the beginning year is 2020 and the latest year is the current year.",
    "fish_api_group_for_fish_species": "This endpoint will group the available data by the <code>property_value</code> parameter. The available URL query parameters are <code>meta_property</code>,  <code>meta_property_attribute</code>, and <code>property_value</code>. The API will group and return all fishes that are matching the <code>property_value</code> that is given in the meta-object.",
    "fish_api_fishes_for_fish_species": "This endpoint will return back all available fishes that are available",
    "fish_api_fish_name_for_fish_species": "This endpoint will return information for a specific fish",
    "sparkline_for_wayback_machine": "Sparkline",
    "get_all_motivational_pictures_for_motivational_content": "This endpoint fetches all the pictures. However, you can use 'skip' and 'limit' parameters to do pagination.",
    "get_a_specific_picture_for_motivational_content": "This endpoint fetches a specific motivational picture according to the given id.",
    "get_all_motivational_quotes_for_motivational_content": "This endpoint fetches all the motivational quotes. However, you can do pagination as well using the 'skip' and 'limit' parameters.",
    "iplocation_for_ip_geo_location_find_ip_location_and_details": "Provides Geo information for the given IP.",
    "get_all_dog_breeds_for_dog_breeds": "This endpoint will return back all available dog breeds that are available",
    "get_breed_information_for_dog_breeds": "This endpoint will return information for a specific dog breed",
    "group_breed_data_by_property_for_dog_breeds": "This endpoint will group the available data by the given property and the property value. The property can be any property of the JSON response object including the properties of the meta object. \n\nThe API will return all dog breeds that are matching the property value that is given.",
    "api_getvisits_for_similarweb_historical_data_": "Return visits data",
    "api_getcountries_for_similarweb_historical_data_": "Returns country shares by months",
    "get_status_for_indian_names": "API to check if the service is up",
    "get_names_for_indian_names": "Fetch a random list of indian names",
    "check_for_vinhub": "Check if report exist",
    "balance_for_vinhub": "Check your balance",
    "orders_for_vinhub": "Get runs orders",
    "extract_for_linkedin_profiles": "Extracts data from Linkedin URL (profile or company page).",
    "search_for_linkedin_profiles": "Search company or profile",
    "skills_search_for_iys_skill_api_": "Skills Search",
    "functional_areas_for_iys_skill_api_": "Functional Areas",
    "skill_tree_for_iys_skill_api_": "Skill Tree",
    "proxies_example_json_for_proxy_spider_proxies": "This is a free sample of ten proxies. Sign up and receive the full list.",
    "people_for_gloppo_fake_api": "Get a list of random generated fake people data.",
    "general_info_for_covid_italy_statistics": "General information of service",
    "getsingleverse_for_niv_bible": "Get a single verse based on the book, chapter and verse number.",
    "full_information_for_domain_info": "This endpoint returns the full information on the domain.",
    "check_domain_info_for_domain_info": "This endpoint returns the domain information.",
    "namebydomain_for_name_using_domain": "Get Domain or Organization Name using Domain.",
    "get_all_climate_change_news_for_climate_change_live_api": "Get climate change news all over the world",
    "get_individual_publication_s_news_about_climate_change_for_climate_change_live_api": "Get individual publication's news about climate change all over the world.",
    "trending_for_youtube_trending": "Gather Trending Videos from Youtube",
    "domain_name_search_for_domain_name_search": "Search 600m+ root domains (domain names) by partial match",
    "proxy_list_for_proxy_port": "List of proxy",
    "rip_for_url_intelligence": "Extract links and info from a given URL",
    "user_by_screen_name_for_twitter_data": "user-by-screen-name",
    "user_following_for_twitter_data": "user-following",
    "v2_user_tweets_and_replies_for_twitter_data": "v2/user-tweets-and-replies",
    "video_recommendation_continuation_for_youtube_search": "This endpoint will return the continuation list of recommended videos based on a former call to /video/recommendation/ endpoint.",
    "video_comments_for_youtube_search": "This endpoint returns a list comments under a given Youtube video",
    "channel_videos_for_youtube_search": "Get the latest videos published by a Youtube channel",
    "generaterandomidentity_for_fake_identity_generator": "Use this endpoint to generate a random fake identity, click the test button and enjoy the informations generated!",
    "town_for_mzansi_loadshedding_api_": "Returns the schedule for the specific requested town",
    "get_single_user_for_uers_api": "This Endpoint return Individual user data for the  provided user ID",
    "get_all_users_for_uers_api": "Get all the users",
    "quotes_for_random_quotes_v1": "Returns 5 random quotes",
    "latest_sold_for_most_expensive_nft_artworks": "Get recent sold artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare",
    "most_expensive_for_most_expensive_nft_artworks": "Get most expensive artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare",
    "monthly_volume_by_gallery_for_most_expensive_nft_artworks": "Get list of monthly volume by gallery",
    "get_zip_code_summary_for_zip_code_master": "Retrieve a summary profile for the provided ZIP code.",
    "get_zip_code_detail_for_zip_code_master": "Retrieve a detailed profile and demographic data for the provided ZIP code.",
    "openapi_openapi_json_get_for_places_in_radius": " ",
    "places_in_radius_places_in_radius_get_for_places_in_radius": "This endpoint returns:\n-  all the facilities that meet specified category (grocery_store, gym, railway_station etc.)\n- are within specified radius from starting_point\n\nReturned data (please let us know, what additional data to provide to your plan):\n - unique place_id\n- location (lat,lng)\n- type\n- distance data (walking and driving, counting from origin)\n- business details : email (if provided), phone",
    "listquotes_for_currency_exchange": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.",
    "exchange_for_currency_exchange": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.",
    "search_products_all_countries_for_amazon_web_scraping_api": "Allows to search products in Amazon using real time data scraping API.",
    "get_deals_for_amazon_web_scraping_api": "Get amazon deals allowing to filter by category.  The category list is included in the response.",
    "get_websites_for_amazon_web_scraping_api": "Get the available websites available by country to extract amazon product data.",
    "get_company_logo_by_domain_for_company_logo": "Fetch company logo by providing domain in query params",
    "json_endpoint_for_ip_geolocation_ipwhois_io": "Detailed information on our website: https://ipwhois.io/documentation",
    "v1_feeds_for_awesome_rss": "List your current RSS",
    "v1_feedid_for_awesome_rss": "Get RSS content\n\n**If you use an RSS reader**\n\nIf you use RapidAPI, you will need to include two header parameters, *X-RapidAPI-Key* and *X-RapidAPI-Host*.\n\nI know this may not be friendly to RSS readers, so I suggest you use `https://awesome-rss.cys.fyi/api/v1/{feedId}` instead to get your content. Then add the link to your reader.\n",
    "search_a_place_for_busy_and_popular_times": "Search for a location exactly the way you Google it. The API will only work if the search returns the \"Popular Times\" graph in the result",
    "get_company_data_by_its_linkedin_internal_id_for_fresh_linkedin_company_data": "Given a company\u2019s LinkedIn internal ID, the API will return valuable data points in JSON format.",
    "get_company_ads_count_for_fresh_linkedin_company_data": "Get number of ads the company posted on LinkedIn. 1 request = 1 credit.",
    "get_company_by_domain_for_fresh_linkedin_company_data": "Given a company\u2019s web domain, the API will return valuable data points in JSON format.",
    "getverses_for_holy_bible": "",
    "getverseofachapter_for_holy_bible": "",
    "getchapter_for_holy_bible": "",
    "checkthatphone_for_checkthatphone": "Validation, carrier look-up, line type, portability status, geoIP and timezone, routing.\nSimply provide a United States phone number and an ip (optional) to get a result.",
    "get_all_country_list_for_country_list": "Nodes:\niso: iso\ncountryname: country name\nnicename: nicename\niso3: iso3\nnumcode: numcode\nphonecode:phonecode",
    "domain_name_for_domain_whois_lookup_api": "Please provide the domain name for which you would like to retrieve WHOIS details.",
    "get_storage_info_for_kvstore": "Show the user's storage status and information",
    "get_a_value_for_kvstore": "Read the value",
    "collection_list_for_kvstore": "Get the list of all collections",
    "list_employers_for_adzuna": "List the employers with most jobs advertised.",
    "search_properties_for_adzuna": "Search Adzuna properties",
    "salary_estimate_for_adzuna": "Returns an estimate of the salary of a job.",
    "ip_lookup_for_ip_whois_geolocation": "For IPv4 & IPv6",
    "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2": "Get subtitle in SRT format",
    "list_languages_for_subtitles_for_youtube_v2": "List all supported languages",
    "list_all_available_subtitles_for_subtitles_for_youtube_v2": "List all available subtitles for a YouTube video",
    "serp_for_serp_results": "SERP",
    "registration_check_for_sa_rego_check": "Information returned from this check includes:\n\nMake\nPrimary Colour\nExpiry Date\u00a0\nbody or hull type\ncompulsory third-party (CTP) insurer (vehicles only)\nheavy vehicle details (gross vehicle, combination, or trailer mass).",
    "diagnosticscodelist_for_diagnostics_code_list": "Diagnostics Code List\u0650  A lightweight API based on ICD-10-CM (International Classification of Diseases, Tenth Revision, Clinical Modification) that displays medical diagnoses data using the diagnostic code, the diagnosis name, or symptoms, which can be used by health care providers ( health information managers, nurses and other healthcare professionals ) clinics and hospitals in their own systems or be a part of prognosis and diagnosis systems, Search can be done using diagnostics Codes or the diagnosis name, symptoms, and procedure names.  ( result is JSON you can use it in your site or your own system )  DiagnosticsCode : String  DiagnosticsName : String",
    "random_username_generator_for_unique_username_generator_by_pizza_api": "Returns a Random and unique username everytime",
    "users_list_for_users_list": "Get a list of users.",
    "code_for_us_zipcodes": "Return a zip code detail",
    "get_product_reviews_all_countries_for_amazon_web_scraping_api": "Get the reviews for specific product using the ASIN code.",
    "filter_and_query_naics_description_for_industry_naics_search": "This endpoint will allow you to search by freeform text, eg. Hotel and get all the list of NAICS code, hash, and description back.\nYou can also filter the search if you have an NAICS code and want to get the description and the hash of the industry.",
    "search_for_zillow_base": "Search for properties",
    "property_details_for_zillow_base": "Property details",
    "search_by_url_for_zillow_base": "Search by URL",
    "getdatetimebyaddress_for_date_and_time": "This endpoint internally calculates the co-ordinates and timezone to calculate the current date and time",
    "getdatetimebycoordinates_for_date_and_time": "Get Date and time for a pair of given co-ordinates.",
    "getdatetimebytimezone_for_date_and_time": "Get Date and time for a given timezone.",
    "get_user_by_gender_for_fake_users": "get user by gender",
    "user_for_fake_users": "get one user",
    "keyword_search_at_coordinates_for_google_local_rank_tracker": "Make a Keyword search at a Coordinate (lat/lng) for all the business.",
    "geogrid_seach_with_ranking_for_google_local_rank_tracker": "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-to-bottom.  Contains additional ranking data for the business by place_id or business name.",
    "calculate_geogrid_coordinate_points_for_google_local_rank_tracker": "Get all grid coordinate points based on a center geocoordinate point and distance arguments.",
    "skill_child_for_iys_skill_api_": "Skill child",
    "image_search_for_google_search_results_scraper": "Runs a standard image search and parses the output to a clean json object.",
    "web_search_for_google_search_results_scraper": "Runs a standard google web search and parses the results returning a clean json object",
    "top_news_for_google_search_results_scraper": "Returns current top news by region and language as a clean json object.",
    "get_exchange_rates_for_watchsignals": "Return latest exchange rates",
    "get_all_watch_brands_for_watchsignals": "Get all watch brands",
    "get_offers_by_watch_id_for_watchsignals": "Get offers by watch id",
    "dns_request_for_dns_records_lookup": "DNS Request\n\nType can be one of:\n'A', 'AAAA', 'AFSDB', 'APL', 'CAA', 'CDNSKEY', 'CDS', 'CERT', 'CNAME', 'CSYNC', 'DHCID', 'DLV', 'DNAME', 'DNSKEY', 'DS', 'EUI48', 'EUI64', 'HINFO', 'HIP', 'HTTPS', 'IPSECKEY', 'KEY', 'KX', 'LOC', 'MX', 'NAPTR', 'NS', 'NSEC', 'NSEC3', 'NSEC3PARAM', 'OPENPGPKEY', 'PTR', 'RP', 'SMIMEA', 'SOA', 'SPF', 'SRV', 'SSHFP', 'SVCB', 'TA', 'TKEY', 'TLSA', 'TXT', 'URI', 'ZONEMD'\n\nIDN domains should be converted before requesting.\n\nUse **xn--fuball-cta.de** instead of **fu\u00dfball.de**",
    "get_detailed_data_for_all_u_s_counties_for_us_counties": "counties",
    "find_comment_find_get_for_facebook_user_info": "Find Comment by UID or by_object_id(PageID, GroupID) ",
    "find_user_find_get_for_facebook_user_info": " ",
    "find_feed_find_get_for_facebook_user_info": "Find Feed by UID or by_object_id(PageID, GroupID) ",
    "scrape_legacy_for_scrapeninja": "Scrape via GET method. Not recommended for production, you'd better use POST requests.",
    "subtitlelist_for_youtube_video_subtitles_list": "Get list of subtitle for video",
    "loading_speed_data_for_website_analyze_and_seo_audit_pro_": "Website Loading speed Related Information",
    "onpage_seo_analyze_for_website_analyze_and_seo_audit_pro_": "Get Website audit data",
    "domain_data_for_website_analyze_and_seo_audit_pro_": "Website Domain informations",
    "getrandomname_for_random_chunk_api": "Returns random people's names..",
    "getrandomword_for_random_chunk_api": "Get random words.",
    "getrandomtvshow_for_random_chunk_api": "Returns random TVshows.",
    "languages_for_free_stopwords": "Will list all available stopword languages including how many words each language contains.",
    "categories_for_free_stopwords": "Will list all available word categories. Check this before calling /stopwords",
    "stopwords_for_free_stopwords": "Will return the exact extract words to use in your data analysis or application",
    "list_of_countries_with_income_level_for_world_bank_gdp": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/V2/incomeLevel/LIC/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json",
    "list_all_countries_for_world_bank_gdp": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/v2/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json",
    "v1_quotes_for_quotes_by_api_ninjas": "Returns one (or more) random quotes.",
    "parse_for_url_metadata_opengraph": " ",
    "search_videos_for_tiktok_api": "Return Search Result",
    "search_accounts_for_tiktok_api": "Return Search Result",
    "collection_videos_details_for_tiktok_api": "Return a collection details and videos",
    "agent_s_active_listings_for_zillow": "Agent's active listings",
    "search_for_properties_for_zillow": "Search for properties",
    "walk_transit_and_bike_scores_for_zillow": "Get Walk, Transit and Bike Scores of a property by zpid",
    "get_coverage_for_us_cell_coverage_by_zip_code": "Get cell coverage for AT&T, T-Mobile, U.S. Cellular and Verizon by zip code",
    "search_by_weight_for_player_data": "<br /><br />\n<b>Authentication:</b> not required",
    "searchplayer_for_player_data": "<br /><br />\n<b>Authentication:</b> not required",
    "get_list_of_top_level_domains_for_tld": "Get an exhaustive list of more than official 1500 generic and country code TLDs for which domains can be registered with.",
    "timeseries_for_hedonometer": "Call the happiness timeseries",
    "ean13_for_ean13_code_generator_api": "This endpoint returns a PNG with an EAN13 barcode or an error, based on a 12-13 lenght code. In case of 12 it will calculate automatically check-digit, in case of 13 it will check the check-digit.",
    "get_server_time_for_trulia_real_estate_scraper": "Returns server time",
    "get_home_details_for_trulia_real_estate_scraper": "Returns full details of home. Call **Get listing by url** or get items from *Search*. In response you'll get **url** of home. Take this url and pass it here into query. You can also go to https://www.trulia.com/AZ/Scottsdale/ and take urls e.g. https://www.trulia.com/p/az/fountain-hills/14834-e-valley-vista-dr-fountain-hills-az-85268--2113652369",
    "search_for_sale_for_trulia_real_estate_scraper": "To download data from SALE, you must first generate a Token with Get search token and set search_type=ForSale. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there.",
    "get_address_transactions_for_address_monitor": "Get address transactions",
    "get_address_transaction_webhook_for_address_monitor": "Get address transaction webhook",
    "get_addresses_for_address_monitor": "Get addresses",
    "get_profile_series_for_outsystems_community_api": "Returns time series snapshots of a profile.",
    "get_profile_for_outsystems_community_api": "Returns the details of a profile.",
    "get_profiles_for_outsystems_community_api": "Returns a list of profiles",
    "v1_randomuser_for_random_user_by_api_ninjas": "API Ninjas Random User API endpoint. Returns a fake random user profile.",
    "zip_code_for_us_zip_code_to_income": "ZIP code",
    "get_latest_updates_for_covid_19_india": "Coronavirus India Live Guidelines, Bills, etc",
    "get_info_for_covid_19_india": "Get Covid Latest Information",
    "get_details_for_covid_19_india": "Coronavirus India Live Updates (State)",
    "url_analysis_for_url_analysis": "url-analysis",
    "get_reference_numbers_of_a_specific_brand_for_watchsignals": "Get reference numbers of a specific brand",
    "get_store_info_for_shopify_stores_info": "This endpoint retrieves information on any store in Shopify.",
    "search_for_shopify_stores_info": "In this endpoint you can search any particular Niche, or keyword for more narrowed results.",
    "shared_service_for_lootero": "This endpoint returns the items related to a share code",
    "supported_locations_for_linkedin_live_data": "Get a list of the supported LinkedIn locations. You can use these locations to get personalized search results when using an API endpoint that supports location parameter.",
    "document_for_get_docs": "doc",
    "case_record_for_get_docs": "case",
    "retrieveclaimlistbyuser_for_get_docs": "Retrieve Claim List By User",
    "1_hour_minutely_forecast_nowcast_for_weather": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall",
    "16_day_forecast_for_weather": "Returns a 16 day (daily) forecast",
    "get_request_for_url_shortener_we_store_your_links_forever_": "Enter your password to get click-through statistics for your link.\nShows long URL and visitor statistics.",
    "youtube_channel_id_for_youtube_search": "This endpoint get the channel ID of a Youtube Channel given the channel name",
    "video_recommendation_for_youtube_search": "This endpoint returns a list of recommended videos based on a given a video ID",
    "quotes_by_keywords_for_quotes_v2": "Returns Quotes containing specified keyword",
    "quotes_by_authors_for_quotes_v2": "Returns the quotes by specified authors",
    "get_available_authors_for_quotes_v2": "Returns list of available authors",
    "get_companies_by_sic_code_for_get_companies_by_sic_code_api": "Retrieve a list of the top 100 companies that are related to a given SIC code.",
    "get_company_data_by_company_slug_for_get_companies_by_sic_code_api": "Using the Company Slug that is provided in the \"Get Companies by SIC code\" endpoint, you will be receiving additional information about a company. \nGet city, state, zip code, estimated annual revenue, years in business, and estimated company size, and company NAICS.",
    "search_companies_by_name_for_get_companies_by_sic_code_api": "This endpoint will allow you to search for companies by their name. This endpoint will provide you with the company slug that could be used to get additional company data, like SIC code and NAICS code.",
    "getpoints_for_raastaapi": "This will retrieve specific points from the database and return it.",
    "getintersection_for_raastaapi": "For a given route, this returns the total number of potholes and speedbreakers that have been found in the database that our system has detected.",
    "getnearestneighbor_for_raastaapi": "For every location point given, this searches the database and returns the nearest pothole and speed-breaker events and the distances from it.",
    "get_dns_records_for_vibrant_dns": "Get a domains DNS records",
    "postalcode_to_location_information_search_for_zipcodebase_zip_code_search": "This endpoint allows you to receive information for one or multiple given postalcodes.",
    "search_for_zillow_data_v2": "Search",
    "search_by_coordinates_for_zillow_data_v2": "Search by coordinates",
    "search_by_url_for_zillow_data_v2": "Search by URL",
    "download_mp3_for_subtitles_for_youtube_v2": "Download mp3 from youtube video.",
    "playlist_for_youtube_v3_alternative": "Get playlist details and videos.",
    "search_for_youtube_v3_alternative": "Search videos, playlist, channel.",
    "video_details_for_youtube_v3_alternative": "Get details of the YouTube video.",
    "get_stations_within_10_km_for_ev_charging_stations": "Return nearest charging stations within 10 km radius.",
    "get_stations_within_5_km_for_ev_charging_stations": "Return nearest charging stations within 5 km radius.",
    "get_stations_within_1_km_for_ev_charging_stations": "Return nearest charging stations within 1 km radius.",
    "rental_ratings_for_airdna": "Returns rental ratings",
    "rental_amenities_for_airdna": "Returns rental amenities",
    "property_listings_for_airdna": "Get rental properties of Airbnb and Vrbo by location and date.",
    "phishing_url_detection_api_for_phishing_url_risk_api": "This end point takes a  'GET' request with urll/string as a parameter and retunrs  phishing risk indicators such as :  url Redirecting risk, SubDomains, HTTPS, Domain Regulation Length,\nIframeRedirection, Age of Domain, DNS Recording, WebsiteTraffic.",
    "getpeople_for_diablo4_smartable": "Get Diablo 4 influencers and top players.",
    "gettopics_for_diablo4_smartable": "Get Diablo 4 topics.",
    "getgamesbytopic_for_diablo4_smartable": "Get Diablo 4 gameplays by topic.",
    "get_zipcode_by_city_for_redfin_base": "Get ZipCode by City",
    "search_by_region_for_redfin_base": "Search by region",
    "search_by_url_for_redfin_base": "Search by URL",
    "get_information_of_a_particular_post_for_leetcode_compensation": "This API Endpoint will return information of a particular post with specific postID.",
    "get_hot_posts_of_leetcode_discuss_compensation_for_leetcode_compensation": "This API Endpoint will return 150 HOT posts of Leetcode Discuss Compensation.",
    "retrieve_user_collection_bids_for_blur": "This endpoint is used to retrieve the active collection bids to a user wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_rewards_for_blur": "This endpoint is used to retrieve if bid rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_collection_pricing_chart_for_blur": "This endpoint is used to retrieve collection pricing chart data\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "getfunctionsbytopic_for_powerbi": "Get Power BI DAX functions by topic.",
    "getfunctions_for_powerbi": "Get Power BI DAX functions.",
    "getlearningresources_for_powerbi": "Get Power BI learning resources.",
    "generate_for_payment_card_numbers_generator": "# Generate payment card numbers\n\n## Default values\n\n**scheme**: \"visa\"\n**count**: 5",
    "by_location_for_homeless_shelter": "Search Homeless Shelters by Location Coordinate and Radius",
    "by_state_city_for_homeless_shelter": "Search Homeless Shelters by State & City",
    "by_zip_code_for_homeless_shelter": "Search Homeless Shelters by Zip Code",
    "get_trending_result_for_google_trends_us": "Gives you an array of trending search result.",
    "world_coordinate_to_income_for_world_coordinates_to_income": "Granular city per capita income",
    "get_all_round_dates_for_thai_lottery": "Get all round dates - \u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e2b\u0e27\u0e22\u0e2d\u0e2d\u0e01\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14",
    "get_latest_lottery_result_for_thai_lottery": "Get latest lottery result - \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25 \u0e07\u0e27\u0e14\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14",
    "get_lottery_result_by_date_for_thai_lottery": "Get lottery result by date - \u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25 \u0e42\u0e14\u0e22\u0e23\u0e30\u0e1a\u0e38\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48",
    "domainlist_for_neostrada_domains": "Get a list of your domains",
    "domain_for_neostrada_domains": "Get Domain data",
    "manufacturing_location_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to manufacturing location.\nA few examples:\nLRW-C (Shanghai, China)\nXP7-B (Berlin, Germany)",
    "vin_detection_for_tesla_vin_identifier": "This endpoint is capable of resolving a Tesla VIN identifier to an actual VIN. This conversion has a success rate of approximately 98%.\nThe following information is encoded in a Tesla VIN:\nManufacturer ID\nModel Type\nPlatform Type\nSeat Belt Type\nDrive System \nMotor Type\nYear of Manufacturing\nManufacturing Location (Fremont, Shanghai, Berlin, Austin)\nSpecial Series (like R for research)\nVIN Serial",
    "model_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to a model type",
    "get_countries_for_cities_cost_of_living_and_average_prices_api": "Retrieve all the supported countries in this API.",
    "cost_of_living_by_city_for_cities_cost_of_living_and_average_prices_api": "This endpoint will retrieve the average prices and cost of living for the desired city. Declare country and city.",
    "cost_of_living_by_country_for_cities_cost_of_living_and_average_prices_api": "This endpoint will retrieve the average cost of living in a certain country. This endpoint will calculate the average prices and cost of living across the given country.",
    "getrandomarray_for_random_chunk_api": "Generate a random array with numbers, words or mixed values.",
    "getrandomuser_for_random_chunk_api": "Returns random user data such as name, e-mail, etc.",
    "projects_staking_other_activities_for__all_in_one_crypto_swiss_knife_": "Get activities that address is involved in",
    "protocols_for__all_in_one_crypto_swiss_knife_": "Get protocols.\nYou can search by adding 'q' query param.\n\nSupported chains:  \"eth, bsc, matic, avax, okt, hmy, heco, klay, op, arb, ftm, xdai, cro, mobm, celo, aurora, fuse, evmos, cfx, kava\";",
    "gas_price_for__all_in_one_crypto_swiss_knife_": "get current ETH gas price",
    "users_for_reqres": "Users",
    "unknown_for_reqres": "List of unknown resources",
    "genderize_for_genderizeio": "Predict the gender of a person based on their name.",
    "fresh_potential_gems_for_crypto_gem_finder": "Get Recently added coins",
    "trending_for_crypto_gem_finder": "get trending coins",
    "today_best_for_crypto_gem_finder": "Get Today most popular coins",
    "topic_news_by_section_for_real_time_news_data": "Get topic news article in a specific section.",
    "local_headlines_geo_for_real_time_news_data": "Get local, geo based headlines",
    "search_for_real_time_news_data": "Search news articles by query with an option to limit the results to a specific time range.",
    "emailcount_for_tomba": "Domain name from which you want to find the email addresses.",
    "rentalizer_for_airdna": "Rental Property Calculator by address",
    "top_property_managers_for_airdna": "Returns the largest property managers",
    "suggest_region_for_airdna": "Returns suggested regions by keyword",
    "liquidation_data_for_liquidation_report": "Get the summary liquidation data for all coin. Data include total liquidation value, total liquidation amount, mean & median liquidation value.",
    "liquidation_report_for_liquidation_report": "Get the latest liquidation data from Binance, Bybit and OKX exchange. Data is limited to 1000 rows.",
    "lickhunter_pro_for_liquidation_report": "Suites of data tailored specifically for Bybit Lickhunter v4",
    "blockit_for_blockit": "BlockIt is detect IP Address a Proxy, Tor, Hosting, Cloud, Bogon and etc.",
    "getsponsorships_for_diablo4_smartable": "Get Diablo 4 sponsorships.",
    "getnews_for_diablo4_smartable": "Get Diablo 4 news.",
    "prices_and_up_and_down_for_crypto_prices_api": "Here you can fetch the data using this rest endpoint",
    "overview_for_dummydata": "Overview of all entry points and usage",
    "provider_for_dummydata": "provider entry points",
    "get_detailed_data_for_all_county_equivalents_for_us_counties": "county",
    "expiry_date_enquiry_for_wa_rego_check": "Vehicle license expiry date query and license registration",
    "top_paid_apps_for_store_apps": "Top paid apps chart.",
    "top_grossing_apps_for_store_apps": "Top grossing apps chart.",
    "app_reviews_for_store_apps": "Get all app reviews.",
    "qrcode_for_qr_code_generator_api": "This endpoint will return a qrcode base on string given in input.",
    "getallcategories_for_house_plants": "Get all available categories for all plants",
    "getbyid_for_house_plants": "Returns a single plants data within an object. Information for each plant returned contains (but not limited to) the list below\n\n- Latin name \n- Img \n- Id\n- Family \n- Other names \n- Common name \n- Common name (fr.) \n- Description \n- Categories \n- Origin \n- Climat \n- Temperature max\n- Temperature min\n- Zone \n- Growth \n- Light ideal \n- Light tolered \n- Watering \n- Insects \n- Disease \n- Appeal \n- Color of leaf \n- Color of blooms \n- Blooming season \n- Perfume \n- Avaibility \n- Pot diameter\n- Height at purchase\n- Width at purchase\n- Height potential\n- Width potential\n- Available sizes\n- Bearing \n- Clump\n- Pruning \n- Style \n- Use",
    "getalllite_for_house_plants": "Gets all items but only identifying data. All additional data can be grabbed from the GetById route or the GetAll route which return all item with all its keys, no restriction",
    "get_airports_for_airportsdata": "Will return data from 28k+ airports in the database.",
    "get_block_v2_for_chain49": "Returns information about block with transactions, subject to paging.\n\nNote: Blockbook always follows the main chain of the backend it is attached to. If there is a rollback-reorg in the backend, Blockbook will also do rollback. When you ask for block by height, you will always get the main chain block. If you ask for block by hash, you may get the block from another fork but it is not guaranteed (backend may not keep it)",
    "get_tickers_list_v2_for_chain49": "Returns a list of available currency rate tickers (secondary currencies) for the specified date, along with an actual data timestamp.",
    "get_address_v2_for_chain49": "Returns balances and transactions of an address. The returned transactions are sorted by block height, newest blocks first.\n\nThe **details** query parameter can specify the level of details returned by the request (default: \"txids\").\nPossible values are:\n\n**basic**: return only xpub balances, without any derived addresses and transactions\n\n**tokens**: basic + tokens (addresses) derived from the xpub, subject to tokens parameter\n\n**tokenBalances**: basic + tokens (addresses) derived from the xpub with balances, subject to tokens parameter\n\n**txids**: tokenBalances + list of txids, subject to from, to filter and paging\n\n**txs**: tokenBalances + list of transaction with details, subject to from, to filter and paging\n",
    "keyword_search_at_coordinate_point_for_local_rank_tracker": "Get search results at the specified coordinate point without any rank comparison data.",
    "full_grid_search_for_local_rank_tracker": "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-down.",
    "search_business_locations_for_local_rank_tracker": "Returns a list of found Google My Business locations based on search query, including Service Area Businesses (SAB).",
    "generate_password_for_ultimate_password_generator": "Get your desired password with specific options to use",
    "websearch_for_web_search": "Get relevant web pages for a given query.",
    "get_asn_by_ip_for_asn_details": "Enter an IP Address (Both IPv4 or IPv6 Addresses allowed) to get its ASN number, Organization, Country etc.",
    "get_asn_by_country_for_asn_details": "Enter country code (ISO 2 letter code such as US, GB etc) to get all the ASNs associated with that country.",
    "get_details_by_asn_number_for_asn_details": "Enter an ASN Number (Integer) to get all of its details such as IP ranges, Country, Organization, CIDR.",
    "get_chatroom_rules_for_kick_com_api_kick_api": "Get Chatroom Rules",
    "get_channel_livestream_info_for_kick_com_api_kick_api": "Get Channel Livestream Info",
    "get_chat_user_like_user_from_chat_for_kick_com_api_kick_api": "Get Chat User (like user from chat)",
    "fetch_business_data_for_whatsapp_data": "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account.",
    "about_for_whatsapp_data": "This endpoint will return the `About` data of the Whatsapp for business number, and when the value was set.",
    "fetch_profile_picture_for_whatsapp_data": "Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.",
    "getrandomquote_for_random_chunk_api": "Get a random quote.",
    "get_subcontrol_by_control_for_risk_management_framework": "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc.",
    "get_all_subcontrols_for_risk_management_framework": "Returns all the subcontrols of all main controls. \n\nEx/ AC-1 is a main control while AC-1.1 is a subcontrol.",
    "get_all_ccis_aps_for_risk_management_framework": "Returns all Control Correlation Identifiers (CCIs)  AKA Assessment Procedures (APs).",
    "plant_for_plantwise": "Get all information regarding a specific plant type",
    "tokenize_for_tokenizer": "Tokenizes a value passed to the endpoint.  The value must be 1KB or smaller and the follow characters are not allowed:\n- The forward slash (/) character\n- The backslash () character\n- The number sign (#) character\n- The question mark (?) character\n- Control characters from U+0000 to U+001F, including:\n     - The horizontal tab (t) character\n     - The linefeed (n) character\n     - The carriage return (r) character\n- Control characters from U+007F to U+009F",
    "activities_transfers_for_rich_nft_api_metadata": "**Get collection activity**\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**order_by** \n-time_at\ntime_at\nusd_value\n-usd_value",
    "nft_tokens_in_collection_for_rich_nft_api_metadata": "Get NFT tokens in specific collection.\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**Filter by traits example**:\ntraits=[{\"name\":\"type\",\"value\":\"Female\"}]\n\n**order_by: options** \nvalue\n-value\nrarity_rank_at\n-rarity_rank_at\npay_usd_value\n-pay_usd_value",
    "collection_info_for_rich_nft_api_metadata": "Get info about collection.\nSupported chain_id: eth, bsc, matic, avax, arb, op",
    "get_fuel_economy_information_for_car_utils": "Get fuel economy information from the official U.S. government source.",
    "get_vehicle_makes_for_car_utils": "Get all supported vehicle makes.",
    "get_time_for_scout": "Gets the time",
    "index_for_scout": "Root endpoint",
    "channel_for_theclique": "Channel info by ID",
    "year_end_billboard_200_albums_for_theclique": "Get the Year-End Billboard 200 Albums chart.\nAvailable years **2002 - 2022**",
    "eventbrite_detail_for_theclique": "Enter the ID of the festival. Example, luft-2022-tickets-409654235847\nYou can get ID from \"EventBrite search\" API",
    "addresses_for_addressr": "returns a list of addresses matching the search string\n",
    "addresses_addressid_for_addressr": "returns detailed information about a specific address\n",
    "captures_for_wayback_machine": "Captures",
    "livestock_for_livestock": "Livestock information",
    "list_autocomplete_suggestions_for_youtube_media_downloader": "This endpoint lists autocomplete predictions depending on the keyword.",
    "translate_convert_download_subtitle_for_youtube_media_downloader": "This endpoint lets you translate, convert and download a subtitle of a YouTube video. Before doing this, please call endpoint `Video > Get Video Details` to obtain subtitle URLs.",
    "list_post_comments_for_youtube_media_downloader": "This endpoint lists comments of a YouTube community post. Pagination scraping is supported.",
    "get_available_locations_for_generate_linkedin_leads": "Get Available Locations which could be used in /leads/leads/ endpoint",
    "get_available_job_titles_for_generate_linkedin_leads": "Get Available Job Titles which could be used in /leads/leads/ endpoint",
    "get_available_companies_for_generate_linkedin_leads": "Get Available Companies which could be used in /leads/leads/ endpoint",
    "street_level_availability_for_data_police_uk": "Return a list of available data sets.",
    "crime_categories_for_data_police_uk": "Returns a list of valid categories for a given data set date.",
    "local_neighbourhood_for_data_police_uk": "",
    "get_a_brewery_for_open_brewery_db": "Get Brewery by ID",
    "breweries_for_open_brewery_db": "List of Breweries",
    "search_for_open_brewery_db": "Search for a brewery",
    "instagram_user_for_user": "Here you can find the default value of an Instagram users details and test your API successfully.",
    "gender_from_name_for_person_app": "Given someones name infer their gender",
    "getpopulationbycountrycode_for_world_population": "Get the population's data of a country by its country code (ISO 3166-1 alpha-3 format). More information at https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3.",
    "getcountriesbycontinent_for_world_population": "Obtain countries' data according to the continent.",
    "get_cigar_average_ring_gauge_for_cigars": "Get the average ring gauge of cigars, filter supported",
    "get_laws_for_one_state_for_us_gun_laws": "This endpoint provides links to gun law documentation for any particular state.",
    "get_laws_for_all_states_for_us_gun_laws": "This endpoint will provide links to gun law documentation for all 50 states.",
    "retrieve_listing_events_for_openblur": "Retrieve Blur Listing Events",
    "retrieve_bids_for_openblur": "Retrieve All Blur Bids",
    "retrieve_listings_for_openblur": "Retrieve Top 100 Blur Listings",
    "simple_radiation_forecast_for_solcast": "The simple radiation request returns detailed solar radiation data for the next week based only on your latitude and longitude.",
    "simple_pv_power_forecast_for_solcast": "The simple PV power request returns a first-guess PV power output forecast, based on your specified latitude and longitude plus some basic PV system characteristics.",
    "get_company_jobs_count_for_fresh_linkedin_profile_data": "Get number of opening jobs the company posted on LinkedIn. **1 credit per call.**",
    "get_supported_countries_for_fresh_linkedin_profile_data": "Get supported countries. Use the country codes in your \"Search employees\" endpoint.",
    "get_supported_industries_for_fresh_linkedin_profile_data": "Get supported industries. Use the industry_id in your \"Search employees\" endpoint.",
    "get_call_for_ip_and_location_spoofing_detection": "Used to fetch api result using the request id received in responses.",
    "gs1code128_for_gs1_code128_generator": "it gets data, company_prefix, lot and quantity and it generates a barcode. company_prefix and data is required.",
    "paragraph_for_lorem_ipsum_api": "create lorem ipsum by defining the number of paragraph",
    "word_for_lorem_ipsum_api": "Create lorem ipsum by defining the number of words",
    "sentence_for_lorem_ipsum_api": "Create lorem ipsum by defining the number of sentences",
    "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data": "Given a company\u2019s LinkedIn URL, the API will return valuable data points in JSON format.",
    "v1_dogs_for_dogs_by_api_ninjas": "Get a list of dog breeds matching specified parameters. Returns at most 20 results. To access more than 20 results, use the offset parameter to offset results in multiple API calls.",
    "trending_with_pagination_for_top_nft_collections": "Trending with pagination provided by OpenSea",
    "get_top_nft_collections_for_top_nft_collections": "Get the NFT collections ordered by volume or sales.",
    "top_ranking_testnets_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings",
    "countries_for_geodb_cities": "Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries.",
    "country_region_divisions_for_geodb_cities": "Get the administrative divisions in the given region.",
    "country_region_cities_for_geodb_cities": "Get the cities in the given region.",
    "gera_comprovante_simples_for_consulta_cnpj_tempo_real": "Gera Comprovante em PDF do Simples Nacional",
    "consulta_cadastro_de_contribuintes_for_consulta_cnpj_tempo_real": "Consulta as Inscri\u00e7\u00f5es Estaduais no Cadastro Centralizado de Contribuintes",
    "consulta_empresa_for_consulta_cnpj_tempo_real": "Consulta Empresa",
    "get_country_population_for_get_population": "Get country population.",
    "get_population_for_get_population": "Get world population.",
    "popular_quotes_by_pagination_for_10000_anime_quotes_with_pagination_support": "Get anime quotes popular among fans:\nRequired GET parameter\n**page**:  1\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
    "search_quote_based_on_quote_id_for_10000_anime_quotes_with_pagination_support": "Get full quote info based on quote_id.\n\nRequired GET parameter\n**quote_id**:  3702\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
    "recent_quotes_by_pagination_for_10000_anime_quotes_with_pagination_support": "Get recent anime quotes without any categorization:\nRequired GET parameter\n**page**:  1\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
    "search_quote_by_character_name_for_10000_anime_quotes_with_pagination_support": "Get anime quotes based on character search:\nRequired GET parameter\n**page**:  1\n**search**: Lelouch\n\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above **search** means it will try to fetch all quotes spoken by that character\n**Note:**  Search param should contain atleast 3 characters.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
    "quote_of_the_day_for_10000_anime_quotes_with_pagination_support": "Get quote of the day.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
    "outcomes_for_a_specific_crime_for_data_police_uk": "Returns the outcomes (case history) for the specified crime. Crime ID is 64-character identifier, as returned by other API methods.",
    "crimes_at_location_for_data_police_uk": "Returns just the crimes which occurred at the specified location, rather than those within a radius. If given latitude and longitude, finds the nearest pre-defined location and returns the crimes which occurred there.",
    "search_country_by_name_for_location_and_time": "Get details of the country specified by name, fuzzy search is supported. Up to 10 records for countries with similar name may be returned. Information includes country name, capital, area, population, languages, neighbors, phone code, postal code, and more.",
    "get_time_at_other_city_for_location_and_time": "Find out time at `to_city` given `from_time` and `from_city`. Daylight saving time are taken care of.  **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/timeat/bylocation` endpoint instead.",
    "get_date_and_time_by_location_for_location_and_time": "Get date and time for specified location.",
    "getevconnectors_for_electric_vehicle_charging_stations": "Return only electric charging connector types that can be used to filter GetByCordsAdv.",
    "getbycords_for_electric_vehicle_charging_stations": "Uses Latitude & Longitude to get near by electric charging stations",
    "getowners_for_electric_vehicle_charging_stations": "Return stations owned by the given types of owners. A single owner type, or a comma-separated list of multiple owner types, may be given.",
    "generate_a_random_word_for_random_word_generator": "Scour through thousands of words from the RandomWordGenerator.com database",
    "generate_a_random_sentence_for_random_word_generator": "Generate a random sentence",
    "get_channel_links_for_kick_com_api_kick_api": "Get Channel Links",
    "get_channel_polls_for_kick_com_api_kick_api": "Get Channel Polls",
    "get_chat_messages_for_kick_com_api_kick_api": "Returns chat messages from livestream ID.",
    "quote_of_the_day_for_quotes_v2": "Returns Quote of the Day",
    "search_by_location_for_ev_charge_finder": "Search for EV charging stations near a specific location specified as a free-form location query (e.g. *San Francisco, CA, USA*).",
    "search_by_coordinates_point_for_ev_charge_finder": "Search for EV charging stations near specific geographic coordinates point.",
    "home_for_amazon_products_api": "Home Route to show usage message",
    "run_for_vinhub": "Run Checked Report",
    "similar_apps_by_id_for_app_store": "Get a list of apps similar to the provided app",
    "top_free_ipad_apps_for_app_store": "Get list of the top free Ipad apps",
    "applications_by_developer_for_app_store": "Get a list of apps published by a chosen developer",
    "product_api_for_diffbot": "The Product API retrieves full product data from any e-commerce shopping page.",
    "frontpage_for_diffbot": "The Frontpage API takes in a multifaceted \u201chomepage\u201d and returns individual page elements.",
    "article_api_for_diffbot": "The Article API is used to extract clean article text from news articles, blog posts, and other text-heavy web pages.",
    "google_maps_data_id_for_google_search_2": "Using this API you can get the JSON results of the data ID of a particular place.",
    "google_news_for_google_search_2": "Using this API you can get the JSON data of the news results.",
    "organic_results_for_google_search_2": "Using this API you can get the JSON data of the organic search results.",
    "get_an_alert_for_fluximmo": " ",
    "get_alerts_list_or_create_for_fluximmo": " ",
    "get_dream_number_for_4d_dream_dictionary": "Return relevant 4/3 digits lucky draw number based on your dream keyword in english or chinese.",
    "retrieve_orders_created_for_openblur": "Retrieve the order history for both blur and seaport orders on Blur marketplace",
    "hotspot_for_indonesia_hotspot_and_fire_location_data": "Indonesian Realtime Hotspot",
    "consulta_estabelecimento_for_consulta_cnpj_tempo_real": "Consulta CNPJ unificada a Receita Federal, Simples Nacional e Cadastro de Contribuintes",
    "business_search_for_yelp_reviews": "Search for Yelp businesses by query / keyword and location.",
    "business_reviews_for_yelp_reviews": "Fetch a single or multiple business review pages from Yelp (each page includes up to 10 reviews).",
    "ministerio_espec_fico_for_dataestado": "Obtiene el listado de un s\u00f3lo ministerio",
    "listar_todos_for_dataestado": "Obtener listado de todos los ministerios y subsecretar\u00edas.",
    "getbooks_for_holy_bible": "Get List Of All Books.",
    "random_quote_for_semantic_quotes": "Get random quotes by length and/or tags.  **NOTE:** up to 10 results can be returned, they may have similar meanings. If you want want absolute random, just pick the first result (or set `limit` to 1) and call this API again to get another quote.",
    "search_quotes_for_semantic_quotes": "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity.",
    "province_for_provinces_of_thailand": "\u0e08\u0e31\u0e07\u0e2b\u0e27\u0e31\u0e14",
    "subdistrict_for_provinces_of_thailand": "\u0e15\u0e33\u0e1a\u0e25 : subdistricts",
    "district_for_provinces_of_thailand": "\u0e2d\u0e33\u0e40\u0e20\u0e2d : districts",
    "getbook_for_book": "get",
    "get_all_food_typen_for_food_price_inflation": "Get all the food typen from our Data.",
    "getnetworks_for_electric_vehicle_charging_stations": "Return only electric charging stations that belong to the given network. A single network, or a comma separated list of multiple networks, may be given.",
    "getmentions_for_track_the_mentions_and_conversations_about_your_business": "Find your brand, competitor, or any other query mentions across the web",
    "daily_open_proxies_for_open_proxies": "Get a list of 200-400 open proxies, updated once per day around 00:00 UTC.  Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Hourly** or **Open Proxies** endpoints.",
    "hourly_open_proxies_for_open_proxies": "Get a list of 200-400 working open proxies, updated every hour. Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Open Proxies** endpoint.",
    "open_proxies_for_open_proxies": "Get a list of 200-400 working open proxies, updated every 15 minutes. Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, consider a [paid proxy service](https://proxymesh.com/).",
    "get_collection_info_for_kvstore": "Get information about the Collection",
    "get_items_for_kvstore": "Get <key,value> pairs ordered by DESC creation time",
    "calculation_captcha_for_captcha_v2": "- Provide info captcha for website to prevent auto request.",
    "geterrors_for_captcha_v2": "This endpoint is used to get a list of available error codes",
    "string_captcha_for_captcha_v2": "captcha code is string format.\n\n- params: length is number (from 1 to 8, default is 6)",
    "get_by_id_for_flowers": "Get all info about the flower",
    "list_for_flowers": "List all flowers",
    "show_image_for_flowers": "Show image of the flower",
    "tweet_user_retweets_for_twitter": "This endpoint returns a list of user who retweeted the tweet",
    "user_details_for_twitter": "This endpoint returns the public information about a Twitter profile",
    "tweet_replies_for_twitter": "This endpoint returns a list of reply tweets",
    "country_details_for_geodb_cities": "Get the details for a specific country, including number of regions.",
    "country_region_details_for_geodb_cities": "Get the details of a specific country region, including number of cities.",
    "get_company_jobs_count_for_fresh_linkedin_company_data": "Get number of opening jobs the company posted on LinkedIn. 1 request = 1 credit.",
    "keyword_research_for_keyword_research_for_youtube": "Get exact and related keywords information including monthly search , SEO difficulty and competition score",
    "get_state_data_for_a_single_state_for_us_counties": "state",
    "get_basic_data_for_all_counties_in_a_single_state_for_us_counties": "counties",
    "personator_endpoint_for_personator": "Access to Personator Web Service",
    "scrape_contacts_from_website_for_website_contacts_scraper": "Extract emails, phone numbers and social profiles from website root domain domain.",
    "getall_for_house_plants": "Returns all plant data within an array. Information for each plant returned contains (but not limited to) the list below\n\n- Latin name \n- Img \n- Id\n- Family \n- Other names \n- Common name \n- Common name (fr.) \n- Description \n- Categories \n- Origin \n- Climat \n- Temperature max\n- Temperature min\n- Zone \n- Growth \n- Light ideal \n- Light tolered \n- Watering \n- Insects \n- Disease \n- Appeal \n- Color of leaf \n- Color of blooms \n- Blooming season \n- Perfume \n- Avaibility \n- Pot diameter\n- Height at purchase\n- Width at purchase\n- Height potential\n- Width potential\n- Available sizes\n- Bearing \n- Clump\n- Pruning \n- Style \n- Use",
    "ns_lookup_for_whois_lookup_v3": "This endpoint returns IP from a domain. (NameServer)\n\nParameters\n-> search - The domain to search",
    "dns_lookup_for_whois_lookup_v3": "This endpoint pulls DNS data from a domain\n\nParameters:\n> domain - The domain to search\n> rtype - The type of record to pull. Records availables: A, PTR, MX, CNAME, TXT,NS.",
    "check_similarity_for_whois_lookup_v3": "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2",
    "vin_decoder_for_vin_decoder_api_europe": "Provide any VIN number for any vehicle manufactured in Europe. \n\nReceive the Car model, maker, year, engine and other relevant information.",
    "get_time_diff_by_city_for_location_and_time": "Find out time difference from `from_time` to `to_time` for specified cities. Daylight saving time are taken care of.  **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/timediff/bylocation` endpoint instead.",
    "search_city_by_name_for_location_and_time": "Get details of the city specified by name, fuzzy search is supported. Up to 10 records for cities with similar name may be returned. Information includes city name, alternative names, geolocation (latitude/longitude), population, timezone, map url, and more.",
    "get_supported_timezones_for_location_and_time": "Get all supported timezones.",
    "scrape_open_graph_details_for_og_link_preview": "Scrape website with Open Graph protocol to get metadata from a website such as a title, description, images, favicon and raw data",
    "channel_s_videos_streams_shorts_ids_w_pagination_for_fastytapi": "Returns the list of videos/streams(a.k.a. lives)/shorts ids with some basic information for each.\n\nPagination is possible, which allows to retrieve all videos/streams/shorts of a channel with several subsequent requests. For this, provide the `pagination` received in the previous request to this endpoint.\n\nResults are returned ordered by upload date, from latest to oldest.",
    "channel_for_fastytapi": "Returns channel-related information.",
    "search_channel_for_fastytapi": "Returns list of channel when searching YouTube for the provided query.",
    "get_quota_usage_for_address_monitor": "Get quota usage",
    "get_service_status_for_address_monitor": "Get service status",
    "full_chapter_api_for_complete_study_bible": "Returns a specified chapter of a book in the Bible.\nBook parameter will accept a full book name, or 3 letter book abbreviation (example: '1Co' = 1 Corinthians). For a full list of books, abbreviations, and chapter counts, send a request to the \"Books\" api.\n\nTranslation options inlcude: \"KJV\", \"KJV-Strongs\", \"ORIG\", and \"LXX\".\nORIG will return Hebrew with Strong's Numbers if book is in the Old Testament, Greek with Strong's Numbers if New Testament.\nLXX is Old Testament only, and returns the Apostolic Polyglot Bible - which is an English translation of the Greek Septuagint with underlying Strong's numbers.\nTranslations with Strong's numbers will return each verse as a JSON array of objects like so:\n [{\"phrase\": \"In the beginning\", \"data_nums\": [\"G746\"]}\nSome phrases are translated from multiple Strong's numbers in tandem, so the data_nums property is an array. You can display the Strong's numbers however you'd like, or hide them from view. You can get data on each Strong's number upon click by calling the \"Strong's Detail API\".\n\n\"Places\" represents an array of objects for each verse containing any known locations mentioned in the verse. Places provide lat / long information and can be displayed on a map using any mapping packages such as LeafletJS, MapboxGL, Google, etc. Detailed info on each place can be obtained by calling the ID number in the \"Place Detail API\". NOTE: some places have numbers in them... i.e. \"Bethany 2\". When this occurs, it is used for distinction and indicates that there is more than one place of the same name referenced in the Bible",
    "search_exact_phrase_api_for_complete_study_bible": "Searches the KJV for the exact phrase supplied",
    "passage_of_the_day_api_for_complete_study_bible": "Responds with a passage of the day, KJV translation. Can be a single verse or multiple verses. Passages are pre-selected by the API owner and updated every 24 hours.",
    "getrandomdate_for_random_chunk_api": "Get random date.",
    "getrandompassword_for_random_chunk_api": "Get random password string.",
    "object_detection_for_real_time_lens_data": "Detect landmarks, places, plants, animals, products, and other objects in an image, including bounding boxes, labels / types and confidence score.",
    "image_to_text_ocr_for_real_time_lens_data": "Extract text from an image and get paragraph, sentence and word level text detections from Google Lens.",
    "image_search_for_real_time_lens_data": "Search image by url and get visual matches, knowledge graph, products and prices, text and object detections. See it in on [Google Lens](https://lens.google.com/uploadbyurl?url=https%3A%2F%2Fi.imgur.com%2FHBrB8p0.png).",
    "getsponsorships_for_azure_smartable": "Get Azure sponsorships",
    "getpeoplebytopic_for_azure_smartable": "Get Azure influencers by topic.",
    "getfutureeventsbytopic_for_azure_smartable": "Get future Azure events by topic.",
    "get_all_controls_for_risk_management_framework": "Returns a complete list of all Risk Management Framework (RMF) controls.",
    "get_cci_by_number_for_risk_management_framework": "This endpoint will return a single CCI and it's definition based on the 6-digit CCI identification number.",
    "avaliablecountry_for_yt_data_api_v2": " ",
    "block_for_unicode_codepoints": "Information about a Unicode block",
    "property_for_unicode_codepoints": "Show one Property for All Codepoints",
    "transform_for_unicode_codepoints": "Transform a String, e.g. , to upper-case, NFC, NFD, \u2026",
    "get_todo_list_detail_infomation_for_todo_lsit": "get my todo list detail infomation,include title,content,due",
    "get_my_todo_list_for_todo_lsit": "get all my todo list title",
    "getstatsbyday_for_trinidad_covid_19_statistics": "This endpoint fetches Trinidad & Tobago Covid 19 statistics by  day. For a valid response, the months are input as \"01\" or \"12\" and not the actual month name such as \"January\" or \"December\". Th e days are entered in the similar format as months ie \"01\" -\"31\" and not actual days such as \"Thursday\" or \"Monday\",",
    "agent_details_for_realtor": "Get agent details by id",
    "search_properties_for_rent_for_realtor": "Search properties for rent by location",
    "search_agents_for_realtor": "Search agents by city/zip",
    "search_for_twitter": "This endpoint return search results",
    "tweet_user_favoriters_continuation_for_twitter": "This endpoint returns the next list of user who favorited the tweet",
    "user_s_following_for_twitter": "This endpoint returns the list of following",
    "v19_json_for_builtwith_domain": "Get technology usage for a domain",
    "severe_weather_alerts_for_weather": "Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported )",
    "cars_for_car_data_v2": "Retrieve and filter lists of cars",
    "game_list_for_lotto_draw_results_global": "Games available by country.",
    "region_list_for_lotto_draw_results_global": "List of regions available by country code and name.",
    "get_draw_result_for_lotto_draw_results_global": "Get draw result by given region, game and draw date.",
    "status_for_jobtitle": "",
    "autocomplete_for_web_search_autocomplete": "Get query suggestions from Google Search, including Knowledge Graph information when available.",
    "singular_object_v2_for_blackbox": "Note: This will work only with singular IP lookups.\n\nIf you are unkeen to lookup multiple IP addresses at the same time, and want a simpler request. This might be for you. \n\nWe will return a singular IP object, that will minimize your request complexity, but with the loss of flexibility.",
    "legacy_v1_for_blackbox": "This is a legacy and free IP checked. We provide a simply non-json style response to requests. Responses are cached for 7 days. \n\nCheck out our Documentation for more information.\n\nResponses will be (Y,E,N):\n\n(Y) : Yes, we have determined the IP address to be used by either or multiple of the following: Cloud, Hosting, Tor, Proxy. \n\n(E) : Error, something has gone wrong with the request.\n\n(N) : No, we have determined the IP address to be NOT used by any of the following: Cloud, Hosting, Tor, Proxy.",
    "multiple_array_v2_for_blackbox": "Using the GET method you can request an IP specific detections, and other IP information.\n\nCheck out our documentation for more info on our different detections.",
    "get_profile_details_for_matrimony_profiles": "Get Profile Details of Member for given member_id",
    "get_profiles_for_matrimony_profiles": "Get 200 profiles",
    "get_religions_for_matrimony_profiles": "Get All Religions",
    "get_listing_by_url_for_trulia_real_estate_scraper": "Returns homes from the listing. Just go to https://www.trulia.com/ select the listing you are interested in e.g. https://www.trulia.com/AZ/Scottsdale/ and pass that url into query.",
    "get_data_id_pelanggan_tagihan_pln_pasca_bayar_for_cek_id_pln_pasca_dan_pra_bayar": "GET Data Pelanggan Tagihan PLN / PLN PASCA BAYAR /Postpaid\n- masukan id PLN di form id",
    "get_data_id_pelanggan_token_pln_for_cek_id_pln_pasca_dan_pra_bayar": "GET Data Pelanggan Token PLN / PLN PRA BAYAR\n- masukan id PLN di form id",
    "search_quote_by_anime_name_for_10000_anime_quotes_with_pagination_support": "Get anime quotes based on anime search\n\nRequired GET parameter\n**page**:  1\n**search**:  Naruto\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above **search** means it will try to fetch all quotes related to that anime\n**Note:** Search param should contain atleast 3 characters\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
    "city_name_for_german_cities": "Gibt Informationen zu der angegebenen Stadt zur\u00fcck. Bei Mehrdeutigkeit werden maximal drei Ergebnisse zur\u00fcckgegeben. Zur\u00fcckgegebene Werte sind: Einwohnerzahl, Durchschnittsalter, umliegende Orte.",
    "send_transaction_in_url_v2_for_chain49": "Sends new transaction to backend\n\nIt is recommended to use POST for sending transactions as there is a limit on how much data can be sent in the URL itself.",
    "get_xpub_v2_for_chain49": "Returns balances and transactions of an xpub or output descriptor, applicable only for Bitcoin-type coins.\n\nBlockbook supports BIP44, BIP49, BIP84 and BIP86 (Taproot) derivation schemes, using either xpubs or output descriptors (see https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md)\n\nNote: usedTokens always returns total number of used addresses of xpub.\n\nDetailed documentation found here: https://github.com/trezor/blockbook/blob/master/docs/api.md#get-xpub",
    "get_balance_history_v2_for_chain49": "Returns a balance history for the specified XPUB or address\n\nThe value of sentToSelf is the amount sent from the same address to the same address or within addresses of xpub.",
    "global_address_for_global_address": "Validate, Standardize and Cleanse Addresses across the globe",
    "search_for_joj_web_search": "Web Search",
    "getlocationinfobyzipcode_for_zillow_base": "Get location information by zip code",
    "search_for_simple_youtube_search": "Make youtube search",
    "video_for_simple_youtube_search": "Get particular video",
    "playlist_for_simple_youtube_search": "YouTube playlist data",
    "get_watches_from_reference_number_for_watchsignals": "Get watches from reference number",
    "restaurant_for_restaurant": "list",
    "domain_analysis_for_domain_analysis": "For a given domain, get analysis ranging from domain length all the way to past sales and number of mentions.",
    "business_details_for_local_business_data": "Get full business details including emails and social contacts. Supports batching of up to 20 Business Ids.",
    "autocomplete_for_local_business_data": "Returns place/address, business and query predictions for text-based geographic queries.",
    "search_nearby_for_local_business_data": "Search businesses near by specific geographic coordinates. To see it in action, right click on a specific point in the map on Google Maps and select \"Search nearby\", enter a query and search.",
    "getrandommovie_for_random_chunk_api": "Returns random movies from over 1000 movie list.",
    "getrandomcolor_for_random_chunk_api": "Get a random quote.",
    "get_states_by_time_zone_for_us_states": "get",
    "search_states_by_capital_for_us_states": "Retrieve all fields for states/territories matching the provided capital.  Partial and full name searches are accepted.",
    "get_detailed_state_data_for_us_states": "Retrieve all fields for each states and territory.",
    "getrandom_for_randomizer": "Retrieve a random sequence of characters matching the provided query attributes",
    "retrieve_all_offers_for_opensea_v2": "Get all open offers for a collection\n\nThis endpoint is used to get all open offers for a given collection. It returns: all offers on individual NFTs, all collection offers, and all trait offers. The offers are sorted by ascending date (oldest listings first) -- at this time, we do not support any other sorting methods.\n\nThe response has two fields: offers and an optional next cursor in case the number of offers is greater than our default page size (100). This endpoint returns only a subset of the fields found in our orders endpoint. Here is the model for each offer:\n\norder_hash\nchain\ncriteria: specifies if the offer was for an individual NFT, a collection offer, or a trait offer\nprotocol_data",
    "retrieve_active_loans_offers_for_opensea_v2": "This endpoint is used to retrieve the active loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "texts_for_seeding_data": "Get 100 texts with it_IT locale and 250 characters length",
    "custom_for_seeding_data": "Get 100 rows with first name, last name, country, birthday, email and vat",
    "get_states_by_census_region_for_us_states": "Retrieve all fields for states matching the provided Census Region(s).  Multiple census regions can be provided separated by commas.",
    "get_states_by_census_division_for_us_states": "Retrieve all fields for states matching the provided Census Division(s).  Multiple census divisions can be provided separated by commas.",
    "get_subtitle_in_json_format_for_subtitles_for_youtube_v2": "Get subtitle as a JSON object",
    "search_for_serp_by_outscraper": "Returns search results based on a given search query (or many queries). This endpoint is optimized for fast responses and can be used as a real-time API.\n\n[API Docs](https://app.outscraper.com/api-docs)",
    "filter_for_unicode_codepoints": "Filter a String, e.g. , by Unicode version or only uppercase letters",
    "codepoint_for_unicode_codepoints": "show detailed information about a single codepoint. You can specify fields of interest with the \u201cproperty\u201d parameter: codepoint/1234?property=age,uc,lc",
    "getmsgs_for_messages": "GetMsg",
    "get_random_word_for_dicolink": "Get random word",
    "get_definitions_for_dicolink": "Get definition of a word",
    "get_expressions_for_dicolink": "Get Expression with a specific word",
    "post_search_for_socialgrep": "Searches Reddit posts.",
    "comment_search_for_socialgrep": "Searches Reddit comments.",
    "estimate_ownership_cost_for_car_utils": "Estimate how much you will spend on the car with specified VIN for the next 5 years.",
    "playlistitems_for_youtube_v3_v3": "Returns a collection of playlist items that match the API request parameters. You can retrieve all of the playlist items in a specified playlist or retrieve one or more playlist items by their unique IDs.",
    "channels_for_youtube_v3_v3": "Returns a collection of zero or more `channel` resources that match the request criteria.",
    "i18nlanguages_for_youtube_v3_v3": "Returns a list of application languages that the YouTube website supports.",
    "rental_settings_for_airdna": "Returns rental settings.",
    "post_comments_for_100_success_instagram_api_scalable_robust": "Get post comments list",
    "hashtag_feed_for_100_success_instagram_api_scalable_robust": "Get hashtag feed",
    "get_subdivisions_by_abbreviation_for_us_states": "Retrieve all state subdivisions for the provided state abbreviation.",
    "search_states_by_name_for_us_states": "Retrieve all fields for states/territories matching the provided Name.  Name field is searched.  Partial and full name searches are accepted.",
    "search_cars_for_adzuna": "Search Adzuna cars.",
    "search_jobs_for_adzuna": "Search the Adzuna jobs",
    "search_for_properties_by_coordinates_for_zillow_v2": "Search for filtered properties by coordinates.\nYou can select the output format (JSON , CSV , XLSX) using the optional \"output\" parameter.",
    "agent_s_rental_listings_for_zillow_v2": "Get agent's rental listings by zuid",
    "list_of_properties_by_url_for_zillow_v2": "Get a list of properties by providing the zillow search results URL\nYou can select the output format (JSON , CSV , XLSX) using the optional \"output\" parameter.",
    "data_for_indonesian_national_identity_card_validator": "Check validation and get details of indonesian national identity card such as day, month, year, gender and location",
    "get_token_forwarding_transactions_for_token_forwarding": "Get token forwarding transactions",
    "get_gas_fee_funding_wallets_for_token_forwarding": "Get gas fee funding wallets",
    "get_usage_quota_for_the_current_month_for_token_forwarding": "Get usage quota for the current month",
    "top_coins_by_market_cap_for__all_in_one_crypto_swiss_knife_": "Get top coins by mCap",
    "top_holders_for__all_in_one_crypto_swiss_knife_": "Get top holders in each protocol",
    "pools_for__all_in_one_crypto_swiss_knife_": "Get DeFi pools\nYou can get id from /protocols endpoint.",
    "get_chapter_for_bible_memory_verse_flashcard": "Takes parameters and returns one chapter for chosen bookname",
    "get_verses_for_bible_memory_verse_flashcard": "Takes parameters and returns requested verses",
    "search_term_count_occurrences_of_terms_found_in_text_for_bible_memory_verse_flashcard": "Return number of term criteria occurrences in chosen book(s)\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **",
    "get_playlist_details_for_youtube_media_downloader": "This endpoint fetches details of a YouTube playlist (user created playlist, album or radio playlist).",
    "get_video_details_for_youtube_media_downloader": "This endpoint fetches full details of a YouTube video, including URLs of videos, audios, thumbnails and subtitles as well as related videos and playlists.",
    "list_video_comments_for_youtube_media_downloader": "This endpoint lists comments of a YouTube video. Pagination scraping is supported.",
    "languages_for_geodb_cities": "Get all supported languages",
    "place_time_for_geodb_cities": "Get this place's current time in ISO-8601 format: HHmmss.SSSZ",
    "place_details_for_geodb_cities": "Get the details for a specific place, including location coordinates, population, and elevation above sea-level (if available).",
    "search_patent_for_global_patent": "search with keyword and return list of patents",
    "recommended_channels_for_fastytapi": "Returns a list of recommended channels for the provided channel.\n\nNote: this endpoint requires some heavier computations, response time might take ~5 seconds.",
    "video_recommendations_w_pagination_for_fastytapi": "Return video recommendations given a videoId.",
    "endpoint_for_iframely": "main endpoint to get extract json",
    "getalphabets_for_baseconverterapi": "This endpoint is used for getting all the alphabets",
    "user_s_details_for_tiktok_api": "Return User Details",
    "retreive_portfolio_for_blur": "This endpoint is used to retrieve portfolio details for a single wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "get_data_and_story_for_snapchat_story": "Get Data and Story by username",
    "reviewer_profile_for_rainforest": "When making a request with the type parameter set to type=reviewer_profile Rainforest API will return details of reviewer specified in either the reviewer_id and amazon_domain parameters or the url parameter.\n\nReviewer profile details are retrieved from the reviewer profile page. You can retrieve the reviewer_id value for a given reviewer from other Rainforest requests, such as type=reviews requests.",
    "bestsellers_for_rainforest": "The Bestsellers Parameters are applicable when making a request with type=bestsellers to retrieve Bestseller results from an Amazon bestsellers page - the bestsellers page is specified either using the category_id and amazon_domain parameters (where category_id is a Category ID returned from the Categories API, or by using the url parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nNote that, if using the url parameter it should be url-encoded.\n\nBestsellers results are retrieved from the bestsellers listing page on Amazon. Rainforest supports all types of Amazon Bestseller pages, bestsellers, new releases, movers & shakers, most wished for and gift ideas.",
    "autcomplete_for_rainforest": "When making a request with the type parameter set to type=autocomplete Rainforest API will return autocomplete suggestions for the search term specified in the search_term parameter, on the Amazon domain specified in the amazon_domain parameter.\nYou may scope your autocomplete request to an Amazon autocomplete alias (synonymous with a product area or top-level category) by specifying the alias using the autocomplete_alias parameter. The available autocomplete_alias values vary depending on the amazon_domain used. You can find a full list of all autocomplete aliaes, per Amazon-domain, in the autocomplete aliases reference.",
    "get_all_states_data_for_us_counties": "states",
    "user_search_for_100_success_instagram_api_scalable_robust": "Get user search results of keyword",
    "hashtag_info_for_100_success_instagram_api_scalable_robust": "Get results of hashtag search by keyword",
    "get_vehicule_info2_for_api_plaque_immatriculation_siv": "* R\u00e9cup\u00e9rer les informations des v\u00e9hicules simplement avec notre API PLAQUE IMMATRICULATION rapide flexible .\n\nLes donn\u00e9es sont demand\u00e9es \u00e0 notre api plaque immatriculation en temps r\u00e9el \u00e0 partir de sources de donn\u00e9es officielles du gouvernement, de sorte que les informations que vous voyez soient en temps r\u00e9el et non mises en cache, ou stock\u00e9es.",
    "get_vehicule_info_for_api_plaque_immatriculation_siv": "* R\u00e9cup\u00e9rer les informations des v\u00e9hicules simplement avec notre API PLAQUE IMMATRICULATION rapide flexible .\n\nLes donn\u00e9es sont demand\u00e9es \u00e0 notre api plaque immatriculation en temps r\u00e9el \u00e0 partir de sources de donn\u00e9es officielles du gouvernement, de sorte que les informations que vous voyez soient en temps r\u00e9el et non mises en cache, ou stock\u00e9es.",
    "fetch_lowest_bins_for_lowest_bins_api": "This endpoint lets you fetch the lowest bins",
    "info_endpoint_for_lowest_bins_api": "Info about things",
    "get_word_by_length_and_start_for_random_word_api": "Returns a random word of specified length and that starts with specified string.\nFor example, 7 and \"fru\" will return any word that is 7 letters long and starts with \"fru\", such as \"fruiter\".",
    "get_word_by_start_and_contain_for_random_word_api": "Returns a random word that starts with a certain string and contains a certain string.\nFor example, if the start is \"fru\" and the substring is \"le\", you will get a word that starts with \"fru\" and contains \"le\", such as \"frustules\".",
    "get_word_for_random_word_api": "Returns a random word. No parameters. Just randomness.",
    "time_series_for_commodity_rates_api": "With this endpoint, you will be provided with daily historical rates between two dates of your choice. \n\nNote: This endpoint has a limitation of 365 days per range, and only can provide one symbol information per request.\n\nAll the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD",
    "open_high_low_close_ohlc_price_for_commodity_rates_api": "Allows you to query the API to get the open, high, low, and close price.\nThis endpoint has a limitation of one symbol per request.",
    "historical_rates_for_commodity_rates_api": "Historical rates are available for most symbols all the way back to the year 2021. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.\n\nNote: All the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD",
    "getbysearch_for_house_plants": "Searches through all plants and returns the closest results matching \"Latin name\", \"Family\", \"Other names\", \"Common name\", \"Common name (fr.)\", \"Description\", \"Categories\", \"Origin\" in order by highest most likely. This route is case insensitive and uses fuzzy search",
    "url_metrics_for_domain_da_pa_check": "- Title\n- Domain Authority Score\n- Page Authority Score\n- Equity\n- Links\n- Moz Rank",
    "get_company_ads_count_for_fresh_linkedin_profile_data": "Get number of ads the company posted on LinkedIn. **1 credit per call.**",
    "get_company_by_domain_for_fresh_linkedin_profile_data": "Find a company on LinkedIn using its web domain. **1 credit per call.**",
    "search_jobs_for_fresh_linkedin_profile_data": "Search jobs posted on LinkedIn. This endpoint is useful for scraping job openings of a specific company on LinkedIn. \n\nTo scrape all results from each search, change the param *start* from 0 to 25, 50, ... until you see less than 25 results returned.\n\n**2 credits per call.**",
    "get_states_by_abbreviation_for_us_states": "Retrieve all fields for states/territories matching the provided abbreviation(s).  Multiple abbreviations can be provided separated by commas.",
    "blogs_by_category_for_blogsapi": "Get all blogs from a particular category by its ID.",
    "latest_posts_for_blogsapi": "Get all blogs ordered by latest first.",
    "single_blog_for_blogsapi": "Single blog post details by its ID.",
    "3_for_thai_lotto_new_api": "\u101a\u1001\u102f \u1014\u1031\u101b\u102c\u1000\u1014\u1031\u1010\u1005\u103a\u1006\u1004\u103a\u1037 \u101a\u1001\u1004\u103a\u1011\u103d\u1000\u103a\u101b\u103e\u102d\u1001\u1032\u1037\u1010\u1032\u1037 3D \u1002\u100f\u1014\u103a\u1038\u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1000\u103c\u100a\u103a\u1037\u101b\u103e\u102f\u1014\u102d\u102f\u1004\u103a\u1019\u103e\u102c\u1015\u1032\u1016\u103c\u1005\u103a\u1015\u102b\u1010\u101a\u103a\u104b",
    "2d_for_thai_lotto_new_api": "\u1010\u1005\u103a\u1014\u103e\u1005\u103a\u1010\u102c\u1021\u1010\u103d\u1000\u103a \u1011\u102d\u102f\u1004\u103a\u1038\u1021\u1005\u102d\u102f\u1038\u101b \u1011\u102e\u1015\u102d\u1010\u103a\u1019\u100a\u103a\u1037\u101b\u1000\u103a\u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1000\u103c\u102d\u102f\u1010\u1004\u103a\u101e\u102d\u101b\u103e\u102d\u1014\u102d\u102f\u1004\u103a\u1019\u101a\u103a\u1037 Endpoint \u1015\u1032\u1016\u103c\u1005\u103a\u1015\u102b\u1010\u101a\u103a\u104b",
    "modern_internet_for_thai_lotto_new_api": "\u101a\u1001\u102f Endpoint \u1019\u103e\u102c\u1010\u1031\u102c\u1037 \u1014\u1036\u1014\u1000\u103a \u1049\u1001\u103d\u1032 \u1014\u103e\u1004\u103a\u1037 \u1014\u1031\u1037\u101c\u100a\u103a \u1042\u1014\u102c\u101b\u102e \u1019\u1031\u102c\u103a\u1012\u1014\u103a\u104a \u1021\u1004\u103a\u1010\u102c\u1014\u1000\u103a \u1011\u103d\u1000\u103a\u1002\u100f\u1014\u103a\u1038 \u1014\u103e\u1004\u103a\u1037 12:01 \u1019\u102d\u1014\u1005\u103a\u104a \u100a\u1014\u1031 4:30 \u1011\u103d\u1000\u103a\u1019\u101a\u103a\u1037 \u1002\u100f\u1014\u103a\u1038\u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1010\u102d\u102f\u1000\u103a\u101b\u102d\u102f\u1000\u103a\u1015\u103c\u101e\u1016\u102d\u102f\u1037\u1021\u1010\u103d\u1000\u103a\u1015\u1032\u1016\u103c\u1005\u103a\u1015\u102b\u1010\u101a\u103a\u104b",
    "product_for_bigbox": "The Product Parameters are applicable when making a request with `type=product` to retrieve details of a single product on Home Depot - the product is specified using either the item_id parameter or the url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nProduct details are retrieved from the product page for a single product on Home Depot",
    "search_for_bigbox": "The Search Parameters are applicable when making a request with `type=search` to retrieve search results from Home Depot. The search term is specified in the search_term parameter. The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nSearch results are retrieved from the Search results page on Home Depot.",
    "category_for_bigbox": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results from Home Depot. The category is specified in the category_id parameter. The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nCategory results are retrieved from the Category results page on Home Depot.",
    "email_search_for_email_address_search": "Search email addresses by partial match",
    "get_vessel_photo_for_vessel_data": "Image of vessel based on given ship id.\n*Image might not be display correctly here due to base64 issue of Test Endpoint, but it work indeed.*",
    "get_all_vessels_for_vessel_data": "Return all available on board vessels.\nVisit our [demo site](https://core-api.net/vessel/map.html)",
    "get_vessel_info_for_vessel_data": "Individual on board vessel info based on given ship id.\nVisit our [demo site](https://core-api.net/vessel/map.html)",
    "states_for_referential_db": "Get the list of states within country",
    "random_profiles_for_fake_data_generator": "This endpoint generate a list of fake user profiles",
    "random_post_for_fake_data_generator": "This endpoint generate a list of fake posts",
    "random_custom_for_fake_data_generator": "This endpoint generate a list of fake  data ustomizing the layout setting the number and type.\n\nYou can define fake data layout with de 'layout' param.\n\nThe structure of this param:\n\n```\n{'fields': \t{\n\t\t\t\t'date': {'type': 'DATE_AND_HOUR'},\n\t\t\t\t'name': {'type': 'NAME_FULL_NAME'},\n\t\t\t\t'purchase': {\n\t\t\t\t\t\t\t\t'type': 'COMPOUND', \n\t\t\t\t\t\t\t\t'fields': {\n\t\t\t\t\t\t\t\t\t\t\t'company': {'type': 'COMPANY_NAME'},\n\t\t\t\t\t\t\t\t\t\t\t'amount': {'type': 'CURRENCY_PRICE'}\n\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t}\n\t\t\t}\n}\n```\n\nWith 'type': 'COMPOUND', you can add nodes, tha max depth is 3.\n\nIn regard to the diferents type of data, you can use this types:\n\n```\n'COUNTRY'\n'COUNTRY_CODE'\n'CITY'\n'STREET_ADDRESS'\n'BUILDING_NUMBER'\n'POSTAL_CODE'\n'COMPANY_NAME'\n'COMPANY_SUFFIX'\n'COMPANY_BUSINESS'\n'COMPANY_PHRASE'\n'CREDIT_CARD_EXPIRE'\n'CREDIT_CARD_NUMBER'\n'CREDIT_CARD_PROVIDER'\n'CREDIT_CARD_SECURITY_CODE'\n'CURRENCY_PRICE'\n'CURRENCY_CODE_NAME'\n'CURRENCY_CRYPTO_CODE_NAME'\n'NAME_PREFIX_NAME'\n'NAME_FIRST_NAME_MALE'\n'NAME_FIRST_NAME_FEMALE'\n'NAME_LASTNAME'\n'DATE'\n'DATE_AND_HOUR'\n'DATE_CENTURY'\n'DATE_THIS_DECADE'\n'DATE_THIS_MONTH'\n'INT'\n'PARAGRAPH'\n'PARAGRAPH_LOREMIPSUM'\n'SENTENCE'\n'SENTENCE_LOREMIPSUM'\n'BBAN'\n'IBAN'\n'SWIFT'\n'SWIFT11'\n'TEXT'\n'TEXT_LOREMIPSUM'\n'URL'\n'WORD'\n```",
    "profile_data_for_linkedin_profile_data": "Get LinkedIn profile data with username",
    "paginate_through_campany_employees_information_for_human_resources_api": "This endpoint lets you paginate through all the available records in the employees' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...",
    "get_a_specific_payment_card_by_card_number_for_human_resources_api": "This endpoint gets one record by a specific card number that is unique for each card in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...",
    "get_employee_information_associated_with_a_specific_payment_card_for_human_resources_api": "This endpoint gets employee record associated with a specific card number that is unique for each card, and displays  the employee information in the response.\nFor example:  employee ID , first name, and  etc...",
    "search_related_sites_for_advanced_serp_operators": "Helps you find sites related to a specified URL.",
    "find_non_secure_pages_for_advanced_serp_operators": "Find non-secure pages (non-https) of a given domain name",
    "get_related_search_terms_for_advanced_serp_operators": "Related searches in Google search",
    "check_text_for_ai_detection": "This endpoint allows you to easily submit text for analysis and determine if it was generated by a machine or a human. Just please **do not use any special characters** - it wont work :) . \nNote: **The results start to get reliable after around 50 tokens.**",
    "retrieving_bundles_for_opensea_data_query": "Bundles are groups of items for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the assets inside.",
    "retrieving_a_collection_for_opensea_data_query": "Used for retrieving more in-depth information about individual collections, including real time statistics like floor price.",
    "deprecated_retrieving_orders_for_opensea_data_query": "How to fetch orders from the OpenSea system.",
    "questions_for_bigbox": "The Questions Parameters are applicable when making a request with type=questions to retrieve customer Questions for a single product on Home Depot - the product is specified using either the item_id or url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nQuestions are retrieved from the customer questions page for a single product on Home Depot.",
    "reviews_for_bigbox": "The Reviews Parameters are applicable when making a request with `type=reviews` to retrieve customer Reviews for a single product on Home Depot - the product is specified using either the item_id or url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nReviews are retrieved from the customer reviews page for a single product on Home Depot.",
    "job_details_for_indeed": "Crawl information for Indeed's Job.",
    "jobs_search_for_indeed": "Search jobs with by query and location.",
    "company_search_for_indeed": "Search companies by name.",
    "getpoem_for_emotional_poem": "/app/api/getPoem\nmethod:only: [\"cos\", \"dot\", \"cross\", \"euler\"]\ntype:only: [\"max\", \"min\"]\ndelight:0.0-1.0\nanger:0.0-1.0\nsorrow:0.0-1.0\npleasure:0.0-1.0",
    "generate_cnpj_for_cnpj_validator": "Generates a valid CNPJ number.",
    "validate_cnpj_for_cnpj_validator": "Check if a CNPJ number is valid. Ignores the following characters: .-/",
    "get_ios_app_for_ios_store": "This endpoint is used to fetch specific app from app Id",
    "search_for_ios_store": "The endpoint is used to search iOS application",
    "get_similar_apps_for_ios_store": "This endpoint fetches the similar apps to a given app Id",
    "gettopics_for_azure_smartable": "Get Azure topics.",
    "getlearningresources_for_azure_smartable": "Get Azure learning resources",
    "get_a_country_by_alpha_2_numeric_code_for_world_countries": "get a  country by alpha-2 numeric codes ISO 3166-1 alpha-2 code are two-letter country codes defined in ISO 3166-1, \n\npart of the ISO 3166 standard published by the International Organization for Standardization (ISO),",
    "get_all_countries_for_world_countries": "get all countries",
    "get_app_reviews_for_ios_store": "This endpoint allows us to fetch app reviews given app Id",
    "issuspicious_for_openblur": "Records a history of isSuspicious / stolen NFTs change over time",
    "get_hot_topics_for_news_content_extraction_live": "Hot Topics ranking by Google.",
    "get_support_languages_for_news_content_extraction_live": "List of supported Languages.",
    "get_popular_news_urls_for_news_content_extraction_live": "List of popular news url links ranking by Google.",
    "trending_testnets_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings/trending",
    "trending_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings/trending",
    "new_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts",
    "get_lexical_field_for_dicolink": "Get Lexical Field for a word",
    "get_synonyms_for_dicolink": "Get synonyms of a specific word",
    "get_antonyms_for_dicolink": "Get antonyms of a specific word",
    "https_www_tiktok_com_88bur_for_frrefe": "https://www.tiktok.com/@88bur?",
    "end_for_frrefe": "end",
    "end_copy_for_frrefe": "end",
    "live_whois_lookup_for_live_whois_lookup": "Get Complete Whois Detail With Domain Name",
    "exchanges_for_tardis_dev": "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc.",
    "v1_cars_for_cars_by_api_ninjas": "API Ninjas Cars API endpoint.",
    "search_for_real_time_web_search": "Get real-time organic search results from across the web. Supports all Google Advanced Search operators such (e.g. inurl:, site:, intitle:, etc).",
    "products_get_offers_for_consumer_reports": "Get offers from places or sites to buy product",
    "product_groups_detail_for_consumer_reports": "Get detailed information of product group",
    "search_for_consumer_reports": "Search for brand, car, product, etc... by term or phrase",
    "top_ranking_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings",
    "get_castes_for_matrimony_profiles": "Get All Castes",
    "get_hello_world_for_fluximmo": " ",
    "get_webhook_sample_for_fluximmo": " ",
    "get_all_books_for_books": "Get All Books",
    "bin_iin_lookup_for_bin_iin_lookup": "This API for Lookup, check, or search Issuer card information using card BIN.\nInput first 6 digits number of the Credit/Debit Card",
    "list_of_properties_by_url_for_zillow": "Get a list of properties by providing the zillow search results URL",
    "property_details_for_zillow": "Property details",
    "business_photos_for_local_business_data": "Get all business photos.",
    "search_in_area_for_local_business_data": "Search businesses in a specific geographic area defined by a center coordinate point and zoom level. To see it in action, make a query on Google Maps, wait for the results to show, move the map or change the zoom and click \"Search this area\" at the top.",
    "analysis_for_email": "Analyse, validate and parse the content of a given Email Address",
    "decryptstring_for_encryption_api": "Decrypt encrypted-text (base64-format) using input secret-key according to selected crypt-algorithm and cipher-mode (optional with CBC as default value).",
    "search_calls_for_hubspot_apis": "Search for calls",
    "getallsolutions_for_pocket_cube_solver": "Returns json data consisting of all the solutions of a given cube position.",
    "getrandomsolution_for_pocket_cube_solver": "Returns json data consisting of a random optimal solution of a given cube position.",
    "get_crime_rates_by_zip_for_crime_data_by_zipcode_api": "Just with the ZIP code to analyze, you will be receiving a JSON object with an Overall Crime Scoring, and also a breakdown of different crimes that are assessed on the zone. \n\nGet information like:\n\n- \"Overall Crime Grade\".\n- \"Violent Crime Grade\".\n- \"Property Crime Grade\".\n- \"Other Crime Grade\".\n- \"Violent Crime Rates\".\n- \"Property Crime Rates\".\n- \"Other Crime Rates\".\n- \"Crime Rates Nearby\".\n- \"Similar Population Crime Rates\".",
    "get_random_anime_quote_for_10000_anime_quotes_with_pagination_support": "**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`",
    "get_company_data_by_linkedin_url_for_fresh_linkedin_profile_data": "Given a company\u2019s LinkedIn URL, the API will return valuable data points in JSON format. **1 credit per call.**",
    "check_search_status_for_fresh_linkedin_profile_data": "Get the status of your search using the request_id given in step 1.",
    "google_product_reviews_for_value_serp": "The Google Product Reviews Parameters are applicable when making a request with `search_type=product` and `product_type=reviews` to retrieve product reviews results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a location that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request.\n\n**Place Reviews Pagination**\nProduct Reviews results do not contain a traditional pagination section where a specific page of results is uniquely addressable. Instead, each `product_type=reviews` result will return a `next_page_token` in its' product_results.pagination object. This `next_page_token `can be passed in to the `next_page_token` request parameter to retrieve the next page of Product Reviews results.",
    "google_image_for_value_serp": "The Google Image Parameters are applicable when making a request with search_type=images to retrieve image results for a given search term. The search term is specified in the q parameter and the optional location parameter can be used to geo-locate the image request (locations can be retrieved via the Locations API).",
    "google_product_for_value_serp": "The Google Product Parameters are applicable when making a request with `search_type=product` to retrieve product results for a given product ID. The product ID is specified in the `product_id `parameter and you should also specify a `location` parameter to geo-locate the request (locations can be retrieved via the [Locations API](https://www.valueserp.com/docs/locations-api/overview)).\n\nGoogle Product IDs are returned by Google Shopping search requests.",
    "javascript_rendered_page_get_for_scraper_s_proxy": "Render html using a real browser. Useful for if content is loaded asynchronously or generated dynamically in the browser. JavaScript rendering is usually required to scrape websites that use React, Angular or Vue. For websites that do not need javascript rendering use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability.",
    "tor_get_for_scraper_s_proxy": "Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints.",
    "standard_get_for_scraper_s_proxy": "Basic proxy GET request",
    "get_metadata_for_us_states": "Get value lists for common fields.",
    "get_apps_from_dev_for_google_play_api": "Returns dev's apps.",
    "sorting_for_google_play_api": "Data about sorting.",
    "get_collections_for_google_play_api": "Get Collections",
    "youtube_videos_for__all_in_one_crypto_swiss_knife_": "Get videos.\nBy default returns videos with 'crypto' keyword but  you can search for any keyword",
    "net_worth_history_sparklines_for__all_in_one_crypto_swiss_knife_": "Get sparklines with address net worth for chart rendering.\nReturns array of objects with timestamp and USD value",
    "search_for_chapters_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns chapters  that contain term(s). Terms are not case sensitive.  Books, operators etc. are NOT CASE SENSITIVE.\n\n**   ONLY SEARCHES 2 BOOKS   (NO RANGE FUNCTION) **",
    "search_term_chapter_address_summary_for_bible_memory_verse_flashcard": "Returns a summary for chapter addresses that contain term criteria\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **",
    "timezonelist_for_gtrend": " ",
    "regionlist_for_gtrend": "List support region / Country",
    "geomap_for_gtrend": "Get geo map data from given query",
    "sources_for_jailbase": "All the organizations we collect information for",
    "search_for_jailbase": "Search for individuals by name",
    "recent_for_jailbase": "Get recent arrests",
    "ublacklist_txt_for_stopmodreposts_blocklist": "ublacklist.txt endpoint",
    "json_for_stopmodreposts_blocklist": "JavaScript Object Notation endpoint",
    "hosts_txt_for_stopmodreposts_blocklist": "Hosts file endpoint",
    "product_for_asin_data": "The Product Parameters are applicable when making a request with `type=product` to retrieve details of a single product on Amazon - the product is specified using either the asin and `amazon_domain` parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nProduct details are retrieved from the product page for a single product on Amazon.",
    "offers_for_asin_data": "The Offers Parameters are applicable when making a request with `type=offers` to retrieve seller Offers for a single product on Amazon - the product is specified using either the asin and `amazon_domain` parameters or the url parameter (where the url parameter contains a link to an Amazon product offers page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nOffers are retrieved from the offers listing popup window for a single product on Amazon.",
    "reviews_for_asin_data": "The Reviews Parameters are applicable when making a request with `type=reviews` to retrieve customer Reviews for a single product on Amazon - the product is specified using either the asin and `amazon_domain` parameters or the url parameter (where the url parameter contains a link to an Amazon reviews page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nReviews are retrieved from the customer reviews page for a single product on Amazon.",
    "currencies_for_geodb_cities": "Get currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.",
    "admin_divisions_near_division_for_geodb_cities": "Get divisions near the given administrative division, filtering by optional criteria.",
    "getinfo_for_indian_mobile_info": "getInfo",
    "newssearch_for_web_search": "Get news articles relevant for a given query.",
    "postcodes_for_postcodejp_api": "postcodes",
    "overview_for_airdna": "Returns overview stats (ADR, OCC ,Revenue ..) of a location rental data",
    "usable_time_zones_for_age_calculator": "Call this endpoint to view the current endpoint. Find the appreciate time zone for your location. \nExample: US/Eastern, US/Pacific, Europe/London ...",
    "age_calculator_for_age_calculator": "Calculates age based on the requested date. Accepts different formats and Time Zones.",
    "http_emiledaou99_pythonanywhere_com_url_for_qrmaster_api": "QRMaster API is a cutting-edge tool for developers and businesses that want to generate high-quality QR codes effortlessly. With QRMaster API, you can create custom QR codes with a variety of options, including size, color, and design.\n\nOur API is built on reliable and scalable technology, ensuring that you can generate thousands of QR codes per day without any performance issues. The API is easy to use, with straightforward documentation and code samples available in a variety of programming languages.\n\nWhether you're building a mobile app, developing a marketing campaign, or creating a new product, QRMaster API can help you create QR codes that meet your needs. With competitive pricing and flexible plans, QRMaster API is an excellent value for any business that wants to take advantage of the power of QR codes.",
    "get_countries_for_rest_countries": "returns all the currently available countries.  Every item includes the following parameters: \n- Short name\n- Short name lowcase\n- Full name\n- ISO alpha-2-code\n- ISO alpha-3-code\n- ISO numeric 3-digit code\n- Flag (from Twitter emojis)\n- Official flag \u2014only for those countries which have an unnoficial flag",
    "test_for_pmi_jateng": "PMI",
    "get_vessels_by_ship_name_for_vessel_data": "Return vessels by its name.\nVisit our [demo site](https://core-api.net/vessel/map.html)",
    "video_details_for_youtube_search": "Get all publicly available details about a Youtube Video",
    "channel_details_for_youtube_search": "This endpoint get all available details about a given channel ID",
    "channel_search_for_youtube_search": "This endpoint gets search results in a given Youtube channel using the channel ID",
    "find_zip_codes_by_city_for_polish_zip_codes": "Return all zip codes that belong to this city. If there is more then one city with that name, all zip codes are returned.",
    "find_zip_codes_by_city_and_district_for_polish_zip_codes": "Return all zip codes located in city's district",
    "find_zip_codes_by_city_and_street_for_polish_zip_codes": "Return all zip codes by street name in the city.",
    "get_french_word_for_random_word_api": "Same as random word, but grabs a random french word instead.",
    "get_word_by_start_for_random_word_api": "Returns a random word that starts with the specified string.\nFor example, \"fru\" will only return words that start with \"fru\", such as \"fruit\"",
    "persons_for_seeding_data": "Get 100 persons with en_US locale and gender female",
    "books_for_seeding_data": "Get 100 books with en_US locale",
    "users_for_seeding_data": "Get 100 users with en_US locale and gender male",
    "scrape_open_graph_for_open_graph_seo_scraper": "Extract open graph and social details from any website or URL",
    "property_to_rent_detail_for_uk_real_estate_rightmove": "Property to rent for detail",
    "commercial_property_to_rent_for_uk_real_estate_rightmove": "Commercial property to rent",
    "student_property_to_rent_for_uk_real_estate_rightmove": "Student property to rent",
    "get_books_for_bible_search": "Returns a list of the books in the Bible.",
    "get_book_by_name_for_bible_search": "Returns a book of the Bible.",
    "get_chapter_by_bookid_for_bible_search": "Returns a chapter of a book in the Bible.",
    "search_term_verse_address_summary_for_bible_memory_verse_flashcard": "Returns a summary for verse addresses that contain term criteria.\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **",
    "brands_detail_for_consumer_reports": "Get detailed information of a brand",
    "cars_detail_for_consumer_reports": "Get detailed information of car model by year",
    "domain_information_for_whois_lookup_v3": "This endpoint pulls the domain information, such as IP, expiration date and much more.\n\n\nParameters:\n-> search - The domain to search, don't add https or http. i.e: google.com",
    "retrieve_fees_for_blur": "This endpoint returns the various contract fees\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_active_loans_offers_for_blur": "This endpoint is used to retrieve the active loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_aggregated_loan_offers_for_blur": "This endpoint is used to retrieve the aggregated loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "search_filters_for_jsearch": "Accepts all **Search** endpoint parameters (except for `page` and `num_pages`) and returns the relevant filters and their estimated result counts for later use in search or for analytics.",
    "estimated_salary_for_jsearch": "Get estimated salaries for a jobs around a location",
    "job_details_for_jsearch": "Get all job details, including additional application options / links, employer reviews and estimated salaries for similar jobs.",
    "singleoffer_for_avito_scraper": "API  that get info for a single offer",
    "fastsearchfull_for_avito_scraper": "this is a beta test of fast API of Full info Search",
    "get_word_by_length_for_random_word_api": "Returns a random word that has the specified length. For example, 7 will return any word that is 7 letters long, such as \"swallow\".",
    "x2y2_get_for_x2y2": "x2y2 API endpoint (https://api.x2y2.io)\nMake over 1000 requests / minute\n\nSimply copy the path into the x2y2_path header.\n\n![](https://i.ibb.co/WKYfTDy/x2y2-path-get-header.png)",
    "related_videos_for_youtube_v3_alternative": "Get the videos related to the provided video.",
    "comments_for_youtube_v3_alternative": "Get Comments of the particular video",
    "singleoffer_for_lbc_shark": "get single offer by ID",
    "getmentions_for_reddit_track_the_mentions_and_conversations_about_your_business": "Track the mentions and conversations about your business",
    "user_information_for_opensea_v2": "Scrape all the HTML information from the NFT asset page without having to use chrome , scrape 10,000  NFTs images, & metadata in under 11min (*using top plan)",
    "retrieve_owners_for_opensea_v2": "This endpoint is used to obtain the entire list of owners for an NFT. Results will also include the quantity owned.",
    "comments_for_yt_api": "Get video's or shorts' comments/thread.\nQuota cost is 1 unit.",
    "search_for_yt_api": "Search videos, playlists, channels, or all of them.\nQuota cost is 1 unit.",
    "channel_livestreams_for_yt_api": "Get live stream listing and channel details.\nQuota cost is 1 unit.",
    "getlatestfeedversion_for_transitfeeds": "",
    "getfeedversions_for_transitfeeds": "Retrieve a list of feed versions. This list can be filtered by a number of input parameters",
    "get_chapter_by_bookname_for_bible_search": "Returns a chapter of a book in the Bible.",
    "random_verse_for_bible_search": "Returns a random verse of the bible.",
    "get_book_by_id_for_bible_search": "Returns a book of the Bible.",
    "get_token_forwarding_wallets_for_token_forwarding": "Get token forwarding wallets",
    "get_token_forwarding_transaction_webhook_for_token_forwarding": "Get token forwarding transaction webhook",
    "photos_for_zillow_data_v2": "Photos",
    "get_zip_code_by_state_for_zillow_data_v2": "Get zip code by state",
    "getbycategory_for_house_plants": "Get all item based on a category",
    "parse_minified_ogp_meta_data_for_link_preview": "Parse minified link preview",
    "parse_ogp_meta_data_for_link_preview": "Parse link preview",
    "querykeywords_for_keyword_analysis": "Get the **main keywords** for a given search query.",
    "similarqueries_for_keyword_analysis": "Get **similar queries** for a given search query.",
    "popularsitesforquery_for_keyword_analysis": "Get the **popular sites** for a given search query.",
    "story_user_for_instagram_downloader": "Download all story",
    "hid_for_instagram_downloader": "get all highlights by id",
    "sha_text_hash_for_hashing_api": "Hash text (as query-string-parameter) using SHA1, SHA256, SHA384 or SHA512 algorithm according to selected mode path-parameter [1, 256, 384, 512].",
    "md5_text_hash_for_hashing_api": "Hash text (as query-string-parameter) using MD5 algorithm.",
    "blake2b_text_hash_for_hashing_api": "Hash text (as query-string-parameter) using blake2b algorithm.",
    "search_text_for_bible_search": "Return all verses from the bible by text parameter.",
    "get_verse_by_bookname_for_bible_search": "Returns a verse of the Bible.",
    "explore_for_fastapi_project": "explore api",
    "interests_for_fastapi_project": "Gets interests",
    "option_flow_for_tradingflow_option_flow": "Option Flow",
    "autocomplete_for_open_brewery_db": "",
    "analysis_for_phone": "Analyse, validate and parse the content of a given Phone Number",
    "company_jobs_for_indeed": "Search jobs by company.",
    "coordinates_latitude_longitude_to_address_for_address_from_to_latitude_longitude": "By using this geographic tool you can get an address from lat long coordinates.",
    "top_holders_for_rich_nft_api_metadata": "Get top holders \n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op",
    "search_countries_by_sub_region_for_geography": "Search Countries by its Sub-Region",
    "get_sub_regions_for_geography": "Get list of sub regions of a region",
    "get_countries_for_geography": "Get brief details of all Countries",
    "search_for_sold_for_trulia_real_estate_scraper": "To download data from SALE, you must first generate a Token with Get search token and set search_type=Sold. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there.",
    "getpharmaciesusingget_for_italian_pharmacy": "getPharmaciesUsingGET",
    "whois_lookup_for_whois_lookup_v2": "Whois Lookup API returns data in JSON.",
    "get_subcategories_for_kick_com_api_kick_api": "Returns subcategories.",
    "comments_for_axesso_instagram_data_service": "Fetch comments for a given post. Therefore the shortcode needs to be passed which is returned in the \"node\" array from posts endpoint. If in the first response \"data.shortcode_media.edge_media_to_parent_comment.page_info.has_next_page\" equals true, then more comments exists and it can be fetched by passing \"data.shortcode_media.edge_media_to_parent_comment.page_info.end_cursor\" to the after param in the next request.",
    "accountinfo_for_axesso_instagram_data_service": "Fetch data for a give account. The response includes the field \"id which is required for further requests e.g. posts, comments and replies and needs to be passed to query param userId. This endpoint needs the sessionid to work.",
    "posts_for_axesso_instagram_data_service": "Get posts for a give user. This endpoints needs the userid which can be obtained from the account-info endpoint. For pagination the field data.user.edge_owner_to_timeline_media.page_info.end_cursor from the response needs to be passed to after param in the next request.",
    "v1_loremipsum_for_lorem_ipsum_by_api_ninjas": "API Ninjas Lorem Ipsum API endpoint. Returns one or more paragraphs of lorem ipsum placeholder text.",
    "get_data_by_research_a_specific_word_string_in_the_tag_s_text_for_scrapemaster": "Get data by \u201cresearch a specific word/string\u201d in the tag\u2019s text",
    "get_data_by_id_for_scrapemaster": "This endpoint will return all data from a specific tag and its id.",
    "get_data_by_tag_for_scrapemaster": "This endpoint will return all data from a specific tag.",
    "geocode_v1_json_for_opencage_geocoder": "geocode an address",
    "search_product_details_for_barcodes_lookup": "It returns product results if you enter a search term, and returns product details if you enter a barcode number.",
    "tweet_retweeters_for_twitter_data": "tweet-retweeters",
    "tweet_detail_for_twitter_data": "tweet-detail",
    "user_s_videos_for_tiktok_api": "Return User Videos",
    "video_details_for_tiktok_api": "Return Video Details",
    "vin_decode_for_vin_decoder_v4": "Vin Decode",
    "au_decode_for_vin_decoder_v4": "AU Decode",
    "nz_decode_for_vin_decoder_v4": "NZ Decode",
    "get_raw_block_data_v2_for_chain49": "Returns the raw hex-encoded block data for a given block hash or height",
    "search_countries_by_name_for_geography": "Search Countries by Name. Both official and common names are searched",
    "get_country_by_fifa_code_for_geography": "Get Country by FIFA assigned Country Code",
    "commercial_property_to_sale_for_uk_real_estate_rightmove": "Commercial property for sale",
    "auto_complete_for_uk_real_estate_rightmove": "Get auto complete suggestion by term or phrase",
    "commercial_property_to_rent_detail_for_uk_real_estate_rightmove": "Commercial property to rent for detail",
    "continuation_user_s_likes_for_twitter": "This endpoint returns the list of a user's Likes",
    "scrape_contact_details_from_a_website_for_contact_scraper": "this endpoint will scrape emails and phones from any website using it`s URL",
    "getzipcodebycounty_for_zillow_base": "Get zip code by county",
    "gettopics_for_power_bi_smartable": "Get Power BI topics.",
    "getlearningresources_for_power_bi_smartable": "Get Power BI learning resources.",
    "getsamples_for_power_bi_smartable": "Get Power BI samples",
    "get_states_by_fips_for_us_states": "Retrieve all fields for states matching the provided FIPS code(s).  Multiple FIPS codes can be provided separated by commas.",
    "get_basic_state_data_for_us_states": "Retrieve name, abbreviation, capital, and population for each state and territory.",
    "media_info_for_100_success_instagram_api_scalable_robust": "Get media info",
    "single_category_for_blogsapi": "Get single category details with its thumbnail and description.",
    "categories_for_blogsapi": "List all available categories from the BlogsAPI.",
    "search_for_blogsapi": "Search blogs by keyword.",
    "search_for_jsearch": "Search for jobs posted on job sites across the web.",
    "playlist_details_for_youtube": "Playlist Details",
    "playlist_videos_for_youtube": "Playlist Videos",
    "community_post_comments_for_youtube": "Community Post Comments",
    "cars_get_models_for_consumer_reports": "Get model generations",
    "cars_get_recalls_for_consumer_reports": "Get recalls relating to a car model year",
    "retrieve_user_collection_bids_for_opensea_v2": "This endpoint is used to retrieve the active collection bids to a user wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_airdrop_leaderboard_for_opensea_v2": "Retrieve the current airdrop leaderboard list\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_assets_for_opensea_v2": "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nAuctions created on OpenSea don't use an escrow contract, which enables gas-free auctions and allows users to retain ownership of their items while they're on sale. In these cases, some NFTs from opensea.io may not appear in the API until a transaction has been completed.",
    "lists_tweets_continuation_for_twitter": "This endpoint returns the next list of tweets in a given Twitter list",
    "user_s_followers_for_twitter": "This endpoint return a list of user's followers given a user ID",
    "get_trends_near_a_location_beta_for_twitter": "Returns the top 50 trending topics for a specific id (woeid), if trending information is available for it.",
    "checkdisposableemail_for_whois_lookup_v4": "REST API to lookup disposable email",
    "emailvalidation_for_whois_lookup_v4": "Clean your email list database with our free email checker and verifier",
    "newlyregistereddomains_for_whois_lookup_v4": "REST API to lookup newly registered domains",
    "get_server_time_for_yandex_video_api": "Gets server time.",
    "get_video_from_yandex_search_results_for_yandex_video_api": "Use advanced filtering to get specific video from yandex! Remember to set from which domain you want data. Default is yandex.com but  yandex.ru, .by, .kz, .uz are also available. Set page number in order to get more results. 0 is the first page, 1 is second and so on.",
    "details_for_file_extension": "Get data based on file extension. Currently only has one endpoint to get icon and full name of the file extension",
    "supported_symbols_for_commodity_rates_api": "Check all the available symbols for your queries. This endpoint retrieves all the supported commodities and currencies as well.",
    "top_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts",
    "companies_for_seeding_data": "Get 100 companies with en_US locale",
    "get_vessels_by_geo_position_for_vessel_data": "Return available vessels within 300 nautical miles radius of the given geo coordinate.\nVisit our [demo site](https://core-api.net/vessel/map.html)",
    "video_and_recommendations_for_fastytapi": "Returns details about a video and the first page or recommendations.\nPass the returned `pagination` of this endpoint into the \"Recommended videos (w/ pagination)\" endpoint to obtain the next recommendations.",
    "advance_x_signed_query_payload_beta_for_opensea_graphql": "This endpoint provides a verified request template based on the latest consecutive request.",
    "search_results_for_youtube_search_unlimited_": "Get Top 22 YouTube Search Results with Video ID, URL, Thumbnail, Title & Duration. No API Key/No Quota Limits",
    "artist_albums_for_spotify_data": "artist-albums",
    "artist_overview_for_spotify_data": "artist-overview",
    "track_lyrics_for_spotify_data": "track-lyrics",
    "verify_plate_number_location_for_car_verification_nigeria": "Enter the first 3-digit of any Nigeria plate number to know the state and LGA it comes from. For example, if a plate number is GGE123YZ. you will pass the parameter as GGE or gge (not case sensitive) and the state, LGA and state slogan will be displayed including its unique id. Feel free to try it out.",
    "blake2b_text_hash_with_key_for_hashing_api": "Hash text (as query-string-parameter) with private-key (as query-string-parameter) using blake2b algorithm.",
    "custom_captcha_for_captcha_v2": "captcha code is user format. \n\n- string is number or character, string length is up to 8 (from 1 to 8)",
    "number_captcha_for_captcha_v2": "Captcha code is number format.\n\n- params: length is number (from 1 to  8, default is 6)",
    "last_updated_for_data_police_uk": "Crime data in the API is updated once a month. Find out when it was last updated.",
    "crimes_with_no_location_for_data_police_uk": "Returns a list of crimes where the responsible force hasn't specified a location.",
    "captions_for_youtube_v3_v3": "Returns a list of caption tracks that are associated with a specified video.",
    "search_for_youtube_v3_v3": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching `video`, `channel` and `playlist` resources, but you can also configure queries to only retrieve a specific type of resource.",
    "getpeoplebytopic_for_azure": "Get Azure influencers by topic.",
    "getpastevents_for_azure": "Get past Azure events.",
    "getsponsorships_for_azure": "Get Azure sponsorships",
    "random_credit_card_for_fake_data_generator": "This endpoint generate a list of fake credit cards",
    "random_profile_by_id_for_fake_data_generator": "Retrieve fake profiles by id.",
    "random_company_by_id_for_fake_data_generator": "Retrieve fake companies by id.",
    "generate_qr_code_for_webit_qr_code": "Generate a beautiful QR Codes with custom logo, colors, gradient effects and styles with ease.",
    "fetch_information_for_asn_lookup": "Retrieve information based on AS number, CIDR (IPV4 & IPV6) or organization name.",
    "book_list_and_chapter_counts_api_for_complete_study_bible": "Lists all books of the Bible, abbreviations, and chapter counts. Can be used as a reference for a chapter selection screen",
    "place_detail_api_for_complete_study_bible": "Used in conjunction with Chapter and Verse API. Whenever a city/region/location is mentioned in a verse, the Chapter and Verse API provides a unique ID for the location that is mentioned. This unique ID is more reliable than searching for a place \"name\", because place names and spellings can change, especially from OT to NT. By using the Place ID's provided with the Chapter and Verse API, you can call the Place API to fetch more detail on each place, which returns a name, location, and data from the Encyclopedia of the Bible (when available).\n\nLat / Longs are included with each place as well, so if you want to use a mapping API (leafletJS, MapBox, etc), you can display real-world locations for every place.\n\nEncyclopedia of the Bible data is provided in html form, display as raw html and apply CSS as desired",
    "search_strongs_number_api_for_complete_study_bible": "Returns every verse containing the supplied strong's number.\nInclude lxx boolean option will search the Septuagint translation of the Old Testament when searching for a Greek word. This allows connections to be made between New Testament words and Old Testament concepts.",
    "india_timeline_data_starting_from_30th_jan_2020_for_corona_virus_world_and_india_data": "India timeline data",
    "covid_19_india_data_state_and_district_wise_for_corona_virus_world_and_india_data": "COVID-19 India data state and district wise",
    "covid_19_world_data_country_wise_for_corona_virus_world_and_india_data": "COVID-19 World data country wise",
    "retrieve_fees_for_opensea_v2": "This endpoint returns the various contract fees\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_collection_stats_for_opensea_v2": "This endpoint can be used to fetch stats for a specific collection, including real-time floor price data.",
    "google_video_for_value_serp": "The Google Video Parameters are applicable when making a request with search_type=videos to retrieve video results for a given search term. The search term is specified in the q parameter and the optional location parameter can be used to geo-locate the videos request (locations can be retrieved via the Locations API).",
    "locations_for_value_serp": "The VALUE SERP Locations API allows you to search for VALUE SERP supported Google search locations. You can supply the `full_name` returned by the Locations API as the `location` parameter in a Search API query to retrieve search results localized to that location.",
    "google_product_online_sellers_for_value_serp": "The Google Product Online Sellers Parameters are applicable when making a request with `search_type=product` and `product_type=sellers_online` to retrieve product online sellers results for a given product ID. The product ID is specified in the `product_id` parameter and you should also specify a location parameter to geo-locate the request (locations can be retrieved via the Locations API).\n\nGoogle Product IDs are returned by Google Shopping search requests.\n\n**Products & Location**\nGoogle Product pages are highly location-sensitive so it is important that you specify a location that matches the location that was used to retrieve the `product_id` in the original Google Shopping search request.",
    "steps_for_wikihow": "Gets a random selection of WikiHow steps.",
    "images_for_wikihow": "Gets the src URL for random WikiHow images",
    "autocomplete_zipcodes_lite_for_autocomplete_usa": "Autocomplete USA Zipcodes Lite",
    "autocomplete_zipcodes_zip4_for_autocomplete_usa": "Autocomplete USA Zipcodes-Zip4",
    "autocomplete_addresses_for_autocomplete_usa": "Autocomplete USA Addresses",
    "number_for_refactor_numbers_in_human_readable_form_like_1k_or_1m": "Send a number to get the refactored human-readable form of the number.\nYou can use this to show the price for your products to your e-commerce website, and many more.",
    "get_devices_by_brand_for_mobile_phones": "Params\n\n1. brand_id (required)\n2. page\n3. limit",
    "search_devices_for_mobile_phones": "Params\n\n1. query",
    "get_brands_for_mobile_phones": "Params\n\n1. page\n2. limit",
    "keyword_search_with_ranking_for_google_local_rank_tracker": "Make a Keyword search at a Coordinate (lat/lng) for all the business and get the ranking of a specific business at that point. The ranking data is determined by the business place_id or business name.",
    "id_for_instagram_downloader": "get all highlights thump and name",
    "categorylist_for_gtrend": " ",
    "relatedquery_for_gtrend": "Get related query from given query",
    "title_trailers_for_netflix_data": "title-trailers",
    "title_details_for_netflix_data": "title-details",
    "season_episodes_for_netflix_data": "season-episodes",
    "get_users_for_feku_json": "To Get list of all Users",
    "getproductbyid_for_feku_json": "Get Specific Product by ID",
    "getuserbyid_for_feku_json": "To to Specific User by ID",
    "get_payment_cards_information_associated_with_a_specific_employee_for_human_resources_api": "This endpoint gets all bank payment cards records associated with a specific employee ID that is unique for each employee and displays all cards information in the response.\nFor example:  card number, expiry date, and etc...",
    "paginate_through_employees_payment_cards_infomation_for_human_resources_api": "This endpoint lets you paginate through all the available records in the bank cards' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 bank cards with their information.\nFor example:  card number, holder name,  card type, and etc...",
    "get_a_specific_quote_for_motivational_content": "This endpoint fetches a specific quote using the provided 'id'.",
    "specific_force_for_data_police_uk": "Provides detailed information about a specific force.",
    "enrichment_for_tomba": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person\u2019s name, location and social handles from an email",
    "product_groups_list_for_consumer_reports": "List product groups from categories and types",
    "cars_get_images_for_consumer_reports": "Get images of car model by year",
    "get_symbols_by_abbreviation_for_us_states": "Retrieve all state symbols for the provided state abbreviation.",
    "title_similars_for_netflix_data": "title-similars",
    "script_for_unicode_codepoints": "Information about a Script",
    "traits_for_collection_for_rich_nft_api_metadata": "Get all NFT traits attributes of a specific collection\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op",
    "search_for_playlists_for_youtube_media_downloader": "This endpoint searches for YouTube playlists. Pagination scraping is supported. Thumbnails will not be blurred by age safety.",
    "search_for_channels_for_youtube_media_downloader": "This endpoint searches for YouTube channels. Pagination scraping is supported.",
    "get_cigars_for_cigars": "Get cigar data, paginated with filters",
    "get_cigar_strengths_for_cigars": "Get Enum of cigar strengths",
    "get_job_details_for_fresh_linkedin_profile_data": "Scrape the full job details, including the company basic information. **1 credit per call.**",
    "get_profile_recent_activity_time_for_fresh_linkedin_profile_data": "Get the time of the latest activity. **2 credits per call.**",
    "us_decode_for_vin_decoder_v4": "US Decode",
    "za_decode_for_vin_decoder_v4": "ZA Decode",
    "street_level_outcomes_for_data_police_uk": "Outcomes at street-level; either at a specific location, within a 1 mile radius of a single point, or within a custom area.",
    "autocomplete_for_zillow_data_v2": "Find location for search",
    "get_zip_code_by_city_for_zillow_data_v2": "Get zip code by city",
    "get_country_details_for_gis_engine": "Get the country details by providing the country code (2 letter code)",
    "beta_calendar_for_thai_lotto_new_api": "2019 \u1019\u103e \u101a\u1014\u1031\u1037\u101c\u1000\u103a\u101b\u103e\u102d\u1021\u1001\u103b\u102d\u1014\u103a\u1021\u1011\u102d \u1011\u103d\u1000\u103a\u101b\u103e\u102d\u1001\u1032\u1037\u101e\u1031\u102c 2D History \u1019\u103b\u102c\u1038\u1000\u102d\u102f \u1005\u102f\u1005\u100a\u103a\u1038\u1015\u1031\u1038\u1011\u102c\u1038\u1001\u103c\u1004\u103a\u1038\u1016\u103c\u1005\u103a\u1015\u102b\u101e\u100a\u103a\u104b",
    "get_cities_by_country_for_cities_cost_of_living_and_average_prices_api": "This endpoint will retrieve all the supported cities in a given country.",
    "search_for_netflix_data": "search",
    "title_seasons_for_netflix_data": "title-seasons",
    "get_all_coins_prices_for_cryptopricetracker": "This Endpoint Will Return Coin Currency Name , Price, RateChange.",
    "entries_for_lexicala": "get specific entry by its unique ID",
    "senses_for_lexicala": "get specific sense by its unique ID",
    "languages_for_lexicala": "all supported languages and codes",
    "zip_code_info_for_polish_zip_codes": "Return zip code information, that is a list of zip code entries",
    "top_free_apps_for_store_apps": "Top free apps chart.",
    "shorts_sequence_for_yt_api": "Get Shorts sequence.\nQuota cost is 2 units.",
    "channel_home_for_yt_api": "Get Channel's Home Tab Listings.\nQuota cost is 1 unit.",
    "shorts_sound_attribution_for_yt_api": "Get the Shorts original sound attribution listing.\nQuota cost is 1 unit.",
    "getcommunities_for_power_bi_smartable": "Get Power BI communities.",
    "getnews_for_power_bi_smartable": "Get Power BI news.",
    "get_profile_pdf_cv_for_fresh_linkedin_profile_data": "Get the CV of a LinkedIn profile in PDF format. **1 credit per call.**",
    "property_details_for_zillow_v2": "Get a property's details by its zpid",
    "agent_s_active_listings_for_zillow_v2": "Get agent's active listings by zuid",
    "get_channel_clips_for_kick_com_api_kick_api": "Get Channel Clips",
    "search_countries_by_idd_for_geography": "Search Countries by its International Direct Dialing Number",
    "search_countries_by_capital_for_geography": "Search Countries by capital. Both official and common names are searched",
    "get_country_by_alphacode_for_geography": "Get brief countries details by ISO 3166 standard alpha code",
    "search_for_g_search": "Get Real-time Search Result Page",
    "location_for_g_search": "The Location API lets you search for supported Google search locations. You can pass the `location_name` returned by the Location API as the `location_name` parameter and set the `location_parameters_auto` value to true in a Search API query to retrieve search results localized to that location.",
    "parser_get_for_scraper_s_proxy": "Automatically parses html into an easily processable json format",
    "timeseries_for_gtrend": "Get timeseries from query",
    "autocomplete_for_twitter_pack_v2": " ",
    "search_screen_name_for_twitter_pack_v2": " ",
    "trend_id_for_twitter_pack_v2": " ",
    "user_tweet_detail_for_twitter_pack_v2": "Get user tweet and reply",
    "search_user_for_twitter_pack_v2": " ",
    "similar_results_nearby_for_zillow_data_v2": "Similar results nearby",
    "list_of_u_s_a_states_for_zillow_data_v2": "List of states",
    "application_details_by_id_for_app_store": "Get Application information by app id.",
    "top_free_ios_apps_for_app_store": "Get list of the top free apps on IOS",
    "search_tweet_for_twitter_pack_v2": "search tweet by query",
    "player_achievements_for_theclique": "Enter SLUG and PLAYER_ID\n\nFor example: lionel-messi, 28003",
    "fanspro_overview_for_theclique": "Enter Type (agent, player, team), id\nWhen choosing a team, you can choose a season (2022, 2021, ...)",
    "eventbrite_search_event_id_for_theclique": "Enter the name of the festival. Example,  LUFT 2022",
    "video_subtitles_for_youtube_search": "Get the available subtitles of a Youtube Video",
    "units_for_yoonit": " ",
    "currencies_for_yoonit": "Returns a list of all supported currencies",
    "products_list_for_consumer_reports": "List products from different categories",
    "new_free_ios_apps_for_app_store": "Get list of new free ios apps",
    "reviews_by_bundle_id_for_app_store": "Get reviews for a chosen app by app bundle id",
    "new_paid_ios_apps_for_app_store": "Get list of new paid ios apps",
    "ranking_at_coordinate_point_for_local_rank_tracker": "Get search results at the specified coordinate point and additional ranking data for the business with `place_id`.",
    "single_product_for_rainforest": "The Product Parameters are applicable when making a request with type=product to retrieve details of a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request",
    "search_for_rainforest": "The Search Parameters are applicable when making a request with type=search to retrieve search results for an Amazon domain - the Amazon domain is specified using the amazon_domain parameter and the search term is specified in the search_term parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.",
    "seller_feedback_for_rainforest": "The Seller Feedback Parameters are applicable when making a request with type=seller_feedback to retrieve seller customer feedback details for a seller on Amazon - the seller is specified using the seller_id and amazon_domain parameters. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nSeller feedback details are retrieved from the feedback section of the seller profile page. You can retrieve the seller_id value for a given seller from other Rainforest requests, such as type=offers requests.\n\nA maximum of 5 seller feedback records can be returned per request. You can paginate through multiple pages of seller feedback records using the page parameter. Inspect the pagination.has_next_page property to determine whether there is a next page of results to retrieve.",
    "xml_for_stopmodreposts_blocklist": "Extensible Markup Language endpoint",
    "yaml_for_stopmodreposts_blocklist": "YAML Ain't Markup Language endpoint",
    "txt_for_stopmodreposts_blocklist": "Plain text endpoint",
    "manufacturing_year_detection_for_tesla_vin_identifier": "Detects the manufacturing year of the respective vehicle.",
    "search_tags_for_blogsapi": "Get all blogs if the term is one of the tags.",
    "user_timeline_for_twitter_pack_v2": "Get tweet timeline by user ID",
    "stars_get_image_for_unofficial_trust_pilot": "Get image links displaying the star-rate",
    "consumers_get_web_links_for_unofficial_trust_pilot": "Get web links to a consumer",
    "business_units_detail_for_unofficial_trust_pilot": "Get detailed information of a business unit",
    "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car": "Pluses and minuses of the car",
    "glyph_for_unicode_codepoints": "Request a Sample Glyph",
    "name_for_unicode_codepoints": "Request a Codepoint\u2019s Name",
    "get_content_for_article_content_extractor": "Get main article content from news articles or blog",
    "getmindfulnessquote_for_metaapi_mindfulness_quotes": "Get a random quote about mindfulness from a list of 100 quotes.",
    "hin_decoder_return_html_for_hull_id_boat_hin_decoder": "setting usertable=1 will return an html table instead of json",
    "mic_lookup_for_hull_id_boat_hin_decoder": "Enter a boat manuf. code (3 letter MIC) to find info about the company",
    "hin_decoder_return_json_for_hull_id_boat_hin_decoder": "returns json decoded data",
    "generate_cpf_for_cpf_validator": "Generate a random valid CPF number.",
    "validate_cpf_number_for_cpf_validator": "Checks if a CPF number is valid.",
    "domain_information_for_livescan_a_domain": "Get data points of a given domain : A record, MX record, TXT/SPF record, SOA record, CMS Type (Generator), Certificate Issuer, Certificate Subject, Certificate Start Date, Certificate End Date, Domain creation date, Domain name (or partial), Domain expire date, Domain updated date, Javascript Libraries, Hostname (or partial), HTML Header Tags,  IP Address, Page title from domain homepage, Page meta tags (including og), Organization, Registrar, TLD, Server software (Apache, PHP, nginx etc), Server geolocation",
    "get_a_specific_employee_by_employee_id_for_human_resources_api": "This endpoint gets one record by a specific employee ID that is unique for each employee in the employees table, up to 900 employees with their information.\nFor example:  employee ID , first name, email, and  etc...",
    "get_all_campany_employees_information_for_human_resources_api": "This endpoint gets all the available records in the employees table, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...",
    "getfunctions_topic_for_power_bi_smartable": "Get Power BI DAX functions by topic.",
    "playlist_details_for_youtube_v3_v2": "Get playlist details",
    "playlist_videos_for_youtube_v3_v2": "Get playlist videos",
    "channel_videos_for_youtube_v3_v2": "Get channel videos",
    "is_it_up_for_scrape_for_me": "check the server is working \ninsteed of \"up\" in the link you can type anything",
    "similar_apps_by_bundle_id_for_app_store": "Get a list of apps similar to the provided app by app bundle ID",
    "new_ios_apps_for_app_store": "Get list of new ios apps",
    "search_for_region_for_realtor": "Get location suggestions by keyword",
    "get_your_data_for_request_boomerang": "Returns the data that you provide. The data parameter must be a valid JSON",
    "business_email_compromise_bec_api_for_business_email_compromise_bec_api\t": "This API protect your business from Business email compromise (BEC), \nit takes email and returns  keys risk indicators such as : email\nvalidation, blacklisted, phishing, dmarc seurity,  spoofing risk, malicious activity.",
    "get_languages_for_amazon_web_scraping_api": "Return the list of currently supported languages in the API.",
    "get_product_details_all_countries_for_amazon_web_scraping_api": "Get the detail of a specific product from Amazon using the ASIN code.",
    "i18nregions_for_youtube_v3_v3": "Returns a list of content regions that the YouTube website supports.",
    "playlists_for_youtube_v3_v3": "Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.",
    "get_devices_details_for_mobile_phones": "Params\n\n1. device_id",
    "getpeople_for_azure_smartable": "Get Azure influencers.",
    "getnewsbytopic_for_azure_smartable": "Get Azure news by topic.",
    "get_app_permissions_for_google_play_api": "Returns app permissions.",
    "retrieve_collection_fees_for_blur": "This endpoint returns the various collection fees\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_collection_traits_for_blur": "This endpoint is used to retrieve trait information about a single collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "pl_decode_for_vin_decoder_v4": "PL Decode",
    "get_annonce_for_fluximmo": " ",
    "domainsearch_for_tomba": "You can use this endpoint to show different browser icons to your users. The code argument receives the browser code as it appears in your user /account/sessions endpoint. Use width, height and quality arguments to change the output settings.",
    "get_profile_data_for_linkedin_profile_data_api": "get profile data",
    "search_properties_for_sale_for_realtor": "Search properties for sale by Address, School, City, Zip or Neighborhood. Filter the results using different parameter filters",
    "property_details_for_realtor": "Get property details by  property ID  or by Address",
    "replies_for_axesso_facebook_data_service": "Fetch comments for for given feedbackId which is located in \"data.feedback.display_comments.edges.node.feedback.id\" in the post or comments endpoint. For pagination the optional query parameter \"after\" can be used by including \"comments.data.feedback.page_info.end_cursor\" from the revious response.",
    "posts_for_axesso_facebook_data_service": "Query posts by providing url e.g. https://www.facebook.com/longhornsteakhouse/posts/.  In the response the field \"nextUrl\" have to passed to the next request to fetch the next posts.",
    "comments_for_axesso_facebook_data_service": "Fetch comments for a given feedbackId (returned in the post endpoint). For pagination the optional query parameter \"after\" can be used by including \"comments.data.feedback.page_info.end_cursor\" from the previous response.",
    "consulta_estabelecimento_for_consulta_cnpj_gr_tis": "Consulta Receita Federal, Simples Nacional e Cadastro de Contribuintes atrav\u00e9s do CNPJ",
    "consulta_unificada_for_consulta_cnpj_gr_tis": "Retorna todos os dados presentes no Comprovante de Inscri\u00e7\u00e3o do Cadastro Nacional da Pessoa Jur\u00eddica junto a Receita Federal",
    "agent_reviews_for_zillow_v2": "Get agent reviews by the agent's zuid",
    "walk_transit_and_bike_score_for_zillow_v2": "Get Walk, Transit and Bike Score of a property by zpid",
    "search_social_links_for_social_links_search": "Get social profile links by search query or keywords. The following social networks are supported: Facebook, TikTok, Instagram, Snapchat, Twitter, Youtube, LinkedIn, GitHub and Pinterest.",
    "retrieve_listings_v2_for_opensea_data_query": "This endpoint is used to fetch the set of active listings on a given NFT for the Seaport contract.",
    "retrieve_all_offers_v2_for_opensea_data_query": "get all open offers for a collection",
    "deprecated_retrieving_offers_for_opensea_data_query": "Used to fetch active offers for a given asset.",
    "test_for_lexicala": "test that the API is running",
    "searchentries_for_lexicala": "search for entries with filters in query",
    "locationsuggestions_v2_for_zillow_base": "Search for a location",
    "getzipcodebycity_for_zillow_base": "Get zip code by city",
    "getaccesstype_for_electric_vehicle_charging_stations": "Returns access type options for stations",
    "get_data_by_research_a_specific_part_of_attribute_in_the_tag_selector_for_scrapemaster": "Get data by \u201cresearch a specific part of attribute\u201d in the tag selector",
    "get_all_page_s_content_for_scrapemaster": "This endpoint will return all the page's content from the URL given by the user.",
    "image_search_for_image_search": "Image Search",
    "getpeoplebytopic_for_powerbi": "Get Power BI influencers by topic.",
    "getsamples_for_powerbi": "Get Power BI samples",
    "getnewsletters_for_powerbi": "Get Power BI newsletters",
    "get_date_and_time_by_timezone_for_location_and_time": "Get date and time for specified timezone.",
    "retrieving_a_contract_for_opensea_data_query": "Used to fetch more in-depth information about an contract asset.",
    "retrieving_events_for_opensea_data_query": "The `/events` endpoint provides a list of events that occur on the assets that OpenSea tracks. The \"event_type\" field indicates what type of event it is (transfer, successful auction, etc).",
    "retrieve_collection_offers_v2_for_opensea_data_query": "This endpoint is used to get collection offers for a specified collection.",
    "get_search_token_for_trulia_real_estate_scraper": "Get search token and use it in **search/for_sale**, **search/for_rent**, **search/sold** endpoints.",
    "product_for_barcode_lookup": "Endpoint to retrieve product data.",
    "retrieving_assets_for_opensea_data_query": "To retrieve assets from our API, call the `/assets` endpoint with the desired filter parameters.\n\nAuctions created on OpenSea don't use an escrow contract, which enables gas-free auctions and allows users to retain ownership of their items while they're on sale. So this is just a heads up in case you notice some assets from opensea.io not appearing in the API.",
    "retrieve_all_listings_v2_for_opensea_data_query": "get all active listings for a collection",
    "getbycordsadv_for_electric_vehicle_charging_stations": "Uses Latitude & Longitude to get near by electric charging stations",
    "get_brands_for_cigars": "Get Cigar brands, paginated and searchable.",
    "playlist_items_for_youtube_v3_lite": "Get playlist items.\nQuota cost is 1.",
    "channel_videos_playlists_for_youtube_v3_lite": "Get channel videos or playlists.\nQuota cost is 1.",
    "search_for_youtube_v3_lite": "Get search results.\nQuota cost is 1.",
    "single_coin_for__all_in_one_crypto_swiss_knife_": "Get single coin info and history sparklines for rendering chart",
    "games_for__all_in_one_crypto_swiss_knife_": "Get play 2 earn games",
    "trending_games_for__all_in_one_crypto_swiss_knife_": "get trending play 2 earn games",
    "post_details_for_axesso_facebook_data_service": "Fetch post details for a single post",
    "hashtag_continuation_for_twitter": "This endpoint return the next hashtag results",
    "user_s_tweets_for_twitter": "This endpoint return a list of user's tweets given a username",
    "wayback_query_for_wayback_machine_domain_archived_lookup": "API query domain for years available on Wayback machine",
    "list_category_for_adzuna": "List available categories.",
    "salary_data_for_adzuna": "Provides salary data for locations",
    "get_verses_by_bookname_for_bible_search": "Get a range of verses of the Bible.",
    "all_blogs_for_blogsapi": "All blogs paginated in a set of 20.",
    "makes_for_car_data": "get a list of supported makes",
    "cars_for_car_data": "Retrieve and filter lists of cars",
    "years_for_car_data": "get a list of supported years",
    "v1_thesaurus_for_thesaurus_by_api_ninjas": "API Ninjas Thesaurus API endpoint. Returns a list of synonyms and a list of antonyms for a given word.",
    "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real": "Gera Mapa dos Arredores",
    "get_albums_for_spotify_data": "get-albums",
    "artist_appears_on_for_spotify_data": "artist-appears-on",
    "user_profile_for_spotify_data": "user-profile",
    "gettopbacklinks_for_seo_api_get_backlinks": "Get domains top backlinks",
    "products_detail_for_consumer_reports": "Get detailed information of a product",
    "reverse_for_dns_lookup": "Get name servers from an IP",
    "nslookup_for_dns_lookup": "NsLookup queries the specified DNS server and retrieves the requested records that are associated with the domain name you provided. These records contain information like the domain name\u2019s IP addresses.\n\nThe following types of DNS records are especially useful:\n\n- **A**: the IPv4 address of the domain.\n- **AAAA**: the domain\u2019s IPv6 address.\n- **CNAME**: the canonical name \u2014 allowing one domain name to map on to another. This allows more than one website to refer to a single web server.\n- **MX**: the server that handles email for the domain.\n- **NS**: one or more authoritative name server records for the domain.\n- **TXT**: a record containing information for use outside the DNS server. The content takes the form name=value. This information is used for many things including authentication schemes such as SPF and DKIM.",
    "active_listings_for_airdna": "Returns active rentals",
    "getnewsletters_for_diablo4_smartable": "Get Diablo 4 newsletters.",
    "getcommunities_for_diablo4_smartable": "Get Diablo 4 communities",
    "similar_to_property_for_uk_real_estate_rightmove": "Similar to this property",
    "property_to_rent_for_uk_real_estate_rightmove": "Property to rent",
    "get_word_by_length_and_contain_for_random_word_api": "Returns a random word that contains a certain string and contains a certain amount of letters.\nFor example, if the substring is \"le\" and the length \"7\", you will get a word that contains \"le\" and is 7 characters long, such as \"dozzled\".",
    "get_word_by_contain_for_random_word_api": "Returns a random word that contains a certain string.\nFor example, if the string is \"le\" then you will get any word that contains the string, whether it's at **the start, the end or the middle**, and you will get for example \"odourless\".",
    "search_by_sub_url_for_redfin_base": "Search by Sub URL",
    "get_zipcode_by_county_for_redfin_base": "Get zipcode by county",
    "get_search_results_for_fresh_linkedin_profile_data": "Get search results. Please make sure the search is \"done\" before calling this endpoint.",
    "discover_for_filepursuit": "Discover every file crawled by FilePursuit using links and domains",
    "pursuit_for_filepursuit": "Search for a query in file names and path",
    "get_word_by_length_start_and_contain_for_random_word_api": "Returns a random word that is a certain amount of characters long, starts with a certain string and contains a certain string.\nFor example, if the length is 7, the start \"fru\" and the substring \"le\", you will get a 7 letter long word that begins with fru and contains le, like \"frumple\".",
    "city_located_in_for_geodb_cities": "Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level  (if available). \n\nCurrently, this data is highly dependent on whether the Wikidata **locatedIn** relation is properly defined. If you see an issue, please propose a change to the corresponding Wikidata entry.",
    "country_region_places_for_geodb_cities": "Get the places in the given region.",
    "search_for_app_store": "Search for apps on the App Store",
    "top_grossing_ios_apps_for_app_store": "Get list of the top grossing ios apps",
    "reviews_by_id_for_app_store": "Get reviews for a chosen app by app id",
    "getpeople_for_azure": "Get Azure influencers.",
    "getnewsbytopic_for_azure": "Get Azure news by topic.",
    "getnewsletters_for_azure": "Get Azure newsletters.",
    "get_region_info_for_redfin_base": "This API will return `region_type_id`, `region_id`\n\u279e Will use for API \u3010Search by region\u3011",
    "aircraft_scatter_data_for_aircraftscatter": "Returns all aircraft above 10,000 feet within 1000 kilometres from specified latitude and longitude.",
    "getlearningresourcesbytopic_for_azure_smartable": "Get Azure learning resources by topic.",
    "gera_vis_o_da_rua_for_consulta_cnpj_tempo_real": "Gera Vis\u00e3o da Rua",
    "consulta_cep_for_consulta_cnpj_tempo_real": "Consulta CEP",
    "trending_videos_for_youtube_search": "This endpoint returns the list of trending videos given a country",
    "playlist_tracks_for_spotify_data": "playlist-tracks",
    "search_for_spotify_data": "search",
    "get_radio_playlist_for_spotify_data": "get-radio-playlist",
    "property_for_sale_for_uk_real_estate_rightmove": "Property for sale",
    "channel_details_for_youtube_v3_v2": "Get channel details",
    "captions_list_for_youtube_v3_v2": "Returns a list of caption tracks that are associated with a specified video",
    "suggested_videos_for_youtube_v3_v2": "Get Similar videos",
    "user_media_for_twitter_data": "user-media",
    "auto_complete_for_twitter_data": "auto-complete",
    "category_for_asin_data": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results for an Amazon category. Categories can be specified either via passing an Amazon category URL in to the url parameter, or by passing a Category ID in the `category_id` and an Amazon domain in the `amazon_domain` parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nCategory results are retrieved from the category listing page on Amazon.",
    "getmeaning_for_english_words": "Returns the meaning of the word",
    "random_quotes_for_quotes_v2": "Get a Random Quote on Each Request",
    "channel_for_youtube_v3_alternative": "Get Channel details and videos",
    "trending_for_youtube_v3_alternative": "Get trending videos of the particular geo",
    "users_by_rest_ids_for_twitter_data": "users-by-rest-ids",
    "ro_car_averages_for_car_averages": "RO Car averages",
    "nz_car_averages_for_car_averages": "NZ Car averages",
    "au_car_averages_for_car_averages": "AU Car averages",
    "scrape_appstore_for_apple_app_store_scraper": "Get details of App Store Listing",
    "loginuser_for_pet_store": "",
    "logoutuser_for_pet_store": "",
    "getinventory_for_pet_store": "Returns a map of status codes to quantities",
    "getpeople_for_power_bi_smartable": "Get Power BI influencers.",
    "getorderbyid_for_pet_store": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getuserbyname_for_pet_store": "",
    "get_verse_by_bookid_for_bible_search": "Returns a verse of the Bible.",
    "get_location_infomation_by_zipcode_for_redfin_base": "Get location infomation by zipcode",
    "getnewsletters_for_azure_smartable": "Get Azure newsletters",
    "status_200_for_daily_ovrll_0822202141203": "Testing",
    "status_200_for_daily_ovrll_0822202130418": "Testing",
    "find_similar_for_similar_movies": "find similar movies for your movie",
    "get_id_for_similar_movies": "get the id of your movie",
    "genres_free_for_streaming_availability": "Get the id to name mapping of supported genres.",
    "get_ultra_for_streaming_availability": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info",
    "services_free_for_streaming_availability": "Get the list of supported services and details about them",
    "get_movie_by_id_for_movies_tv_shows_database": "A valid Movie ID (e.g. tt1375666)\nreturn Title, Description, Year, Release Date, Rated, Runtime, Genre, Directors, Actors, Languages, Country\n Rating, votes, Popularity, id",
    "get_airing_today_tv_shows_for_movies_tv_shows_database": "return tv series results with title, id, year",
    "get_tv_schedule_by_country_for_movies_tv_shows_database": "return TV Series Name, Season Number, Episode number, Episode name, Air date, air time, runtime, Network, series  id",
    "get_monthly_top_100_games_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Games Torrents",
    "get_monthly_top_100_movies_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Movies Torrents",
    "get_monthly_top_100_music_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Music Torrents",
    "get_quote_by_year_for_movie_and_tv_shows_quotes": "This endpoint will return back quotes by the given year",
    "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes": "This endpoint will return quotes by given movie or TV show name",
    "get_a_random_quote_for_movie_and_tv_shows_quotes": "This endpoint will return a random quote",
    "movies_news_recent_get_for_movies_news": "Get the most recent movies news from top sources\n10 news items will be returned per request",
    "get_all_characters_for_star_wars_characters": "Get all characters with all details",
    "status_200_for_daily_ovrll_0822202124848": "Testing",
    "search_for_ott_details": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.",
    "title_details_for_ott_details": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.",
    "basic_info_for_ott_details": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.",
    "get_video_for_playphrase_me": "To get 5 videos by searching quotes",
    "status_200_for_daily_ovrll_0822202140642": "Testing",
    "get_movies_by_name_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required",
    "get_movies_by_cast_name_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required",
    "get_movies_by_year_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required",
    "titles_x_titles_by_ids_for_moviesdatabase": "Titles by ids list",
    "titles_utils_titletypes_for_moviesdatabase": " ",
    "titles_for_moviesdatabase": " ",
    "genre_list_for_advanced_movie_search": "Get list of all available genres",
    "get_detailed_response_for_advanced_movie_search": "Get detailed response for a movie ID",
    "search_by_name_for_advanced_movie_search": "Search a movie by query string",
    "get_a_specific_movie_by_id_for_imdb_top_100_movies": "get top x movie by id 'top46' :\nThe Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Genre, Director, Writer and IMDb ID .",
    "get_top_100_movies_according_to_imdb_for_imdb_top_100_movies": "Get Top 100 Movies according to IMDb",
    "get_movies_by_director_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required",
    "search_pro_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
    "get_basic_free_for_streaming_availability": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.",
    "title_details_for_netflix_v2": "Title Details",
    "title_similars_for_netflix_v2": "Title Similars",
    "season_episodes_for_netflix_v2": "Season Episodes",
    "fetch_movies_for_abir82_bollywood_recommendations": "This Endpoint allows to get a list of movies from 2000 to 2019 based on the genre selected by the user.",
    "status_200_for_daily_ovrll_0822202130837": "Testing",
    "get_latest_anime_for_latest_anime_api": "Get latest anime data",
    "get_anime_by_page_for_latest_anime_api": "Get Latest Anime by Page",
    "get_trending_tv_shows_for_movies_tv_shows_database": "return tv series results with title, id, year",
    "get_popular_tv_shows_by_year_for_movies_tv_shows_database": "return tv series results with title, id, year",
    "get_tv_series_aliases_by_id_for_movies_tv_shows_database": "A valid TV Series ID (e.g. tt2741602)\nreturn tv series aliases",
    "title_trailers_for_netflix_v2": "Title Trailers",
    "title_seasons_for_netflix_v2": "Title Seasons",
    "titles_seasons_seriesid_for_moviesdatabase": " ",
    "titles_search_keyword_keyword_for_moviesdatabase": " ",
    "searchinventory_for_films": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
    "get_all_quotes_for_movie_and_tv_shows_quotes": "This endpoint will return back all the quotes in the API",
    "get_quotes_by_actor_for_movie_and_tv_shows_quotes": "This endpoint will return back quotes by the given actor or actress.",
    "get_quote_by_character_for_movie_and_tv_shows_quotes": "This end point will return back quotes delivered by the given character",
    "get_tv_series_episodes_by_series_id_season_number_for_movies_tv_shows_database": "A valid TV Series ID (e.g. tt2741602)\nreturn Episode number, episode name, episode air date, vote average, vote count",
    "get_popular_movies_by_year_for_movies_tv_shows_database": "return movie results with title , year , id",
    "get_genres_for_anime_db": "Get Genres",
    "get_one_anime_by_ranking_for_anime_db": "Get anime by ranking",
    "get_by_id_for_anime_db": "Get anime by its corresponding ID.\n\nID is got from 'Get All' endpoint",
    "titles_utils_lists_for_moviesdatabase": " ",
    "status_200_for_daily_ovrll_0822202130334": "Testing",
    "languages_for_netflix_v2": "Languages",
    "search_for_netflix_v2": "Search",
    "get_by_tv_series_by_id_for_movies_tv_shows_database": "A valid TV Series ID (e.g. tt2741602)\n\nreturn title, description, release_date, id, irating, vote_count, meta, popularity, youtube_trailer_key",
    "get_trending_movies_for_movies_tv_shows_database": "return movie results with title , year , id",
    "get_tv_series_by_title_for_movies_tv_shows_database": "Search by TV Series Title\nreturn title, id, release_date",
    "search_ultra_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
    "get_all_for_anime_db": "Get List of anime. You can search, sort an specify genre",
    "titles_id_crew_for_moviesdatabase": " ",
    "titles_id_ratings_for_moviesdatabase": " ",
    "get_movies_by_title_for_movies_tv_shows_database": "Result set includes all search results\nEach item includes fields:\nTitle\nYear\nMovie  ID",
    "get_movie_images_by_id_for_movies_tv_shows_database": "A valid Movie ID (e.g. tt1375666)\nreturn title, id, poster, fanart",
    "titles_series_seriesid_season_for_moviesdatabase": " ",
    "search_by_genre_for_advanced_movie_search": "Discover movies by Genre",
    "params_for_ott_details": "Get array of values that can be used as params in Advanced Search .",
    "advanced_search_for_ott_details": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.",
    "get_individual_quotes_by_quote_id_for_movie_and_tv_shows_quotes": "This endpoint will return back individual quotes based on the given ID",
    "search_by_title_free_for_streaming_availability": "Search movies and series by title. Maximum amount of items returned are 20, unless there are more than 20 shows with the exact given title input. In that case all the items have 100% match with the title will be returned.\n\nNo pagination is supported.",
    "search_basic_free_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.",
    "ott_providers_for_ott_details": "Get  information on OTT platforms we suuport .",
    "additional_title_details_for_ott_details": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.",
    "status_200_for_daily_ovrll_0822202143542": "Testing",
    "get_recently_added_movies_by_release_date_for_movies_tv_shows_database": "get recently added movies \nreturn title, year,  id",
    "get_tv_series_images_by_id_for_movies_tv_shows_database": "A valid TV Series ID (e.g. tt2741602)\nreturn poster, fanart",
    "get_upcoming_movies_for_movies_tv_shows_database": "return movie results with title, year, id",
    "search_torrents_for_movie_tv_music_search_and_download": "Get downloadable  torrent link by movie name.",
    "titles_id_aka_for_moviesdatabase": " ",
    "actors_for_moviesdatabase": " ",
    "actors_id_for_moviesdatabase": " ",
    "new_arrivals_for_ott_details": "Get the latest arrivals from different platforms .",
    "get_monthly_top_100_tv_shows_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 TV-shows Torrents",
    "titles_id_for_moviesdatabase": " ",
    "titles_series_seriesid_for_moviesdatabase": " ",
    "actors_random_for_moviesdatabase": " ",
    "titles_id_main_actors_for_moviesdatabase": " ",
    "get_recently_added_tv_series_by_release_date_for_movies_tv_shows_database": "return tv series results with title, id, year",
    "titles_x_upcoming_for_moviesdatabase": " ",
    "titles_search_akas_aka_for_moviesdatabase": " ",
    "get_svg_pattern_for_pattern_monster": "Get SVG Pattern",
    "instagram_endpoint_for_access_instagram": "Instagram Endpoint",
    "instagram_endpoint_copy_for_access_instagram": "Instagram Endpoint",
    "convert_for_webp_image_converter": "Convert image to webp format.",
    "get_all_languages_for_alt_bichinhos": "This endpoint will return back all languages available for the image.",
    "get_portuguese_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with **Brazilian Portuguese** alt text.",
    "get_german_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **German.**",
    "rest_api_deep_image_result_jobhash_for_deep_image": " ",
    "health_check_for_test_api_v2": "health check",
    "getresult_for_videogrammer": "get result of previous requested rendering with job_id",
    "get_categories_for__demo_project_v2": " ",
    "me_for__demo_project_v2": " ",
    "get_order_for__demo_project_v2": " ",
    "generate_pdf_for_web_capture": "Generate PDF by providing URL of any website.",
    "take_image_screenshot_for_web_capture": "Get Screenshot of any website by providing URL and the  image ratio (width, height)",
    "get_the_status_of_your_movie_renders_for_json2video": "Get a list of your movie renders, in what step of the rendering process they are and a link to the resulting video once they finish.",
    "query_term_for_list_movies": "Used for movie search, matching on: Movie Title/IMDb Code, Actor Name/IMDb Code, Director Name/IMDb Code",
    "order_by_for_list_movies": "Orders the results by either Ascending or Descending order",
    "quality_for_list_movies": "Used to filter by a given quality",
    "modifysvg_for_aspose_imaging_cloud": " ",
    "getimagesearchstatus_for_aspose_imaging_cloud": " ",
    "modifytiff_for_aspose_imaging_cloud": " ",
    "loginuser_for_tes": "",
    "getinventory_for_tes": "Returns a map of status codes to quantities",
    "getpetbyid_for_tes": "Returns a single pet",
    "converting_url_to_blurhash_for_blurhash_url_api": "Free api to convert url to a hash for https://blurha.sh/",
    "get_mission_for_mission_creation": "get details of a mission",
    "home_for_qrcodegenerator": "Home endtpoint",
    "mp4_for_youtube_videos": "Returns a list of MP4 files with different qualities and other details.",
    "get_spanish_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **Spanish.**",
    "amir_for_amir1": "pet",
    "get_astro_photo_info_randomly_for_astro_gallery": "Return one of the photo info selected randomly by system, including paths (image_hd and image) which use to download photo in **Download Astro Photo** method.",
    "page_for_list_movies": "Used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30",
    "download_mp3_custom_audio_quality_for_youtube_mp3_downloader": "Download YouTube to Mp3 in various audio quality: 320 Kbps, 192Kbps, 256Kbps, 128Kbps & 64Kbps. (Specify the quality in the field)",
    "download_youtube_mp3_for_youtube_mp3_downloader": "Update: 17 May 2023: API is fixed & it is now 100% working. Converts any YouTube video into Mp3 downloadable files. No Ads. No wild redirects.",
    "image_stable_diffusion_for_image_diffusion": "Most stable and fast diffusion to generate safe image `stuff.`",
    "image_stable_prompter_for_image_diffusion": "generate prompt from image url for stable diffusion",
    "image_anime_diffusion_for_image_diffusion": "design to generate weeb stuff.",
    "video_downloader_for_video_downloader": "FreeVideoDownloader is a powerful video downloader tool designed for websites, allowing seamless integration of video downloading capabilities. It provides an easy-to-use API that enables website owners to offer their visitors the ability to download videos from various platforms without leaving the site. With FreeVideoDownloader, users can effortlessly save videos in different formats, enhancing their browsing experience and content accessibility.",
    "red_for_james": "red",
    "styles_for_flaticon": "Method that allows you to get a paged list with information about Flaticon styles, design formats that icons or packs have. Styles are the different versions in which an icon from a given family may appear. For example, an icon may be available in lineal, color, or lineal color styles.",
    "totaliconsselection_for_flaticon": "Method that allows you to get a number stating the full quantity of SELECTION icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com.",
    "categories_for_flaticon": "Method that allows you to get a paged list with information about Flaticon categories. Categories are the different themes in which icons are grouped at Flaticon.",
    "capture_screenshot_for_webcap_website_screenshot_capture": "This will capture the website screenshot and return a downloadable image URL",
    "search_for_any_category_or_star_for_porn_gallery": "use category key word or pornstar name to browse pictures",
    "nsfw_detection_for_nsfw_nude_detection": "AI-based detection if an image is likely to contain NSFW content (nudity).",
    "get_version_for_cars_image_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "get_list_of_available_modes_for_cars_image_background_removal": "The service provides three options for background removal results:\n* Mask of foreground.\n* Image with foreground object.\n* Image with foreground object with shadow.",
    "search_for_youtube_search": "Search video on YouTube",
    "gen_image_for_thai_lottery_result_image": "Gen Image",
    "video_videoid_for_video_builder": "Read video informations and status",
    "anime_img_for_any_anime": "Show only the image from the api on your browser .",
    "anime_gif_for_any_anime": "Get anime gif pfp's / banners",
    "anime_for_any_anime": "Shows json data and image url of the anime pfp you want to use / show !",
    "check_status_for_background_removal_v2": "Use this endpoint to check if the server is up and running.",
    "getresult_for_html5tomp4": "get result of previous requested rendering with job_id",
    "anime_wallpapers_related_to_the_halloween_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime wallpapers related to the halloween:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "premium_anime_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Premium anime arts are wallpapers that look best of the best on a mobile device or contain high-quality digital art:\nRequired GET parameter\n**page**:  0\n**sensitivity**: 1\nOn the above **page**, 0 means it will fetch the latest 10 wallpaper if the page value is 1 then It will bring the next 10 latest wallpaper \npage 0 : 0-10 \npage 1: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get recent anime wallpapers without any categorization:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "video_thumbnail_extractor_for_video_thumbnail_extractor": "Extractor thumbnail image from mp4 video",
    "video_thumbnail_extractor_copy_for_video_thumbnail_extractor": "Extractor thumbnail image from mp4 video",
    "live_room_bio_for_quality_porn": "Get the bio from a room.",
    "top_10_search_queries_for_quality_porn": "Get the top 10 search queries",
    "pornstar_by_name_for_quality_porn": "Loads a porn star by name from the loaded list.",
    "blur_for_dagpi": "Blur Image",
    "polar_image_polaroid_get_for_image": " ",
    "wasted_image_wasted_get_for_image": " ",
    "hog_image_hog_get_for_image": " ",
    "get_list_of_available_modes_for_image_anonymization": "Service provides server modes that may be used to choose which kind of objects to hide. This endpoint returns list of modes that may be used as query parameters for requests to the `results` endpoint.\n\nThe following modes are supported:\n\n* `hide-clp` \u2013 to hide car license plates\n* `hide-face` \u2013 to hide faces",
    "get_version_for_image_anonymization": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "video_search_api_for_petey_vid_video_search_api": "Use this API to search Petey Vid index/repository",
    "converttifftofax_for_aspose_imaging_cloud": " ",
    "getobjectbounds_for_aspose_imaging_cloud": " ",
    "rotateflipimage_for_aspose_imaging_cloud": " ",
    "getrandomimage_for_mikuapi": " ",
    "getimage_for_mikuapi": " ",
    "getcampaigndetails_for_nexweave": "This API will return the Campaign details including variables used in the overall Campaign.",
    "gettemplatedetails_for_nexweave": "This API will return the template details including variables for a valid template.",
    "getallcampaigns_for_nexweave": "The API will return all the CSV Campaigns associated with the user's account, including Images, Videos &  Image+Video Campaign.\n\nNote: The campaigns must be in Success state.",
    "profile_image_for_image_service": " ",
    "anime_wallpapers_related_to_the_wedding_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime wallpapers related to the wedding:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "anime_wallpapers_related_to_the_couple_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime wallpapers related to the couple:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "get_user_for_instagram_media_downloader": "Retrieve valuable user information including username, name, alternate name, description, profile image, post count, and follower count.",
    "getalltemplates_for_nexweave": "This API will return all the templates associated with the user's account, including Images & Video.",
    "getimageframeproperties_for_aspose_imaging_cloud": " ",
    "getimageframe_for_aspose_imaging_cloud": " ",
    "get_english_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **English.**",
    "tags_for_mlemapi": "Returns all tags in JSON",
    "random_mlem_for_mlemapi": "Returns one random mlem image in JSON",
    "mlem_id_for_mlemapi": "Returns one mlem image by ID in JSON",
    "video_search_for_bing_video_search": "Get videos relevant for a given query.",
    "trending_for_bing_video_search": "Get currently trending videos.",
    "video_details_for_bing_video_search": "Get insights about a video, such as related videos.",
    "new_mlem_for_mlemapi": "Returns one most recently published mlem image in JSON",
    "get_product_for__demo_project_v2": " ",
    "get_user_orders_for__demo_project_v2": " ",
    "anime_wallpapers_related_to_the_valentine_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime wallpapers related to the valentine:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "get_analytics_videos_videoid_for_api_video": " ",
    "get_players_for_api_video": " ",
    "get_videos_videoid_chapters_for_api_video": " ",
    "minimum_rating_for_list_movies": "Used to filter movie by a given minimum IMDb rating",
    "sort_by_for_list_movies": "Sorts the results by choosen value",
    "genre_for_list_movies": "Used to filter by a given genre (See http://www.imdb.com/genre/ for full list)",
    "modifywmf_for_aspose_imaging_cloud": " ",
    "tikapi_for_tiktok": "test",
    "copyright_free_images_api_for_free_images_api": "in this API we  gathered best sources of free to use images, and we keep adding more sources.",
    "totalpacks_for_flaticon": "Method that allows you to get a number stating the full quantity of packs available at Flaticon. The number refreshes periodically according to the content available at flaticon.com. Packs are sorted into two groups: PREMIUM packs and SELECTION packs. PREMIUM packs are those that contain one or more PREMIUM icons.",
    "searchicons_for_flaticon": "Method that allows you to get a paged list with the results of the search. Icons returned by the search may be SELECTION icons or PREMIUM icons. By default, it will return a list order by priority. If no order is set, it will return items order by priority. In order to avoid 403 errors when svg icon is used to show the icon in result lists you must not store data in cache more than 15 minutes",
    "icon_for_flaticon": "Method that allows you to get detailed information about an icon.",
    "packs_for_flaticon": "Method that allows you to get a paged list with information about the packs available at Flaticon. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.  By default, it will return a list order by priority. If no order is set, it will return items order by priority.",
    "totalicons_for_flaticon": "Method that allows you to get a number stating the full quantity of icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com.",
    "getorderbyid_for_tes": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getuserbyname_for_tes": "",
    "detection_of_plates_and_faces_for_plate_detection": "In order to protect personal data, you can detect license plates and faces in the pictures you have.",
    "5000img_for_random_anime_img": "randomly selects around 5000 images",
    "random_img_anime_for_random_anime_img": "Random link",
    "objectexists_for_aspose_imaging_cloud": " ",
    "extractimagefeatures_for_aspose_imaging_cloud": " ",
    "list_movies_for_list_movies": "Used to list and search through out all the available movies. Can sort, filter, search and order the results",
    "snap_for_snappy_web_capture": "Simply input url of the webpage that you wish to screenshot.\nAPI returns a temporary link (valid for 1 hour) to download the screenshot.\nAlternatively, you can also choose to have the image returned in base64 encoding.",
    "totalpackspremium_for_flaticon": "Method that allows you to get a number stating the full quantity of PREMIUM packs available at Flaticon. The number refreshes periodically according to the content available at flaticon.com. PREMIUM packs are those that contain one or more PREMIUM icons. ",
    "rgb_image_rgb_get_for_image": " ",
    "get_thought_image_thoughtimage_get_for_image": " ",
    "wanted_image_wanted_get_for_image": " ",
    "sith_image_sith_get_for_image": " ",
    "sat_image_satan_get_for_image": " ",
    "retro_meme_retromeme_get_for_image": " ",
    "with_rt_ratings_for_list_movies": "Returns the list with the Rotten Tomatoes rating included",
    "tag_for_flaticon": "Method that allows you go get detailed information about a tag.",
    "totalpacksselection_for_flaticon": "Method that allows you to get a number stating the full quantity of SELECTION packs available at Flaticon. The number refreshes periodically according to the content available at flaticon.com. SELECTION packs are those that contain only SELECTION icons.",
    "search_for_unofficial_icons8_search": "Search Icons8 repository",
    "get_account_for_api_video": " ",
    "get_analytics_live_streams_livestreamid_for_api_video": " ",
    "gay_image_gay_get_for_image": " ",
    "sobel_image_sobel_get_for_image": " ",
    "get_videos_videoid_chapters_language_for_api_video": " ",
    "get_live_streams_livestreamid_for_api_video": " ",
    "modern_meme_modernmeme_get_for_image": " ",
    "discord_quote_discord_get_for_image": " ",
    "anime_wallpapers_related_to_the_family_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime wallpapers related to the family:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "get_products_for__demo_project_v2": " ",
    "get_players_playerid_for_api_video": " ",
    "get_video_for_api_video": "This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url.",
    "list_videos_for_api_video": " ",
    "limit_for_list_movies": "The limit of results per page that has been set",
    "account_details_account_for_finhost": "Account bank detailes",
    "fee_plans_for_finhost": "Describes fee payments for the services",
    "sumsub_access_token_for_finhost": "Requests customer token to initialize Sumsub SDK",
    "get_calculate_loan_cost_for_calcx_loan_calculator": "This endpoint calculates the total cost of a loan given the loan amount, interest rate, and repayment term.",
    "trades_pending_for_freefloatus": "Get pending trades for your freefloat strategies.",
    "portfolio_for_freefloatus": "Download your freefloat portfolio.",
    "price_probability_for_marketci_analytics": "Based on over 1000 forecasts, the probabilistic outcome is above or below the current price in a normal distribution.",
    "price_forecasts_for_marketci_analytics": "An AI-generated price forecast for the Stock over the next 3 months.",
    "peer_metrics_average_for_marketci_analytics": "An Average of Company Peer Metrics for TTM Data",
    "events_for__economic_events_calendar_": "Get all economic events \nFilter by countries symbols like: US, JP, GB and so on. You can add multiple separating by comma or remove to get all events.\nFilter by date: from & to using date in format 2023-05-09",
    "dax_point_changes_for_each_month_january_august_2022_for_dax": "Gets the actual points, gains and losses for each individual month.",
    "get_top_gainers_losers_list_for_crypto_update_live": "This endpoint gives the list of the top gainers and losers.",
    "get_top_50_cryptocurrencies_list_for_crypto_update_live": "This endpoint gives the list of the top fifty cryptocurrencies.",
    "get_latest_news_on_cryptocurrency_for_crypto_update_live": "This endpoint returns all the news regarding cryptocurrency.",
    "get_for_number2words": "Get equivalent words of this number",
    "realtime_stock_price_for_unibit_ai": "This API returns intraday time series data for any specified stock.",
    "get_the_stock_history_by_code_for_stocks": "Get the stock history by code.",
    "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks": "Get the current stock by exchange code and stock code.",
    "get_the_stock_history_by_exchange_code_and_stock_code_for_stocks": "Get the stock history by exchange code and stock code.",
    "get_last_n_candles_nse_for_stockseyes": "The /getLastNCandles API returns latest n number of candles formed for given trading symbol and time frame. The timeFrame parameter allows you to select the time frame of candleStick, with options of 1m, 5m, 15m, or 1h for 1 minute candle, 5 minute candle, 15 minute candle, 1 hour candle respectively. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in.",
    "get_latest_quote_for_stockseyes": "The /getLatestQuote API returns latest realtime quote for for given trading symbol. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in.\nSee the list of trading symbols [here](https://stockseyes.com/group/all).",
    "get_latest_candle_nse_for_stockseyes": "The /getLatestCandle API returns latest realtime candle formed for given trading symbol and time frame. The timeFrame parameter allows you to select the time frame of candleStick, with options of 1m, 5m, 15m, or 1h for 1 minute candle, 5 minute candle, 15 minute candle, 1 hour candle respectively. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in.",
    "recipient_for_finhost": "List of the recipients for the client",
    "recipient_search_currency_for_finhost": "Receive recipient info and default account",
    "busca_por_simbolo_for_alpha_vantage": "buscar dados pelo simbolo",
    "income_statement_for_fmpcloud": "Get Company Income Statement In JSON format",
    "cash_flow_statement_for_fmpcloud": "Get Cash Flow Statement in JSON Format",
    "supported_currencies_for_currency_converter_v2": "get a list of currencies we support",
    "convert_for_currency_converter_v2": "Convert between Currencies.",
    "get_last_5_news_for_cryptoinfo": "Get last 5 actual and processed financial news",
    "get_news_over_a_period_of_time_for_cryptoinfo": "You can get news from one date to another. Maximum from 1 day range",
    "get_economic_calendar_news_over_a_period_of_time_for_cryptoinfo": "You can get news from one date to another. Maximum from 30 days range",
    "stock_getlateststock_for_stock_api": "Get the latest stock information.",
    "stock_getoverview_for_stock_api": "Get the Stock Overview information.",
    "ping_for_stock_api": "Ping API",
    "swift_codes_by_country_for_bank_swift_codes": "Returns list of SWIFT codes for a country (use two letter ISO country code)",
    "swift_code_for_bank_swift_codes": "Returns details of a SWIFT code",
    "banks_by_country_for_bank_swift_codes": "Returns list of banks for a country (use two letter ISO country code)",
    "get_last_cryptocurrency_news_for_crypto_news_api": "This end point returns all the latest articles on cryptocurrency",
    "get_last_5_economic_calendar_news_for_cryptoinfo": "Get last 5 actual and processed economic calendar news",
    "trend_for_yahoo_finance": "This reflects the insurance company's profits over given periods of time.\nThis endpoint also gives **experts** & **AI supported predictions** about stock future behavior",
    "historic_data_for_yahoo_finance": "return historic data\ninterval - The time interval between two data points. Can be 1m 2m 5m 15m 30m 60m 90m 1h 1d 5d 1wk 1mo 3mo\nrange - The range for which the data is returned.\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd",
    "finance_analytics_for_yahoo_finance": "This API endpoint also returns **AI recommendation**\nFinancial analysis refers to an assessment of the viability, stability, and profitability of a business, sub-business or project. It is performed by professionals who prepare reports using ratios and other techniques, that make use of information taken from financial statements and other reports.",
    "api_user_userid_for_1p_challenge": "Retreive a user object, their logs and calendar of savings",
    "api_create_user_for_1p_challenge": "Creates a new user within the system, returning the userId",
    "api_user_userid_undo_latest_for_1p_challenge": "Undo the latest savings log from a user (fat-finger click)",
    "index_for_yahoo_finance": "Trend Analysis is a relatively straightforward quantitative demand forecasting technique that uses the historical relationship between the operational index (i.e. sales level) and the number of employees required by the organization (demand for labour) to forecast future requirements.",
    "earnings_for_yahoo_finance": "A company's earnings are its after-tax net income. This is the company's bottom line or its profits. Earnings are perhaps the single most important and most closely studied number in a company's financial statements.\nThis API **also** returns **historical earnings**",
    "service_status_for_luhn_algorithm": "Returns service status",
    "validate_card_number_for_luhn_algorithm": "Validates given card number",
    "get_bnb_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the BNB balance of an address in a specific network.",
    "get_bitcoin_balance_for_cryptocurrency_balance": "This endpoint will return back the Bitcoin balance of an address",
    "get_cosmos_balance_for_cryptocurrency_balance": "This endpoint will return back the Cosmos balance of an address",
    "viewoverallscreeningresult_for_cleardil": " ",
    "fetchallnotes_for_cleardil": " ",
    "fetchallindividualcustomers_for_cleardil": " ",
    "mostrecentshortvolume_for_short": "MostRecentShortVolume",
    "git_all_world_currencies_prices_for_cion_prices_api": "This end point will return back prices of world currencies",
    "get_currency_by_name_for_cion_prices_api": "get several states of one currency prices",
    "validate_iban_for_iban_validation": "Validate IBAN",
    "api_for_tnd_exchange_rate": "GET the average exchange rate of TND against USD & EUR",
    "timeframe_for_currencyapi_net": "Display a currency conversion's historical rates within a given timeframe",
    "convert_for_currencyapi_net": "Convert a custom amount value from one currency to another",
    "rates_for_currencyapi_net": "Get live currency conversion rates of a given currency",
    "price_for_yahoo_finance": "Returns the Stock Price Information for the symbol passed as parameter\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd\nfor eth try : eth-usd\nfor dogecoin try : doge-usd",
    "search_for_yahoo_finance": "search for tickers with similar name",
    "fetchindividualcustomer_for_cleardil": " ",
    "fetchoneassociationbelongingtoamatch_for_cleardil": " ",
    "fetchamatch_for_cleardil": " ",
    "days_from_date_for_futures": "This endpoint returns futures contracts for the date falling on the number of days from the date you specified. This is useful for getting contracts closest to a date without having to determine the last date the contract was traded.\n\nConsider wanting contracts for WTI Crude that were traded 30 days before Christmas 2021, with Thanksgiving in the US being November 25, which date were contracts last traded? Specifying the dateFrom parameter as \"2021-12-25\" and the daysFrom parameter as 30 removes the guess work and gives the contract less-than-or-equal-to 30 days from the <dateFrom> parameter.\n\nUse the optional <month> parameter to get a specific month contract.\n\nUse the optional <inPast> parameter to specify if <daysFrom> should be added or subtracted from <dateFrom>. Setting <inPast> to false will result in contracts that fall after the given date. Default is true.\n\n**\u2734 Return Limited: 100 Objects\n\u2734 Oldest Date: 2010-01-01**\n\n*This endpoint will only return 100 objects per request. Use the <offset> parameter to paginate results.*",
    "supported_assets_for_futures": "This endpoint returns all symbols supported by the * last *and* time-series *endpoint.",
    "latest_contracts_for_symbol_for_futures": "This endpoint returns each of the latest futures contracts for a given symbol for the next twelve months.\n\nUse the optional *<month>* parameter to return the latest contract for a given month.",
    "24_hours_tickers_for_quantaex_market_data": "24 hours trading data",
    "1_availablesymbols_endpoint_for_currenciesexchangerateapi": "Endpoint URL: /availablesymbols\nHTTP Method: GET\nResponse: This endpoint returns a list of all the available currency symbols that can be used for conversion in JSON format.\nsupports 170 symbols for currencies",
    "4_date_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'date': \n'symbols': \n'base': \nResponse: This endpoint returns the exchange rates for the specified currencies on the specified date in JSON format.",
    "2_convert_endpoint_for_currenciesexchangerateapi": "Endpoint URL: /convert?to=USD&from=EUR&amount=100&date=2023-02-01\nHTTP Method: GET\nRequest Parameters:\n'to': The target currency symbol. (Required)\n'from': The source currency symbol. (Required)\n'amount': The amount to be converted. (Required)\n'date': \nResponse: This endpoint returns the converted amount and the exchange rate used for the conversion in JSON format.",
    "get_call_for_indian_bank_account_verification": "Used to fetch api result using the request id received in responses.",
    "fetchallassociationsbelongingtoamatch_for_cleardil": " ",
    "v1_exchangerate_for_exchange_rate_by_api_ninjas": "API Ninjas Exchange Rate API endpoint.",
    "prices_for_redstone": "Redstone HTTP API currently has a single yet very powerful endpoint, which allows you to fetch prices data.",
    "get_calculate_investment_for_calcx_investment_api": "This endpoint performs multiple investment calculations in a single request. It accepts a list of investment parameters, such as principal amount, rate of return, time period, and compounding frequency, and returns a list of investment results, including the simple interest, compound interest, investment returns, return on investment, capital gains tax, and annual percentage yield of each investment.",
    "posting_account_for_finhost": "List assets transfers for the account",
    "client_for_finhost": "Client info",
    "fee_payment_for_finhost": "Calculates transfer payment according to the fee plan",
    "advanced_chart_for_chart_img": "This endpoint captures TradingView advanced real-time chart image.",
    "mini_chart_for_chart_img": "This endpoint captures TradingView mini chart image.",
    "currencies_for_currency_converter_v3": "Endpoint to retrieve all supported currencies.",
    "converter_for_currency_converter_v3": "This endpoint is used to perform currency conversion between multiple currencies. The endpoint accepts input parameters in the form of the amount of money, source currency, and one or more target currencies.",
    "get_text_from_number_for_number2text": "This endpoint returns the text base from the number.\nLanguages: en, fr, de, ro, es, pt, hu, it, da, pl",
    "coinjournal_for_crypto_news_v2": "Get the latest news from CoinJournal.",
    "yahoofinance_for_crypto_news_v2": "Get the latest news from Yahoo Finance.",
    "coincu_for_crypto_news_v2": "Get the latest news from CoinCu.",
    "currencies_for_currencyapi_net": "Gets list of currencies we support",
    "gedetailedtinsiders_for_insiders": "Get insiders with details",
    "history_for_currencyapi_net": "Display the currency conversions historical rates for a particular day",
    "3_fluctuation_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'start_date': \n'end_date': \n'base': \n'symbols': \nResponse: This endpoint returns the percentage change in the exchange rates of the specified currencies over the specified time period in JSON format.",
    "get_user_for_smile": "Get a particular user profile.",
    "list_webhooks_for_smile": "List all webhook endpoints.",
    "get_income_for_smile": "Get the user's income by ID.",
    "consulta_for_consulta_de_boleto": "Recebe como par\u00e2metro de busca, a linha digit\u00e1vel do boleto e devolve as informa\u00e7\u00f5es do mesmo.",
    "iamrich_for_i_am_rich": "Since so many people asked for it.\n\nBe part of the fun !",
    "get_the_current_stock_by_code_for_stocks": "Get the current stock by code.",
    "fundid_for_mutual_fund_nav": "current Nav",
    "get_cryptocurrency_details_for_crypto_update_live": "This endpoint gives live detailed information about the current value of a particular cryptocurrency.",
    "get_top_100_cryptocurrencies_list_for_crypto_update_live": "This endpoint gives the list of the top hundred cryptocurrencies.",
    "api_global_tracking_for_1p_challenge": "Shows all tracked savings",
    "get_symbols_for_ohlc_history_forex": "Get all available forex pairs",
    "get_ohlc_history_for_ohlc_history_forex": "Get  OHLC for the requested currency pair",
    "v1_cryptosymbols_for_crypto_symbols_by_api_ninjas": "API Ninjas Crypto Symbols API",
    "health_for_candlestick_chart": "Health check",
    "binance_charts_for_candlestick_chart": "This endpoint creates candlestick charts for any cryptocurrency listed on [Binance](https://www.binance.com) that you want!",
    "currencytoall_for_currency_v2": "Service that converts the entered exchange rate to other currencies.",
    "cripto_for_currency_v2": "Bitcoin and Altcoins prices, changes in the instant service.",
    "exchange_for_currency_v2": "The currency converter service that converts the entered rate into the desired exchange rate.",
    "fetchdriving_licensedocument_for_cleardil": " ",
    "downloadtheattacheddriving_licensefromthedocument_for_cleardil": " ",
    "cointelegraph_for_crypto_news_v2": "Get the latest news from CoinTelegraph.",
    "cryptoninjas_for_crypto_news_v2": "Get the latest news from CryptoNinjas.",
    "dark_cloud_cover_for_barpatterns": "List of stocks having Dark Cloud Cover signal.",
    "rsi_oversold_for_barpatterns": "List of stocks having RSI Oversold signal.",
    "supertrend_buy_for_barpatterns": "List of stocks having Supertrend Buy signal.",
    "fetchaverification_for_cleardil": " ",
    "viewallscreeningsresult_for_cleardil": " ",
    "web_pair_trade_data_for_open_defi": " ",
    "web_impressive_numbers_for_open_defi": " ",
    "web_pair_details_for_open_defi": " ",
    "top_news_for_crypto_news_v2": "Get the top latest news from CoinDesk.\n\nSelect number of articles to return. Maximum limit depends on the provider which is usually 50+ articles for CoinDesk. The first articles are the latest.\n\nExample URLs:\n/news/top/5\n/news/top/20\n/news/top/1000  (if only 50 articles are available then 50 is returned)",
    "fetchanote_for_cleardil": " ",
    "screeningstats_for_cleardil": " ",
    "job_salary_for_job_salary_data": "Get estimated job salaries/pay by job title and location.",
    "get_ticker_for_the_shrimpy_universal_crypto_exchange_interface": "This endpoint retrieves all Shrimpy supported exchange assets for a particular exchange along with pricing information. The pricing information is updated once per minute.",
    "symbols_for_currency_v2": "Service that brings the names and symbols of exchange rates.",
    "esg_for_yahoo_finance": "Simply explained, an ESG score is a measure of a company's exposure to long-term environmental, social, and governance risks that are often overlooked during traditional financial analyses.",
    "get_holo_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Holo balance of an address in a specific network.",
    "get_ontology_gas_balance_for_cryptocurrency_balance": "This endpoint will return back the Ontology Gas balance of an address",
    "get_chiliz_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Chiliz balance of an address in a specific network.",
    "get_multiple_coin_details_for_your_choice_for_crypto_update_live": "This endpoint gives live detailed information about the current value of multiple cryptocurrencies. Separate coin name using \"_\" underscore symbol.",
    "discounted_cash_flow_models_dcf_s_for_marketci_analytics": "Artificial Intelligence-powered DCF's for Cash Flow forecasts and assumptions.",
    "peers_for_marketci_analytics": "Get List of Company Peers",
    "peer_ratio_averages_for_marketci_analytics": "An Average of Company Peer Ratios for TTM Data",
    "get_shiba_inu_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Shiba Inu balance of an address in a specific network.",
    "get_vethor_token_balance_for_cryptocurrency_balance": "This endpoint will return back the VeThor Token balance of an address",
    "get_dogelon_mars_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Dogelon Mars balance of an address in a specific network.",
    "balance_sheet_for_yahoo_finance": "A **balance sheet** is a financial statement that communicates the so-called \u201cbook value\u201d of an organization, as calculated by subtracting all of the company's liabilities and shareholder equity from its total assets.",
    "exchange_currency_and_show_thier_countries_for_currency_converter_v5": "A simple API that allows you to exchange a specific currency to another, and see in which countries you can use this currency",
    "searchscreeningsdone_for_cleardil": " ",
    "coindesk_for_crypto_news_v2": "Get the latest news from CoinDesk.",
    "web_pairs_for_open_defi": "\nQuery different combinations of the trading pairs.\n\nThe most common query is all trading pairs of a decentralised exchange.\n\n`/pairs?chain_slugs=ethereum&exchange-slugs=uniswap-v2`\n\nThe results are always paginated.\n\n## Parameter seralisation\n\nNote that lists are not JSON serialised, but use [OpenAPI query parameter serialization](https://swagger.io/docs/specification/serialization/). I.e. lists are comma separated, no spaces between items.\n",
    "web_chain_details_for_open_defi": " ",
    "6_timeseries_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'start_date': \n'end_date': \n'base': \n'symbols': \nResponse: This endpoint returns the exchange rates for the specified currencies over the specified time period in JSON format.",
    "doji_for_barpatterns": "List of stocks having Doji signal.",
    "latest_signals_for_barpatterns": "Returns list of all latest signals order by date.",
    "inverted_hammer_for_barpatterns": "List of stocks having Inverted Hammer signal.",
    "time_series_for_futures": "This endpoint returns futures contracts over a specified date range for a given symbol. Use this endpoint for historical data.\n\nThe <to> parameter is optional. Not specifying this parameter will return all contracts between the given <from> parameter and the latest available date.\n\nUse the optional <month> parameter to get a specific month contract over the given period of time.\n\n**\u2734 Return Limited: 100 Objects\n\u2734 Oldest Date: 2010-01-01**\n\n*This endpoint will only return 100 objects per request. Use the <offset> parameter to paginate results.*",
    "get_vechain_balance_for_cryptocurrency_balance": "This endpoint will return back the Vechain balance of an address",
    "get_cordano_balance_for_cryptocurrency_balance": "This endpoint will return back the Cordano balance of an address",
    "account_for_finhost": "Return the list of the balances for the client accounts",
    "supertrend_sell_for_barpatterns": "List of stocks having Supertrend Sell signal.",
    "stock_list_for_barpatterns": "Get list of stocks covered by the screener. Result includes stock information.",
    "bullish_harami_for_barpatterns": "List of stocks having Bullish Harami signal.",
    "statistics_for_yahoo_finance": "Key Statistics are **important points of financial data that allow you to quickly view and ascertain transaction history**, as well as provide insight into donation trends. These statistics can be found both on the Dashboard as entire database summaries and on an individual basis at the top of each entity record.",
    "get_tron_balance_for_cryptocurrency_balance": "This endpoint will return back the TRON balance of an address",
    "get_icon_balance_for_cryptocurrency_balance": "This endpoint will return back the ICON balance of an address",
    "get_tezos_balance_for_cryptocurrency_balance": "This endpoint will return back the Tezos balance of an address",
    "5_latest_endpoint_for_currenciesexchangerateapi": "Endpoint URL:/latest?symbols=EUR&base=usd\nHTTP Method: GET\nRequest Parameters:\n'symbols': \n'base': \nResponse: This endpoint returns the latest exchange rates for the specified currencies in JSON format.",
    "morning_star_for_barpatterns": "List of stocks having Morning Star signal.",
    "piercing_line_for_barpatterns": "List of stocks having Piercing Line signal.",
    "macd_crossover_down_for_barpatterns": "List of stocks having Macd crossover down signal.",
    "qrcode_for_getqrcode": "qrcode",
    "getgamelevel_for_music_trivia": "get a game level with a level parameter. The level this does not imply difficulty",
    "get_san_francisco_chronicle_news_for_news_in_bay": "Get all news titled with keyword (sources via San Francisco Chronicle )",
    "get_all_news_for_news_in_bay": "Get all news titled with keyword (sources via San Francisco Chronicle / SFGATE / abc7News)",
    "n_for_newapi": "new var",
    "url_for_newapi": "url",
    "collection_for_rijksmuseum": "GET /api/[culture]/collection gives the full collection with brief information about each work. This results are split up in result pages. By using the p and ps parameters you can fetch more results. All of the other parameters are identical to the search page on the Rijksmuseum website. You can use that to find out what's the best query to use",
    "get_user_profile_for_9gag_api_detailed_": "Returns user profie.",
    "get_posts_from_page_for_9gag_api_detailed_": "Returns page posts.",
    "get_user_posts_for_9gag_api_detailed_": "Returns user posts.",
    "getwebsitespdf_for_images_infos_api1": "Get a PDF from a website",
    "getwebsitesscreenshot_for_images_infos_api1": "Capture a screenshot from website",
    "reels_downloader_for_instagram_reels_and_post_downloader": "You only need to provide the link to your Instagram media, and our API will give you the results in Download links of reels and posts",
    "posts_for_instagram_reels_and_post_downloader": "Download post using instagram url",
    "movies_id_for_streamlinewatch_streaming_guide": "Return the metadata associated with the specified movie.",
    "shows_id_for_streamlinewatch_streaming_guide": "Return the metadata associated with the specified show.",
    "regions_for_streamlinewatch_streaming_guide": "Retrieve the list of regions covered by the API",
    "create_qr_code_for_easy_qr_code_generator": "Turn any URL or even text into a downloadable and printable QR code",
    "get_video_info_for_youtube_video_info": "dzdadaz",
    "media_sources_statistics_for_public_url_share": "Search and find details or statistics on media sources",
    "top_50_startups_news_from_the_last_month_for_public_url_share": "Top 50 startups news from the last month",
    "shows_for_streamlinewatch_streaming_guide": "Returns the basic metadata for all shows available for playback in a specific region. The results are ordered by popularity or alphabetical order. You may get additional information about each show using its ID.",
    "search_title_for_open_library": "Searches for books by title.",
    "search_author_for_open_library": "Searches for authors.",
    "items_for_hacker_news": "Stories, comments, Ask HNs and polls are considered items identified by ids (unique integers)",
    "changed_items_and_profiles_for_hacker_news": "Returns the item and profile changes.",
    "users_for_hacker_news": "Users are identified by case-sensitive ids",
    "search_for_giphy": "Search all Giphy GIFs for a word or phrase. Punctuation will be stripped and ignored. Use a plus or url encode for phrases.",
    "get_gif_by_id_for_giphy": "Returns meta data about a GIF, by GIF id. In the below example, the GIF ID is \"feqkVgjJpYtjy\"",
    "get_gifs_by_id_for_giphy": "A multiget version of the get GIF by ID endpoint. In this case the IDs are feqkVgjJpYtjy and 7rzbxdu0ZEXLy",
    "top_stories_for_hacker_news": "Returns the current top 100 stories.",
    "max_item_id_for_hacker_news": "Returns the current largest item id",
    "go_for_text_to_speech_tts_engine_": "Convert textual content to .mp3",
    "get_categories_for_9gag_api_detailed_": "Returns all categories.",
    "get_post_data_download_video_photo_for_9gag_api_detailed_": "Returns post data. Includes download link for videos.",
    "user_details_xml_for_yts_am_torrent": "Get the user details",
    "user_details_jsonp_for_yts_am_torrent": "Get the user details",
    "list_movies_json_for_yts_am_torrent": "Used to list and search through out all the available movies. Can sort, filter, search and order the results",
    "kitten_for_placekitten": "",
    "get_posts_from_category_for_9gag_api_detailed_": "Returns post from specific category. Uses cursor as **after** parameter.",
    "extracttext_for_images_infos_api2": "Extract text from an image",
    "extracthandwriting_for_images_infos_api2": "Extract text from an image",
    "getcolorpalettefromimageurl_for_images_infos_api2": "Get palette from image",
    "movies_for_streamlinewatch_streaming_guide": "Returns the basic metadata for all movies available for playback in a specific region. The results are ordered by popularity or alphabetical order. You may get additional information about each movie using its ID.",
    "genres_for_streamlinewatch_streaming_guide": "Return a list of all genres",
    "get_stream_url_for_youtube_video_stream_download": "Get Stream Url",
    "get_video_info_for_youtube_video_stream_download": "Get basic informations of video/stream or shorts.",
    "get_video_urls_for_youtube_video_stream_download": "Get video/shorts urls for",
    "get_top_games_for_twitch": "Returns an array of top games on Twitch by current viewers.",
    "random_for_baby_pig_pictures": "Generates a random baby pig image for whatever your needs are, even enjoyment.",
    "shows_id_episodes_for_streamlinewatch_streaming_guide": "List all the episodes from the show",
    "trending_for_bing_image_search": "Get currently trending images.",
    "image_search_for_bing_image_search": "Get relevant images for a given query.",
    "get_channel_panels_for_twitch_api": "Get Channel Panels",
    "get_viewer_card_pleb_info_for_twitch_api": "Get Viewer Card (Pleb info)",
    "get_channel_points_context_for_twitch_api": "Returns channel points info.",
    "getmetadatafromimage_for_images_infos_api2": "Get metadata from image",
    "single_multiple_video_for_aol_on_network": "To access the data for a specific video, you simply request a URL from Aol On Network's API with the specific video ID you want.",
    "searching_for_videos_for_aol_on_network": "You can search our library using this request:",
    "get_user_id_for_twitch_api": "Returns user id.",
    "get_channel_goals_for_twitch_api": "Returns channel goals.",
    "get_pinned_chat_for_twitch_api": "Returns pinned chat.",
    "random_for_giphy": "Returns a random GIF, limited by tag. Excluding the tag parameter will return a random GIF from the Giphy catalog.",
    "get_stream_tags_for_twitch_api": "Returns stream tags.",
    "get_streamer_info_for_twitch_api": "Returns streamer info.",
    "get_channel_leaderboards_for_twitch_api": "Returns leaderboard.",
    "theofficialvkr_for_convm": "put video url to download",
    "image_generation_endpoint_for_bruzu": "Image endpoint.\nCheck docs.bruzu.com for more information.",
    "api_documentation_for_pikwy": "Use our simple API to capture screenshots of websites.",
    "get_movie_for_magisto": "Downloading of the completed movie",
    "check_movie_status_for_magisto": "Check the state of the movie session",
    "getchannelvideos_for_vimeo": "Get a list of the videos in a channel.",
    "getchannelinfo_for_vimeo": "Get the information on a single channel.",
    "getvideofromuser_for_vimeo": "Get all videos credited to a user (both uploaded and appears).",
    "video_for__cheap_youtube_api_": "Get all info about single Youtube video\nexample:  /videos/dQw4w9WgXcQ",
    "channel_for__cheap_youtube_api_": "Get all info and videos from a channel\nexample:  /channels/UCN9Nj4tjXbVTLYWN0EKly_Q",
    "search_suggestions_for__cheap_youtube_api_": "Get search suggestions for a query\n\nexample: \n/search/suggestions?q=crypto",
    "artist_search_for_shazam": "This endpoint let you search for an artist by their name. You can get a list of artists from its name.",
    "track_info_for_shazam": "This endpoint will return info of any track from shazam.com",
    "track_recommendations_for_shazam": "This endpoint will return the recommendation or similar songs of the given track.",
    "getrelatedvideos_for_vimeo": "",
    "getrelatedpeople_for_vimeo": "Get a list of related people for a category.",
    "getrelatedtags_for_vimeo": "Get a list of related tags for a category.",
    "getallcategories_for_vimeo": "",
    "searchvideos_for_vimeo": "Search for videos.",
    "get_post_comments_for_9gag_api_detailed_": "Returns post comments. Uses cursor (**after **parameter).",
    "get_random_named_color_for_colorful": "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the list of named color keywords that can be used in CSS according to the W3 standard. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not.",
    "get_a_random_color_for_colorful": "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Any quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the sRGB color space. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not. If the color has a name that can be used in CSS, the name(s) will also be included. The nearest color(s) will also be included.",
    "top_track_by_city_for_shazam": "This endpoint will give the top song in specific city",
    "search_track_for_shazam": "This endpoint will search for the name of any song and return similar songs with the name.",
    "artist_info_for_shazam": "This endpoint will extract information of any artist from https://www.shazam.com.",
    "get_channel_videos_for_twitch_api": "Returns Channel Videos",
    "sticker_trending_for_giphy": "Get the latest stickers trending on Giphy with this endpoint.",
    "translate_for_giphy": "This is prototype endpoint for using Giphy as a translation engine for a GIF dialect. The translate API draws on search, but uses the Giphy \"special sauce\" to handle translating from one vocabulary to another. In this case, words and phrases to GIFs. Use a plus or url encode for phrases.",
    "get_all_details_for_youtube_video_stream_download": "Get all details of a video/stream/shorts (Captions , Audios Only, Videos Only , Videos, Stream url) if available.",
    "list_upcoming_xml_for_yts_am_torrent": "Returns the 4 latest upcoming movies",
    "list_movies_xml_for_yts_am_torrent": "Used to list and search through out all the available movies. Can sort, filter, search and order the results",
    "movie_details_jsonp_for_yts_am_torrent": "Returns the information about a specific movie",
    "get_stream_views_for_twitch_api": "Returns stream view info.",
    "get_categories_for__demo_project": " ",
    "get_product_for__demo_project": " ",
    "get_products_for__demo_project": " ",
    "fetch_task_status_and_get_download_link_for_online_video_downloader": "/tasks/{id} pass the id you get when you call create download task api...\nonce you create the download task use this api to fetch the status of the download link generation.\nCheckout the **About** section for api docs.\nAll steps will be found in the **About** section of api.",
    "sticker_search_for_giphy": "Replicates the functionality and requirements of the classic Giphy search, but returns animated stickers rather than gifs.",
    "sticker_roulette_for_giphy": "Returns a spotaneously selected sticker from Giphy's sticker collection. Optionally limit scope of result to a specific tag. Like the GIF random endpoint, Punctuation will be stripped and ignored. Use a hyphen for phrases. Example oops, birthday or thank-you. Search terms should be URL encoded.",
    "get_products_in_category_for__demo_project": " ",
    "get_all_characters_for_riordanverse_api": "Get all characters\n\nOptions:\n\n- Limit \u2192 Limit amount of responses received\n- Step \u2192 Skip amount of characters\n- Search \u2192 Return characters with provided substring",
    "get_character_by_id_for_riordanverse_api": "Get individual character by ID\nOptions:\n\n- Limit \u2192 Limit amount of responses received\n- Step \u2192 Skip amount of characters",
    "me_for__demo_project": " ",
    "list_upcoming_json_for_yts_am_torrent": "Returns the 4 latest upcoming movies",
    "movie_details_json_for_yts_am_torrent": "Returns the information about a specific movie",
    "get_music_post_video_list_for_tiktok_download_video_": "get music post video list",
    "get_reply_list_by_comment_id_for_tiktok_download_video_": "get reply list by comment id",
    "get_music_info_for_tiktok_download_video_": "get music info",
    "getrelatedchannels_for_vimeo": "",
    "search_user_for_tiktok_download_video_": "get user list by keywords",
    "get_user_favorite_videos_for_tiktok_download_video_": "get user favorite videos for latest\nunique_id or user_id is not empty",
    "get_user_following_list_for_tiktok_download_video_": "get user following list",
    "get_tiktok_video_info_for_tiktok_download_video_": "Get tiktok video full info. HD Quality, No Watermark. Fast.\nSupport Tiktok & Douyin.\nSupport Getting Image List.\nSupport Tiktok Stories.",
    "user_follower_list_for_tiktok_download_video_": "get user follower list",
    "get_feed_video_list_by_region_for_tiktok_download_video_": "get feed video list by region",
    "playlist_for__cheap_youtube_api_": "Get playlist\nexample:\n/playlists/PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb",
    "search_for__cheap_youtube_api_": "Get search results\n\nexample:\n/search?q=crypto",
    "getvideosbytag_for_vimeo": "Get a list of videos that have the specified tag.",
    "getvideoscomment_for_vimeo": "Get a list of the comments on a video.",
    "search_for_streamlinewatch_streaming_guide": "Returns a list of titles that match the query.",
    "movie_comments_json_for_yts_am_torrent": "Returns all the comments for the specified movie",
    "movie_comments_jsonp_for_yts_am_torrent": "Returns all the comments for the specified movie",
    "movie_suggestions_xml_for_yts_am_torrent": "Returns 4 related movies as suggestions for the user",
    "movie_parental_guides_xml_for_yts_am_torrent": "Returns all the parental guide ratings for the specified movie",
    "get_chat_restrictions_for_twitch_api": "Returns chat restrictions.",
    "movie_comments_xml_for_yts_am_torrent": "Returns all the comments for the specified movie",
    "movie_parental_guides_json_for_yts_am_torrent": "Returns all the parental guide ratings for the specified movie",
    "movie_details_xml_for_yts_am_torrent": "Returns the information about a specific movie",
    "trending_gifs_for_giphy": "Fetch GIFs currently trending online. The data returned mirrors that used to create The Hot 100 list of GIFs on Giphy. Returns 25 results by default.",
    "artist_top_tracks_for_shazam": "This endpoint will return the top tracks of the artist",
    "get_for_e_commerce_delivery_status": "Display data on console",
    "getstocktransations_for_appibase": "Get all stock item transations",
    "getcarts_for_appibase": "Get all carts",
    "getstocktransaction_for_appibase": "Get a stock transaction",
    "get_a_product_details_for_amazon_scrapper_v4": "GET a product details.\nYou can get the product id from the URL when you search for a particular product. It is the next value after '/dp/'.\nEg: B08N5WG761 is the value we want from the url - \nhttps://www.amazon.in/Apple-MacBook-Chip-13-inch-256GB/dp/B08N5WG761/",
    "get_a_product_reviews_for_amazon_scrapper_v4": "GET a product reviews",
    "get_search_results_for_amazon_scrapper_v4": "GET search results",
    "keyword_search_for_axesso_otto_data_service": "Retrieve keyword search results.",
    "product_details_for_axesso_otto_data_service": "Query product details information.",
    "reviews_for_axesso_otto_data_service": "Query product reviews.",
    "bestbuyproductdata_for_bestbuy_product_data_api": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)",
    "getproducts_for_get_and_compate_products_allover_the_web": "Search for products by name and retrieve newly added items from the last X days, among other features.",
    "bestbuyproductdata_for_bestbuy_product_data": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)",
    "get_comments_with_product_id_for_amazon_data_v3": "Retrieve comments based on a product id.",
    "product_details_experimental_for_real_time_amazon_data": "Get product details. Currently returns the Product Information table data, as seen on specific product pages on Amazon.com (e.g. https://www.amazon.com/dp/B09TBLBFXC).",
    "search_for_real_time_amazon_data": "Search for products offers on Amazon.",
    "product_reviews_for_real_time_amazon_data": "Get and paginate through all product reviews on Amazon.",
    "stores_list_for_target": "List available nearby store by zipcode, GEO location, or city name. One at a time, do NOT use them together at once.",
    "products_list_deprecated_for_target": "List products in specific store with options and filters",
    "products_list_recommended_deprecated_for_target": "List more products to consider",
    "tax_rate_for_simple_taxrate_retrieval": "Obtain tax rate by zip code",
    "get_category_tree_category_tree_get_for_shopee_v2": "Get shopee category tree",
    "get_product_details_by_url_product_url_get_for_shopee_v2": "Get product details using product url",
    "get_product_details_product_get_for_shopee_v2": "Gets product details using item_id, shop_id and region",
    "product_details_for_temu_com_shopping_api_realtime_api_scrapper_from_temu_com_": "Returns the product details information based on the given goodsId (product id defined by temu, returned by the /search endpoint)\nResponse includes:\n- price information\n- product reviews\n- offers/availability\n- sku - variants in different options like size, color etc.\n- metadata, image gallery, description ...\n\n-",
    "product_search_for_temu_com_shopping_api_realtime_api_scrapper_from_temu_com_": "Search for list of products by providing the keyword.",
    "redbubble_for_redbubble_scraper": "Get items per page, you can optionally specify a search term, specific categories or ordering",
    "products_list_for_hm_hennes_mauritz": "List products from H&M with options to sort, filter, or search for products by name",
    "regions_list_for_hm_hennes_mauritz": "List regions H&M supported",
    "categories_list_for_hm_hennes_mauritz": "List all categories from H&M",
    "gapd_for_amazonapi": "njnjnejn",
    "target_store_location_search_for_target_com_store_product_reviews_locations_data": "The endpoint returns Target Store locations details\n\n- Only US **zip** codes are accepted\n- **radius** is in miles",
    "product_details_for_target_com_store_product_reviews_locations_data": "The endpoint returns single product details\n\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**",
    "product_reviews_for_target_com_store_product_reviews_locations_data": "The endpoint returns product reviews",
    "get_comments_from_product_id_for_hepsiburada_data": "Retrieve comments based on a product id.",
    "fetch_company_details_for_comany_details_search_online": "Fetch Company Details by company name",
    "details_for_price_comparison": "get details on the product",
    "offers_for_price_comparison": "list offers for the product",
    "keyword_search_for_axesso_kaufland_data_service": "Retrieve keyword search results.",
    "product_details_for_axesso_kaufland_data_service": "Query product details information.",
    "get_comments_with_product_id_for_n11_data": "Retrieve comments based on a product id.",
    "screenshot_for_website_screenshot": "Take a screenshot from a webpage url.",
    "barcode_for_barcode": "Generate barcode images",
    "get_list_of_github_repo_for_ruby_webscrapping_for_leo_github_data_scraper": "Get list of Github repo for Ruby Webscrapping",
    "get_top_30_of_github_repos_based_on_a_query_for_leo_github_data_scraper": "Get top 30 of Github repos based on a query",
    "tmall_search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword",
    "get_product_detail_for_taobao_tmall_product_detail": "Get product detail",
    "get_sku_promotion_for_taobao_tmall_product_detail": "Get SKU, Price, Propperties Image",
    "22_getsendbirduser_for_category_list": " ",
    "liste_des_pays_villes_quartiers_secteurs_et_localit_s_for_digixpress": "Base de localisation.",
    "brands_list_for_zappos": "List all brands from Zappos",
    "categories_list_deprecated_for_zappos": "List all categories from Zappos",
    "products_detail_for_zappos": "Get detail information of product by productId",
    "scraper_for_aliexpress_product": "/scraper",
    "getbarcode_for_price_tracker_south_africa": "Return prices based on barcode",
    "getproductsku_for_price_tracker_south_africa": "Return prices based on Product ID or Product Sku",
    "getproducturl_for_price_tracker_south_africa": "Return prices based on the url of the product page on the retailers website.\n\nNOTE: replace all / with a +",
    "product_category_list_for_real_time_amazon_data": "Get Amazon product categories (per country / marketplace).",
    "products_detail_deprecated_for_asos": "Get detail information of product by id",
    "products_v3_list_similarities_for_asos": "List similar products by product id",
    "products_v3_detail_for_asos": "Get detail information of product by id",
    "product_categorization_for_product_categorization": "Return category of product base on the product title.",
    "detail_page_for_ebay_de_product_details_page_scraper": "Get all Data from https://www.ebay.de/itm/ITEM_ID\n\n**Payload:** ITEM_ID",
    "cities_for_facebook_marketplace": "Facebook items cities",
    "products_for_facebook_marketplace": "Get facbook items",
    "categories_for_facebook_marketplace": "Facebook items categories",
    "shopify_store_products_for_shopify_store_scraper": "Get all the products of shopify store.",
    "single_product_for_shopify_store_scraper": "Fetch complete data of single product.",
    "categories_list_for_kohls": "List all available categories",
    "products_detail_for_kohls": "Get detail information of specific product",
    "products_search_by_barcode_for_kohls": "Search product by barcode",
    "products_search_deprecated_for_sephora": "Search products by term or phrase with options and filters",
    "v2_auto_complete_for_sephora": "Get suggestions by term or phrase",
    "products_search_by_barcode_deprecated_for_sephora": "Search product by barcode (UPC)",
    "get_a_specific_amazon_product_for_sellytics": "This endpoint returns a well formatted amazon product as json. This document contains all product properties, price, buybox, product details and so on.",
    "products_list_for_kohls": "List products with options and filters",
    "qnas_list_for_kohls": "List questions and answers relating to a product",
    "get_price_by_styleids_and_siteid_zappos_1_6pm_2_for_zappos_2022": "GET price by styleIds and shopId",
    "get_brandlist_by_siteid_zappos_1_6pm_2_for_zappos_2022": "GET BrandList by siteId (zappos =1, 6pm=2)",
    "get_stocks_info_by_styleids_siteid_zappos_1_6pm_2_for_zappos_2022": "GET stocks info by siteId & styleIds",
    "amazonproductreviews_for_amazon_product_reviews": "It will accept three parameters asin, domain, pageNum.\nFor Ex:\nasin: B087N3LWRB  (you can find it in the product page of amazon)\ndomain: amazon.co.uk  (put the domain without www, currently we only provide amazon.com, amazon.in and amazon.co.uk)\npageNum: 1 (min 1 and max depends on the number of reviews on the product.  Each page give 10 reviews)",
    "get_shipping_for_gearbest": " ",
    "get_products_from_category_for_gearbest": " ",
    "search_for_gearbest": " ",
    "get_list_of_github_repo_for_ruby_web_scrapping_for_github_api_scraper_": "Get list of GitHub repo for Ruby web scrapping",
    "get_the_top30_github_repos_based_on_a_query_for_github_api_scraper_": "Get the top30 Github repos based on a query",
    "api_product_productid_historic_prices_for_magic_aliexpress": "This endpoint returns the prices historic of product loaded by a client",
    "api_products_search_for_magic_aliexpress": "Search a product by his name",
    "api_product_productid_for_magic_aliexpress": "This resource represents a product, each product is identifier by ID",
    "get_amazon_product_details_for_dungy_amazon_data_scraper": "Get Amazon Product Details",
    "search_for_real_time_product_search": "Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter.",
    "product_reviews_for_real_time_product_search": "Get all product reviews. Infinite pagination/scrolling is supported using the *limit* and *offset* parameters.",
    "product_offers_for_real_time_product_search": "Get all offers available for a product.",
    "products_v2_list_for_asos": "List products, search products with options and filters version 2",
    "speechapi_health_for_open": " ",
    "get_product_for_gearbest": " ",
    "get_product_s_reviews_for_amazon_data_scraper_v2": "Get product's reviews",
    "get_product_s_offers_for_amazon_data_scraper_v2": "Get Product's Offers",
    "get_awesome_product_details_for_amazon_data_scraper_v2": "Get awesome product details",
    "products_get_reviews_for_unofficial_shein": "Get brief reviews of a product",
    "countries_list_for_unofficial_shein": "List all available and supported countries. This endpoint provides meta data for other endpoints.",
    "navigations_get_root_for_unofficial_shein": "Get root categories related to a tab",
    "get_top_searches_for_gearbest": " ",
    "categories_for_gearbest": " ",
    "get_reviews_for_gearbest": " ",
    "search_by_category_for_ikea_api": "Obtain a list of Ikea products information based on a specified categoryID.",
    "search_by_keyword_for_ikea_api": "Obtain a list of Ikea products information based on a keyword.",
    "countries_for_ikea_api": "Obtain a list of all the countries and languages this API supports.",
    "countries_detail_for_unofficial_shein": "Get detailed information of a country",
    "products_search_for_unofficial_shein": "Search products by keywords with options and filters",
    "zappos_product_detail_by_product_id_for_zappos_realtime_data": "Get realtime product information by product_id from Zappos",
    "category_list_for_zappos_realtime_data": "Realtime categories from Zappos",
    "zappos_search_product_for_zappos_realtime_data": "Searching realtime data from Zappos",
    "categories_v2_list_for_forever21": "List all categories from F21",
    "products_detail_deprecated_for_forever21": "Get detail information of product by id",
    "categories_list_deprecated_for_forever21": "List all categories from F21",
    "products_v2_detail_for_forever21": "Get detail information of product by id",
    "products_list_deprecated_for_forever21": "List products by category",
    "api_category_categoryid_products_for_magic_aliexpress": "This resource represents the product list; you can filter by\n - attributes\n - minimum price\n - brand \n - ship to country\n - ship from country\n - max sale price \n<br> **For information, One first request, you must not indicate the attr & brands, you retrieve this informations in the Product Object.**",
    "api_store_storeid_seller_sellerid_products_for_magic_aliexpress": "This ressource displays the products by Store",
    "api_bestsales_product_productid_priceshistory_for_magic_aliexpress": "This resource returns the historic of prices",
    "product_offers_for_real_time_amazon_data": "Get top 10 offers of a specific product on Amazon by its asin, the first offer in the list is the pinned offer returned by the **Search** endpoint. Supports filtering by product condition.",
    "natural_milk_for_natural_milk": "natural-milk",
    "get_stores_for_get_promo_codes": "Get Stores",
    "get_coupons_for_get_promo_codes": "Get Coupons",
    "get_comments_from_product_id_for__i_eksepeti_data": "Retrieve comments based on a product id.",
    "products_search_deprecated_for_forever21": "Search for product by name",
    "get_the_top_30_of_github_repos_based_on_a_query_for_leo_github_api_scraper": "Get the top 30 of Github repos based on a query",
    "get_list_of_github_repo_for_ruby_web_scrapping_for_leo_github_api_scraper": "Get list of Github repo for ruby web scrapping",
    "api_shipping_productid_for_magic_aliexpress": "This ressource displays the shipping information for one product",
    "api_bestsales_sortedbynewest_for_magic_aliexpress": "Retrieves the last best product added in the system",
    "get_a_product_offers_for_amazon_scrapper_v4": "GET a product offers",
    "categories_list_for_asos": "List categories from Asos",
    "v2_auto_complete_for_asos": "Get auto complete suggestion by product name",
    "products_list_collection_deprecated_for_target": "List whole collection relating to a product",
    "stores_get_details_for_target": "Get detail information of specific store",
    "products_v2_get_details_deprecated_for_target": "Get detail information of product",
    "products_get_filters_for_unofficial_shein": "You use this endpoint to build up the filters dynamically",
    "products_v2_list_for_forever21": "List products by category",
    "product_reviews_for_walmart_v2": "Get product reviews on Walmart.com by specifying product page url or usItemId.",
    "store_location_for_walmart_v2": "Get detailed Walmart store locations (phone number and address) by specifying the zip code.",
    "get_solicitation_for_iherb_product_data_api": "Retrieves a download link containing all over 30,000 products, in json format in a .zip file. Remember, the protocol expires in 24 hours! Download your .zip ASAP!",
    "get_all_brands_for_iherb_product_data_api": "Lists all available brands",
    "get_product_by_brand_name_for_iherb_product_data_api": "Lists all products by brand, and allows you to filter in all ways!",
    "product_details_zipcode_product_id_for_weee_grocery_api_sayweee_com_browsing_searching_details": "provide detailed product information based on the product id and user's zipcode\nproduct_id should come from the product search endpoint\nresponse also contains detailed price and availability information",
    "product_search_zipcode_keyword_for_weee_grocery_api_sayweee_com_browsing_searching_details": "provide list of products based on user's zipcode\nresponse also includes available filters/sort and categories",
    "get_sku_for_taobao_tmall_product_detail": "Get SKU, Price, Propperties Image",
    "taobao_search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword",
    "search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword",
    "products_for_makeup": "Search makeup products",
    "api_product_productid_feedbacks_for_magic_aliexpress": "This ressource displays the feedbacks for one product",
    "get_product_reviews_in_turkey_for_amazon_turkey_data_scrapeer": "This endpoint can get you product reviews in amazon tr products. This method is required the product id in the amazon tr page if you don't know you can get search with my method to. And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/",
    "get_product_offers_in_turkey_for_amazon_turkey_data_scrapeer": "This endpoint can get you product offers in amazon tr products. This method is required the product id in the amazon tr page if you don't know you can get search with my method to. And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/",
    "search_product_in_turkey_for_amazon_turkey_data_scrapeer": "This endpoint can get you search all product in amazon tr . This method is required the search key . And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/",
    "get_amazon_product_details_for_basic_amazon_scraper": "GET Product Details: Get all details pertaining to a product ID (ASIN)",
    "get_product_search_results_for_basic_amazon_scraper": "GET Product Search Results: Get product offers from a search query.",
    "get_product_offers_for_basic_amazon_scraper": "GET Product Offers: Get all offers available for a product.",
    "countallproducts_for_ecartapi": " ",
    "getasingleproduct_for_ecartapi": "<p>Searches for a selected product and shows the detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t</ul></b>",
    "getallcustomers_for_ecartapi": "<h3>FILTERS</h3>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<td>Filter</td>\n\t\t\t<td>Description</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><code>ids</code></td>\n\t\t\t<td>Filter cutomers by Id's provided</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>limit</code></td>\n\t\t\t<td>Limit size of the search</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>page</code></td>\n\t\t\t<td>Pagination number.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>sinceId</code></td>\n\t\t\t<td>Filter customers since the Id given</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>createdAt[from]</code></td>\n\t\t\t<td>Filter customers by date created from. When used <code>createdAt[to]</code><i>Required</i></td>\n\t\t</tr>\n\t\t<tr>\n      \t\t<td><code>createdAt[to]</code></td>\n      \t\t<td>Filter customers by date created to. When used <code>createdAt[from]</code><i>Required</i></td>\n    \t</tr>\n\t\t<tr>\n\t\t\t<td><code>updatedAt[from]</code></td>\n\t\t\t<td>Filter customers by date updated from. When used <code>updatedAt[to]</code><i>Required</i></td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>updatedAt[to]</code></td>\n\t\t\t<td>Filter customers by date updated to. When used <code>updatedAt[from]</code><i>Required</i></td>\n\t\t</tr>\n\t\t<tr>\n      \t\t<td><code>name</code></td>\n      \t\t<td>Filter categories by name</td>\n    \t</tr>\n\t\t<tr>\n      \t\t<td><code>search</code></td>\n      \t\t<td>Search by string</td>\n    \t</tr>\n\t\t<tr>\n      \t\t<td><code>email</code></td>\n      \t\t<td>Search customers by email</td>\n    \t</tr>\n\t\t<tr>\n\t\t\t<td><code>offset</code></td>\n\t\t\t<td>Lower limit of the results block.\n\t\t\t\tModifies the range of the results provided range goes from offset to limit</td>\n\t\t</tr>\n\t</tbody>\n</table>",
    "products_detail_for_wayfair": "Get detail information of specific product",
    "reviews_list_for_wayfair": "List reviews relating to specific product",
    "auto_complete_for_wayfair": "Get auto suggestions by term or phrase",
    "navigations_get_node_content_for_unofficial_shein": "Get children categories nested in a root category",
    "products_get_extra_info_for_unofficial_shein": "Get extra information of a product",
    "product_details_for_target_com_shopping_api": "Returns detailed product information.\nIncluding:\n```\nproduct variants (with different dimension like size, color and etc.\nratings and reviews\nitem images/videos\nprice\npromotion\nchild products\n```",
    "product_search_for_target_com_shopping_api": "Returns the list of products based on keyword.",
    "nearby_stores_for_target_com_shopping_api": "Returns the list of stores near to specified ZIP code.",
    "get_comments_from_product_id_for_trendyol_data": "Retrieve comments based on a product id.",
    "get_details_by_director_name_for_gst_number_search_by_name_and_pan": "Get Director and their company details by director name",
    "get_company_details_by_company_name_for_gst_number_search_by_name_and_pan": "Suggestions To do GST Number search by name:-\nEnter the correct word (check spelling) with\nGST Verification\n\n- Enter at least ten characters of the word you want\n- Enter a state name because the company may have GST registration in various states.\n\nFor example, if you want to do the GST number search by the name of an enterprise named GIRIRAJ TRADERS IN DELHI, then search with the name mentioned above. You will get all the registered information associated with GIRIRAJ TRADERS IN DELHI.",
    "aliexpress_store_item_search_by_keyword_for_aliexpress_datahub": "In-store item search by keyword.",
    "aliexpress_item_detail_simple_for_aliexpress_datahub": "All details of a single item.",
    "aliexpress_item_detail_2_for_aliexpress_datahub": "All details of a single item. This Endpoint needs an additional request to the \"Item Description\" endpoint to fill the *Properties* and *Description* gaps.",
    "gets_products_for_amazon_india_scraper_v3": "Get The Product Details Using A Identifier(id)",
    "product_reviews_for_amazon_india_scraper_v3": "Get The Product's Reviews",
    "get_all_product_for_product": "get all products",
    "main_endpoint_for_amazon_pricing_and_product_info": "Main Endpoint for all calls",
    "search_for_a_product_for_pricer": "search by product name",
    "stores_list_for_kohls": "List stores near a provided GEO location",
    "auto_complete_deprecating_for_kohls": "Get suggestions by term or phrase",
    "reviews_list_deprecated_for_sephora": "List reviews relating to specific product",
    "brands_v2_list_for_sephora": "List brands",
    "users_for_rttrt": "used to get all users",
    "products_v2_list_similarities_deprecating_for_asos": "List similar products by product id",
    "products_search_for_wayfair": "Search for products by term or phrase",
    "products_list_for_wayfair": "List products with filters and options",
    "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!",
    "marketplace_list_for_amazon_data_v2": "This endpoint lists down the market places we use to fetch data!",
    "get_likecounts_by_itemids_styleids_for_zappos_2022": "GET likeCounts by itemIds(styleIds)",
    "paidaccess_for_ai_powered_wishscraper_api": "This endpoint provides access to the full suite of features available to premium or paid users. It allows you to retrieve data with fewer restrictions and higher limits than the free access endpoint.",
    "freeaccess_for_ai_powered_wishscraper_api": "This endpoint provides access to the basic features available to free or unpaid users. It allows you to retrieve data according to the limitations and restrictions set for free users.",
    "search_shops_for_yiwugo_product_data": "search shops by keyword.\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)",
    "get_product_detail_for_yiwugo_product_data": "get product detail by item_id,\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)",
    "search_products_for_yiwugo_product_data": "search products\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)",
    "getorderbyid_for_swagger_petstore": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
    "getpetbyid_for_swagger_petstore": "Returns a single pet",
    "getuserbyname_for_swagger_petstore": "Get user by user name",
    "products_detail_for_unofficial_shein": "Get detailed information of a product",
    "getsingleproductvariant_for_ecartapi": "<p>Searches for the selected variant and shows the detailed information.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#5e6aa8c0-1d39-4a0e-8d8c-a2f2d294528a\"> The product's variant ID must exist.</a></li>\n\t</ul></b>",
    "getasinglecustomer_for_ecartapi": "<p>Searches for the selected customer and shows detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#222f52a0-58f0-4cd9-bd11-68eb488a010b\"> The costumer's ID must exist</a></li>\n\t</ul></b>",
    "getallproductvariants_for_ecartapi": "<p>Searches for all the registered variants of a single product.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t</ul></b>\n\n<h3>FILTERS </h3>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<td>Filter</td>\n\t\t\t<td>Description</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><code>limit</code></td>\n\t\t\t<td>Limit size of the search.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>page</code></td>\n\t\t\t<td>Pagination number.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>sinceId</code></td>\n\t\t\t<td>Filter items since the Id given.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>offset</code></td>\n\t\t\t<td>Lower limit of the results block. Modifies the range of the results provided, range goes from offset to limit.</td>\n\t\t</tr>\n\t</tbody>\n</table>",
    "get_search_products_data_for_ebay_products_search_scraper": "GET Search Products Data",
    "product_fulfillment_for_target_com_shopping_api": "Returns product fulfillment information.",
    "product_for_amazon_product_price_data": "Get Amazon product price information by locale.\n\nASINs provided will be searched by the locale provided, e.g. if `B005YQZ1KE,B074R8RQQ2` were provided and `US` as a locale were provided, it will provide metadata from only `amazon.com`.\n\nPlease note that price data may be up to 30 minutes out of date.\n\nCurrently supported locales:\n\nUS (amazon.com)\nUK (amazon.co.uk)\nCA (amazon.ca)\nIN (amazon.in)\nFR (amazon.fr)\n\nMore coming soon!",
    "reviews_list_for_kohls": "List reviews relating to a product",
    "getproducts_for_etsy_products_api_allows_you_to_scrape_the_products_from_etsy": "Get Etsy products",
    "getvariations_for_appibase": "Get all variations",
    "getproducts_for_appibase": "Get all products",
    "products_search_by_barcode_for_target": "Search product by barcode",
    "countries_list_for_asos": "List countries that Asos supports selling products",
    "get_images_by_productid_siteid_zappos_1_6pm_2_for_zappos_2022": "GET images by productId & siteId",
    "auto_complete_for_target": "Get suggestion by term or phrase",
    "get_amazon_product_reviews_for_abiola_amazon_data_scraper": "This endpoint gives you the review of the product id you enter.",
    "get_amazon_product_offer_for_abiola_amazon_data_scraper": "This endpoint gets the offer of any amazon product.",
    "get_amazon_product_details_for_abiola_amazon_data_scraper": "This endpoint get the general product description of any amazon product.",
    "product_data_for_ecommerce_product_api": "The /data endpoint is a part of the Ecommerce Product API that allows you to retrieve information about a specific product in your ecommerce store. By making a GET request to this endpoint and specifying the product name, you can access a wide range of information about the product, including its name, description, images, and more. The response to the request will be in JSON format and will include all relevant product data. This endpoint is an essential tool for retrieving information about products in your store, and is designed to be fast and efficient, ensuring that you receive the information you need quickly and easily.",
    "getallcategories_for_ecartapi": "<p>Searches for all the available categories.<br></p>\n\n<h3>FILTERS</h3>\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<td>Filter</td>\n\t\t\t<td>Description</td>\n\t\t</tr>\n\t</thead>\n\t<tbody>\n\t\t<tr>\n\t\t\t<td><code>ids</code></td>\n\t\t\t<td>Filter categories by the ids given</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>limit</code></td>\n\t\t\t<td>Limit size of the search</td>\n\t\t</tr>\n<tr>\n\t\t\t<td><code>page</code></td>\n\t\t\t<td>Pagination number.</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>sinceId</code></td>\n\t\t\t<td>Filter categories since the Id given</td>\n\t\t</tr>\n\t\t<tr>\n      \t\t<td><code>name</code></td>\n      \t\t<td>Filter categories by name</td>\n    \t</tr>\n\t\t<tr>\n\t\t\t<td><code>productId</code></td>\n\t\t\t<td>Filter categories by product id</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>siteId</code></td>\n\t\t\t<td>Filter items by site id </td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td><code>offset</code></td>\n\t\t\t<td>Lower limit of the results block. Modifies the range of the results provided, range goes from offset to limit</td>\n\t\t</tr>\n\t</tbody>\n</table>",
    "allproductlistings_for_ecartapi": " ",
    "products_search_by_barcode_for_hm_hennes_mauritz": "Search product by barcode",
    "products_detail_for_hm_hennes_mauritz": "Get detail information of product",
    "categories_v2_list_for_target": "List all root and sub categories",
    "products_v3_get_details_for_target": "Get detail information of product",
    "getallorderfulfillments_for_ecartapi": " ",
    "getasinglecategory_for_ecartapi": "<p>Searches for the selected category and shows detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#aa4a4c0b-6ab3-49e8-b7e3-931c8226af66\"> The categories ID must exist</a></li>\n\t</ul></b>",
    "get_description_for_taobao_tmall_product_detail": "Get description",
    "products_v2_list_recommended_for_target": "List more products to consider",
    "reviews_list_for_unofficial_shein": "List reviews related to a product",
    "search_autocomplete_for_target_com_shopping_api": "Product autocompletion based on search keyword.",
    "get_all_predictions_for_daily_betting_tips": "This Endpoint is used to load all Betting Tips from API the tips are organised into multiple coupons.\nTo load all tips organised in Ascending order pass parameter sort with value \"-id\".",
    "get_coupons_endpoint_for_daily_betting_tips": "- This Endpoint provides daily AI analyzed Betting coupons with high win rate.\n- To load all tips organized in Ascending order pass parameter sort with value \"-id\".",
    "get_predictions_by_date_for_daily_betting_tips": "This Endpoint is used to load Betting Tips from API the tips, this returns only tips for a given date passed as parameter.\nTo load tips for a given date organised in Ascending order pass parameter sort with value \"-id\".\nThe date format for a given date should be \"dd.MM.yyyy\", else response from API will be empty.",
    "odds_for_betmaster": "Latest Odds by Betmaster.",
    "matches_for_betmaster": "Latest Matches by Betmaster",
    "live_score_for_cricket": "to view live score",
    "get_team_receiving_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' receiving data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.",
    "get_team_rushing_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' rushingdata. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.",
    "get_team_passing_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' passing data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.",
    "matchup_related_for_pinaculo": "Get matchup related.",
    "live_sports_for_pinaculo": "Get live sports.",
    "enums_for_pinaculo": "Get enums.",
    "get_daily_scoreboard_live_real_time_for_tank01_fantasy_stats": "This call will pull game scores and no other stats.  \n/getNBAScoresOnly\nCall it with no parameters, it will return the current date's game list with their scores.  \n\nYou can use both gameID and gameDate for parameters.  gameID will give you only the scores for one specific game.  gameDate will give you the scores for every game on that date.  \n\nExample, to get all games for March 11, 2022\n/getNBAScoresOnly?gameDate=20220311\nor you can use this call to get just one specific game \n/getNBAScoresOnly?gameID=20220311_DAL@HOU\nor call with no parameters for the games for 'current processing day'.\n\nIf you want to include the top performers from each team when game is in progress, include  topPerformers paremter. \n It needs to be &topPerformers=true",
    "get_daily_schedule_for_tank01_fantasy_stats": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNBAGamesForDate?gameDate=20220310\nThe above call will return all of the games from March 10th, 2022.  Date must be in that format.  \nFor March 10th, there were two games. They come back in a list format within the body of the response.",
    "get_player_information_for_tank01_fantasy_stats": "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find LeBron, you can use lebron_james and it will bring him back.  Or try with playerName=smith and it will return a list of guys with smith in their name.\n\n/getNBAPlayerInfo?playerID=28908111729\n\n/getNBAPlayerInfo?playerName=smith\n\netc",
    "feed_for_free_football_soccer_videos_v2": "You can retrieve the highlights and goals of the latest football matches in JSON format from this endpoint",
    "team_stats_by_category_for_serie_a": "This endpoints allows you to retrieve players statistics accross different categories. Possible categories are: goals, shots, assists, crosses, saves, avgkmtraveled, headshotgoals , offsides,  corners , playingtime, posts-crossbars ,ballpossession]",
    "current_leaderboard_for_serie_a": "Use this endpoint to retrieve the current leaderboard, updated at the last match played.",
    "match_details_by_id_for_serie_a": "Via this endpoint, you can retrieve the match details given a certain Match Id. Match Ids can be obtained through the Matches List endpoint. You can also query for live matches and for matches played starting from 1990.",
    "odds_for_cbet": "Latest Odds for Cbet",
    "matches_for_cbet": "Latest Matches for Cbet",
    "teams_get_rankings_for_divanscore": "Get rankings of specific team",
    "categories_list_live_for_divanscore": "List all categories or nations having matches or events recently",
    "teams_get_logo_for_divanscore": "Get logo image of specific team",
    "gettspmatches_for_betsports": "getTspMatches data",
    "superoffer_for_betsports": "superOffer data",
    "localized_routes_for_betsports": "localized-routes data",
    "tournament_info_for_sofasport": "Get tournament info by tournament id",
    "unique_tournament_logo_for_sofasport": "Get unique tournament logo by unique tournament id",
    "games_esports_for_sofasport": "Get games (esports) by event_id",
    "head_to_head_statistics_for_football_dolphin": "Head to head statistics",
    "football_season_statistics_for_football_dolphin": "Football season statistics",
    "team_statistics_for_football_dolphin": "Team statistics",
    "get_all_latest_nba_articles_for_nba_latest_news": "GET /articles\nReturns a list of all the latest nba articles.\n\nOptional params:\n\nsource returns articles based on chosen source\n\noptions: nba-canada, nba, bleacher-report, yahoo, espn, slam\n\nExample /articles?source=bleacher-report\n\nteam returns articles based on chosen team\n\nExample /articles?team=lakers\n\nlimit returns the maximum number of articles desired\n\nExample /articles?limit=5\n\nplayer returns articles based on chosen player\n\nUse dash to seperate names\n\nSearching by players full name seperated by dash produces best results\n\nExample /articles?player=kevin-durant&limit=10",
    "team_stats_for_nfl_team_stats": "Over 500 different categorized statistics for each team in the NFL (depending on league year).  Optionally, pass in a league year and/or team to narrow the query results.",
    "search_multi_for_soccerway_feed": "Search team, player by query",
    "team_squad_statistics_for_soccerway_feed": "Get Team Squad statistics",
    "player_data_for_soccerway_feed": "Get player data. Ex.: clubs career, internationals career",
    "driver_s_quotes_with_pagination_of_10_quotes_each_page_for_f1_drivers_quotes": "Gets 10 quotes of the driver depending on which page you input.",
    "10_interesting_quotes_for_f1_drivers_quotes": "Gets 10 interesting quotes said by famous F1 people.",
    "list_of_drivers_and_personalities_for_f1_drivers_quotes": "Shows the list of F1 drivers and personalities who have quotes saved in this API, and their code to access them.",
    "game_probability_gamepk_for_baseball": "Query Baseball probability data.",
    "seasons_seasonid_for_baseball": "Baseball seasons",
    "schedule_date_for_baseball": "Baseball schedule",
    "course_details_for_golf_course_finder": "This endpoint will return the course details from Google Places",
    "get_courses_for_golf_course_finder": "This endpoint will return courses within a mile radius of the passed latitude and longitude",
    "get_nba_injury_list_history_for_tank01_fantasy_stats": "This table currently has injury history from the years 2020, 2021, 2022, and 2023 for players who played an NBA game in the 21-22 season and afterwards.  Consider this table as \"beta\" at this point, as we are still collecting previous seasons' data and working through some challenges. \n\nparameters:\n(All dates must be in format YYYYMMDD)\nplayerID - Use this if you only want to pull back injury history from a specific player.\ninjDate - Use this is to pull back injury history for only a specific date.\nThe next two are used to pull back a range of dates.  You can use one or the other. Or none. \nbeginningInjDate - Lower boundary of the range of dates. Inclusive\nendInjDate - Upper boundary of the range of dates.  Inclusive.\nyear - If your range of dates include multiple years, the api will only pull back dates for one year.  If year isn't selected then you will get injuries from current year.   Using \"year\" without any other parameters will do nothing and the api will still bring back the default, last 14 days of injuries.\nnumberOfDays - Valid for numbers 0 through 30, you can pull back information from the previous 0 to 30 days.  \nCalling this endpoint with no parameters will give a list of all players injuries from the last 14 calendar days. \n\nAgain, please consider this endpoint as not fully functional and it could be buggy.  We'll update the description here whenever we add more years, add options, or finalize the interface.\n\nWe encourage testing and feedback here.  Thanks in advance!",
    "get_teams_for_tank01_fantasy_stats": "This call will retrieve the list of NBA teams. Included is their name, city, abbreviation, and teamID which can be used in other calls.   This also includes standings (win/loss/ppg/oppg/streak) data.\n\nIn the team rosters, all player information is available, which includes current injury status. \n\n/getNBATeams\n\nOptional parameters are schedules=true ,  rosters=true , and/or topPerformers=true\n\ntopPerformers get returned in a list for each stat, since a team might have multiple leaders averaging the same amount of whichever stat.",
    "basketballv3_for_v3rankings": "Basketball rankings v3",
    "getmatchesbyteam_for_ipl_api": "get all the matches by a particular team",
    "getmatchbywinner_for_ipl_api": "get all  the matches by winner",
    "getmatchs_for_ipl_api": "to get all the match details .",
    "live_score_for__football_live_score_": "Get live football score & history",
    "futsal_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.",
    "handball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.",
    "basketball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.",
    "low_hold_bets_for_sportsbook_odds": "This returns the bets that have low hold bets. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.",
    "game_odds_basic_lines_schedule_for_sportsbook_odds": "This is a schedule that shows moneylines, spreads, and over under offerings by all bookmakers.",
    "games_list_for_sportsbook_odds": "Valid League Names: \"NBA\", \"NCAA Basketball\", \"NFL\", \"NCAA Football\", \"NHL\", \"MLB\"\n\nThis will return a dictionary of games where the keys will be hashes describing the game and the values will be dictionaries of all of the games attributes including which sites have that game for betting and when our data last updated that site.\n\nIf you want all of the games for all of the leagues just leave the \"league_name\" parameter empty.",
    "search_player_for_viperscore": "Search for any player",
    "get_best_player_for_viperscore": "\"Get best player\" will return the best player of each team with their rating.",
    "get_competition_seasons_for_viperscore": "Here you'll also find historic data from the last seasons",
    "basketball_for_basketball": "i will use this only for live feeds",
    "daily_schedule_for_football_datafeeds_by_rolling_insights": "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET.",
    "weekly_schedule_for_football_datafeeds_by_rolling_insights": "Returns all events from the date specified plus 7 days in advance",
    "team_depth_charts_for_football_datafeeds_by_rolling_insights": "Returns player depth charts for a team",
    "serie_a_standings_for_serie_a_standings": "Serie A Standings",
    "get_all_competitions_information_for_match_api": "Retrieve all competitions information",
    "get_all_match_play_today_by_competitions_for_match_api": "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id.",
    "fixture_tree_inplay_sport_sport_id_for_betbro_sportbook": "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures.\n",
    "fixture_fixture_id_for_betbro_sportbook": "Get full fixture SportBook\nwhat the fuck is going on !\n",
    "fixture_tree_pregame_sport_sport_id_for_betbro_sportbook": "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures.\n",
    "today_super_sure_vip_predictions_for_168predict_vip_football_predictions": "This endpiont delivers daily super sure and precise match forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "tomorrow_sure_vip_over_2_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow sure and precise over 2.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "yesterday_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers yesterday over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "competitions_get_game_plan_for_transfermarket": "Get game plan by competition and season",
    "matches_get_club_comparison_for_transfermarket": "Get club comparison of specific match",
    "statistic_list_golden_boot_for_transfermarket": "List golden boot",
    "get_last_games_for_viperscore": "With that call you'll receive the last games in a multipage request",
    "get_all_games_for_round_if_round_based_for_viperscore": "Get all games for a Round if the competition is round-based. You get all rounds from the competition .",
    "get_managers_for_viperscore": "You want to know who's behind the teams at this game? Here you go!",
    "competitions_scorers_for_zeus_api": "List the current scorers for a league \u26bd.",
    "competitions_for_zeus_api": "List all available competitions \ud83c\udfc6.",
    "areas_for_zeus_api": "List all available areas \ud83c\udf0d.",
    "managercareerhistory_for_footapi": "Get the career history of a football manager, including information on the teams they have managed, their win-loss record, and other relevant information.",
    "search_for_footapi": "This operation allows you to search for football players, teams, and tournaments based on the search term provided.",
    "fifarankings_for_footapi": "Get the current FIFA rankings of Football teams.",
    "get_nba_franchise_w_l_schedule_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's W/L Schedule for a specific year",
    "get_nba_franchise_s_specific_year_data_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's Roster and Schedule for a specific year",
    "get_specific_nba_franchise_data_for_1977_2022_nba_team_rosters_and_schedules": "Grabs all NBA Data for a Franchise from 1977(if applicable)-2022",
    "explore_areas_for_soccerway_feed": "Get a list of areas",
    "team_image_for_soccerway_feed": "Get team image",
    "explore_popular_for_soccerway_feed": "Get popular list",
    "leagues_for_soccer_app": "League Matches 2020",
    "lives_for_soccer_app": "All Live matches",
    "news_from_individual_source_for_f1_latest_news": "With this endpoint you can specify the source of the articles you wish to get\n/news/f1 for example, or any of the other 4: skyf1, BBCF1, WTF1, autosport.",
    "get_recent_f1_news_from_all_sources_for_f1_latest_news": "This endpoint returns back recent articles from all sources",
    "match_for_msport": "get details of match with id\nleague ,home , away , events , substitute , stats and everything you need about the soccer match",
    "livescores_for_msport": "list of soccer livescores",
    "fixtures_for_msport": "*  list of future match up to next 7 days\n*  you can retrieve full list of soccer matches up to next 7 days",
    "laliga_standings_for_laliga_standings": "LaLiga Standings",
    "rounds_for_os_sports_perform": "Get rounds of the season",
    "team_latest_media_for_os_sports_perform": "Get latest media by team ID. Ex. Full Highlights",
    "tweets_for_os_sports_perform": "Get tweets by event_id",
    "search_event_details_for_mma_stats": "This lets you search for specific fights by the names of the fighters involved. The response returned by the API endpoint includes details such as the date of the fight, the name of the fighters involved, and the outcome of the fight.",
    "ufc_fight_night_pavlovich_vs_blaydes_april_22_2023_for_mma_stats": "**Get details to UFC Fight Night: Pavlovich vs. Blaydes**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "ufc_fight_night_vettori_vs_cannonier_june_17_2023_for_mma_stats": "**UFC Fight Night: Vettori vs. Cannonier**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "matchincidents_for_handballapi": "Get incidents for a handball match by ID.",
    "leagueoveralltopteams_for_handballapi": "Get overall top teams for a handball unique tournament and season",
    "leagueseasons_for_handballapi": "Get seasons of a handball unique tournament by ID",
    "teamplayoffsbestplayers_for_americanfootballapi": "Get the top players of a specific American Football team during the playoffs by providing the team ID, tournament ID, and season ID.",
    "tournamentplaceholderimage_for_americanfootballapi": "Get the tournament placeholder image in PNG format.",
    "leaguetotalteamevents_for_americanfootballapi": "This endpoint retrieves the last 5 matches for a specific league in a given season for both home and away events.",
    "sample_predictions_for_betigolo_predictions": "Get a list of a sample of matches of the previous day, including predictions for many markets.",
    "ice_hockey_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.",
    "matchodds_for_americanfootballapi": "Get betting odds for a specific American Football match by providing the match ID.",
    "teamnearmatches_for_americanfootballapi": "Get the list of near matches for a specific American Football team by providing its ID.",
    "matchmanagers_for_americanfootballapi": "Get managers for a specific American Football match by providing its ID.",
    "gameweekgamesbyclub_for_premier_league_stats": "Get all games from a particular gameweek and club.",
    "footballersbyclub_for_premier_league_stats": "Get list of footballers for a given club.",
    "gameweekgamesbyid_for_premier_league_stats": "Get games from a particular gameweek by id.",
    "get_player_list_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "Grabs all of this season's players and their IDs.  \n\nONE CALL is all you need to retrieve every player.  No need to call multiple times to get the full list.\n\nRosters are updated multiple times per day during the season.\n\nYou mainly will use this to match a player with his playerID.\n\nThere are no parameters, just a simple call..\n\n/getNFLPlayerList",
    "get_nfl_team_schedule_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call returns the schedule of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nCall needs to look like this:\n/getNFLTeamSchedule?teamID=1\nYou can also use the team Abbreviation:\n/getNFLTeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getNFLTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Good for seasons 2022 and 2023.",
    "get_nfl_teams_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call will retrieve the list of NFL teams. Included is their name, city, abbreviation, and teamID which can be used in other calls.  Their current record and current W/L streak is included as well. Optional data that can be included are the team rosters and their schedules.      \n\nIncluded in team rosters is all players injuries. \n/getNFLTeams\n\nOptional parameters are ?schedules=true    or    ?rosters=true",
    "leaguetotalstandings_for_cricketapi2": "Get the total standings for a specific Cricket league for a given season by providing its unique tournament ID and season ID.",
    "leagueseasons_for_cricketapi2": "Get a list of seasons for a cricket league using the unique tournament ID.",
    "teamnearmatches_for_cricketapi2": "Get a list of cricket matches that the team with the specified ID has in the near future.",
    "daily_predictions_for_today_football_prediction": "Returns **Daily Football Predictions** with pagination support. \nSearch/filter can be used by **date**, **league**, **market-type**.\n\n* Use **predictions/{matchId}/details** endpoint to see more information about any particular match prediction.\n* Use **predictions/scores** endpoint to get score prediction and average goals.",
    "vip_prediction_scores_for_today_football_prediction": "This **VIP** endpoint returns match score predictions with average goal stats. Same query strings and pagination functionality is supported with **/predictions/list**\n\n* Use **/predictions/list** endpoint  to get  market bet predictions.",
    "prediction_details_for_today_football_prediction": "Shows all details about the match, its prediction and the prediction results.",
    "matchlist_by_seriesid_for_fantasy_cricket": "Using Series ID get the name, participating teams, start date, end date and match keys for the matches of a specified Series. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com",
    "upcoming_matches_api_for_fantasy_cricket": "A list of Upcoming cricket matches from around the world. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com",
    "playing_eleven_api_for_fantasy_cricket": "Get Playing Eleven by matchid when it's announced by the teams. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com",
    "stats_get_records_for_unofficial_cricbuzz": "Get records",
    "matches_get_commentaries_for_unofficial_cricbuzz": "Get match commentaries",
    "series_get_points_table_for_unofficial_cricbuzz": "Get points table by series",
    "footballers_by_id_for_premier_league_stats": "Get a players stats by their ID. Choose from all 597 registered premier league players.",
    "team_season_statistics_for_baseball_datafeeds_by_rolling_insights": "Returns statistics for teams",
    "player_season_statistics_for_baseball_datafeeds_by_rolling_insights": "Returns Player Season Statistics",
    "daily_schedule_for_baseball_datafeeds_by_rolling_insights": "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET.",
    "premier_league_standings_for_premier_league_standings": "Premier League Standings",
    "best_of_the_day_for_morpheus_predictions_": "Bet prediction for day",
    "best_sign_1_for_morpheus_predictions_": "Today's best 1 sign",
    "best_sign_2_for_morpheus_predictions_": "Today's best 2 sign",
    "matchstatistics_for_americanfootballapi": "Get match statistics for a specific American Football match.",
    "matchvotes_for_americanfootballapi": "Get votes for a specific American Football match by providing its ID.",
    "leaguetopplayersplayoffs_for_americanfootballapi": "This endpoint retrieves the top players for a specific league in playoffs during a given season.",
    "managerplaceholderimage_for_cricketapi2": "Get the manager placeholder image in PNG format.",
    "leaguelastmatches_for_cricketapi2": "Get a list of last matches for a cricket league using the tournament ID, season ID, and page number.",
    "headtoheadmatches_for_cricketapi2": "Get head-to-head match data for a specific Cricket match using its custom ID.",
    "gameweekgames_for_premier_league_stats": "Get all games from a particular gameweek.",
    "odds_for_betway": "Latest Odds for Betway",
    "matches_for_betway": "Latest Matches for Betway",
    "gettopsports_for_sport_odds": "GetTopSports data api",
    "geteventdetails_for_sport_odds": "GetEventDetails api data",
    "getevents_for_sport_odds": "GetEvents data api",
    "super_lig_standings_for_super_lig_standings": "Super Lig Standings",
    "matches_for_metrx_factory": "Returns a list of matches for given parameters.\n\nBoth historical and upcoming matches are supported. If no parameters are provided then all upcoming matches are returned. The time span covering next matches ranges between 8 hours for *Basic* and 60 hours for paid subscriptions.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. matches returned: 5`",
    "team_performance_indices_for_metrx_factory": "Returns a snapshot of global team performance indices sorted by rank in ascending order.\nSeparate index lists are maintained for club and national teams. The indication of projections controls which data should be collected and has direct impact on the payload and billed credits.\n\nIf no parameters are provided then the latest club team ranking is returned with only the main index projection in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. performances returned: 5`",
    "teams_for_metrx_factory": "Returns a list of teams that match the given parameters.\nAt least one of the request parameters is required.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. teams returned: 5`",
    "matches_for_dafabet": "Latest Matches for Dafabet",
    "odds_for_dafabet": "Latest Odds for Dafabet",
    "tournament_list_for_handball_data": "List of tournaments in your data coverage.",
    "team_schedule_for_handball_data": "Team fixtures by all the tournaments a team participates.",
    "tournament_standings_for_handball_data": "Team Rankings for a specific competition.",
    "fixture_events_for_transfermarkt_db": "Get fixture events by fixture_id",
    "european_champions_for_transfermarkt_db": "European champions. Titles and success",
    "market_value_of_players_for_transfermarkt_db": "Get market value of players",
    "provider4_live_upcoming_for_football_betting_odds": "get upcoming matches list",
    "provider1_live_upcoming_for_football_betting_odds": "get upcoming matches list",
    "provider3_live_match_id_for_football_betting_odds": "get match",
    "get_nfl_team_roster_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nRosters are updated a few times throughout the day.  Usually every hour.  \n \nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nCall needs to look like this:\n/getNFLTeamRoster?teamID=6\nor\n/getNFLTeamRoster?teamAbv=CHI\n\nThat will return a list of the team's current roster players in the body.\n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505.",
    "get_daily_nfl_schedule_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNFLGamesForDate?gameDate=20221211\nThe above call will return all of the games from December 11th, 2022.  Date must be in that format.  \nThey come back in a list format within the body of the response.",
    "daily_calory_requirements_for_fitness_calculator": "Knowing your daily calorie requirements is important to achieve your final goal. You can calculate your daily calorie req. for 7 different goals.",
    "burned_calorie_from_activity_for_fitness_calculator": "Calculate the burned calorie for a specific activity.",
    "ideal_weight_for_fitness_calculator": "Find four different ideal weight scores according to four different well-known equations which are Hamwi, Devine, Miller, Robinson.  There are two parameters which are age and height(cm) values.",
    "premium_history_for_betigolo_tips": "Historical result of Premium Tips in past 30 days",
    "premium_tips_for_betigolo_tips": "List of active Premium Tips",
    "event_for_spectation_sports_events_api": "Get a single event by ID",
    "fight_for_spectation_sports_events_api": "Get a single fight by ID",
    "fights_for_spectation_sports_events_api": "Fetch fights for upcoming/previous events",
    "getevents_for_sportapi": "GetEvents data api",
    "getstatictranslations_for_sportapi": "GetStaticTranslations Api Data",
    "getfavouriteschamps_for_sportapi": "GetFavouritesChamps Api Data",
    "races_for_formula_1_standings": "It will return the current season races with basic information.",
    "driver_standings_for_formula_1_standings": "Will return the current F1 season driver standings.",
    "constructor_standings_for_formula_1_standings": "Get the current season constructor standings.",
    "v4_sports_sport_scores_for_live_sports_odds": "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)",
    "v4_sports_for_live_sports_odds": "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints.",
    "v4_sports_sport_odds_for_live_sports_odds": "Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html).",
    "matches_for_bildbet": "Latest Matches for Bildbet",
    "odds_for_bildbet": "Latest Odds for Bildbet",
    "live_game_data_for_football_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.",
    "player_information_for_football_datafeeds_by_rolling_insights": "This endpoint returns player demographic information",
    "player_season_statistics_for_football_datafeeds_by_rolling_insights": "Returns Player Season Statistics",
    "get_next_predictions_for_predictx": "\"Get Next Predictions\" is a powerful feature offered by the predictX API that allows developers to retrieve accurate predictions for upcoming events happening on the current day. This feature provides users with valuable insights and helps them make informed decisions about upcoming matches.\n\n These predictions are generated using advanced algorithms and statistical models that take into account various factors such as team performance, player statistics, historical data, and other relevant parameters.",
    "get_today_s_predictions_for_predictx": "\"Get Today's Predictions\" is a powerful feature offered by the predictX API that allows developers to retrieve accurate predictions for events happening on the current day. This feature provides users with valuable insights and helps them make informed decisions about upcoming matches.\n\n These predictions are generated using advanced algorithms and statistical models that take into account various factors such as team performance, player statistics, historical data, and other relevant parameters.",
    "competitions_for_premier_league_upcoming_matches": "This API will return an array of **5 biggest competitions** in which all clubs in* Premier League* are able to participate",
    "fixtures_for_premier_league_upcoming_matches": "When making a request to this API, it will return a JSON containing a list of upcoming matches in Premier League",
    "clubs_for_premier_league_upcoming_matches": "This API will supply client info about all clubs that are playing the First Premier League Competition",
    "matches_get_media_for_divanscore": "Get latest media relating to the match",
    "auto_complete_for_divanscore": "Get suggestions by term or phrase",
    "players_get_transfer_history_for_divanscore": "Get transfer history of specific player",
    "get_game_details_for_viperscore": "With \"Get game details\" you'll get the basic information about the game you were looking for.",
    "get_game_statistics_for_viperscore": "You are a statistics freak? We too! Here you can check all statistics!",
    "get_standings_for_viperscore": "Get competition standings by season",
    "get_all_games_for_free_nba": "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.",
    "get_a_specific_game_for_free_nba": "This endpoint retrieves a specific game",
    "get_specific_player_for_free_nba": "This endpoint retrieves a specific player.",
    "matches_for_betcity": "Latest matches by Betcity",
    "odds_for_betcity": "Latest Odds by Betcity",
    "copa_sudamericana_latest_matches_for_surebets_2": "Latest matches of Copa Sudamericana by bookie - updated every 24 hours",
    "copa_libertadores_latest_matches_for_surebets_2": "Latest matches of Copa Libertadores by bookie - updated every 24 hours",
    "england_latest_matches_for_surebets_2": "Latest matches in England by bookie - updated every 24 hours",
    "footballersbyname_for_premier_league_stats": "Get list of footballers with given name.",
    "odds_for_betano": "Latest Odds by Betano.",
    "matches_for_betano": "Latest matches by Betano.",
    "players_stats_by_category_for_serie_a": "This endpoints allows you to retrieve players statistics accross different categories. Possible categories are: shots, goals, ballrecovery, foulsuffered, assists, keypasses, headgoals, posts, gksaves, avgkmtraveled",
    "get_team_win_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' win/loss data. Parameters include a specific year.\n\nThe year parameter should be a year between these years: 1920 - current year.",
    "get_per36_career_regular_season_by_id_for_nba_stats_v2": "Api to query per36 career regular season",
    "get_career_totals_allstar_for_nba_stats_v2": "Api to query career totals allstar",
    "get_teams_for_nba_stats_v2": "Api to query teams",
    "transfer_history_for_os_sports_perform": "Get player transfer history",
    "transfers_of_team_for_os_sports_perform": "Get transfers of team by team ID",
    "current_team_tournaments_for_os_sports_perform": "Get current team tournaments by team ID",
    "major_league_soccer_standings_for_major_league_soccer_standings": "Major League Soccer Standings",
    "series_get_venues_for_unofficial_cricbuzz": "Get venues by series",
    "series_get_stats_for_unofficial_cricbuzz": "Get stats",
    "teams_list_for_unofficial_cricbuzz": "List teams",
    "getallsports_for_sport_odds": "GetAllSports data api",
    "geteventexternalinfo_for_sport_odds": "GetEventExternalInfo data api",
    "getlivemenustreaming_for_sport_odds": "GetLiveMenuStreaming data api",
    "search_matchups_for_pinaculo": "Search matchups.",
    "sport_live_matchups_for_pinaculo": "Get sport live matchups.",
    "sport_highlighted_markets_straight_for_pinaculo": "Get sport highlighted market straight",
    "get_per36_career_regular_season_for_nba_stats_v2": "Api to query per36 career regular season",
    "get_per_game_career_regular_season_for_nba_stats_v2": "Api to query per game career regular season",
    "get_per36_career_post_season_by_id_for_nba_stats_v2": "Api to query per36 career post season",
    "basketball_live_matches_for_sports_live_scores": "Returns Basketball Live Matches with betting odds",
    "basketball_match_lineups_for_sports_live_scores": "Returns LineUps about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Basketball Live Matches endpoint.",
    "futsal_live_matches_for_sports_live_scores": "Returns Futsal Live Matches with betting odds",
    "arbitrage_low_hold_for_sportsbook_odds": "This returns the bets that have arbitrage and all bets that have low holds. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.",
    "game_odds_tiered_schedule_for_sportsbook_odds": "This is a schedule that is tiered and separated with qualitative information. It is used for the website BookBreakers.us to create accordion tables of bet data.\n\nThe Tiers:\n1. Bet Type and Game Period (Eg. P3^0 is 3 Pointers Full Game in Basketball)\n2. Player (Eg. Jayson Tatum) (NOTE: If this is not a prop this tier will not exists)\n3. Lines Available (Eg. 2.5, 3.5)\n4. Outcomes for Those Lines (Eg. O, U for Over and Under)\n5. Sites (Eg. Fanduel, DraftKings, ETC.)",
    "game_odds_by_category_schedule_for_sportsbook_odds": "If you query the category schedule and do not include a \"sport\" and \"category\" parameter it will return all possible values of sport and their respective categories. If you do include those parameters it will return a schedule of all sites for that sport and category. Remember that the categories are hashes, 0 is moneylines, 1 is spreads, 2 is over under, etc. There are a lot of categories, refer to the deconstruct ID code to determine which is which.",
    "daily_match_list_results_for_soccer_data": "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "team_squad_for_soccer_data": "List of players in a team.",
    "team_streaks_for_soccer_data": "Provides the streaks(winning, draw, losing...etc.) of both two teams in tournament.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
    "team_schedule_for_soccer_data": "Team fixtures by all the tournaments a team participates.",
    "goal_analysis_scoring_first_in_between_for_soccer_data": "Provides the scoring first goal statistics of the teams between in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
    "tournament_list_for_soccer_data": "Provides list of tournaments.",
    "team_information_for_hockey_datafeeds_by_rolling_insights": "This endpoint returns team information",
    "weekly_schedule_for_hockey_datafeeds_by_rolling_insights": "Returns all events from the date specified plus 7 days in advance",
    "player_season_statistics_for_hockey_datafeeds_by_rolling_insights": "Returns Player Season Statistics",
    "get_scores_for_given_date_for_football_score_api": "If you want to know the list of football matches for a given date and what was their scores you can use this API.\nAll this api needs is the date input in the format %Y-%m-%d.\nEg:- 2022-12-01",
    "get_football_live_scores_today_for_football_score_api": "Get Live scores for today's football matches",
    "odds_for_chillybets": "Latest Odds for Chillybets",
    "matches_for_chillybets": "Latest Matches for Chillybets",
    "gethighlights_for_sport_odds": "GetHighlights Data Api",
    "getbreadcrumbnavitem_for_sport_odds": "GetBreadCrumbNavItem data api",
    "getliveevents_for_sport_odds": "GetLiveEvents data api",
    "categorytournaments_for_footapi": "Get all leagues associated with a specific Football category by providing the category ID.",
    "leagueoveralltopplayers_for_footapi": "Get the overall top players for the given tournament and season ID.",
    "teamoverallstatistics_for_footapi": "Get the overall statistics for a specific Football team in a particular tournament and season.",
    "match_play_by_play_for_basketball_data": "Live match events with scores.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "team_schedule_for_basketball_data": "Team fixtures by all the tournaments a team participates.",
    "seasonal_advanced_team_statistics_for_basketball_data": "Provides the season-wide advanced team statistics with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "race_list_for_f1_race_schedule": "Lists down all the races in the schedule",
    "select_race_based_on_race_number_for_f1_race_schedule": "Returns the details for the race based on the race number for the track in the F1 season.",
    "select_race_based_on_id_for_f1_race_schedule": "Returns the race using the ID used in the database for each individual race.",
    "stats_performance_for_today_football_prediction": "Returns statistics of AI prediction module with selected odds, prediction probabilities and profit-loss calculation. \n\n**Profit-Loss**: calculated by considering only single bet is played from 1 unit amount. If the bet is won, gets prediction odd as positive number else -1.",
    "bundesliga_standings_for_bundesliga_standings": "Bundesliga Standings",
    "topassistsbyseasontotalassists_for_nba_statistics_api": "## Return top 20 players by assists in descending order.\n\n_Season is specified in the URL._",
    "topassistsintheplayoffsbyseasontotalassists_for_nba_statistics_api": "## Return top 20 players by assists (playoffs) in descending order.\n\n_Playoffs season is specified in the URL._",
    "playerseasonstatsbyname_for_nba_statistics_api": "_player name is specified in the url._",
    "get_nba_franchise_roster_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's Roster for a specific year",
    "get_matches_on_a_specific_date_for_fifa_2022_schedule_and_stats": "Parameters:\n1.  date - Date to query the matches\n2. utc_offset - Change the utc offset of the date to suit your timezone.\n\nReturns the matches on the specified date and timezone.\nWorks for both historical, live, and future dates.\nMatch data consists of date, time, home team, away team, and many more, see the example response for an example.",
    "explore_competitions_for_soccerway_feed": "Get a list of competitions by area_id",
    "test_for_90_mins": "Test",
    "schedule_for_nba_schedule_v2": "Get the stats of past NBA games and schedule for upcoming ones",
    "fixtures_by_date_for_cricket_live_data": "Lists fixtures for a given date",
    "fixtures_for_cricket_live_data": "Lists next 50 fixtures across all series'",
    "results_for_cricket_live_data": "Lists last 50 Results across all series'",
    "tournament_teams_for_ice_hockey_data": "List of teams participating in a specific tournament.",
    "daily_match_list_results_for_ice_hockey_data": "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "recent_match_list_for_ice_hockey_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Ice Hockey Match List or Fixture endpoints.**",
    "getsurfbreaksbycountry_for_simple_surf_forecast_api": " ",
    "getsurfbreaksbyname_for_simple_surf_forecast_api": " ",
    "getcountries_for_simple_surf_forecast_api": " ",
    "provider4_live_list_for_football_betting_odds": "get all matches",
    "oddsnames_for_football_betting_odds": "get all odds names",
    "provider2_live_list_for_football_betting_odds": "get all matches",
    "matches_for_dreambet": "Latest Matches for Dreambet",
    "odds_for_dreambet": "Latest Odds for Dreambet",
    "teamdetails_for_handballapi": "Get details for a handball team by ID",
    "matchbestplayers_for_handballapi": "Get best players for a handball match by ID.",
    "leagueawayteamevents_for_handballapi": "Get away team events for a handball unique tournament and season",
    "news_list_deprecated_for_livescore_v2": "List all news of specific category",
    "news_v2_list_by_sport_for_livescore_v2": "List news relating to a specific sport by category",
    "matches_v2_get_incidents_for_livescore_v2": "Get incidents in a match",
    "teamoftheweek_for_sportifyapi": "Team of The Week",
    "statisticsinuniquetournament_for_sportifyapi": "Statisticsin Unique Tournament",
    "eventhighlights_for_sportifyapi": "Event Highlights",
    "stages_list_for_livescore_sports": "Get the list of the stages",
    "competitions_team_stats_for_livescore_sports": "Get competition Team statistics by competition ID",
    "events_media_for_livescore_sports": "Get event media form event ID",
    "get_all_players_for_shescoresapi": "Gets all the players from all the teams",
    "get_all_countries_for_shescoresapi": "Gets all countries participating",
    "get_players_by_country_for_shescoresapi": "Gets all the players from a team",
    "matches_for_admiralbet": "Latest matches by Admiralbet.",
    "odds_for_admiralbet": "Latest Odds by Admiralbet.",
    "leagues_v2_get_table_for_livescore_v2": "Get table league by category (football, cricket, basketball, tennis, hockey) and competition\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png",
    "competitions_get_table_for_livescore_v2": "Get table relating to a competition",
    "icehockeyleaguetopplayerstypes_for_allsportsapi": "Get the top players types for a specific Ice Hockey league by providing the tournament ID and season ID.",
    "basketball_search_for_allsportsapi": "Search players, teams and tournaments.",
    "american_football_team_logo_image_for_allsportsapi": "Get team logo image. It generates png image.",
    "series_list_api_for_fantasy_cricket": "A list of currently running  and upcoming cricket series from around the world. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com",
    "primeira_liga_standings_for_primeira_liga_standings": "Primeira Liga Standings",
    "config_for_score": "config",
    "cat_for_score": "cat",
    "news_feed_for_sofascores": "Get news feed of the team",
    "odds_all_for_sofascores": "Get all odds by event_id. You can convert them to decimals. `provider_id`: 1 - Bet365, 100 - betano, 101 - bilyoner",
    "team_shirts_for_sofascores": "Get team shirts by event_id",
    "sport_matchups_for_pinaculo": "Get sport matchups.",
    "players_of_team_for_sofascores": "Get players of team by team ID",
    "team_week_rounds_for_sofascores": "Get team-week rounds of the season",
    "h2h_events_for_sofascores": "Get h2h events by custom_event_id",
    "get_player_by_id_for_shescoresapi": "Get a player's information by ID",
    "players_list_trending_for_unofficial_cricbuzz": "List trending players",
    "teams_get_stats_for_unofficial_cricbuzz": "Get stats by team",
    "news_get_categories_for_unofficial_cricbuzz": "Get all available categories",
    "geteventtrackerinfo_for_sportapi": "GetEventTrackerInfo data api",
    "gethighlights_for_sportapi": "GetHighlights Api Data",
    "russian_premier_league_standings_for_russian_premier_league_standings": "Russian Premier League Standings",
    "get_ncaa_men_2000_2021_for_ncaa_champions": "This endpoint retrieves NCAA championship data from 2000 until 2021",
    "results_for_greyhound_racing_uk": "Get results races by date",
    "race_detail_info_for_greyhound_racing_uk": "**Get race detailed info by ID {id_race}.**\n\nYou can get the \"id_race\" from Results or Racecards endpoints",
    "racecards_for_greyhound_racing_uk": "**Get races list.**\n\n- By default current day.\n- Or by date, setting it by parameter",
    "matches_v2_get_pregame_form_for_livescore_v2": "Get pregame form of competitors",
    "matches_v2_get_innings_for_livescore_v2": "Get innings of a match (for \"cricket\" as category)",
    "matches_detail_deprecated_for_livescore_v2": "Get detail information of a match",
    "entry_list_for_golf_leaderboard_data": "Entry List for given tournament - query this to see who will be taking part.",
    "projected_pga_rankings_for_golf_leaderboard_data": "This endpoint allows you to see the projected PGA rankings throughout a PGA event",
    "tours_for_golf_leaderboard_data": "Lists available tours and seasons",
    "search_fighter_stats_by_age_for_mma_stats": "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their age. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more.",
    "search_fighter_stats_for_mma_stats": "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their names. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more.",
    "matches_get_game_information_for_transfermarket": "Get game information of specific match",
    "search_for_transfermarket": "Search for relating players, clubs, competitions, etc... by familiar term or phrase",
    "players_get_transfer_history_for_transfermarket": "Get transfer history of a player",
    "query_horses_for_horse_racing": "Search horses by name. \nOnce you get \"*id_horse*\" from this query, you can get horses stats from \"**Horse stats**\" endpoint.",
    "jockeys_win_rate_for_horse_racing": "Get Jockeys stats in the last days.\nRuns, Wins and Win Rate in %.",
    "query_races_for_horse_racing": "The best way to search races.",
    "allplayersbyseason_for_nba_statistics_api": "_season is specified in the url._",
    "squadname_for_football_v2": "Search a squad in a table by its name. You don't need to search for the full name, you can also use some letters or a part of it.",
    "table_for_football_v2": "Get the current championship table",
    "results_for_football_v2": "Get all the results from a championship.",
    "leagues_list_deprecated_for_livescore_v2": "List all leagues by category (football, cricket, basketball, tennis, hockey)",
    "matches_v2_get_table_for_livescore_v2": "Get table",
    "fighters_for_spectation_sports_events_api": "Get a list of fighters",
    "events_for_spectation_sports_events_api": "Fetch upcoming/previous events",
    "tour_rankings_for_tennis_live_data": "Lists the top 100 players in the relevant tour ranking with their position, movement, and ranking points.",
    "tournament_matches_and_results_for_tennis_live_data": "Lists matches for a given `tournament_id` in detail with match results and detailed player info. This can return a very large file. If speed is required we suggest using /matches-results/{tournament_id}/{date} or the /matches/{tournament_id} endpoint and querying match results individually on the /match/{match_id} endpoint.",
    "player_for_tennis_live_data": "Basic player profiles for a given `player_id`",
    "get_all_nba_team_data_from_1977_2022_for_1977_2022_nba_team_rosters_and_schedules": "Grabs all of the 30 NBA Franchise's Data from 1977-2022 into one object.",
    "teamimage_for_motorsportapi": "Get image for a specific Motorsport team.",
    "featuredstage_for_motorsportapi": "Get the details of the featured stage in Motorsport.",
    "teamstandings_for_motorsportapi": "Get team standings for a specific Motorsport stage.",
    "all_players_for_national_football_players": "Returns all active football players.",
    "positions_for_national_football_players": "Returns all positions (i.e. quarterback: QB)",
    "player_for_national_football_players": "Returns player info of player specified (i.e. name, number, position, team). Use hyphenated name with capitals (i.e. Tom-Brady)",
    "get_supported_coins_handler_for_fan_crypto_coins": " ",
    "get_supported_coins_price_handler_for_fan_crypto_coins": " ",
    "first_25_teams_for_football_soccer_team_names": "You'll get only the first 25 team names and their short names if you have basic plan.",
    "all_teams_for_football_soccer_team_names": "You'll get more than 7000 football (soccer) team names, with their short names from almost every league and country.",
    "player_events_for_sofasport": "Get events by player ID",
    "team_week_players_for_sofasport": "Get team-week players of the season",
    "schedule_odds_for_sofasport": "Get events schedule odds by date",
    "getteam_for_nhl_stats_and_live_data": " ",
    "getgamediff_for_nhl_stats_and_live_data": "You can use this to return a small subset of data relating to game.",
    "getconferences_for_nhl_stats_and_live_data": "This only retrieves active conferences. For inactive conferences, use `/conferences/{id}`.",
    "prematch_event_for_sports_betting_api": "All Odds  Markets",
    "inplay_event_for_sports_betting_api": "All Odds Markets",
    "prematch_for_sports_betting_api": "Prematch List",
    "get_daily_scoreboard_live_real_time_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call will pull game scores and no other stats.  \n/getNFLScoresOnly\nCall it with no parameters, it will return the current date's game list with their scores.  \n\nYou can use both gameID and gameDate for parameters.  gameID will give you only the scores for one specific game.  gameDate will give you the scores for every game on that date.  \n\nExample, to get all games for December 11, 2022\n/getNFLScoresOnly?gameDate=20221211\nor you can use this call to get just one specific game \n/getNFLScoresOnly?gameID=20221211_NYJ@BUF\nor call with no parameters for the games for 'current processing day'.",
    "get_nfl_betting_odds_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This grabs NFL betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNFLBettingOdds?gameDate=20230101\n/getNFLBettingOdds?gameID=20230101_CHI@DET",
    "get_nfl_game_box_score_live_real_time_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "Retrieves the entire box score for a game either in progress or already completed for the current season.  The stats retrieved here are what are normally shown in box scores or used in fantasy games.  If there are any stats here that you'd like to see, please message me.  \n\nThe call looks like this /getNFLBoxScore?gameID=20221212_NE@ARI\n\nThe call needs to be exactly in the same format as above.  8 digit date, underscore, then the away team abbreviation, @, then home team abbreviation.  Complete list of team abbreviations can be retrieved with the getNFLTeams call or various other calls.  \n\nBut, the best way to find specific game ID's are either from the \"getNFLGamesForDate\" call, or the \"getNFLTeamSchedule\" call.",
    "bookmakers_for_surebets_2": "Available Bookmakers",
    "argentina_latest_odds_for_surebets_2": "Latest odds for matches in Argentina - updated every 6 hours",
    "leagues_for_sports_betting_api": "League List",
    "leagues_ep1_for_football_test": "leagues description",
    "races_for_f1_live_motorsport_data": "Lists races and session details for a given season",
    "seasons_for_f1_live_motorsport_data": "Lists available F1 seasons to query - starting point for the application.",
    "session_for_f1_live_motorsport_data": "Provides session details for a given `session id` found in the Races endpoint. Contains information on drivers times, session weather, speed traps, and session status. Updated throughout each session.",
    "sports_list_for_global_data": "Provides the list of the sports which are supported in the global coverage.",
    "country_list_for_global_data": "Provides the list of the countries which belong to the tournaments.",
    "status_list_for_global_data": "Provides the list of the global statuses for the sports.",
    "teamdetails_for_motorsportapi": "Get detailed information for a specific Motorsport team by providing the team ID.",
    "teamstageseasons_for_motorsportapi": "Get the stage seasons for a specific Motorsport team.",
    "matches_list_by_season_and_matchday_for_serie_a": "Via this endpoint, you can retrieve all the matches that occurred on a given matchday in a given season. Note that we support season starting from **1990** till **2022**, and matchday between **1** and **38**.",
    "match_scorecard_for_cricket_live_data": "Lists full scorecard (updated live) for a given match id.",
    "sport_markets_live_straight_for_pinaculo": "Get sport markets live straight.",
    "sport_markets_straight_for_pinaculo": "Get sport market straight.",
    "sport_leagues_for_pinaculo": "Get sport leagues.",
    "teamtournaments_for_basketapi": "Get the unique tournaments that a specific basketball team has participated in.",
    "teamnextmatches_for_basketapi": "Get the next matches for a specific basketball team.",
    "matchh2hduel_for_basketapi": "Get head-to-head duel information for a specific basketball match.",
    "get_banners_new_for_betsports": "get-banners-new data",
    "getbreadcrumbnavitem_for_betsports": "GetBreadCrumbNavItem api data",
    "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.",
    "author_with_his_photo_for_f1_drivers_quotes": "Shows the author who have quotes saved in this API  with his photo and ID.",
    "results_for_horse_racing": "Get results by date.",
    "racecards_for_horse_racing": "Get races list.",
    "get_scheduled_games_by_country_for_viperscore": "With \"Get scheduled games by country\" you'll receive all games which a scheduled for a specific country and date.",
    "search_team_for_viperscore": "Search for any team",
    "get_predictions_performance_statistics_for_daily_betting_tips": "This Endpoint is used to check the predictions performance for a given date.\nThe date format for a given date should be \"dd.MM.yyyy\", else response from API will be empty.",
    "geteventtypes_for_sport_odds": "GetEventTypes data api",
    "referees_get_profile_for_transfermarket": "Get profile of specific referee",
    "competitions_list_champions_for_transfermarket": "List champions of competition through years",
    "matches_get_line_ups_for_transfermarket": "Get line ups of specific match",
    "list_available_markets_for_football_prediction": "List all available markets and the ones that are enabled for your subscription plan",
    "list_available_federations_for_football_prediction": "Returns an array of all the available federations.",
    "get_list_of_fixture_ids_for_football_prediction": "Returns a list of fixture IDs that can be used to make requests to endpoints expecting a ID url parameter.\nCan be filtered by:\n\n- iso_date\n- market\n- federation",
    "competitions_id_for_zeus_api": "List one competition given by id \ud83d\udd0d.",
    "season_schedule_for_baseball_datafeeds_by_rolling_insights": "Returns season schedule for the specified season. If omitted, returns the schedule for current season.",
    "best_quote_for_morpheus_predictions_": "The best predictions with good odds",
    "best_bestgoal_for_morpheus_predictions_": "Today's best BestGoal",
    "player_information_for_hockey_datafeeds_by_rolling_insights": "This endpoint returns player demographic information",
    "season_schedule_for_hockey_datafeeds_by_rolling_insights": "Returns season schedule for the specified season. If omitted, returns the schedule for current season.",
    "team_depth_charts_for_hockey_datafeeds_by_rolling_insights": "Returns player depth charts for a team",
    "matches_for_bet_at_home": "Latest matches by Bet-at-Home",
    "odds_for_bet_at_home": "Latest Odds by Bet-at-Home",
    "newly_added_events_for_sofasport": "Newly added events",
    "form_for_sofasport": "Get pregame team form by event_id",
    "stage_seasons_motorsport_for_sofasport": "Get team stage seasons (motorsport)",
    "apis_for_all_data": "Return data",
    "getmatchesbycity_for_ipl_api": "get all the matches by **city**",
    "getmenubysport_for_sportapi": "GetMenuBySport api data",
    "getliveevents_for_sportapi": "GetLiveEvents Api Data",
    "player_information_for_basketball_datafeeds_by_rolling_insights": "This endpoint returns player demographic information",
    "daily_schedule_for_basketball_datafeeds_by_rolling_insights": "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET.",
    "team_season_statistics_for_basketball_datafeeds_by_rolling_insights": "Returns statistics for teams",
    "match_data_for_soccerway_feed": "Get match data by match uuid. Ex.: season, competition, area, form, h2h, table, lineup, commentaries, teams stats",
    "competition_data_for_soccerway_feed": "Get competition data",
    "ufc_fight_night_rozenstruik_vs_almeida_may_13_2023_for_mma_stats": "**Get details to UFC Fight Night: Rozenstruik vs. Almeida**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "ufc_289_nunes_vs_aldana_june_10_2023_for_mma_stats": "**Get details to  UFC 289: Nunes vs. Aldana**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "gold_standard_sports_for_gold_standard_sports": "For sports feeds",
    "seasonal_statistics_goals_for_handball_data": "Provides the goal statistics of the team in the tournament.",
    "result_statistics_goals_for_handball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handbal Match List or Fixture endpoints.**",
    "tournament_teams_for_handball_data": "List of teams participating in a specific tournament.",
    "football_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.",
    "baseball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.",
    "match_list_alt_for_soccerway_feed": "Get list of the match by date. Status: Played, Playing, Fixture, Cancelled",
    "head_to_head_for_football_prediction": "Shows head to head stats and previous encounters for the home and away team of an upcoming match.",
    "home_team_league_stats_for_football_prediction": "Shows the league table and stats for the home team of an upcoming match.",
    "fastest_laps_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve fastest laps data about a specific F1 championship by specifying a year. If you ommit the year query parameter, a default value will be set to current year. The response data will contain information about the Grand Prix, Driver, Car & Fastest Lap Time in the form of a collection.",
    "teams_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about this year's F1 teams. The result will be a breakdown of the Team's Rank (current position in the standings), Points, Team name & Drivers.",
    "drivers_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve this season's official F1 line-up. The result from the endpoint will be a breakdown of drivers, points and current positions.",
    "get_team_roster_for_tank01_fantasy_stats": "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNBATeams\" call.\n\nRosters are updated a few times throughout the day.  Usually once per hour and before each game starts.\n \nCall needs to look like this:\n/getNBATeamRoster?teamID=1\nor\n/getNBATeamRoster?teamAbv=ATL\n\n\nThat will return a list of the team's current roster players in the body.\n\nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505.",
    "featured_events_for_os_sports_perform": "Get featured events of the unique tournament",
    "lineups_esports_for_os_sports_perform": "Get games (esports) by event_id",
    "tournaments_list_for_os_sports_perform": "Get a list of tournaments by category id",
    "gettaxrulesv2_for_betsports": "getTaxRulesV2 data",
    "teamnextmatches_for_cricketapi2": "Get the next matches for a cricket team by specifying the team ID and the page number (starting from 0).",
    "leaguelogoimage_for_cricketapi2": "Get the logo image for a cricket league in PNG format, using the league's ID.",
    "matchvotes_for_cricketapi2": "Get the votes for a specific cricket match.",
    "best_over_1_5_for_morpheus_predictions_": "Today's best over 1.5",
    "getteams_for_wosti_futbol_tv_spain": "Obtener el listado de equipos de f\u00fatbol televisados en Espa\u00f1a.",
    "getevents_for_wosti_futbol_tv_spain": "Obtener el listado de eventos de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro.",
    "geteventsid_for_wosti_futbol_tv_spain": "Obtener el evento por identificador \u00fanico  del listado de eventos de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id.",
    "get_bookmakers_for_surebets": "Get a list of all supported bookmakers",
    "list_for_surebets": "Get all available Surebets",
    "leaguelastmatches_for_basketapi": "Get the last matches for a specific basketball league using the tournament and season IDs, and a zero-based page number.",
    "managerimage_for_basketapi": "Get the image for a specific basketball manager using the manager ID. The image is in PNG format.",
    "leagueplayoffspergametopplayers_for_basketapi": "Get the best players in the basketball league per game during the playoffs.",
    "game_boxscore_gamepk_for_baseball": "Query Baseball games, teams, scores etc...",
    "nhl_schedules_for_nhl_api": "This endpoint will get NHL schedule data for a specified date when available.",
    "nhl_picks_for_nhl_api": "With this endpoint you can get the NHL PickCenter data for a specified game",
    "nhl_team_info_for_nhl_api": "This API endpoint will return the team info for a specific NHL team.",
    "transfers_list_rumors_for_transfermarket": "List transfer rumors along with players info, and estimated market value",
    "clubs_get_profile_for_transfermarket": "Get profile of club",
    "race_rankings_for_tennis_live_data": "Lists top 100 in relevant tour race rankings with their ranking, movement, and ranking points.",
    "teamlastmatches_for_rugbyapi2": "Get the last matches for a specific Rugby team.",
    "teamdetails_for_rugbyapi2": "Get details for a specific Rugby team.",
    "leaguedetails_for_rugbyapi2": "Get the details of a specific Rugby league.",
    "daily_match_list_all_for_ice_hockey_data": "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "tournament_list_for_ice_hockey_data": "List of tournaments in your data coverage.",
    "tournament_fixture_for_ice_hockey_data": "Full match list with period and final scores.",
    "japan_latest_odds_for_surebets_2": "Latest odds for matches in Japan - updated every 6 hours",
    "euro_latest_odds_for_surebets_2": "Latest odds for international matches in europe - updated every 6 hours",
    "valuebets_for_surebets_2": "Positive EV-Bets. \nThese involve risk but have the advantage to bet against just one bookie.\nThe attribut \"ev_profit_in_%\" includes the chance to win this bet (p_market) but also the overpricing of the bookmakers odd (bookieodd) vs. the market odd (marketodd).\n Please be careful and always verifiy the odds and the matched games.",
    "summary_for_ncaa_final_four": "Get the basic Final Four data set for the given year.",
    "list_of_locations_for_ncaa_final_four": "Get a list of every Final Four location sorted alphabetically.",
    "coach_championships_by_count_for_ncaa_final_four": "Get a list of coaches ranked by total number of championships.",
    "driver_standings_for_f1_live_motorsport_data": "Displays the driver standings for a given season.",
    "drivers_for_f1_live_motorsport_data": "Lists all drivers by season.",
    "constructors_for_f1_live_motorsport_data": "Lists constructors for a given season.",
    "get_team_schedule_for_tank01_fantasy_stats": "This call returns the schedule of any team, using the teamID that can be found in \"getNBATeams\" call.\n\nCall needs to look like this:\n\n/getNBATeamSchedule?teamID=1\n\nYou can also use the team Abbreviation:\n\n/getNBATeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Right now we only have season 2022 and 2023.   \nDefault season is current season.",
    "get_nba_betting_odds_for_tank01_fantasy_stats": "This grabs NBA betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNBABettingLines?gameDate=20221227\n/getNBABettingLines?gameID=20221227_DEN@SAC",
    "competitions_for_metrx_factory": "Returns a list of competitions that match the given parameters.\nCompetitions are divided into stages which differ in playing mode (league vs. knock-out). If no parameters are provided then all competitions hold in this year are returned.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. competitions returned: 5`",
    "points_for_live_golf_data": "Fetch official FedExCup points earned per player for a given `tournId` and `year`. Note that PGA Tour non-members will not be officially ranked.",
    "world_ranking_for_live_golf_data": "Fetch the world rankings for a given year",
    "earnings_for_live_golf_data": "Fetch the player earnings for a given `tournId` and `year`.",
    "tournament_list_for_football_data": "List of tournaments in your data coverage.",
    "match_boxscore_for_football_data": "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**\n\nP.S.\nFull data is available at Boxscore endpoint but can not shown in mock  response.",
    "daily_match_list_all_for_football_data": "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "coach_appearances_by_count_for_ncaa_final_four": "Get a list of coach appearances in the Final Four ranked by count.",
    "list_of_mops_for_ncaa_final_four": "Get a list of every Final Four Most Outstanding Player sorted alphabetically.",
    "list_of_venues_for_ncaa_final_four": "Get a list of every Final Four venue sorted alphabetically.",
    "matchlineups_for_icehockeyapi": "Get detailed information on the lineups for a specific Ice Hockey match using the match ID.",
    "tvcountries_for_icehockeyapi": "Get a list of countries and their respective TV channels broadcasting a specific Football match.",
    "leagueawaystandings_for_icehockeyapi": "Get the away standings for a specific Ice Hockey league by providing the tournament ID and season ID.",
    "bet365_inplay_for_betsapi": "bet365 inplay data",
    "bet365_upcoming_events_for_betsapi": "get bet365 fixtures",
    "bet365_inplay_event_for_betsapi": "inplay event with all scores/stats/markets",
    "sports_list_for_flashlive_sports": "Get a list of sports",
    "player_career_for_flashlive_sports": "Get player career by player ID",
    "event_ball_ball_cricket_for_flashlive_sports": "Get a ball by ball on an event (cricket) by event ID",
    "starting_grid_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about a specific race starting grid by passing path parameters for year & location. The parameters are required.",
    "race_calendar_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the current championship schedule and information about the **next round**. Time zone is GMT +00:00 Europe/London",
    "hall_of_fame_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about all F1 champions also known as the Hall of Fame. The result of the endpoint will be a breakdown of driver's name and in which year the driver was crowned champion.",
    "team_roster_for_national_football_players": "Returns roster of football team. Use team abbreviation when specifying team (i.e. BUF, NE, MIA, etc.). See /teams to get team names and abbreviations",
    "all_teams_for_national_football_players": "Returns an array of all football teams and abbreviations",
    "getforecastbyid_for_simple_surf_forecast_api": " ",
    "gettodaysforecast_for_simple_surf_forecast_api": " ",
    "event_odds_for_flashlive_sports": "Get odds by event ID",
    "summary_news_data_for_flashlive_sports": "Get brief information about the news by article_id",
    "tournament_stages_data_for_flashlive_sports": "Get tournament data by tournament_stage_id",
    "inplay_for_sports_betting_api": "Inplay List",
    "teams_get_table_for_livescore_v2": "Get table of a team",
    "matches_list_by_date_deprecated_for_livescore_v2": "List all matches by specific date",
    "matches_v2_list_by_league_for_livescore_v2": "List all matches by specific league and table\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png",
    "list_of_coaches_for_ncaa_final_four": "Get a list of every Final Four coach sorted alphabetically.",
    "runner_up_for_ncaa_final_four": "Get runner-up team data for the given year.",
    "location_for_ncaa_final_four": "Get the Final Four city and venue for the given year.",
    "geteventsid_for_wosti_futbol_tv_peru": "Obtener el evento por identificador \u00fanico  del listado de eventos de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id.",
    "getcompetitions_for_wosti_futbol_tv_peru": "Obtener el listado de competiciones de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro.",
    "getteams_for_wosti_futbol_tv_peru": "Obtener el listado de equipos de f\u00fatbol televisados en Per\u00fa.",
    "player_stats_for_football_pl": "Player Stats",
    "team_season_statistics_for_football_datafeeds_by_rolling_insights": "Returns statistics for teams",
    "topscorersintheplayoffsbyseasontotalpoints_for_nba_statistics_api": "## Return top players (playoffs) by total points in descending order.\n\n_Playoffs season is specified in the URL._",
    "foot_for_adere": "test",
    "get_player_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find Justin Fields, you can use \"Justin_fields\" and it will bring him back.  Or try with playerName=justin and it will return a list of guys with justin in their name.\n\n/getNFLPlayerInfo?playerID=4374033\n\n/getNFLPlayerInfo?playerName=justin_fields\n\netc",
    "leaguelastmatches_for_handballapi": "Get structured cup trees for a handball unique tournament season",
    "teamlogoimage_for_handballapi": "Get team image",
    "leaguelogoimage_for_handballapi": "Get image of a handball unique tournament by ID",
    "provider3_live_list_for_football_betting_odds": "get all matches",
    "provider2_live_inplaying_for_football_betting_odds": "get inplaying matches list",
    "medias_by_player_id_for_sportscore": "Get a list of media belonging to a specified player",
    "league_data_for_sportscore": "Returns league data",
    "manager_transfers_for_sportscore": "Returns a manager transfers",
    "eredivisie_standings_for_eredivisie_standings": "Eredivisie Standings",
    "leagueseasons_for_rugbyapi2": "Get the seasons of a specific Rugby league.",
    "leaguelastmatches_for_rugbyapi2": "Get the last matches for a specific Rugby league and season.",
    "seasonal_market_statistics_points_for_basketball_data": "Provides the seasonal market points statistics of the team in the tournament.",
    "seasonal_statistics_quarter_analysis_for_basketball_data": "Provides the seasonal quater analysis and statistics of the team in the tournament.",
    "daily_match_list_scheduled_for_basketball_data": "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "featured_games_for_allscores": "Get featured games.",
    "competitor_large_image_for_allscores": "Get competitor large image. It generates image/png.",
    "game_predictions_for_allscores": "Get game predictions.",
    "argentina_latest_matches_for_surebets_2": "Latest matches in Argentina by bookie - updated every 24 hours",
    "norway_latest_odds_for_surebets_2": "Latest odds for matches in Norway - updated every 6 hours",
    "surebets_for_surebets_2": "The provided endpoint lists all the latest arbitrage opportunities, sorted in chronological order. Surebets can be led together by the same \"id\".\nPlease be careful and always verifiy the odds and the matched games.",
    "competitions_matches_for_zeus_api": "List the current matches for a league \ud83c\udd9a.",
    "statistic_list_most_valuable_competitions_for_transfermarket": "List most valuable competitions",
    "matches_get_highlights_for_transfermarket": "Get highlights of specific match",
    "competition_image_for_soccerway_feed": "Get competition image",
    "live_game_data_for_hockey_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.",
    "team_season_statistics_for_hockey_datafeeds_by_rolling_insights": "Returns statistics for teams",
    "daily_schedule_for_hockey_datafeeds_by_rolling_insights": "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET.",
    "results_for_msport": "Msport  Soccer results at date - a comprehensive soccer match archive",
    "areas_id_for_zeus_api": "List one area given by id \ud83d\udd0d.",
    "countries_list_for_football_xg_statistics": "The method is used to get list of all countries",
    "odds_for_upcoming_fixtures_for_football_xg_statistics": "Get odds of future fixtures. \nUpdates every minute.",
    "tournaments_list_by_countryid_for_football_xg_statistics": "The method is used to get a list of leagues (divisions) by the country id.",
    "ufc_fight_night_holloway_vs_allen_april_15_2023_for_mma_stats": "**Get details to UFC Fight Night: Holloway vs. Allen**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "match_summary_for_soccer_data": "Match scores, match status, team names, stadium, referee and weather forecast.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
    "seasonal_goal_analysis_conceding_first_for_soccer_data": "Provides the conceding first goal statistics of the teams against to other teams in the tournament in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
    "result_statistics_for_soccer_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
    "qualifying_results_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the qualifying results for a specific race by specifying the year and location as path parameters. The parameters are required.",
    "practice_session_results_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about a specific practice session by passing path parameters for **session number**, **year** &  **location**.",
    "api_v2_activities_before_2014_07_24t18_00_00z_after_2014_07_14t18_00_00z_for_2peak_com_dynamic_training_plans_for_cycling_running_and_triathlon": "Get Activities",
    "stagedetails_for_motorsportapi": "Get the details of a specific Motorsport stage.",
    "categorystages_for_motorsportapi": "Get all stages for a specific Motorsport category.",
    "player_injuries_for_hockey_datafeeds_by_rolling_insights": "Returns a record of each player's injury on a team",
    "players_get_news_for_unofficial_cricbuzz": "Get news by player",
    "series_get_news_for_unofficial_cricbuzz": "Get news by series",
    "series_get_stats_filters_for_unofficial_cricbuzz": "Get supported filters",
    "matches_get_scorecard_v2_for_cricbuzz_cricket": "Get match scorecard",
    "series_get_stats_filters_for_cricbuzz_cricket": "Get supported filters",
    "players_search_for_cricbuzz_cricket": "Search player by name",
    "media_watch_for_livescore_sports": "Media watch (video playlist)",
    "events_info_for_livescore_sports": "Get event info form event ID",
    "meta_specification_for_livescore_sports": "Get meta specification data",
    "series_get_matches_for_unofficial_cricbuzz": "Get recent and upcoming matches by series",
    "venues_get_matches_for_unofficial_cricbuzz": "Get scheduled matches by venue",
    "player_injuries_for_football_datafeeds_by_rolling_insights": "Returns a record of each player's injury on a team",
    "get_all_teams_for_free_nba": "This endpoint retrieves all teams for the current season.",
    "get_all_stats_for_free_nba": "Retrieves all stats",
    "performance_stats_for_past_predictions_for_football_prediction": "Returns information about the accuracy of past predictions. (in the last day, 7 days, 14 days and 30 days) Can be additionally filtered by federation and market. If no market filter is provided it defaults to classic",
    "get_teams_by_id_for_nba_stats_v2": "Api to query teams",
    "get_per_game_post_season_by_id_for_nba_stats_v2": "Api to query per game post season",
    "get_career_totals_allstar_by_id_for_nba_stats_v2": "Api to query career totals allstar",
    "top_athletes_for_allscores": "Get top athletes.",
    "paging_games_for_allscores": "Get games from paging for competitors or competitions.",
    "competition_details_for_allscores": "Get competition details.",
    "final_four_for_ncaa_final_four": "Get the Final Four teams for the given year.",
    "team_championships_by_count_for_ncaa_final_four": "Get a list of teams ranked by total number of championships.",
    "playerstatisticsseasons_for_footapi": "Get the statistics seasons for a specific Football player.",
    "leagueeventsbyround_for_footapi": "This operation allows you to retrieve events for a specified football league, season, and round.",
    "tournamentplaceholderimage_for_footapi": "Get the tournament placeholder image in PNG format.",
    "get_per36_post_season_for_nba_stats_v2": "Api to query per36 post season",
    "get_season_totals_regular_season_by_id_for_nba_stats_v2": "Api to query season totals regular season",
    "players_search_for_divanscore": "Search for players by name",
    "matches_get_head2head_for_divanscore": "Get head-to-head information between two teams",
    "managers_detail_for_divanscore": "Get information of specific manager",
    "ufc_fight_night_song_vs_simon_april_28_2023_for_mma_stats": "**Get details to UFC Fight Night: Song vs. Simon**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "ufc_287_pereira_vs_adesanya_2_april_08_2023_for_mma_stats": "**Get details to UFC 287: Pereira vs. Adesanya 2.**.    \n  .Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "daily_match_list_live_for_soccer_data": "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "seasonal_goal_analysis_goal_conceded_minutes_for_soccer_data": "Provides the goal conceded goal statistics of the teams against to other teams in the tournament in the minutes intervals(0-10, 11-20, 21-30...etc.)",
    "seasonal_market_statistics_goals_for_soccer_data": "Provides under/over, both team to score and also total goals statistics of the team in the tournament.\n\nP.S.\nFull data is available at Seasonal Market Statistics: Goals endpoint but can not be shown in mock response.",
    "tours_for_tennis_live_data": "Lists the various tours and associated available to query on the other endpoints",
    "matches_by_date_for_tennis_live_data": "Lists matches in all tours, and tournaments,  for a given date. If no date is supplied, returns matches today.",
    "event_preview_for_flashlive_sports": "Get an event preview by event ID.",
    "event_summary_for_flashlive_sports": "Get summary of the event by event ID. Incidents of the match",
    "stages_list_for_flashlive_sports": "Get a list of stages by sport ID",
    "baseball_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Baseball Live Matches endpoint.",
    "handball_live_matches_for_sports_live_scores": "Returns Handball Live Matches with betting odds",
    "football_live_matches_for_sports_live_scores": "Returns Football Live Matches with betting odds.",
    "leaguedetails_for_handballapi": "Get details of a handball unique tournament by ID",
    "leaguegroupmatches_for_handballapi": "Get group events for a handball tournament season",
    "leaguerounds_for_handballapi": "Get rounds for a handball unique tournament season",
    "getcompetitionsid_for_wosti_futbol_tv_peru": "Obtener competici\u00f3n por identificador \u00fanico del listado de competiciones de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id.",
    "getevents_for_wosti_futbol_tv_peru": "Obtener el listado de eventos de partidos de f\u00fatbol televisados en Per\u00fa.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro.",
    "test_for_test_opta": "test",
    "epl_for_test_opta": "EPL Key",
    "tournament_info_for_ice_hockey_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.",
    "tournament_standings_for_ice_hockey_data": "Team Rankings for a specific competition.",
    "team_news_for_flashlive_sports": "Get a list of news by team ID",
    "ranking_data_for_flashlive_sports": "Get a ranking data by ranking ID",
    "news_details_for_flashlive_sports": "Get detailed information about the news by article_id",
    "elvar_endpoint_for_elvar": "elvar endpoint",
    "nhl_standings_for_nhl_api": "This API endpoint will return the standings for the NHL.\n\nParameters:\n->year\n-> group  //acceptable group names: 'league', 'conference', 'division'. if not described, default: 'league'",
    "nhl_summary_for_nhl_api": "With this endpoint you can get the game summary data for a specified game.",
    "schedule_for_cycling_schedule": "Cycling schedule",
    "tournament_standings_for_soccer_data": "Team Rankings for a specific competition.",
    "tournamentlastmainevents_for_mmaapi": "Get last main events for a unique tournamente",
    "teamlastevents_for_mmaapi": "Get information about the last events for a specific team.",
    "search_for_mmaapi": "This operation allows you to search for MMA teams and tournaments based on the search term provided.",
    "driver_s_quotes_by_id_for_f1_drivers_quotes": "Gets a quote by its ID.",
    "list_of_authors_with_photos_for_f1_drivers_quotes": "Shows the list of F1 drivers and personalities who have quotes saved in this API  with they photos and IDs",
    "fixtures_by_series_for_cricket_live_data": "Lists Fixtures and Results for a given tournament.",
    "teams_statistics_for_sofasport": "Get teams statistics of the season",
    "bans_esports_for_sofasport": "Get bans (esports) by event_id",
    "standing_competitor_motorsport_for_sofasport": "Get standing competitor by stage_id (motorsport)",
    "game_type_info_for_mlb_data": "Retrieve a list of one or numerous game types.  For example, if you wanted to know when the National League Championship Series was played, this endpoint could tell you that.",
    "projected_pitching_stats_for_mlb_data": "Retrieve a players projected pitching stats for a given season.  Omitting the season parameter will return the actual stats for the players earliest major league season.",
    "get_40_man_roster_for_mlb_data": "Retrieve a team\u2019s 40 man roster.",
    "headtoheadmatches_for_basketapi": "Get head-to-head matches for a specific basketball match using the custom ID.",
    "categoryschedules_for_basketapi": "Get the schedules of the day for a specific basketball category using the category ID and the date.",
    "ligue_1_standings_for_ligue_1_standings": "Ligue 1 Standings",
    "places_for_decathlon_sport_places": "List out places around a location",
    "matchplayershotmap_for_footapi": "Get the shotmap of a specific player in a specific Football match.",
    "categoryschedules_for_footapi": "Get Football match schedules for a specific date and category, including match timings, teams, and other relevant information.",
    "matchhighlights_for_footapi": "This operation returns highlights of a specific football match, including key moments and player actions.",
    "topscorersbyseasontotalpoints_for_nba_statistics_api": "## Return top players by total points in descending order.\n\n_Season is specified in the URL._",
    "playershotchartdataseasonplayoffs_for_nba_statistics_api": "## Return player shot chart data (season & playoffs)\n\n### Current Players Available:\n\n- LeBron James\n- James Harden\n- Stephen Curry\n    \n\n_Player name and Season are specified in the request URL._\n\nShot chart is available [here](https://cdn.ssref.net/req/1/images/bbr/nbahalfcourt.png).",
    "related_news_for_flashlive_sports": "Get related news by article_id",
    "event_prematch_odds_for_flashlive_sports": "Get event prematch odds by event ID",
    "horse_stats_for_horse_racing": "Get horse results history.",
    "weekly_schedule_for_baseball_datafeeds_by_rolling_insights": "Returns all events from the date specified plus 7 days in advance",
    "bet365_inplay_filter_for_betsapi": "bet365 inplay filter",
    "bet365_prematch_odds_for_betsapi": "prematch odds",
    "food_info_for_fitness_calculator": "Find the food info for a food id from the food database.",
    "bmi_for_fitness_calculator": "Find body mass index value (BMI) with this endpoint. You just need to enter three parameters which are age, weight (kg), and height(cm) information.",
    "macros_amounts_for_fitness_calculator": "Find the amount of macro nutrients in four different categories which are balanced, low-fat, low-carbs and high-protein for a specific calorie burned. There are 6 inputs which are age, gender, height, weight, activity level and goal. \n\nFor activity level :\n    \n-     \"1\" : \"BMR\",\n-     \"2\" : \"Sedentary: little or no exercise\",\n-     \"3\" : \"Exercise 1-3 times/week\",\n-     \"4\" : \"Exercise 4-5 times/week\",\n-     \"5\" : \"Daily exercise or intense exercise 3-4 times/week\",\n-     \"6\" : \"Intense exercise 6-7 times/week\",\n-     \"7\" : \"Very intense exercise daily, or physical job\" \n\nFor goals : \n\n-      \"maintain\" : \"maintain weight\",\n-     \"mildlose\" : \"Mild weight loss\",\n-     \"weightlose\" : \"Weight loss\",\n-     \"extremelose\" : \"Extreme weight loss\",\n-     \"mildgain\" : \"Mild weight gain\",\n-     \"weightgain\" : \"Weight gain\",\n-     \"extremegain\" : \"Extreme weight gain\"",
    "team_information_for_baseball_datafeeds_by_rolling_insights": "This endpoint returns team information",
    "teams_by_competition_season_for_rugby_live_data": "Lists teams for a given competition and season",
    "competitions_for_rugby_live_data": "Lists active competitions available to query",
    "fixtures_by_team_for_rugby_live_data": "Lists only upcoming/in play fixtures for a given team. \n\n**Note** it will not list any results, so when a match reaches result status it drops off. Use Fixtures and Results By Team OR Fixtures  And Results by Team by Season endpoint for this functionality.",
    "fixture_by_fixtureid_for_football_xg_statistics": "The method is used to get info and events of fixtures by the fixture id.",
    "leaguehometeamevents_for_footapi": "Get last 5 home matches of a specific Football league.",
    "leaguelastmatches_for_footapi": "This operation returns the last matches of a football league for the specified tournament and season ID, including match timings, teams, and other relevant information.",
    "matchstatistics_for_footapi": "Get the statistics for a specific Football match.",
    "news_for_football_v2": "Search all the news for a specific championship.",
    "match_boxscore_for_basketball_data": "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "trainers_win_rate_for_horse_racing": "Get Trainers stats in the last days.\nRuns, Wins and Win Rate in %.",
    "tomorrow_super_sure_vip_double_chance_matches_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow super sure and precise Double Chance Matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "tomorrow_super_sure_vip_ht_ft_matches_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow super sure and precise HT/FT matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "yesterday_super_sure_vip_ht_ft_matches_for_168predict_vip_football_predictions": "This endpiont delivers yesterday super sure VIP HT/FT matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "matches_get_hcommentaries_for_unofficial_cricbuzz": "Another endpoint used to get match commentaries",
    "teams_get_players_for_unofficial_cricbuzz": "Get players by team",
    "daily_match_list_scheduled_for_ice_hockey_data": "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "daily_match_list_live_for_ice_hockey_data": "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "soccer_sports_open_data_for_sport_v2": " Sports Open Data",
    "copy_of_endpoint_soccer_sports_open_data_for_sport_v2": " Sports Open Data",
    "nhl_box_score_for_nhl_api": "From the NHL, this endpoint retrieves game box score data for a specific game.",
    "nhl_team_players_for_nhl_api": "This API endpoint will return the team roster information for a specific NHL team.",
    "get_specific_fighter_for_ufc_fighters_v2": "endpoint to get specific fighter stats\nFirstname_Lastname\nfirst letter of first name shoud be upper and same for last name\nfirstname and lastname seprated with underscore _",
    "get_all_fighters_for_ufc_fighters_v2": "endpoint with all ufc fighters stats in the history",
    "team_appearances_for_ncaa_final_four": "Get a list of every team and the years they appeared in the Final Four.",
    "list_of_schools_for_ncaa_final_four": "Get a list of every Final Four school sorted alphabetically.",
    "today_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers daily sure and precise over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "eventsmetadata_for_sportifyapi": "Events Meta data",
    "tournamentdetailsbyid_for_sportifyapi": "Tournament Details By ID",
    "uniquetournaments_for_sportifyapi": "Unique Tournaments",
    "get_scheduled_games_for_viperscore": "With \"Get scheduled games\" you'll receive all games which a scheduled for a specific date.",
    "get_team_transfers_for_viperscore": "Here you'll get all in and outgoing transfers",
    "get_best_players_in_playoffs_if_exist_for_viperscore": "Works the same like regular season just for the playoffs.",
    "world_cup_champions_for_transfermarkt_db": "World cup champions. Titles and success",
    "clubs_short_info_for_transfermarkt_db": "Get short info about clubs by IDs",
    "competition_standings_for_transfermarkt_db": "Get competition standings",
    "games_scores_for_allscores": "Get games scores.",
    "competitor_current_games_for_allscores": "Get competitor current games.",
    "competitor_squads_for_allscores": "Get competitor squads.",
    "leaguehomestandings_for_handballapi": "Get home standings for a handball unique tournament and season",
    "leaguepergametopplayers_for_handballapi": "Get overall top players per game for a handball unique tournament and season",
    "managerlastmatches_for_basketapi": "Get the last matches for a specific basketball manager.",
    "leagueoveralltopplayers_for_basketapi": "Get the best players overall in the basketball league.",
    "leagueawaystandings_for_basketapi": "Get the away standings for a specific basketball league in a given tournament and season.",
    "competition_brackets_for_allscores": "Get competition braackets.",
    "competition_standings_for_allscores": "Get competition standings.",
    "getdraftbyyear_for_nhl_stats_and_live_data": " ",
    "getdivisions_for_nhl_stats_and_live_data": "This only retrieves active divisions. For inactive divisions, use `/divisions/{id}`.",
    "fixtures_list_by_seasonid_for_football_xg_statistics": "The method is used to get a list of fixtures by the season id.",
    "cricket_league_rankings_for_sports_live_scores": "Returns the standings for a given league ID. You can retrieve League IDs from the Cricket Live Matches endpoint.",
    "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats": "This call will grab a map of all of the games a player has played in the season.     \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\nExample:\nCorrect way to get the stats for Nikola Vucevic for his game against the Heat on 10/19/2022 would be this:\n/getNBAGamesForPlayer?playerID=28268405032&gameID=20221019_CHI@MIA\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nIf you want his games from last season, do this..\n/getNBAGamesForPlayer?playerID=28268405032&season=2022\n\nBut if you wanted to get all of his games this season, you don't have to include the season. Simply make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNBABoxScore call with that specific gameID.",
    "teams_personnel_teamids_for_baseball": "Query baseball team history by ID",
    "teams_coaches_teamids_for_baseball": "Query baseball team coaches by ID",
    "schedule_for_baseball": "Baseball schedule",
    "fixtures_for_football_v2": "Get all the fixtures from a championship",
    "competitions_for_football_v2": "Get a list of all available competitions",
    "tvcountries_for_footapi": "Get a list of countries and their respective TV channels broadcasting a specific Football match.",
    "refereelastmatches_for_footapi": "Get the list of the last matches by a football referee, paginated by the given page number.",
    "teamstandingsseasons_for_handballapi": "Get seasons standings for a handball team by ID",
    "leaguemedia_for_handballapi": "Get media for a handball unique tournament",
    "driver_details_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve a detailed information about a specific driver. You will need to provide the driver's name in the path parameter called team_name. You can specify either full name of the team or partial. If partial name is provided as parameter, still the api will make an attempt to search and return the expected result. Check out the example response for an overview of the result.",
    "stats_get_icc_rankings_for_cricbuzz_cricket": "Get ICC rankings",
    "news_get_categories_for_cricbuzz_cricket": "Get all available categories",
    "event_data_for_sofascores": "Get event data by event_id",
    "season_data_for_sofascores": "Get data about the season",
    "statistics_overall_for_sofascores": "Get team overall statistics by team ID, unique tournament ID, season ID",
    "team_stats_for_nba_team_stats": "Provides team stats for the current league year. Optionally, supply a `leagueYear` or `team` parameter to get results for those options.",
    "schedule_live_for_sofascores": "Get live events schedule",
    "lineups_esports_for_sofascores": "Get games (esports) by event_id",
    "team_near_events_for_sofascores": "Get team near events by team ID",
    "constructor_standings_for_f1_live_motorsport_data": "Lists constructor standings for given season.",
    "get_order_for__demo_project": " ",
    "get_user_orders_for__demo_project": " ",
    "squadposition_for_football_v2": "Search a squad in a table for its position.",
    "round_list_for_global_data": "Provides the list of the global rounds for the sports.",
    "list_top_10_for_transfermarkt_db": "Get list of top 10 players",
    "clubs_upcoming_fixtures_for_transfermarkt_db": "Get upcoming fixtures by club_ids",
    "player_transfers_for_transfermarkt_db": "Get player transfers by player_id",
    "statistic_list_best_fifa_players_for_transfermarket": "List best FIFA players",
    "competitions_get_table_for_transfermarket": "Get table by competition and season",
    "players_get_achievements_for_transfermarket": "Get achievements of a player",
    "nhl_score_board_for_nhl_api": "This API endpoint will get the NHL scoreboard data for a specified date if available.",
    "leaguenextmatches_for_handballapi": "Get structured cup trees for a handball unique tournament season",
    "teamlastmatches_for_handballapi": "Get previous matches for a handball team by ID and page",
    "playernearmatches_for_handballapi": "Get near matches of a handball player by ID",
    "geteventtypes_for_sportapi": "GetEventTypes  data api",
    "gettopsportmenu_for_sportapi": "GetTopSportMenu Api Data",
    "gettopsports_for_sportapi": "GetTopSports api data",
    "transfers_list_for_transfermarket": "List transfers information along with player info, and market value",
    "statistic_list_uefa_5year_rankings_for_transfermarket": "List UEFA 5-year rankings",
    "competitions_get_short_info_for_transfermarket": "Get short information of one or more competitions",
    "players_photo_for_soccerway_feed": "Get player photo",
    "getcompetitionsid_for_wosti_futbol_tv_spain": "Obtener competici\u00f3n por identificador \u00fanico del listado de competiciones de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints requiere de un par\u00e1metro denominado Id.",
    "live_game_data_for_baseball_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.",
    "player_injuries_for_baseball_datafeeds_by_rolling_insights": "Returns a record of each player's injury on a team",
    "sports_for_pinaculo": "Get sports.",
    "manager_photo_for_os_sports_perform": "Get manager photo by manager ID",
    "schedule_by_category_for_os_sports_perform": "Get event schedule by category and date",
    "unique_tournament_seasons_for_os_sports_perform": "Get seasons of the unique tournament",
    "rugby_category_tournaments_for_allsportsapi": "Get all leagues from category.",
    "cricket_match_for_allsportsapi": "Get match by id.",
    "american_football_match_statistics_for_allsportsapi": "Get match statistics.",
    "competition_performance_indices_for_metrx_factory": "Returns a snapshot of global competition performance indices sorted by rank in ascending order.\nSeparate index lists are maintained for club/national team and domestic/international competitions.\n\nIf no parameters are provided then the latest club team competitions ranking is returned in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. performances returned: 5`",
    "match_metrics_for_metrx_factory": "Returns the metrics of a single match, a specific team or matches within a time span.\n\nThis is the main endpoint for retrieving match related figures such as performance ratios, expected and actual scores, statistically fair and market odds. The indication of projections controls which data should be collected and has direct impact on the payload and billed credits.\n\nIf no parameters are provided then the performance index of competing teams *(TI)*, expected goals *(XG)* and expected moneyline odds *(XM)* along with match details *(MD)* are returned for upcoming matches. The time span covering next matches ranges between 8 hours for *Basic* and 60 hours for paid subscriptions.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. matches returned: 3`",
    "odds_for_fdj": "Latest Odds for FDJ",
    "matches_for_fdj": "Latest Matches for FDJ",
    "categories_for_rugbyapi2": "Get the list of available rugby categories, including their names and IDs.",
    "leagueawayteamevents_for_rugbyapi2": "Get the away team events for a specific Rugby league and season.",
    "playerplaceholderimage_for_rugbyapi2": "Get the player placeholder image in PNG format.",
    "today_sure_vip_under_3_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers daily sure and precise under 3.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "transfers_records_for_transfermarkt_db": "Get the transfers records",
    "player_performance_for_transfermarkt_db": "Get player performance",
    "player_info_for_transfermarkt_db": "Get player info. Name, image, shirt number, nationalities, market value, club",
    "league_matchups_for_pinaculo": "Get league matchups.",
    "matchup_related_markets_straight_for_pinaculo": "Get matchup related markets straight.",
    "eventsbydate_for_sportifyapi": "Events By Date",
    "eventlineups_for_sportifyapi": "Event Lineups",
    "playerpenaltyhistoryinuniquetournament_for_sportifyapi": "Player Penalty History in Unique Tournament",
    "getcouponmatchescount_for_sport_odds": "GetCouponMatchesCount data api",
    "gettopsportmenu_for_sport_odds": "GetTopSportMenu data api",
    "result_statistics_for_basketball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "match_summary_for_basketball_data": "Basic summary about the match that includes match scores, match status, team names, venue, and round info.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "ufc_fight_night_emmett_vs_topuriar_june_24_2023_for_mma_stats": "**UFC Fight Night: Emmett vs. Topuria**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "getmenubysport_for_sport_odds": "GetMenuBySport data api",
    "get_a_specific_team_for_free_nba": "This endpoint retrieves a specific team",
    "live_fantasy_score_for_fantasy_cricket": "Real-time and Low-Latency Match Live Score API. Get the match score, Batting, bowling and fielding information for a specified match in real time\nAny issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com",
    "get_pregame_form_for_viperscore": "If you're a detail hunter this is the place for you! Get the information about the last games both teams accomplished.",
    "get_player_details_for_viperscore": "Get more information about a playerId",
    "get_all_season_games_for_viperscore": "This returns all games for a competition season. Please note that this only includes scheduled games. For example the NFL Super Bowl event is not included at the start of the season.",
    "heatmap_for_sofascores": "Get heatmap player by event_id and team_id",
    "player_statistics_for_sofascores": "Get player statistics. Use `regularSeason` - for hockey",
    "team_recent_form_for_sofascores": "Get team recent form by team ID",
    "concrete_match_for_sports_odds_betapi": "data of  concrete match",
    "data_tournaments_for_sports_odds_betapi": "Data Tournaments",
    "data_country_all_for_sports_odds_betapi": "Data from all countries for all sports",
    "line_updates_changes_in_odds_for_sportsbook_odds": "All new odds and changes to odds from all sites are compiled in these dictionaries. The dictionaries are timestamped for exactly when they were processed and the exact update times in UTC of the lines are shown in the dictionary (labeled \"ut\" for \"update time\"). Use GET param \"since_timestamp\" as a UTC timestamp to get updates since a given time. If you do not include this parameter it give only the most recent updates file. 3 minutes is the maximum amount of updates stored by the server.",
    "oldsort_for_betsports": "oldSort data",
    "leagues_for_baseball": "Baseball leagues",
    "game_matrix_gamepk_for_baseball": "Query Baseball scores, stats, betting information etc...",
    "drivers_standings_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve drivers standings data about a specifit F1 championship by specifying a year. If you ommit the ***year*** query parameter, a default value will be set to current year. The response data will contain information about the position in the rank list, driver's name, nationality, team and total points accumulated.",
    "getallgames_for_betsports": "getAllGames data",
    "news_get_topics_for_unofficial_cricbuzz": "Get all available topics",
    "teams_get_schedules_for_unofficial_cricbuzz": "Get scheduled matches for a team",
    "get_per_game_career_regular_season_by_id_for_nba_stats_v2": "Api to query per game career regular season",
    "teamnearmatches_for_rugbyapi2": "Get near matches for a specific Rugby team.",
    "matchtvchanneldetails_for_rugbyapi2": "Get the details of a specific TV channel broadcasting a specific Football match.",
    "teamplaceholderimage_for_rugbyapi2": "Get the team placeholder image in SVG format.",
    "baseball_league_rankings_for_sports_live_scores": "Returns the standings for a given league ID. You can retrieve League IDs from the Baseball Live Matches endpoint.",
    "futsal_league_rankings_for_sports_live_scores": "Returns the standings for a given league ID. You can retrieve League IDs from the Futsal Live Matches endpoint.",
    "esports_live_matches_for_sports_live_scores": "Returns Esports Live Matches with betting odds",
    "team_information_for_basketball_datafeeds_by_rolling_insights": "This endpoint returns team information",
    "season_schedule_for_basketball_datafeeds_by_rolling_insights": "Returns season schedule for the specified season. If omitted, returns the schedule for current season.",
    "weekly_schedule_for_basketball_datafeeds_by_rolling_insights": "Returns all events from the date specified plus 7 days in advance",
    "nhl_team_list_for_nhl_api": "This API endpoint will return the list of all NHL teams",
    "meta_translations_for_livescore_sports": "Get translations data",
    "teams_statistics_for_livescore_sports": "Get team statistics by team ID.",
    "market_statistics_points_for_basketball_data": "Provides the market points statistics which are \u201cFirst Quarter Result\u201d, \u201cHighest Scoring Quarter\u201d and also \u201cOrdinary/Half Time Winning Margins\u201d for both two teams against the other teams in the tournament.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "leaguetotalstandings_for_americanfootballapi": "This endpoint retrieves total standings for a specific league in a given season.",
    "headtoheadmatches_for_americanfootballapi": "Get head-to-head match data for a specific American Football match using its custom ID.",
    "matchbestplayers_for_americanfootballapi": "Get the best players for a specific American Football match by providing its ID.",
    "getfavouriteschamps_for_sport_odds": "GetFavouritesChamps data api",
    "tournament_standings_for_football_data": "Team Rankings for a specific competition.",
    "match_game_leaders_for_football_data": "Live passing, rushing and receiving stats leaders of the game.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**",
    "match_play_by_play_for_football_data": "Provides all match drives and plays during the match with their detailed informations.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**",
    "teams_by_sport_id_for_sportscore": "Get a list of teams belonging to a specified sport. Returns a list of teams",
    "team_list_for_sportscore": "Returns a list of team",
    "section_list_for_sportscore": "Returns a list of section",
    "ufc_288_sterling_vs_cejudo_may_06_2023_for_mma_stats": "**Get details to  UFC 288: Sterling vs. Cejudo**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "ufc_fight_night_kara_france_vs_albazi_june_03_2023_for_mma_stats": "**Get details to UUFC Fight Night: Kara-France vs. Albazi**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "transfers_for_football_v2": "Get a list of transfers for the current season",
    "player_data_for_flashlive_sports": "Get player data by player ID",
    "event_throw_throw_darts_for_flashlive_sports": "Get throw by throw (darts) by event ID",
    "yesterday_super_sure_vip_draw_matches_for_168predict_vip_football_predictions": "This endpiont delivers yesterday super sure and precise **Draw** matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "today_super_sure_vip_double_chance_matches_for_168predict_vip_football_predictions": "This endpiont delivers daily super sure and precise Double Chance matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "tomorrow_super_sure_vip_prediction_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow super sure and precise match forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "copa_sudamericana_latest_odds_for_surebets_2": "Latest odds for Copa Sudamericana matches - Updated every 6 hours",
    "copa_libertadores_latest_odds_for_surebets_2": "Latest odds for Copa Libertadores matches - Updated every 6 hours",
    "matches_get_scorecard_for_cricbuzz_cricket": "Get match scorecard",
    "schedules_list_for_cricbuzz_cricket": "List scheduled matches",
    "venues_get_info_for_cricbuzz_cricket": "Get venue info",
    "national_team_statistics_for_sofascores": "Get player's stats by national teams",
    "teams_statistics_for_sofascores": "Get teams statistics of the season",
    "tournament_info_for_sofascores": "Get tournament info by tournament id",
    "seasons_list_by_tournamentid_for_football_xg_statistics": "The method is used to get a list of seasons  by the league id.",
    "get_mlb_games_and_stats_for_a_single_player_for_tank01_mlb_live_in_game_real_time_statistics": "This call will grab a map of all of the games a player has played this season.   \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \n\nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nExample:\nCorrect way to get the stats for Aaron Judge for the season opener against SF on 3/30/2023, would be this:\n/getMLBGamesForPlayer?playerID=592450&gameID=20230330_SF@NYY\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getMLBGamesForPlayer?playerID=592450\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getMLBBoxScore call with that specific gameID.",
    "get_team_schedule_for_tank01_mlb_live_in_game_real_time_statistics": "This endpoint returns the full season schedule for any MLB team identified in the parameters.\n\nExample:\n\n/getMLBTeamSchedule?teamID=6\nor\n/getMLBTeamSchedule?teamAbv=CHW\n\nCalling it either way will return the same result, a list of the White Sox games this season, each game in it's own map.  If the game has been played, the linescore and game result will be included in the game's map.\n\nYou can also add the \"season\" parameter if you want to specify season.  Right now we only have season 2022 and 2023.   \nDefault season is current season.",
    "get_daily_scoreboard_live_real_time_for_tank01_mlb_live_in_game_real_time_statistics": "Use this if you want basic game data returned.  It's lighter/quicker than getting the full boxscore, for applications that do not need anything but basic data like line score, away/home, etc.\n\n/getMLBScoresOnly\n\nThis can be called using ?gameDate (returns all games for a date, format YYYYMMDD)  or ?gameID (returns one game, format YYYYMMDD_AWAY@HOME)\n\nExample:\n\n/getMLBScoresOnly?gameID=20220409_CHW@DET\n\nreturns:\n`{2 items\n\"statusCode\":200\n\"body\":\"{\"20220409_CHW@DET\": {\"away\": \"CHW\", \"home\": \"DET\", \"gameID\": \"20220409_CHW@DET\", \"gameStatus\": \"Completed\", \"lineScore\": {\"away\": {\"H\": \"10\", \"R\": \"5\", \"team\": \"CHW\", \"scoresByInning\": {\"1\": \"2\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"1\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"1\"}, \"home\": {\"H\": \"7\", \"R\": \"2\", \"team\": \"DET\", \"scoresByInning\": {\"1\": \"0\", \"2\": \"0\", \"3\": \"0\", \"4\": \"0\", \"5\": \"0\", \"6\": \"2\", \"7\": \"0\", \"8\": \"0\", \"9\": \"0\"}, \"E\": \"0\"}}, \"currentInning\": \"\", \"currentOuts\": \"\", \"currentCount\": \"\", \"awayResult\": \"W\", \"homeResult\": \"L\"}}\"\n}`",
    "wnba_summary_for_wnba_api": "This endpoint gets the WNBA game summary data for a specific game.",
    "wnba_standings_for_wnba_api": "The endpoint provides you with the team standings for the WNBA",
    "wnba_box_score_for_wnba_api": "This endpoint returns the WNBA game box score data for a specified game.",
    "playerstatisticsseasons_for_cricketapi2": "This operation returns the statistics for a given cricket player by season.",
    "leaguedetails_for_cricketapi2": "Get details of a cricket league using the unique tournament ID.",
    "managerlastmatches_for_footapi": "Get the list of the last matches played by a football manager, paginated by the given page number.",
    "managerimage_for_footapi": "Get the image of a football manager with the given ID.",
    "matchawaygoalkeeperjersey_for_footapi": "Get the away goalkeeper jersey for a specific Football match.",
    "mmaoctogonimage_for_mmaapi": "Get MMA octagon image",
    "teamcareerstatistics_for_mmaapi": "Get the career statistics for a specific team.",
    "today_sure_vip_over_2_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers daily sure and precise over 2.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "today_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions": "This endpiont delivers daily sure and precise BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "list_of_leagues_for_pinnacle_odds": "Get a list of leagues",
    "list_of_markets_for_pinnacle_odds": "Get a list of markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value.  You must always use the `since` parameter, after starting your program cycle. You can make request without a `since` parameter no more than 15 times in 5 minutes. Please note that `prematch` and `live` events are different",
    "betting_status_for_pinnacle_odds": "Get a betting status. Checking the Pinnacle server",
    "world_rankings_for_golf_leaderboard_data": "World Golf Rankings for players across all tours. Big file, shouldn't be queried often.",
    "fixtures_for_golf_leaderboard_data": "Lists tournament fixtures for a given tour_id and season_id. You'll need to query the \"Tours\" endpoint to get the correct tour_id and season_id you're looking for.",
    "tour_rankings_for_golf_leaderboard_data": "See player rankings accross the various tours given a `tour_id` and `season`",
    "matches_get_commentaries_for_cricbuzz_cricket": "Get match commentaries",
    "series_get_points_table_for_cricbuzz_cricket": "Get points table by series",
    "players_get_career_for_cricbuzz_cricket": "Get player career",
    "competition_small_image_for_allscores": "Get competition small image. It generates image/png.",
    "game_details_for_allscores": "Get game details.",
    "competitor_details_for_allscores": "Get competitor details.",
    "stats_get_icc_standings_for_unofficial_cricbuzz": "Get ICC standings",
    "categories_for_baseballapi": "Get a list of all baseball categories.",
    "get_manager_placeholder_for_baseballapi": "Get the manager placeholder image in PNG format.",
    "playernearmatches_for_baseballapi": "Get the near matches for a specific baseball player using the player ID.",
    "match_list_for_soccerway_feed": "Get list of the match by date. Status: Played, Playing, Fixture, Cancelled",
    "wnba_scoreboard_for_wnba_api": "This endpoint provides you with the WNBA scoreboard data for a specified date if available.",
    "wnba_team_info_for_wnba_api": "This endpoint gets team information for a specific WNBA team.",
    "get_per36_regular_season_by_id_for_nba_stats_v2": "Api to query per36 regular season",
    "get_career_totals_regular_season_for_nba_stats_v2": "Api to query career totals regular season",
    "get_per_game_regular_season_by_id_for_nba_stats_v2": "Api to query per game regular season",
    "data_country_for_sports_odds_betapi": "Data Country params",
    "data_events_for_sports_odds_betapi": "Data Events api",
    "wnba_play_by_play_for_wnba_api": "This endpoint provides the NBA game play-by-play data for a specific game.",
    "wnba_teams_for_wnba_api": "The endpoint provides you with a list of all WNBA teams.",
    "provider4_live_inplaying_for_football_betting_odds": "get inplaying matches list",
    "provider1_live_list_for_football_betting_odds": "get all matches",
    "provider3_live_upcoming_for_football_betting_odds": "get upcoming matches list",
    "bet365_result_for_betsapi": "to view bet365 event result",
    "leagueseasoninfo_for_footapi": "Get the season information of a specific Football league.",
    "leaguetotalteamevents_for_footapi": "Get last 5 matches of a specific Football league.",
    "matchh2hduel_for_icehockeyapi": "Get the head-to-head duel for a specific Ice Hockey match using the match id.",
    "matchbestplayers_for_icehockeyapi": "Get the best players for a specific Ice Hockey match using the match id.",
    "leaguehomestandings_for_icehockeyapi": "Get the home standings for a specific Ice Hockey league by providing the tournament ID and season ID.",
    "get_career_totals_post_season_by_id_for_nba_stats_v2": "Api to query career totals post season",
    "get_per_game_career_post_season_for_nba_stats_v2": "Api to query per game career post season",
    "get_season_totals_post_season_for_nba_stats_v2": "Api to query season totals post season",
    "tournaments_popular_list_for_flashlive_sports": "Get a list of popular tournaments by sport ID",
    "get_all_players_for_free_nba": "This endpoint retrieves all players from all seasons.",
    "sports_for_allscores": "Get list of sports.",
    "results_for_allscores": "Get results for competitors or competitions.",
    "news_for_allscores": "Get news.",
    "tournament_fixtures_events_for_flashlive_sports": "Get upcoming events by tournament_stage_id, Use the pagination",
    "player_transfers_for_flashlive_sports": "Get the latest player transfers by player ID",
    "list_of_live_events_for_flashlive_sports": "Get list of live events. Use `/live-update` to get changes in live events!",
    "daily_match_list_results_for_football_data": "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "daily_match_list_scheduled_for_football_data": "Daily match list including scheduled matches.\n\nThe data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.",
    "players_get_career_for_unofficial_cricbuzz": "Get player career",
    "series_get_squads_for_unofficial_cricbuzz": "Get squads by series",
    "player_details_by_id_for_ultimate_tennis": "This endpoint allows you to retrieve specific details about a single player. ID **must** be provided, you can retrieve a player ID from the Players Rankings endpoint.",
    "global_players_statistics_for_ultimate_tennis": "This endpoint allows you to retrieve global statistics about tennis players. You can customize the statistic (aces, breakpoints converted, 1st serve points won...), the season (all, 2022, 2021...), or the surface(clay, hard, grass).\nYou can find the list of available options under every parameter.",
    "live_matches_stats_for_ultimate_tennis": "You can retrieve all te details related to a single match such as Aces, Break points, First Serve %, first serve returns, second serves, ecc..",
    "sub_table_names_for_fitness_calculator": "Find sub-table names of a table name in the food database.",
    "food_names_and_ids_for_fitness_calculator": "Find food table ids for a sub-table in the food database.",
    "getdraftprospect_for_nhl_stats_and_live_data": " ",
    "getgame_for_nhl_stats_and_live_data": "This contains all data related to a game, from the boxscore, to play data and even on-ice coordinates. Be forewarned that, depending on the game, this endpoint can return a **lot** of data.",
    "getteamstats_for_nhl_stats_and_live_data": " ",
    "photos_list_for_cricbuzz_cricket": "List photo galleries",
    "get_image_for_cricbuzz_cricket": "This endpoint is used to get image by id",
    "stats_get_icc_standings_for_cricbuzz_cricket": "Get ICC standings",
    "teams_standings_short_for_livescore_sports": "Get team standings by team ID.",
    "competitions_standings_revs_for_livescore_sports": "Get competition standings (table) by competition ID.  LTT_CODE: All(1),Home(2),Away 3",
    "teams_details_short_for_livescore_sports": "Get team short details by team IDs (list)",
    "media_details_for_livescore_sports": "Media details (video playlist). Ex media_id in /v1/competitions/details",
    "substages_motorsport_for_os_sports_perform": "Get substages by stage_id (motorsport)",
    "manager_data_for_os_sports_perform": "Get manager data by manager ID",
    "player_characteristics_for_os_sports_perform": "Get player characteristics by player ID",
    "leaguerounds_for_footapi": "This operation returns the rounds for the specified tournament and season ID for a football league.",
    "refereestatistics_for_footapi": "Get the statistics of a specific Football referee.",
    "playerpenaltyhistory_for_footapi": "Get the penalty history of a specific Football player.",
    "broadcast_info_for_mlb_data": "Retrieve information on broadcasts over a given period.  start_date and end_date parameters should be in the YYYYMMDD format.  Although you can omit the home_away parameter to retrieve both home and away game data, one will include the other. For example, a New York Mets home game result will include data for the visiting team.",
    "league_hitting_stats_for_mlb_data": "Retrieve a players career hitting stats for a given game type split by the league.",
    "player_teams_for_mlb_data": "Retrieve the teams a player has played for over the course of a season, or their career.",
    "geteventexternalinfo_for_sportapi": "GetEventExternalInfo api data",
    "fixtures_and_results_by_team_for_rugby_live_data": "All fixtures and results for a given team",
    "standings_for_rugby_live_data": "Lists season standings for a given comp_id and season_id combination.",
    "matchgraph_for_americanfootballapi": "Get match graph data for a specific American Football match by providing the match ID.",
    "playerimage_for_americanfootballapi": "Get the PNG image of an American Football player using their ID.",
    "events_scoreboard_for_livescore_sports": "Get event scoreboard by event ID",
    "competitions_details_for_livescore_sports": "Get competition details by competition ID",
    "events_count_live_for_livescore_sports": "Get the count live events by sport",
    "getlivenow_for_sportapi": "GetLivenow Api Data",
    "match_team_statistics_for_football_data": "Provides the team statistics of the match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**",
    "tournament_fixture_for_football_data": "Full match list with quarter, half time and final scores.",
    "leagueawaystandings_for_handballapi": "Get away standings for a handball unique tournament and season",
    "leaguegroups_for_handballapi": "Get groups for a handball unique tournament season",
    "categories_for_handballapi": "Get handball categories",
    "provider1_live_inplaying_for_football_betting_odds": "get inplaying matches list",
    "organizations_for_live_golf_data": "Fetch the organizations that are supported by this golf data API.",
    "schedules_for_live_golf_data": "Fetch the schedule for the desired year and organization.",
    "news_detail_for_transfermarket": "Get detail of specific news",
    "news_list_by_player_for_transfermarket": "List latest news relating to specific player",
    "clubs_get_squad_for_transfermarket": "Get squad of club",
    "team_information_for_football_datafeeds_by_rolling_insights": "This endpoint returns team information",
    "leaderboard_for_golf_leaderboard_data": "Lists information for a given tournament_id. Includes leaderboard and per player round information. Also includes live tournament status.",
    "tournaments_list_for_sofascores": "Get a list of tournaments by category id",
    "player_latest_media_for_sofascores": "Get player's latest media by player_id",
    "player_events_for_sofascores": "Get events by player ID",
    "team_data_for_soccerway_feed": "Get team data. Squad, staff, tables, matches, rankings",
    "topover25_for_morpheus_predictions_": "Today top Over 2,5 prediction.",
    "tomorrow_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow sure and precise BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "yesterday_sure_vip_over_2_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers yesterday over 2.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "attribute_overviews_for_sofascores": "Get player attribute overviews",
    "suggest_for_sofascores": "Suggest search. Search Suggest automatically recommends popular searches as you type your query into the search field",
    "unique_stage_logo_motorsport_for_sofascores": "Get unique stage logo by unique_stage_id (motorsport)",
    "team_week_players_for_sofascores": "Get team-week players of the season",
    "tournament_events_for_sofascores": "Get events of the tournament",
    "fixture_lineups_for_transfermarkt_db": "Get fixture lineups by fixture_id",
    "club_squad_for_transfermarkt_db": "Get club squad by club_id",
    "brazil_latest_odds_for_surebets_2": "Latest odds for Brazilian matches - Updated every 6 hours",
    "tomorrow_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow sure and precise over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "yesterday_super_sure_vip_double_chance_matches_for_168predict_vip_football_predictions": "This endpiont delivers yesterday Double Chance Matches. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "referee_profile_for_transfermarkt_db": "Get referee profile by referee_id",
    "list_of_news_for_transfermarkt_db": "Get list of the news by date",
    "list_of_club_competitions_for_transfermarkt_db": "Get the list of Club competitions",
    "seeds_for_ncaa_final_four": "Get the number 1 seeds for the given year (only available from 1979 onwards).",
    "teamlastmatches_for_baseballapi": "Get the last matches for a specific baseball team by providing its ID and page number.",
    "matchvotes_for_baseballapi": "Get the votes for a specific baseball match using the match ID.",
    "search_for_baseballapi": "Search for baseball-related entities using the provided search term, and filter the results to show only baseball-related entities.",
    "player_season_statistics_for_basketball_datafeeds_by_rolling_insights": "Returns Player Season Statistics",
    "list_of_sports_for_pinnacle_odds": "Get a list of sports",
    "list_of_periods_for_pinnacle_odds": "Get a list of periods",
    "futsal_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Futsal Live Matches endpoint.",
    "tennis_live_matches_for_sports_live_scores": "Returns Tennis Live Matches with betting odds",
    "away_team_last_10_matches_for_football_prediction": "Grab the statistics and list of the last 10 matches played by the away team for a certain ID",
    "away_team_league_stats_for_football_prediction": "Shows the league table and stats for the away team of an upcoming match.",
    "form_for_sofascores": "Get pregame team form by event_id",
    "standings_for_sofascores": "Get standings of the season",
    "get_fake_email_address_for_email_api": "Get a fake business email address and job title",
    "some_for_mail_temple": "nothing",
    "inbox_for_email_disposable_generator_api": "Get your email messages of that specific temp email.",
    "read_inbox_for_temp_mail": "Read inbox an email",
    "email_validate_regex_for_email_validator_v3": "Email Validate Regex",
    "validate_domain_or_email_address_for_disposable_email_validation": "Validate can either be a domain ( **spam4.me** ) or an email address ( **badactor@spam4.me** )",
    "domain_for_mailcheck": "Check if a domain is disposable",
    "email_for_mailcheck": "Check if an email is disposable",
    "v1_verify_for_validect_email_verification": "#### Verify email address\n*We do bill only valid or invalid verification statuses.*\nPass the email as a GET parameter. Response properties description:\n```json\n{\n\"status\": \"valid\", // verification status of the email\n\"reason\": \"accepted_email\", // the reason of the status\n\"email\": \"example@gmail.com\",  // normalized email address\n\"user\": \"example\",  // The part before at-sign\n\"domain\": \"gmail.com\", // The part after at-sign\n\"public\": true, // Is address belongs to a publicly accessible email provider\n\"disposable\": false,  // Is address belongs to a disposable email service\n\"role\": false // Is address role based (e.g. abuse, admin, no-reply etc.)\n}\n```\nPossible verification statuses:\n-  `valid` - email address has been accepted by the mail server (safe to send)\n- `invalid` - email address is invalid, various reasons possible, see below (do not send)\n- `accept_all` - mail server accepts any email address (not recommended to send)\n- `unknown` - unable to verify email address (not recommended to send)\n\nPossible status reasons:\n- `accepted_email` - email address has been accepted by the mail server\n- `rejected_email` - email address has been rejected by the mail server\n- `invalid_syntax` - syntax of the email address is invalid according to RFC\n- `invalid_domain` - domain name of the email address does not exist\n- `no_mx_record` - mx record for the domain does not exist\n- `invalid_mx_record` - mx record of the domain is invalid\n- `dns_error` - error occurred while performing dns resolving of the domain\n- `smtp_error` - error occurred while performing smtp validation",
    "validate_email_for_send_sleuth_email_validation": "Checks whether an email is valid. Numerous checks are performed on the email and its host to ensure validity.",
    "getusers_for_ishan": " ",
    "getanopenextension_for_ishan": " ",
    "channelsofateam_for_ishan": " ",
    "email_validate_for_email_validator_v2": "Validate single email in real-time.\n\n**7 levels of verification:**\n\n1. By RFC standards.\n2. By service email (no-reply@, no-spam@, ...).\n3. MX records exist.\n4. By disposable/temporary email service.\n5. By spam catchers (like abusix.com network members).\n6. Connects to email service via standard protocol (SMTP) to check account exists.\n7. Connects to email service via internal api to check account banned or blocked (supports: Gmail, Mail.Ru, iCloud, Hotmail, Yahoo, Outlook, Rambler, Yandex and more).",
    "verify_email_for_emails_verifier": "Allows verifying email addresses. Checks if emails are deliverable.",
    "mailcheck_for_e_mail_check_invalid": "\u2611 Filter domain\n\u2611 Not start with a special character and must begin with a letter, \ndigit, or certain special characters like +, _, ., -.\n\u2611 Followed by the @ symbol to separate the username part and the domain part of the email address.\n\u2611 Domain part does not start or end with a dot or hyphen and only contains alphanumeric characters or dots.\n\u2611 Email string ends after the domain part and there are no additional characters.",
    "readmail_for_apimail10": "ReadMail",
    "current_mail_for_apimail10": "Current Mail",
    "getnewemail10_for_apimail10": "get New Email 10",
    "get_emails_for_get_emails_from_url": "Get emails by URL.",
    "email_for_email_validator_v5": "This API will validate email with domain name, it is use to filter out invalid email and invalid domain, to perfact match delivery rate and minimum email bounce",
    "verify_email_for_verify_email": "Verify Email Address",
    "get_account_info_for_blaze_verify": "Get general account information like the email of the account owner and available credits.",
    "verify_an_email_for_blaze_verify": "Verify a single email. If a verification request takes longer than the timeout, you may retry this request for up to 5 minutes. After 5 minutes, further requests will count against your usage. The verification result will be returned when it is available.<br><br>",
    "heartbeat_for_blaze_verify": "Returns API Status",
    "validate_email_for_easy_email_validation": "Validate an email",
    "email_for_email_verifier_validator": "## The status attribute will be:\n\nOK  - Only if the smtp server explicitly confirms the availability of the mailbox address.\n\nINVALID - If the smtp server explicitly confirms the mailbox is not available.\n\nUNKNOWN - For every other scenario (The mailbox may or may not be available).",
    "validate_email_for_email_validation_v3": "This endpoint will return if the email address is disposable or not, also it validates the format of the email as well.",
    "get_status_for_mailcheap": "Fetch API status",
    "check_for_email_validator_v9": "Core api to check your email.",
    "end1_for_matinapi": "none",
    "9939c2c0_7fad_11e9_8019_f5bb8c5310ff_for_matinapi": "a",
    "normalize_for_email_utilities": "get normalized form of an email",
    "verify_for_email_utilities": "get normalized form of an email",
    "getattachmentmetadata_for_mailslurp_email_testing": "Returns the metadata such as name and content-type for a given attachment and email.",
    "getdomains_for_mailslurp_email_testing": "List all custom domains you have created",
    "getorganizationinboxes_for_mailslurp_email_testing": "List organization inboxes in paginated form. These are inboxes created with `allowTeamAccess` flag enabled. Organization inboxes are `readOnly` for non-admin users. The results are available on the `content` property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). ",
    "validate_email_for_validate_email": "\u201cValidate Email\u201d API Validates single email or bulk email addresses.\n\nIt's simple REST API to Verify and Validate single email or bulk email addresses.",
    "bouncer_email_checker_for_bouncer_email_checker": "Bouncer Email Checker",
    "instagram_account_verifyer_for_account_verifyer": "to verify Instagram account",
    "help_page_for_email_existence_validator": "Provides a simple help to the User",
    "verify_the_existence_of_email_for_email_existence_validator": "endpoint which takes email and output result in JSON about existence of email on server.",
    "get_the_mx_records_for_email_existence_validator": "endpoint for getting MX records from email address",
    "emails_and_contacts_for_domain_emails_and_contacts": "Allows finding email addresses, social links, and phones from domains.",
    "valida_o_de_email_for_emailqualityplus": "Valida\u00e7\u00e3o Simples de Email",
    "email_verifier_for_disposable_invalid_email_verifier": "This endpoint verifies the validity of an email address. It checks the email address format, domain, and whether it is a disposable email address. It then extracts the MX records from the domain's DNS records and connects to the email server via SMTP. The function also simulates sending a message to the email server to confirm that the mailbox associated with the email address actually exists.",
    "get_the_status_of_a_batch_for_blaze_verify": "GET requests to the batch endpoint will get the current status of the batch verification job specified in the \"id\" parameter.<br><br>When a credit card transaction is necessary to obtain enough credits to verify a batch, billing related messages will be returned if there is an error. These will be sent with a 402 response code.<br><br>",
    "inbox_for_email_temporary_generator": "Get your email messages of that specific temp email.",
    "verify_email_for_emails_validator": "Allows validating email addresses. Checks if emails are deliverable.",
    "validate_email_address_for_email_address_validator": "Determine firsthand if the email is deliverable and working",
    "freedomain_for_fast_email_verifier": "Check whether or not you have a free domain.",
    "role_account_for_fast_email_verifier": "Check the rols account of your domain",
    "emailverification_for_fast_email_verifier": "Basic usage\nIt is a simple way to verify an email address with different dimensions.",
    "wait_for_message_for_gettestmail": " ",
    "getausersmessage_for_ishan": " ",
    "gettiindicatorbyid_for_ishan": " ",
    "peoplei_mworkingwith_for_ishan": " ",
    "email_for_marcom_robot_email_validation_bot": "Email Validation",
    "check_for_disposable_emails_for_email_existence_validator": "Check if given email is disposable or temporary mail or not.",
    "getlatestemailininbox_1_for_mailslurp_email_testing": "Get the newest email in all inboxes or in a passed set of inbox IDs",
    "getbouncedemail_for_mailslurp_email_testing": "Bounced emails are email you have sent that were rejected by a recipient",
    "getallinboxes_for_mailslurp_email_testing": "List inboxes in paginated form. The results are available on the `content` property of the returned object. This method allows for page index (zero based), page size (how many results to return), and a sort direction (based on createdAt time). You Can also filter by whether an inbox is favorited or use email address pattern. This method is the recommended way to query inboxes. The alternative `getInboxes` method returns a full list of inboxes but is limited to 100 results.",
    "homepage_about_the_api_for_email_existence_validator": "Display information of API used, developer name, Documentation page, server status page and other relevant informations.",
    "getcomplaints_for_mailslurp_email_testing": "SMTP complaints made against your account",
    "getexpiredinboxes_for_mailslurp_email_testing": "Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties",
    "getemail_for_mailslurp_email_testing": "Returns a email summary object with headers and content. To retrieve the raw unparsed email use the getRawEmail endpoints",
    "getinbox_for_mailslurp_email_testing": "Returns an inbox's properties, including its email address and ID.",
    "gettemplate_for_mailslurp_email_testing": "Get email template",
    "getalias_for_mailslurp_email_testing": "Get an email alias by ID",
    "getphonenumber_for_mailslurp_email_testing": " ",
    "downloadattachment_for_mailslurp_email_testing": "Returns the specified attachment for a given email as a stream / array of bytes. You can find attachment ids in email responses endpoint responses. The response type is application/octet-stream.",
    "email_checker_for_alpha_email_verification": "check the email provided by user for registration is valid or not or may be disposable email.",
    "getmydirectreports_for_ishan": " ",
    "getprimarychannel_for_ishan": " ",
    "getausersmessages_for_ishan": " ",
    "getsentdeliverystatusesbysentid_for_mailslurp_email_testing": "Get all sent email delivery statuses",
    "getsentemailpreviewurls_for_mailslurp_email_testing": "Get a list of URLs for sent email content as text/html or raw SMTP message for viewing the message in a browser.",
    "getaliasemails_for_mailslurp_email_testing": "Get paginated emails for an alias by ID",
    "getgroups_for_mailslurp_email_testing": " ",
    "compare_route_names_for_compare_route_names": "Calculates the coefficient of how similar are 2 strings containing the name (and type) of the route. With a value of 0.9 and higher, it is possible to do auto-matching,at 0.2-0.9 - visual matching.",
    "get_route_for_fast_routing": "Get a driving route for cars (with turn-by-turn directions) by submitting (at least) a start- and endpoint.",
    "geocode_for_dargan": "Returns the latitude and longitude for a given postcode",
    "in_radius_for_dargan": "Find all postcodes within a certain radius (in KM) of a postcode",
    "distance_for_dargan": "Gets the distance between 2 postcodes in KM",
    "places_list_by_bounding_box_for_places": "Method returns all objects (or number of objects) in the given boundary box optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.",
    "geographic_coordinates_by_placename_for_places": "Returns geographic coordinates for the given placename (city, village, etc.). The method returns the place whose name is most similar to the search string.",
    "autosuggest_for_places": "Method returns suggestions for search term closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.",
    "places_list_by_radius_nearby_search_for_places": "Method returns objects closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.",
    "geocoding_for_address_normalization_and_geocoding": "Returns standard, normalized address and geocode lat/long rooftop coordinates.",
    "getcountrylist_for_city_list": "return list of all country include ISO code and ISO3 code and phonecode",
    "getcity_for_city_list": "return list of citis",
    "getmaptilewithenglishlabels_for_maptiles": "Raster Map Tiles with English Labels. Please see our [tutorials page](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials) on how to use this.",
    "getstandardmaptile_for_maptiles": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap",
    "getmaptilewithfrenchlabels_for_maptiles": "Raster Map Tiles with French Labels",
    "get_isochrone_for_spatialscale_route_engine": "The isochrone service computes areas that are reachable within specified time intervals from a location,\nand returns the reachable regions as contours of polygons or lines that you can display on a map.\n\n**Costing parameters**\n\nThe isochrone service uses the auto, bicycle, pedestrian, and multimodal costing models available in the Turn-by-Turn service.\nRefer to the route costing models and costing options documentation for more on how to specify this input.\n\n**Other request parameters**\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Parameter</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>date_time</code></td>\n    <td>\n        The local date and time at the location. These parameters apply only for multimodal requests and are not used with other costing methods.\n        <ul>\n            <li><code>type</code></li>\n            <ul>\n                <li>0 - Current departure time for multimodal requests.</li>\n                <li>1 - Specified departure time for multimodal requests.</li>\n                <li>2 - Specified arrival time. Note: This is not yet implemented.</li>\n            </ul>\n            <li><code>value</code> - the date and time specified in ISO 8601 format (YYYY-MM-DDThh:mm) in the local time zone of departure or arrival. For example, \"2016-07-03T08:06\".\n            </li>\n        </ul>\n    </td>\n</tr>\n<tr>\n    <td><code>id</code></td>\n    <td>\n        Name of the isochrone request. If <code>id</code> is specified, the name is returned with the response.\n    </td>\n</tr>\n<tr>\n    <td><code>contours</code></td>\n    <td>\n        A JSON array of contour objects with the time in minutes or distance in kilometers and color to use for each isochrone contour. You can specify up to four contours (by default).\n        <ul>\n            <li><code>time</code> - A floating point value specifying the time in minutes for the contour.\n            </li>\n            <li><code>distance</code> - A floating point value specifying the distance in kilometers for the contour.\n            </li>\n            <li><code>color</code> -The color for the output of the contour. Specify it as a Hex value, but without the <code>#</code>, such as <code>\"color\":\"ff0000\"</code> for red. If no color is specified, the isochrone service will assign a default color to the output.\n            </li>\n        </ul>\n        You can only specify one metric per contour, i.e. time or distance.\n    </td>\n</tr>\n<tr>\n    <td><code>polygons</code></td>\n    <td>\n        A Boolean value to determine whether to return geojson polygons or linestrings as the contours. The default is <code>false</code>, which returns lines; when <code>true</code>, polygons are returned. Note: When <code>polygons</code> is <code>true</code>, any contour that forms a ring is returned as a polygon.\n    </td>\n</tr>\n<tr>\n    <td><code>generalize</code></td>\n    <td>\n        A floating point value in meters used as the tolerance for Douglas-Peucker generalization. Note: Generalization of contours can lead to self-intersections, as well as intersections of adjacent contours.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n",
    "get_route_for_spatialscale_route_engine": "Given a list of locations, the route service provides details about the trip,\nincluding locations, a summary with basic information about the entire trip, and a list of legs.\n\n**Locations**\n\nYou specify locations as an ordered list of two or more locations within a JSON array. Locations are visited in the order specified.\n\nA location must include a latitude and longitude in decimal degrees. The coordinates can come from many input sources, such as a GPS location, a point or a click on a map, a geocoding service, and so on.\n\nTo build a route, you need to specify two `break` locations. In addition, you can include `through`, `via` or `break_through` locations to influence the route path.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Location parameters</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>lat</code></td>\n    <td>\nLatitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>lon</code></td>\n    <td>\nLongitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>type</code></td>\n    <td>\n\tType of location, either <code>break</code>, <code>through</code>, <code>via</code> or <code>break_through</code>. Each type controls two characteristics: whether or not to allow a u-turn at the location and whether or not to generate guidance/legs at the location. A <code>break</code> is a location at which we allows u-turns and generate legs and arrival/departure maneuvers. A <code>through</code> location is a location at which we neither allow u-turns nor generate legs or arrival/departure maneuvers. A <code>via</code> location is a location at which we allow u-turns but do not generate legs or arrival/departure maneuvers. A <code>break_through</code> location is a location at which we do not allow u-turns but do generate legs and arrival/departure maneuvers. If no type is provided, the type is assumed to be a <code>break</code>. The types of the first and last locations are ignored and are treated as breaks.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n\n**Costing models**\n\nThe routing service uses dynamic, run-time costing to generate the route path. The route request must include the name of the costing model and can include optional parameters available for the chosen costing model.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Costing model</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>auto</code></td>\n    <td>\n\tStandard costing for driving routes by car, motorcycle, truck, and so on that obeys automobile driving rules, such as access and turn restrictions. <code>Auto</code> provides a short time path (though not guaranteed to be shortest time) and uses intersection costing to minimize turns and maneuvers or road name changes. Routes also tend to favor highways and higher classification roads, such as motorways and trunks.\n    </td>\n</tr>\n<tr>\n    <td><code>bicycle</code></td>\n    <td>\n\tStandard costing for travel by bicycle, with a slight preference for using <a href=\"http://wiki.openstreetmap.org/wiki/Key:cycleway\" target=\"_blank\">cycleways</a> or roads with bicycle lanes. Bicycle routes follow regular roads when needed, but avoid roads without bicycle access.\n    </td>\n</tr>\n<tr>\n    <td><code>bus</code></td>\n    <td>\n\tStandard costing for bus routes. Bus costing inherits the auto costing behaviors, but checks for bus access on the roads.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n",
    "local_osm_v1_z_x_y_png_for_offline_maptiles": "Download OpenStreetMap standard tile",
    "en_map_v1_z_x_y_png_for_offline_maptiles": "Download English tile",
    "forwardgeocoding_for_forward_reverse_geocoding": "Turn an address into latitude and longitude (e.g. to display on a map) by schematic input.",
    "reversegeocoding_for_forward_reverse_geocoding": "Find address or place by latitude and longitude",
    "geocodingsearch_for_forward_reverse_geocoding": "Free-form query forward geocoding.",
    "get_weather_tile_for_weather_forecast_map_tiles": "Get a transparent weather tile according to the [Web Tile Standard(https://en.wikipedia.org/wiki/Tiled_web_map).",
    "autocomplete_suggestions_for_arcgis_platform_geocoding": "The ArcGIS World Geocoding Service includes a method that allows character-by-character autocomplete suggestions to be generated for user input in a client application. This capability facilitates the interactive search user experience by reducing the number of characters that need to be typed before a suggested match is obtained. The idea is that a client application can provide a list of suggestions that is updated with each character entered by a user until the place they are looking for is returned in the list.\n\n![Autocomplete diagram](https://developers.arcgis.com/rest/geocode/api-reference/GUID-9A754AFE-8154-46C3-8A31-3566963F971E-web.png)\n\n[API reference `suggest` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm)",
    "bulk_geocoding_for_arcgis_platform_geocoding": "Geocode an entire list of addresses in one request using the geocodeAddresses operation. Geocoding many addresses at once is also known as batch or bulk geocoding.\n\n![bulk geocoding](https://developers.arcgis.com/rest/geocode/api-reference/GUID-FD609701-B9B5-49DB-BFD9-A936280A09C6-web.png)\n\n[API reference `geocodeAddresses` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-geocode-addresses.htm)",
    "search_address_for_arcgis_platform_geocoding": "The findAddressCandidates operation geocodes one location per request; the input address can be combined into a single input field or divided among multiple parameters.\n\n![geoceode screenshot](https://developers.arcgis.com/rest/geocode/api-reference/GUID-F2F78690-5FB5-4BF1-8633-26BF184C45A9-web.png)\n\n[API reference for `findAddressCandidates` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm)",
    "walk_score_for_walk_score": "Get Walk Score",
    "map_script_for_navitime_maps": "Get a JavaScript file to control the tile map that runs on the browser.",
    "map_image_get_for_navitime_maps": "Get a static map image of the location, range and zoom value specified in the parameter.",
    "search_zip_codes_in_mexico_for_be_zips": "Perform a text search in zip codes in Mexico",
    "get_zip_code_in_mexico_for_be_zips": "Get zip code data given a specific zip code",
    "peta_for_peta": "peta is real",
    "terrain_rgb_for_maptoolkit": "Global TerrainRGB Tiles.",
    "contours_vector_tiles_for_maptoolkit": "Global Contourlines.",
    "route_enhancement_for_maptoolkit": "Enhance your GPX-file with elevation, surface and mapmatching",
    "findplacesnearby_for_trueway_places": "Search for nearby places",
    "findplacebytext_for_trueway_places": "Search for places by text string",
    "place_properties_for_places": "Returns detailed information about the object. Objects can contain different amount of information.",
    "getmaptilewithspanishlabels_for_maptiles": "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map.",
    "balance_for_locationiq": "The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC).",
    "matrix_for_locationiq": "Computes duration of the fastest route between all pairs of supplied coordinates. Returns the durations or distances or both between the coordinate pairs. Note that the distances are not the shortest distance between two coordinates, but rather the distances of the fastest routes.",
    "reverse_for_locationiq": "Reverse geocoding is the process of converting a coordinate or location (latitude, longitude) to a readable address or place name. This permits the identification of nearby street addresses, places, and/or area subdivisions such as a neighborhood, county, state, or country.",
    "get_location_for_smart_locations": "smart-location",
    "get_heightmap_from_two_geopoints_for_heightmap_from_latitude_and_longitude": "you provide two geopoints( latitude, longitude). Server returns image/png with heightmap within this borders.",
    "exchange_zip_code_for_state_for_zip_code_to_state_converter": "The endpoint to pass a zip code as a query parameter and get the state the zip code is located in as a response.",
    "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las Comunidades Aut\u00f3nomas de Espa\u00f1a",
    "lista_de_municipios_por_provincia_for_organizaci_n_territorial_de_espa_a": "Lista todas lps municipios  de una provincia",
    "lista_de_provincias_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las provincias de Espa\u00f1a",
    "query_for_hexagon_by_location_and_resolution_for_ca_boundaries_io": "Query for Hexagon by Location and Resolution",
    "query_for_ldu_boundary_for_ca_boundaries_io": "Query by a LDU Postal Code",
    "query_for_ldu_boundary_by_location_and_resolution_for_ca_boundaries_io": "Query for LDU H3 Boundary by Location and Resolution",
    "forward_geocode_for_geocode_forward_and_reverse": "Get lat,lng coordinates from an address.",
    "reverse_geocode_for_geocode_forward_and_reverse": "Get an address from a lat,lng coordinate.",
    "v1_reversegeocoding_for_geocoding_by_api_ninjas": "API Ninjas Reverse Geocoding API endpoint.",
    "v1_geocoding_for_geocoding_by_api_ninjas": "API Ninjas Geocoding API endpoint.",
    "global_light_tiles_for_maptoolkit": "Global mostly grayscale tiles.",
    "global_terrain_raster_for_maptoolkit": "Global Terrain Rastertiles.",
    "staticmaps_for_maptoolkit": "Create a Staticmap.",
    "lista_de_provincias_por_comunidad_aut_noma_for_organizaci_n_territorial_de_espa_a": "Lista todas las provincias de una Comunidad Aut\u00f3noma",
    "nearest_for_locationiq": "Snaps a coordinate to the street network and returns the nearest n matches. Where coordinates only supports a single {longitude},{latitude} entry.",
    "categories_for_places_nearby_a_coordinates": "Categories of establishments.",
    "nearby_for_places_nearby_a_coordinates": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nReturns up to 60 places per request.",
    "fetch_details_of_multiple_records_for_magical_taske": "This endpoint fetches details of more than 1 record. Make sure you pass a valid record ids. If you pass in an invalid id, you will get an `Internal Sever Error 500` for the whole request.\n\nYou can request details of a maximum of 10 records at a go in this endpoint. The `id`s should be separated using a comma with no spaces.",
    "fetch_by_region_for_magical_taske": "This endpoint fetches records by region as defined in the `ABOUT` section above. You have to provide region and a limit of the number of records returned.",
    "fetch_by_type_for_magical_taske": "This endpoint fetches records by type as defined in `ABOUT` section above. You have to provide type and a limit of the number of records returned.",
    "reversegeocode_for_trueway_geocoding": "Obtain address for location",
    "geocode_for_trueway_geocoding": "Obtain geocoordinates for address",
    "matching_for_locationiq": "Matching API matches or snaps given GPS points to the road network in the most plausible way.  Please note the request might result multiple sub-traces.  Large jumps in the timestamps (> 60s) or improbable transitions lead to trace splits if a complete matching could not be found. The algorithm might not be able to match all points. Outliers are removed if they can not be matched successfully.",
    "query_for_postal_code_boundary_by_location_for_de_boundaries_io": "Query for Postal Code By location",
    "query_for_city_names_by_state_for_de_boundaries_io": "Query for list of city names by a state name.",
    "query_for_city_boundary_by_name_for_de_boundaries_io": "Query for City Boundary by City Name",
    "getnearestcities_for_reverse_geocoding_and_geolocation_service": "Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair.",
    "gettimezone_for_reverse_geocoding_and_geolocation_service": "Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time.",
    "getlargestcities_for_reverse_geocoding_and_geolocation_service": "Returns 5 largest cities within a given radial range with name, population, country and distance.",
    "retrieve_uk_postal_sector_outline_boundaries_for_uk_boundaries_io": "example: Query by \"W41,W42\" sectors.",
    "query_for_distance_between_two_h3_indexes_for_uk_boundaries_io": "Query for Distance between two H3 Indexes",
    "query_for_hexagon_by_h3index_for_uk_boundaries_io": "Query for Hexagon by H3Index",
    "fetch_by_type_and_region_for_magical_taske": "You can make a request finer by combining region and type. This endpoint will return the records requested. You have to provide a limit of the number of records you want.",
    "lookup_coordinates_for_reverse_geocode_locator_u_s_": "Convert US latitude and longitude coordinates into local city information",
    "query_for_hexagon_by_location_and_resolution_for_uk_boundaries_io": "Query for Hexagon by Location and Resolution",
    "query_for_postal_code_unit_boundary_h3_geo_boundary_for_uk_boundaries_io": "Query for Postal Unit Boundary (ex. ZE1 0AE) \n\nhttps://eng.uber.com/",
    "get_fonts_for_mapilion_vector_and_raster_map_tiles": "Returns Fonts for vector tiles. This endpoint is typically used in your style.json.",
    "get_vector_tile_for_mapilion_vector_and_raster_map_tiles": "Returns Vector tiles following the OpenMapTiles schema",
    "get_style_json_for_mapilion_vector_and_raster_map_tiles": "Returns the style json for the given style. These are pre-configured styles to get started easily. For advanced use cases we recommend to extend these styles or create a new style. The following styles are currently available:\n- `osm-bright` Osm-Bright\n- `osm-bright-hillshading-v1` Osm-Bright with Hillshading V1 overlay\n- `osm-bright-hillshading-v2` Osm-Bright with Hillshading V2 overlay\n- `dark-matter` A dark map style.",
    "get_call_for_verify_pan_aadhaar_link_v2": "Used to fetch api result using the request id received in responses.",
    "get_hillshading_tile_for_mapilion_vector_and_raster_map_tiles": "Returns special hillshading Raster tiles as PNG. Hillshading can be used as an overlay to create the look and feel of mountains. The version can be either v1 or v2.",
    "query_for_city_boundary_by_city_name_for_ca_boundaries_io": "Query for City Boundary by City name",
    "query_for_city_names_by_province_territory_name_for_ca_boundaries_io": "Query for City names by province/territory name",
    "query_for_all_state_names_for_de_boundaries_io": "Query for all State names.",
    "search_zip_codes_for_mexico_zip_codes": "Search for valid zip codes with starting digits",
    "zip_code_information_for_mexico_zip_codes": "Retrieves the information of a particular zip code",
    "get_a_user_s_profile_for_tradier": "",
    "get_option_strikes_for_tradier": "",
    "get_a_user_s_positions_for_tradier": "",
    "gas_price_for_webit_blockchain": "Get current gas price with a single API call on multiple chains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.",
    "generate_wallet_for_webit_blockchain": "Generate a new crypto wallet.\n\nSupported blockchains are Ethereum, Polygon, Binance mainnets and Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.",
    "estimate_gas_for_webit_blockchain": "Estimate gas required by send transaction and smart contract method call on multiple blockchains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.",
    "get_image_result_today_price_for_oil_thai_price": "Get result image for today price",
    "get_latest_price_for_oil_thai_price": "Get latest thai oil price",
    "market_for_bravenewcoin": "List the UUIDs for all markets or provide a query parameter to search.\n\nThe parameters are asset UUIDs. The full list of all asset details is available from the Asset endpoint.",
    "asset_for_bravenewcoin": "List the UUID and details for all assets or provide an optional query parameter to search.\nAssets may have a status . Active assets will be available at both AssetTicker and DailyOHLCV endpoints. Inactive assets are not available for AssetTickers but may provide some historical OHLCV data if available.",
    "assetticker_for_bravenewcoin": "This free endpoint will return the latest details for an asset refreshed every 5 minutes with global USD spot price, 24 hour volume and supply.  The optional percentChange parameter provides the 1, 7 and 30 day percentage movements as additional payload.   \n\nSupply the unique identifier (UUID) for an asset.  The UUID for any asset may be found from the Assets endpoint in Lookups.\n\nA security token is required for the Authorization Header. Obtain a token valid for 24 hours from the GetToken endpoint.",
    "market_stocks_news_for_investing_financial_stocks": "get latest market stocks news",
    "list_for_investing_financial_stocks": "get listed  items by screener",
    "majors_price_for_investing_financial_stocks": "get all majors  currencies price",
    "market_v2_get_quotes_deprecated_for_morning_star": "Query one or multiple quotes at once.\n* This endpoint is deprecated, use .../stock/v2/get-realtime-data endpoint instead",
    "stock_v2_get_price_fair_value_for_morning_star": "Mapped to Price vs Fair Value  tab",
    "type_performance_get_latest_distributions_for_morning_star": "Get latest distributions in the Performance tab",
    "getlatestbysecuritiescode_for_jp_funda": "### Return latest securities report data of the company specified with securities code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators",
    "getlistbysecuritiescode_for_jp_funda": "### Return all of securities report data of the company specified with securities code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators",
    "getdiscloseddaterange_for_jp_funda": "### Return securities report data Specified by the date range.\nNote: This endpoint requires the 2 query parameters, start_date and end_date\nNote: max date range is 31 days. if you want longer date range data, need to requesting API twice or more.",
    "retorna_os_registros_dos_ltimos_dias_for_awesomeapi_exchange": " Retorna os registros da ultima ocorr\u00eancia dos \u00faltimos dias",
    "todas_as_moedas_for_awesomeapi_exchange": "Retorna a ultima ocorr\u00eancia de cada moeda",
    "retorna_os_registros_de_um_per_odo_espec_fico_for_awesomeapi_exchange": " Retorna os registros da ultima ocorr\u00eancia de um per\u00edodo espec\u00edfico",
    "getarchivereport_for_bankruptcy_search": " ",
    "protocol_for_defi_data": "Get historical TVL of a protocol and breakdowns by token and chain",
    "charts_for_defi_data": "Get historical TVL of DeFi on all chains",
    "tvl_protocol_for_defi_data": "Get only protocol TVL",
    "commodity_groups_for_investing": "Get data for commodity groups",
    "list_of_countries_for_stocks_for_investing": "This is a list of available countries, it is used as a request on another endpoint.",
    "commodities_news_for_investing": "This endpoint provides the commodities news",
    "get_fear_and_greed_index_for_fear_and_greed_index": "https://money.cnn.com/data/fear-and-greed/",
    "v1_interestrate_for_interest_rate_by_api_ninjas": "API Ninjas Interest Rate API endpoint.",
    "year_to_date_for_the_sandbox_sand": "Get price data for year to date.\n\n1 day = 5 minute interval data\n1 - 90 days = hourly data\nabove 90 days = daily data (00:00 UTC)",
    "past_1_month_for_the_sandbox_sand": "Get price data for the past month. (~30 days)\n\n~hourly data points.",
    "medium_for_the_sandbox_sand": "Get official news from Medium.",
    "get_stock_price_for_stock_info": "To get the Stock Price (Delayed 30 mins)",
    "api_stocks_for_prague_stock_exchange": " ",
    "api_days_for_prague_stock_exchange": " ",
    "api_about_version_for_prague_stock_exchange": " ",
    "2_year_historical_daily_prices_for_stock_prices": "2 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "1_month_historical_daily_prices_for_stock_prices": "1 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "5_day_historical_daily_prices_for_stock_prices": "5 Day historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "api_v2_user_addresses_for_changenow_crypto_exchange": "This API endpoint returns a list of addresses bound to address name.\n \n<h3>Successful response:</h3>\n\t<p>The response contains an array of addresses bound to address name.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>success</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a request was processed successfully</td>\n    </tr>\n    <tr>\n        <td><b><i>addresses</i></b></td>\n        <td><i>Array</i></td>\n        <td>Array of addresses for requested fio-address or unstoppable-domain</td>\n    </tr>\n    <tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker in naming space of his protocol</td>\n    </tr>\n    <tr>\n        <td><b><i>chain</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency chain in naming space of his protocol</td>\n    </tr>\n    <tr>\n        <td><b><i>address</i></b></td>\n        <td><i>String</i></td>\n        <td>Real address for requested fio-address or unstoppable-domain</td>\n    </tr>\n    <tr>\n        <td><b><i>protocol</i></b></td>\n        <td><i>String</i></td>\n        <td>Protocol of current address</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>",
    "minimal_exchange_amount_for_changenow_crypto_exchange": "The API endpoint returns minimal payment amount required to make an exchange. If you try to exchange less, the transaction will most likely fail.\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "api_v2_minimal_exchange_amount_for_changenow_crypto_exchange": "The API endpoint returns minimal payment amount required to make an exchange. If you try to exchange less, the transaction will most likely fail.\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "get_stock_news_for_stock_news": "Get individual stock news",
    "get_all_bitcoin_news_for_bitcoin_news": "This endpoint will return back all the news across all the major bitcoin news site from all over the world",
    "get_individual_bitcoin_news_sources_for_bitcoin_news": "In this endpoint you can get informations for a specific News resource.",
    "quote_get_chart_for_schwab": "Get data to draw chart",
    "news_get_market_update_for_schwab": "Get latest market update news",
    "news_get_market_update_details_for_schwab": "Read market update news in details",
    "getcompanynames_for_gaialens_company_names": "This API returns a list of all company names available to the user. It can be used as a pre-step before invoking other GaiaLens APIs such as GaiaLens ESG Scores, Gaialens Historical ESG Scores and GaiaLens ESG News.",
    "historical_exchange_rates_for_exchangeratespro": "Access over two decades of historical exchange rate data with the /historical endpoint. Exchange rates are provided as daily end of day exchange rates dating back all the way to 1999. Choose the day with the 'date' parameter.",
    "latest_exchange_rates_for_exchangeratespro": "Get up-to-date exchange rate data with the /latest endpoint. Choose from daily, hourly, or minute updates, based on your plan. Stay on top of the markets with real-time data, delivered with one simple request.",
    "list_available_currencies_for_exchangeratespro": "Returns a list of all currencies that are available through the API.",
    "api_trades_isin_isin_for_prague_stock_exchange": " ",
    "api_trades_day_day_for_prague_stock_exchange": " ",
    "news_get_market_update_audio_for_schwab": "Get audio link to hear market update news",
    "market_get_sectors_for_schwab": "Get brief information about all sectors",
    "eth_for_ethereum_random_address_generator_eth_key_pairs_generator": "This API generates a random ethereum public address with its private key",
    "market_status_for_currency_quake": "Is the market open?",
    "symbol_strength_for_currency_quake": "Exposes the combined strength of 8 individual currencies using calculations applied to 28 Forex pairs.",
    "pair_strength_for_currency_quake": "Exposes the underlying calculations that are performed on each pair to get a currency\u2019s combined strength.",
    "dailyohlcv_for_bravenewcoin": "This endpoint returns end-of-day open, high, low, close prices and volumes (OHLCV) for market weighted averages (MWA) or global weighted averages (GWA). The 24hr period for end of day is based on an open/close at 00:00:00 UTC. Parameters may be used to select the data required. \n\nBNC uses universal identifiers (UUIDs) for assets and markets. Each index type will have a UUID which identifies the constituent type used to build the index:\n\n| Index Type | Index Id  | Output |\n| -----------|:---------:|:---------:|\n| MWA        | Market Id | OHLCV for that market |\n| GWA        | Asset Id  | OHLCV for that coin / asset |\n\nThe UUIDs for assets or markets may be found from the Lookups with those names.\n\nIf no timestamp is provided, then only the latest values are returned. With a timestamp, records are returned in reverse date order, the number determining how far back  controlled by the size parameter. \n\nAn authentication token is required. Obtain a token valid for 24 hours from the GetToken endpoint.",
    "marketbyid_for_bravenewcoin": "Retrieves the details of an individual market. Supply the unique identifier (UUID) of the market.\n\nThe full list of all market UUIDs can be obtained from the Market endpoint.",
    "getesgscores_for_gaialens_esg_scores": "This API provides real-time Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100. In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more.",
    "most_negative_news_for_stock_sentiment_api": "Returns a list of the most negative articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles",
    "most_positive_news_for_stock_sentiment_api": "Returns a list of the most positive articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles",
    "news_sentiment_data_for_stock_sentiment_api": "Returns a list of articles related to the input stock and their associated sentiment score.\nThe sentiment score is called compound.",
    "coins_get_analysis_for_investing_cryptocurrency_markets": "Get analysis opinion from expert for specific cryptocurrency",
    "coins_search_for_investing_cryptocurrency_markets": "Search for available cryptocurrencies relating to a word, name, etc...",
    "coins_get_news_for_investing_cryptocurrency_markets": "Get news relating to specific cryptocurrency",
    "dependent_count_for_credit_card_prediction": "Dependent_count GET request",
    "months_on_book_for_credit_card_prediction": "Months_on_book, card category  GET request",
    "attrition_flag_for_credit_card_prediction": "Attrition_Flag Get request",
    "stock_get_press_releases_for_webull": "Get press releases",
    "news_list_top_for_webull": "List top news",
    "currencies_list_for_webull": "List all global currencies and rates",
    "chains_for_defi_data": "Get current TVL of all chains",
    "getcurrentbysymbol_for_earningsdata": "Get the current value, growth and momentum information for a single stock.",
    "getbymonth_for_earningsdata": "Get Earning Data By Month",
    "getbystock_for_earningsdata": "Get earnings data by symbol.",
    "calculate_repayment_schedule_for_loan_amortization_schedule_calculator": "Returns detailed loan repayment schedule",
    "opt_theta_for_kiann_options_project": "option lognormal greeks : theta calculates the theta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_= 0 (default) for use in rapidAPI.com",
    "vol_strike_for_kiann_options_project": "This function generates the implied-volatility (lognormal) for a given, specified delta. The convention works with delta of 0.10 is specified via 0.90 in the argument, as we generate the delta from a 'call option' function.\n\nThis is the standard function to generate the 25-delta and 10-delta risk-reversals and butterfly which provides the market-conventions for the volatility-skew and volatility-smile.\n\nstrike_: List  of absolute strikes,\n vols_:  List of lognormal annualized volatilities,\nr_: float of risk-free-rate,\nS_: float of the spot:\nT_ : the time-to-expiry of the option\ndelta_target: float, the desired delta where you want the implied volatility",
    "sunction_one_for_kiann_options_project": "N/A",
    "v1_salestax_for_sales_tax_by_api_ninjas": "API Ninjas Sales Tax API endpoint. Returns one or more sales tax breakdowns by ZIP code according to the specified parameters. Each breakdown includes the state sales tax (if any), county sales tax (if any), city sales tax (if any), and any additional special sales taxes. All tax values are presented in decimals (e.g. 0.1 means 10% tax).\n\nExactly one of the following must be set: zip_code or (city + state)",
    "news_list_by_region_for_bb_finance": "List latest news from different categories and grouped by region",
    "market_get_price_chart_for_bb_finance": "Get related data to draw price chart",
    "market_get_compact_for_bb_finance": "Get most informative fields about indices, commodities, currencies, rates, etc...",
    "getarchivereport_for_evictions_suits_liens_and_judgments": " ",
    "coins_get_overview_for_investing_cryptocurrency_markets": "Get overview information of specific cryptocurrency",
    "coins_get_brief_chart_for_investing_cryptocurrency_markets": "Get brief information chart of specific cryptocurrency",
    "v1_convertcurrency_for_currency_converter_by_api_ninjas": "API Ninjas Convert Currency API endpoint.",
    "1_year_historical_daily_prices_for_stock_prices": "1 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "max_historical_daily_prices_for_stock_prices": "Max historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "10_year_historical_quarterly_prices_for_stock_prices": "10 Year quarterly historically adjusted Open, High, Low, and Close prices.  Quarterly Volume, Dividend, and Split information is also included.",
    "get_market_for_coinranking": "Find information on a specific market listed on Coinranking.\nThis endpoint requires the **ultra** plan or higher.",
    "get_coin_exchanges_for_coinranking": "Find exchanges where a specific coin can be traded.\nThis endpoint requires the **ultra** plan or higher.",
    "get_reference_currencies_for_coinranking": "Get a list of reference currencies, which can be used as reference for coins. The response includes all the essentials for this use-case, such as the symbol (e.g. USD) and - if available - the sign (e.g. $).",
    "articles_list_trending_deprecated_for_seeking_alpha": "List trending articles",
    "market_get_realtime_prices_deprecated_for_seeking_alpha": "* Use .../market/get-realtime-quotes instead.\nGet real time prices",
    "comments_get_sub_comments_for_seeking_alpha": "This endpoint is used to get sub or nested comments of another comment",
    "united_states_covid_19_death_count_for_covid_19_economic_impact": "Get cumulative United States COVID-19 death count daily.",
    "united_states_grocery_and_pharmacy_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at grocery and pharmacy.",
    "united_states_job_postings_for_covid_19_economic_impact": "Get weekly average percent change of job postings relative to January 4 - 31, 2020.",
    "calculate_for_sales_tax_calculator": "Retrieves tax rates applicable to a specific address. This endpoint accepts address inputs to deliver up-to-date, relevant local tax rates instantly.",
    "supported_countries_for_sales_tax_calculator": "Returns a list of supported countries.",
    "total_user_balance_for_wallet": "returns all user balance getting all walets balances",
    "get_user_wallets_for_wallet": "returns all user wallets",
    "get_user_by_id_for_wallet": "Get user information by Id",
    "currency_api_php_for_free_currency_converter_by_hajana_one": "Convert Ant Currency",
    "market_get_movers_for_fidelity_investments": "Get market movers which are most actives, top gainers, top losers",
    "market_get_orders_for_fidelity_investments": "Get orders by Fidelity customers",
    "news_get_details_for_fidelity_investments": "Get news details",
    "type_portfolio_get_historical_fixed_income_style_for_ms_finance": "Get historical fixed income style as displayed in the Portfolio tab",
    "type_get_strategy_for_ms_finance": "Get strategy",
    "news_get_details_for_ms_finance": "Get news details",
    "stock_v2_get_valuation_for_morning_star": "Mapped to Valuation  tab",
    "stock_get_detail_for_morning_star": "Get detail information of stock, market",
    "type_get_morningstar_analysis_for_morning_star": "Get Morningstar's analysis related to an ETF or FUND",
    "price_assetid_for_stockexchangeapi": "Get price quotes and details from an specific stock exchange asset",
    "get_the_yield_for_sundayfinance": "Feed in the ticker and get the yield",
    "get_the_next_dividend_payout_date_for_sundayfinance": "Feed in the ticke and get the next dividend payout date.",
    "generate_cc_number_for_fake_credit_card_generator_": "Generate a  fake Credit Card Number",
    "get_latest_signal_for_trend_and_strength_api_for_forex_gold_xauusd_": "Get the current trend direction of Forex GOLD",
    "v1_inflation_for_inflation_by_api_ninjas": "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages.",
    "account_transaction_count_for_binance_smart_chain": "Get the number of transactions done by an address on the Binance Smart Chain.",
    "account_balance_for_binance_smart_chain": "Get the BNB balance for an address on the Binance Smart Chain.",
    "account_transaction_history_for_binance_smart_chain": "Get an array of all transactions of an address on the Binance Smart Chain.",
    "get_other_performance_for_binance_futures_leaderboard": "Get the trader performance",
    "get_trader_positions_for_binance_futures_leaderboard": "Get trader open positions",
    "search_nickname_for_binance_futures_leaderboard": "Get the trader by nickname",
    "stock_information_for_realstonks": "This endpoint gets you the real-time stock information.",
    "getactivecurrencylist_for_crypto_asset_cold_wallet_create": "The Current Active Currency List REST API allows clients to retrieve a list of currently active currencies by sending a GET request to the endpoint. The endpoint should be in the following format:",
    "list_for_currency_converter_v2": "List of Supported Currencies",
    "get_foreign_exchange_rates_for_other_major_currencies_for_exchange_rate_provider": "Get Foreign Exchange Rates for other major currencies. At the moment only GBP and USD are available. More will be added with future updates.\n\nSo as `currencyId` please **use only** `/gbp` or `/usd`.",
    "get_eur_foreign_exchange_rates_for_exchange_rate_provider": "Get Foreign Exchange Rates for default currency EUR.",
    "coin_for_circulating_supply": "This endpoint returns the value of given coin as parameter.",
    "rapidata_services_for_direct_debit_managed_service": "Direct Debit Managed Service API",
    "quotes_get_mashup_for_fidelity_investments": "Get additional information for specific quote, market",
    "latest_rates_for_currency_v3": "Get the latest rates for all supported countries.",
    "historical_rates_for_currency_v3": "Find currency exchange rates for any day since 1999!",
    "tokens_for_tokenlist": "tokens list and contract based on network parameter.",
    "newly_listed_for_cryptocurrency_markets": "Recently listed cryptocurrencies.",
    "most_visited_for_cryptocurrency_markets": "Most visited cryptocurrencies today.",
    "top_losers_for_cryptocurrency_markets": "Cryptocurrencies with the most losses today.",
    "stockprice_for_indian_stock_exchange_api": "Enter the SYMBOL such as TATAMOTORS, M&M etc as a parameter at the endpoint and it will give your the Live Price updates from exchange.",
    "france_scheduled_flights_level_for_global_flight_data": "Get weekly France scheduled departing flights level.",
    "uae_scheduled_flights_growth_for_global_flight_data": "Get weekly United Arab Emirates scheduled departing flights growth.",
    "hong_kong_scheduled_flights_level_for_global_flight_data": "Get weekly Hong Kong scheduled departing flights level.",
    "stockprice_for_us_stock_prices_live_": "Enter the SYMBOL/TICKER such as TSLA, AAPL etc as a parameter at the endpoint and it will give your the Live Price updates from exchange.",
    "comments_list_deprecated_for_seeking_alpha": "List all comments relating to a post or article or news",
    "news_get_details_for_seeking_alpha": "Get analysis detail by id",
    "analysis_list_deprecated_for_seeking_alpha": "List analysis of specific symbol",
    "gethistoricalprices_for_yahoo_finance_historical_stock_prices": "Get historical prices.",
    "ping_for_stocks_archive": "Check that server is still alive",
    "tickerdata_for_stocks_archive": "Returns a list of ticker records",
    "tickerslist_for_stocks_archive": "Returns a list of available tickers",
    "market_breadth_for_360miq": "Stock Market Breadth API for the US and Global Stock Markets",
    "symbol_for_stock_data": "The ticker symbol of the stock.",
    "getbankdetailsft_for_fund_transfer": "By accessing  this API we can get all the bank details of a particular customer. For this a bank code is required.",
    "resendotpft_for_fund_transfer": "In case you miss the otp from our side.",
    "findcustomerdetailsft_for_fund_transfer": "This API permits us to  find a particular customer's details. e.g-customer's name, customer's mobile number etc.",
    "risk_free_rate_for_risk_free_rate_api": "This endpoint returns the risk free rate for a specific date. Default values are:\n\ndate = yesterday\ngeography = US\nduration = 3m\n\nCurrently only US is supported. Durations supported are 3m, 5y and 10y. Historical values are supported until 1960-01-04.",
    "all_coins_ticker_for_coinlore_cryptocurrency": "Get tickers for coins",
    "get_exchange_pairs_for_coinlore_cryptocurrency": "Returns top 100 pars",
    "global_crypto_stats_for_coinlore_cryptocurrency": "Get global info",
    "non_manufacturing_pmi_for_u_s_economic_indicators": "Get monthly non-manufacturing Purchasing Managers' Index.",
    "nonfarm_payrolls_adjusted_for_u_s_economic_indicators": "Get monthly seasonally adjusted nonfarm payrolls.",
    "manufacturing_pmi_for_u_s_economic_indicators": "Get monthly manufacturing Purchasing Managers' Index.",
    "get_a_list_of_latest_profiles_for_is_this_coin_a_scam": "Get a list of the top 100 crypto projects added to on isthiscoinascam.com. Ordered by date added.",
    "get_coin_by_slug_for_is_this_coin_a_scam": "Get a specific coin by slug",
    "get_a_list_of_trending_profiles_for_is_this_coin_a_scam": "Get a list of the top 100 crypto projects currently trending on isthiscoinascam.com added to the site. Ordered by most popular first.",
    "monthly_payment_for_mortgage_monthly_payment_calculator": "calculate monthly payment. Add all input to the query parameter string.\nloanAmount, interestRate, and terms.",
    "market_get_movers_for_trading_view": "Get movers in different exchanges and different categories",
    "v2_auto_complete_for_trading_view": "Get suggestion by term or phrase",
    "ideas_get_comments_for_trading_view": "Get comments relating to an ideal post",
    "get_metal_prices_for_gold_price_live_v2": "Get the current latest metals price.\nIncluding gold and silver.",
    "stock_history_for_yahoo_finance_v2": "Historic data for stocks, ETFs, mutuals funds, etc...",
    "market_top_gainers_depreciated_for_yahoo_finance_v2": "Stocks with the most gains in today's market",
    "stock_earnings_for_yahoo_finance_v2": "Get earnings information for a particular stock",
    "credit_limit_for_credit_card_prediction": "Credit_Limit GET request",
    "get_a_list_of_orders_for_alpaca_trading": "Retrieves a list of orders for the account, filtered by the supplied query parameters.",
    "retrieves_the_account_s_open_position_for_given_symbol_for_alpaca_trading": "",
    "get_an_order_for_alpaca_trading": "etrieves a single of order for the given order_id.",
    "heartbeat_for_daily_sec_financial_statement_dataset": "A simple heartbeat that returns the time of the server to check if the connection to the server is working.",
    "premium_daily_for_daily_sec_financial_statement_dataset": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. The files are published daily (resp. once or twice a week during the beta phase).\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**",
    "basic_daily_for_daily_sec_financial_statement_dataset": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. With the basic subcription, you only have access to daily zip files older than 21 days.\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**",
    "listsubscribedaddresses_for_chaingateway_io": "Returns all subscriptions/IPNs created with an account.",
    "gettransactions_for_chaingateway_io": "Returns information like confirmations, token contract address, amount, gas price and more of a given transaction.",
    "importaddress_for_chaingateway_io": "Returns all ethereum addresses created with an account.",
    "get_order_status_for_crypto_swap": "Get the data and status of a previously created order",
    "get_all_currencies_for_crypto_swap": "Fetch every currency that is supported by our exchange. The `canSend` and `canReceive` fields determine if we only send/receive or do both to a particular crypto.",
    "get_latest_fx_rates_for_involve_thailand_fx_rates": "Get Latest FX Rates",
    "instablogs_post_data_for_seeking_alpha_finance": "Get instablogs post data by instablog_post_id",
    "symbols_shares_for_seeking_alpha_finance": "Get shares for symbol",
    "markets_global_indices_for_seeking_alpha_finance": "Get global indices",
    "categorieslist_onlyforthoseservicekeythatincludethisoption_for_afterbanks_psd2_payments_and_bank_reader": "Returns a list with all the categories retrieved by Afterbanks own categorizer.",
    "listofsupportedbanks_for_afterbanks_psd2_payments_and_bank_reader": "Get a complete list of supported banks, as well as the names of the fields needed to draw a login form similar to the bank's original.",
    "get_balance_for_webit_blockchain": "Get balance from any wallet on different blockchains, including Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.",
    "chain_id_for_webit_blockchain": "Retrieve Chain ID for the selected blockchain.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `solana`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.",
    "get_latest_current_block_for_webit_blockchain": "Get latest (current) block being currently mined.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `solana`;\n- `polygon-mumbai`.",
    "1_cosigner_script_hash_address_for_trustedcoin": "",
    "kline_for_qvantana": "This endpoint retrieves historical k-line (candlestick) data for a specific cryptocurrency pair on a chosen exchange and market. The endpoint accepts the following parameters:\n\nsymbol (required): The trading pair (e.g., 'ethusdt'). The availability of symbols depends on the chosen exchange.\nmarket (required): The market type. Options include 'usdt-perpetual', 'spot', and 'inverse-perpetual'.\ninterval (required): The timeframe for each k-line data point. The available timeframes depend on the chosen exchange.\nlimit (optional): The number of data points to return. The maximum limit is 5000.\nfrom & to (optional): The start and end time for the data, respectively. They can be in UNIX timestamp format (seconds) or 'yyyy-MM-dd HH:mm:ss' format.\nexchange (required): The exchange to fetch data from. Available options are 'bybit', 'binance', 'bitstamp', 'gateio', and 'kraken'.\nThis endpoint offers comprehensive historical trading data tailored to your specific needs, providing a valuable tool for market analysis.",
    "relative_strength_index_rsi_for_qvantana": "Stochastic Relative Strength Index (RSI) indicator",
    "stochastic_rsi_for_qvantana": "Stochastic RSI indicator",
    "getreferencerates_for_european_central_bank_reference_rates": "Get the current Reference Rates",
    "price_for_global_market_indices_data": "Get price of index over a period",
    "indices_for_global_market_indices_data": "Get Listed Indices",
    "forecast_for_global_market_indices_data": "Predics stock price for the next ^ months",
    "convert_for_just_currencies": "Convert",
    "generate_litecoin_deposit_address_from_extended_public_key_for_litecoin_wallet": "Generate Litecoin deposit address from Extended public key. Deposit address is generated for the specific index - each extended public key can generate up to 2^31 addresses starting from index 0 until 2^31 - 1.",
    "get_litecoin_transaction_by_hash_for_litecoin_wallet": "Get Litecoin Transaction detail by transaction hash.",
    "get_mempool_transactions_for_litecoin_wallet": "Get Litecoin Transaction ids in the mempool.",
    "exchange_information_for_crypto_markets": "Current exchange trading rules and symbol information",
    "order_book_for_crypto_markets": "Order Book",
    "symbol_order_book_ticker_for_crypto_markets": "Symbol Order Book Ticker",
    "specific_transactions_for_crypto_whale_transactions": "get info about single transaction",
    "transactions_feed_for_crypto_whale_transactions": "Get latest huge whale transactions for most popular blockchains.\n\n**Filter by txn value. Add parameters as below:**\n<_amount_usd=10000 \nOR\n>amount_usd=10000\n\n**Filter by blockchain:**\n t_blockchain=bitcoin\n\nAvailable blockchains: bitcoin, bitcoin-cash, ethereum, bitcoin-sv, litecoin, tron, ripple, zcash, dogecoin, neo, eos, dash, ethereum-classic, tezos, binancechain, stellar, groestlcoin, icon, steem, cosmos, decred, verge, hypercash, siacoin\n\n\n**Pagination:**\nAdd parameter: size=100",
    "blockchains_for_crypto_whale_transactions": "Get list of all supported blockchains",
    "market_capitalization_for_realtime_crypto_prices": "Returns Market Capitalization of a coin in US Dollars.",
    "get_liquidity_value_for_realtime_crypto_prices": "Returns Liquidity value of a coin in US Dollars",
    "get_realtime_volume_for_realtime_crypto_prices": "Returns Realtime volume of a coin in US Dollars.",
    "merchant_credit_card_reward_lookup_for_merchant_credit_card_reward": "This is an API designed to retrieve comprehensive information about merchants, in addition to providing associated data on qualifying credit card rewards.",
    "latest_rates_for_exchangerate_api": "This endpoint returns the latest exchange rates for the base currency code you have supplied.\n\nYou can view the list of supported currency codes here: [https://www.exchangerate-api.com/docs/supported-currencies](https://www.exchangerate-api.com/docs/supported-currencies)",
    "validate_vat_number_for_vatlayer": "Using the \"validate\" endpoint, you may request the API to validate any EU VAT number and obtain information about the company it is assigned to",
    "request_list_of_types_of_goods_for_vatlayer": "Request an entire list of all available \"types of goods\", which fall into reduced VAT categories in specific EU member states",
    "request_all_eu_vat_rates_for_vatlayer": "Use the API's \"rate_list\" endpoint to obtain standard & reduced VAT rates for all 28 current member states",
    "content_for_daily_sec_financial_statement_dataset": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan",
    "opt_gamma_for_kiann_options_project": "option lognormal greeks : gamma calculates the gamma, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), cp  =call (c) /put (p) (string), type_ = 0 (default) for use in rapidAPI.com",
    "opt_rho_for_kiann_options_project": "option lognormal greeks : delta calculates the delta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_= 0 (default) for use in rapidAPI.com",
    "getseries_for_kalshi_trading_api": "Endpoint for getting data about a series by its ticker.",
    "getevent_for_kalshi_trading_api": "Endpoint for getting data about an event by its ticker.",
    "getevents_for_kalshi_trading_api": "Endpoint for getting data about all events.",
    "gethistoricalscoresbyyear_for_gaialens_historical_esg_scores": "This API returns historical Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100 based on the year provided in the request.  In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more.",
    "income_statement_for_financial_statements": "Get company income statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.",
    "cash_flow_statement_for_financial_statements": "Get company cash flow statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.",
    "balance_sheet_statement_for_financial_statements": "Get company balance sheet statement by year.\n\nAll numbers in thousands.",
    "form5500_planname_for_form_5500_data": "This will return information about the plan.",
    "generate_fake_credit_card_number_for_card_validator": "This endpoint create a fake and valid credit card number with desired length.",
    "getcurrentbyvaluegrowthmomentum_for_earningsdata": "Get list of stocks according to current value, growth and momentum information.",
    "getbydate_for_earningsdata": "Get earnings data by date.",
    "daily_sentiment_for_sentitrade": "Returns asset ticker queried, sentiment score, date queried, and number of articles used to calculate the sentiment score.",
    "getarchivereport_for_experian_credit_report_score": " ",
    "price_for_test_v3": "Get current price of a currency.",
    "casey_griswold_for_armatic": "Runs armatic and deals with other vendors.",
    "forex_quotes_for_holistic_finance_stock_data": "Provides real-time forex data.",
    "forex_symbol_for_holistic_finance_stock_data": "Returns a list of all available forex symbols",
    "stock_ownership_for_holistic_finance_stock_data": "Provides current stock ownership information.",
    "market_get_earnings_for_webull": "Get market earnings in specific region",
    "news_list_by_ticker_for_webull": "List news by ticker id",
    "stock_search_for_webull": "Search for stock, index, fund, etc... by terms or phrase",
    "5_year_historical_monthly_prices_for_stock_prices": "5 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included.",
    "3_month_historical_daily_prices_for_stock_prices": "3 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "get_social_moving_averages_72h_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 72-hour intervals.",
    "get_social_trending_comments_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search the top 50 tickers trending on social media by comments.",
    "get_social_trending_posts_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search the top 50 tickers trending on social media by posts.",
    "getportfolioinfo_for_trader_wagon": "Get portfolio info of a given portfolio id",
    "listportfolios_for_trader_wagon": "List portfolios",
    "gettraderpositions_for_trader_wagon": "Get trader positions of a given portfolio id",
    "get_assets_for_alpaca_trading": "",
    "get_the_clock_for_alpaca_trading": "Returns the market clock",
    "get_an_order_by_client_order_id_for_alpaca_trading": "",
    "totlsupply_for_totalsupply": "gets token supply",
    "get_all_currency_rates_for_exchange_rates_live": "This endpoint will return back all rates from banks.",
    "get_individual_bank_for_exchange_rates_live": "Get rates from Central banks using prefixed. \nDenmark National Bank (dkk), \nNational Bank Of Poland (pln),\nEuropean Central Bank  (eur),\nEuropean Central Bank  - calculated for USD base(usd), \nSwedish Central Bank  (sek)\nFeel free to contact me If you wish to add new currency rates/ banks.",
    "getpaymentinitiationinstructionsummary_for_transaction": "Get all payment initiation instructions allows to retrieve all customer credit transfer initiations. If the number of results exceeds the default limit, the response will be paginated. The operation allows filtering the results based on the creation from date and creation to date. The result is filtered based on \"creation_date_time\". The endpoint will return an empty array when no resource is found.\n",
    "getdirectdebitinitiationinstruction_for_transaction": "Use this operation to retrieve a direct debit initiation instruction by ID (UETR).",
    "getpaymentinitiationinstruction_for_transaction": "Use this operation to retrieve a payment initiation instruction by ID (UETR).",
    "6_month_historical_daily_prices_for_stock_prices": "6 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "top_collections_today_for_top_nft_sales": "Top trending collections today",
    "top_collections_this_month_for_top_nft_sales": "Top trending collections this month",
    "top_nfts_this_month_for_top_nft_sales": "Top selling NFTs this month",
    "api_trades_for_prague_stock_exchange": " ",
    "api_trades_stock_for_prague_stock_exchange": " ",
    "symbols_dividends_estimates_for_seeking_alpha_finance": "Get dividends estimates data by Ticker slug",
    "symbols_ratings_relative_for_seeking_alpha_finance": "Get relative ratings by Ticker slug",
    "user_instablog_posts_for_seeking_alpha_finance": "Get insta-blog posts of user by user_id",
    "latest_rates_for_currency_converter_pro": "Real-time exchange rate data of 170 world currencies. Updated every 10min.",
    "convert_currency_for_currency_converter_pro": "Convert any amount from one currency to another.",
    "currencies_for_currency_converter_pro": "List all supported currencies.",
    "market_data_for_stock_sentiment_api": "Returns a list of daily stock metrics such as opening, closing, highest and lowest prices.",
    "world_news_for_investing": "This endpoint provides the world news",
    "metals_futures_prices_for_investing": "page source : https://www.investing.com/commodities/metals",
    "earnings_calendar_for_investing": "This endpoint provides information about the earnings calendar.",
    "search_mortgages_for_uk_mortgage_search": "Search All mortgages \n\nParams:",
    "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get disasters which have address falling into a specific radius for a specific date range",
    "getpowerplantbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get powerplants which have address falling into a specific radius",
    "getdisasterbyradiusandgps_for_rankiteo_climate_risk_assessment": "Get disasters which have coordinate points falling into a specific radius for a specific date range",
    "protocols_for_defi_data": "List of protocols along with their tvl",
    "earnings_estimate_for_stock_analysis": "Get earnings estimate.",
    "revenue_estimate_for_stock_analysis": "Get revenue estimate.",
    "earnings_revisions_for_stock_analysis": "Get earnings revisions.",
    "error_codes_for_wealth_reader_api": "Listado de c\u00f3digos de error. Presta especial atenci\u00f3n a que no todos los c\u00f3digos de error deben recibir el mismo tratamiento por parte de tu aplicaci\u00f3n. Ante un error de password incorrecto no debes reintentar la llamada con los mismos par\u00e1metros, pero ante un error que te indique que la entidad est\u00e1 en mantenimiento s\u00ed puedes reintentarlo. Pide una sesi\u00f3n t\u00e9cnica con nuestro equipo para resolver cualquier duda sobre la gesti\u00f3n de errores.\n",
    "entities_for_wealth_reader_api": "Obtiene el listado de entidades soportadas y la informaci\u00f3n necesaria para dibujar el formulario de login de la entidad.\n",
    "esg_risk_rating_for_esg_risk_ratings_for_stocks": "The final ESG Risk Rating is a measure of unmanaged risk on a grading scale of A through F, with A signaling less ESG Risk. Controversy Risk is rated on a grading scale A through F, with F denoting the most serious controversy with the largest potential impact.",
    "ticker_per_symbol_for_global_ethereum_price_index_gex": "Returns ticker data for specified symbol",
    "short_ticker_for_global_ethereum_price_index_gex": "Returns basic ticker denoting last and daily average price for all symbols",
    "ticker_changes_for_global_ethereum_price_index_gex": "Returns ticker values and price changes for specified market and symbol.",
    "mfs_list_for_twelve_data": "This API request returns a list of mutual funds available at Twelve Data. Sorting is in descending order by total assets value. The list is updated daily.\n\nWith Basic, Pro, and Ultra plans, only 50 records will be in response. Mega and Custom plans can access complete data on over 200,000 Mutual Funds.",
    "time_series_for_twelve_data": "This API call returns meta and time series for equities. Meta object consists of general information about the requested symbol. Time series is the array of objects ordered by time descending with Open, High, Low, Close prices + Volume.",
    "ichimoku_for_twelve_data": "Ichimoku Kink\u014d Hy\u014d(ICHIMOKU) is a group of technical indicators that shows trend direction, momentum, and support & resistance levels. Overall it tends to improve the accuracy of forecasts.",
    "top_gainers_for_cryptocurrency_markets": "Cryptocurrencies with the most gainers today.",
    "videos_for_cryptocurrency_markets": "Recently published cryptocurrencies videos.",
    "coin_list_for_cryptocurrency_markets": "All active cryptocurrencies available to trade",
    "get_metadata_for_a_time_series_database_for_quandl": "You can retrieve metadata for a specified time-series database",
    "get_filtered_time_series_data_for_quandl": "You can slice, transform and otherwise customize your time-series dataset prior to download by appending various optional parameters to your query.  Get monthly % changes in Facebook's closing price for the year 2014:",
    "get_time_series_data_and_metadata_for_quandl": "This call returns data and metadata for a given time-series.",
    "latest_in_chosen_currency_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, Platinum and 160+ currency rates based on selected Currency",
    "latest_retrieve_selected_160_symbols_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, and Platinum provided in 160+ currencies including USD, GBP and EUR.",
    "latest_retrieve_xau_xag_pa_pl_eur_gbp_usd_for_live_metal_prices": "Real-time Gold, Silver, Palladium and Platinum prices delivered in USD, GBP and EUR.",
    "ultimateoscillator_for_qvantana": "UltimateOscillator indicator",
    "parabolic_sar_for_qvantana": "Parabolic SAR indicator",
    "three_stars_in_the_south_for_qvantana": "Three Stars In The South indicator",
    "convertir_cantidad_a_letra_moneda_mxn_ingles_for_numberstoletters": "Convertir cantidad a letra Moneda MXN en Ingles",
    "convertir_cantidad_a_letra_moneda_mxn_espa_ol_for_numberstoletters": "Convierte de cantidad a letras pesos Mexicano EndPoind Espa\u00f1ol\nSe agrego el parametro **moneda**, los tipos aceptados para este parametro son los siguientes (PESOS, DOLARES, EUROS), TODO EN MAYUSCULAS.",
    "get_balance_for_pancakeswap_api": "Get token balance of specific address.",
    "4_charts_for_stockyapiexchange": "This feature provides interactive charts that allow users to visualize the performance of a stock over time. Users can customize the time period and type of chart (line, bar, candlestick, etc.) to get a better understanding of the stock's price movements.",
    "3_summary_for_stockyapiexchange": "Summary: This feature gives a quick overview of the performance of a stock, including its current price, percentage change, and trading volume. It also provides a summary of the key financial metrics and news related to the stock",
    "6_daily_for_stockyapiexchange": "This feature provides up-to-date information about a stock's performance during a trading day. It includes the stock's opening and closing prices, as well as its high, low, and trading volume for the day.",
    "tokens_for_crypto_market_data_from_token_metrics": "Get tokens",
    "price_prediction_for_crypto_market_data_from_token_metrics": "Get price prediction for tokens powered by Token Metrics",
    "sentiments_for_crypto_market_data_from_token_metrics": "Get market sentiment for tokens powered by Token Metrics",
    "v3_auto_complete_for_fidelity_investments": "Auto suggestion by input name or quote",
    "auto_complete_deprecated_for_fidelity_investments": "Auto suggestion by input name or quote.\n* This endpoint is deprecated",
    "news_list_top_for_fidelity_investments": "List top news from all supported area",
    "webchain_for_webchain": "WEBCHAIN: A Blockchain for DApps, Secured via Websites",
    "metadata_for_cryptocurrency_data": "The list of all available assets",
    "supply_chain_for_corporate_supply_chain": "Get supply chain information.",
    "economic_calendar_for_investing": "This endpoint provides information about the economic calendar.",
    "ipo_calendar_for_investing": "This endpoint provides information about the IPO calendar.",
    "cryptocurrency_news_for_investing": "This endpoint provides the news on cryptocurrency",
    "exchanges_list_for_trading_view": "List all available and supported exchanges",
    "countries_list_for_trading_view": "List all available supported countries",
    "getdirectdebitinitiationinstructionsummary_for_transaction": "Get all direct debit initiation instructions allows to retrieve all direct debit initiation instruction. If the number of results exceeds the default limit, the response will be paginated. The operation allows filtering the results based on the creation from date and creation to date. The result is filtered based on \"creation_date_time\". The endpoint will return an empty array when no resource is found.\n",
    "three_advancing_white_soldiers_for_qvantana": "Three Advancing White Soldiers indicator",
    "three_outside_up_down_for_qvantana": "Three Outside Up/Down indicator",
    "getfscore_for_piotrosky_f_score": "Gets the F-Score for the provided ticker in the query parameters.",
    "opt_vega_for_kiann_options_project": "option lognormal greeks : vega calculates the vega, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_ = 0 (default) for use in rapidAPI.com",
    "top_nfts_today_for_top_nft_sales": "Top selling NFTs today",
    "top_collections_this_week_for_top_nft_sales": "Top trending collections this week",
    "price_by_symbol_for_get_live_stock_price_by_symbol": "Get live price of stock by symbol",
    "ip2currency_api_for_ip2currency": "Currency by IP Geolocation API",
    "spac_summary_for_spachero_spac_database": "Retrieve SPAC summary including important dates, status and target names.",
    "spac_sec_filings_for_spachero_spac_database": "Get latest SPAC SEC filings, filter by SPAC symbol.",
    "spac_top_10_rankings_for_spachero_spac_database": "Returns Top-10 gainers, losers and volume leaders for a given period and equity type (i.e., common, unit, warrants). \n\nAccepts three query parameters:\n\n**period: **daily, weekly, monthly\n**type:** common, unit, warrant\n**sortby:** gainers, losers, volume",
    "market_undervalued_growth_stocks_for_mboum_finance": "Stocks with earnings growth rates better than 25% and relatively low PE and PEG ratios.",
    "stock_cashflow_statement_stock_for_mboum_finance": "Get stock cash flow statements.",
    "market_growth_technology_stocks_for_mboum_finance": "Technology stocks with revenue and earnings growth in excess of 25%.",
    "get_time_series_data_for_quandl": "This call returns data from a specified time-series.",
    "get_time_series_metadata_for_quandl": "This call returns metadata for a specified time-series.",
    "recent_trades_list_for_crypto_markets": "Recent Trades List",
    "old_trade_lookup_for_crypto_markets": "Get older market trades.",
    "stock_get_currency_for_yh_finance_v2": "return get currency",
    "stock_get_interest_expense_for_yh_finance_v2": "return interest expense for stock",
    "stock_get_stock_exchange_for_yh_finance_v2": "return stock exchange",
    "conversion_for_sciphercrypto": "example from \"BTC\" (Bitcoin) to \"USDT\" (Tether)\nThis JSON response contains data for the cryptocurrency example:Ethereum (ETH), including its name, algorithm, block number, launch date, and market performance ratings. It also includes conversion information for ETH to USDT, such as the current market cap, total volume, and conversion rate. use the correct symbol in order to get an accurate data.",
    "toptier_summary_for_sciphercrypto": "This response returns an ascending crypto coins the rank varies the way you choose limit if you choose 10 as limit you will get the top 10 cryptos\n->limit= Options are: 1-->100\n->page= Options are: 1-->100 based on limit rate \n->assetClass= Options are: ALL,DEFI,NFT\n->tsym\" typically stands for \"to symbol\", which represents the cryptocurrency that the conversion rate is being calculated for.",
    "paymentcalculatorsimple_calculate_for_simple_interest_payment_calculator": " ",
    "validate_card_number_for_credit_card_number_validator": "Validate Credit Card Number and get the card type",
    "get_daily_influencer_posts_by_coin_name_for_crowdsense": "Retrieve news and posts from Top Influencers in social media ordered by date by coin name\nThis endpoint contains results on a specific coin. To search for influencer posts on all coins coins check \"Get Daily Influencer Posts\"\n\n**Input:**\n\n- Coin Name (Required)\n\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Publisher\n- Source\n- Related coins\n- Event Color\n- Number of followers\n- Event text\n\n**Definitions:**\n\n- Publisher: User name of the publisher of the event in social media\n- Source: Social media where the post was published\n- Related coins: Coins mentioned in the post\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Number of followers: Influencer\u00b4s number of followers in social media\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC",
    "get_coin_historical_metrics_by_ticker_for_crowdsense": "Retrieve  coin\u00b4s historical social media metrics by Coin ticker\nIn the case you want to retrieve real time data check \"Get Coin Metrics by Name\" or \"Get Coin Metrics by Ticker\"\n\n**Input:** \n-  Date (MM/DD/YYYY HH:HH AM/PM) (Required)\n- Security Ticker: Coin Ticker (Required)\n- TimeFrame: 1d, 1h, 8h (Optional)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Weighted sentiment\n- Weighted sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- TimeFrame\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tWeightedSentiment \u2013  Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)  in the requested date with TimeFrame required. [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers] \n\u2022\tWeightedSentimentChange - Percentage change of Weighted Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Historical date is only avaliable from 7 days back",
    "get_coin_metrics_by_ticker_for_crowdsense": "Retrieve coin\u00b4s  real time social media metrics by Coin ticker\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Ticker: Coin Ticker (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Results are on 1 day timeframe",
    "uae_scheduled_flights_level_for_global_flight_data": "Get weekly United Arab Emirates scheduled departing flights level.",
    "spain_scheduled_flights_growth_for_global_flight_data": "Get weekly Spain scheduled departing flights growth.",
    "japan_scheduled_flights_level_for_global_flight_data": "Get weekly Japan scheduled departing flights level.",
    "get_coins_data_for_mineable_coins": "With this endpoint you can get a collection of all coins.\n\n**API alterations**\n- **Get one coin:** https://api.minerstat.com/v2/coins?list=BTC\n- **Get list of coins:** https://api.minerstat.com/v2/coins?list=BTC,BCH,BSV\n- **Get all coins from one algorithm:** https://api.minerstat.com/v2/coins?algo=SHA-256\n- **Get all coins from multiple algorithms:** https://api.minerstat.com/v2/coins?algo=SHA-256,Scrypt,Ethash",
    "historical_for_exchange_rates_api_": "This endpoint returns historical rates for any working day since 4 January 1999.\n\nGET /1999-01-04 HTTP/1.1\nYou can again tweak the response using the from and to parameters.",
    "latest_for_exchange_rates_api_": "This endpoint returns the latest rates.\n\nGET /latest HTTP/1.1\nRates quote against the Euro by default. You can quote against other currencies using the from parameter.\n\nGET /latest?from=USD HTTP/1.1\nto limits returned rates to specified values.\n\nGET /latest?to=USD,GBP HTTP/1.1",
    "currencies_for_exchange_rates_api_": "This endpoint gets a list of available currency symbols along with their full names.\n\nGET /currencies HTTP/1.1",
    "daily_3_recent_for_ca_lottery": "Most recent draw for Daily 3",
    "daily_3_for_ca_lottery": "Daily 3 History",
    "fantasy_5_recent_for_ca_lottery": "Most recent draw for Fantasy 5",
    "api_assetinfo_for_crypto_and_forex_rates": "Information about single asset",
    "exchangecurrencies_for_crypto_and_forex_rates": "Exchange between two currency ( USD is base ) \nUser can define Buy and Sell Fees also can define withdraw fee in percentage",
    "getprices_for_crypto_and_forex_rates": "Get list of prices for all assets",
    "api_v2_list_of_all_available_pairs_for_changenow_crypto_exchange": "<p>This API endpoint returns the list of all available pairs. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.</p>\n<p>Notice that the resulting array will contain about 13000 pairs.</p>\n\n<h3>Successful response:</h3>\n<p>The response contains an array of underscore separated pair of tickers.</p>\n\n<h3>Request Parameters:</h3>",
    "list_of_all_available_pairs_for_changenow_crypto_exchange": "<p>This API endpoint returns the list of all available pairs. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.</p>\n<p>Notice that the resulting array will contain about 13000 pairs.</p>\n\n<h3>Successful response:</h3>\n<p>The response contains an array of underscore separated pair of tickers.</p>\n\n<h3>Request Parameters:</h3>",
    "get_compliance_with_company_details_for_finispia_usa_with_company_details": "Display compliance of company",
    "global_metric_for_cryptocurrency_markets": "Current cryptocurrency global metrics.",
    "streams_home_for_stocktwits": "Returns the most recent 30 messages posted to the authenticating user's home stream, which is made up of the users and stocks they follow.",
    "watchlists_index_for_stocktwits": "Returns a list of private watch lists for the authenticating user.",
    "streams_user_for_stocktwits": "Returns the most recent 30 messages for the specified user. Includes user object in response.",
    "trader_grades_for_crypto_market_data_from_token_metrics": "Access Trader Grades for tokens",
    "resistance_support_for_crypto_market_data_from_token_metrics": "Get automated Resistance and Support for tokens powered  by Token Metrics",
    "symbols_get_earnings_for_seeking_alpha": "Get information  in Earnings tab of specific symbol",
    "comments_v2_list_for_seeking_alpha": "List all comments relating to a post or article or news. This endpoint only returns site map structure of comments relating to a post. You need to use along with .../comments/get-contents endpoint to get the contents.",
    "articles_list_deprecated_for_seeking_alpha": "List articles by category",
    "getesgnews_for_gaialens_esg_news": "ESG news API with a state of the art algorithm tracking thousands of news sources, social media and NGOs in real-time. The results include ESG specific topics including SASB and UN SDGs and a few other important ESG themes such as Modern Slavery and Gender Equality.",
    "currency_converter_with_forecast_and_historical_data_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAllows to convert currency and shows prediction of exchange rate for currency pairs.\n\n`country_code` - is now optional. API will try first to get cross rate from European Central Bank. If API will found both currencies in another central bank, you will see from which central bank it was taken.\n\nExample: To get CNY to GBP provided by European Central Bank\n`/api/get_cross?currency=cny&currency_cross=gbp`\nor \n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp`\nor from Kazakhstan's CB:\n`/api/get_cross?country_code=kz&currency=cny&currency_cross=gbp`\nOf course cross rates from KZ and EU will be slightly different.\n\nExample 2: If you want to get historical data, add `&history_yyyy_mm_dd=2022-06-21`\n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp&history_yyyy_mm_dd=2022-06-21`\n\nExotic example: To get CNY to MDL (Yuan to Moldavian Lei) provided by Kazakhstan CB\n`/api/get_cross?currency=cny&currency_cross=mdl`\n\nParameters:\n1) country_code; 2) currency; 3) currency_cross; 4) optional parameter is `history_yyyy_mm_dd` (example:2022-06-27)' .\nTo get available `country_code` - access `/api/info/countries`\nTo get all currency abbreviations - access `/api/info/currencies` - there you need `code` value which is having  3 capital letters, like USD or CHF\n\nExample 3: If you want get price of Bitcoin in USD use:\n`/api/get_cross?currency=btc&currency_cross=usd`\n...same in GBP with specified `country_code`:\n`/api/get_cross?country_code=bitcoin&currency=btc&currency_cross=gbp`\n\nExample 4: If you want get price of Bitcoin in USD for a day in the past use:\n`/api/get_cross?country_code=bitcoin&history_yyyy_mm_dd=2022-06-27&currency=btc&currency_cross=usd`",
    "get_exchange_rates_forecast_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis API provides convinient way to get forecast for almost all fiat currencies and for bitcoin. Forecast based on Moving Average method with at least 30 historical observations.\n\nExample with fiat- \n`/api/get_forecast?country_code=eu&currency=usd&predict_days=5`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nExample 1 - \n`/api/get_forecast?country_code=bitcoin&currency=btc`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nSince 11 April 2022 you can request `/api/get_forecast?country_code=bitcoin&currency=btc&predict_days=10`\nThis will provide prediction for 10 days. `&predict_days` accepting integer from 2 to 10\n\nExample 2 - If you want to get forecast for Canadian Dollar in USD:\n`/api/get_forecast?country_code=eu&currency=usd&cross_currency=cad`\nyou will get response:\n\"`message`\":\".......... price for 1 CAD in US DOLLAR.... \"\n\"`forecast_rate`\": 0.7896,  -->> means that  forecast for 1 CAD is equal to 0.7896 USD\n\"`forecast_date`\": \"2021-11-21\", \n...\n\nExample 3 - If you want to get forecast of exchange rate for US Dollar in EU (European Union)  provided by European Central Bank:\n`/api/get_forecast?country_code=eu&currency=usd`\nyou get:\n\"`forecast_rate`\": 1.1254,  -->>which means 1 Euro = 1.1254 US Dollar\n\"`forecast_date`\": \"2021-11-21\",\n\nExample 4 - get  forecast and exhange rates for 1 USD provided by Moldavian Central Bank in Russian language:\n`/api/get_forecast?country_code=md&lang=ru&currency=eur&cross_currency=usd`\nInfo about lang= : `/api/info/languages`\nInfo about `cross_currency`= : `/api/info/currencies`",
    "get_banks_in_a_country_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis endpoint gives list of banks in selected country.\n\nExample 1\n` /api/get_all_banks_in_country?country_code=eu`\n\nExample 2\n `/api/get_all_banks_in_country?country_code=md`\n\nExample 3\n `/api/get_all_banks_in_country?country_code=bitcoin`\nwell... I hope you've got the idea:) The currency must have it's country and bank and for cryptocurrencies it is just imaginable bank \"Bitcoin\" and imaginable country \"Bitcoin\". This request will show you JSON\n{... \"is_central\": 1, \"name\": \"Bitcoin\", \"name_short\": \"Bitcoin\",...}\n\nTo get all available `country_code` use free endpoint `/api/info/countries`",
    "coinmill_for_coinmill_currency": "",
    "time_series_endpoint_for_currency_conversion_and_exchange_rates": "Retrieve historical rates between two specified dates.\n\n`Maximum of 365 day time range`",
    "historical_exchange_rates_for_currency_conversion_and_exchange_rates": "Retrieve historical exchange rate data. Data is available for most currencies all the way back to the year of 1999.",
    "symbols_for_currency_conversion_and_exchange_rates": "Retrieve a list of all currently available currency symbols",
    "stock_get_open_price_for_yh_finance_v2": "return open price",
    "stock_get_annual_avg_div_yield_for_yh_finance_v2": "return annual avg div yield",
    "stock_get_five_yr_avg_div_yield_for_yh_finance_v2": "return five year average dividend yield",
    "get_exchanges_from_screener_for_tradingview_ta_api_technical_analysis_": "Get exchange list from screener.",
    "get_screeners_for_tradingview_ta_api_technical_analysis_": "Get list of screeners.",
    "get_analysis_from_symbol_for_tradingview_ta_api_technical_analysis_": "Get analysis data from symbol.",
    "list_position_for_each_crypto_for_crypto_grana": "List your current position for each crypto",
    "list_histories_for_crypto_grana": "List of your histories",
    "supported_currencies_for_exchanger_currency_rates_provider": "Return the list of all supported currencies including \n\n- Country Name \n- Country Code\n- Currency Code",
    "latest_rates_for_exchanger_currency_rates_provider": "This endpoint will return the exchange rate data updated every 60 minutes.",
    "historical_rates_for_exchanger_currency_rates_provider": "Request the prices of any date between the year 2000 till today.",
    "stock_calendar_events_stock_for_mboum_finance": "Get stock calendar events.",
    "stock_financial_data_stock_for_mboum_finance": "Get stock financial data.",
    "fx_for_forexgo": "Introducing ForexGo API - the powerful currency exchange solution for developers. Effortlessly integrate real-time forex rates and conversion capabilities into your applications with our easy-to-use API. Enhance your projects with accurate and up-to-date exchange data, empowering users across the globe to make informed financial decisions. Get started with ForexGo API today!",
    "symbols_splits_for_seeking_alpha_finance": "Get splits for historical prices. Ex.: https://seekingalpha.com/symbol/NVDA/historical-price-quotes",
    "symbols_press_releases_for_seeking_alpha_finance": "Get a list of press releases for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/press-releases",
    "article_comments_for_seeking_alpha_finance": "Get list of comments by article id",
    "get_other_leaderboard_base_info_for_binance_futures_leaderboard": "Get the trader information",
    "get_trader_info_for_binance_futures_leaderboard": "Get trader information",
    "query_index_price_kline_usdt_for_bybit": "Index price kline. Tracks BTC spot prices, with a frequency of every second.",
    "latest_information_for_symbol_for_bybit": "If symbol is not specified, the data from all symbols will be returned",
    "announcement_for_bybit": "Get Bybit OpenAPI announcements in the last 30 days in reverse order.",
    "getservertime_for_bybit_leaderboard": "Returns server time.",
    "traders_with_positions_for_bybit_leaderboard": "Returns traders with shared positions only.",
    "search_leaderboard_for_bybit_leaderboard": "Returns traders that match your search filters.",
    "getdivision_for_mathaas": "Divides two numbers (dividend and divisor) provided as parameters",
    "latest_selected_metals_in_selected_currency_in_grams_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, Platinum and 160+ currency rates based on selected Currency",
    "japan_scheduled_flights_growth_for_global_flight_data": "Get weekly Japan scheduled departing flights growth.",
    "india_scheduled_flights_level_for_global_flight_data": "Get weekly India scheduled departing flights level.",
    "getdisastertypebydate_for_rankiteo_climate_risk_assessment": "Get disaster by type within a time range",
    "get_company_balance_sheet_for_finance_data": "Get Company latest data for balance sheet",
    "get_company_cash_flow_for_finance_data": "Get company cash flow latest data.",
    "get_company_quarterly_income_statement_for_finance_data": "Get Company Income Statement",
    "see_results_for_nordigen": "Get results for the requested analysis on the bank statement. Use the request_id from the operations request.",
    "get_bank_info_for_routing_number_bank_lookup": "This endpoint returns information about a bank by passing in the routing number.\n\nQuery Params:\n- **format:** defines the response type, currently XML and JSON are supported. Default value is JSON. Possible values: \"xml\", \"json\"\n- **paymentType:** choose to retrieve either the ACH or Wire Transfer information from the bank. Default value is ACH. Possible values: \"ach\", \"wire\"\n\n####Example:\nGET https://routing-number-bank-lookup.p.rapidapi.com/api/v1/121000248?paymentType=wire&format=json returns the wire transfer information for the bank corresponding to routing number 121000248 in json format.",
    "gettaxratebyzip_for_retrieveustaxrate": "Retrieve the US tax rate by zip code",
    "get_user_orders_for__demo_project_v3": " ",
    "me_for__demo_project_v3": " ",
    "get_product_for__demo_project_v3": " ",
    "price_for_latest_stock_price": "Fetch latest stock price based on indices",
    "prices_for_latest_stock_price": "Fetch latest stock price based on indices",
    "price_all_for_latest_stock_price": "Fetch latest stock price",
    "list_all_coins_for_is_this_coin_a_scam": "Get a list of coins. You can search slug, name and symbol. You can perform wildcard searches",
    "getdisclosedtoday_for_jp_funda": "### Return securities report data disclosed today\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators",
    "getlistbyedinetcode_for_jp_funda": "### Return all securities report data of the company specified with edinet code.\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators",
    "getlatestbyedinetcode_for_jp_funda": "### Return latest securities report data of the company specified with edinet code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators",
    "see_about_the_exchanges_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top exchanges including names and prices even rank and more!",
    "see_about_gainers_losers_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top Gainers and Losers including names and percentage even rank and more!",
    "see_about_nft_prices_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top nft currencies including names and prices even rank and more!",
    "stock_symbols_for_real_time_quotes": "Returns a list of all available stock symbols",
    "crypto_symbols_for_real_time_quotes": "Returns a list of all available crypto  currencies",
    "stock_quotes_for_real_time_quotes": "Returns the real time price of one or multiple companies",
    "get_coins_for_coinranking": "Get a list of coins. Coins are by default ordered by their rank, which - somewhat simplified - means that they are ordered on marketcap. The response not only returns a list of coins, but also statistics regarding the requested list, such as the volume in the last 24 hours.",
    "get_exchanges_index_for_coinranking": "List of all exchanges currently available on Coinranking, for indexing purposes.\nThis endpoint requires the **ultra** plan or higher.",
    "get_coin_for_coinranking": "Find information about a specific coin.",
    "balance_sheet_for_twelve_data": "Returns complete balance sheet of a company showing the summary of assets, liabilities, and shareholders\u2019 equity.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
    "income_statement_for_twelve_data": "Returns complete income statement of a company and shows the company\u2019s revenues and expenses during a period (annual or quarter).\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
    "apo_for_twelve_data": "Absolute Price Oscillator(APO) calculates the difference between two price moving averages.",
    "index_for_crypto_fear_greed_index": "Extract Fear & Greed index value(s)\n\nQuery params:\nlimit (NUMBER) - Get latest N records (Optional)\ntimestamp (STRING) - Get index value by UTC timestamp (Optional)\n\nIf no query params specified, all available history will be fetched.",
    "api_index_wkn_for_finanzoo_api_fundamentals": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nwkn = search shareuid with WKN",
    "api_pricetobook_for_finanzoo_api_fundamentals": "contains the price-book ratio (P / B ratio) for each past trading day",
    "api_pricetoearning_for_finanzoo_api_fundamentals": "Contains the price-earnings ratio (P / E ratio) for each past trading day\n\nAPI_Pricetoearning\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
    "convert_for_currency_conversion_and_exchange_rates": "In addition to providing converstion rates, our API provides a dedicated endpoint to easily do conversion on a specific amount of the currency.",
    "see_about_the_prices_of_the_cryptos_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top crypto currencies including names and prices even rank and more!",
    "index_for_global_market_indices_data": "Get an Index constituents",
    "fetchdividends_for_latest_mutual_fund_nav": "Fetch Dividends data",
    "fetchschemecategoriesbyschemetype_for_latest_mutual_fund_nav": "Fetch Scheme Categories By Scheme Type",
    "fetchallschemetypes_for_latest_mutual_fund_nav": "Fetch All Scheme Types",
    "get_all_social_spikes_by_coin_ticker_for_crowdsense": "Retrieve social media spikes in the last 24 hours by Coin Ticker. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings all spikes including:\n\n- Predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n- Other spikes in social media metrics that did not go through another layer of market moving prediction. These include spikes that are colored as yellow, gray, and black.\n\n**Input:**\n\n- Coin Ticker (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC",
    "get_top_coins_by_followers_for_crowdsense": "Retrieve real time top 10 coins by Followers\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers value\n\n**Definitions:**\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n- All results are in real time",
    "get_all_social_spikes_by_coin_name_for_crowdsense": "Retrieve social media spikes in the last 24 hours by Coin Name. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings all spikes including:\n\n- Predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n- Other spikes in social media metrics that did not go through another layer of market moving prediction. These include spikes that are colored as yellow, gray, and black.\n\n**Input:**\n\n- Coin Name (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC",
    "getexchangerate_for_chaingateway_io": "Returns the current Ethereum price in Euro or US Dollar.",
    "clearaddress_for_chaingateway_io": "Sends all available ethereum funds of an address to a specified receiver address.",
    "exportaddress_for_chaingateway_io": "Returns all ethereum addresses created with an account.",
    "market_get_realtime_quotes_for_webull": "Get multiple stock quotes in real time.",
    "stock_get_performance_for_webull": "Get stock fund performance",
    "get_quotes_for_tradier": "",
    "get_a_user_s_orders_for_tradier": "",
    "get_a_user_s_balances_for_tradier": "",
    "symbols_get_factor_grades_deprecated_for_seeking_alpha": "Get factor grades for specific symbol",
    "news_v2_list_for_seeking_alpha": "List news by category",
    "symbols_get_options_for_seeking_alpha": "Get optional prices",
    "now_for_date_calculator": "Computes and returns local time zone taking into account Daylight Saving Time (DST).",
    "edate_for_date_calculator": "Computes and returns a date on the same day of the month in the future or past. This resource behave exactly as Excel EDATE function.",
    "eomonth_for_date_calculator": "Computes and returns a date on the last day of the month in the future or past. This resource behave exactly as Excel EOMONTH function.",
    "single_eu_vat_rate_for_vatlayer": "Using the \"rate\" endpoint, you may request the API to return standard and reduced VAT rates for a EU member state you specify. Important: Only one of the following three parameters for defining the country is allowed.",
    "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas": "API Ninjas Mortgage Calculator API endpoint. Either **loan_amount** or (**home_value** + **downpayment**) parameters must be set.",
    "mortgage_rate_30_year_fixed_for_u_s_economic_indicators": "Get monthly 30-Year fixed mortgage rates.",
    "get_52_week_low_by_fundamental_with_respecto_to_country_for_global_stock_market_api_data": "Get 52 week low by Fundamental with respecto to Country",
    "active_stocks_by_price_with_respecto_to_country_for_global_stock_market_api_data": "Active Stocks by price with respecto to Country",
    "get_52_week_high_by_price_with_respecto_to_country_for_global_stock_market_api_data": "Get 52 Week High by price with respecto to Country",
    "search_for_real_time_finance_data": "Find stocks, indices, mutual funds, futures, currency / forex / crypto using a free-form query or symbol as seen on Google Finance - https://www.google.com/finance.",
    "market_trends_for_real_time_finance_data": "Get the latest market trends and relevant news. Supported trends: **Most Active**, **Gainers**, **Losers**, **Crypto**, **Currencies** and **Climate Leaders**.",
    "stock_company_overview_for_real_time_finance_data": "Get stock / public company details. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*. Returns company details for the *stock* type.",
    "time_zone_converter_for_date_calculator": "Converts time from time zone to another taking into account Daylight Saving Time (DST) and accepts present, past, or future dates.",
    "sdate_for_date_calculator": "Shifts  a date or a datetime in the future or past.",
    "articles_list_for_ms_finance": "List latest articles",
    "stock_v3_get_profile_for_ms_finance": "Mapped to Company Profile section in Quote tab",
    "cash_flow_statement_for_finshorts": "Finshorts provide companies cash flow statement in realtime",
    "historical_prices_for_finshorts": "Finshorts provide companies historical prices in realtime",
    "company_info_for_finshorts": "Finshorts provide company Info in realtime",
    "get_coin_issuance_blockchains_for_coinranking": "Get the issuance blockchains on which the coin is issued.\nThis endpoint requires the **ultra** plan or higher.",
    "stock_v2_get_splits_for_morning_star": "Mapped to Dividends tab",
    "type_performance_get_returns_for_morning_star": "Get returns in the Performance  tab related to an ETF or FUND",
    "type_portfolio_get_asset_allocation_for_morning_star": "Get asset allocation as displayed in the Portfolio tab",
    "powerball_for_ca_lottery": "Powerball History",
    "mega_millions_for_ca_lottery": "Mega Millions History",
    "super_lotto_plus_recent_for_ca_lottery": "Most recent draw for Super Lotto Plus",
    "v1getfundlatestprice_for_funds": "Get fund latest price",
    "v1getfundhistoricalprices_for_funds": "Get fund's historical prices",
    "api_pricetosales_for_finanzoo_api_fundamentals": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
    "api_index_isin_for_finanzoo_api_fundamentals": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nisin = search shareuid with ISIN",
    "streams_direct_for_stocktwits": "Returns the most recent 30 direct messages sent to the authenticating user. These area all private messages sent and recieved.",
    "messages_like_for_stocktwits": "Like a message on StockTwits as the authenticating user.",
    "messages_show_for_stocktwits": "This shows the specified message details. This is used in a stand alone display. View the display guidelines",
    "getarchivereport_for_id_verify": " ",
    "get_company_market_performance_for_stoxx": "Retrieve the overall current market performance\n\n```\n{\n\"datetimeUpdated\":1661544000005\n\"performance\":-0.01535\n\"sector\":\"Utilities\"\n\"symbol\":\"XLU\"\n}\n```",
    "get_company_information_for_stoxx": "Provides detailed information for a given company:\n- Symbol\n- Company Name\n- Industry\n- Website\n- Relevant Tags\n- General Sector\n- Country\n- Zip Code",
    "get_company_competition_for_stoxx": "Retrieve a company's known competitors",
    "quotes_get_details_for_fidelity_investments": "Get quote information",
    "calculate_eu_vat_compliant_price_for_vatlayer": "Use the \"price\" endpoint, you may request the API to calculate a country-specific VAT compliant price on your behalf. Important: There are 3 options to define a country - choose only one!",
    "converter_for_currency_exchange_fx": "This endpoint will return the converted amount in a specified currency.",
    "get_token_balance_for_pancakeswap_api_freemium": "An endpoint to get Token Balance",
    "get_token_price_for_pancakeswap_api_freemium": "An endpoint to get Token Price",
    "get_nft_collections_for_pancakeswap_api_freemium": "An Endpoint to get NFT Collections on Pancakeswap",
    "ideas_get_replies_for_trading_view": "Get replies relating to an ideal post and comment",
    "news_list_for_trading_view": "List latest news with options and filters",
    "getclimatescorebygps_for_rankiteo_climate_risk_assessment": "Get climate score for a specific location mapped to some industries/disasters with a given gps position.",
    "getclimatescorebyaddress_for_rankiteo_climate_risk_assessment": "Get climate score for a specific location mapped to some industries/disasters with a given address.",
    "united_states_covid_19_new_death_count_for_covid_19_economic_impact": "Get United States COVID-19 new death count daily.",
    "united_states_transit_stations_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent inside transit stations.",
    "united_states_small_businesses_open_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change of small businesses open seasonally adjusted relative to January 4 - 31, 2020.",
    "calculate_repayment_schedule_for_loan_amortization_calculator": "This endpoint calculates repayment schedule.",
    "get_social_timestamps_4h_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social Activity is grouped by 4 hour intervals",
    "get_social_stats_influencers_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a stock or cryptocurrency's sentiment statistics from posts generated on Twitter or Stocktwits by user post category (influencers,spam,bot).",
    "get_social_timestamps_1d_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped by 1 day intervals",
    "check_for_bank_card_bin_num_check": " ",
    "forex_signal_for_quotient": "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%].",
    "equity_signal_for_quotient": "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%].",
    "equity_financial_for_quotient": "Return financial data (revenue, earnings, ratios, etc) for a given security.",
    "api_pricetocashflow_for_finanzoo_api_fundamentals": "Contains the price-cash-flow ratio (P / C ratio) for each past trading day\n\nAPI_Pricetocashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
    "news_v2_list_by_symbol_for_cnbc": "List latest news by symbol name",
    "symbols_get_summary_for_cnbc": "Get summary information of stock quote, index, exchange, etc...",
    "symbols_get_chart_deprecating_for_cnbc": "Get raw data to draw price line chart of stock quote, index, exchange, etc...",
    "united_states_scheduled_flights_growth_for_global_flight_data": "Get weekly United States scheduled departing flights growth.",
    "australia_scheduled_flights_level_for_global_flight_data": "Get weekly Australia scheduled departing flights level.",
    "get_intervals_for_tradingview_ta_api_technical_analysis_": "Get valid intervals.",
    "get_symbols_from_exchange_for_tradingview_ta_api_technical_analysis_": "Get symbol list from exchange.",
    "datedif_for_date_calculator": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).",
    "get_the_balance_of_a_litecoin_address_for_litecoin_wallet": "The API returns the balance only if the address has up to 50,000 UTXOs (Unspent Transaction Outputs). For an address with more than 50,000 UTXOs, the API returns an error with the 403 response code.",
    "get_financial_time_series_daily_for_synthetic_financial_data": "Returns synthetic financial time series (Date, Price Return) for the specified symbol. \n\nParameters:\nasset_class = [equity, bond, commodity, mixed]\nsymbol = [0000...0999] \nsize = [compact, full]  (size = compact returns the most recent 252 data points)",
    "cryptocurrency_index_ticker_price_for_bitcoinaverage_crypto_ticker_and_historical_price": "Get the latest Ticker price for thousands of cryptocurrencies.\nOur Ticker data includes the latest price, bid, ask, 24h volume, moving average and price changes.",
    "list_of_all_supported_crypto_markets_for_bitcoinaverage_crypto_ticker_and_historical_price": "Lists all supported cryptocurrency markets by the BitcoinAverage API.\nNew cryptos or tokens are added on a monthly basis.",
    "history_price_at_a_point_in_time_for_bitcoinaverage_crypto_ticker_and_historical_price": "Fetch the exact price of a cryptocurrency at a specific timestamp in the past.",
    "currency_list_for_currency_ex": "List of available currency in JSON format.",
    "get_exchange_rate_for_currency_ex": "Return excahnge rate of two currency codes.",
    "market_most_actives_for_yahoo_finance_v2": "Stocks ordered in descending order by intraday trade volume.",
    "market_small_cap_gainers_for_yahoo_finance_v2": "Small Caps with a 1 day price change of 5.0% or more.",
    "stock_earnings_trend_for_yahoo_finance_v2": "Get earnings trend earnings history information for a particular stock",
    "news_list_by_symbol_deprecated_for_cnbc": "List latest news by symbol name",
    "news_v2_list_for_cnbc": "List news by category",
    "v2_auto_complete_for_cnbc": "Get auto suggestion by familiar terms or phrase",
    "get_exchange_markets_for_coinranking": "Find markets on a specific exchange.\nThis endpoint requires the **ultra** plan or higher.",
    "get_exchange_coins_for_coinranking": "Find coins listed on a specific exchange.\nThis endpoint requires the **ultra** plan or higher.",
    "streams_symbol_for_stocktwits": "Returns the most recent 30 messages for the specified symbol.",
    "bin_for_credit_card_bin_checker_validator": "User's query (BIN) entry.",
    "get_trending_stocks_by_fundamental_with_respecto_to_country_for_global_stock_market_api_data": "Get Trending Stocks by Fundamental with respecto to Country",
    "get_52_week_high_by_technical_with_respecto_to_country_for_global_stock_market_api_data": "Get 52 Week High by Technical with respecto to Country",
    "get_trending_stocks_by_price_with_respecto_to_country_for_global_stock_market_api_data": "Get Trending Stocks by price with respecto to Country",
    "stock_earnings_history_stock_for_mboum_finance": "Get earnings history information for a particular stock",
    "stock_key_statistics_stock_for_mboum_finance": "Get stock key statistics data.",
    "stock_sec_filings_stock_for_mboum_finance": "Get stock SEC filings.",
    "api_roa_for_finanzoo_api_fundamentals": "Contains the profitability (ROA ratio) for the financial year.\n\nAPI_Roa\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
    "api_dividend_for_finanzoo_api_fundamentals": "Contains the annual dividends (split-adjusted without special dividend)\n\nAPI_Dividend\nSyntax:\n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
    "api_index_name_for_finanzoo_api_fundamentals": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name",
    "search_trader_for_binance_futures_leaderboard": "Search for traders by nickname",
    "get_leaderboard_rank_for_binance_futures_leaderboard": "Get the leaderboard rank",
    "market_trends_for_joj_finance": "Explore market trends",
    "ticker_for_joj_finance": "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more",
    "search_for_joj_finance": "Search for indexes, stocks, ETFs, cryptocurrencies, currencies and more",
    "get_rsi_by_pairs_for_binance_rsi_indicator": "Get RSI indicator for all trading pairs on Binance.com",
    "api_info_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAll info about API's of this project are available at `/api/info`     Free of charge.\nFor example, if you access  `/api/info/get_forecast`  -  you will get information about  `/api/get_forecast`\n\nThe `ENDPOINT_NAME` can be one of these:\n`timezones` , `countries` , `languages` , `currencies` , `author`\n..and it provides response with data, for example all available countries.\n\nAlso  `ENDPOINT_NAME` can be one of these:\n`get_forecast` , `get_all_banks_in_country` , `get_best_rates` , `get_all_currencies_values_for_1bank` ,  `faq`\n..but  these requests provides only information about selected endoint.\n\nTo get all available `ENDPOINT_NAME` , go to `/api/info/all`",
    "list_all_platforms_for_is_this_coin_a_scam": "Get a list of platforms. You can search slug, name and symbol. You can perform wildcard searches",
    "fake_credit_card_number_generator_for_fake_credit_card_number_generator_api": "Pass in one of the following card networks as a parameter:\n\n- amex\n- diners\n- discover\n- jcb\n- mastercard\n- visa",
    "1_day_historical_daily_prices_for_stock_prices": "1 Day historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "10_year_historical_monthly_prices_for_stock_prices": "10 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included.",
    "options_chain_for_fancyoptions": "This endpoint returns the an options chain for a given ticker and expiration date.\n\nDate format.  YYYY-MM-DD",
    "s_p_500_verticals_for_fancyoptions": "This endpoint returns the call and put spreads from the S&P 500 with the highest credits. The verticals that are returned have a 70% chance of being out of the money at time of expirations. This endpoint is updated hourly.",
    "options_vertical_for_fancyoptions": "This endpoint returns verticals for an individual ticker. The verticals that are returned have a 70% chance of being out of the money at time of expirations.",
    "market_get_ipo_center_for_webull": "Get IPO center information of specific region",
    "stock_get_asset_allocation_for_webull": "Get stock fund asset allocation",
    "get_exchanges_for_coinlore_cryptocurrency": "Get all exchanges",
    "get_ticker_for_specific_coin_for_coinlore_cryptocurrency": "Get ticker for specific coin",
    "stock_get_annual_avg_div_rate_for_yh_finance_v2": "return annual average dividend rate",
    "stock_get_stock_quote_type_data_for_yh_finance_v2": "return stock quota type data",
    "stock_get_total_revenue_for_yh_finance_v2": "return total revenue",
    "supported_symbols_for_metals_prices_rates_api": "The API comes with a constantly updated endpoint returning all available symbols.",
    "carat_for_metals_prices_rates_api": "Using the API karat endpoint, you will be able to retrieve latest information about gold rates per karat.",
    "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.",
    "get_company_historical_data_for_stoxx": "Provides access to daily historical company pricing data over a given period of months\n\nA sample output for each day:\n`{\n\"changePercent\":0\n\"close\":115.1465\n\"date\":\"2022-05-27\"\n\"high\":115.187\n\"low\":112.628\n\"open\":113.55\n\"symbol\":\"AMZN\"\n\"updated\":1654726813000\n\"volume\":93660160\n}`",
    "market_indicator_for_crypto_market_data_from_token_metrics": "Access Market Indicator powered by Token Metrics",
    "quantmetrics_tier_1_for_crypto_market_data_from_token_metrics": "Get quant metrics for tokens powered by Token Metrics",
    "coins_list_pairs_for_investing_cryptocurrency_markets": "List available crypto pairs",
    "currencies_list_for_investing_cryptocurrency_markets": "List all available currencies",
    "5_history_for_stockyapiexchange": "This feature provides historical data for a stock, including its open, high, low, close, and trading volume for each day. Users can access data for different time periods, such as daily, weekly, monthly, or yearly.",
    "spac_price_targets_for_spachero_spac_database": "Get latest SPAC price targets from analysts, filter by SPAC symbol.",
    "spac_calendar_for_spachero_spac_database": "Get important SPAC dates such as merger meetings dates, warrant redemption deadlines, definitive agreement dates, unit split (estimate), SPAC deadline (estimate).\n\nAvailable options: merger, split, deadline, redemption",
    "credit_score_by_ticker_for_business_credit_scores": "Provide a ticker and receive a score: 1- 10. \n1 is the best and 10 is the worst.",
    "credit_score_by_name_city_and_or_state_for_business_credit_scores": "Look up credit scores for private companies that do not have a ticker symbol. Almost 8 million companies available. Try searching by city and state first, then look for a name match.",
    "distinct_tickers_for_business_credit_scores": "Get list of tickers for which credit scores exist.",
    "market_get_chart_for_bb_finance": "Get related data for drawing chart",
    "market_get_full_for_bb_finance": "Get all field and information about tickers",
    "getnfts_metadata_for_nfts_by_address": "Get NFTs metadata, attributes and enclosed media.",
    "getnfts_byaddress_for_nfts_by_address": "Gets all NFTs currently owned by a given address. Unlimited, results display in 100s.",
    "get_account_balance_for_coinbase": "Get the user's account balance in BTC.",
    "show_individual_subscription_for_coinbase": "Show an individual customer subscription",
    "show_individual_recurring_payment_for_coinbase": "Show an individual recurring payment",
    "historical_dividends_for_finshorts": "Finshorts provide companies historical dividends data in realtime",
    "get_company_quote_price_data_for_stoxx": "Retrieve updated quote and pricing data for a given company. This endpoint provides you with:\n\n- Symbol\n- Company Name\n- Exchange\n- High\n- Low\n- Close\n- PE\n- Volume\n- Market Cap\n- Datetime",
    "get_list_of_publicly_traded_companies_for_stoxx": "Provides a list of all publicly traded companies",
    "islamiblockchain_islamicoin_main_cs_txt_for_islamicoin": "ISLAMICOIN Circulation Supply",
    "stochastic_for_qvantana": "Stochastic indicator",
    "wallets_transfers_by_chain_for_defi_watch": "Get wallet transfers by chain",
    "wallets_profile_by_chain_for_defi_watch": "Get wallet profile by chain",
    "wallets_assets_by_chain_for_defi_watch": "Get all assets on wallet by chain",
    "change_for_global_market_indices_data": "Get the symbol change over the period of time(1DAY, 7DAYS, 1MONTH, 3MONTHS, 6MONTHS, 1YEAR )",
    "top5_for_global_market_indices_data": "Get best/worst performers for a symbol over a period",
    "news_list_for_bb_finance": "List news by category",
    "api_roe_for_finanzoo_api_fundamentals": "Contains the equity ratio (ROE ratio) for the financial year.\n\nAPI_Roe\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
    "api_fundamentals_for_finanzoo_api_fundamentals": "contains fundamental data from the annual reports:\n\n- Diluted earnings per share\n- total capital\n- equity\n- net operating cash flow\n- capital expenditure\n- free cash flow\n- Profit loss\n- Shares outstanding\n- Net sales\n\nDetermine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name\nwkn = search shareuid with WKN\nisin = search shareuid with ISIN\ntoken = your Finanzoo token (https://www.finanzoo.de/account/api.html) -> You need a premium account to use.\n\n \n\nExample calls:\n\nhttps://api.finanzoo.de/v1/public/?API_Index&name=ibm&token=YOURTOKEN\nhttps://api.finanzoo.de/v1/public/?API_Index&wkn=851399&token=YOURTOKEN\nhttps://api.finanzoo.de/v1/public/?API_Index&isin=US4592001014&token=YOURTOKEN\n\nExample answer:\n\n{\"shareuid\":\"2\",\"isin\":\"US4592001014 \",\"wkn\":\"851399\",\"currency\":\"USD\",\"shortname\":\"IBM\",\"name\":\"International Business Machines Corp.\",\"country\":\"Vereinigte Staaten von Amerika\",\"indizes\":\"Dow Jones Industrial Average,S&P 500\",\"sector\":\"Technology\",\"lastbalanceupdate\":\"2020-01-26\"}\n\nShareuid Excel Table\nFind the shareuid for your query.\n[https://www.finanzoo.de/en/fundamental-api.html](url)\nis required for the API queries",
    "transaction_for_binance_smart_chain": "Get full data from a specific transaction on the Binance Smart Chain!",
    "current_block_number_for_binance_smart_chain": "Get the current block number of the Binance Smart Chain!",
    "simple_summary_of_the_stocks_for_yh_finance_complete": "This endpoint returns a Simple Summary of the Stocks",
    "stock_price_for_yh_finance_complete": "This endpoint retrieves a price with details for any public stock.",
    "full_stock_price_for_yh_finance_complete": "This endpoint returns a stock price.",
    "market_get_sectors_for_fidelity_investments": "Get sectors performance",
    "convert_for_exchanger_currency_rates_provider": "This API with a separate currency conversion endpoint, which can be used to convert any amount from one currency to another. In order to convert currencies, please use the API's convert endpoint, append the from and to parameters and set them to your preferred base and target currency codes.",
    "get_list_of_currency_exchanges_copy_for_currencygenie": "Performs GET request for getting list of currencies",
    "get_list_of_currency_exchanges_copy_copy_for_currencygenie": "Performs GET request for getting list of currencies",
    "get_list_of_currency_exchanges_for_currencygenie": "Performs GET request for getting list of currencies",
    "most_active_stocks_by_technical_with_respecto_to_country_for_global_stock_market_api_data": "Most Active Stocks by Technical with respecto to Country",
    "most_active_stocks_by_fundamental_with_respecto_to_country_for_global_stock_market_api_data": "Most Active Stocks by Fundamental with respecto to Country",
    "symbols_get_peers_for_cnbc": "Get peers relating to stock quote, index, exchange, etc...",
    "get_meta_data_for_cnbc": "Get meta data that supports for other endpoints",
    "get_predictive_spikes_by_coin_ticker_for_crowdsense": "Retrieve predictive social media spikes in the last 24 hours by Coin Ticker. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n\n**Input:**\n\n- Coin Ticker (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC\n- Coins in this endpoint are 3 Billion market cap and more",
    "get_recent_updates_for_crowdsense": "Get Recent Updates",
    "get_coin_price_difference_for_crypto_arbitrage_trading": "returns the object with all the required data",
    "get_country_info_for_currencies_and_countries": "You can get country info by using countryName or Iso Name (DE).\nExample :\n\n```\n                       params: {param: 'iso', value: 'DE'}\n                       params: {param: 'countryName', value: 'Germany'}\n```\n\nThese two is gets the same result which is the information of germany. \nExample response:\n\n```\n{\"iso\":\"DE\"\n\"currency\":\"EUR\"\n\"symbol\":\"\u20ac\"\n\"countryName\":\"Germany\"\n\"dateFormat\":\"dd.MM.yyyy\"}\n```\n\nExample2:\n\n```\n                       params: {param: 'currency', value: 'USD'}\n                       params: {param: 'symbol', value: '$'}\n```\n\nYou will get a response like this below. It contains all countries that are using  defined currency. \n\nExample2 Response:\n\n```\n  {\n    iso: 'US',\n    currency: 'USD',\n    symbol: '$',\n    countryName: 'United States',\n    dateFormat: 'M/d/yyyy'\n  },\n  . . .\n```",
    "crypto_convert_for_currencies_and_countries": "You can convert crypto currencies.",
    "convert_get_symbol_for_currencies_and_countries": "It is the same thing with the convert endpoint. But this one can give you the symbol of the converted value.",
    "get_platform_by_slug_for_is_this_coin_a_scam": "Get a specific platform by slug",
    "get_a_list_of_highest_community_rated_profiles_for_is_this_coin_a_scam": "Get a list of the most highly community rated crypto projects on isthiscoinascam.com over the past 7 days. Ordered by highest rating first.",
    "get_profile_by_slug_for_is_this_coin_a_scam": "Get a specific coin profile by slug",
    "currency_rates_for_1_bank_historical_data_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\n**S**o it does - get exchange rates for selected bank on chosen date. Timezone is important!!!\n\nExample 1 - get currency rates provided by ECB(European Central Bank) in Berlin:\n`/api/get_all_currencies_values_for_1bank/?country_code=eu&date_yyyy_mm_dd_from=2021-11-15&date_yyyy_mm_dd_till=2021-11-15&bank_id=15&tz=Europe/Berlin`\n\nExample 2, MAIB (private Moldavian bank): `/api/get_all_currencies_values_for_1bank/?country_code=md&date_yyyy_mm_dd_from=2021-11-12&date_yyyy_mm_dd_till=2021-11-12&bank_id=1&tz=Europe/Chisinau`\n\nPrameters and where to get info:\n`country_code=`   -->> `/api/info/countries`  -here you can get all available country_code's and their's timezones.\n`bank_id=`  -->>  `/api/get_all_banks_in_country?country_code=bitcoin` or `/api/get_all_banks_in_country?country_code=eu`\n`date_yyyy_mm_dd_till=` and `date_yyyy_mm_dd_from=`  -->>  must be equal",
    "get_sentiment_trending_bullish_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for top 50 trending bullish stocks/crypto symbols on Twitter/StockTwits.",
    "get_the_calendar_for_alpaca_trading": "Returns the market calendar",
    "get_coin_markets_for_coinranking": "Find markets on different exchanges that trade a specific coin.\nThis endpoint requires the **ultra** plan or higher.",
    "stock_get_stock_profile_data_for_yh_finance_v2": "return stock profile data",
    "stock_get_daily_low_for_yh_finance_v2": "return daily low",
    "stock_get_price_to_sales_for_yh_finance_v2": "return price to sales",
    "streams_friends_for_stocktwits": "Returns the most recent 30 messages posted to the authenticating user's people stream of the users they follow.",
    "block_for_binance_smart_chain": "Get full data from a specific block on the Binance Smart Chain!",
    "list_customer_s_wallets_for_walletapi_cloud": "Obtain a list of wallets owned by a customer.",
    "list_transactions_for_walletapi_cloud": "Retrieve a pageable list of transactions for a time period.",
    "list_projects_for_walletapi_cloud": "Obtain a list of your projects.",
    "crypto_exchange_ticker_price_for_bitcoinaverage_crypto_ticker_and_historical_price": "Get the latest price data for specific cryptocurrency exchange.",
    "prime_loan_rates_for_u_s_economic_indicators": "Get daily bank prime loan interest rates.",
    "unemployment_rate_not_adjusted_for_u_s_economic_indicators": "Get monthly not seasonally adjusted unemployment rate.",
    "get_open_positions_for_alpaca_trading": "Retrieves a list of the account's open positions.",
    "indexes_signal_for_quotient": "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%].",
    "crypto_daily_for_quotient": "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "forex_daily_for_quotient": "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "bridges_for_defi_watch": "Get access to verify data about cross-chain bridges by integrating Bridges API from DeFi Watch into the code. This solution offers links to bridges as well as information about fees and duration. The API code is user-friendly, clear and accessible. \n\n[![](https://live.staticflickr.com/65535/52164830761_c7a2292634_b.jpg)](https://defi.watch/bridges)",
    "wallets_balance_by_chain_for_defi_watch": "Get wallet balance in USD by chain",
    "search_advanced_for_seeking_alpha_finance": "Get all search result (people,symbols,pages) by query. Advanced search",
    "article_trending_for_seeking_alpha_finance": "Get list of the trending article",
    "symbols_news_for_seeking_alpha_finance": "Get a list of news for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/news",
    "market_list_indices_for_cnbc": "List all available indices",
    "symbols_get_fundamentals_for_cnbc": "Get fundamental information of stock quote, index, exchange, etc...",
    "news_list_trending_deprecated_for_cnbc": "List trending news",
    "v1_list_banks_for_hryvna_today": "",
    "v1_list_bank_types_for_hryvna_today": "",
    "v1_convert_for_hryvna_today": "Use this method to convert money",
    "getlargeorders_for_ethereum_large_buy_sell_orders": "get large orders of Eth tokens",
    "getassets_for_crypto_and_forex_rates": "return list of supported assets",
    "stock_v2_get_risk_rating_breakdown_for_morning_star": "Get risk rating breakdown in the Sustainability tab",
    "type_risk_get_risk_return_analysis_for_morning_star": "Get risk return analysis in the Risk tab",
    "type_price_get_taxes_for_morning_star": "Get taxes as displayed in the Price tab",
    "auto_complete_deprecated_for_trading_view": "Get suggestion by term or phrase",
    "calendars_get_economic_calendar_for_trading_view": "Get economic calendar by specific date range and countries",
    "5_year_historical_daily_prices_for_stock_prices": "5 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "2_year_historical_quarterly_prices_for_stock_prices": "2 Year quarterly historically adjusted Open, High, Low, and Close prices.  Quarterly Volume, Dividend, and Split information is also included.",
    "get_predictive_spikes_by_coin_name_for_crowdsense": "Retrieve predictive social media spikes in the last 24 hours by Coin Name. Results will contain Sentiment, Weighted Sentiment, Mentions and Followers spikes both positive and negative. \n\nThis brings predictive spikes (that went through another machine learning model to predict likelihood of market change within the next 24 hours). These spikes are colored as red and orange.\n\n**Input:**\n\n- Coin Name (Required)\n\n**Output:**\n- EventId\n- EventType\n- Event Time\n- Related coins\n- Event Color\n- Event text\n\n**Definitions:**\n\n- Related coins: Coins mentioned in the post\n- Event type: Determines the type of spike (Sentiment, Weighted sentiment, Mentions or Followers) and the timeframe of the spike (1 hour, 8 hours or 1 day)\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Mentions: Number of posts related to the coin in tracked social media sources.\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n- WeightedSentiment: Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers]\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC\n- Coins in this endpoint are 3 Billion market cap and more",
    "get_daily_influencer_posts_for_crowdsense": "Retrieve news and posts from Top Influencers in social media ordered by date\nThis endpoint contains results from all coins. To search for posts on a specific coins check \"Get Daily Influencer Posts by Coin Name\" or \"Get Daily Influencer Posts by Coin Ticker\"\n\n**Output:**\n\n- EventId \n- EventType\n- Event Time\n- Publisher\n- Source\n- Related coins\n- Event Color\n- Number of followers\n- Event text\n\n**Definitions:** \n\n- Publisher: User name of the publisher of the event in social media\n- Source: Social media where the post was published\n- Related coins: Coins mentioned in the post\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Number of followers:  Influencer\u00b4s number of followers in social media\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC",
    "united_states_retail_and_recreation_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at retail and recreation.",
    "united_states_small_businesses_revenue_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change of small businesses revenue seasonally adjusted relative to January 4 - 31, 2020.",
    "united_states_away_from_home_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent away from home.",
    "v1_rates_today_for_hryvna_today": "Average rates for today",
    "v1_rates_averages_for_hryvna_today": "History of average rates",
    "forex_live_for_quotient": "Return current market price data given the input parameters.",
    "get_signals_for_greenlight": "**Provides BUY/SELL signals and trends for BTC/USDT, ETH/USDT, TRX/USDT 1 hour timeframe.**\n- Types of signals: BUY, SELL, HOLD\n- Types of trends: UP, DOWN, FLAT\n**Use telegram bot for extended functionality**\nAny pair, 6 different timeframes, indicator settings and much more:\nhttps://t.me/crypto_greenlight_bot?start=CEB66C31",
    "daily_4_for_ca_lottery": "Daily 4 History",
    "symbols_get_top_holdings_deprecated_for_seeking_alpha": "Get top holdings of specific symbol",
    "analysis_v2_list_for_seeking_alpha": "List analysis of specific symbol",
    "iex_short_interest_list_for_investors_exchange_iex_trading": "Consolidated market short interest positions in all IEX-listed securities",
    "effective_spread_for_investors_exchange_iex_trading": "Returns an array of effective spread, eligible volume, and price improvement of a stock, by market.",
    "time_series_for_investors_exchange_iex_trading": "Alternate way to access the chart endpoint",
    "indices_for_crypto_market_data_from_token_metrics": "Get indices data powered by Token Metrics",
    "show_individual_order_for_coinbase": "Show an individual merchant order.",
    "get_bitcoin_receive_address_for_coinbase": "Get the user's current bitcoin receive address.",
    "ohlc_for_investors_exchange_iex_trading": "Returns the official open and close for a give symbol.",
    "historical_price_data_for_period_for_bitcoinaverage_crypto_ticker_and_historical_price": "Returns history price for specific symbol for certain period.\nWorks in parallel to the Ticker endpoint where both symbol set and market symbol need to be specified.\nThis endpoint additionally accepts the period query parameter that specifies the resolution of the data.\nPeriod can be: minute, hour or day.",
    "search_master_traders_for_bybit_leaderboard": "Returns MASTER traders that match your search filters.",
    "history_data_since_timestamp_for_bitcoinaverage_crypto_ticker_and_historical_price": "Provides historical data since specific timestamp.\nAccepts the regular symbol set and symbol parameter to specify the crypto market.\nAlso accepts query parameters to specify the timestamp for querying and the resolution of the data.\nThe resolution can be minute, hour or day.\nMinute resolution goes back 24 hours.\nHour resolution can go back to 30 days.\nDay resolution can go back years, for BTC it goes back to 2010.",
    "get_categories_for__demo_project_v3": " ",
    "get_order_for__demo_project_v3": " ",
    "streams_investor_relations_for_stocktwits": "Returns the most recent 30 messages posted by verified Investor Relations customers.",
    "trending_for_cryptocurrency_markets": "Current cryptocurrencies trending today.",
    "yearly_cashflow_statements_for_freedom_finance": "Annual cashflow statements",
    "yearly_balance_sheets_for_freedom_finance": "Annual balance sheet statements",
    "yearly_income_statements_for_freedom_finance": "Annual income statements",
    "quotes_get_chart_for_fidelity_investments": "Get information to draw chart",
    "funcone_for_kiann_options_sabr": "Testing function for the SABR module",
    "local_hist_for_kiann_options_sabr": "This function pulls out the latest 5 time-stamp snapshot of the 3-degree polynomial calibrated parameters, for local-Volatility model across the strike and expiry axis.\nThere are choices of either 'btc' or 'eth'.\n\nThe  parameters can be seen in the header of x^3, x^2*y, x^1 * y^2, etc, ......... and intercept.",
    "sabr_norm_for_kiann_options_sabr": "This is the implementation of the SABR model (z-shift) under the normal volatility mode, with the parameters as follows:\nK_ : strike, fwd_ : forward, shift_ : z-shift, time_ : time-to-expiry, alpha : sabr alpha, beta : sabr beta, rho : sabr rho, volvol : sabr volvol\nmethod_ : internal mode for two modes of calibration. Default of 1\nret_ : set of 0, to return proper json format",
    "news_list_latest_for_schwab": "List latest news",
    "auto_complete_for_schwab": "Get suggestion by word or phase",
    "fetchallmutualfundfamilies_for_latest_mutual_fund_nav": "Fetch All Mutual Fund Families",
    "fetchhistoricalnav_for_latest_mutual_fund_nav": "Fetch Historical NAV",
    "fetchallschemenames_for_latest_mutual_fund_nav": "Fetch All Scheme Names",
    "getportfoliosettlements_for_kalshi_trading_api": "Endpoint for getting the logged-in member's settlements historical track.",
    "getbalance_for_kalshi_trading_api": "Endpoint for getting the balance of the logged-in member.",
    "getfills_for_kalshi_trading_api": "Endpoint for getting all fills for the logged-in member.",
    "companies_balance_sheet_statements_for_financial_modeling_prep": "Returns companies balance sheet statements.",
    "companies_cash_flow_statements_for_financial_modeling_prep": "Returns companies cash flow statements",
    "earning_call_transcript_api_premium_for_financial_modeling_prep": "Analyzing Earnings Conference Call With NLP",
    "kline_candlestick_data_for_crypto_markets": "Kline/Candlestick Data",
    "symbol_price_ticker_for_crypto_markets": "Symbol Price Ticker",
    "24hr_ticker_price_change_statistics_for_crypto_markets": "24hr Ticker Price Change Statistics",
    "income_for_sec_filings": "Returns a company's most recent income statement detailing what they earn for providing their goods and services OR a statement of loss explaining where lost income occurred",
    "manager_holdings_for_sec_filings": "Returns an institutional manager's quarterly portfolio holdings including new, sold and changed positions by comparing current and previous 13F SEC Filings",
    "cash_flows_for_sec_filings": "Returns a company's most recent cash flow statement showing the amount of cash used and generated",
    "politics_news_for_investing_financial_stocks": "get latest politics news",
    "chart_data_deprecated_for_investing_financial_stocks": "get latest chart data by equity pair id  (provided in screener result)",
    "financial_summary_for_investing_financial_stocks": "get  financial summary by pair_id",
    "latest_popular_for_investing_financial_stocks": "get all latest popular articles news",
    "all_equities_list_long_load_for_investing_financial_stocks": "all equities list",
    "chart_for_investing_financial_stocks": "get chart data by any pair id",
    "trades_futures_for_cryptocurrency_financial_data": "Derivatives contracts transactions",
    "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests",
    "trades_for_cryptocurrency_financial_data": "Trades endpoint available upon request",
    "year_fractions_for_date_calculator": "Computes and returns the year fraction for a period time in the specified day count convention.",
    "asset_history_by_id_for_crypto_exchanges": "Get Asset History by ID",
    "asset_markets_by_id_for_crypto_exchanges": "Get Asset Markets by Asset ID",
    "all_exchanges_for_crypto_exchanges": "Get all Exchanges",
    "type_sustainability_get_carbon_metrics_for_ms_finance": "Get carbon metrics in the Sustainability tab",
    "type_performance_get_trailing_returns_for_ms_finance": "Get trailing returns in the Performance tab",
    "type_parent_get_morningstar_rating_for_ms_finance": "Get Morningstar's rating as displayed in the Parent tab",
    "v1_rates_landing_for_hryvna_today": "Notice: this method is temporary return rates for USD and EUR currencies only.",
    "market_get_international_for_fidelity_investments": "Get international markets information",
    "query_mark_price_kline_for_bybit": "Query mark price kline.",
    "order_book_for_bybit": "OrderBook",
    "query_symbol_for_bybit": "Get symbol info.",
    "market_get_futures_for_schwab": "Get future reports about the market\n* There are response images in encoded base 64 string, you need to decode to get the images yourself",
    "market_get_movers_for_schwab": "List recent movers in the market",
    "market_get_volatility_for_schwab": "Get market volatility\n* There are response images in encoded base 64 string, you need to decode to get the images yourself",
    "stock_quote_for_finshorts": "Finshorts provide companies stock quote data in realtime",
    "currency_news_for_real_time_finance_data": "Get the latest news related to a specific currency / forex or crypto.",
    "currency_time_series_for_real_time_finance_data": "Get forex time series for the following periods: **1 day**, **5 days**, **1 month**, **6 months**, **year-to-date**, **1 year**, **5 years** and **all times (max)**.",
    "stock_news_for_real_time_finance_data": "Get the latest news related to a specific stock.  Supports all stock types: *stock*, *index*, *mutual fund* and *futures*.",
    "general_tables_for_investing_financial_stocks": "get stocks general tables",
    "earnings_for_investing_financial_stocks": "get stock earnings by pair_id",
    "historical_data_for_investing_financial_stocks": "get historical data by pair_id",
    "convert_for_exchange_rate": "Currency conversion endpoint, can be used to convert any amount from one currency to another.",
    "historical_for_exchange_rate": "Get historical rates for any day since 1999.",
    "symbols_for_exchange_rate": "Get the all available currencies.",
    "5_year_historical_quarterly_prices_for_stock_prices": "5 Year quarterly historically adjusted Open, High, Low, and Close prices.  Quarterly Volume, Dividend, and Split information is also included.",
    "list_project_s_assets_for_walletapi_cloud": "Obtain a list of assets for a project.",
    "get_customer_details_for_walletapi_cloud": "Call this endpoint to obtain a record for a customer with provided ID.",
    "get_wallet_details_for_walletapi_cloud": "Obtain wallet balance and details.",
    "quote_retrieve_for_palmy_investing_api": "You receive a detail stock quote with time critical data, f.ex. the price or market cap. of AAPL",
    "10q_retrieve_for_palmy_investing_api": "Useful to fetch the latest quarterly dataset for a stock or multiple stocks.",
    "income_statement_retrieve_for_palmy_investing_api": "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s).",
    "get_risk_limit_for_bybit": "Get Risk Limit",
    "public_trading_records_for_bybit": "Public Trading Records",
    "search_leaderboard_for_binance_futures_leaderboard": "Get the list of traders on the leaderboard",
    "stories_detail_for_bb_finance": "Get full story information",
    "market_small_cap_gainers_for_mboum_finance": "Small Caps with a 1-day price change of 5.0% or more.",
    "stock_income_statement_stock_for_mboum_finance": "Get stock income statement data.",
    "market_day_losers_for_mboum_finance": "Stocks ordered in ascending order by price percent change with respect to the previous close.",
    "investor_grades_for_crypto_market_data_from_token_metrics": "Access Investor Grades for tokens",
    "search_symbol_for_quotient": "Lookup for a Symbol or Name.",
    "equity_live_for_quotient": "Return current market price data given the input parameters.",
    "search_for_g_finance": "search",
    "market_trends_for_g_finance": "market-trends",
    "ticker_for_g_finance": "ticker",
    "stock_quotes_for_holistic_finance_stock_data": "Provides real-time stock data of a single or multiple stock companies.",
    "executives_for_holistic_finance_stock_data": "Provides information about the current composition of executives",
    "holder_for_holistic_finance_stock_data": "Provides information about the current holder structure.",
    "stock_v2_get_dividends_for_ms_finance": "Mapped to Dividends tab",
    "stock_v2_get_executive_for_ms_finance": "Mapped to Executive tab",
    "items_for_sec_filings": "Returns the content of each item in an entire 10-K Annual Report",
    "charts_chain_for_defi_data": "Get historical TVL of a chain",
    "bollinger_bands_for_qvantana": "Bollinger Bands indicator",
    "chaikin_money_flow_cmf_for_qvantana": "Chaikin Money Flow (CMF) indicator",
    "ichimoku_cloud_for_qvantana": "Ichimoku Cloud indicator",
    "equity_dividends_for_quotient": "Return dividends history data for a given security.",
    "equity_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "assetbyid_for_bravenewcoin": "Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint.",
    "get_a_user_s_history_for_tradier": "",
    "get_an_account_s_positions_for_tradier": "",
    "get_a_user_s_cost_basis_for_tradier": "",
    "2_stockdetails_for_stockyapiexchange": "Stockdetails: This feature provides detailed information about a specific stock, including its name, ticker symbol, market capitalization, sector, industry, and other key financial metrics such as price-to-earnings ratio (P/E ratio), dividend yield, and earnings per share (EPS)",
    "1_autocomplete_for_stockyapiexchange": "AUTOComplete: This feature allows users to easily search for stocks by providing suggested completions for a ticker symbol or company name as they type. It helps users find the right stock without having to know the exact spelling or symbol.",
    "metrics_ohlcv_pro_for_cryptocurrency_financial_data": "Price and volume metrics for spot markets",
    "metrics_ohlcv_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests",
    "latest_for_exchange_rate": "Get the latest foreign exchange rates.",
    "dividends_calendar_for_investing": "This endpoint provides information about the dividends calendar.",
    "currency_news_for_investing": "This endpoint provides the currency news",
    "get_timeframes_for_stock_cryptocurrency_forex_market_data": "Get list TimeFrames",
    "search_exchange_for_stock_cryptocurrency_forex_market_data": "Search exchanges by query or category",
    "get_price_for_stock_cryptocurrency_forex_market_data": "Get Stock, Cryptocurrency, Forex price by timeframe",
    "options_for_stock_and_options_trading_data_provider": "Stock and Options Data",
    "straddle_for_stock_and_options_trading_data_provider": "Straddle Format",
    "stock_insider_holders_for_yahoo_finance_v2": "Get stock insider holders' information.",
    "options_for_yahoo_finance_v2": "Get option data for stocks, ETFs and indexes.",
    "sectors_movers_list_for_palmy_investing_api": "A list of all sectors& their winners and losers (stocks)",
    "datatables_list_for_palmy_investing_api": "Premium: Interact with your table by querying it with its unique ID. You can list, retrieve, delete, update, create and replace tables on the go.",
    "10q_list_for_palmy_investing_api": "Useful to fetch the latest quarterly dataset for a stock or multiple stocks.",
    "show_future_for_investing_financial_stocks": "get future latest data by href",
    "all_crypto_for_investing_financial_stocks": "get all datatable of crypto",
    "tree_map_for_investing_financial_stocks": "get all stocks tree map by coutnry id",
    "get_coin_price_history_for_coinranking": "Coinranking keeps track of prices on all listed assets. The history endpoint lists prices and their timestamp for the requested time period, useful for making a chart.",
    "futures_expiration_calendar_for_investing": "This endpoint provides information about the futures expiration calendar.",
    "politics_news_for_investing": "This endpoint provides the politic news",
    "get_global_indices_by_performance_for_global_stock_market_api_data": "World financial market to get global Indices with respect to performance",
    "get_52_weel_low_by_performance_with_respecto_to_country_for_global_stock_market_api_data": "Get 52 Weel Low by performance with respecto to Country",
    "tema_for_twelve_data": "Triple Exponential Moving Average(TEMA) smooths out price fluctuations, making it more trend detection and more transparent without the lag.",
    "percent_b_for_twelve_data": "%B Indicator(PERCENT_B) measures the position of an asset price relative to upper and lower Bollinger Bands.",
    "adx_for_twelve_data": "Average Directional Index(ADX) is used to decide if the price trend is strong.",
    "get_company_income_statement_for_finance_data": "Get Company Income Statement",
    "get_company_quarterly_ratios_for_finance_data": "Get Company Ratios Latest Data",
    "coins_get_fullsize_chart_for_investing_cryptocurrency_markets": "Get fullsize chart of specific cryptocurrency",
    "coins_get_markets_for_investing_cryptocurrency_markets": "Get market information of specific cryptocurrency in specified currency",
    "v1_list_currencies_for_hryvna_today": "",
    "v1_rates_banks_for_hryvna_today": "History of average rates from banks",
    "type_portfolio_get_exposure_for_morning_star": "Get exposure as displayed in the Portfolio tab",
    "market_get_commentaries_for_morning_star": "Get latest commentaries in the market",
    "type_portfolio_get_holdings_for_morning_star": "Get holdings as displayed in the Portfolio tab",
    "list_all_profiles_for_is_this_coin_a_scam": "Get a list of profiles. You can search slug, name and symbol",
    "get_a_list_of_most_watched_profiles_for_is_this_coin_a_scam": "Get a list of the most watched 100 crypto projects on isthiscoinascam.com over the past 7 days. Ordered by most most watched first.",
    "get_top_coins_by_mentions_change_for_crowdsense": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions change value\n\n**Definitions:**\n- MentionsChange: Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time",
    "get_recent_news_by_coin_ticker_for_crowdsense": "Get Recent News By Coin Ticker",
    "show_transaction_details_for_coinbase": "Show details for an individual transaction.",
    "get_spot_price_for_coinbase": "Get the spot price of bitcoin.",
    "get_total_buy_price_for_coinbase": "Get the total buy price for some bitcoin amount.",
    "history_prices_for_macrotrends_finance": "This gives you the Date, Open, High, Low, Close, Adj Close, Volume prices of the stock\n\nQUERY PARAMETER: symbol the ticker symbol of the company you want to see.\n\nQUERY PARAMETER: range = ['1y', '5y', 'max']",
    "financial_cash_statement_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
    "financial_income_statement_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
    "get_coins_index_for_coinranking": "List of all coins currently available on coinranking, for indexing purposes.\nThis endpoint requires the **ultra** plan or higher.",
    "get_markets_for_coinranking": "Get a list of markets. Markets are ranked by their volume over the last 24 hours. Use our filters to get a subset of the markets.\nThis endpoint requires the **ultra** plan or higher.",
    "api_v2_transaction_status_for_changenow_crypto_exchange": "This API endpoint returns the status and additional information of a single transaction. Transaction ID is taken from the <a href=\"#3c8edfd0-ae3f-4738-a01c-de3e196bd761\">'Create transaction'</a> endpoint.\n\n**Note:** we also give the opportunity to transfer additional fields in the ['Create transaction'](#3c8edfd0-ae3f-4738-a01c-de3e196bd761) endpoint, which we return in this method. \u0410dditional fields that can be transferred include:\n\n*   userId \u2014 user ID;\n*   payload \u2014 object that can contain up to 5 arbitrary fields up to 64 characters long;\n    \n\nIf you would like to enable these fields, please contact us at [api@changenow.io](mailto:api@changenow.io) with the subject line \"Special partner fields\".\n\n<h3>Successful response:</h3><p>The response contains an object with transaction information.</p><p>Fields in the response vary depending on the status and a type of the transaction.</p><h5>Successful response fields</h5><table><tbody><tr><td><b>Name</b></td><td><b>Type</b></td><td><b>Description</b></td></tr><tr><td><i><b>id</b></i></td><td><i>String</i></td><td>Transaction ID</td></tr><tr><td><i><b>status</b></i></td><td><i>String</i></td><td>Transaction status:<br>new,<br>waiting,<br>confirming,<br>exchanging,<br>sending,<br>finished,<br>failed,<br>refunded,<br>verifying<br></td></tr><tr><td><i><b>actionsAvailable</b></i></td><td><i>Boolean</i></td><td>Indicates if an exchange can be pushed or refunded using Public push &amp; refund endpoints. <a href=\"https://documenter.getpostman.com/view/8180765/TzJoFLtG#acf2515b-99c7-44bd-935c-dc42693b8026\">Read more</a></td></tr><tr><td><i><b>fromCurrency</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to exchange</td></tr><tr><td><i><b>fromNetwork</b></i></td><td><i>String</i></td><td>Network of the currency you want to exchange</td></tr><tr><td><i><b>toCurrency</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to receive</td></tr><tr><td><i><b>toNetwork</b></i></td><td><i>String</i></td><td>Network of the currency you want to receive</td></tr><tr><td><i><b>expectedAmountFrom</b></i></td><td><i>Number|null</i></td><td>The amount you want to send</td></tr><tr><td><i><b>expectedAmountTo</b></i></td><td><i>Number|null</i></td><td>Estimated value that you will get based on the field <i>expectedAmountFrom</i>.</td></tr><tr><td><i><b>amountFrom</b></i></td><td><i>Number|null</i></td><td>Exchange amount of fromCurrency</td></tr><tr><td><i><b>amountTo</b></i></td><td><i>Number|null</i></td><td>Exchange amount of toCurrency</td></tr><tr><td><i><b>payinAddress</b></i></td><td><i>String</i></td><td>We generate it when creating a transaction</td></tr><tr><td><i><b>payoutAddress</b></i></td><td><i>String</i></td><td>The wallet address that will recieve the exchanged funds</td></tr><tr><td><i><b>payinExtraId</b></i></td><td><i>String|null</i></td><td>We generate it when creating a transaction</td></tr><tr><td><i><b>payoutExtraId</b></i></td><td><i>String|null</i></td><td>Extra ID that you send when creating a transaction</td></tr><tr><td><i><b>refundAddress</b></i></td><td><i>String|null</i></td><td>Refund address (if you specified it)</td></tr><tr><td><i><b>refundExtraId</b></i></td><td><i>String|null</i></td><td>ExtraId for refund (if you specified it)</td></tr><tr><td><i><b>createdAt</b></i></td><td><i>String</i></td><td>Transaction creation date and time</td></tr><tr><td><i><b>updatedAt</b></i></td><td><i>String</i></td><td>Date and time of the last transaction update (e.g. status update)</td></tr><tr><td><i><b>depositReceivedAt</b></i></td><td><i>String|null</i></td><td>Deposit receiving date and time</td></tr><tr><td><i><b>payinHash</b></i></td><td><i>String|null</i></td><td>Transaction hash in the blockchain of the currency which you specified in the fromCurrency field that you send when creating the transaction</td></tr><tr><td><i><b>payoutHash</b></i></td><td><i>String|null</i></td><td>Transaction hash in the blockchain of the currency which you specified in the toCurrency field. We generate it when creating a transaction</td></tr><tr><td><i><b>fromLegacyTicker</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to exchange in an old format as it is specified in a response from <a href=\"#a44b3f19-3e57-4f39-9822-e2ca3cf1d566\">Currency info API-v1 endpoint</a></td></tr><tr><td><i><b>toLegacyTicker</b></i></td><td><i>String</i></td><td>Ticker of the currency you want to receive in an old format as it is specified in a response from <a href=\"#a44b3f19-3e57-4f39-9822-e2ca3cf1d566\">Currency info API-v1 endpoint</a></td></tr></tbody></table><p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p><h3>Request Parameters:</h3>",
    "api_v2_exchange_range_for_changenow_crypto_exchange": "The API endpoint returns minimal payment amount and maximum payment amount required to make an exchange. If you try to exchange less than minimum or more than maximum, the transaction will most likely fail. Any pair of assets has minimum amount and some of pairs have maximum amount.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>fromNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>toNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>flow</i></b></td>\n        <td><i>String</i></td>\n        <td>Type of exchange flow. Enum: [\"standard\", \"fixed-rate\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>minAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Minimal payment amount</td>\n    </tr>\n    <tr>\n        <td><b><i>maxAmount</i></b></td>\n        <td><i>Number|null</i></td>\n        <td>Maximum payment amount. Could be null.</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "exchange_range_fixed_rate_for_changenow_crypto_exchange": "<b>New!</b>\n\nThe API endpoint returns minimal payment amount and maximum payment amount required to make an exchange. If you try to exchange less than minimum or more than maximum, the transaction will most likely fail. Any pair of assets has minimum amount and some of pairs have maximum amount.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>minAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Minimal payment amount</td>\n    </tr>\n    <tr>\n        <td><b><i>maxAmount</i></b></td>\n        <td><i>Number|null</i></td>\n        <td>Maximum payment amount. Could be null.</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "company_income_statement_for_real_time_finance_data": "Get public company's **quarterly** or **annual** income statement. Supports the *stock* type only.",
    "rdates_for_date_calculator": "Computes and returns recurring dates based on very flexible recurrence rules as defined and specified in the [iCalendar RFC 5545](https://tools.ietf.org/html/rfc5545 \"ICalendar\"). It's possible to specify more than one recurrence rule.",
    "income_statement_for_investing_financial_stocks": "get income statement  by pair id for some stocks \nnot all",
    "insider_trades_for_mboum_finance": "Latest insider trading activities from CEO, Directors, Chief Executive Officer, 10% Owner, etc...",
    "market_most_actives_for_mboum_finance": "Stocks are ordered in descending order by intraday trade volume.",
    "stock_history_stock_interval_for_mboum_finance": "Historic data for stocks, ETFs, mutuals funds, etc...",
    "api_v2_estimated_exchange_amount_for_changenow_crypto_exchange": "This API endpoint returns estimated exchange amount for the exchange and some additional fields. Accepts to and from currencies, currencies' networks, exchange flow, and RateID.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>fromNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>toNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>flow</i></b></td>\n        <td><i>String</i></td>\n        <td>Type of exchange flow. Enum: [\"standard\", \"fixed-rate\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>type</i></b></td>\n        <td><i>String</i></td>\n        <td>Direction of exchange flow. Use \"direct\" value to set amount for currencyFrom and get amount of currencyTo. Use \"reverse\" value to set amount for currencyTo and get amount of currencyFrom. Enum: [\"direct\", \"reverse\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>rateId</i></b></td>\n        <td><i>String || null</i></td>\n        <td>RateId is needed for fixed-rate flow. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Current estimated amount would be valid until time in field \"validUntil\"</td>\n    </tr>\n    <tr>\n        <td><b><i>validUntil</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Date and time before estimated amount would be freezed in case of using rateId. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Estimated amount would be valid until this date and time</td>\n    </tr>\n    <tr>\n        <td><b><i>transactionSpeedForecast</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Dash-separated min and max estimated time in minutes</td>\n    </tr>\n    <tr>\n        <td><b><i>warningMessage</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Some warnings like warnings that transactions on this network take longer or that the currency has moved to another network</td>\n    </tr>\n    <tr>\n        <td><b><i>fromAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of fromCurrency (in case when type=reverse it is an estimated value)</td>\n    </tr>\n    <tr>\n        <td><b><i>toAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of toCurrency (in case when type=direct it is an estimated value)</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "list_of_available_currencies_for_a_specific_currency_for_changenow_crypto_exchange": "This API endpoint returns the array of markets available for the specified currency be default. The availability of a particular pair is determined by the 'isAvailable' field. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an array of objects with currencies information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>featured</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is popular</td>\n    </tr>\n    <tr>\n        <td><b><i>isStable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is stable</td>\n    </tr>\n    <tr>\n        <td><b><i>supportsFixedRate</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available on a fixed-rate flow</td>\n    </tr>\n    <tr>\n        <td><b><i>isAvailable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates whether the pair is currently supported by our service</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "market_news_for_yahoo_finance_v2": "Recently published stock news in all sectors.",
    "market_most_watched_for_yahoo_finance_v2": "Trending stocks in today's market",
    "getcityexposedbydisasterid_for_rankiteo_climate_risk_assessment": "Get affected city along with informations by disaster id",
    "getdisastertypebydateandstatus_for_rankiteo_climate_risk_assessment": "Get disaster by status within a time range",
    "convert_for_currencies_and_countries": "You can convert the currencies and get a value.",
    "past_1_day_for_the_sandbox_sand": "Get price data for the past 24 hours.\n\n~5 minutes data points.",
    "quote_for_the_sandbox_sand": "Get the latest price.",
    "get_markets_of_coin_for_coinlore_cryptocurrency": "Returns top 50 markets for coin",
    "get_realtime_rates_for_realtime_crypto_prices": "Returns Realtime price of a coin",
    "iex_regulation_sho_threshold_securities_list_for_investors_exchange_iex_trading": "IEX-listed securities that have an aggregate fail to deliver position for five consecutive settlement days at a registered clearing agency, totaling 10,000 shares or more and equal to at least 0.5% of the issuer\u2019s total shares outstanding (i.e., \u201cthreshold securities\u201d). ",
    "get_transaction_details_for_walletapi_cloud": "Call this endpoint to obtain a transaction's current state.",
    "latest_rates_for_metals_prices_rates_api": "The latest API endpoint will return real-time exchange rate data updated every 60 seconds.\n\nNote: All the responses retrieved in USD needs to be converted. \n\nEx: 1/value = USD PRICE.",
    "open_high_low_close_ohlc_price_for_metals_prices_rates_api": "Allows you to query the API to get the open, high, low, and close price.\nThis endpoint has a limitation of one symbol per request.",
    "3_line_strike_for_qvantana": "3 Line Strike indicator",
    "trix_for_qvantana": "TRIX indicator",
    "united_states_card_spending_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change in credit and debit card spending seasonally adjusted relative to January 4 - 31, 2020.",
    "10_year_bond_yield_for_u_s_economic_indicators": "Get monthly 10-Year government bond yields.",
    "nonfarm_payrolls_not_adjusted_for_u_s_economic_indicators": "Get monthly not seasonally adjusted nonfarm payrolls.",
    "recent_exchange_rates_for_currency_conversion_and_exchange_rates": "Retrieve the latest exchange rate data. Refresh rate will depend on your subscription: updated every 60 minutes, every 10 minutes or every 60 seconds.",
    "get_recent_news_by_coin_name_for_crowdsense": "Get Recent News By Coin Name",
    "get_coin_historical_metrics_by_name_for_crowdsense": "Retrieve  coin\u00b4s historical social media metrics by Coin Name\nIn the case you want to retrieve real time data check \"Get Coin Metrics by Name\" or \"Get Coin Metrics by Ticker\"\n\n**Input:** \n-  Date (MM/DD/YYYY HH:HH AM/PM) (Required)\n- Security Name: Coin Name (Required)\n- TimeFrame: 1d, 1h, 8h (Optional)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Weighted Sentiment\n- Weighted sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security Name\n- TimeFrame\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tWeightedSentiment \u2013  Weighted Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)  in the requested date with TimeFrame required. [ Weighted Sentiment is a sentiment that gives more weight to mentions with more followers] \n\u2022\tWeightedSentimentChange - Percentage change of Weighted Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n\n- All dates are in UTC\n- Historical date is only avaliable from 7 days back",
    "list_customers_for_walletapi_cloud": "Retrieve a list of your customers with pagination. Specify current page and page size as query parameters.",
    "get_asset_details_for_walletapi_cloud": "Obtain the details of an asset with provided ID.",
    "account_transaction_count_for_optimism": "Get the number of transactions done by an address on the  Optimism blockchain.",
    "account_balance_for_optimism": "Get the OP balance for an address on the Optimism blockchain.",
    "transaction_for_optimism": "Get full data from a specific transaction on the Optimism blockchain!",
    "sweden_scheduled_flights_level_for_global_flight_data": "Get weekly Sweden scheduled departing flights level.",
    "united_states_scheduled_flights_level_for_global_flight_data": "Get weekly United States scheduled departing flights level.",
    "india_scheduled_flights_growth_for_global_flight_data": "Get weekly India scheduled departing flights growth.",
    "get_alerts_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for alert notifications that identify changes in trading (price & volume), financial, & company news/announcement activities for a given stock or cryptocurrency.",
    "get_social_stats_bots_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a stock or cryptocurrency's sentiment statistics from posts generated on Twitter or Stocktwits by user post category (influencers,spam, bot).",
    "exchange_by_id_for_crypto_exchanges": "Get Exchange by ID",
    "rate_by_id_for_crypto_exchanges": "Get rate by ID",
    "companies_profile_for_financial_modeling_prep": "This API returns companies profile (Price,Beta,Volume Average, Market Capitalisation, Last Dividend, 52 week range, stock price change, stock price change in percentage, Company Name, Exchange, Description, Industry,Sector,CEO,Website and image).",
    "lognormal_call_for_kiann_options_project": "Black-Scholes Pricer/premium, Lognormal vols. Params are as per :\nk = strike (float)\nf = forward (float)\nt = time-to-expiry (float)\nv = implied volatility, lognormal, annualized (float)\nr = risk-free-rate (float). Note can be combined with dividend, funding, risk-free rate into one value",
    "normal_call_for_kiann_options_project": "params = {\"k\": 1.0, \"f\": 1.0, \"t\": 1.0, \"v\":0.3, \"r\":0.0, \"cp\":\"call\"}",
    "crypto_arb_for_crypto_arbitrage": "Detects the exchanges with the highest bid and lowest ask for the currency pair provided by the user. Users can allow trading fees (market taker fees from each exchange) to be considered. It returns:\n\n**1- Arbitrage Profit:** The return of a trade where the currency is bought from the exchange with the lowest ask and sold in the exchange with the highest bid. If positive, an arbitrage opportunity has been detected.\n**2- Data for Highest Bid and Lowest Ask Exchanges:**  Exchange name, price, time, volume, and considered fees for both exchanges.\n**3- List of Exchanges Considered**\n\nAllowed pairs:\n['BTC/AUD', 'BTC/CAD', 'BTC/EUR', 'BTC/GBP', 'BTC/HKD', 'BTC/JPY', 'BTC/NZD', 'BTC/SGD', 'BTC/USD', 'BTC/PLN', 'LTC/BTC', 'DASH/BTC', 'DOGE/BTC', 'ETH/BTC', 'XRP/BTC', 'BCH/BTC', 'BCH/USD', 'BTG/BTC', 'BTG/USD', 'DASH/USD', 'ETH/USD', 'LTC/USD', 'BCH/PLN', 'BTG/PLN', 'LTC/PLN', 'ETH/EUR', 'LTC/EUR', 'XRP/USD', 'BTC/CNY', 'BTC/TRY', 'ETC/BTC', 'ETH/TRY', 'BCH/CNY', 'ETH/CNY', 'LTC/CNY', 'BTC/CZK', 'BTC/INR', 'LTC/AUD', 'BTC/BRL', 'BTC/CLP', 'BTC/PKR', 'BTC/VEF', 'BTC/VND', 'BTC/SEK', 'BTC/RUB', 'BCH/UAH', 'BTC/UAH', 'ETH/UAH', 'LSK/BTC', 'ETC/CNY', 'BCH/BRL', 'LTC/BRL', 'XMR/BTC', 'ZEC/BTC', 'BCH/EUR', 'BCH/ETH', 'BTS/BTC', 'GAME/BTC', 'GNT/BTC', 'GNT/ETH', 'NXT/BTC', 'OMG/BTC', 'OMG/ETH', 'PPC/BTC', 'REP/BTC', 'REP/ETH', 'XEM/BTC', 'XLM/BTC', 'ZRX/BTC', 'ZRX/ETH', 'BAT/BTC', 'BAT/ETH', 'CVC/BTC', 'CVC/ETH', 'EOS/BTC', 'EOS/ETH', 'SAN/BTC', 'SAN/ETH', 'SNT/BTC', 'SNT/ETH', 'TRX/BTC', 'TRX/ETH', 'EUR/USD', 'XRP/EUR', 'AMP/BTC', 'ARDR/BTC', 'BCH/USDT', 'BCY/BTC', 'BLK/BTC', 'BTC/USDT', 'BURST/BTC', 'CLAM/BTC', 'CRW/BTC', 'DASH/USDT', 'DCR/BTC', 'DGB/BTC', 'EMC2/BTC', 'ETC/ETH', 'ETC/USDT', 'ETH/USDT', 'EXP/BTC', 'FCT/BTC', 'FLDC/BTC', 'FLO/BTC', 'FUN/BTC', 'FUN/ETH', 'GNO/BTC', 'GNO/ETH', 'GRC/BTC', 'LBC/BTC', 'LTC/USDT', 'MAID/BTC', 'MANA/BTC', 'MANA/ETH', 'NAV/BTC', 'NEO/BTC', 'NEO/ETH', 'NEOS/BTC', 'NXC/BTC', 'NXT/USDT', 'OMNI/BTC', 'PAY/BTC', 'PAY/ETH', 'PINK/BTC', 'POT/BTC', 'QTUM/BTC', 'QTUM/ETH', 'RADS/BTC', 'RCN/BTC', 'RCN/ETH', 'RLC/BTC', 'RLC/ETH', 'SBD/BTC', 'SC/BTC', 'STEEM/BTC', 'STORJ/BTC', 'STRAT/BTC', 'SYS/BTC', 'VIA/BTC', 'VRC/BTC', 'VTC/BTC', 'XCP/BTC', 'XMR/USDT', 'XRP/USDT', 'XVC/BTC', 'ZEC/ETH', 'ZEC/USDT', 'BSD/BTC', 'NMC/BTC', 'PTC/BTC', 'SPK/BTC', 'SPK/USD', 'XMR/USD', 'XVG/BTC', 'BCH/GBP', 'BTG/EUR', 'DASH/EUR', 'ZEC/USD', 'BITB/BTC', 'BTA/BTC', 'BTCD/BTC', 'BTG/ETH', 'DASH/ETH', 'EFL/BTC', 'LTC/ETH', 'MONA/BTC', 'NLG/BTC', 'NVC/BTC', 'OK/BTC', 'RDD/BTC', 'SLR/BTC', 'START/BTC', 'XPM/BTC', 'BTC/MXN', '1ST/BTC', '1ST/ETH', 'ARK/BTC', 'AVT/BTC', 'AVT/ETH', 'AVT/USD', 'BNT/BTC', 'BNT/ETH', 'BT1/BTC', 'BT2/BTC', 'BTG/USDT', 'CMT/BTC', 'CMT/ETH', 'DASH/BCH', 'DAT/BTC', 'DAT/ETH', 'DAT/USD', 'DGB/ETH', 'DGD/BTC', 'DGD/ETH', 'DNT/BTC', 'DNT/ETH', 'EDO/BTC', 'EDO/ETH', 'EDO/USD', 'ELF/BTC', 'ELF/ETH', 'ELF/USD', 'ENG/BTC', 'ENG/ETH', 'EOS/USD', 'ETC/USD', 'FUN/USD', 'GAS/BTC', 'GAS/ETH', 'GNT/USD', 'ICN/BTC', 'ICN/ETH', 'INS/BTC', 'INS/ETH', 'IOTA/BTC', 'IOTA/ETH', 'IOTA/USD', 'LTC/BCH', 'MCO/BTC', 'MCO/ETH', 'NEO/USD', 'NEO/USDT', 'NGC/BTC', 'NGC/ETH', 'OMG/USD', 'OMG/USDT', 'QTUM/USD', 'RCN/USD', 'SALT/BTC', 'SALT/ETH', 'SAN/USD', 'SMT/BTC', 'SMT/USD', 'SNGLS/BTC', 'SNT/USD', 'STORJ/ETH', 'TNB/BTC', 'TNB/ETH', 'TNB/USD', 'TRX/USD', 'UKG/BTC', 'UKG/ETH', 'VIB/BTC', 'VIB/ETH', 'XEM/ETH', 'XLM/ETH', 'XLM/USD', 'XLM/USDT', 'XMR/ETH', 'XRP/ETH', 'ZEN/BTC', 'ZRX/USD', 'AID/BTC', 'AID/ETH', 'AID/USD', 'BAT/USD', 'ETP/BTC', 'ETP/ETH', 'ETP/USD', 'MNA/BTC', 'MNA/ETH', 'MNA/USD', 'REP/USD', 'RLC/USD', 'RRT/BTC', 'RRT/USD', 'SNG/BTC', 'SNG/ETH', 'SNG/USD', 'SPK/ETH', 'YYW/BTC', 'YYW/ETH', 'YYW/USD', 'ADX/BTC', 'ADX/ETH', 'AEON/BTC', 'AMM/BTC', 'AMM/ETH', 'AMM/USDT', 'ANT/BTC', 'ARN/BTC', 'ATL/BTC', 'BCN/BTC', 'BNT/USDT', 'BTM/BTC', 'BTM/ETH', 'BTM/USDT', 'CFI/BTC', 'CFI/ETH', 'CTR/BTC', 'CTR/ETH', 'CTR/USDT', 'CVC/USDT', 'DATA/BTC', 'DATA/ETH', 'DCT/BTC', 'DENT/ETH', 'DGB/USDT', 'DOGE/ETH', 'EDG/BTC', 'EDO/USDT', 'EMC/BTC', 'EOS/USDT', 'EVX/BTC', 'EVX/ETH', 'EVX/USDT', 'FUN/USDT', 'GUP/BTC', 'HSR/BTC', 'ICX/BTC', 'ICX/ETH', 'ICX/USDT', 'KMD/BTC', 'LA/ETH', 'LEND/BTC', 'LEND/ETH', 'LRC/BTC', 'LRC/ETH', 'LSK/ETH', 'LUN/BTC', 'MANA/USDT', 'MCO/USDT', 'MTH/BTC', 'MTH/ETH', 'NGC/USDT', 'OAX/BTC', 'OAX/ETH', 'OAX/USDT', 'POE/BTC', 'POE/ETH', 'PPT/BTC', 'PPT/ETH', 'PTOY/BTC', 'PTOY/ETH', 'QTUM/USDT', 'QVT/ETH', 'REP/USDT', 'SBTC/BTC', 'SMS/BTC', 'SMT/ETH', 'SMT/USDT', 'SNC/BTC', 'SNC/ETH', 'SNC/USDT', 'SNM/ETH', 'SNT/USDT', 'SPF/ETH', 'STRAT/ETH', 'SUB/BTC', 'SUB/ETH', 'SUB/USDT', 'SWFTC/BTC', 'SWFTC/ETH', 'SWFTC/USDT', 'SWT/BTC', 'TIO/BTC', 'TIO/ETH', 'TIO/USDT', 'TIX/ETH', 'TRST/BTC', 'TRX/USDT', 'VIB/USDT', 'VOISE/BTC', 'WAVES/BTC', 'WINGS/BTC', 'WRC/BTC', 'WRC/ETH', 'WRC/USDT', 'WTC/BTC', 'XDN/BTC', 'XEM/USDT', 'XUC/BTC', 'XUC/ETH', 'XUC/USDT', 'XVG/USDT', 'ZRX/USDT', 'ETH/GBP', 'BTC/CHF', 'GBP/USD', 'HMQ/BTC', 'SNM/BTC', 'TIME/BTC', 'TIME/ETH', 'USD/RUB', 'BAY/BTC', 'BBP/BTC', 'BBP/USD', 'DASH/DOGE', 'DOGE/USD', 'ELM/BTC', 'ETH/DOGE', 'EVR/BTC', 'GLD/BTC', 'GRS/BTC', 'HSR/USD', 'IOP/BTC', 'MCAP/BTC', 'MLM/BTC', 'MLM/LTC', 'MLM/USD', 'NVC/DOGE', 'ODN/BTC', 'ORME/BTC', 'OTX/BTC', 'R/BTC', 'RGC/BTC', 'SIB/BTC', 'UNO/BTC', 'UNO/DOGE', 'XAUR/BTC', 'ZSC/BTC', 'BTC/IDR', 'BTC/ZAR', 'DASH/LTC', 'ETH/LTC', 'NVC/USD', 'ZEC/LTC', 'PPC/USD', '1ST/USDT', 'ADX/USDT', 'AE/BTC', 'ANT/ETH', 'AST/BTC', 'AST/ETH', 'AST/USDT', 'BMC/BTC', 'BMC/ETH', 'BMC/USDT', 'DGD/USDT', 'DNT/USDT', 'ENG/USDT', 'GBG/BTC', 'GNT/USDT', 'GOLOS/BTC', 'GUP/ETH', 'HMQ/ETH', 'ICN/USDT', 'INCNT/BTC', 'IND/ETH', 'INS/USDT', 'KNC/BTC', 'KNC/ETH', 'KNC/USDT', 'LUN/ETH', 'MGO/BTC', 'MGO/USDT', 'MLN/BTC', 'NET/ETH', 'PAY/USDT', 'PLU/BTC', 'PLU/ETH', 'PRO/ETH', 'QRL/BTC', 'QRL/ETH', 'REQ/BTC', 'REQ/ETH', 'REQ/USDT', 'SALT/USDT', 'SAN/USDT', 'SNGLS/ETH', 'SNGLS/USDT', 'SNM/USDT', 'STORJ/USDT', 'STX/BTC', 'STX/ETH', 'STX/USDT', 'TAAS/BTC', 'TAAS/ETH', 'TKN/BTC', 'TNT/BTC', 'TNT/ETH', 'TNT/USDT', 'TRST/ETH', 'VEN/BTC', 'VEN/ETH', 'VEN/USDT', 'WAVES/ETH', 'WINGS/ETH', 'XZC/BTC', 'ETH/PLN', 'KICK/BTC', 'USDT/USD', 'ZEC/EUR', 'DASH/RUB', 'ETH/RUB', 'LTC/RUB', 'XMR/EUR', 'ZEC/RUB', 'BTC/PHP', 'ETH/AUD', 'ETH/IDR', 'QASH/BTC', 'QASH/ETH', 'QASH/USD', 'UBTC/BTC', 'UBTC/ETH', 'UBTC/USD', 'XRP/IDR', 'ADA/BTC', 'ADA/USDT', 'AE/ETH', 'AE/USDT', 'ARN/ETH', 'BAT/USDT', 'BCD/BTC', 'BCD/USDT', 'BCX/BTC', 'CDT/ETH', 'CDT/USDT', 'DATA/USDT', 'DOGE/USDT', 'DPY/ETH', 'DPY/USDT', 'DRGN/ETH', 'ELF/USDT', 'FUEL/ETH', 'FUEL/USDT', 'GAS/USDT', 'GNX/ETH', 'GNX/USDT', 'GTC/BTC', 'GTC/ETH', 'HSR/ETH', 'HSR/USDT', 'IOTA/USDT', 'KICK/ETH', 'LEND/USDT', 'LINK/ETH', 'LINK/USDT', 'LRC/USDT', 'LSK/USDT', 'LUN/USDT', 'MDA/ETH', 'MDA/USDT', 'MDT/BTC', 'MDT/ETH', 'MDT/USDT', 'MKR/ETH', 'MKR/USDT', 'NAS/BTC', 'NAS/ETH', 'NAS/USDT', 'OCN/BTC', 'OCN/ETH', 'OST/ETH', 'OST/USDT', 'POWR/BTC', 'POWR/ETH', 'PST/ETH', 'PST/USDT', 'RCN/USDT', 'RDN/ETH', 'RDN/USDT', 'SBTC/USDT', 'THETA/ETH', 'THETA/USDT', 'WAVES/USDT', 'XTZ/USDT', 'ZSC/ETH', 'ZSC/USDT', 'AUD/USD', 'BTC/NGN', 'USD/CAD', 'USD/CHF', 'USD/HKD', 'USD/JPY', 'USD/SGD', 'PPC/EUR', 'AIR/BTC', 'AIR/ETH', 'AIR/USDT', 'ART/BTC', 'ATB/BTC', 'ATB/ETH', 'ATB/USDT', 'ATM/BTC', 'ATM/ETH', 'ATM/USDT', 'ATS/BTC', 'ATS/ETH', 'AVH/BTC', 'B2X/BTC', 'B2X/ETH', 'B2X/USDT', 'BAS/ETH', 'BCN/ETH', 'BCN/USDT', 'BET/ETH', 'BKB/BTC', 'BMT/BTC', 'BMT/ETH', 'BOS/BTC', 'BQX/BTC', 'BQX/ETH', 'BQX/USDT', 'BTCA/BTC', 'BTCA/ETH', 'BTCA/USDT', 'BTX/BTC', 'BTX/USDT', 'BUS/BTC', 'BitClave/BTC', 'BitClave/ETH', 'BitClave/USDT', 'C20/BTC', 'C20/ETH', 'CAS/BTC', 'CAS/ETH', 'CAS/USDT', 'CCT/ETH', 'CDT/BTC', 'CDX/ETH', 'CHAT/BTC', 'CHAT/ETH', 'CHAT/USDT', 'CL/BTC', 'CL/ETH', 'CL/USDT', 'CLD/BTC', 'CLD/ETH', 'CLD/USDT', 'CND/BTC', 'CND/ETH', 'CND/USDT', 'CNX/BTC', 'COSS/BTC', 'COSS/ETH', 'COV/BTC', 'COV/ETH', 'CPAY/ETH', 'CSNO/BTC', 'CTX/BTC', 'CTX/ETH', 'DBIX/BTC', 'DCN/ETH', 'DCN/USDT', 'DDF/ETH', 'DICE/BTC', 'DICE/ETH', 'DIM/BTC', 'DIM/ETH', 'DIM/USDT', 'DLT/BTC', 'DOV/BTC', 'DOV/ETH', 'DRPU/BTC', 'DRPU/ETH', 'DRT/ETH', 'DRT/USDT', 'DSH/BTC', 'EBET/ETH', 'EBTC/BTC', 'EBTC/ETH', 'EBTC/USDT', 'EBTCOLD/BTC', 'EBTCOLD/ETH', 'EBTCOLD/USDT', 'ECH/BTC', 'EET/BTC', 'EET/ETH', 'EET/USDT', 'EKO/BTC', 'EKO/ETH', 'ELE/BTC', 'EMC/ETH', 'EMC/USDT', 'ENJ/BTC', 'ENJ/ETH', 'ENJ/USDT', 'ERO/BTC', 'ETBS/BTC', 'ETP/USDT', 'EXN/BTC', 'FCN/BTC', 'FRD/BTC', 'FUEL/BTC', 'FYN/ETH', 'FYP/BTC', 'GRMD/BTC', 'GVT/ETH', 'HAC/BTC', 'HDG/ETH', 'HGT/ETH', 'HPC/BTC', 'HVN/BTC', 'HVN/ETH', 'ICO/BTC', 'ICOS/BTC', 'ICOS/ETH', 'ICOS/USDT', 'IDH/BTC', 'IDH/ETH', 'IGNIS/ETH', 'INDI/BTC', 'IPL/BTC', 'ITS/BTC', 'IXT/BTC', 'IXT/ETH', 'KBR/BTC', 'KMD/ETH', 'KMD/USDT', 'LAT/BTC', 'LIFE/BTC', 'LOC/BTC', 'LOC/ETH', 'LOC/USDT', 'MAID/ETH', 'MAID/USDT', 'MIPS/BTC', 'MNE/BTC', 'MSP/ETH', 'MYB/ETH', 'NDC/ETH', 'NEBL/BTC', 'NEBL/ETH', 'NTO/BTC', 'NXT/ETH', 'OPT/BTC', 'OTN/BTC', 'PING/BTC', 'PIX/BTC', 'PIX/ETH', 'PLBT/BTC', 'PLR/BTC', 'PLR/ETH', 'PLR/USDT', 'POLL/BTC', 'PPC/USDT', 'PRE/BTC', 'PRG/BTC', 'PRG/ETH', 'PRG/USDT', 'QAU/BTC', 'QAU/ETH', 'QCN/BTC', 'RKC/ETH', 'RVT/BTC', 'SBTC/ETH', 'SCL/BTC', 'SISA/BTC', 'SISA/ETH', 'SKIN/BTC', 'SMART/BTC', 'SMART/ETH', 'SMART/USDT', 'SMS/ETH', 'SMS/USDT', 'STAR/ETH', 'STORM/BTC', 'STRAT/USDT', 'STU/BTC', 'STU/ETH', 'STU/USDT', 'SUR/BTC', 'SUR/ETH', 'SUR/USDT', 'SWT/ETH', 'TBT/BTC', 'TGT/BTC', 'TKR/ETH', 'TRAC/ETH', 'UET/ETH', 'UGT/BTC', 'UGT/ETH', 'UGT/USDT', 'ULTC/BTC', 'UTT/BTC', 'UTT/ETH', 'UTT/USDT', 'VERI/BTC', 'VERI/ETH', 'VERI/USDT', 'VIBE/BTC', 'W3C/BTC', 'W3C/ETH', 'WAX/BTC', 'WAX/ETH', 'WAX/USDT', 'WMGO/BTC', 'WMGO/USDT', 'XAUR/ETH', 'XDN/ETH', 'XDN/USDT', 'XDNCO/BTC', 'XTZ/BTC', 'XTZ/ETH', 'XVG/ETH', 'YOYOW/BTC', 'ZAP/BTC', 'ZRC/BTC', 'ADA/ETH', 'AION/BTC', 'AION/ETH', 'APPC/BTC', 'APPC/ETH', 'ARK/ETH', 'BRD/BTC', 'BRD/ETH', 'GXS/BTC', 'IOST/BTC', 'IOST/ETH', 'LINK/BTC', 'MDA/BTC', 'MTL/BTC', 'MTL/ETH', 'NANO/BTC', 'NANO/ETH', 'NULS/BTC', 'NULS/ETH', 'OST/BTC', 'PIVX/BTC', 'QSP/ETH', 'RDN/BTC', 'STEEM/ETH', 'WTC/ETH', 'YOYO/BTC', 'YOYO/ETH', 'BCX/USDT', 'BTS/USDT', 'INK/BTC', 'INK/USDT', 'QUN/BTC', 'QUN/USDT', 'TOPC/BTC', 'TOPC/USDT', 'TRUE/BTC', 'TRUE/USDT', 'UBTC/USDT', '611/BTC', 'ACP/BTC', 'ADCN/BTC', 'B2B/BTC', 'BDL/BTC', 'BELA/BTC', 'BITB/DOGE', 'BITB/ETH', 'BIZ/BTC', 'BQ/BTC', 'BRIT/BTC', 'CALC/BTC', 'CANN/BTC', 'CJ/BTC', 'DGC/BTC', 'DNR/BTC', 'DOGE/LTC', 'DP/BTC', 'DRGN/BTC', 'ECN/BTC', 'ECN/LTC', 'EGC/BTC', 'ERT/BTC', 'ETHOS/BTC', 'ETHOS/ETH', 'EXCL/BTC', 'FAIR/BTC', 'FCH/BTC', 'FTC/BTC', 'GAM/BTC', 'GB/BTC', 'GLTC/BTC', 'GMX/BTC', 'HMC/BTC', 'ICE/BTC', 'ILC/BTC', 'INXT/BTC', 'KLC/BTC', 'LA/BTC', 'LINDA/BTC', 'LMC/BTC', 'LTC/DOGE', 'MAG/BTC', 'MEME/BTC', 'MER/BTC', 'MINT/BTC', 'MOIN/BTC', 'MOON/BTC', 'MOON/DOGE', 'MUE/BTC', 'MXT/BTC', 'NLC2/BTC', 'PCS/BTC', 'PIVX/ETH', 'PRO/BTC', 'PTS/BTC', 'PURA/BTC', 'REV/BTC', 'RIYA/BTC', 'RMC/BTC', 'SYNX/BTC', 'TCOIN/BTC', 'TRC/BTC', 'TUN/BTC', 'UNO/ETH', 'VOISE/ETH', 'VOX/BTC', 'VSX/BTC', 'XBC/BTC', 'XCXT/BTC', 'XGOX/BTC', 'XSH/BTC', 'YOC/BTC', 'ZCL/BTC', 'ZEIT/BTC', 'ZENI/BTC', 'ZZC/BTC', 'ACT/BTC', 'ACT/ETH', 'AIDOC/BTC', 'AIDOC/ETH', 'BIFI/BTC', 'DBC/BTC', 'DBC/ETH', 'GNX/BTC', 'IOST/USDT', 'ITC/BTC', 'ITC/ETH', 'MDS/ETH', 'MTN/ETH', 'PROPY/BTC', 'QSP/BTC', 'QUN/ETH', 'RUFF/BTC', 'RUFF/ETH', 'SOC/BTC', 'SOC/ETH', 'SRN/BTC', 'SRN/ETH', 'STK/BTC', 'STK/ETH', 'THETA/BTC', 'TOPC/ETH', 'UTK/BTC', 'UTK/ETH', 'YEE/BTC', 'YEE/ETH', 'ZIL/ETH', 'CAN/BTC', 'CAN/ETH', 'DENT/BTC', 'FCT/ETH', 'IND/BTC', 'MTN/BTC', 'SPHTX/BTC', 'SPHTX/ETH', 'UBTC/QASH', 'BTC/THB', 'HYP/BTC', 'LEO/BTC', 'ZET/BTC', 'BCH/JPY', 'ETH/JPY', 'ACC/BTC', 'BASH/BTC', 'BOT/QTUM', 'INK/QTUM', 'INT/BTC', 'IQT/BTC', 'OC/BTC', 'QBT/QTUM', 'TSL/QTUM', 'UGC/ETH', 'ETH/HKD', 'GAT/BTC', 'GAT/ETH', 'GTO/BTC', 'GTO/ETH', 'IFT/BTC', 'KEY/BTC', 'KEY/ETH', 'LEV/BTC', 'LEV/ETH', 'MGO/ETH', 'BNTY/ETH', 'GXS/ETH', 'INK/ETH', 'OXY/BTC', 'PART/BTC', 'PUT/BTC', 'PUT/ETH', 'UNIT/BTC', 'VIU/BTC', 'YBCT/BTC', 'AGI/BTC', 'AGI/ETH', 'CPC/BTC', 'DRGN/USDT', 'EDG/ETH', 'MSP/BTC', 'TKS/BTC', 'VEE/BTC', 'VEE/ETH', 'VSL/BTC', 'WBTC/BTC', 'BCH/AUD', 'ACT/BCH', 'AMB/BTC', 'AMB/ETH', 'BCD/ETH', 'BCPT/BTC', 'BCPT/ETH', 'BNTY/BTC', 'CAG/BTC', 'CAG/ETH', 'CAT/BTC', 'CAT/ETH', 'COFI/ETH', 'DBC/USDT', 'DNA/BTC', 'DNA/ETH', 'ELIX/BTC', 'ELIX/ETH', 'GVT/BTC', 'HPB/BTC', 'MOD/BTC', 'MOD/ETH', 'OCN/USDT', 'PRL/BTC', 'PRL/ETH', 'PURA/ETH', 'QLC/BTC', 'QLC/ETH', 'RPX/BTC', 'SNOV/BTC', 'SNOV/ETH', 'TNC/BTC', 'TNC/ETH', 'TNC/USDT', 'XAS/BTC', 'XLR/BTC', 'XRB/BTC', 'ZPT/BTC', 'ZPT/ETH', '1337/BTC', '1337/DOGE', '611/DOGE', '611/LTC', 'ABC/BTC', 'ABC/DOGE', 'ABC/LTC', 'ABY/BTC', 'ADC/BTC', 'ADC/DOGE', 'ADST/BTC', 'ALIS/BTC', 'ALL/BTC', 'ALT/BTC', 'ALT/DOGE', 'ALT/LTC', 'ANI/BTC', 'ARC/BTC', 'ARC/DOGE', 'ARC/LTC', 'ARG/BTC', 'ARGUS/BTC', 'ARK/USDT', 'ATOM/BTC', 'AU/BTC', 'AUR/BTC', 'BAY/DOGE', 'BAY/LTC', 'BCH/DOGE', 'BCH/LTC', 'BDL/DOGE', 'BDL/LTC', 'BENJI/BTC', 'BLK/DOGE', 'BLZ/BTC', 'BSTY/BTC', 'BSTY/DOGE', 'BTA/DOGE', 'BTCD/DOGE', 'BTCS/BTC', 'BTCS/DOGE', 'BTCS/LTC', 'BTDX/BTC', 'CACH/BTC', 'CDN/BTC', 'CDN/DOGE', 'CHESS/BTC', 'CJ/DOGE', 'CJ/LTC', 'CLAM/DOGE', 'CLOAK/BTC', 'CMPCO/BTC', 'CNNC/BTC', 'CQST/BTC', 'CRAVE/BTC', 'CRAVE/DOGE', 'CRAVE/LTC', 'CRC/BTC', 'CRC/DOGE', 'CRC/LTC', 'CREA/BTC', 'CTIC3/BTC', 'CTIC3/DOGE', 'CTIC3/LTC', 'CXT/BTC', 'DALC/BTC', 'DAS/BTC', 'DAS/DOGE', 'DAS/LTC', 'DCN/BTC', 'DCR/DOGE', 'DEM/BTC', 'DEUS/BTC', 'DEUS/DOGE', 'DEUS/LTC', 'DFS/BTC', 'DFS/LTC', 'DGC/DOGE', 'DIME/BTC', 'DIME/DOGE', 'DNR/LTC', 'DOPE/BTC', 'DP/DOGE', 'EC/BTC', 'EC/DOGE', 'EC/LTC', 'EDRC/BTC', 'EFL/DOGE', 'ELM/DOGE', 'ELM/LTC', 'EPC/BTC', 'EQT/BTC', 'ERY/BTC', 'ETC/DOGE', 'ETC/LTC', 'ETHD/BTC', 'ETHD/LTC', 'ETT/BTC', 'ETT/DOGE', 'ETT/LTC', 'EVR/DOGE', 'EVR/LTC', 'EXP/DOGE', 'FAZZ/BTC', 'FJC/BTC', 'FJC/DOGE', 'FLASH/BTC', 'GBX/BTC', 'GBYTE/BTC', 'GCN/BTC', 'GCN/LTC', 'GDC/BTC', 'GEERT/BTC', 'GEO/BTC', 'GLD/DOGE', 'GLD/LTC', 'GP/BTC', 'GRS/DOGE', 'GRS/LTC', 'GRWI/BTC', 'GRWI/DOGE', 'GRWI/LTC', 'HAL/BTC', 'HBC/BTC', 'HC/BTC', 'HEAT/BTC', 'HEAT/DOGE', 'HEAT/LTC', 'HSR/DOGE', 'HSR/LTC', 'HST/BTC', 'INFX/BTC', 'INSN/BTC', 'IXC/BTC', 'KAYI/BTC', 'KAYI/DOGE', 'KGB/BTC', 'KOBO/BTC', 'KRONE/BTC', 'KRONE/DOGE', 'KRONE/LTC', 'KURT/BTC', 'LBTC/BTC', 'LDC/BTC', 'LINDA/DOGE', 'LINDA/LTC', 'LINX/BTC', 'LUX/BTC', 'LUX/DOGE', 'LUX/LTC', 'MAC/BTC', 'MEC/BTC', 'MINEX/BTC', 'MNM/BTC', 'MOIN/DOGE', 'MOIN/LTC', 'MOJO/BTC', 'MST/BTC', 'MUSIC/BTC', 'MYB/BTC', 'MZC/BTC', 'NAMO/BTC', 'NAMO/DOGE', 'NAMO/LTC', 'NLC2/DOGE', 'NLC2/LTC', 'NMC/DOGE', 'NOTE/BTC', 'NOTE/DOGE', 'NOTE/LTC', 'NVC/LTC', 'NXS/BTC', 'ODN/DOGE', 'ODN/LTC', 'OK/DOGE', 'ONION/BTC', 'ORB/BTC', 'ORME/DOGE', 'ORME/LTC', 'OX/BTC', 'OX/DOGE', 'OX/LTC', 'PBL/BTC', 'PIGGY/BTC', 'PLX/BTC', 'PND/BTC', 'POST/BTC', 'POSW/BTC', 'POT/DOGE', 'PPC/DOGE', 'PROC/BTC', 'PROC/DOGE', 'PROC/LTC', 'PURA/DOGE', 'PURA/LTC', 'PUT/LTC', 'QRK/BTC', 'QWARK/BTC', 'R/DOGE', 'R/LTC', 'RAIN/BTC', 'RBY/BTC', 'RDD/DOGE', 'RIYA/DOGE', 'RIYA/LTC', 'RKC/BTC', 'RKC/DOGE', 'RKC/LTC', 'RNS/BTC', 'RUP/BTC', 'SBC/BTC', 'SBC/DOGE', 'SBC/LTC', 'SCT/BTC', 'SFC/BTC', 'SIB/DOGE', 'SIB/LTC', 'SLG/BTC', 'SLG/DOGE', 'SMART/DOGE', 'SPR/BTC', 'SRC/BTC', 'START/DOGE', 'STC/BTC', 'STN/BTC', 'TER/BTC', 'TER/LTC', 'TIX/BTC', 'TOA/BTC', 'TOA/DOGE', 'TOA/LTC', 'TRC/DOGE', 'TRC/LTC', 'TRUMP/BTC', 'TRUMP/DOGE', 'TRUMP/LTC', 'TSE/BTC', 'TSE/DOGE', 'TX/BTC', 'UBQ/BTC', 'UNIFY/BTC', 'UNO/LTC', 'VIDZ/BTC', 'VRC/DOGE', 'VRM/BTC', 'VUC/BTC', 'VUC/DOGE', 'VUC/LTC', 'WDC/BTC', 'WDC/DOGE', 'XBL/BTC', 'XBTS/BTC', 'XBY/BTC', 'XBY/DOGE', 'XBY/LTC', 'XCO/BTC', 'XCT/BTC', 'XCXT/DOGE', 'XCXT/LTC', 'XGOX/LTC', 'XID/BTC', 'XMCC/BTC', 'XMG/BTC', 'XMY/BTC', 'XPM/DOGE', 'XST/BTC', 'YOVI/BTC', 'ZEC/DOGE', 'ZEIT/DOGE', 'ZEIT/LTC', 'ZET/DOGE', 'ZOI/BTC', 'ZSE/BTC', 'ETH/CAD', 'MLN/ETH', 'XLM/EUR', 'ADZ/BTC', 'AMM/USD', 'ARC/USD', 'ATX/BTC', 'B2B/ETH', 'BCC/BTC', 'BCH/RUR', 'BLU/BTC', 'BNT/USD', 'BTB/BTC', 'BTC/RUR', 'CCRB/BTC', 'CDX/BTC', 'CPC/ETH', 'CTR/USD', 'CURE/BTC', 'CVC/USD', 'DASH/RUR', 'DGD/USD', 'DMC/BTC', 'DMD/BTC', 'DOLLAR/BTC', 'EL/BTC', 'EL/USD', 'ENT/BTC', 'ESP/BTC', 'ETH/RUR', 'FLIXX/BTC', 'FLIXX/ETH', 'GRS/ETH', 'GRS/USD', 'GRX/BTC', 'GRX/ETH', 'HST/ETH', 'ITI/BTC', 'KNC/USD', 'KPL/BTC', 'KPL/USD', 'KRB/BTC', 'LEO/USD', 'LSK/USD', 'LTC/RUR', 'LUNA/BTC', 'MCO/USD', 'MCR/BTC', 'MNX/BTC', 'MSCN/BTC', 'MTL/USD', 'OD/BTC', 'PAY/USD', 'POSW/LTC', 'PRES/BTC', 'RBIES/BTC', 'SHIFT/BTC', 'SNGLS/USD', 'SPF/BTC', 'STORJ/USD', 'STRAT/USD', 'SUMO/BTC', 'SXC/BTC', 'TER/ETH', 'TFL/BTC', 'TFL/ETH', 'TKN/ETH', 'UNY/BTC', 'UNY/LTC', 'UNY/USD', 'UQC/BTC', 'UQC/ETH', 'USD/RUR', 'VIB/USD', 'VLTC/BTC', 'VRS/BTC', 'VRS/USD', 'XEM/USD', 'XSPEC/BTC', 'YOC/USD', 'B3/BTC', 'BTX/DOGE', 'BTX/ETH', 'BTX/LTC', 'ECN/DOGE', 'NAV/DOGE', 'NAV/ETH', 'NAV/LTC', 'NKA/BTC', 'NKA/DOGE', 'NKA/LTC', 'NSR/BTC', 'TZC/BTC', 'TZC/DOGE', 'TZC/LTC', 'XCN/BTC', 'XMCC/DOGE', 'XMCC/LTC', 'XVG/DOGE', 'XVG/LTC']",
    "get_meta_data_for_investing_cryptocurrency_markets": "Get init meta data",
    "streams_mentions_for_stocktwits": "Returns the most recent 30 messages containing mentions of the authenticating user's handle. These are considered public replies",
    "free_access_for_walnuttradingdash": "The api call will grant access to a unique URL to access the dashboard (demo [here](https://walnuthillai.com/wp-content/themes/blankslate-child/videos/demo_walnuttradingdash.mp4)). The FREE version grants access to half of the assets and technical indicators / strategies and any time period from 2021/06 to 2022/1.",
    "full_access_for_walnuttradingdash": "The api call will grant access to a unique URL to access the dashboard (demo [here](https://walnuthillai.com/wp-content/themes/blankslate-child/videos/demo_walnuttradingdash.mp4)). The PRO version grants access to 60 minutes of use per request, unlimited access to all assets and technical indicators, and any time period up to the previous date.",
    "symbols_get_peers_for_seeking_alpha": "Get peers of specific symbol",
    "symbols_get_option_expirations_for_seeking_alpha": "Get option expirations to use with .../symbols/get-options endpoint",
    "7_latest_for_stockyapiexchange": "This feature provides the most recent information about a stock, including its current price, percentage change, and trading volume. It's updated in real-time as new data becomes available.",
    "stock_get_operating_income_for_yh_finance_v2": "return operatin income",
    "stock_get_dividend_yield_for_yh_finance_v2": "return dividend yield",
    "currencies_get_rate_for_investing_cryptocurrency_markets": "Get exchange rate between two different currencies",
    "coins_get_technical_for_investing_cryptocurrency_markets": "Get technical information of specific cryptocurrency",
    "top_nfts_this_week_for_top_nft_sales": "Top selling NFTs this week",
    "past_1_year_for_the_sandbox_sand": "Get price data for the past 1 year.\n\n~ daily (00:00 UTC) data points.",
    "rsi_for_twelve_data": "Relative Strength Index(RSI) is a momentum indicator, which calculates the magnitude of a price change to assess the overbought and oversold conditions in the price of an asset.",
    "cmo_for_twelve_data": "Chande Momentum Oscillator(CMO) is used to show overbought and oversold conditions.",
    "linearregslope_for_twelve_data": "Linear Regression Slope(LINEARREGSLOPE) calculates the slope for the linear regression trendline for each data point.",
    "type_risk_get_risk_return_summary_for_morning_star": "Get summary of risk return in the Risk tab",
    "stock_v2_get_competitors_for_morning_star": "Mapped to Competitors section in Quote tab",
    "type_parent_get_top_medalist_rated_investments_for_morning_star": "Get top medalist rated investments as displayed in the Parent tab",
    "block_for_defi_data": "Get closest block to a timestamp\n\nRuns binary search over a blockchain's blocks to get the closest one to a timestamp.\n\nEvery time this is run we add new data to our database, so each query permanently speeds up future queries.",
    "pools_all_for_defi_watch": "Gain data about DeFi Pools",
    "tokens_all_market_cap_for_defi_watch": "Get data about  tokens with market capitalisation and filter them",
    "market_get_common_ranking_for_webull": "Get market common ranking in specific region",
    "stock_get_industry_sector_for_webull": "Get relating industry sector",
    "historical_crypto_price_for_real_time_quotes": "Returns historical data of a specific time interval and crypto currency",
    "forex_quotes_for_real_time_quotes": "Returns the real time price of a forex currency pair",
    "past_6_months_for_the_sandbox_sand": "Get price data for the past 6 months.\n\n~ daily data points.",
    "get_option_delivery_price_for_bybit": "Get option delivery price",
    "contract_info_for_bybit": "Query for all if blank.",
    "market_get_top_mentions_for_schwab": "List top mentions stock quotes",
    "quote_get_margin_requirements_for_schwab": "Get margin requirements",
    "quarterly_income_statements_for_freedom_finance": "Quarterly income statements",
    "historic_stock_prices_for_freedom_finance": "List all end of day quotes (open, close, high, low, volume etc) for given stock symbol",
    "inflation_for_u_s_economic_indicators": "Get monthly inflation rates.",
    "m1_money_stock_not_adjusted_for_u_s_economic_indicators": "Get weekly not seasonally adjusted M1 monetary aggregate from the Federal Reserve.  M1 is the money supply that is composed of physical currency and coin, demand deposits, travelers' checks, other checkable deposits, and negotiable order of withdrawal (NOW) accounts.",
    "get_order_book_for_bybit": "Get the orderbook. Each side has a depth of 25.\nEnable 500 orders for orderbook API.",
    "public_trading_records_usdt_for_bybit": "Get recent trades.",
    "get_products_in_category_for__demo_project_v3": " ",
    "get_products_for__demo_project_v3": " ",
    "get_exchange_category_for_stock_cryptocurrency_forex_market_data": "Get list available categories of exchanges",
    "search_stock_cryptocurrency_forex_for_stock_cryptocurrency_forex_market_data": "Search Stock, Cryptocurrency, Forex price by name or symbol or exchange",
    "converter_for_webit_blockchain": "Convert ETH, BSC, MATIC, SOL currencies to bigger or smaller units with ease.\n\nSupported currencies:\nETH (Ethereum);\nBSC (Binance);\nMATIC (Polygon);\nSOL (Solana).\n\nETH, BSC and MATIC all share the same units, since Binance and Polygon are L2 fork networks built on top of Ethereum.",
    "metrics_ohlcv_futures_pro_for_cryptocurrency_financial_data": "Price and volume metrics for futures markets",
    "metadata_for_cryptocurrency_financial_data": " ",
    "sabr_log_for_kiann_options_sabr": "This is the implementation of the SABR model (z-shift) under the Lognormal volatility mode, with the parameters as follows:\nK_ : strike, fwd_ : forward, shift_ : z-shift, time_ : time-to-expiry, alpha : sabr alpha, beta : sabr beta, rho : sabr rho, volvol : sabr volvol\nmethod_ : internal mode for two modes of calibration. Default of 1\nret_ : set of 0, to return proper json format",
    "ideas_get_view_count_for_trading_view": "Get view count related to an ideal post",
    "current_block_number_for_optimism": "Get the current block number of the Optimism blockchain.",
    "account_transaction_history_for_optimism": "Get an array of all transactions of an address on the Optimism blockchain.",
    "gdp_growth_for_u_s_economic_indicators": "Get quarterly percent change of Gross Domestic Product annualized.",
    "m2_money_stock_adjusted_for_u_s_economic_indicators": "Get monthly seasonally adjusted M2 monetary aggregate from the Federal Reserve.  M2 is the money supply that includes all elements of M1 as well as \"near money.\"   Near money refers to savings deposits, money market securities, mutual funds, and other time deposits.",
    "stock_v2_get_financial_details_for_ms_finance": "Mapped to Expand Details View section found in Financials tab",
    "type_portfolio_get_exposure_for_ms_finance": "Get exposure as displayed in the Portfolio tab",
    "market_get_summary_for_ms_finance": "Get live summary information at the request time",
    "news_v2_list_special_reports_for_cnbc": "List special reports",
    "financial_balance_sheet_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.",
    "streams_watchlist_for_stocktwits": "Returns the most recent 30 messages for the specified watch list for the authenticating user. The watch list is a private list of all the symbols a user is watching.",
    "messages_unlike_for_stocktwits": "Unlike a message on StockTwits as the authenticating user.",
    "exchange_listed_tickers_list_for_palmy_investing_api": "Get a list of all stocks listed on all exchanges.",
    "shortterm_analysis_retrieve_for_palmy_investing_api": "Technical Scores are calculated multiple times a day. Check the docs for explanation",
    "keymetrics_retrieve_for_palmy_investing_api": "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s).",
    "symbols_transcripts_for_seeking_alpha_finance": "Get a list of transcripts for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/earnings/transcripts",
    "symbols_earning_summaries_for_seeking_alpha_finance": "Get a earning summaries by symbol",
    "getpowerplantbyradiusandgps_for_rankiteo_climate_risk_assessment": "Get powerplants which have coordinate points falling into a specific radius",
    "industries_get_performing_detail_for_webull": "List industry performing detail",
    "market_get_top_active_for_webull": "Get market top active in specific region",
    "list_operations_in_wallet_s_ledger_for_walletapi_cloud": "Obtain a pageable list of operations that were posted to a wallet within a specified time period.",
    "blockchains_all_for_defi_watch": "Get information about all available blockchains",
    "sabr_calib_for_kiann_options_sabr": "A simplistic least-error fit to retrieve sabr parameters given arrays of (lognormal)vols and strikes. Note that, it does not explicitly calibrate to ATMF vols.\n\nParams as per below.\nparams = {\"fwd_\" : 1655, \"shift_\": 0.0, \"time_\": 0.159, \"beta\" : 0.9, \"k_\": [strikes_], \"vols_\": [vols_], \"ret_\": 0}\n\nNote that in the (python) request.get, k_ should be of format [x1, x2, x3,........ ] where there is no \"\", similarly for [vols_]",
    "options_expirations_for_fancyoptions": "This endpoint returns the expirations for a given ticker.",
    "get_a_watchlist_symbol_for_tradier": "",
    "get_the_market_status_for_tradier": "",
    "fantasy_5_for_ca_lottery": "Fantasy 5 History",
    "m2_money_stock_not_adjusted_for_u_s_economic_indicators": "Get weekly not seasonally adjusted M2 monetary aggregate from the Federal Reserve.  M2 is the money supply that includes all elements of M1 as well as \"near money.\"   Near money refers to savings deposits, money market securities, mutual funds, and other time deposits.",
    "united_states_employment_for_covid_19_economic_impact": "Get daily average percent change of employment relative to January 4 - 31, 2020.",
    "united_states_covid_19_case_count_for_covid_19_economic_impact": "Get cumulative United States COVID-19 case count daily.",
    "crypto_quotes_for_real_time_quotes": "Returns the real time price of a crypto currency pair",
    "all_ticker_data_for_global_ethereum_price_index_gex": "If no query parameters are sent, then returns ticker data for every supported symbol. If fiat(s) are sent as parameters, then only the ticker for those values is sent.",
    "custom_ticker_for_global_ethereum_price_index_gex": "This endpoint can be used to generate a custom index in a certain currency. The \u201cinex\u201d path parameter represents \u201cinclude\u201d or \u201cexclude\u201d, you can choose to generate an index removing specified exchanges, or only including the few that you require.",
    "get_social_trending_impressions_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search the top 50 tickers trending on social media by impressions.",
    "get_social_change_impressions_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search the top 50 tickers trending on social media with the greatest change in impressions.",
    "exchange_rates_for_currency_v2": "Convert Currency value from and to.",
    "convert_for_currency_v2": "Convert Currency value from and to.",
    "free_exchange_rates_for_currency_v2": "Convert Currency value from and to.",
    "sendethereum_for_chaingateway_io": "Sends ethereum from an address controlled by the account to a specified receiver address.",
    "getethereumbalance_for_chaingateway_io": "Returns the ethereum balance of a given address.",
    "subscribeaddress_for_chaingateway_io": "Creates a new subscription/IPN for the given address (and contractaddress). You will receive a notification to the given url every time a deposit is received. Unsubscribe the address before sending tokens/ETH from it or you won't get reliable notifications anymore.\r\n",
    "tokens_all_for_defi_watch": "Get data about all tokens and filter them",
    "crypto_symbol_for_holistic_finance_stock_data": "Returns a list of all available crypto symbols",
    "income_for_holistic_finance_stock_data": "Provides either annual or quarterly income statements of an single stock company.",
    "symbols_get_profile_for_seeking_alpha": "Get profile information of specific symbol",
    "v2_auto_complete_for_seeking_alpha": "Get suggested symbols, authors, etc... by provided word or phrase",
    "get_social_timestamps_1h_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped by 1-hour intervals",
    "get_social_feed_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search posts from Twitter or StockTwits that mention specified tickers. In the additional feeds provided, Utradea filters posts on your behalf based on our spam criteria and returns posts that reaches 10,000+ impressions.",
    "getdisclosedyesterday_for_jp_funda": "### Return securities report data disclosed yesterday\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators",
    "get_litecoin_blockchain_information_for_litecoin_wallet": "Get Litecoin Blockchain Information. Obtain basic info like testnet / mainnet version of the chain, current block number and it's hash.",
    "stock_get_earnings_per_share_for_yh_finance_v2": "return earnings per share",
    "stock_get_current_volume_for_yh_finance_v2": "return current volume",
    "stock_get_net_income_for_yh_finance_v2": "return net income",
    "get_social_list_for_finance_social_sentiment_for_twitter_and_stocktwits": "Get a list of tickers across social media platforms: Twitter, StockTwits, and Reddit. These are tickers that are currently mentioned across each platform. \nUse these tickers to query the remaining endpoints.",
    "trader_positions_for_bybit_leaderboard": "Returns all trader positions.",
    "trader_details_for_bybit_leaderboard": "Returns full trader info.",
    "get_search_suggestions_for_coinranking": "Search suggestions are a quick and easy way to find data on coinranking. The endpoint only accepts one parameter; a query. With this query you can find currencies (including fiat), exchanges and markets, by their symbol or name. The response always returns a set of the most prominent coins, exchanges and markets matching your query.",
    "free_convert_for_currency_v2": "Convert Currency value from and to.",
    "forex_symbols_for_real_time_quotes": "Returns a list of all available foreign exchange currencies",
    "book_for_investors_exchange_iex_trading": "Response includes data from deep and quote. Refer to each endpoint for details.",
    "stock_get_statistics_for_bb_finance": "Get statistics information of stocks",
    "stories_list_for_bb_finance": "Get a list of stories related to a sticker",
    "symbols_v2_get_chart_for_cnbc": "Get raw data to draw price line chart of stock quote, index, exchange, etc...",
    "all_rates_for_crypto_exchanges": "Get all rates",
    "all_assets_for_crypto_exchanges": "Get All Assets",
    "get_social_moving_averages_1m_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by monthly intervals.",
    "get_sentiment_trending_bearish_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for top 50 trending bearish stocks/crypto symbols on Twitter/StockTwits.",
    "symbols_get_profile_for_cnbc": "Get summary information of stock quote, index, exchange, etc...",
    "news_v2_list_trending_for_cnbc": "List trending news",
    "symbols_translate_for_cnbc": "Get issueId from specific symbol",
    "stock_get_cost_distribution_analysis_for_webull": "Get stock cost distribution and analysis",
    "stock_get_trending_chart_for_webull": "Get brief pricing history chart in a period of time",
    "industries_list_best_performing_for_webull": "List best performing industries",
    "getdisclosedweek_for_jp_funda": "### Return securities report data disclosed within this week include today.\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.\u3000But you can obtain data instead of consolidated management indicators from non consolidated management indicators",
    "stock_get_daily_high_for_yh_finance_v2": "return daily h igh",
    "fetchlatestnav_for_latest_mutual_fund_nav": "Fetch Latest NAV",
    "generate_litecoin_wallet_for_litecoin_wallet": "Litecoin wallet API supports BIP44 HD wallets. It is very convenient and secure, since it can generate 2^31 addresses from 1 mnemonic phrase. Mnemonic phrase consists of 24 special words in defined order and can restore access to all generated addresses and private keys.\nEach address is identified by 3 main values:\n\nPrivate Key - your secret value, which should never be revealed\nPublic Key - public address to be published\nDerivation index - index of generated address\nIt follows BIP44 specification and generates for Litecoin wallet with derivation path m'/44'/2'/0'/0. More about BIP44 HD wallets can be found here - https://github.com/litecoin/bips/blob/master/bip-0044.mediawiki. Generate BIP44 compatible Litecoin wallet.",
    "get_litecoin_block_hash_for_litecoin_wallet": "Get Litecoin Block hash. Returns hash of the block to get the block detail.",
    "get_litecoin_transactions_by_address_for_litecoin_wallet": "Get Litecoin Transaction by address.",
    "historical_stock_price_for_real_time_quotes": "Returns historical data of a specific time interval and stock symbol",
    "midprice_for_twelve_data": "Midpoint Price over period(MIDPRICE) is calculated as (highest high + lowest low) / 2.",
    "purchase_info_for_twelve_data": "This API request returns essential information on purchasing a mutual fund, including minimums, pricing, and available brokerages.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
    "key_statistics_for_stock_analysis": "Get key statistics.",
    "growth_estimate_for_stock_analysis": "Get growth estimate.",
    "get_exchange_for_coinranking": "Find information on a specific exchange listed on coinranking. An exchange is a place where cryptocurrencies are traded.\nThis endpoint requires the **ultra** plan or higher.",
    "get_coin_supply_for_coinranking": "Get the maximum, total, and circulating supply of a coin.",
    "get_exercise_by_id_for_musclewiki": "Get an exercise by it's ID. Valid IDs [0,953]",
    "get_exercises_for_musclewiki": "Get all Exercises",
    "get_attributes_for_musclewiki": "Get Attributes you can use to filter exercises",
    "bodyfat_imperial_for_health_calculator_api": "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters in imperial units.",
    "ideal_body_weight_for_health_calculator_api": "This endpoint allows you to calculate the ideal weight range based on factors like height, body frame size, and gender. The endpoint provides different formulas and approaches for ideal weight estimation, such as the Hamwi method and the Devine formula.",
    "basal_metabolic_rate_bmr_for_health_calculator_api": "This endpoint allows you to calculate the Basal Metabolic Rate (BMR) based on age, weight, height, and gender parameters. The BMR represents the number of calories needed to maintain basic bodily functions at rest.",
    "remove_a_meal_plan_for_suggestic": "Use the **removeMealPlan** mutation to remove the current and following days in the profile's meal plan. Therefore, it is not possible to delete meal plans which dates have already passed.",
    "create_user_for_suggestic": "Each Suggestic partner/client has the ability to create their own set of users.",
    "marks_men_for_scoring_tables_api": "This retrieves all men's marks from the World Athletics Scoring Tables.",
    "marks_women_for_scoring_tables_api": "This retrieves all women's marks from the World Athletics Scoring Tables.",
    "marks_women_points_for_scoring_tables_api": "This retrieves the women's marks for the point value given as a parameter (0-1400).",
    "bmi_for_clinicalmarkers": " ",
    "apache2_for_clinicalmarkers": " ",
    "apgar_for_clinicalmarkers": " ",
    "sexes_values_for_bmr_and_tmr": "Returns a list of possible sexes values that are needed to compute BMR and TMR",
    "bmr_index_for_bmr_and_tmr": "Endpoint allows you to calculate the Basal Metabolic Rate",
    "tmr_index_for_bmr_and_tmr": "Endpoint allows you to calculate the Total Metabolic Rate",
    "planetaryoverview_for_horostory": "get the Planetary Overview of the day",
    "hoscoscope_for_horostory": "retrieve the horoscope for a specific sign and date",
    "cities_get_information_deprecated_for_airvisual": "Get information in specific city by its id",
    "stations_v2_get_measurements_for_airvisual": "Get measurements at specific station by its id",
    "cities_get_measurements_deprecated_for_airvisual": "Get measurements in specific city by its id",
    "bmi_for_bmi_calculator_v2": "Calculate BMI using weight and height.",
    "view_all_food_items_for_ind_nutrient_api": "The request allows clients to retrieve a comprehensive list of all available food items.\n\nAPI request sent to [https://indnutrientsapi.tech/food](https://indnutrientsapi.tech/food)",
    "view_all_cores_with_their_food_items_for_ind_nutrient_api": "This request allows clients to retrieve a list of all available cores along with the food items associated with each core.\n\nAPI request sent to [https://indnutrientsapi.tech/food/core](https://indnutrientsapi.tech/food/core)",
    "view_food_item_by_name_for_ind_nutrient_api": "This request allows clients to retrieve detailed information about a food item by specifying by its `name`.\n\nWhen making the request, ensure the food item's name is written with hyphens (\"-\") separating the words. For instance, \"Paneer Butter Masala\" should be written as \"paneer-butter-masala\" in the request.\n\nAPI request sent to [https://indnutrientsapi.tech/food/name/paneer-butter-masala](https://indnutrientsapi.tech/food/name/paneer-butter-masala)",
    "triage_virtual_for_selector_tipo_consultas": "define si un paciente debe ser atendido via consulta virtual o presencial",
    "generar_fhir_id_qr_for_selector_tipo_consultas": "Recibe el id de fhir como string y lo convierte en codigo qr",
    "get_customized_plan_for_workout_planner": "The /customized endpoint provides a way for users to generate personalized workout plans based on their preferences. It takes various parameters into account to create a workout plan tailored to the user's needs. \nHere's an explanation of the parameters and how to use them:\n1. time: This parameter represents the duration of the workout plan in minutes. By default, if not provided, it is set to 30 minutes. You can customize this parameter to specify the desired duration of your workout.\n2. equipment : This parameter allows you to specify the equipment available for your workout. If you don't have any equipment, you can set it to \"none\". However, if you have specific equipment available, you can provide the details in this parameter.\n3. muscle: This parameter represents the target muscle group for your workout plan. You can specify the muscle group you want to focus on, such as \"legs\", \"chest\", \"back\", etc. If you don't have a specific target muscle group, you can set it to \"none\".\n4. fitness_level: This parameter enables you to define your fitness level. You can choose from options like \"beginner\", \"intermediate\", or \"advanced\" to indicate your current fitness level. The workout plan generated will be adjusted based on this level. \n5. fitness_goals: This parameter allows you to specify your fitness goals, such as \"weight_loss\", \"muscle_gain\", \"strength_training\", \"cardiovascular_endurance\", \"flexibility\", or \"general_fitness\". By indicating your goals, the generated workout plan will align with your specific objectives.",
    "get_workout_plan_for_workout_planner": "Get Workout Plans\n\nThis api request can be used to get Workout plan based on:\n\n- Time duration\n- Target Muscle\n- Location\n- Equipment\n\nHence api call takes 4 query parameters:\n\n- time\n- muscle\n- location\n- equipment",
    "activity_values_for_bmr_and_tmr": "Returns a list of possible activity values that are needed to compute TMR",
    "marks_men_points_for_scoring_tables_api": "This retrieves the men's marks for the point value given as a parameter (0-1400).",
    "get_all_fastingcenters_for_fastingcenters": "Get all",
    "get_id_for_fastingcenters": "Get ID",
    "bodyfat_for_health_calculator_api": "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters.",
    "macronutrient_distribution_for_health_calculator_api": "This endpoint calculates the optimal distribution of macronutrients (carbohydrates, proteins, and fats) based on factors such as activity level, body composition goals, and dietary preferences.",
    "target_heart_rate_for_health_calculator_api": "This endpoint calculates the target heart rate range for cardiovascular exercise based on the user's age and fitness level. It uses the Karvonen method to determine the target heart rate zone.",
    "bacterialmeningitisscoreforchildren_for_clinicalmarkers": " ",
    "audit_for_clinicalmarkers": " ",
    "get_by_filter_for_cancer_rates_by_usa_state": "Get by filter",
    "get_by_state_for_cancer_rates_by_usa_state": "Get by state",
    "list_of_equipment_for_exercisedb": "Fetch a list of available equipment",
    "list_by_body_part_for_exercisedb": "Fetch exercises by body part",
    "list_of_target_muscles_for_exercisedb": "Fetch a list of available target muscles",
    "gives_the_bmi_when_you_input_height_in_feet_and_inches_input_weight_in_kilograms_for_bmi_v2": "The API generates the BMI in kg/m2. You need to enter the weight in kilograms and height in feet and inches",
    "gives_the_bmi_when_you_input_values_in_metric_units_for_bmi_v2": "Gives the BMI in kg/m2 when we input height in centimeters and weight in kilograms",
    "gives_the_weight_catergory_based_on_the_bmi_for_bmi_v2": "The API catergorizes the person based on the BMI. The catergories would be Underweight, Normal weight, Overweight, Obesity Class I, Obesity Class II and Obesity Class III. These definitions differ in Asians hence you may be able to enter the ethnicity of the person (Asian or not asian)",
    "fertility_window_get_for_pregnancy_calculator_api": "This endpoint accepts a GET request to calculate the fertility window.",
    "conception_date_for_pregnancy_calculator_api": "This endpoint calculates the current week of pregnancy based on the conception date.",
    "pregnancy_weight_recommendation_get_for_pregnancy_calculator_api": "This endpoint that accepts a GET request to calculate the recommended weight during pregnancy based on the user's pre-pregnancy weight, height, and current gestational age.",
    "stations_v2_get_information_for_airvisual": "Get information at specific station by its id",
    "auto_complete_deprecated_for_airvisual": "Find countries, cities, places by name",
    "v1_exercises_for_exercises_by_api_ninjas": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.",
    "gives_the_bmi_when_you_input_values_in_imperial_units_feet_inches_pounds_for_bmi_v2": "The API generates the BMI in kg/m2 when the height is entered in feet and inches and weight is entered in pounds.",
    "v1_caloriesburned_for_calories_burned_by_api_ninjas": "API Ninjas Calories Burned API endpoint.",
    "co2re_discord_for__co2_remediapi": "This webhook is external with Discord App",
    "get_appointments_for_appointment_system_api": "EndPoints returns all appointments in the date. \n\nParameter Description :\ndate : the date the appointments is requested\nclinicName : Name of the clinic\n\nReturn Value : \nIt returns json object. Json contains all the appointments in requested date.\n\nJson Format :\n\nhLabel:\"07:00\"\nid:5\naDay:\"2022-09-09T00:00:00\"\naHour:58\naName:\"Efe Kemal TASAR\"\naTel:\"+905376853054\"\naType:\"Appoint\"",
    "appointment_time_list_for_appointment_system_api": "EndPoint gets Appointment Time List by Day. EndPoint gets date parameter and returns List of Appointment Times of that date. In the list there is available field, This field indicates whether there is an appointment at the specified time.\nParameter Descriptions : \ndate --> The day that hours will be return\nclinicName --> Name of the clinic\n\nReturn Value: \nThe EndPoint returns json object in format below.\n[\n{\"id\":1\n\"hLabel\":\"07:00\"\n\"available\":\"true\"\n\"hour\":7\n\"minute\":0\n\"interval\":15\n},\n......\n]\n\nId --> is the key value of the record.\nhLabel --> is the string format of the time\navailable --> if is true that means the time is suitable for new record. If it is false that means there is another appointment in this time interval. \nhour --> Hour of the appointment time.\nminute --> Minute of the appointment time.\ninterval  --> this field points out to the interval whether 15 minutes or 30 minutes",
    "login_for_appointment_system_api": "This Endpoint is use for login to the system and getting the Api Key for the clinic. It needs username and password as query parameters. \nParameter Descriptions:\nusername --> parameter for username in the system. It is the same with username while creating the account.\npassword --> password for the username. It is same with the password while creating the acoount.\n\nReturn Value\nThis Endpoint returns string value.\nIf you get a sting with 6+ long this means that you have successfully passed username and password check and you are getting the Accesskey fort he system.\nIf you get \u201cW1\u201d it means a warning that your username doesn\u2019t exists\nIf you get \u201cW2\u201d it means a warning that your password is not correct.\nIt you get \u201cE1\u201d it means a programmatic internal error. If you get E1 in the next calls you can get help from us.",
    "view_food_items_by_type_for_ind_nutrient_api": "This request allows clients to retrieve detailed information about a food item by filtering by query param `type`.\n\nAPI request sent to [https://indnutrientsapi.tech/food?type=non-vegetarian](https://indnutrientsapi.tech/food?type=non-vegetarian)",
    "gethospitalsbyname_for_us_hospitals": "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results.",
    "gethospitalsbyid_for_us_hospitals": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.",
    "body_mass_index_for_health_calculator_api": "This endpoint calculates the BMI based on the provided height and weight parameters.",
    "daily_caloric_needs_for_health_calculator_api": "This endpoint provides a simple and efficient way to calculate daily caloric needs based on various factors such as age, weight, height, activity level, and goal. It offers different formulas or approaches for caloric needs estimation, including the popular Harris-Benedict equation and Mifflin-St. Jeor equation.",
    "bmi_imperial_for_health_calculator_api": "This endpoint calculates the BMI based on the provided height and weight parameters in imperial units.",
    "places_v2_list_by_map_for_airvisual": "List places in an area by providing a boundary box",
    "places_list_by_map_deprecated_for_airvisual": "List places in an area by providing a boundary box",
    "last_menstrual_period_lmp_for_pregnancy_calculator_api": "This endpoint calculates the estimated due date based on the user's last menstrual period (LMP)",
    "view_food_items_by_core_for_ind_nutrient_api": "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)",
    "view_all_types_with_their_food_items_for_ind_nutrient_api": "This request allows clients to retrieve a list of all available types along with the food items associated with each type.\n\nAPI request sent to [https://indnutrientsapi.tech/food/type](https://indnutrientsapi.tech/food/type)",
    "view_food_item_by_id_for_ind_nutrient_api": "This request enables clients to retrieve detailed information about a specific food item based on its unique identifier (ID)\n\nAPI request sent to [https://indnutrientsapi.tech/food/646e44df0e77ec175b88cf32](https://indnutrientsapi.tech/food/646e44df0e77ec175b88cf32)",
    "weight_category_for_body_mass_index_bmi_calculator": "Retrieve the weight category of an individual based on their BMI",
    "imperial_pounds_for_body_mass_index_bmi_calculator": "This endpoint will calculate the BMI of an individual using the imperial measurement system.",
    "metric_kilograms_for_body_mass_index_bmi_calculator": "This endpoint will calculate the BMI of an individual using the imperial measurement system.",
    "daily_water_intake_for_health_calculator_api": "The Daily Water Intake Recommendation endpoint calculates the daily recommended water intake based on factors such as weight, activity level, and climate. It provides flexibility by allowing you to specify the unit of measurement for the water intake, either in liters or ounces.",
    "list_of_all_exercises_for_exercisedb": "Fetch all exercises (non-paginated)",
    "list_by_equipment_for_exercisedb": "Fetch exercises by type of equipment",
    "ascvd_for_clinicalmarkers": " ",
    "cities_v2_get_information_for_airvisual": "Get information in specific city by its id",
    "v2_auto_complete_for_airvisual": "Find countries, cities, places by name",
    "bsa_for_clinicalmarkers": " ",
    "list_by_target_muscle_for_exercisedb": "Fetch exercises by target primary muscle",
    "ttt_for_funtrip": "ttt",
    "index_for_ski_resorts_and_conditions": "Show a list of all endpoints available",
    "resorts_for_ski_resorts_and_conditions": "Paginated list of all resorts",
    "resort_view_for_ski_resorts_and_conditions": "View the information of a resort",
    "end1_for_voo": "Para ver voos baratos",
    "listing_prices_for_airbnb_listings": "Retrieve listing prices for the requested month",
    "listing_prices_full_for_airbnb_listings": "Retrieve listing prices for the next 12 months",
    "count_listings_by_market_for_airbnb_listings": "Retrieve listings count in the specified market. Can be filtered on bedrooms and max guest capacity",
    "flight_for_flight_flight_aggregator": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.",
    "results_for_kayak_flights": "Pricing and results data as it appears on the source website.",
    "manage_booking_for_get_ticket_information": "Manage_Booking",
    "get_airports_by_city_for_airports_finder": "The \"Get Airports By City\" API enables you to effortlessly retrieve a list of airports based on a specific city. This API provides comprehensive details about airports, including their names, IATA codes, locations, and additional information.",
    "get_airports_by_country_for_airports_finder": "The \"Get Airports By Country\" API allows you to easily retrieve a list of airports based on a specific country. This API provides comprehensive details about airports, including their names, IATA codes, locations, and additional information.",
    "get_airport_details_by_code_for_airports_finder": "The \"Get Airport Details By Code\" API allows you to quickly retrieve comprehensive information about airports based on their IATA codes. Obtain precise details such as airport names, locations, time zones, and more with this efficient and reliable API.",
    "autocomplete_for_airbnb_search": "Find location for search",
    "property_details_for_airbnb_search": "Property details",
    "get_currency_for_airbnb_search": "Get Currency",
    "search_arrivals_by_flight_for_british_airways_flight_info": "",
    "search_arrivals_by_route_for_british_airways_flight_info": "",
    "search_departures_by_route_for_british_airways_flight_info": "",
    "hotels_for_zumata": "",
    "healthcheck_for_zumata": "",
    "hotels_minimal_for_zumata": "",
    "api_1_0_programs_for_where_to_credit": " ",
    "api_tripdetails_mfref_for_asr_hub": "Retrives the TripDetails based on the  MFRef Number\r\n- MFRef",
    "api_schedulechangeaccept_mfref_flightid_for_asr_hub": "Accept Schedule Change based on the UserInputs\r\n - MFRef\r\n - Flight Id",
    "usacitieslist_for_gas_price": "The service that get list of cities with price information in the USA.",
    "europeancountries_for_gas_price": "Service that brings up the current gasoline prices at european countries.",
    "allusaprice_for_gas_price": "Service that brings the average current gasoline prices of states in America.",
    "station_information_for_bart": "",
    "schedule_information_for_bart": "",
    "route_information_for_bart": "",
    "flightslogic_flight_api_for_flightslogic_flight": "FlightsLogic provides Flight API integration within your new or existing online travel website. Flight API integration connects travel agents and customers across the globe, extensively broadening your market reach. We deliver Flight API Integration Solution- one of the most reliable and most trusted Global Distribution Systems (GDS), that helps the travel portals get the best service suppliers by their side to broadcast their effective services at the portal and that successively can bring vast website traffic as well.",
    "get_all_cities_for_biggest_cities": "Get all cites",
    "biggest_cities_for_biggest_cities": "Biggest cities",
    "search_restaurants_for_tripadvisor": "-",
    "get_hotel_details_for_tripadvisor": "-",
    "get_cruises_details_for_tripadvisor": "-",
    "search_trips_for_sbb_suisse_railway": "Find trips between two stations",
    "autocomplete_for_sbb_suisse_railway": "Search for train and public transport stations in Switzerland and across Europe",
    "https_flightslogic_com_about_php_for_flightslogic_s_flight_booking_flight_booking_software": "FlightsLogic provides Flight Booking Software, Flight Booking API to the travel agents, tour operators and travel companies worldwide.",
    "new_search_for_traveldax": "Add a new search to the queue. It will be executed in real time.",
    "insights_for_traveldax": "Access all the processed insights in order to boost revenue on metasearch channels.",
    "hotels_dynamic_for_zumata": "",
    "webcams_list_limit_limit_offset_for_webcams_travel": "This is a modifier. Returns the list of webcams sliced by {limit}. The optional offset is given by {offset}. Required: {limit}. The maximum value for {limit} is 50. {offset} defaults to 0. If limit is not given, then a default of limit=10 is applied.",
    "webcams_list_webcam_webcamid_webcamid_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed {webcamid}s. Multiple {webcamid}s must be separated by comma. Required: at least one {webcamid}.",
    "webcams_list_nearby_lat_lng_radius_for_webcams_travel": "This is a modifier. Returns a list of webcams near the given coordinates {lat},{lng} up to the given {radius} in kilometers. Required: {lat}, {lng}, {radius}. The maximum value for {radius} is 250.",
    "live_train_running_status_for_real_time_pnr_status_api_for_indian_railways": "Live Train Running Status is a crucial keyword in the world of railway transportation, and Qrail is one of the leading providers of this service. With Live Train Running Status, passengers can get real-time updates on the current location and running status of their train, including expected arrival and departure times. Qrail's Live Train Running Status service is highly reliable and accurate, providing passengers with peace of mind and ensuring that they arrive at their destinations on time. With this service, passengers can plan their journey better and avoid any inconvenience caused by unexpected delays or cancellations.",
    "pnr_status_for_real_time_pnr_status_api_for_indian_railways": "This is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations. This API is designed for educational purposes only and is not affiliated with Indian Railways in any way.",
    "usa_borders_waiting_times_for_borders": "Returns all usa ports with description and wait times.",
    "airport_info_for_airports_info_": "Get airport details\nIf you want a specific airport, say it in a comment",
    "stations_list_for_irail": "",
    "departures_for_irail": "Departures of trains in Belgium",
    "get_train_live_status_for_irctc": "This API will take train no and day of journey, and will return current status of train with other informations.",
    "get_fare_for_irctc": "-",
    "checkpnrstatus_for_irctc": "-",
    "get_distance_for_great_circle_math_api": "Returns the circle math distance in miles.",
    "get_distance_by_city_state_country_in_km_for_great_circle_math_api": "Takes city, state, and country of both locations and returns latitude, longitude, and calculated miles in kilometers.",
    "get_distance_in_km_for_great_circle_math_api": "Returns circle math distance in kilometers.",
    "hotel_slug_convert_for_hotels_com_provider": "Get Hotel ID from Hotel Site slug, (https://hotels.com/ho219115) `ho219115` -> `1105156`",
    "hotel_details_for_hotels_com_provider": "Get hotel details",
    "reviews_list_for_hotels_com_provider": "Get hotel reviews list",
    "search_today_s_arrivals_by_time_for_british_airways_flight_info": "",
    "get_cities_list_for_cities_cost_of_living": "Get a list of all the Cities available",
    "get_currencies_list_for_cities_cost_of_living": "Get a list of all the Currencies available",
    "locations_for_skyscanner_api": "Geographical locations have the concept of hierarchy. Each location has a parent of a larger hierarchy.  I.e.: a place `type` of `airport` can have a parent of `city` and `city` can have a parent of `country`.",
    "locales_for_skyscanner_api": "You can use the `/locales` endpoint to retrieve the locales that we support to translate your content. The names of the locales returned are in the native language associated with the locale.",
    "markets_for_skyscanner_api": "You can use the `/markets` endpoint to retrieve the market countries that we support. Most suppliers (airlines, travel agents, and car hire dealers) set their fares based on the market (or country of purchase). It is therefore necessary to specify the market country in every query. The names of the markets returned are localised based on a locale passed as a parameter.",
    "advisory_information_for_bart": "",
    "real_time_information_for_bart": "",
    "camlist_for_tsaboin_cams": "List all available traffic cameras",
    "b2b_travel_portal_development_with_api_integration_for_travel_api_s": "TravelPD offers affordable travel portal development solutions with travel API integration and travel portal software. ",
    "searchairports_for_world_airports_directory": "Primary API to  get all the matching airports based on the keyword you pass in the params. API runs best matching algorithm to find most relevant airports matching with either city, city code or airport code and so on.\n**BONUS**: It returns complete `Airport Name, Lat, Long, Timezone, Country, Country Code, Airport Code and City Code.`\n\nNOTE: This API is case insensitive.\n\nFor e.g.\n1. When user trying with city `/v1/airports/dubai`\n2. When user trying with Airport Code `/v1/airports/dxb`\n3. When user trying with city code `/v1/airports/omdb`",
    "listallairports_for_world_airports_directory": "API to explore all airports we have in our huge directory.",
    "get_trip_plan_for_ai_trip_planner": "This endpoint is used to generate trip plan based on no. of days and destination.",
    "get_top_tier_stays_filter_for_airbnb_v2": "-",
    "get_host_language_filters_for_airbnb_v2": "-",
    "get_property_type_filters_for_airbnb_v2": "-",
    "ranked_world_crime_cities_for_ranked_crime_cities": "Ranked World Crime cities",
    "get_city_by_filter_for_ranked_crime_cities": "Get city by filter",
    "query_divesites_by_gps_boundaries_for_use_with_maps_for_world_scuba_diving_sites_api": "The API endpoint that queries dive sites by GPS boundaries allows developers to search for dive sites within a specified geographical region, defined by a set of latitude and longitude coordinates. This endpoint can be particularly useful for creating interactive maps or applications that require displaying dive sites within a specific area. To use it add the four map bounds as query params",
    "query_divesites_by_a_country_or_a_region_for_world_scuba_diving_sites_api": "The endpoint returns a json list of dive sites which match the region or country entered as the query. The range of results depend but there is usually around 100-500 sites for each country. There are around 15'000 dive sites listed in the database.",
    "get_all_cities_for_biggestcities": "Get All Cities",
    "get_cities_by_filter_for_biggestcities": "Get Cities by filter",
    "test_for_52_in_kicks": "test",
    "get_flights_v1_cancel_for_tripvair_ai_flight_cancel_predictor": "Offers a statistical  probability of a future flight being cancelled using deep learning AI from 7 days up to 363 days in advance",
    "list_of_hotel_facility_types_for_booking_com": "Returns hotel facility types names and their translations",
    "rental_extras_for_booking_com": "Get additional services when renting",
    "car_rental_details_for_booking_com": "Car rental details by vehicle_id. First, call `Search car rental`",
    "get_airports_by_coordinates_for_airports_finder": "The \"Get Airports By Coordinates\" API enables you to retrieve a list of airports based on specific latitude and longitude coordinates. By providing the latitude and longitude values, this API returns comprehensive details about airports located within that vicinity. This information includes airport names, IATA codes, locations, and additional relevant data.",
    "search_departures_by_flight_for_british_airways_flight_info": "",
    "stateusaprice_for_gas_price": "The service that brings gas prices in the United States by state.",
    "results_for_skyscanner_flights": "Pricing and results data as it appears on the source website.",
    "get_timetable_for_flixbus_v2": "Returns timetable for a given station id and date",
    "autocomplete_for_flixbus_v2": "Search for Flixbus stations",
    "search_trips_for_flixbus_v2": "Search trips between two cities or stations",
    "the_popular_directions_from_a_city_for_flight_data_v2": "Brings the most popular directions from a specified city back.",
    "tickets_for_each_day_of_month_for_flight_data_v2": "Returns the cheapest non-stop, one-stop, and two-stop flights for the selected route for each day of the selected month",
    "the_calendar_of_prices_for_a_month_for_flight_data_v2": "Brings the prices for each day of a month, grouped together by the number of transfers, back",
    "chronovoyages_for_chronovoyages": "Chronovoyages",
    "connect_test_for_airbnb_listings": "No parameters needed. Useful to test connectivity and authentication",
    "listings_by_lat_lng_for_airbnb_listings": "Retrieve listings ids, distance from starting point and last updated dates for prices, availability and ratings in a range from a given geographical point. Returns 50 results. Can be filtered on bedrooms and max guest capacity",
    "prices_and_availability_by_lat_lng_for_airbnb_listings": "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in a range from a given geographical point. Max range is 20000 meters. Can be filtered on bedrooms and max guest capacity.",
    "listing_availability_full_for_airbnb_listings": "Retrieve listing availability and stay length rules for the next 12 months\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.",
    "listing_status_for_airbnb_listings": "Retrieve the calculated status (available/not available for stay) of a listing based on previous and following days stay rules.",
    "reviews_list_deprecated_for_hotels": "Get all reviews of specific property",
    "properties_get_hotel_photos_deprecated_for_hotels": "Get all available photos of property",
    "locations_v2_search_deprecated_for_hotels": "Search for related locations and suggestions",
    "get_currency_for_airbnb_v2": "-",
    "search_property_for_airbnb_v2": "-",
    "search_property_by_place_for_airbnb_v2": "-",
    "get_accessibility_filters_for_airbnb_v2": "-",
    "hotel_summary_for_hotels_com_provider": "Get hotel summary",
    "hotels_search_for_hotels_com_provider": "Get hotels by the filter. Set the `domain`, it is necessary for localization at the currency setting. (meta / Domains List). `accessibility` parameter, needed to get ONLY available hotels. Indicate the `region_id` -> use `Region Search`, check-in and check-out date, number of adults and children",
    "get_train_schedule_for_irctc": "-",
    "searchtrain_for_irctc": " ",
    "travel_technology_for_travelo_pro": "Travelopro provides travel API integration, third party API integration, xml API integration services for hotels, flights, car rentals, holiday packages and many more.",
    "get_property_checkout_price_for_airbnb_v2": "This API will return the checkout cost of the Property",
    "data_on_the_routes_in_json_format_for_flight_data_v2": "The query returns a file with a list of routes from the database.",
    "the_prices_for_the_airline_tickets_for_flight_data_v2": "Brings back to the list of prices, found by our users during the recent 48 hours according to the filters used.",
    "alliance_data_in_json_format_for_flight_data_v2": "API returns a file with a list of alliances from the database",
    "rental_terms_for_booking_com": "Rental terms and conditions by pick up location_id",
    "list_of_regions_for_booking_com": "Returns all the regions where Booking offers hotels.",
    "review_scores_of_the_hotel_for_booking_com": "Get review scores of the hotel by hotel_id",
    "search_hotels_for_priceline_com_provider": "Get available hotels by the filter. Indicate the `location_id` -> use `Search locations`, check-in and check-out date",
    "search_hotels_locations_for_priceline_com_provider": "Search locations by name",
    "search_express_multi_contract_for_priceline_com_provider": "Provides hotel and multiple rates information per hotel using the getExpress.MultiContract endpoint.",
    "languages_for_booking_com_v2": "Get languages",
    "stays_properties_detail_description_for_booking_com_v2": "Get detail description",
    "stays_properties_list_by_url_for_booking_com_v2": "Search by url",
    "currencies_for_skyscanner_api": "You can use the `/currencies` endpoint to retrieve the currencies that we support and information about how we format them in Skyscanner.",
    "carriers_for_skyscanner_api": "The Carriers API returns a full list of active carriers with name and IATA code indexed by their carrierId.",
    "visa_requirements_for_visa_requirements": " ",
    "statuses_for_visa_requirements": " ",
    "countries_for_visa_requirements": " ",
    "reviews_scores_for_hotels_com_provider": "Get hotel overall score",
    "regions_search_for_hotels_com_provider": "Search region, locations, city or hotel by name",
    "canada_for_gas_price": "The service that brings gas prices in the Canada.",
    "get_hotel_price_for_skyscanner_v2": "Get the detail price for the hotel and room selected.",
    "get_flight_details_for_skyscanner_v2": "Get all the details of the fights based on a unique Id.",
    "search_location_for_skyscanner_v2": "Use this API to get EntityId for the pickup and drop location.",
    "get_by_homicide_rate_for_world_cities_by_homicide_rate": "Get by homicide rate",
    "get_by_filter_for_world_cities_by_homicide_rate": "Get by filter",
    "reviews_summary_for_hotels_com_provider": "Get hotel reviews summary",
    "download_locations_for_priceline_com_provider": "Downloads a list of Locations",
    "auto_suggest_for_priceline_com_provider": "This API will provide a list of possible cities and hotels for a given search string",
    "download_airports_for_priceline_com_provider": "Downloads a list of Airports",
    "webcams_list_region_region_region_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed region. Multiple regions must be separated by comma. Required: at least one {region}. Possible values are ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot.",
    "get_all_iata_airport_codes_for_iata_airport_codes": "Get all iata airport codes",
    "thai4_for_thailand": "thai4",
    "download_cities_for_priceline_com_provider": "Downloads a list of cities",
    "search_round_trip_for_priceline_com_provider": "Returns a contract for a flight round trip search through the getFlightRoundTrip endpoint",
    "properties_v2_resolve_url_for_hotels": "Hotels system is being merged with Expedia. This endpoint helps to convert the old hotel ID (embedded in the shared link, Ex : \"ho133528\" in hotels.com/ho133528/) to the new one (423818).",
    "v2_get_meta_data_for_hotels": "Get locale meta data",
    "autocomplete_for_deutsche_bahn": "Search for train and public transport stations in Germany and across Europe",
    "search_trips_for_deutsche_bahn": "Find trips between two stations",
    "flight_for_flight_integration": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.",
    "flight_integration_for_flight_integration": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.",
    "flight_aggregator_for_flight_airline_consolidator_flight_aggregator": "FlightsLogic Global Airfare APIs connect you to the finest information in the travel industry. You can now build, innovate and launch your web and Mobile applications with our Flight API. Inspirational search features combine our Global Airfare APIs with your existing travel offering to complement your product range.",
    "search_results_v_for_priceline_com_provider": "The getResultsRequest endpoint returns car availability based on the provided search criteria",
    "download_countries_for_priceline_com_provider": "Downloads a list of countries",
    "search_results_request_for_priceline_com_provider": "The getResultsRequest endpoint returns car availability based on the provided search criteria",
    "search_today_s_departures_by_time_for_british_airways_flight_info": "",
    "properties_get_featured_reviews_for_booking": "Get featured reviews of stayed guests",
    "currency_get_exchange_rates_for_booking": "Get currency exchange rates between different countries",
    "properties_get_description_for_booking": "Get description of property by id",
    "stations_for_flixbus": "Get a list of stations",
    "cities_for_flixbus": "Get a list of cities",
    "schedule_for_flixbus": "Get a list of schedule",
    "bus_detours_for_septa": "",
    "twitter_for_septa": "",
    "bus_trolley_routes_for_septa": "",
    "lista_for_vuelos": "cualquiera",
    "aeropuerto_for_vuelos": "Location search",
    "trainsbetweenstations_v3_for_irctc": "-",
    "travelopro_for_travelopro_": "Travelopro is the best leading travel technology company ",
    "properties_get_details_deprecated_for_hotels": "Get all available information of a property",
    "reviews_v2_list_deprecated_for_hotels": "Get all reviews of specific property",
    "flight_api_for_flight_v2": "FlightsLogic Global Airfare APIs connect you to the finest information in the travel industry. You can now build, innovate and launch your web and Mobile applications with our Flight API. Inspirational search features combine our Global Airfare APIs with your existing travel offering to complement your product range.",
    "stays_properties_detail_facilities_for_booking_com_v2": "Get detail facilities",
    "isupdate_for_turkey_public_holidays": "Not Necessary",
    "get_distance_by_city_state_country_for_great_circle_math_api": "Takes city, state, and country of both locations and returns latitude, longitude, and calculated miles.",
    "hotel_info_for_hotels_com_provider": "Get hotel info",
    "domains_list_for_hotels_com_provider": "Get a list of Domains, available domains code, currencies and locales",
    "get_meta_data_deprecated_for_hotels": "Get locale meta data",
    "properties_list_deprecated_for_hotels": "List properties with options and filters",
    "locations_search_deprecated_for_hotels": "Search for related locations and suggestions",
    "middle_east_for_nomad_list_cities": "Get Middle East cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "asia_for_nomad_list_cities": "Get Asian cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "africa_for_nomad_list_cities": "Get African cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "webcams_list_continent_continent_continent_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed continents. Multiple continents must be separated by comma. Required: at least one {continent}.",
    "webcams_list_bbox_ne_lat_ne_lng_sw_lat_sw_lng_for_webcams_travel": "This is a modifier. Returns a list of the webcams in the bounding box given by north-east ({ne_lat},{ne_lng}) and south-west ({sw_lat},{sw_lng}) coordinates. Required: {ne_lat},{ne_lng},{sw_lat},{sw_lng}.",
    "webcams_list_orderby_order_sort_for_webcams_travel": "This is a modifier. Returns the list of webcams ordered by {order}. The optional sorting direction is given by {sort}. Required {order}.",
    "get_for_tripit": "A get request is used to retrieve a specific object from the TripIt API given its TripIt object ID. Since get requests do not change data they are all made via an HTTP GET request for a URL that takes the following form:",
    "list_for_tripit": "A list request is used to retrieve multiple objects given an object type and set of filter parameters. Since list requests do not change data they are all made via an HTTP GET request for a URL that takes the following form:",
    "delete_for_tripit": "A delete request is used to delete existing objects",
    "amenities_for_airbnb_listings": "Retrieves amenities ids And descriptions. Returns 50 results",
    "search_hotel_for_skyscanner_v2": "Get and poll hotel room search with prices, filter etc.",
    "get_hotel_filters_for_skyscanner_v2": "This API is used to get all the available filters for the place to visit.",
    "get_hotel_reviews_for_skyscanner_v2": "Get all the review related to the hotel selected.",
    "get_pnr_status_v3_for_irctc": "-",
    "tips_of_the_hotel_for_booking_com": "Get guest tips of the hotel by hotel_id",
    "list_of_countries_for_booking_com": "Returns all the country where booking offers hotels.",
    "payment_features_of_the_hotel_for_booking_com": "Get payment features of the hotel by hotel_id",
    "properties_get_facilities_for_booking": "Get facilities of property by id",
    "review_filters_list_for_booking": "List supported options metadata for filtering reviews",
    "webcams_list_category_category_category_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed categories. Multiple categories must be separated by comma. Required: at least one {category}.",
    "search_flights_multi_stops_for_skyscanner_v2": "Get and poll all flights. Searching the flights between multiple locations with prices, filter, sorting etc.",
    "test_api_for_skyscanner_v2": "This API is to test if server is up and running",
    "get_alerts_for_septa": "",
    "plain_text_bus_schedules_for_septa": "Intended for SMS.",
    "next_to_arrive_for_septa": "Fetch a list of regional rail trains that will soon be traveling from point A to point B.",
    "get_category_for_airbnb_v2": "-",
    "get_property_details_v2_for_airbnb_v2": "-",
    "search_destination_for_airbnb_v2": "-",
    "bus_trolley_schedules_for_septa": "",
    "get_locations_for_septa": "",
    "regional_rail_schedules_for_septa": "By train number, lol.",
    "query_dive_operators_by_a_country_or_a_region_for_world_dive_centres_api": "The endpoint returns a json list of dive sites which match the region or country entered as the query. The range of results depend but there is usually around 100-500 sites for each country. There are around 15'000 dive sites listed in the database.",
    "north_america_for_nomad_list_cities": "Get North America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "latin_america_for_nomad_list_cities": "Get Latin America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "get_stations_for_vehicle_charging_stations_": "Return nearest charging stations within\nA POI (Point of Interest), also referred to as a Site or ChargePoint, is the top-level set of information regarding a geographic site with one or more electric vehicle charging equipment present.",
    "hotel_children_policy_for_booking_com": "Get hotel children policy by hotel_id",
    "list_of_hotels_for_booking_com": "This call returns the hotel and room data. List of hotels",
    "list_of_cities_for_booking_com": "Returns a list of cities where Booking.com offers hotels. location: Latitude and longitude. timezone: Timezone of the city.",
    "locations_v3_search_for_hotels": "Search for related locations and suggestions",
    "listing_details_for_airbnb_listings": "Retrieve listing details.",
    "count_listings_by_administrative_divisions_for_airbnb_listings": "Retrieve listings count in the specified geographic area. Geocrafic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Can be filtered on bedrooms and max guest capacity",
    "get_similar_hotels_for_skyscanner_v2": "Get all the similar hotels based on the selected hotel.",
    "get_config_for_skyscanner_v2": "This API endpoint is responsible for providing  some of the parameters require for most of the API's.",
    "search_place_for_skyscanner_v2": "Search for a place to get the **entityId** needed in searching the hotel API.",
    "trip_details_for_flixbus": "Get a trip details by trip uid",
    "street_for_streetnarrator": "StreetNarrator API Get a unique history/touristic AI text for any street around the world",
    "cheapest_tickets_grouped_by_month_for_flight_data_v2": "Returns the cheapest non-stop tickets, as well as tickets with 1 or 2 stops, for the selected route grouped by month.",
    "data_of_countries_in_json_format_for_flight_data_v2": "API returns a file with a list of countrys from the database",
    "checkseatavailability_for_irctc": "-",
    "search_trips_for_flixbus": "Search trips from-to. Specify for which parameters (from_id, to_id) you are looking for, city or station",
    "stays_properties_detail_policies_for_booking_com_v2": "Get detail policies",
    "stays_properties_detail_photos_for_booking_com_v2": "Get detail photos",
    "oceania_for_nomad_list_cities": "Get Oceania cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "all_citites_for_nomad_list_cities": "Get all cities sorted by overall score.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "searchstation_for_irctc": " ",
    "getfare_for_irctc": " ",
    "airplane_data_in_json_format_for_flight_data_v2": "API returns a file with a list of airplanes from the database",
    "the_calendar_of_prices_for_a_week_for_flight_data_v2": "Brings the prices for the nearest dates to the target ones back",
    "list_of_districts_for_booking_com": "Returns all the districts where Booking offers hotels.",
    "important_information_for_booking_com": "Important information of vehicles",
    "description_of_the_hotel_for_booking_com": "Get description of the hotel by hotel_id",
    "get_type_of_place_filters_for_airbnb_v2": "-",
    "search_property_by_geo_co_ordinates_v2_for_airbnb_v2": "-",
    "webcams_map_ne_lat_ne_lng_sw_lat_sw_lng_zoom_for_webcams_travel": "Returns a list of webcams optimized for displaying on a map for a given bounding box and {zoom} level. The value for the zoom level is compatible with the Google Maps zoom level.",
    "webcams_list_modifier_modifier_for_webcams_travel": "Returns a list of webcams according to the applied {modifier}s. Initially, the list contains all webcams. The resulting list of webcams from applying a modifer will be used as input for the following modifier. modifiers are processed from left to right. With every applied modifier, the list of webcams will be narrowed down. Possible values for {modifier} are: \"webcam\" (initial list of webcams), \"nearby\" (list of webcams around a position), \"bbox\" (list of webcams in an area), \"category\" (list of webcams in a category), \"continent\" (list of webcams in a continent), \"country\" (list of webcams in a country), \"region\" (list of webcams in a region of a country), \"exclude\" (exclude webcams from a list of webcams), \"orderby\" (order the list of webcams), \"limit\" (slice the list of webcams). \"webcam\", if given, is always applied first. \"exclude\", \"orderby\", and \"limit\" are always applied (even if not explicitly given) in this order and always after \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" have been applied.  If none of \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" are applied, then all webcams are in the list before applying \"exclude\", \"orderby\", and \"limit\".  Please refer to the description of the various {modifier}s to learn more about their parameter and defaults.  A {modifier} may be applied only once. If a {modifier} is listed multiple times, it may only applied once.",
    "webcams_list_country_country_country_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed country. Multiple countries must be separated by comma. Required: at least one {country}. Possible values are ISO 3166-1-alpha-2 codes.",
    "properties_list_for_booking": "List properties having type of resorts, hotels, motels, hostels, etc as on official site",
    "reviews_get_scores_for_booking": "Get reviewing scores",
    "flight_search_v2_for_flight_fare_search": "A faster, more agile Endpoint that's used to search flights.",
    "airport_departues_for_flight_fare_search": "An endpoint to get Departues in an airport",
    "airport_arrivals_for_flight_fare_search": "An Endpoint to fetch Arrivals on a given date",
    "gettrainclasses_for_irctc": " ",
    "reviews_about_the_supplier_of_vehicles_for_booking_com": "Reviews about the supplier of vehicles by location_id",
    "search_hotels_for_booking_com": "Get available hotels by the filter. Indicate the `destination_id` and `dest_type` -> use **@Search locations** endpoint, check-in and check-out date, number of adults and children. For possible filters use **@Filters for search** endpoint. Use `page_number` to paginate and navigate through the result pages! <br/> Comparable to: ![Search locations](https://i.imgur.com/PCuK81r.png)",
    "reviews_of_the_hotel_for_booking_com": "Get reviews of the hotel by hotel_id",
    "search_airport_for_skyscanner_v2": "This API endpoint is responsible for providing a list of Airports for the location.",
    "aircraftinfo_for_flightera_flight_data": "Returns detailed aircraft information for an aircraft identified by registration.\nOnly works for currently active aircraft",
    "flightinfo_for_flightera_flight_data": "Returns the info for a flight on a specified date, or the current flight if date is omitted. Will return a 400 if the date requested is outside the subscription level",
    "flightstatistics_for_flightera_flight_data": "Returns statistics for a flight number with one entry per route flown. Statistics are updated daily.\nThe query can be filtered by route.\nStatistics are always as of today, please contact us if you require historical statistics.",
    "reviews_list_for_booking": "List reviews of stayed guests",
    "properties_detail_for_booking": "Get brief information of a property",
    "search_flights_for_priceline_com_provider": "Search flights. Set type: `ONE_WAY` or `ROUND_TRIP`. Set location_departure and location_arrival, use `/flights/locations` api point. You can filter out tickets by price, max duration and number of stops",
    "hotel_reviews_for_priceline_com_provider": "This API returns a list of reviews",
    "listings_by_market_for_airbnb_listings": "Retrieve listings ids and last updated dates for prices, availability and ratings in the specified market. Returns 50 results. Can be filtered on bedrooms and max guest capacity",
    "listing_status_full_for_airbnb_listings": "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules.",
    "flightsearch_for_flightera_flight_data": "Returns a list of flights for a given flight number. Minimum and/or maximum date can optionally be specified to limit the search. Results are ordered by departure date ascending. The next departure time is returned for pagination.\nWill return a 400 if the date range requested is outside the subscription level",
    "get_property_reviews_for_airbnb_v2": "-",
    "rental_availability_for_tripadvisor": "-",
    "rental_reviews_for_tripadvisor": "-",
    "locations_auto_complete_for_booking": "List suggested locations by countries, cities, districts, places name",
    "properties_get_hotel_photos_for_booking": "Get photos of hotel",
    "get_property_details_depreciates_for_airbnb_v2": "-",
    "download_states_for_priceline_com_provider": "Downloads a list of Satets ",
    "download_cities_clusters_for_priceline_com_provider": "Downloads a list of Hotel cities clusters",
    "search_cars_for_skyscanner_v2": "Use this API for searching the cars for hire based on location.",
    "search_car_rentals_for_priceline_com_provider": "Search car rentals by filter. Indicate the `location_id` -> use `Search locations` api point",
    "getukrail_for_ukrail": "Query the API to get rail data.",
    "search_flights_for_skyscanner_v2": "Get and poll all flights, search between origin and destination with prices, filter, sorting.",
    "airport_data_in_json_format_for_flight_data_v2": "API returns a file with a list of airports from the database",
    "airline_data_in_json_format_for_flight_data_v2": "API returns a file with a list of airlines from the database",
    "non_stop_tickets_for_flight_data_v2": "Returns the cheapest non-stop tickets for the selected route with departure/return date filters.",
    "prices_and_availability_by_administrative_divisions_for_airbnb_listings": "Retrieve average Price, average price of available properties only, availability percent and number of processed properties in an geographical administrative division. Geographic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Can be filtered on bedrooms and max guest capacity.",
    "search_hotels_by_coordinates_for_booking_com": "Get available hotels by coordinates latitude and longitude",
    "get_languages_for_airbnb_v2": "-",
    "search_airport_for_tripadvisor": "-",
    "get_currency_for_tripadvisor": "-",
    "search_hotels_for_tripadvisor": "-",
    "search_property_by_geo_co_ordinates_deprecated_for_airbnb_v2": "-",
    "get_amenities_filters_for_airbnb_v2": "-",
    "hotels_search_for_booking_com": "Get available hotels by the filter. Indicate the `destination_id` and `dest_type` -> use **@Search locations** endpoint, check-in and check-out date, number of adults and children. For possible filters use **@Filters for search** endpoint. Use `page_number` to paginate and navigate through the result pages! <br/> Comparable to: ![Search locations](https://i.imgur.com/PCuK81r.png)",
    "download_property_types_for_priceline_com_provider": "Downloads Property Types list ",
    "stays_properties_list_for_booking_com_v2": "Get list",
    "currencies_for_booking_com_v2": "Get currencies",
    "stays_auto_complete_for_booking_com_v2": "Auto complete",
    "express_contract_for_priceline_com_provider": "Provides the hotel inventory and corresponding rates for Express (cache) or Closed User Group (live) ",
    "download_companies_for_priceline_com_provider": "Downloads a list of companies",
    "api_docs_for_complete_criminal_checks_offender_data": "Easily create your links!",
    "get_call_for_passport_verification": "Used to fetch api result using the request id received in responses.",
    "search_all_cars_for_all_cars_names_image_and_variants_info": "This API will fetch you all cars list, \nIf you need bike details change **vehicle_type** from \"car\" to \"bike\".",
    "all_strains_for_weed_strain": "Provides a list of all available strains.",
    "search_for_weed_strain": "Provides list of results by search keyword.",
    "strain_type_for_weed_strain": "Provides a list of results by strain type such as Indica, Sativa, Hybrid, etc.",
    "get_call_for_icai_chartered_accountant_verification": "Used to fetch api result using the request id received in responses.",
    "summery_for_summery": "dahsboard summery",
    "summery_copy_for_summery": "dahsboard summery",
    "fur_color_for_catbreeddb": "Gives a list of all cats with the color as provided in the parameter.",
    "order_by_descending_for_catbreeddb": "Gives a list of all cats sorted in descending order by name.",
    "origin_for_catbreeddb": "Gives a list of all cats with the origin country.",
    "random_roman_god_for_roman_gods_by_pizza_api": "Returns information about a random Roman God",
    "search_roman_god_by_name_for_roman_gods_by_pizza_api": "Search for a Roman God By name to get a description about them",
    "veiculo_tipo_id_marca_for_veiculos_api": "Retorna listagem dos ve\u00edculos de uma determinada marca.",
    "veiculo_tipo_id_marca_id_modelo_id_modelo_ano_for_veiculos_api": "/",
    "veiculo_tipo_for_veiculos_api": "Retorna as marcas do tipo selecionado, os tipos dispon\u00edveis s\u00e3o \"carros\", \"motos\" e \"caminhoes\".",
    "switches_for_light_switch": "This endpoint helps you read all the switches and their state",
    "api_v1_for_reverse_ip": "Reverse IP API",
    "read_transactions_for_felina_multisig_wallet_api": "Fetch the list of transactions submitted to the database.",
    "get_nfts_for_felina_multisig_wallet_api": "Fetch the list of owned NFTs by the wallet",
    "api_v1_for_reverse_mx": "",
    "whois_history_v1_for_whois_history": "Check Whois  record's history",
    "cnpj_for_dados_cnpj": "Buscar dados empresa pelo CNPJ",
    "consulta_por_cpf_for_consulta_cpf_cnpj_brasil": "**Consulta por CPF endpoint**",
    "consulta_por_cnpj_for_consulta_cpf_cnpj_brasil": "**Consulta dados e informa\u00e7\u00f5es do CNPJ, a demanda de informa\u00e7\u00f5es est\u00e1 sempre sendo atualizada para melhor atende-los **",
    "consulta_dados_societ_rios_for_consulta_cpf_cnpj_brasil": "**## consulta dados dos s\u00f3cios do cnpj consultado pelo id_socio**",
    "get_list_of_languages_for_businessmate": "Get list of languages",
    "verify_pan_card_for_pan_card_verification_at_lowest_price": "Instant PAN Card Verification using government database check.\n\nThis PAN Card Verification API instantly verifies details of a PAN Card by confirming them from the Government database.\n\nThis makes your onboarding process faster, safer and smarter. With our PAN verification, you can be confident that the individuals or merchants you onboard hold a valid PAN card and have provided you with the right identity proof.",
    "detail_info_for_suggestuse": "Get detail info by application name",
    "search_application_for_suggestuse": "Search Application",
    "view_user_list_for_python_libraries_tst": "Gets a user\u2019s list of favorite libraries.",
    "get_call_for_india_bankruptcy_verification": "Used to fetch api result using the request id received in responses.",
    "search_for_geo_coder_dev": "Search addresses",
    "get_call_for_mci_nmc_doctor_verification": "Used to fetch api result using the request id received in responses.",
    "get_classes_infomation_for_classes": "get all classes",
    "whois_lookup_v2_for_whois_v2": "WHOIS lookup in JSON or XML, ver. 2",
    "get_test_for_fwd_api": "test the endpoint response",
    "query_for_timedb": "InfluxDB Query (v1.8)",
    "results_for_timedb": "Returns latest results for a query associated to a given `webhookId`.",
    "webhooks_for_timedb": "Retrieve a list of existing webhooks.",
    "get_tenant_for_mongodb_wix": "Use this call to get the Tenant name, This name will be used in the configuration section on wix. e.g. {\"Yauthtenantname\":\"<TENANT_NAME>\"}",
    "data_by_id_for_mongodb_wix": "Returns data (case) by id",
    "search_data_for_mongodb_wix": "Data also referred as case is searched using this api",
    "get_call_for_indian_bank_statement": "Used to fetch api result using the request id received in responses.",
    "data_breach_checker_endpoint_for_data_breach_checker": "The Data Breach Checker API provides a simple endpoint for users to check if their email has been compromised in any known data breaches.",
    "get_by_common_name_for_house_plants": "Retrieves all plants that match a given common plant name.",
    "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.",
    "get_by_origin_for_house_plants": "Get plants by their origin.",
    "get_call_for_udyam_aadhaar_verification": "Get call is to be made by appending request id to the url in the query parameter, to fetch the api results.",
    "historic_event_by_year_for_world_history_timeline": "Give an year in the query and it returns all the available events from that year",
    "random_historic_event_for_world_history_timeline": "Returns a Random World Historic Event with the year and the event",
    "business_address_search_for_data_axle_business_address_search": "Find relevant businesses in the Data Axle database",
    "consumer_phone_search_for_data_axle_consumer_phone_search": "Find relevant People in the Data Axle database",
    "test_for_test": "1",
    "search_philosopher_by_name_for_list_of_philosophers": "Search for a philosopher by their name",
    "random_philosopher_for_list_of_philosophers": "Returns information of a random philosopher",
    "domain_type_for_sitedomain": "\u5c55\u5225\u985e\u578b",
    "theme_detail_for_sitedomain": "\u53d6\u5f97\u4e3b\u984c\u9928edit show by  dtid",
    "domain_detail_for_sitedomain": "get detail by did",
    "get_call_for_voter_card_verifications": "Get call is to be made by appending request id to the url in the query parameter, to fetch the api results.",
    "real_estate_api_for_real_estate_heroku": "Real Estate",
    "api_v1_for_reverse_ns": "",
    "pacific_for_vct_global_contract_database": "Returns a json of all teams inside PACIFIC.",
    "americas_for_vct_global_contract_database": "Returns a json of all teams inside AMERICAS.",
    "emea_for_vct_global_contract_database": "Returns a json of all teams inside EMEA.",
    "random_joke_for_joke_test": "Returns a random joke",
    "obd2_code_for_car_code": "This endpoint will provide the human readable version of a requested obd2 code",
    "get_by_latin_name_for_house_plants": "Retrieves all plants that match the provided Latin plant name.",
    "get_by_climate_for_house_plants": "Get plants by climate of their natural habitat.",
    "e1_for_test1": "E2 is my first endpoint",
    "all_strains_descending_for_weed_strain": "List of all strains ordered by name in descending order.",
    "get_all_kfc_locations_by_state_for_kfc_locations": "Get all KFC locations by state",
    "get_all_kfc_locations_for_kfc_locations": "GET all KFC locations",
    "get_all_city_names_for_kfc_locations": "GET all City names",
    "all_rto_s_for_indian_rto_s_names_search_": "Search for RTO names all over India,\nyou can use this API for autosuggestion",
    "breed_type_for_dogbreeddb": "Gives all results by the type of breed.",
    "origin_for_dogbreeddb": "Gives a list of all dogs with the origin country.",
    "paginated_for_dogbreeddb": "Get all dog breed results in a set of 10 per page.",
    "endpoint1_for_chattydata": "indpoint",
    "single_airplane_for_airplanesdb": "Get details of a single airplane by its ID.",
    "all_airplanes_for_airplanesdb": "Get complete data of all airplanes.",
    "airplanes_ordered_by_ascending_for_airplanesdb": "Get all airplanes ordered by name in ascending order.",
    "hsdb_for_card_databse": "HSDB",
    "sanction_data_for_database_on_entities_sanctioned_for_compliance_desc_": " ",
    "api_v1_for_subdomains_lookup": "Subdomain Lookup API",
    "testbatmanapi_for_testgetapi": "API for test project batman",
    "mouldinformation_for_dati_comuni": "test",
    "getcompanies_for_women_in_tech": "For valid response try base URL",
    "get_billing_plan_version_for_aaaa": "Get Billing Plan Version",
    "get_quota_export_for_aaaa": "Download Quota Export file for a specific month",
    "get_requesting_user_teams_for_aaaa": "Get all of the team ID's that are associated to your account",
    "whoisserver_dnsservice_for_dns_lookup": "DNS Lookup API",
    "web_for_portfolio": "dsada",
    "api_for_portfolio": "Auto generated using Swagger Inspector",
    "work_for_portfolio": "sdad",
    "veiculo_tipo_id_marca_id_modelo_for_veiculos_api": "/",
    "get_sample_userprofile_for_mocking_rock_": "Use this API to get fake-generated user Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above.",
    "get_country_codes_for_mocking_rock_": "Use this API to get list of countries, Their ISO3 & ISO2 codes.",
    "city_data_for_mocking_rock_": "Get list of citys.\nCount limit should be less the 1000",
    "get_models_for_hsn_tsn": "Returns all models based on manufacturer.",
    "get_hsn_tsn_for_hsn_tsn": "Search for dedicated car. Year is optional. Records are limited by 100 rows.",
    "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required",
    "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required",
    "get_complete_package_list_for_winget_api": "Get all available packages in database by ID.",
    "pesquisa_por_campo_for_lista_de_empresas_por_segmento": "Busque uma lista de empresas utilizando outros campos, como:  **nome, email, telefone, socio, cep**.\nCampos retornados: CNPJ, localiza\u00e7\u00e3o, UF, Cidade, bairro, nome fantasia e raz\u00e3o social.",
    "detalhes_empresa_for_lista_de_empresas_por_segmento": "Detalhes da empresa utilizando o CNPJ. Dados retornados:\nCNPJ\nRaz\u00e3o social\nNome fantasia\nData cria\u00e7\u00e3o\nStatus empresa\nNatureza jur\u00eddica\nCNAE principal\nCNAEs secund\u00e1rios\nPorte empresa\nEndere\u00e7o\nTelefone\nE-mail\nQuadro de s\u00f3cios e administradores\nParticipa\u00e7\u00f5es em outras empresas",
    "cnae_ou_localiza_o_for_lista_de_empresas_por_segmento": "Busque uma lista de empresas filtrando pelo CNAE ou localiza\u00e7\u00e3o. Voc\u00ea pode filtrar usando apenas CNAE tendo abrang\u00eancia nacional, filtrar usando apenas a localiza\u00e7\u00e3o, ou utilizar ambos os filtros combinados. Dados retornados da empresa:\n**CNPJ, endere\u00e7o, UF, cidade, raz\u00e3o social e nome fantasia**.",
    "all_countries_names_for_countries_population": "Returns all countries english full names. Useful when need to know wich country names to search for.",
    "total_population_for_countries_population": "Returns the estimated total population\n\n- Number in millions.",
    "country_details_level_1_for_countries_population": "Specified one valid param and retrieve access level 1 information about a country:\n- english name\n- population (in millions)\n\n\nValid params are country english name, ISO code 2 or ISO code 3",
    "provision_for_timedb": "**Runs provisioning on database(s) causing downsampling of data. Provides connection and retention information for account as a result**\n\nMust be run after new measurements or fields are added to datasets (e.q. if new sensor is providing data or additional fields should be stored for existing sensor/measurement).",
    "list_movies_for_list_movies_v3": "Used to list and search through out all the available movies. Can sort, filter, search and order the results",
    "movie_parental_guides_for_list_movies_v3": "Returns all the parental guide ratings for the specified movie",
    "movie_suggestions_for_list_movies_v3": "Returns 4 related movies as suggestions for the user",
    "get_all_teas_for_teas": "get all type of teas",
    "get_a_single_type_of_tea_for_teas": "get one type of tea",
    "search_for_airplanesdb": "Search airplane by name.",
    "airplanes_by_brand_for_airplanesdb": "Get all airplanes by brands such as Boeing, Airbus, etc.",
    "get_all_models_by_brand_and_family_for_watch_database": "Get All Models By Brand And Family",
    "get_watches_by_brand_family_model_for_watch_database": "Get Watches By Brand Family Model",
    "get_media_links_for_watch_database": "Get Media Links",
    "models_by_make_id_year_category_for_motorcycle_specs_database": "get model by make ID, year and category:\n\nex: /api/v1/model/make-id/55/2010/Sport",
    "models_by_make_id_for_motorcycle_specs_database": "Get all model list by make ID\n/model/make-id/{id}\n\nsample:\n\n```\n    {\n        \"id\": 1514,\n        \"name\": \"450 Sports Enduro\"\n    },\n    {\n        \"id\": 1515,\n        \"name\": \"C 400 GT\"\n    },\n    {\n        \"id\": 1516,\n        \"name\": \"C 400 X\"\n    },\n    {\n        \"id\": 1517,\n        \"name\": \"C 600 Sport\"\n    },\n    {\n        \"id\": 1518,\n        \"name\": \"C 650 GT\"\n    },\n    {\n        \"id\": 1519,\n        \"name\": \"C 650 GT Highline\"\n    },\n    {\n        \"id\": 1520,\n        \"name\": \"C 650 GT Highline LS\"\n    },\n```",
    "models_by_make_id_and_category_for_motorcycle_specs_database": "Get all models  by make ID and category\nex: /api/v1/model/make-id/100/category/Sport\n\nsample:\n\n```\n    {\n        \"modelId\": 2713,\n        \"modelName\": \"Altino 125 ES\",\n        \"yearName\": 2004,\n        \"categoryName\": \"Sport\",\n        \"priceName\": null,\n        \"articleId\": 5559\n    },\n    {\n        \"modelId\": 2730,\n        \"modelName\": \"Daystar 125 FI\",\n        \"yearName\": 2011,\n        \"categoryName\": \"Sport\",\n        \"priceName\": \" Euro 2990.  Prices depend on country, taxes, accessories, etc.\",\n        \"articleId\": 5590\n    },\n    {\n        \"modelId\": 2745,\n        \"modelName\": \"RoadSport\",\n        \"yearName\": 2015,\n        \"categoryName\": \"Sport\",\n        \"priceName\": null,\n        \"articleId\": 5610\n    }\n```",
    "order_by_ascending_for_dogbreeddb": "Gives a list of all dogs sorted in ascending order by name.",
    "all_dog_breed_for_dogbreeddb": "Gets details of all dog breeds.",
    "single_strain_for_weed_strain": "Provides all details for a single strain by its ID.",
    "cinemafenend_for_gcfen": "endpoint test",
    "get_all_restaurant_locations_by_state_and_city_for_restaurants_near_me_usa": "GET all Restaurant locations by state and city",
    "get_all_city_names_for_restaurants_near_me_usa": "GET all City names",
    "get_all_restaurant_locations_by_zipcode_for_restaurants_near_me_usa": "GET all Restaurant locations by zipcode",
    "get_tenant_by_id_for_mongodb_wix": "Get Tenant by Id",
    "search_all_for_mongodb_wix": "Returns all vault keys",
    "get_vault_by_name_for_mongodb_wix": "Get Vault by name",
    "get_call_for_icmai_verification": "Used to fetch api result using the request id received in responses.",
    "endpoint_for_get_mood": "endpoint",
    "search_plant_by_id_for_plants": "Gives you information of one particular plant By its ID. Useful when you search for a list of plants and click on one specific plant for more information",
    "search_by_scientific_name_for_plants": "You can search with a scientific name of plant and returns the list of plants matches the query",
    "search_by_common_name_for_plants": "returns a list of plants by their common name",
    "website_screenshot_v1_for_website_screenshot": "Get a screenshot of any web page with one API call (v1)",
    "calculate_expenses_for_expense_data": "<br /><br />\n<b>Authentication:</b> not required",
    "read_expenses_for_expense_data": "<br /><br />\n<b>Authentication:</b> not required",
    "all_cats_for_catbreeddb": "Get a list of all Cats with their basic meta data.",
    "get_all_restaurant_locations_for_restaurants_near_me_usa": "GET all Restaurant locations",
    "get_all_state_names_for_restaurants_near_me_usa": "GET all State names",
    "end_for_gettempmail": "Endp",
    "models_by_make_id_year_for_motorcycle_specs_database": "api/v1/model/make-id/{make}/{year}\nGet model by make id and year\nsample:\n\n```\n    {\n        \"modelId\": 1515,\n        \"modelName\": \"C 400 GT\",\n        \"yearName\": 2019,\n        \"articleId\": 2993\n    },\n    {\n        \"modelId\": 1516,\n        \"modelName\": \"C 400 X\",\n        \"yearName\": 2019,\n        \"articleId\": 2995\n    },\n    {\n        \"modelId\": 1518,\n        \"modelName\": \"C 650 GT\",\n        \"yearName\": 2019,\n        \"articleId\": 3002\n    },\n    {\n        \"modelId\": 1519,\n        \"modelName\": \"C 650 GT Highline\",\n        \"yearName\": 2019,\n        \"articleId\": 3010\n    },\n    {\n        \"modelId\": 1521,\n        \"modelName\": \"C 650 Sport\",\n        \"yearName\": 2019,\n        \"articleId\": 3014\n    },\n```",
    "production_years_by_model_id_for_motorcycle_specs_database": "Get makeName, modelName, years, by model Id",
    "models_by_make_for_motorcycle_specs_database": "Get all models by make name\nex: /model/make-name/BMW\nsample:\n\n```\n    {\n        \"id\": 1514,\n        \"name\": \"450 Sports Enduro\"\n    },\n    {\n        \"id\": 1515,\n        \"name\": \"C 400 GT\"\n    },\n    {\n        \"id\": 1516,\n        \"name\": \"C 400 X\"\n    },\n    {\n        \"id\": 1517,\n        \"name\": \"C 600 Sport\"\n    },\n    {\n        \"id\": 1518,\n        \"name\": \"C 650 GT\"\n    },\n```",
    "auctions_for_gsaauction": "this endpoint returns auction listings. \n",
    "difficulty_for_weed_strain": "Provides results of all strains by its difficulty of growing such as easy, medium or difficult.",
    "status_list_for_sitedomain": "\u5be9\u6838\u72c0\u614b\u6e05\u55ae",
    "domain_reputation_for_domain_reputation": "Evaluate reputation of a domain or IP (v1)",
    "consumer_address_search_for_data_axle_consumer_address_search": "Find relevant People in the Data Axle database",
    "get_call_for_india_ncvt_iti_cerificate_verification": "Used to fetch api result using the request id received in responses.",
    "cpf_for_quadro_de_s_cios_cpf_cnpj": "Buscar pelo CPF do s\u00f3cio ou administrador",
    "cnpj_for_quadro_de_s_cios_cpf_cnpj": "Buscar dados empresa pelo CNPJ",
    "cpfobliterado_for_quadro_de_s_cios_cpf_cnpj": "Buscar quando o CPF est\u00e1 obliterado. Ex: ***053599**",
    "get_call_for_driving_license_verification": "Used to fetch api result using the request id received in responses.",
    "search_all_schemas_for_mongodb_wix": "This call returns all schemas and its definition. Schemas are also called as case types. These case types will be consumed in Wix Database as Schemas.",
    "get_schema_by_name_for_mongodb_wix": "Get schema details by name. e.g. car",
    "ip_netblock_v2_for_ip_netblocks": "Get exhaustive information on IP Range (v2)",
    "paginated_for_catbreeddb": "Get all cat breed results in a set of 10 per page.",
    "breed_type_for_catbreeddb": "Gives all results by the type of breed.",
    "get_call_for_nurse_verification": "Used to fetch api result using the request id received in responses.",
    "website_contacts_v1_for_website_contacts": "Get full contact information from page, domain or web (v1)",
    "login_for_capitall_fitness": "login details",
    "search_country_for_pageantdb": "Search country if they had an active pageant contest.",
    "all_pageant_contests_for_pageantdb": "Get a list of all pageant contests.",
    "countries_for_pageantdb": "Get a list of all countries involved in a pageant contest.",
    "get_all_restaurants_locations_by_state_for_restaurants_near_me_usa": "GET all Restaurants locations by state",
    "dinotest_for_response_webhook": "just test the endpoint",
    "specifications_by_group_for_motorcycle_specs_database": "ArticleGetSpecificationGroup\n{specs} => engineAndTransmission\n{specs} => chassisSuspensionBrakesAndWheels\n{specs} => physicalMeasuresAndCapacities\n{specs} => otherSpecifications",
    "image_by_id_as_media_content_for_motorcycle_specs_database": "Get article image as media as content.\n[ArticleGetImageByType]\nUseful for mobile apps.",
    "specifications_by_id_for_motorcycle_specs_database": "Get all specifications available by ID\n[ArticleGetCompleteSpecification]",
    "image_by_id_as_link_for_motorcycle_specs_database": "/api/v1/article/{article}/image/link\n[ArticleGetImageByType]\nGet article image link\nsample:\n\n```\n{\n    \"imageName\": \"BMW HP4 2015.jpg\",\n    \"link\": \"http://127.0.0.1:8000/files/BMW/2015/HP4/BMW_2015_HP4.jpg\"\n}\n```",
    "search_for_pageantdb": "Search pageant contest by keyword.",
    "single_contest_for_pageantdb": "Get details of a single pageant contest by its ID.",
    "get_all_roles_for_aaaa": "Get all Roles",
    "get_all_apps_for_aaaa": "Get information on all of the Apps associated with an account.",
    "get_api_for_aaaa": "Get information on specified API, including `category`, `id`, and `name`",
    "main_for_legend_of_takada_kenshi": "\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4e0d\u8981\u3067\u3059.\u305d\u306e\u307e\u307e\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304f\u3060\u3055\u3044.\n**API\u8a8d\u8a3c\u7b49\u306f\u7279\u306b\u8a2d\u3051\u3066\u304a\u308a\u307e\u305b\u3093\u304c, \u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3088\u308bAPI\u30a2\u30af\u30bb\u30b9\u306e\u5834\u5408\u306fUser-Agent\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u5143\u306e\u30b5\u30fc\u30d3\u30b9\u540d\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5165\u529b\u3057\u3066\u4e0b\u3055\u3044.**",
    "list_of_all_makes_for_motorcycle_specs_database": "List of all Makes\n[MakeAll]\nGet a list of all makes\nsample:\n\n```\n   {\n        \"id\": \"55\",\n        \"name\": \"BMW\"\n    },\n    {\n        \"id\": \"60\",\n        \"name\": \"BPG\"\n    },\n    {\n        \"id\": \"66\",\n        \"name\": \"BSA\"\n    }\n```",
    "order_by_descending_for_dogbreeddb": "Gives a list of all dogs sorted in descending order by name.",
    "get_call_for_bank_account_verification": "Used to fetch api result using the request id received in responses.",
    "country_details_level_3_for_countries_population": "Specified one valid param and retrieve access level 3 information about a country:\n\n- english name\n- french name\n- ISO code 2\n- ISO code 3\n- numeric code\n- population (in millions)\n\nValid params are country english name, ISO code 2 or ISO code 3",
    "consumer_name_search_for_data_axle_consumer_search": "Find relevant People in the Data Axle database",
    "business_phone_search_for_data_axle_business_phone_search": "Find relevant businesses in the Data Axle database",
    "movie_details_for_list_movies_v3": "Returns the information about a specific movie",
    "search_by_engine_for_airplanesdb": "Get all airplanes by engine keyword.",
    "get_by_category_for_house_plants": "Get plants by their category.",
    "get_api_subscription_for_aaaa": "Get information about a specific subscription to a specified API. ",
    "get_all_organizations_environment_admin_for_aaaa": "Get Organization information for all of the Organizations in your Enterprise Hub.Organization information includes the associated `email`, the number of `seats`, the Organization `name`, the `status`, and more.",
    "get_team_users_for_aaaa": "Get information about all of the users that belong to a specific team. Returned user information includes the user `id`, `email`, `username`, and `lastActive`. ",
    "get_call_for_epfo_employee_verification": "Used to fetch api result using the request id received in responses.",
    "get_all_brands_for_watch_database": "Get All Brands",
    "get_all_family_by_brand_name_for_watch_database": "Get All Family By Brand name",
    "single_dog_breed_for_dogbreeddb": "Gives details of a single dog breed.",
    "fur_color_for_dogbreeddb": "Gives a list of all dogs with the color as provided in the parameter.",
    "single_country_for_pageantdb": "Get all details of a country by its ID.",
    "webiste_categorization_v1_for_website_categorization": "Define website category at once (v1)",
    "order_by_ascending_for_catbreeddb": "Gives a list of all cats sorted in ascending order by name.",
    "https_customer_for_customer": "https://Customer",
    "country_details_level_2_for_countries_population": "Specified one valid param and retrieve access level 2 information about a country:\n- english name\n- ISO code 2\n- numeric code\n- population (in millions)\n\nValid params are country english name, ISO code 2 or ISO code 3",
    "test_endpoint_for_testapi2": "OpenAPI Provisioning API Documentation\nRapidAPI's official API that allows you to add or update your API\u2019s definition.",
    "all_strains_ascending_for_weed_strain": "List of all strains ordered by name in ascending order.",
    "wordsearchturkish_for_dictionary": "With this service you can learn the meaning of words from Turkish dictionary.",
    "wordsearchenglish_for_dictionary": "With this service you can learn the meaning of English words from Oxdord dictionary.",
    "get_crypto_for_test_crypto_api": "Get_Crypto",
    "periodic_table_for_periodictable": "It gives detailed information about elements in the periodic table.",
    "weather_for_weather_v3": "weather",
    "school_detail_for_indonesia_school_list": "School Detail by sekolah_id_enkrip field that get by other endpoint (see List of School).",
    "number_of_schools_in_indonesian_city_district_kabupaten_kota_for_indonesia_school_list": "Number of Schools in Indonesian City / District (Kabupaten / Kota), also return kode_wilayah that used in other endpoints (See Example response).",
    "list_of_school_in_sub_disctrict_kecamatan_for_indonesia_school_list": "List of School in Sub-Disctrict (Kecamatan), this endpoint has school NPSN, and sekolah_id_enkrip field to lookup school detail in other endpoint.  See Example Result",
    "get_random_quote_for_dr_almotawa_quotes": "This endpoint returns a random quote out of over 40000 quotes",
    "amberwaves_retrieve_paged_collection_for_usda": "Retrieves a paged collection of amber waves content nodes filtered by a particular section alias, ordered by descending release date.",
    "getmediumquestion_for_leetcodeapi": "Get the number of medium level questing solved by the user.",
    "geteasyquestion_for_leetcodeapi": "Get the number of easy question solved by the user",
    "getmaxstreak_for_leetcodeapi": "Get the max streak of the user in the current user",
    "get_list_of_random_words_for_random_words_spanish_and_french": "Generates A List Of Random Words.",
    "get_random_word_for_random_words_spanish_and_french": "Get One Random Word",
    "get_a_random_word_for_random_words": "Returns a random words from a list of more than 5500+ words\n\nImportant Note: \n1. *wordLength* must not be used with minLength and/or maxLength",
    "get_multiple_random_words_for_random_words": "Get multiple random words (i.e. min 2 and max 20) from a list of 5500+ words\n\nImportant Notes:\n1. *count* must be a valid number between 2 and 20 (both 2 and 20 included)\n2. *wordLength* must not be used with minLength and/or maxLength",
    "get_for_allah_name": "Get all name",
    "lmapi_for_lm_api": "anything",
    "get_verse_details_by_verse_id_for_bhagavad_gita_v3": "Get verse details by verse id",
    "get_chapter_details_by_id_for_bhagavad_gita_v3": "Get chapter details  by id",
    "get_all_chapters_for_bhagavad_gita_v3": "Get all chapters",
    "speakers_for_hellonext": "speakers",
    "get_countries_for_seventraderapi": "Get all countries in API",
    "test_for_paultest": "test",
    "copy_of_endpoint_test_for_paultest": "test",
    "v5_schools_for_aeries": "v5/schools",
    "aftavb_for_aftab": "dsafadasd",
    "judget0_for_safe_exam": "code compiler online",
    "today_s_international_current_affairs_for_current_affairs_of_india": "This endpoint provides you the international current affairs of today.",
    "recent_current_affairs_for_current_affairs_of_india": "This will provide you with the recent current affairs of India.",
    "history_of_today_for_current_affairs_of_india": "This endpoint will return you the historical events that has occurred today.",
    "code_for_you_for_code_for_you": "Code For You",
    "getname_for_leetcodeapi": "Get the name of the user",
    "gettotalactivedays_for_leetcodeapi": "Get the total active days of the user in the current year.",
    "quiz_for_today_for_current_affairs_of_india": "This endpoint will fetch you today's current affair 10 quiz questions.",
    "download_for_uurrooster_v2": "downloaden",
    "getdata_for_apideveloper": "returns the data",
    "get_less_then_20_articles_from_pluralsight_com_for_pluralsight_articles": "This endpoint will return back a data with less then 20 various articles from Pluralsight.com",
    "get_data_with_articles_about_it_operations_for_pluralsight_articles": "This endpoint will return back data with around 100 articles from Pluralsight's \"it-ops\" section.",
    "get_data_with_articles_about_software_development_for_pluralsight_articles": "This endpoint will return back data with around 100 articles from Pluralsight's \"software-development\" section.",
    "word_of_the_day_from_cd_for_word_of_the_day": "Get word of the day from cd.",
    "word_of_the_day_from_mw_for_word_of_the_day": "Get word of the day from mw.",
    "word_of_the_day_from_dc_for_word_of_the_day": "Get word of the day from dictionary.com",
    "list_for_todo": "gdf",
    "kittichai_for_kittichai": "test",
    "country_for_tapzulecountry": "country fetch",
    "search_for_getbooksinfo": "Search Book by its name",
    "get_all_scores_for_thefluentme": "Get a paginated list of all scores.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Scores per page. If no value is provided, the default value of `10` will be applied.",
    "get_all_posts_for_thefluentme": "Get a paginated list of all posts.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Posts per page. If no value is provided, the default value of `10` will be applied.",
    "get_language_by_id_for_thefluentme": "Returns a language by id",
    "get_by_id_for_top_2023_it_certifications": "Get by ID",
    "get_all_certifications_for_top_2023_it_certifications": "Get All Certifications",
    "getspeakers_for_ted_talks_api": "Get all the TED talks speakers",
    "getsubtitlelanguages_for_ted_talks_api": "Get all the TED talks subtitle languages",
    "gettalks_for_ted_talks_api": "Get info about specific talks based on the provided parameters",
    "get_hadith_by_id_for_hadiths_api": "Each hadith have a unique ID. These ID can be used to get the hadith",
    "search_for_hadiths_in_collection_with_key_words_for_hadiths_api": "Searching for hadiths based on their various collections. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?collection=Sahih Bukhari&search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database.",
    "get_hadiths_by_collection_for_hadiths_api": "Each collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the hadiths by their specific collections.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
    "get_data_with_articles_about_security_for_pluralsight_articles": "This endpoint will return back data with around 30 articles from Pluralsight's  \"security-professional\" section.",
    "ticket_for_events_uel": "Ticket",
    "gettotalsolved_for_leetcodeapi": "Get the total number of questions solved by the user.",
    "get_word_of_the_day_from_multiple_sources_for_word_of_the_day": "Gets word of the day from mutiple sources in one go easy.",
    "word_of_the_day_from_pm_for_word_of_the_day": "Get word of the day from pm",
    "get_all_verse_of_chapter_by_chapter_id_for_bhagavad_gita_v3": "Get all verse of chapter by chapter id",
    "topics_for_uncovered_treasure": "Get list of all topics",
    "today_for_uncovered_treasure": "Get treasure of the day",
    "search_searchterm_for_uncovered_treasure": "Search for treasure by term, e.g. \"wisdom\"",
    "get_random_fact_for_numbers": "Get result by random number",
    "get_math_fact_for_numbers": "Get a mathematical property about a number",
    "get_trivia_fact_for_numbers": "Get a trivia fact about a number",
    "index_for_weatherjs": "test",
    "quote_for_quotes": "Get a random Quote",
    "clientes_for_fachaapi": "obtener cientes",
    "get_available_languages_for_dictionary_translation_hablaa": "Get a list of available languages.",
    "similar_words_for_dictionary_translation_hablaa": "Get translations of similar words.",
    "get_a_translation_for_dictionary_translation_hablaa": "Get a translation by defining source and destination languages as well as a word to translate.",
    "star_for_stars_api": "returns full information about the star.",
    "stars_list_for_stars_api": "Returns list of stars",
    "planet_list_for_stars_api": "Returns the planets surrounding a star",
    "q_study_for_q_study": "education",
    "get_date_fact_for_numbers": "Get a fact about a day of year",
    "get_year_fact_for_numbers": "Get a fact about a year",
    "nguyenthanhduy178_tk_for_nguyenthanhduy178_tk": "nguyenthanhduy178.tk",
    "copy_of_endpoint_nguyenthanhduy178_tk_for_nguyenthanhduy178_tk": "nguyenthanhduy178.tk",
    "get_messages_for_message_api": "Gets all messages",
    "subject_for_dcps_project": "filters data by subject input",
    "schoolname_for_dcps_project": "gets all data from a specific school through input of its name",
    "schoolcode_for_dcps_project": "gets school code upon input",
    "dashboard_for_miraisoft_training": "dashboard",
    "random_word_for_urban_dictionary": "Returns a list of random words & definitions from the Urban Dictionary database",
    "define_a_word_search_for_urban_dictionary": "Can be used to define a specific word, or search for word defintions",
    "word_of_the_day_for_urban_dictionary": "Gets the Word of the Day for the past 10 days, including today.",
    "run_cgi_for_random_word": "",
    "topic_topic_for_uncovered_treasure": "Get entries from a specific topic",
    "random_for_uncovered_treasure": "Get random treasure",
    "jfjfked_for_futboleta": "sadscdv",
    "getjp2image_for_helioviewer_v1": "Download a JP2 image for the specified datasource that is the closest match in time to the `date` requested.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`.",
    "getnewsfeed_for_helioviewer_v1": "Get the XML RSS feed of the official Helioviewer Project Blog.",
    "uploadmovietoyoutube_for_helioviewer_v1": "Share an existing user-generated movie to YouTube.",
    "get_all_locations_for_tdot_school_data": "Get all locations",
    "get_paginate_for_tdot_school_data": "Get Paginate",
    "get_filter_for_tdot_school_data": "Get Filter",
    "flashcards_for_real_estate_exam": "Get a list of all flashcard terms and definitions",
    "qanda_for_real_estate_exam": "Returns all multiple choice and true or false questions with answers and feedback.",
    "covid_for_covid19ph": "covid",
    "getquestionsbyexam_for_tech_exams": "Get exam questions by exam",
    "getonequestionwithanswers_for_tech_exams": "Get a specific question and corresponding answers",
    "getquestionsandanswers_for_tech_exams": "Returns all multiple choice and true or false questions with answers and feedback.",
    "number_of_schools_in_indonesia_sub_district_kecamatan_for_indonesia_school_list": "Number of Schools in Indonesia Sub-District (Kecamatan), also return kode_wilayah that used in other endpoint. (See example result and find kode_wilayah  field)",
    "getbooksbytitlesearch_for_reading_home_apis": "Get Paginated List of Books on Title Searched",
    "getbooksbyauthorsearch_for_reading_home_apis": "Get List of Books of a Searched Author Name",
    "getbookdetail_for_reading_home_apis": "Get Detail of book by Book ID",
    "get_space_news_for_news_space": "Get Space News",
    "getrandomwords_for_random_ukrainian_word": "Get random Ukrainian words.",
    "onyomi_reading_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "kanji_character_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "radical_japanese_name_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "sekolah_for_sekolah": "berita tentanf anak",
    "get_a_hundreds_of_all_kind_of_articles_from_pluralsight_com_for_pluralsight_articles": "This endpoint will return back a data with hundreds of articles from Pluralsight.com",
    "nombre_for_democracia": "nombre",
    "get_all_constants_for_physical_quantities_constants_and_equations_": "This endpoint return back data of physical constants formatted as JSON",
    "get_all_physical_quantities_for_physical_quantities_constants_and_equations_": "This endpoint return back data of physical quantities",
    "get_equations_for_physical_quantities_constants_and_equations_": "This endpoint return back data of equations formatted as JSON",
    "gethardquestion_for_leetcodeapi": "Get the number of hard questions solved by the user.",
    "get_articles_about_data_for_pluralsight_articles": "This endpoint will return back data with around 50 articles from Pluralsight's \"data-professional\" section.",
    "basic_search_for_learn_to_read_and_write_japanese_kanji": "A kanji character, Onyomi reading (katakana), Kunyomi reading (hiragana) or a kanji's simplified English meaning.",
    "ask_question_to_ai_service_for_ask_ai": "Ask question to AI Service. Be concise.",
    "hbjdsj_for_yosi": "sfsdfs",
    "getjp2header_for_helioviewer_v1": "Get the XML header embedded in a JPEG2000 image. Includes the FITS header as well as a section of Helioviewer-specific metadata.",
    "downloadmovie_for_helioviewer_v1": "Download a custom movie in one of three file formats.",
    "gettile_for_helioviewer_v1": "Request a single image tile to be used in the Helioviewer.org Viewport.  Tiles are 512x512 pixel PNG images, generated for a given image scale from the intermediary JPEG2000 image files.\n\n        Use the `getClosestImage` API endpoint to obtain the desired image identifier for the `id` parameter.",
    "verse_verse_for_uncovered_treasure": "Get treasure by verse",
    "translate_to_old_english_for_old_english_translator": "Old English Translator",
    "all_supported_exams_for_tech_exams": "Returns all supported exams.",
    "getmoviestatus_for_helioviewer_v1": "",
    "getdatasources_for_helioviewer_v1": "Return a hierarchial list of the available datasources.\n\n        Optional parameter `verbose` is exists for compatability with JHelioviewer.  It outputs the hierarchical list in an alternative format and limits the list of available datasources to a known set (SDO and SOHO).  JHelioviewer may not operate properly if new datasources appear in the feed without a client-side updgrade.  To explicitly include new sources, use the optional `enable` parameter.",
    "get_all_chemical_elements_for_chemical_elements": "This endpoint will return back data of all Chemical Elements of the periodic table",
    "get_post_by_id_for_thefluentme": "Returns a post by `post_id`. You can get the `post_id` from the `Get all posts` endpoint.",
    "all_for_dcps_project": "gets all data",
    "getdefinition_for_dictionary_data_api": "This is used to retrieve definition, pronunciation and example usages of any word",
    "getaudiolanguages_for_ted_talks_api": "Get all the TED talks audio languages",
    "getuservideos_for_helioviewer_v1": "Get a listing (in descending time order) of the most recently user-generated movies that have been publicly shared to YouTube.  Result set is limited to the value requested or default value of the `num` parameter (unless truncated when the date value of the `since` parameter is reached).",
    "getyoutubeauth_for_helioviewer_v1": "Request authorization from the user via a Google / YouTube authorization flow to permit Helioviewer to upload videos on behalf of the user.",
    "getbooksbycategory_for_reading_home_apis": "This will get a paginated list of books in a specific category",
    "getting_data_for_data_visualisation_": "this api is for the sales of supermarkets in three different cities",
    "nail_for_nail": "regOjooo",
    "find_books_for_book_finder": "Search books using optional title, author, series, book type, categories, and [lexile measure](https://lexile.com/educators/understanding-lexile-measures/) range.",
    "samyutam_for_samyutam_eduction": "Rahul Name is Almost male",
    "base_for_apigabin": "uNE BASE",
    "open_weather_for_weather": "weathermap",
    "numbers_translator_for_numbers_translator": "Numbers Translator",
    "fetchproject_for_testapi": "fetchingproject",
    "get_mony_for_mony": "get datat",
    "word_of_the_day_from_ld_for_word_of_the_day": "Get word of the day from ld",
    "number_of_schools_in_the_province_of_indonesia_for_indonesia_school_list": "Number of Schools in the Province of Indonesia, also return region code (kode_wilayah) that used in other endpoints",
    "example_sentences_for_dictionary_translation_hablaa": "Request multiple example sentences containing the word to translate.",
    "tcyonline_dictionary_endpoint_for_tcyonlinedictionary": "this is tcyonline dictionary endpoint",
    "memre_api_v1_readiness_for_learning_engine": "Get the readiness of the user for the specified item.\n",
    "memre_api_v1_concepts_for_learning_engine": "Retrieve a list of concepts for the current customer.",
    "memre_api_v1_study_for_learning_engine": "Get items a specific user should study.\n",
    "getallcategories_for_reading_home_apis": "Get Paginated List of All Categories",
    "recent_word_of_the_day_from_dc_for_word_of_the_day": "Fetches upto 3 recent word from Dictionary.com",
    "get_hadiths_based_on_the_category_for_hadiths_api": "Each h collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the hadiths by their specific categories.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
    "get_collection_by_id_for_hadiths_api": "Each collection have a unique ID. These ID can be used to get the collection",
    "word_infos_for_master_dictionary": "Get word infos",
    "getrank_for_leetcodeapi": "Get the contest rank of the user",
    "getjpx_for_helioviewer_v1": "Generate and (optionally) download a custom JPX movie of the specified datasource.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`.",
    "all_kanji_details_for_learn_to_read_and_write_japanese_kanji": "Language attributes and media files for all supported kanji (~ 6.5MB)",
    "single_kanji_details_for_learn_to_read_and_write_japanese_kanji": "Language attributes and media files for a single kanji",
    "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "kanji_grade_level_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "gettopics_for_ted_talks_api": "Get all the TED talks topics",
    "get_score_by_id_for_thefluentme": "Returns a score by `score_id`. You can get the `score_id` from the `Get all scores` endpoint. The scale parameter defines the maximum number of points for the recording, as well as each word. This parameter is not required. The default value of 100 will be applied if the parameter is not provided.",
    "get_all_languages_for_thefluentme": "Returns a list of all supported languages. The API supports 40 different languages and 80 different voices for the ai_reading. This is used to define the post language when a post is added. It also defines the voice for the sound file that is generated for the user to listen to.",
    "playmovie_for_helioviewer_v1": "Output an HTML web page with the requested movie embedded within.",
    "retrieve_group_members_for_drillster_2_0": "Retrieves all members of a specific group.",
    "retrieve_test_question_for_drillster_2_0": "Returns the next question for a predefined test.",
    "retrieve_own_user_for_drillster_2_0": "Requests (own) user details.",
    "google_for_tutorial": "google",
    "copy_of_endpoint_google_for_tutorial": "google",
    "study_list_macquarie_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "get_account_access_for_drillster_2_0": "Requests an organization login.",
    "submit_test_answer_for_drillster_2_0": "Submits the answer to a question, as part of a predefined test.",
    "get_all_categories_for_hadiths_api": "Get all categories from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
    "get_category_by_id_for_hadiths_api": "Each category have a unique ID. These ID can be used to get the category",
    "basic_endpoint_for_beekeeping_research": "See full docs on https://research.docs.beekeeping.io",
    "methane_endpoint_for_atmosphere_methane_concentration": "The response will be an object with no CORS resources enabled.",
    "traditionalhydrotocarbonfootprint_for_carbonfootprint": "Calculate CO2e from the use of traditional hydro provider",
    "carbonfootprintfromflight_for_carbonfootprint": "Calculate CO2e in Kg from a travel by air.",
    "airqualityhealthindex_for_carbonfootprint": "Return the official air quality health index (1 to 10) bases on key parameters.The national AQHI is based on three-hour average concentrations of ground-level ozone (O3), nitrogen dioxide (NO2), and fine particulate matter (PM2.5). O3 and NO2 are measured in parts per billion (ppb) while PM2.5 is \t measured in micrograms per cubic metre (ug/m3)",
    "descriptions_for_numerology_api": " ",
    "health_for_numerology_api": " ",
    "description_for_numerology_api": " ",
    "v1_planets_for_planets_by_api_ninjas": "Get a list of planets matching specified parameters. Returns at most 30 results. To access more than 30 results, use the offset parameter to offset results in multiple API calls.",
    "isvalidexpression_for_mathematical_symbolic_expression_manipulator": " ",
    "simplifybasic_for_mathematical_symbolic_expression_manipulator": " ",
    "evaluate_for_mathematical_symbolic_expression_manipulator": " ",
    "get_all_bodies_positions_for_astronomy": "Returns a iterable list of bodies and their properties in tabular format.",
    "search_for_astronomy": "Search endpoint can be used to get information for stars and deep space objects.",
    "get_positions_for_body_for_astronomy": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"",
    "treeequivalent_for_carbonfootprint": "Calculate how many trees it took to create paper.",
    "fueltoco2e_for_carbonfootprint": "Transform liters of Diesel, Petrol or LPG into CO2 Equivalent in Kg.",
    "carbonfootprintfromcartravel_for_carbonfootprint": "Returns the CO2e in Kg from a travel by car",
    "irene_for_irene": "irene0",
    "differentiate_for_mathematical_symbolic_expression_manipulator": " ",
    "info_for_numerology_api": " ",
    "now_for_astrologer": "Gets astrological data for the current moment at UTC.",
    "v1_stars_for_stars_by_api_ninjas": "Get a list of stars matching specified parameters. Returns at most 30 results. To access more than 30 results, use the offset parameter to offset results in multiple API calls.",
    "get_base_information_for_al_quran": "Responds with JSON including some properties of the Quran. *(deprecated)*",
    "get_specific_ayah_verse_for_al_quran": "Responds with a specific *Ayah/Verse* in a specific *Chapter/Surah* along with original Arabic text, translation, transliteration and verse ID in JSON",
    "search_for_a_word_in_quran_for_al_quran": "Looks for a given keyword (English) in ***translation_eng*** key in the entire Koran and responds with all the verses containing the given keyword and toal matches in JSON",
    "search_for_crossref": "Let\u2019s look at some of the results",
    "doi_for_crossref": "Information of a article with specified doi.",
    "recordcount_for_crossref": "How many records do we have?",
    "loginuser_for_teste": "",
    "getuserbyname_for_teste": "",
    "logoutuser_for_teste": "",
    "base_endpoint_for_astrometry_ch_perihelion_astronomy": "http://astrometry.ch:5000/perihelion/0",
    "random_for_manatee_jokes": "retrieves a random manatee joke",
    "get_by_id_for_manatee_jokes": "gets a specific joke by id",
    "find_all_for_manatee_jokes": "retrieves all available jokes",
    "carbon_dioxide_endpoint_for_daily_atmosphere_carbon_dioxide_concentration": "The response will be an object with no CORS resources enabled.",
    "nitrous_endpoint_for_atmosphere_nitrous_oxide_levels": "The response will be an object with no CORS resources enabled.",
    "picture_of_the_day_for_astronomy_picture_of_the_day": "This Endpoint returns an astronomy image of the univers with caption and explanation from professionals.",
    "mrna2dna_for_dna2protein": "This endpoint transforms an mRNA sequence to its DNA sequence equivalent.",
    "dna2mrna_for_dna2protein": "This end-point converts a DNA sequence into an mRNA sequence.",
    "dna2aminoacid_for_dna2protein": "Transform a DNA sequence into a sequence of Amino Acids",
    "getorderbyid_for_teste": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions",
    "getinventory_for_teste": "Returns a map of status codes to quantities",
    "random_usr_copy_for_test": "api/users/random_user",
    "random_usr_for_test": "api/users/random_user",
    "get_tamil_calendar_date_for_yawin_indian_astrology": "Find the Tamil calendar date from the given English calendar date",
    "get_planet_position_angles_for_yawin_indian_astrology": "Find the Planet position angles on a birth date and time",
    "birth_details_for_yawin_indian_astrology": "Get Basic astrological details from the birth date and birth time",
    "getpetbyid_for_teste": "Returns a single pet",
    "m4_5_earthquakes_past_7_days_for_everyearthquake": "Magnitude 4.5+ Earthquakes, Past Seven Days",
    "m4_5_earthquakes_past_day_for_everyearthquake": "Magnitude 4.5+ Earthquakes, Past Day",
    "recent_earthquakes_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world, from now to the date and time determined by the 'interval' property.",
    "countries_en_json_for_daily_knowledge": "Capitals, currencies, flags and more.",
    "logical_fallacies_en_json_for_daily_knowledge": "Learn to identify flaws in reasoning.",
    "sustainable_development_goals_en_json_for_daily_knowledge": "The UN global goals for sustainable development.",
    "untools_en_json_for_daily_knowledge": "Thinking tools to help you solve problems, make decisions and understand systems.",
    "chemical_elements_en_json_for_daily_knowledge": "Periodic table of elements.",
    "mpds_for_materials_platform_for_data_science": "Retrieve materials data, see www.mpds.io",
    "carbonfootprintfrompublictransit_for_carbonfootprint": "Return CO2e in Kg from the use of public transporation.",
    "cleanhydrotocarbonfootprint_for_carbonfootprint": "Return the CO2e in Kg from the consumption of clean hydro energy",
    "vehicles_models_for_carbonsutra": "List of Vehicle Models for a Make. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html",
    "cluster_data_for_carbonsutra": "Emissions can be grouped into self-defined clusters and retrieved using those labels. This eliminates the need to store the results at developer's end. A key will need to be generated, which is then passed as a Bearer Token (within Authorization) in all calculations, so that the user can be identified and the results are securely delivered.\n\nUse the POST API of RegisterKey to obtain your API_KEY which will be used in all estimation calculations for which clustering is required. Your email address and a secret phrase (password) will be required to generate this key.\n\nThe POST API of RetrieveKey will give you the key again if it was misplaced, as long as the correct password is entered.\n\nNote that if clustering is not needed then you do not need API_KEY.\n\nThe GET API of ClusterData returns all the estimations that were calculated for a specific cluster_name.",
    "nearest_airport_from_postal_code_for_carbonsutra": "This is an advanced algorithm which takes a postal code and country code as input and returns the nearest airport its lat-long value. It is important to note that the straight line distance between the lat-long of postal code and airport is measured. The returned value is in kilometers. The source of 1.5 million postal code data is taken as it is from https://public.opendatasoft.com/explore/dataset/geonames-postal-code/. For airports, the publicly available database of IATA codes and airport names is used.",
    "types_for_everyearthquake": "Return all types of events ever recorded by the USGS, such as earthquakes, explosions, landslides and many more.",
    "m4_5_earthquakes_past_hour_for_everyearthquake": "Magnitude 4.5+ Earthquakes, Past Hour",
    "significant_earthquakes_past_30_days_for_everyearthquake": "Significant Earthquakes, Past Thirty Days",
    "get_range_of_verses_for_al_quran": "Responds with a collection of *Ayahs/Verses* in a specific *Chapter/Surah* along with original Arabic text, translation, transliteration and verse ID in JSON",
    "latest_earthquake_near_me_for_everyearthquake": "Call this endpoint with your latitude and longitude and you'll receive a simple return for the most recent earthquake, within 100 miles, of the lat/long coordinates provided.",
    "airports_by_keyword_for_carbonsutra": "Returns the lists of airport names and IATA code which matches the keyword.",
    "vehicles_makes_for_carbonsutra": "List of Vehicle Makes. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html",
    "earthquakes_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world. No parameters required.",
    "m1_0_earthquakes_past_30_days_for_everyearthquake": "Magnitude 1.0+ Earthquakes, Past Thirty Days",
    "all_earthquakes_past_30_days_for_everyearthquake": "All Earthquakes, Past Thirty Days",
    "all_earthquakes_past_day_for_everyearthquake": "All Earthquakes, Past Day",
    "m1_0_earthquakes_past_day_for_everyearthquake": "Magnitude 1.0+ Earthquakes, Past Day",
    "mrna2aminoacid_for_dna2protein": "Transform an mRNA sequence into a sequence of Amino Acids.",
    "api_test_for_everyearthquake": "Simple call to determine if the API is available and responding.",
    "m2_5_earthquakes_past_day_for_everyearthquake": "Magnitude 2.5+ Earthquakes, Past Day",
    "wcag_en_json_for_daily_knowledge": "Success criteria to fulfill WCAG.",
    "all_earthquakes_past_7_days_for_everyearthquake": "All Earthquakes, Past Seven Days",
    "get_entire_surah_chapter_for_al_quran": "Possible values: ***1-114*** \nResponds with entire Surah/Chapter of the Koran including all verses in the Surah and some additional information.",
    "plants_de_json_for_daily_knowledge": "H\u00e4ufige Pflanzenarten in Europa.",
    "significant_earthquakes_past_day_for_everyearthquake": "Significant Earthquakes, Past Day",
    "m2_5_earthquakes_past_30_days_for_everyearthquake": "Magnitude 2.5+ Earthquakes, Past Thirty Days",
    "getcertdetails_for_certficate": "Get the certificate details of a domain.",
    "take_screenshot_for_screenshot_maker": "collect all parameteres, load the webpage and take screenshot at the end.\nThis API save on a S3 bucket and return the url.",
    "get_daily_domains_for_opensquat": "Get the daily list of domains that have been registered in the past day that have a similar word to {keyword} - the keyword should not contain any domain, e.g: Google",
    "check_for_ssl_snitch": "Takes a domain name and returns SSL information.  Optionally, the extend property can be set for additional information.",
    "example_for_patient": "ddfgsdfgdfgsdfg",
    "latest_by_lat_lng_for_ambee_pollen_data": "Get nearest places readings based around the given latitude and longitude",
    "get_by_decade_for_world_population_by_decade_and_growth_rate": "Get by decade",
    "get_by_filter_for_world_population_by_decade_and_growth_rate": "Get by filter",
    "searchdomain_for_pages_hosted_on_domain": " ",
    "getipinfo_for_about_my_ip": " ",
    "emailvalidation_for_newly_registered_domains": "Clean your email list database with our free email checker and verifier",
    "checkdisposableemail_for_newly_registered_domains": "REST API to lookup disposable email",
    "newlyregistereddomains_for_newly_registered_domains": "REST API to lookup newly registered domains",
    "get_current_count_for_counter": "get count and and don't increase",
    "get_count_and_increase_by_one_for_counter": "get count and increase by one",
    "check_email_server_for_mx_email_server_up_or_down": "Returns if email server is up or down.",
    "whois_for_newly_registered_domains": "REST API to WhoIS lookup data",
    "sms_for_otp": "otp sms to users",
    "send_email_notification_for_simple_email_notifications": "Intended usage is as a one liner. For example like this:\nbackup.sh && curl https://simple-email-notifications.p.rapidapi.com/Backup finished \u2705 /?email=demo@example.com&rapidapi-key=<your-rapidapi-key>\n\nWe recommend to use your rapidapi key as a query parameter as to reduce the complexity of the curl call.\n\nSend a email notification to the specified recipient. Note that it's not possible to set a email body. It's only possible to set a subject, as this API is only supposed to be used as a notification tool for jobs or tasks that have finished or experienced errors. If you don't set a subject, \"\ud83d\udce9\" will be set automatically for you.",
    "soil_history_data_for_ambee_soil_data": "Ambee  Soil History Data",
    "soil_data_by_lat_lng_for_ambee_soil_data": "get nearest places readings based around the given lattitude and logitude",
    "scan_headers_for_scan_web_heades_api": "This endpoint takes a 'GET' request with domain as a query string parameter and returns  status of Headers of Web Page",
    "more_on_inside_for_youtube_classification_api": "GET More on inside",
    "clean_channel_data_for_youtube_classification_api": "GET Clean channel data",
    "tags_video_id_for_youtube_classification_api": "GET Tags + video_id",
    "countries_list_for_similar_web": "List countries with meta data",
    "get_analysis_for_similar_web": "Get website traffic, key metrics, including engagement rate, traffic ranking, keyword ranking and traffic source.",
    "get_serp_async_for_yandex_serp": "Creates a task that will return complete SERP data for provided domain. Using this endpoint is very simple!\n1. Make a request\n2. Grab received **task_id**\n3. Provide the **task_id** to **GetTaskResult** endpoint to get complete domain data.\n\nThe average execution time is 5-40 seconds. It all depends how many tasks are in the queue.",
    "canceltask_free_of_use_for_yandex_serp": "Cancels pending task. Removes task from your job queue. Use this endpoint how much you want. **It's free of charge**!",
    "getmytasks_free_of_use_for_yandex_serp": "Retrieves your all tasks. Use this endpoint when lost your **task_id** . Use this endpoint how much you want. **It's free of charge**!",
    "camelizer_get_price_chart_for_price_tracking_tools": "Get pricing history chart of a product from Amazon",
    "camelizer_get_prices_for_price_tracking_tools": "Get latest prices, history highest/lowest prices of a product from Amazon",
    "heatmap_for_plerdy": "With Plerdy Heatmaps we see exactly where the clicks were on the website.  All clicks on the website are recorded and displayed in real time.  Which helps to understand how users behave on the website.",
    "channel_name_description_for_youtube_classification_api": "GET Channel name + description",
    "inside_on_description_for_youtube_classification_api": "GET Inside on description",
    "get_server_time_for_yandex_serp": "Returns server time.",
    "overview_of_channels_for_youtube_classification_api": "GET Overview of channels",
    "get_advisories_by_vendor_for_ics_cert_advisories": "This endpoint will return back Advisories by Vendor and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov",
    "get_all_advisories_for_ics_cert_advisories": "This endpoint will return back all  advisories and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov",
    "searchwebrequest_for_searchingwebrequest": "We need to get the response from the web after specifying a keyword",
    "translate_for_joj_translate": "Translate",
    "endpoint1_for_13f918yf19o1t1f1of1t9": "endpoint1",
    "get_synonyms_for_english_synonyms": "Get all synonyms from a given english word",
    "get_supported_languages_for_aibit_translator": "Get list support languages by AIbit",
    "list_of_available_languages_for_translef_translator": "This method returns a list of language codes that will be needed in the method to translate the text",
    "goo_translate_languages_for_cheap_translate": "Get all Goog supported language",
    "translate_languages_for_cheap_translate": "Get all supported language",
    "get_languages_for_translator": "Get all supported languages",
    "v1_dictionary_for_dictionary_by_api_ninjas": "API Ninjas Dictionary API endpoint.",
    "ceee_for_ceviri": "faas aasdd",
    "get_voice_for_anime_voice_waifu_ai_api": "Get Voice",
    "get_speaker_list_for_anime_voice_waifu_ai_api": "Get Speaker List",
    "to_get_a_list_all_the_supported_languages_by_this_api_endpoint_for_simple_elegant_translation_service": "To get a list all the supported languages, execute this API, https://translate.pregnya.com/getSupportedLanguages",
    "get_file_for_rushtranslate": "Get detailed information about a specific file.",
    "get_order_for_rushtranslate": "Get detailed information about a specific order.",
    "list_orders_for_rushtranslate": "Get a paginated list of your orders sorted in descending order by received_at date.",
    "endpoint_for_01": "01",
    "supported_languages_for_google_translate_v3": "Get Support Languages",
    "noname_for_bing_translate": "Kh\u00f4ng c\u00f3 g\u00ec",
    "detect_for_translate_all_languages": "Detects the language of text within a request.",
    "languages_for_translate_all_languages": "Returns a list of supported languages for translation.",
    "translate_for_translate_all_languages": "Translates input text, returning translated text",
    "get_languages_for_rapid_translate": "Returns supported language  list.",
    "1_for_navicon1": "1",
    "list_revisions_for_rushtranslate": "Get a paginated list of your revisions sorted in descending order by requested_at date.",
    "get_revision_for_rushtranslate": "Get detailed information about a specific revision.",
    "languages_for_long_translator": "This endpoint is used to get a list of available language codes",
    "language_codes_list_for_language_detection_v2": "Return list of language codes in ISO 639-1 format.",
    "supported_languages_list_for_ai_translation_apis": "Get Supported Languages List That  AI Translation APIs Support",
    "languages_for_microsoft_translator_text": "Gets the set of languages currently supported by other operations of the Translator Text API.",
    "options_for_translate_it": "With this endpoint you can get the supported languages and the possible translations between them",
    "list_languages_for_rushtranslate": "Get the list of languages we support. The language codes included in the response will be required when placing orders via the API.",
    "account_for_nitro": "This endpoint retrieves an account.",
    "get_all_orders_for_nitro": "This endpoint retrieves all account orders.",
    "get_a_specific_order_for_nitro": "This endpoint retrieves a specific order.",
    "supported_languages_for_translate_plus": "The languages which out api supports.",
    "querytranslator_for_indic_translator": "For translating an English sentence (query) to Hindi.",
    "translate_for_translate_v3": "Return Translated Text and the source language if it wasn't specified",
    "fast_language_detection_for_translate_v3": "This endpoint will return the Language of the Text",
    "accurate_language_detection_for_translate_v3": "This endpoint will return the Language of the Text",
    "getlanguages_for_text_translator_v2": "This endpoint is used to get a list of available language codes",
    "translate_for_bidirectional_text_language_translation": "takes source text, from language and to language and provides results in a very simple object.\nLanguages specified are in two character ISO codes.\nif lang_from is not specified it will be auto detected.",
    "get_supported_languages_for_bidirectional_text_language_translation": "takes no inputs and provides an array of supported language with iso 2 code and name of language in english.",
    "detect_language_for_bidirectional_text_language_translation": "If you want to detect language only and not translate you can provide the text parameter and the detected language will be provided in the results",
    "languages_for_fast_and_highly_accurate_language_detection": "Endpoint to return language information.",
    "allowance_for_tribal_mail_translate": "This endpoint shows your current left over allowance for the month.",
    "supported_languages_for_translate_language": "Supported Languages",
    "list_of_available_languages_for_neuro_high_quality_translation": "Language list for translation into both directions",
    "rates_for_nitro": "This endpoint retrieves all rates.",
    "languages_for_deep_translate": "You can discover the supported languages of this API by sending an HTTP request using a URL of the following format",
    "dictionary_examples_temporarily_unavailable_for_webit_language": "Dictionary Examples",
    "dictionary_lookup_temporarily_unavailable_for_webit_language": "Dictionary Lookup",
    "dictionary_antonyms_temporarily_unavailable_for_webit_language": "Dictionary Antonyms",
    "autocomplete_for_webit_language": "This endpoint provides autocomplete (word completion) for 80+ languages.",
    "transliterate_any_to_latin_for_webit_language": "Transliteration endpoint provides you with transliteration of text from any language to Latin. Transliterate \"\u3053\u3093\u306b\u3061\u306f\" to \"kon'nichiha\" with ease.",
    "dictionary_synonyms_temporarily_unavailable_for_webit_language": "Dictionary Synonyms",
    "bilingual_dictionary_for_webit_language": "Powerful multi-language bilingual neural translation dictionary, supporting 80+ languages.",
    "download_file_for_rushtranslate": "Retrieve a temporary download URL for the file. Files are encrypted and stored in an Amazon S3 bucket. When you want to download a file this request will generate a temporary signed URL allowing access to download the file securely. URLs expire after two minutes.",
    "create_file_for_rushtranslate": "Creates a new file. File uploads are limited to 100Mb in size. Each file may be attached to only one resource after creation.",
    "capture_for_website_screenshot_or_thumbnail": "Capture screenshot from any URL or Raw HTML. POST method is also available. Please take a look https://restpack.io/screenshot/docs",
    "keyword_search_for_domain_checker": "Query up to 333 TLDs to check registered domains",
    "whois_for_domain_checker": "Checks the domain Whois Details",
    "dns_for_domain_checker": "Checks the domain DNS records",
    "verify_the_captcha_for_captcha": "Verify the captcha",
    "generate_captcha_for_captcha": "Generates a captcha and returns a UUID.",
    "v_card_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with specified contact information. When scanned, the QR Code prompts the scanning device to 'Save as Contact'.",
    "text_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with specified text. When scanned, the QR Code prompts the scanning device to display the text.",
    "sms_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with the recipient phone number and pre-loaded message. When scanned, the QR Code will prompt the scanning device to 'send SMS' pre-loaded with the recipient number and message.",
    "qr_endpoint_for_qr_code_api_updated": "qr endpoint to  surf to any website",
    "intro_for_pdf_text_extractor": "Main access point",
    "download_for_bar_qr_code_generator": "Generate and download a single barcode.",
    "convert_text_to_speech_provide_any_text_for_all_purpose_complex_converter": "Convert Any Text To Speech.",
    "convert_number_to_speech_provide_any_integer_number_for_all_purpose_complex_converter": "Converting any integer number to Speech",
    "convert_numbers_to_words_provide_any_integer_number_for_all_purpose_complex_converter": "Convert any number to words.",
    "get_specific_job_for_odesk_apis": "Returns the complete job object for the referenced job, this is only available to users with manage_recruiting permissions within the team that the job is posted in.",
    "generating_company_wide_reports_for_odesk_apis": "Time reports can be generated on a company-wide level. All time reports fields are supported on this level except earnings related fields. In order to access this API the authorized user needs either hiring or finance permissions to all teams within the company.",
    "get_my_jobs_for_odesk_apis": "Returns all jobs that a user has manage_recruiting access to. This API call can be used to find the reference ID of a specific job.",
    "v1_passwordgenerator_for_password_generator_by_api_ninjas": "API Ninjas Password Generator API endpoint. Returns a random password string adhering to the specified parameters.",
    "email_validator_health_for_email_validator": "Return the health status of the API. Returns current UTC time.",
    "email_validator_validate_for_email_validator": "Validate email address. Key features:\n1. Checks that an email address has the correct syntax\n1. Gives friendly error messages when validation fails.\n1. Checks deliverability of an email address.\n1. Supports internationalized domain names and \n1. Normalizes email addresses",
    "sentiment_analysis_for_text_sentiment_api": "This endpoint takes a GET request with a string as a parameter and returns the sentiment scores (polarity and subjectivity) of the text as well as the 'Full Text', 'Language', 'Entities', 'Keywords', 'Sentiment Label' and 'Subjectivity Label'.",
    "date_converter_timezone_for_dateclock": "Simply Date  Converter Timezone to complete response report",
    "convert_to_islamic_hijri_hijriah_for_dateclock": "Convert date to Islamic or (Hijri) (Hijriah)",
    "birthday_for_dateclock": "Return complete a birthday detail",
    "search_for_github_repos": "Search for public repositories of an user",
    "generate_qr_for_qr_code_wizard": "Generate QR codes with ease via API",
    "sql_versions_for_sql_code_compiler": "SQL Versions",
    "generate_api_key_for_qr_code_dynamic_and_static": "From this endpoint you can generate a single api key.\n\nIt will be used to link all the qr code created, and allow any changes.\n\nImportant: Keep in mind that once generated, it is necessary that you store this key well, since it is not possible to recover it, and without it, you do not have access to change any of your QR Codes.",
    "list_all_qr_code_s_for_qr_code_dynamic_and_static": "From this endpoint is to list all registered qr codes, related to their api key.",
    "list_specific_qr_code_for_qr_code_dynamic_and_static": "From this endpoint is to get the information of a specific registered qr code, related to the respective api key",
    "get_podcast_episodes_for_anchor_data_scrapper": "Get Podcast episodes with Audio, image, description using the username of the podcast.",
    "get_a_language_for_judge0_extra_ce": "Get a language.",
    "about_for_judge0_extra_ce": "Get general information.",
    "get_configuration_for_judge0_extra_ce": "Configuration information gives you detailed information about the configuration of Judge0.",
    "tanggal_for_masehi_ke_hijriyah": "isi tanggal",
    "get_generated_article_by_id_for_articles_generator": "When using Generate New Article Endpoint, the article is saved, and can be accessed by the provided id",
    "qrcode_for_qr_code_v18": "Get a QR Code from an input text",
    "perl_versions_for_perl_code_compiler": "Perl Versions",
    "shorten_long_link_for_noly_url_shortener": "Use this endpoint to shorten a URL. The response will be a JSON object with the following structure:\n\nOn success:\n{\n\"status\": 1,\n\"error\": \"\",\n\"data\": \"https://tombo.icu/57h80n\"\n}\n\nOn failure:\n{\n\"status\": 0,\n\"error\": \"This website is already shortened here.\",\n\"data\": \"https://tombo.icu/57h80n\"\n}\n\nThe \"data\" field contains the shortened URL.",
    "get_posts_for__demo_project_v12": "Get Posts",
    "me_for__demo_project_v12": " ",
    "get_posts_copy_for__demo_project_v12": "Get Posts",
    "qrcodefree_for_qrcodeutils": "Free QR Code Barcode Generator",
    "qrcodepro_for_qrcodeutils": "Pro QR Code Barcode Generator",
    "get_plus_one_for_plus_one": "Get your integer, incremented by one",
    "generateguid_for_guid_generator": " ",
    "bulkgenerateguids_for_guid_generator": " ",
    "languages_for_hackerrank": "This method provides you with information regarding the language codes which our code checker supports",
    "c_versions_for_cpp_code_compiler": "C++ Versions",
    "cheerio_for_html_2_json": "returns the HTML page as JSON or Markdown",
    "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer": "Create a video summary of a given YouTube video. The summary is provided in markdown format.",
    "v1_youtube_summarizevideofromcache_for_youtube_video_summarizer": "Return the video summary of a given YouTube video that has already been summarized. The summary is provided in markdown format.",
    "generate_for_qr_generator_api": "Generate HTML image-tag with base64-image-string as QR code of input text (Query Parameter)",
    "go_versions_for_go_code_compiler": "Go Versions",
    "generate_placeholder_text_for_placeholder_text_api_for_your_application": "Generates placeholder text based on \"length\" query param",
    "get_statuses_for_judge0_extra_ce": "Get statuses.",
    "whois_for_whois_": "Use this endpoint for fetch whois data",
    "get_all_the_video_tags_for_youtube_video_tags": "This endpoint will return all the tags used for the SEO of a video, with the video title.",
    "qr_code_for_qr_code_api_v92": "GET request to /qr-code with a url query parameter",
    "php_versions_for_php_code_compiler": "PHP Versions",
    "search_content_for_url_content_extractor": "Allows you to search content for content based on a query.",
    "get_content_for_url_content_extractor": "Give a url and it will spit back the content of that url",
    "get_trending_for_url_content_extractor": "This will return a list of news articles that are trending.",
    "langlist_for_keyword_tool_v2": "List of support Language",
    "get_all_for_exerra_phishing_check": "Get all domains (or links) associated with phishing attempts. The response is very large (>\u224813MB), so it is preferred to use \"Check a link\". \n\nDue to the large response size (and processing) this endpoint is paid.",
    "check_a_url_for_exerra_phishing_check": "Check if a URL is a known phishing attempt",
    "get_stats_for_exerra_phishing_check": "Get statistics about the Exerra Phishing API",
    "view_message_for_tmail": "View a particular message by id\nUse the token received from /mailbox as authorization header  & message id received from /messages as path parameter.",
    "get_email_id_for_tmail": "Get Email ID for Mailbox",
    "get_messages_for_tmail": "Get all the messages received by email\nUse the token received from email as authorization header.",
    "qr_code_api_web_url_for_qr_code_api_v119": "Call the API Endpoint /qr and pass in the url parameter along with your rapidApi key to obtain a QR Code.",
    "d_die_for_utile_space": "Roll a die with n faces. With n between 2 and 100.",
    "dns_domain_for_utile_space": "",
    "health_for_utile_space": "API health information.",
    "url_to_qr_code_for_qrlink_api": "This endpoint is a GET request that takes a single parameter \"url\" which specifies the website URL. The endpoint generates a QR code image using the input URL and the response is downloadable.",
    "about_for_judge0_ce": "Get general information.",
    "get_configuration_for_judge0_ce": "Configuration information gives you detailed information about the configuration of Judge0.",
    "get_languages_for_judge0_ce": "Get active languages.",
    "getpagespeed_for_check_page_or_website_loading_speed": "Get page or website loading speed in seconds",
    "generate_a_qr_code_image_for_qrickit_qr_code_qreator": "Format of GET request to generate QR Code image. See documentation at https://qrickit.com/qrickit_apps/qrickit_api.php",
    "global_result_single_for_seo_keyword_research": "Keyword Research API",
    "keyword_research_api_for_seo_keyword_research": "Keyword Research API",
    "gettodousingget_for_todo": "Get todo from id",
    "get_order_for__onboarding_project_v3": " ",
    "get_product_for__onboarding_project_v3": " ",
    "get_user_orders_for__onboarding_project_v3": " ",
    "go_for_web_scrapper": "Fetch & parse HTML page",
    "ruby_versions_for_ruby_code_compiler": "Ruby Versions",
    "photo_from_given_number_for_dimondevosint": "It searches for a photo in the internet about the phone number, if it matches, it returns the photo in bytes.",
    "phone_number_information_for_dimondevosint": "It gives you some public information about the phone number.",
    "inn_general_director_for_dimondevosint": "Returns the general director of a company by INN nymber.",
    "get_referral_domains_for_referral_domain_checker_api": "Get Referral Domains List",
    "summary_for_seo_checker": "Summary SEO",
    "analyze_for_seo_checker": "analyze page speed",
    "analyze_v2_for_seo_checker": "analyze page speed with more results information",
    "c_versions_for_c_sharp_code_compiler": "C# Versions",
    "qr_code_image_for_qr_code_api_v33": "This Api takes URL, or string and returns the QR code image",
    "qr_code_for_qr_code_generator_v5": "Qr Generator",
    "v1_whois_for_whois_by_api_ninjas": "API Ninjas Whois API endpoint. Returns domain registration details (e.g. registrar, contact information, expiration date, name servers) about a particular domain name.",
    "name_for_core_js": "name=?\n? = javascript",
    "generate_qr_code_for_free_qr_code_generator": "Turn Word to QR Code with just one request",
    "convert_feed_for_full_text_rss_us": "",
    "visual_basic_versions_for_visual_basic_code_compiler": "Visual Basic Versions",
    "get_statuses_for_judge0_ce": "Get statuses.",
    "word_for_jibber_jabber": "Returns a random **word**",
    "words_for_jibber_jabber": "Returns random **words**",
    "sentence_for_jibber_jabber": "Returns a single random **sentence**",
    "health_check_for_gdrive_link_generator": "health check",
    "shorten_for_bitly": "Given a long URL, returns a bitly short URL.",
    "backorders_for_domain_backorder": "Get the latest expiring domain names in our pool",
    "shakespeare_for_shakespeare_translator": "Shakespeare Translator",
    "deviceposition_for_starline_telematics": "\u0417\u0430\u043f\u0440\u043e\u0441 \u0434\u0430\u043d\u043d\u044b\u0445, \u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c (\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u043c \u0437\u0430\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c) \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430, \u0431\u043b\u043e\u043a position \u0431\u0443\u0434\u0435\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0435\u043d \u043f\u0443\u0441\u0442\u044b\u043c. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/device/{device_id}/data. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/device/4568857/position\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>\n",
    "getappcode_for_starline_telematics": "\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0434\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0435\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0442\u043e\u043a\u0435\u043d\u0430. \u0421\u0440\u043e\u043a \u0433\u043e\u0434\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u0434\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u2013 1 \u0447\u0430\u0441. \u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0432 \u043b\u0438\u0447\u043d\u043e\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435 \u0432 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\u043c\" \u043d\u0430 <a href=\"https://my.starline.ru\">my.starline.ru</a>. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c Python-\u0441\u043a\u0440\u0438\u043f\u0442 get_app_code.py \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f <a href=\"https://gitlab.com/starline/openapi\">gitlab.com/starline/openapi</a>. \u0412 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u043a\u0440\u0438\u043f\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u043a\u043e\u0434 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://id.starline.ru/apiV3/application/getCode?appId=2&secret=d1e0c6cbd6c93999e5072cee4deed9c9\" -i</code>\n",
    "deviceinfoget_for_starline_telematics": "\u041c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430. \u0414\u0430\u043d\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0443\u0441\u0442\u0430\u0440\u0435\u043b, \u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c /json/v3/device/{device_id}/data. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e curl: <br><br><code>curl \"https://developer.starline.ru/json/v1/device/4568857/info\" --cookie 'slnet=15CFA19BFD3E8884C716FFA4E39AF866'</code>\n",
    "go_for_youtube": "Video converter",
    "send_message_for_discord_webhook_api": "Allows you to send a message with a webhook. More information in the docs.",
    "repeat_send_message_for_discord_webhook_api": "Enter your webhook URL, enter how many times to send the message, and then specify the message to send. Max 10 messages.",
    "multi_send_message_for_discord_webhook_api": "Allows you to send multiple messages with a webhook. More information in the docs. Modify the message_count value to the amount of messages you wish to send, and then specify each of the contents of the messages. If you wish to send the same message several times, use repeat send message.\nMaximum 10 messages at once.",
    "capture_for_giflayer": "Main API endpoint used to generate GIFs",
    "get_for_simple_qr_code_generator": "Simple Get endpoint to retrieve a QR code as a Jpeg file. \nSend the parameter **link ** as a query string parameter.\nReturn content-type is application/octet-stream.",
    "jsonp_for_world_clock": "Get current timezone (JSONP)",
    "get_current_time_within_a_timezone_for_world_clock": "Get the Current Time for EST",
    "coordinated_universal_time_for_world_clock": "Gets the coordinated universal time",
    "get_languages_for_all_purpose_complex_converter": "Get All The Supported Languages.",
    "generate_qr_code_for_easy_qr_code": "Generate QR Code by providing content",
    "about_for_arespass": " ",
    "ec_for_arespass": " ",
    "password_of_length_50_for_password_generator_api": "Gives you length 50 password",
    "base_for_password_generator_api": "Only this endpoint is currently supported which gives you a random password",
    "generate_password_for_password_generator": "Generate Password",
    "domain_check_for_bulk_domain_check": "Returns domain availability status",
    "cmyk_to_rgb_for_convexity": "Converts  cmyk color code to rgb color code",
    "rgb_to_cmyk_for_convexity": "Converts  rgb color code to cmyk color code",
    "rgb_to_hsv_for_convexity": "Converts  rgb color code to hsv color code",
    "exampleproblem_for_travelling_salesman": " ",
    "unfurl_for_unfurl_api_written_in_go": "Send a url as a url param to our API to preview it",
    "getendpointdata_for_endpoint_monitor_tool": "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId.",
    "getuser_for_endpoint_monitor_tool": "Gets and returns the current user data from the associated userId.",
    "removeendpointdata_for_endpoint_monitor_tool": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.",
    "get_subdomains_for_subdomain_scan": "Enter a domain here and we'll check and return all subdomains in a JSON format for you.",
    "general_for_serpstat": "Basic request",
    "scala_versions_for_scala_code_compiler": "Scala Versions",
    "end_point_for_story": "end point",
    "hls_for_twitter": "hls => mp4 converter",
    "url_for_free_url_un_shortener": "url",
    "validate_wa_number_for_bulk_whatsapp_validator": "enter the number you want to validate.\nLearn how to use it on this [video](https://youtu.be/_h5ybzp9UNU).",
    "validate_wa_number_free_for_bulk_whatsapp_validator": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThe response is `true` if the phone is registered on whatsapp.",
    "about_info_free_for_bulk_whatsapp_validator": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThis endpoint will return the `About` info of the number, and the time when the value was set.",
    "detect_for_languagelayer": "API endpoint used to perform standard (single) language detection",
    "batch_for_languagelayer": "API endpoint used to perform batch language detection",
    "c_17_versions_for_cpp_17_code_compiler": "C++ 17 Versions",
    "java_versions_for_java_code_compiler": "Java Versions",
    "tin_lookup_for_tin_check": "Through this operation you know if the tin number is valid or not and more information",
    "tin_check_for_tin_check": "Through this operation you know if the tin number is valid or not",
    "bash_versions_for_bash_code_compiler": "Bash Versions",
    "hsl_to_hsv_for_convexity": "Converts  hsl color code to hsv color code",
    "convert_cmyk_for_convexity": "Endpoint to converts cmyk color code to other color code like RGB , HSL, Hex",
    "convert_rgb_for_convexity": "Endpoint to converts RGB color code to other color code like Hex , HSL, CMYK",
    "deprem_for_kolektifapi": "\u00abafet.gen.tr\u00bb Son Depremler Verisi",
    "d_viz_for_kolektifapi": "\u00abaltinkaynak.com\u00bb G\u00fcncel D\u00f6viz Verileri",
    "akaryak_t_for_kolektifapi": "\u00abhaberler.com\u00bb G\u00fcncel Akaryak\u0131t Verileri",
    "email_exist_for_email_checkup": "help you to check if email really exist.",
    "email_format_for_email_checkup": "Help you to validate email format.",
    "generate_rogan_quote_for_joe_rogan_quote_generator": "Generate a quote from Joe Rogan",
    "solat_time_for_waktu_solat": "Display the prayer time based on selected zone.\nData in json format.",
    "solat_list_for_waktu_solat": "List of zones in each state along with the zone code.\nData in json format.",
    "haskell_versions_for_haskell_code_compiler": "Haskell Versions",
    "get_long_url_for_uptosite_link_shortener": "Get the actual long URL from shortened URL",
    "obtain_a_new_datacenter_proxy_for_ephemeral_proxies": "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n",
    "get_user_s_traffic_balance_for_ephemeral_proxies": "It returns the user's traffic balance for current monthly subscription.\n",
    "obtain_a_new_residential_proxy_for_ephemeral_proxies": "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n",
    "email_validation_for_disposable_email_checker": "Email Validation Api",
    "qr_code_image_generator_for_qr_code_generator_api_v6": "A QR code generator API is a tool that enables developers to generate QR codes within their applications. QR codes are two-dimensional barcodes that can be scanned using a smartphone camera and decoded using QR code reader software. The API allows developers to easily integrate QR code generation functionality into their existing applications, such as mobile apps, web apps, and software.\n\nThis API can be used to generate QR codes for a variety of purposes, such as:\n\nContact information: Generate a QR code containing your contact information, such as your phone number or email address.\nLinks: Create a QR code that links to a website, YouTube video, or other online content.\nPayments: Create a QR code for making payments through a mobile wallet or payment app.\nEvents: Generate a QR code for an event, such as a concert or conference, to provide attendees with all the necessary information.\nCoupons: Create a QR code for a coupon or promo code to be redeemed at a physical store or online.\nOverall, a QR code generator API is a versatile tool that can help businesses and individuals streamline their processes and improve the user experience for their customers.",
    "get_payment_calculator_for_mypeak_calculator_api": "Calculate payments and schedules",
    "get_mp3_for_youtube_mp3": "Convert to MP3 at the default bit rate.\nQuota cost will apply according to the length of the mp3 file.",
    "echo_get_for_echo_api": "Make a HTTP GET request with the code you like to get in the response.",
    "password_generation_for_explorarc_s_password_generation_api": "The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords",
    "opr_for_overnight_policy_rate": "Provide latest Overnight Policy Rate.",
    "get_user_data_for_discord_lookup": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically",
    "get_invite_data_for_discord_lookup": "Fetches detailed data, including hidden data of invites or vanities",
    "python_3_versions_for_python_3_code_compiler": "Python 3 Versions",
    "download_stream_for_ytstream_download_youtube_videos": "Stream or download info.",
    "is_a_business_for_bulk_whatsapp_validator": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
    "about_info_for_bulk_whatsapp_validator": "This endpoint will return the *About* state of the WA number on the query.",
    "is_a_business_free_for_bulk_whatsapp_validator": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nRequests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
    "domains_list_for_temporary_email": "Get domains list",
    "get_email_for_temporary_email": "Get Email",
    "qrcode_for_qrcode_generator_base64": "qrcode to genrate base64 qrcode image",
    "list_domains_for_temp_email": "List of Domains for email",
    "fetch_message_for_temp_email": "Get message of the provided message ID",
    "t2g_kurs_check_for_words_world": "Kurs check of IDR to another valuta",
    "list_image_for_qrcode": "This endpoint allows you to list single image hosted in the LinQR storage.",
    "list_all_images_for_qrcode": "This endpoint allows you to list images hosted in the LinQR storage. If there are no images hosted, an empty array is returned.",
    "get_mp3_for_youtube_mp3_download": "Convert to MP3 at the default bit rate.",
    "getqrcode_for_qr_code_generator_with_multiple_datatypes_": "This API will return you an URL of the QR Code image that you can easily embed on to website or download it for your other needs.",
    "generate_basic_direct_image_for_qr_code_generator": "Generates a QR code as a direct image with limited settings. (NOTE: doesn't show correctly in RapidAPI)",
    "generate_basic_base64_for_qr_code_generator": "Generates a QR code as base64 with limited settings.",
    "generate_advance_direct_image_for_qr_code_generator": "Generates a QR code as a direct image with additional settings. (NOTE: doesn't show correctly in RapidAPI)",
    "video_no_watermark_for_tiktok_no_watermark": "Get no watermark video.",
    "username_to_uuid_for_teamriverbubbles_random_utilities": "turns a username into a uuid",
    "random_uuid_for_teamriverbubbles_random_utilities": "creates a random uuid v4",
    "is_prime_for_teamriverbubbles_random_utilities": "checks if a number is prime",
    "read_root_for_proof_of_concept": "Ping the API.",
    "availability_for_wayback_machine": "This simple API for Wayback is a test to see if a given url is archived and currenlty accessible in the Wayback Machine. This API is useful for providing a 404 or other error handler which checks Wayback to see if it has an archived copy ready to display. The API can be used as follows:",
    "short_urls_code_visits_for_url_shortener": "Shows clicks, referer, etc. for a specific short link.",
    "short_urls_code_for_url_shortener": "Shows information about a short link code.",
    "qr_code_endpoint_for_go_qr_code_link_to_qrcode": "/qr",
    "deployment_tools_for_apievangelist": "",
    "search_for_ytconvert": "Search by content or URL",
    "url_download_for_ytconvert": "Gets a url to download the file",
    "get_products_for__onboarding_project_v3": " ",
    "get_products_in_category_for__onboarding_project_v3": " ",
    "pressure_from_to_number_for_unitconversion": "Pressure unit conversions",
    "data_from_to_number_for_unitconversion": "Data unit conversions",
    "temperature_from_to_number_for_unitconversion": "Temperature unit conversions",
    "scanimageurl_for_qr_scanner_api": "Scan image from URL and return QR text or Barcode number.",
    "get_a_language_for_judge0_ce": "Get a language.",
    "blender_project_for_3d_services": "(Warnig - in zip mode the return of this api is a large file (~20MB)) similar to executing blender --background ./main.blend --python ./script.py. The zip in parameter should be composed of a main.blend file and a script.py. see example here https://files.aptero.co/api/public/dl/CJTvv0V7?inline=true",
    "version_for_3d_services": " ",
    "thumbnail_for_3d_services": " ",
    "extract_data_for_youtube_video_data_extractor": "Almost all YouTube video urls are supported",
    "paragraph_for_jibber_jabber": "Returns a **paragraph** with random sentences",
    "sentences_for_jibber_jabber": "Returns some single random **sentence**",
    "pascal_versions_for_pascal_code_compiler": "Pascal Versions",
    "proxy_for_proxy": "Proxy your request anywhere.",
    "checker_for_domain_checker_api": "Checks the domain Details",
    "validate_email_address_for_mailboxlayer": "The main API endpoint for validating email addresses",
    "between_checker_for_dateclock": "Check if given date is between two dates",
    "qr_code_image_copy_for_qr_code_api_v67": "This end point takes a 'GET' request with url / string as a parameter and returns QR code image.",
    "countpages_for_seo_count_website_pages_in_google_index": "Count website pages in Google index",
    "qr_code_gen_for_simple_cheap_qr_code_generator": "This endpoint takes a \"GET\" request with the \"url\" query parameter and returns a QR code image associated with the text passed.",
    "account_event_timeline_for_dailycred": "",
    "user_event_timeline_for_dailycred": "",
    "find_a_user_for_dailycred": "",
    "scrape_links_for_scrapey_link_scraper": "Scrape all links from URL",
    "remove_profanity_for_purgomalum": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request",
    "check_if_text_contains_profanity_for_purgomalum": "",
    "domain_availability_for_domain_name_search": "Check domain availability, including domain validation, expiration, prices, domain quality aspects (advantages / considerations) and more data.",
    "whois_for_domain_name_search": "Perform WHOIS domain lookup.",
    "domain_search_for_domain_name_search": "Search for domains by keyword / query. Supports all 341 TLDs available on Google Domains. Each result includes availability information, pricing, quality aspects and more data available on Google Domains.",
    "simple_qr_code_for_custom_qr_code_with_logo_v2": "This endpoin returns simple qr code with the possiblity to customize the color.",
    "isbehindcdn_for_isbehindcdn": "Check if domain is fronted by CDN provider.",
    "retrieve_proxy_information_for_proxy_checker": "For retrieving a proxy test result, you should make a request to this endpoint.",
    "seconds_simplified_for_epoch_converter": "Convert seconds to get days, hours, minutes, seconds. (Seconds) -> Days: 1, Hours: 3, Minutes: 46, Seconds: 40",
    "start_end_date_to_time_for_epoch_converter": "Convert datetime to get start timestamp and end timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674864000.0, 1674950399.0",
    "time_to_date_for_epoch_converter": "Convert timestamp to datetime. (year, month, day Hours:Minutes:Seconds)",
    "random_for_helper_function": "Generate Random String with custom length\nBASIC: 20 \nPRO: 30\nULTRA: 70\nMEGA: 150",
    "generate_uuid_for_helper_function": "Generate UUID v4 with dash or not.\nmax\nBASIC: 3\nPRO: 20\nULTRA: 50\nMEGA: 150",
    "get_language_for_text_to_speech": "get list of available language for text to speech",
    "send_text_to_speech_stream_for_text_to_speech": "text to speech \n\ntext = the text you want to speak\n\nlanguage = default en , get the list of supported language for get /tts/speech/lang\n\n\n```\nconsole.log(response);\n        audio.pause();\n        audio.src = URL.createObjectURL(response.data);\n        audio.play();\n\n```",
    "random_word_getter_for_free_random_word_generator_api": "Fetches a random word.",
    "qr_code_generator_for_qr_code_api_generator": "This endppint https://qrcodegenerator-47jz.onrender.com/qrcode/download/{text} will take input from user , you can replace {text} with anything and it will generate response as QR code Image.",
    "connect_an_existing_user_with_a_new_identity_provider_for_dailycred": "",
    "captcha_generator_for_captcha_generator": "This is a captcha generator tool that gives you an image of 270x80 pixels and the text solution. It has different settings that allows you to configure the captcha difficulty, and even create a captcha with a custom text solution.",
    "get_languages_for_judge0_extra_ce": "Get active languages.",
    "list_categories_for_famous_quotes": "List all available categories",
    "get_random_quotes_for_famous_quotes": "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint",
    "qr_code_image_generator_for_qr_code_api_v6": "This API is a QR code generation service built using Flask. It accepts a 'url' parameter in the GET request and returns a PNG image of the generated QR code. The QR code can be saved as an attachment with the filename 'qr_code.png'. The API runs on port 4000 and can be easily integrated into any application or website that needs to generate QR codes.",
    "get_coordinates_for_geolocate": "GET request to the \"/geocode\" endpoint with an \"address\" parameter containing the address or place you want to geocode",
    "index_get_for_cors_proxy_v2": "Welcome to CORS Proxy",
    "root_get_for_json_sort_and_filter": " ",
    "area_from_to_number_for_unitconversion": "Area unit conversions",
    "force_from_to_number_for_unitconversion": "Force unit conversions",
    "qr_code_for_qr_code_v8": "For example:\nhttp://owatheowais.pythonanywhere.com//qr?url=https://www.google.com",
    "analysis_for_seo_fast_audit": "Analyse the content from URL",
    "scraper_for_seo_fast_audit": "Gets the text of any html selector",
    "verify_email_for_email_verifier": "To verify a single email address",
    "get_a_list_of_all_units_for_unit_measurement_conversion": "This endpoint gets a full list of units available for conversion",
    "convert_a_unit_for_unit_measurement_conversion": "GET the Unit and Value you want to convert, and get a object with the result and abbreviation (if available).",
    "get_product_for__demo_project_v12": " ",
    "get_order_for__demo_project_v12": " ",
    "get_user_orders_for__demo_project_v12": " ",
    "text_to_image_for_text2image": "Generate image using input text.",
    "get_categories_for__demo_project_v13": " ",
    "get_user_orders_for__demo_project_v13": " ",
    "get_products_in_category_for__demo_project_v13": " ",
    "c_versions_for_c_code_compiler": "C Versions",
    "shorten_url_for_shortadlink_shorten_urls_and_earn_money": "Primary method for shortening URL with custom alias.",
    "http_ulvis_net_api_write_get_for_free_url_shortener": "shorten url  url= url-wan't shorten &custom= your custom name& private= if wan't be public them 0 if private them 1http://ulvis.net/api/write/post",
    "generate_for_token_api": "Generate a new token for Language API",
    "getpdf_for_reword_pdf": " ",
    "getinpage_for_reword_pdf": " ",
    "getall_for_reword_pdf": " ",
    "text_to_speech_for_text_to_speech_v2": "Text to Speech Voice Reader",
    "extend_expiration_time_of_a_datacenter_proxy_for_ephemeral_proxies": "By calling this endpoint the expiration time of an already allocated proxy will be extended by 30 mins.\nSuccessive calls will keep incrementing the expiration time, up to a maximum of 24 hours.\n",
    "check_residential_proxies_service_status_for_ephemeral_proxies": "It returns the current status of the service, including the total number of residential proxies available and grouped by country.\n",
    "angle_from_to_number_for_unitconversion": "Angle unit conversions",
    "mass_from_to_number_for_unitconversion": "Mass unit conversions",
    "date_to_time_for_epoch_converter": "Convert datetime to timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674919760",
    "generate_qr_code_for_qr_code_generator_v14": "Simply Provide Url or Text in url parameter.",
    "phone_call_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with the phone number. When scanned, the QR Code will prompt the scanning device to 'dial the number'.",
    "bulk_whois_for_bulk_whois": "WHOIS query",
    "get_whois_batch_for_bulk_whois": "Get WHOIS batch.",
    "get_your_whois_batches_for_bulk_whois": "Get a list of your batches.",
    "hello_for_quick_qr_code_generator": "test hello endpoint",
    "qr_code_image_for_variable_size_qr_code_api": "this end point takes a 'GET' request with url / string and an size / integer as parameters and returns a QR Code image of the desired size.",
    "get_from_eztv_for_torrent_search": "can use this for search eztv",
    "get_from_piratebay_for_torrent_search": "for piratebay",
    "get_from_1337_x_for_torrent_search": "scrape data from various torrent websites such as 1337x",
    "track_list_album_for_spotify_downloader": "Get track list from album",
    "download_song_for_spotify_downloader": "Download a song by spotify's song ID",
    "metadata_track_for_spotify_downloader": "Get metadata about track",
    "commonports_for_commonportnumbers": "Get registered service names and transport protocols port numbers.",
    "createsecret_for_otp_2fa": "[Step 0] Create new secret",
    "check_a_url_for_fraudfreeze_phishing_check": "Check if a URL is a known phishing or scam attempt",
    "uuid_to_username_for_teamriverbubbles_random_utilities": "turns a uuid into a username",
    "specificcolorset_for_colorme": "Get a set of colors based on input color like - \"yellow\" / \"red\"",
    "randomcolorset_for_colorme": "Get a random set of colors",
    "generate_avatar_for_avatar_io_modern_avatar_placeholder_api": "Generates the desired avatar and returns the image to the client.",
    "sendsms_for_bitly_example": "",
    "gettask_for_reword_pdf": " ",
    "endponit_for_probablythese": "This is an End Point",
    "scrape_for_amazon_product_scraper_api_full_page_scraping": "Data scrape for an amazon product listing page",
    "performance_monitor_metrics_for_perf_monitor_metrics": "- Retrieve real-time CPU usage in percentage (%).\n- Monitor memory utilization and get the percentage of memory in use.\n- Track network latency to assess network performance.\n- Access system bottlenecks information to identify performance constraints.\n- Easy integration into your application or system using the RESTful API.\n- Accelerate troubleshooting and performance optimization of TI systems.",
    "measurements_for_measurement_units_converter": "GET array of all types of measurement. The array key is in the format {inputUnit-outputUnit} - you can later use these values \u200b\u200bwhen converting units of measurement.",
    "convert_from_one_unit_of_measure_to_another_for_measurement_units_converter": "Convert efficiently and quickly between more than 50 of the most used units with a simple and intuitive conversion tool. At the output, you will get an answer with the conversion of your measurement units.",
    "stats_for_tly_link_shortener": "",
    "generating_agency_specific_reports_for_odesk_apis": "Time reports can be generated for an agency, in order to use this API the authorized user needs staffing manager permissions to the agency.",
    "metadata_playlist_for_spotify_downloader": "Get metadata about playlist",
    "track_list_playlist_for_spotify_downloader": "Get Track List from Playlist",
    "generate_ip_for_ipinfoapi": "Generate fake IP address",
    "get_ip_for_ipinfoapi": "Get user's IP",
    "send_embed_for_discord_webhook_api": "Allows you to send an embed via a webhook. Read the documentation to get this to work.",
    "info_for_unitconversion": "List all supported units",
    "random_proxy_for_proxypage": "Get random proxy,\n\nchoose type and country",
    "tier2_for_proxypage": "Tier 2 proxies\n\nEach proxy returned costs 1 credit\n\n\nWith our /v1/tier2 endpoint you can set different parameters for proxies that you need.\n\nYou can set type which is just your proxy type, either HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25 (which is smtp proxy)\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.",
    "tier1_for_proxypage": "List our tier 1 proxies with filters\nThis proxies are more comprehensively checked\n\n\nYou can set type which is just your proxy type, either HTTP, HTTPS\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.",
    "hsl_to_cmyk_for_convexity": "Converts  hsl color code to cmyk color code",
    "cmyk_to_hsv_for_convexity": "Converts  cmyk color code to hsv color code",
    "hex_to_cmyk_for_convexity": "Converts hex color code to  cmyk color code",
    "download_for_reword_pdf": " ",
    "getbyid_for_reword_pdf": " ",
    "countrylist_for_arabiccountrylist": "Get Arabic & English Country list",
    "generate_uuid_for_uuid_generator_v2": "Generates a UUID and returns to client",
    "get_products_in_category_for__demo_project_v12": " ",
    "objective_c_versions_for_objective_c_code_compiler": "Objective-C Versions",
    "tts_for_text_to_speech_api": "takes text & languages code  and returns as **.mp3** format",
    "info_for_unit_converter": "info",
    "transform_units_using_the_get_method_for_unit_converter": "Transform Units Using The Get Method",
    "multiple_guids_for_guid_generator_tool": "Endpoint to retrieve a multiple GUIDs, returned as a a string array.\nRequired query string parameter: *number* - needs to be between 0 and 1000.\nGET only query.\nReturn content-type is text/json.",
    "single_guid_for_guid_generator_tool": "Endpoint to retrieve a single GUID, returned as a simple string.\nNo parameters required.\nGET only query.\nReturn content-type is text/plain.",
    "qrdecoder_for_qr_decoder": "Returns the QRCode message from an image or PDF file with embeded QR codes.\n\nFiles must be publicly accessible via the web and the src input parm expects a direct link to the file.  Html pages with embeded images or pdfs are not valid and will return empty.",
    "get_supported_file_type_for_all_in_one_file_converter": "Get supported file types by providing an input file type",
    "full_data_for_question_explorer": "full data",
    "data_for_question_explorer": "full Data",
    "me_for__onboarding_project_v3": " ",
    "generate_advance_base64_for_qr_code_generator": "Generates a QR code as base64 with additional settings.",
    "get_skin_from_uuid_for_teamriverbubbles_random_utilities": "gets a skin from a uuid",
    "convert_for_pdflayer": "Main API endpoint for PDF conversion",
    "reverse_dns_lookup_for_viewdns": "Find the reverse DNS entry (PTR) for a given IP. This is generally the server or host name.",
    "ip_location_finder_for_viewdns": "This tool will display geographic information about a supplied IP address including city, country, latitude, longitude and more.",
    "dns_record_lookup_for_viewdns": "View all configured DNS records (A, MX, CNAME etc.) for a specified domain name.",
    "json_for_ip_echo": "Response your real IP with json format",
    "text_for_ip_echo": "Response your real IP with plain format",
    "sample_user_read_for_quickmocker": "Sample user read",
    "kd_calculator_for_teamriverbubbles_random_utilities": "Calculates a kd (kill death ratio)",
    "full_stack_jobs_for_usa_jobs_for_it": "Full Stack Jobs Api",
    "react_jobs_for_usa_jobs_for_it": "React Jobs API",
    "laravel_jobs_for_usa_jobs_for_it": "Laravel Jobs Api",
    "2_thumbnail_ready_for_pagepeeker": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds",
    "1_shoot_thumbnail_for_pagepeeker": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)",
    "get_video_info_for_youtube_video_download_info": "Provides the video download links and other relevant information in the JSON format.",
    "uuidv5_generator_for_uuid_generator": "UUIDv5 generator",
    "uuidv3_generator_for_uuid_generator": "UUIDv3 generator",
    "uuidv4_generator_for_uuid_generator": "Generate UUIDv4",
    "convert_from_one_unit_to_another_for_measurement_unit_converter": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.",
    "measure_units_for_measurement_unit_converter": "GET enum array of all units of the given type.",
    "measurements_for_measurement_unit_converter": "GET enum array of all types of measurement",
    "nal_query_for_n_meros_a_letras": "Convierte un n\u00famero a letras",
    "nal_path_for_n_meros_a_letras": "Convierte un n\u00famero a letras",
    "get_call_for_email_validation": "Used to fetch api result using the request id received in responses.",
    "mac_address_lookup_for_viewdns": "This tool will display the name of the company that manufactured a specific network device based on its MAC Address.",
    "ping_for_viewdns": "Test how long a response from remote system takes to reach the ViewDNS server. Useful for detecting latency issues on network connections.",
    "kda_calculator_for_teamriverbubbles_random_utilities": "Calculates a kd (kill + assists death ratio)",
    "generate_qr_code_for_qr_code_generator_pro": "Easily convert any URL into a QR code that can be downloaded and printed.",
    "color_to_picture_for_color_to_picture_api": "Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color)",
    "me_for__demo_project_v13": " ",
    "get_products_for__demo_project_v13": " ",
    "get_order_for__demo_project_v13": " ",
    "rgb_to_hsl_for_convexity": "Converts  rgb color code to hsl color code",
    "haber_for_kolektifapi": "\u00abntv.com.tr\u00bb Son Dakika Haberleri Verileri",
    "data_engineer_jobs_for_usa_jobs_for_it": "Data Engineer Jobs Api",
    "big_five_personality_test_for_personality_quest": "This route is for getting Big Five Personality Test Questionnaire",
    "disc_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for DISC Personality Test.",
    "sixteen_type_personality_questionnaire_for_personality_quest": "This route is for getting Sixteen Type Personality Test Questionnaire.",
    "retrieve_response_for__paraphrasing_api": "With the JOB ID generated on the \"Paraphrase\" endpoint, you will be able to get the response from that rewrite.",
    "wrt_transformer_for_walnut_entity": "Get the text input and returns the entities identified.",
    "questionnaire_sentino_for_sentino": "They are sampled from original items so the first 30 are best for Big5, first 60 are best for BFAS and 90 for NEO.  The more items scored the better.",
    "an_for_sentiment_analysis_v13": "an",
    "classify_for_iab_taxonomy_text_classification": "takes one input text and returns the confidence score and IAB classification/categorization",
    "v1_sentiment_for_sentiment_by_api_ninjas": "Returns sentiment analysis score and overall sentiment for a given block of text.",
    "sentiment_analysis_for_multi_lingual_sentiment_analysis": "Multi-lingual Sentiment Analysis parameter {lang} is optional, we can detect the language but you can define it for better result and accurate",
    "get_api_for_voter_card_ocr": "Used to fetch api result using the request id received in responses.",
    "eff_diceware_for_mad_libs_diceware": "**Generate password using plain diceware**\n\nUse query string parameter *nwords* to change number of words in the password\n\nAccepted values for *nwords* parameter: 4 to 7",
    "madlibs_diceware_for_mad_libs_diceware": "**Generate password using madlibs diceware**\n\nUse query string parameter *nphrase* to change number of phrases in the password\n\nThe generated phrase/s have the following structure: \n\n```<adverb> <adjective> <noun>```\n\nAccepted values for *nphrases* parameter: 1 and 2",
    "eff_wordlist_for_mad_libs_diceware": "**Get the wordlist used by plain diceware in JSON format**",
    "get_php_for_terminology_extraction": "",
    "get_call_for_philippines_driving_license_ocr": "Used to fetch api result using the request id received in responses.",
    "languages_for_google_translate": "Returns a list of supported languages for translation.",
    "generate_for_article_rewriter_pro_api": "To rewrite articles",
    "content_analysis_for_seo_analysis": "Content Analysis endpoint",
    "extract_text_from_webpage_for_textapi": "Extract text from the webpage linked with the url query parameter.",
    "sentiment_for_textapi": "Get the sentiment of submitted text using VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media.",
    "extract_entities_for_textapi": "Extracts named entities from text.",
    "languages_for_linguin_ai": "Get the list of supported languages",
    "extract_for_mobile_phone_validation": "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in case you can't provide Country and service will try to guess the country :). Country recognition not very fast. Read docs to explain possible values.",
    "extract_fast_for_mobile_phone_validation": "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in /extract endpoint case you can't provide Country and service will try to guess the country :)",
    "read_text_for_profanity_filter": "Allows you to detect and filter out profanity / offensive form a given text. It is only available for English words. You can also censor out words in text content.",
    "analyze_text_for_sentiment_analysis_service": "Determine the sentiment of a given body of text",
    "segment_for_segmentor": "segment languages",
    "scramble_word_for_word_scramble": "Call scramble with {word} parameter",
    "sample1_for_testingsunlife": "sample1",
    "wrt_transformer_for_walnut_word_completion": "Returns the hidden word in the sentence.",
    "spellout_for_spellout": "Spell out number in given language using provided rule set",
    "languages_for_spellout": "List ISO 639 languages",
    "rulesets_for_spellout": "List of availible rule sets for given language",
    "languages_for_gcp_translate": "This endpoint returns a list of supported languages for translation.",
    "spell_check_for_bing_spell_check": "Check spelling.",
    "get_call_for_driving_license_ocr": "Used to fetch api result using the request id received in responses.",
    "detect_offensive_message_for_offensive_user_comment_detection": "This endpoint will detect hate speech, offensive language in a message",
    "go_for_fast_reading": "Convert raw text to Bionized Reading.",
    "career_aptitude_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for Career Aptitude Personality Test.",
    "iq_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for IQ Personality Test.",
    "main_for_neuronet_nlp": "Enter a single sentence.",
    "search_tweets_for_sentimental_analysis_v2": "searched tweets",
    "get_call_for_national_id_vietnam_ocr": "Used to fetch api result using the request id received in responses.",
    "languages_for_google_translator": "Returns a list of supported languages for translation.",
    "hello_for_hello_world_v2": "helloapi",
    "text_analysis_for_sentiment_analysis_v12": "Analyzes text using  VADER (Valence Aware Dictionary and sEntiment Reasoner)\n\nProvide  a string and the API will output combined, positive, neutral, and negative scores based on the output specified.",
    "advance_for_cleantalk": " ",
    "check_for_cleantalk": " ",
    "replace_for_cleantalk": " ",
    "synonym_for_gruite": "Synonyms of the word",
    "meanings_for_gruite": "Meaning of the word",
    "madlibs_wordlist_for_mad_libs_diceware": "**Get the wordlist used by madlibs diceware in JSON format**",
    "setup_for_cyber_guardian": "Generates a link that grants access to the configuration dashboard for the Cyber Guardian and redirects you to it, already logged in through Rapid.",
    "wrt_transformer_for_walnut_topic": "Gets the text and set of possible topics separated by a comma.\n\nReturns the ranking of topics from most relevant to least relevant.",
    "get_call_for_philippines_passport_ocr": "Used to fetch api result using the request id received in responses.",
    "get_call_for_philippines_voter_card_ocr": "Used to fetch api result using the request id received in responses.",
    "detect_language_for_quick_language_detector": "Feed this API a few sentences and have it determine what language it is with a confidence score",
    "profanity_filter_health_for_profanity_filter_v2": "Return the health status of the API. Returns current UTC time.",
    "translate_for_google_translate_v2": "https://cloud.google.com/translate/docs/languages",
    "languagedetection_for_what_s_language": "Detect the language of a given text and return the detected language code",
    "using_path_parameters_for_ai_tool_gpt_token_splitter": "limited input text size, limited delimiter quantity.",
    "v1_profanityfilter_for_profanity_filter_by_api_ninjas": "API Ninjas Profanity Filter API endpoint. Returns the censored version (bad words replaced with asterisks) of any given text and whether the text contains profanity.",
    "get_task_for_pan_card_ocr": "To get the response of the API request when used in asynchronous mode, you can use either of the following methods:\n\nPre-configuring a web-hook URL with IDfy Whenever the submitted task is completed, the response for the task would be sent back to your application through a POST HTTP request.\n\nMaking a GET call to IDfy GET call can be made to IDfy to fetch the API response for the completed tasks. You can create a GET call using the request_id.",
    "get_synthesize_for_speakeasy": "Synthesizes the provided text and returns the corresponding audio URL.",
    "get_rhyme_for_simple_poet": "Finds a rhyme for a given word in the database. If multiple words are a rhyme, one is picked at random.",
    "get_call_for_philippines_social_security_ocr": "Used to fetch api result using the request id received in responses.",
    "translation_for_ginger": "-",
    "rephrase_for_ginger": "-",
    "test_for_ginger": "-",
    "remove_profanity_for_auto_profanity_filter": "Removes Profanity from Text",
    "getgender_for_gender_from_name": "Finds the gender from over 100,000 (first) names.  Supports name variants as well.",
    "get_definitions_for_ginger": "-",
    "correction_in_sentence_for_ginger": "-",
    "correct_and_rephrase_for_ginger": "-",
    "chat_for_ai_chatbot": "The chatbot endpoint.",
    "get_for_synonyms_words": "We use the Get method in our api, which returns a string with the synonyms separated by commas, which can later be treated in the programming language you use.\n\nWord - here you put the word you want to know the synonym of.\nLanguage - EN, ES, FR and PT representing English, Spanish, French and Portuguese, just put one of the representations .\n\nIf the word has no synonym, the return is the word itself.",
    "enneagram_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for Enneagram Personality Test.",
    "pq_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for Positive Quotient    Personality Test.",
    "sentiment_analysis_for_google_s_bert_sentiment_analysis": "Multi-lingual Sentiment Analysis parameter {lang} is optional, we can detect the language but you can define it for better result and accurate",
    "v1_randomword_for_random_word_by_api_ninjas": "API Ninjas Random Word API endpoint. Returns a random word.",
    "retrieve_response_for_best_paraphrasing_api": "With the JOB ID generated on the \"Rewriter\" endpoint, you will be able to get the response from that rewrite.",
    "v1_textlanguage_for_text_language_by_api_ninjas": "API Ninjas Text Language API endpoint",
    "get_order_for__onboarding_project": " ",
    "get_user_orders_for__onboarding_project": " ",
    "me_for__onboarding_project": " ",
    "get_infringement_v1_infringement_research_predict_get_for_stacks_patent_similarity": "Create a request item with the following information:\n\n- **text**: could be the description of a company asset or a product explanation. It should be minimum length of `20` words for better performance. Note that GET queries are limited to `2048` characters (_required_).\n- **patent_number**: should start with a country code and end with the _Kind_ _Code_. You can enter as many as `5` patent numbers, each separated with a comma (_required_).\n- **model_name**: is the name of the model empowering Stacks Patent Similarity engine. Defaults to `stk_nova`.",
    "emotional_intelligence_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for Emotional Intelligence  Personality Test.",
    "display_entities_for_textapi": "Renders the extracted entity types on submitted text or spans defined manually.",
    "estimate_for_youtuber_success_estimator": "Submit a YouTube `channelId` value along with the `channelType` as query param values appended to the endpoint for getting back the estimated video view performance of the submitted channel.\n\n## Example\nThis submits a request for the estimated 30 day video view performance of the YouTube channel with that unique `channelId` value provided in the query param\n\n`GET /api/v0/dmt_estimator?channelId=UChQl2YkLt3dj-KDyGUBzcHw&channelType=youtube`\n\n## FAQ\n\nQ. Does the DMT Channel Estimator support other platforms like TikTok?\nA. This is currently planned and in development - if you have ideas for other platforms you'd like to be supported feel free to reach out!\n\nQ.  What is the accuracy of the estimations?\nA. This estimator has been tested in dozens of real-life campaigns with clients spending 6-7 figures on each influencer native ad campaign, totaling out in a median margin of error of 10%. Not bad!\n\nWe will say that while most channels have a certain degree of predictability in terms of performance, more popular *and* less frequently posting channels are outliers that the estimator will only be so accurate in estimating.\n\nQ. So no guarantees? How should I use this?\nA. Use it like the creators of the API have: as a way to understand baseline performance of a given influencer's channel and how you can back out of that with your own campaign's goals to a pricing number that makes sense.\n\nQ. Is there an offering for this API to integrate *directly* into my application?\nA. Yes, feel free to reach out and we can discuss more custom integrations including callback url support\n\nQ. Can I reach out if I am interested in doing a YouTube or broader influencer campaign activation?\nA. Yes, feel free to reach out and we can make a recommendation to you: [Best of Bold Agency](https://www.bestofbold.com/?utm_source=dmt-estimator)\n\nQ. What is the SLA for fixing bugs?\nA. ASAP! We dont have one much more official than that, we are focused availability and making sure the predictions are as accurate as possible\n\nQ. Will you expose the prediction model?\nA. No plans to do this for now, if you have ideas for prediction models or if and how you would like to incorporate your own, feel free to reach out!",
    "prices_date_for_route_precedence_test_1": "/prices/{date}",
    "prices_today_for_route_precedence_test_1": "/prices/today",
    "getpetbyid_for_thisisapublicapi_v2": "Returns a single pet",
    "loginuser_for_thisisapublicapi_v2": "",
    "getorderbyid_for_thisisapublicapi_v2": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "geolocation_from_an_ip_address_for_abstract_ip_geolocation": "Get Geolocation from an IP Address",
    "endpoint_1_for_my_api1": " ",
    "open_api_v1_0_indoor_air_quality_iot_for_20211230_testing_upload_swagger": "Apply for this API to access the steps for indoor air quality information about IoT device - v2",
    "testing_endpoint_for_20211230_testing_upload_swagger": "testing endpoint",
    "for_testin_for_test_v5": "For testing",
    "test_for_underscore_test": "/test",
    "rtrt_for_hello_v2": "uuyu",
    "view_personalized_greeting_for_pe_demo": "View a personalized greeting for the specified or guest user.",
    "get_help_for_pe_demo": "View help information about available resources in HTML format.",
    "view_request_headers_and_body_for_pe_demo": "View the request headers and body in JSON format.",
    "testtesttest_for_test": "nsadas",
    "all_products_for_recash": "This will gives you all the products with codes on the data base",
    "search_for_recash": "This will filter what you want from the products on the data base",
    "search_for_revdl": "Eto no mirecherche",
    "app_downloader_for_revdl": "Ity ny api  *mi-downloader*an'le `apps`",
    "albums_for_march4": "njnj",
    "some_operation_od_for_test_v2": "H2H team comparison",
    "logoutuser_for_privatepublicapi": "Logs out current logged in user session",
    "getorderbyid_for_privatepublicapi": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getpetbyid_for_privatepublicapi": "Returns a single pet",
    "user_endpoint_for_asd": "user",
    "api_for_a": "a",
    "test_for_test_v6": "test",
    "v1_for_versioning_free": "v1",
    "getorderbyid_for_petstoreratelimit": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "logoutuser_for_petstoreratelimit": "",
    "loginuser_for_petstoreratelimit": "",
    "v1_for_versions_paid": "v1",
    "sdafdasf_for_lets": "adsfdasf",
    "getorderbyid_for_petstore_blitz": "For valid response try integer IDs with value >= 1 and <= 10.  Other values will generated exceptions",
    "getuserbyname_for_petstore_blitz": " ",
    "getinventory_for_petstore_blitz": "Returns a map of status codes to quantities",
    "endpoint_a_for_putreq": "end",
    "endpint_b_for_putreq": "efsdfs",
    "dddddda_for_ddd": "fdfdf",
    "get_products_for_asdfadsf": " ",
    "get_product_for_asdfadsf": " ",
    "get_categories_for_asdfadsf": " ",
    "facebook_ad_copy_for_facebook_ad": "Generate Facebook Ad using AI",
    "thelast1_for_frederick": "X-RapidAPI-Proxy-Secret",
    "https_football_api_key_p_rapidapi_com_for_football_api_key": "https://football_api_key.p.rapidapi.com/",
    "extract_top_keywords_phrases_by_density_all_headers_for_seo_automations": "Analyze any webpage's keyword density for SEO or research. Get the specified number of keywords or phrases you wish, sorted by density and occurrences in a JSON format. The algorithm has been optimized for pages with large amounts of text, as well as advanced cloud infrastracure ensuring accurate and speedy results for your SEO needs. This API uses Puppeteer to scrape even the most advanced SPA ( Single Page Applications ).",
    "extract_sitemap_xml_as_json_for_seo_automations": "Are you looking for an API that can quickly and easily download and parse sitemap.xml files into JSON format? Look no further! Our API allows you to make a simple GET request, passing in the URL of a sitemap.xml file as a parameter. The API will handle the rest, downloading the file, parsing it into a JSON object, and returning the result in the response. And if you need a little extra information to help organize and navigate the URLs in the sitemap, we've got you covered there too. By adding a query parameter to the GET request, you can also include category and breadcrumb information for each URL in the parsed sitemap. Give it a try and see how much easier working with sitemaps can be!",
    "getpetbyid_for_multipleteamscallingtest": "Returns a single pet",
    "getuserbyname_for_multipleteamscallingtest": "Get user by user name",
    "loginuser_for_multipleteamscallingtest": "Logs user into the system",
    "logoutuser_for_petstore_blitz": " ",
    "create_a_new_link_for_url_link_shortener": "Create a new link",
    "get_a_list_of_domains_for_url_link_shortener": "Get a list of domains",
    "getorderbyid_for_publicapitestinginbox": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "loginuser_for_publicapitestinginbox": "",
    "getpetbyid_for_publicapitestinginbox": "Returns a single pet",
    "validate_access_using_basic_authentication_for_pe_demo": "Validate access using basic authentication.",
    "s_for_ssssss": "sssssssss",
    "lookup_for_people_lookup": "Lookup people by name and US state (optional)",
    "loginuser_for_petstore_blitz": " ",
    "view_json_response_for_pe_demo": "View a sample response in JSON format.",
    "view_api_affirmation_for_pe_demo": "View API affirmation in HTML format.",
    "getpetbyid_for_petstore_blitz": "Returns a single pet",
    "view_a_personalized_greeting_for_pe_demo": "View a personalized greeting for the specified or guest user.",
    "view_xml_response_for_pe_demo": "View a sample response in XML format.",
    "view_ip_address_for_pe_demo": "View the IP address of the client in JSON format.",
    "getallcoupon_for_coupons": "getallcoupon",
    "all_for_coupons": "get all coupons",
    "get_order_for_asdfadsf": " ",
    "random_number_fact_for_testing": "Random Number Fact",
    "fact_for_specific_number_for_testing": "Fact for specific number",
    "getuserbyname_for_publicapitestinginbox": "",
    "logoutuser_for_publicapitestinginbox": "",
    "getinventory_for_publicapitestinginbox": "Returns a map of status codes to quantities",
    "get_user_for_hello_world": "get user by id",
    "logoutuser_for_multipleteamscallingtest": "Logs out current logged in user session",
    "getinventory_for_privatepublicapi": "Returns a map of status codes to quantities",
    "loginuser_for_privatepublicapi": "Logs user into the system",
    "jobs_for_jobsapi": "get's jobs",
    "venture_for_16e0e5f7a076c2f62a2e41f6b5b99d37e5b9b25e": "Link to any suggestions on a nail",
    "getpetbyid_for_thisshouldbefree": "Returns a single pet",
    "getorderbyid_for_thisshouldbefree": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "logoutuser_for_thisshouldbefree": "",
    "logoutuser_for_thisisapublicapi_v2": "",
    "getuserbyname_for_freeplanwithhardlimit": "",
    "loginuser_for_freeplanwithhardlimit": "",
    "getinventory_for_freeplanwithhardlimit": "Returns a map of status codes to quantities",
    "getuserbyname_for_privatepublicapi": "Get user by user name",
    "get_products_in_category_for_asdfadsf": " ",
    "getuserbyname_for_thisisapublicapi_v2": "",
    "getinventory_for_thisisapublicapi_v2": "Returns a map of status codes to quantities",
    "social_media_caption_for_social_media_caption": "Generate catchy captions for social media",
    "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation": "Provide async prompt and threadid to fetch content.\nThis endpoint is Free and you are allowed to pull it once every 2 seconds to fetch your content.",
    "20_ad_headlines_generator_25_seconds_for_adcopy_ai_google_ads_ai_text_generation": "Get relevant & Complint Google Ad headlines for SEM and PPC marketers, created by SEM Experts. Results include 10+ ad headlines, and are based on user inputs as well as A.I. Intelligence based on OpenAI's engine. \n\n**Detailed description:**\nThe Headlines generator endpoint uses advanced prompt engineering to analyze user inputs in the form of URL, subject, and important keywords to create high-quality ad headlines that are tailored to the product or service being advertised. By leveraging the advanced capabilities of OpenAI's ChatGPT engine, the endpoint is able to deliver top-of-the-line ad headlines that are optimized for relevance, clarity, and engagement.\n\n**Detailed Technical Documentation:**\nThe Headlines generator endpoint of AdCopy AI can be accessed through a GET request, with the following query parameters:\n\n**subject:** Required. A string of between 10 and 60 characters, which represents the \"value proposition\" of the product or service being advertised. The user is advised to provide keywords in a comma-delimited format.\n\n**url:** Required. A string that represents the URL of a page that describes the product or service being advertised. The API will fetch the content from the page and extract relevant keywords to help generate quality ads.\n\n**mostImportantKeywords:** Optional. A string of up to 100 characters, representing the most important keywords about the ad group being advertised. The presence of these keywords in the resulting content is not guaranteed.\n\n**language:** Optional. A string that represents the target audience's language in ISO-2 format (e.g. EN, IT, ES, etc.). The field is currently in alpha testing and may not provide results in the requested language.\n\n**country:** Optional. A string that represents the target audience's country in ISO-2 format (e.g. US, CA, IT, etc.). The field is currently in alpha testing and may not provide country-specific content.\n\n**exampleHeadlines:** Optional. A string of at most 200 characters, representing example headlines that the user may provide to fine-tune the results.\n\nThe endpoint will return up to 10 ad headlines that are tailored to the product or service being advertised. The headlines will be optimized for relevance, clarity, and engagement, leveraging the advanced capabilities of OpenAI's ChatGPT engine and Significat Prompt Optimization.",
    "10_ad_descriptions_generator_25_seconds_for_adcopy_ai_google_ads_ai_text_generation": "Get relevant & Complint Google Ad descriptions for SEM and PPC marketers, created by SEM Experts. Results include 10+ ad descriptions, and are based on user inputs as well as A.I. Intelligence based on OpenAI's engine. \n\n**Detailed description:**\nThe Descriptions generator endpoint uses advanced prompt engineering to analyze user inputs in the form of URL, subject, and important keywords to create high-quality ad descriptions that are tailored to the product or service being advertised. By leveraging the advanced capabilities of OpenAI's ChatGPT engine, the endpoint is able to deliver top-of-the-line ad descriptions that are optimized for relevance, clarity, and engagement.\n\n**Detailed Technical Documentation:**\nThe Descriptions generator endpoint of AdCopy AI can be accessed through a GET request, with the following query parameters:\n\n**subject:** Required. A string of between 10 and 60 characters, which represents the \"value proposition\" of the product or service being advertised. The user is advised to provide keywords in a comma-delimited format.\n\n**url:** Required. A string that represents the URL of a page that describes the product or service being advertised. The API will fetch the content from the page and extract relevant keywords to help generate quality ads.\n\n**mostImportantKeywords:** Optional. A string of up to 100 characters, representing the most important keywords about the ad group being advertised. The presence of these keywords in the resulting content is not guaranteed.\n\n**language:** Optional. A string that represents the target audience's language in ISO-2 format (e.g. EN, IT, ES, etc.). The field is currently in alpha testing and may not provide results in the requested language.\n\n**country:** Optional. A string that represents the target audience's country in ISO-2 format (e.g. US, CA, IT, etc.). The field is currently in alpha testing and may not provide country-specific content.\n\n**exampleDescriptions:** Optional. A string of at most 200 characters, representing example descriptions that the user may provide to fine-tune the results.\n\nThe endpoint will return up to 10 ad descriptions that are tailored to the product or service being advertised. The descriptions will be optimized for relevance, clarity, and engagement, leveraging the advanced capabilities of OpenAI's ChatGPT engine and Significat Prompt Optimization  for your specific ad and product  or service requirement.\n\nTry it now, for free.",
    "get_anything_for_httpbin": "Forward to httpbin GET /anything endpoint",
    "multi_language_support_for_free_ip_geolocation": "Get an IP's country name in a different language. 5 languages are currently supported i.e. English - en, German - de, French - fr, Japanese - ja and Simplified Chinese -zh-CN. The response will contain an ASCII encoded version of the country name in the language you specify.",
    "any_ip_for_free_ip_geolocation": "Get the location, city, country, lat/long etc of any IP address",
    "alerts_active_zone_zoneid_for_national_weather_service": "A list of active alerts by zone id. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/zone/ILZ081",
    "stations_for_national_weather_service": "A list of stations and station metadata that can be filtered by parameters. If no parameters are provided, then all stations are returned. This list is not configured by field offices and only returns active stations. Example: /stations?limit=10&states=KS,MO",
    "stations_stationid_for_national_weather_service": "Metadata about a station. Similar to /stations endpoint with id parameter. Example: /stations/KMKC",
    "latest_top_15_earthquake_felt_by_local_for_indonesia_latest_weather_and_earthquake": "Latest Top 15 Earthquake (felt by local)",
    "latest_top_15_earthquake_for_indonesia_latest_weather_and_earthquake": "Latest Top 15 Earthquake",
    "weather_cities_in_indonesia_filtered_by_province_code_for_indonesia_latest_weather_and_earthquake": "Weather Cities in Indonesia filtered by Province (Code)\n\nHere is the list of Povince Code (kode_bps)\n- 11\tProvinsi Aceh\n- 51\tProvinsi Bali\n- 19\tProvinsi Bangka Belitung\n- 36\tProvinsi Banten\n- 17\tProvinsi Bengkulu\n- 34\tProvinsi DI Yogyakarta\n- 31\tProvinsi DKI Jakarta\n- 75\tProvinsi Gorontalo\n- 15\tProvinsi Jambi\n- 32\tProvinsi Jawa Barat\n- 33\tProvinsi Jawa Tengah\n- 35\tProvinsi Jawa Timur\n- 61\tProvinsi Kalimantan Barat\n- 63\tProvinsi Kalimantan Selatan\n- 62\tProvinsi Kalimantan Tengah\n- 64\tProvinsi Kalimantan Timur\n- 65\tProvinsi Kalimantan Utara\n- 21\tProvinsi Kepulauan Riau\n- 18\tProvinsi Lampung\n- 81\tProvinsi Maluku\n- 82\tProvinsi Maluku Utara\n- 52\tProvinsi Nusa Tenggara Barat\n- 53\tProvinsi Nusa Tenggara Timur\n- 94\tProvinsi Papua\n- 91\tProvinsi Papua Barat\n- 14\tProvinsi Riau\n- 76\tProvinsi Sulawesi Barat\n- 73\tProvinsi Sulawesi Selatan\n- 72\tProvinsi Sulawesi Tengah\n- 74\tProvinsi Sulawesi Tenggara\n- 71\tProvinsi Sulawesi Utara\n- 13\tProvinsi Sumatera Barat\n- 16\tProvinsi Sumatera Selatan\n- 12\tProvinsi Sumatera Utara",
    "climate_forecast_for_30_days_for_vision_weather_map": "With the climate forecast for 30 days you can request weather data for the next 30 days. This product is based on a statistical approach for our historical weather data and is updated every hour.",
    "5_day_3_hour_forecast_data_for_vision_weather_map": "The 5-day forecast is available in any location or city. It contains weather data every 3 hours. The forecast is available in JSON or XML format.",
    "current_weather_data_for_vision_weather_map": "With this type of request you can get weather data anywhere on earth. The current weather data is updated online based on data from more than 40,000 weather stations.",
    "dailyweather_for_history": "This endpoint returns the historical weather for a given day for a given location (latitude and longitude)",
    "hourlyweatherzip_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (country and zip-code)",
    "dailyweatherzip_for_history": "This endpoint returns the historical weather for a given day for a given location (Country and zip code)",
    "get_the_forecast_for_cloud_cast": "Get the forecast for the current city",
    "get_wind_speed_for_cloud_cast": "Get the current wind speed",
    "get_current_weather_for_cloud_cast": "Gets the current weather for the inputted city name",
    "latest_earth_quake_happened_on_indonesia_bmkg_for_indonesia_most_accurate_weather_and_earthquake": "Latest earth quake happened on Indonesia",
    "weather_forecast_for_indonesian_cities_bmkg_for_indonesia_most_accurate_weather_and_earthquake": "Weather forecast for Indonesian cities BMKG",
    "aaaaaa_for_test": "aaa",
    "search_mountain_peak_by_name_for_peak_conditions": "search for mountain peaks by name. returns all mountains with names containing the search query, along with their associated peak_id.",
    "get_extended_report_by_mountain_id_for_peak_conditions": "Returns an extended 6-day report for the mountain peak specified in the request.",
    "get_daily_report_by_mountain_id_for_peak_conditions": "Returns a daily report for the mountain peak specified in the request.",
    "by_city_for_ambee_air_quality": "Get the latest air quality data for your city",
    "weather_for_ambee_air_quality": "Get weather data for any place based on coordinates",
    "by_coordinates_for_ambee_air_quality": "Get nearest places readings based around the given latitude and longitude",
    "classification_for_koppen_climate_classification": "Get K\u00f6ppen classification code for the given latitude and longitude.",
    "v1_weather_for_weather_by_api_ninjas": "API Ninjas Weather API endpoint.",
    "weather_for_weather_v14": "dsfghbn",
    "get_sunrise_and_sunset_times_for_sunrise_sunset_times": "Get sunrise and sunset times by date, latitude, and longitude.",
    "moon_information_for_ouranos": "Moon Information return moon phase and illumination.",
    "predict_feature_forecast_1_day_for_ouranos": "Predict Forecast returns \n- Binary predict value, 1 if it\u2019s a good night to observe and 0 if it\u2019s not. This value is calculated according to the forecast for the night.\n- Rating, score out of 5.\n- Tips for astronomers based on the forecast.",
    "7_day_forecast_for_ouranos": "7 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 7 day every 3 hours",
    "metrics_for_testing_for_my_use": "metrics",
    "list_all_api_for_testing_for_my_use": "list all api",
    "view_from_16_day_daily_forecast_dates_for_vision_weather_map": "16-day forecasts are available in any location or city. Forecasts include the daily weather and are available in JSON or XML format. It is only available for all paid accounts.",
    "station_info_for_aviation_weather_center": "Information about a weather reporting station.",
    "most_recent_tafs_for_aviation_weather_center": "Obtain the most recent TAFs from the past X hours. If you use the `mostRecent` flag only one TAF is returned. Otherwise, all TAFs from the specified time window will be returned.",
    "most_recent_metars_for_aviation_weather_center": "Obtain the most recent METARs from the past X hours. If you use the `mostRecent` flag only one METAR is returned. Otherwise, all METARs from the specified time window will be returned.",
    "5_day_forecast_for_ski_resort_forecast": "Returns the 5 day forecast for a given resort name",
    "current_snow_conditions_for_ski_resort_forecast": "Returns the current snow conditions for a given resort name",
    "hourly_forecast_for_ski_resort_forecast": "Returns the hourly forecast for a given resort name",
    "get_weather_updates_for_weather_api_by_any_city": "This endpoint get all necessary weather information",
    "by_postal_code_for_ambee_air_quality": "Check air quality for your postal code",
    "by_country_for_ambee_air_quality": "Provides the air quality data for a country",
    "v1_airquality_for_air_quality_by_api_ninjas": "API Ninjas Air Quality API endpoint.",
    "current_weather_data_for_open_weather_map": "current weather data",
    "metars_in_time_range_for_aviation_weather_center": "Obtain all METARs for a station collected between these start and end times using ISO8601  date/time format, with UTC offset: YYYY-MM-DDThh:mm:ssZ. Please see [W3C date/time formats](http://www.w3.org/TR/NOTE-datetime).",
    "current_weather_report_for_hourly_weather_report_of_hong_kong": "Current Weather Report",
    "daily_for_ai_weather_by_meteosource": "**Daily weather** forecast for the next 21 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
    "weather_statistics_for_ai_weather_by_meteosource": "Get average weather: **long-term normals** for a given place for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`.",
    "hourly_for_ai_weather_by_meteosource": "**Hourly weather** forecast for the next 5 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
    "weather_for_currencyconverter": "aaaaaaaa",
    "water_vapour_history_by_lat_lng_for_ambee_water_vapor_data": "Water vapour History by lat lng",
    "water_vapour_data_by_coordinates_for_ambee_water_vapor_data": "Get Water Vapour data by Coordinates",
    "local_history_weather_api_for_world_weather_online_api": "The Local Historical or Past Weather API (also known as City and Town Historical Weather API) allows you to access weather conditions from 1st July 2008 up until the present time. The API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon and wind speed.",
    "astronomy_api_for_world_weather_online_api": "The Astronomy and Lunar API method allows you to access astronomy information for any given date.",
    "marine_history_weather_api_for_world_weather_online_api": "The Historical Marine Weather API method allows you to access marine data since 1st Jan, 2015 for a given longitude and latitude, as well as tide data. The Historical Marine Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, Tide data, significant wave height, swell height, swell direction and swell period.",
    "m_t_o_d_aujourd_hui_niamey_niger_for_qwiper_weather": "Obtenez la temp\u00e9rature, les conditions du ciel, les vents, l'humidit\u00e9, etc. pour la ville de Niamey.",
    "andy_lin_for_weather_v13": "weather",
    "123_for_123": "make it better",
    "weatherendpoin_for_havo": "ob havo",
    "rapidapigetobservationhistorybycoordinates_for_forecast": "Get an Observation object with historical information.",
    "rapidapigetobservationhistorybystationid_for_forecast": "Get an History object with historical information.",
    "rapidapigetforecastsummarybylocationname_for_forecast": "Get Forecast",
    "weather_data_for_oikoweather": "Hourly historical and forecast weather parameters in time-series format, from 1950 to 16 days ahead for any location.",
    "daily_check_for_daily_limit_check": "daily limit check",
    "predict_feature_forecast_7_day_for_ouranos": "Predict Forecast returns \n- Binary predict value, 1 if it\u2019s a good night to observe and 0 if it\u2019s not. This value is calculated according to the forecast for the night.\n- Rating, score out of 5.\n- Tips for astronomers based on the forecast.",
    "planet_currently_visible_for_ouranos": "Planet currently visible",
    "get_station_information_for_noaa_tides": "Get information about the provided station ID.",
    "get_stations_for_noaa_tides": "Get list of all NOAA stations that provide tide predictions to be used in other endpoints.",
    "get_tides_for_a_station_for_noaa_tides": "Get tide information for the given station ID in local times.",
    "groundhogs_for_groundhog_day_api": "Returns all prognosticating animals with their known predictions.",
    "spec_for_groundhog_day_api": "Gets the schema for the JSON API as a yaml file.",
    "root_for_groundhog_day_api": "Returns a welcome message.",
    "3_day_forecast_for_ouranos": "3 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 3 day every 3 hours",
    "list_of_all_countries_for_climate_data": "List of all Countries",
    "search_location_by_name_or_zip_code_for_climate_data": "Search location by Name or zip code and get the key for the forecast",
    "list_of_cities_in_one_country_for_climate_data": "List of cities in one Country",
    "sunposition_for_sun_seeker_api": "Parameters:\nlat (float): The latitude of the location for which you want to get the solar position. The value should be between -90 and 90 degrees.\nlon (float): The longitude of the location for which you want to get the solar position. The value should be between -180 and 180 degrees.",
    "current_air_quality_for_air_quality": "Retrieves current air quality conditions for any location in the world, given a lat/lon.",
    "air_quality_forecast_for_air_quality": "Returns a 3 day (72 hour) air quality forecast for any point in the world given a lat/lon. ",
    "air_quality_history_for_air_quality": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.",
    "fake_weather_for_weathertest": "Get a fake weather, no date or authentication is necessary",
    "rapidapigethourlyforecastbylocationname_for_forecast": " ",
    "getstatus_for_forecast": "Check if the API is running.",
    "index_for_forecast": "See the current API version. Here is the link to the documentation",
    "get_humidty_for_cloud_cast": "Get the humidity for the current city",
    "rest_for_test_v2": "rest endpoint",
    "endpoint_for_magicmirror": "add endpoint",
    "air_quality_measurements_for_air_quality_api": "Gives current air quality measurements per hour for a given city!",
    "air_quality_forecasts_for_air_quality_api": "Gives hourly air quality forecast for a given city!",
    "current_air_quality_for_air_quality_api": "Gives back data of current air quality in a specified city!",
    "predictions_for_groundhog_day_api": "Get all predictions for a given year.",
    "get_climate_data_by_lat_lon_or_key_for_climate_data": "get climate for  the location Lat/Lon",
    "get_tide_station_area_data_for_stormglass_complete": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.",
    "get_tide_sea_level_data_for_stormglass_complete": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.",
    "get_tide_extreme_data_for_stormglass_complete": "**Stormglass Tide Extreme Data**\n\nRetrieve information about high and low tide for a single coordinate. If nothing is specified, the returned values will be in relative to Mean Sea Level - MSL.",
    "historical_weather_record_for_visual_crossing_weather": "The weather history data is suitable for retrieving hourly or daily historical weather records.",
    "weather_forecast_data_for_visual_crossing_weather": "Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level.",
    "historical_hourly_for_easy_weather": "Get a historical hourly forecast for the given latitude, longitude, and start date/time.",
    "daily_forecast_10_days_for_easy_weather": "Get a 10-day daily forecast for the given latitude and longitude.",
    "hourly_forecast_240_hours_for_easy_weather": "Get a 240-hour forecast for the given latitude and longitude.",
    "alerts_active_region_region_for_national_weather_service": "A list of active alerts by region. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/region/GL",
    "stations_stationid_observations_recordid_for_national_weather_service": "Data for a specific observation.  NOTE! See note in /stations/{stationId}/observations for important details on observation data.  Example: /stations/KMKC/observations/2017-01-04T18:54:00+00:00",
    "list_of_all_countries_for_weather_forecast_14_days": "List of all Countries",
    "list_of_cities_in_one_country_for_weather_forecast_14_days": "List of cities in one Country",
    "get_forecastdata_by_lat_lon_for_weather_forecast_14_days": "get forecast for 14 days for the location Lat/Lon",
    "time_zone_api_for_world_weather_online_api": "The Time Zone API method retrieves current local time and UTC offset hour and minute for a specified location.",
    "ski_weather_api_for_world_weather_online_api": "Ski Weather API provides worldwide ski and mountain weather forecast for upto 7-days.",
    "products_types_typeid_locations_locationid_for_national_weather_service": "A product for a location that has issued a product for a specific type.  Example: /products/types/AFD/locations/EAX",
    "stations_stationid_observations_for_national_weather_service": "A list of observations for a station.  NOTE! The API uses MADIS to provide observation data. The observation may be delayed while MADIS completes quality checks of the data. To limit the delay, the API is provided with incremental updates with various levels of checked data, and the API will return the variation of the observation with the most checked data. It is possible that no data is provided on the first variation, or that no data is checked on the first variation. It is up to the consumer to determine if the quality of data is appropriate. If not, the previous observation can be requested, or the next nearest station can be used. The API returns the state of the data for each value in the response, where \"Z\" (or \"null\") is for not checked (and may never be for some values) and \"V\" for checked. Please refer to MADIS for complete documentation on their data quality process.  Example: /stations/KMKC/observations",
    "rapidapigetforecastsummarybycoordinates_for_forecast": "Get Forecast summary information.",
    "48_hour_forecast_for_ouranos": "Hourly Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 48 hours.",
    "current_conditions_basic_for_easy_weather": "Get (basic) current conditions for the given latitude and longitude.",
    "hourly_forecast_48_hours_for_easy_weather": "Get a 48-hour forecast for the given latitude and longitude.",
    "current_conditions_detailed_for_easy_weather": "Get (detailed) current conditions for the given latitude and longitude.",
    "realtime_weather_api_for_weatherapi_com": "Current weather or realtime weather API method allows a user to get up to date current weather information in json and xml. The data is returned as a Current Object.",
    "astronomy_api_for_weatherapi_com": "Astronomy API method allows a user to get up to date information for sunrise, sunset, moonrise, moonset, moon phase and illumination in json.",
    "future_weather_api_for_weatherapi_com": "Future weather API method returns weather in a 3 hourly interval in future for a date between 14 days and 300 days from today in the future.",
    "weather_alerts_for_easy_weather": "Get weather alerts posted by the local meteorological agency for the given latitude and longitude.",
    "weather_for_monitoring_syatem": "Weather details Monitoring and Update in mobile",
    "get_weather_for_weather_with_ai": "Return weather in current, hourly and daily info.",
    "latest_earthquake_for_indonesia_latest_weather_and_earthquake": "Latest Earthquake",
    "dailyweatherseries_for_history": "This endpoint returns the historical weather for a given series of days for a given location (latitude and longitude)",
    "hourlyweather_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (latitude and longitude)",
    "top_cities_weather_in_indonesia_for_indonesia_latest_weather_and_earthquake": "Top Cities Weather in Indonesia",
    "groundhog_for_groundhog_day_api": "Returns a prognosticating animal and its known predictions.",
    "getcurrentweather_for_openweather": "Test",
    "getforecastweather_for_openweather": " ",
    "get_astronomy_data_for_stormglass_complete": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.",
    "retrieve_the_hardiness_zone_for_plant_hardiness_zone": "Pass a ZIP code in the endpoint path to return an object that includes the ZIP code and USDA Plant Hardiness Zone.",
    "search_autocomplete_api_for_weatherapi_com": "Search or Autocomplete API returns matching cities and towns.",
    "ip_lookup_api_for_weatherapi_com": "IP Lookup API method allows a user to get up to date information for an IP address in json.",
    "forecast_weather_api_for_weatherapi_com": "Forecast weather API method returns upto next 14 day weather forecast and weather alert as json. It contains astronomy data, day weather forecast and hourly interval weather information for a given city.",
    "getweatherforecast_for_apjoy_weather_forecast": "This endpoint provides weather forecast information based on the user's location. It returns the current weather conditions, daily forecasts, and additional weather data, such as temperature, humidity, and wind speed. The data is sourced from OpenWeatherMap, ensuring accurate and reliable information.",
    "current_for_ai_weather_by_meteosource": "**Current weather** conditions based on weather stations around the world.  Updated every 10 minutes. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
    "historical_weather_for_ai_weather_by_meteosource": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.",
    "weather_report_for_the_weather_api": "Gives weather report of a particular city.",
    "current_for_foreca_weather": "Current weather estimate for location.",
    "latest_observations_for_foreca_weather": "Observations from nearby representative weather stations.",
    "daily_for_foreca_weather": "Daily forecast.",
    "location_search_for_foreca_weather": "Search for locations by name.",
    "nowcast_for_foreca_weather": "3-hour forecast in 15-minute time steps.",
    "hourly_for_foreca_weather": "Hourly forecast.",
    "get_hourly_forecast_for_cloud_cast": "Get the hourly forecast",
    "history_weather_api_for_weatherapi_com": "History weather API method returns historical weather for a date on or after 1st Jan, 2010 (depending upon subscription level) as json.",
    "search_location_by_name_or_zip_code_for_weather_forecast_14_days": "Search location by Name or zip code and get the key for the forecast",
    "current_weather_data_of_a_location_for_weather_v6": "Returns the current (most recent) weather observation of a given location",
    "alerts_alertid_for_national_weather_service": "A specific alert by id provided by a search or list. Example: /alerts/NWS-IDP-PROD-2202530-2064731",
    "alerts_active_area_area_for_national_weather_service": "A list of active alerts by area. The ATOM format returns items in CAP-ATOM.",
    "products_types_typeid_locations_for_national_weather_service": "A list of locations that have issues products for a type. Example: /products/types/AFD/locations",
    "ocean_conditions_closest_to_latitude_longitude_for_wavebase": "\u200bhttps://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location.",
    "xyz_map_tiles_for_ocean_conditions_for_wavebase": "Wavebase Global Ocean Tiles API:\n\nWave Signficant Height (GET): https://api.wavebase.app/v1/tiles/singleband/{variable}/{date-timeslot - YYYYMMDDHH}/0/0/0.png\n\ne.g.: https://api.wavebase.app/v1/tiles/singleband/VHM0/2023051703/0/0/0.png \n\nCurrently only Tile at 0/0/0 is available Free.  Contact:  info@wavebase.app for additional tiles.",
    "get_all_latest_news_for_sri_lanka_news_api": "Get latest news from all the news sources.This route return all the latest news from each news source at once",
    "get_news_from_one_news_source_for_sri_lanka_news_api": "Get news from one news source passing {source} paramter value and {page} value.Each news soure different number of news count in one page.\n\n\n**News Sources\n--Lankadeepa.lk\n--Deshaya.lk\n--Ada.lk\n--BBCSinhala.com\n--Mawbima.lk",
    "get_all_news_on_pollution_for_pollution_news_api": "This endpoint would return all news on pollution in african countries available in our database.",
    "get_news_from_a_specific_source_for_pollution_news_api": "This Endpoint would return news on pollution in african countries from a specific news source",
    "get_all_climate_change_news_for_climate_change_api_v3": "This endpoint will return all news about climate change from top news sites.",
    "get_individual_news_sources_for_climate_change_api_v3": "Get climate change news from individual news sources.",
    "retrieve_data_for_instant_cameroon_news": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range",
    "home_page_for_instant_cameroon_news": "Home and Welcome page that introduces the API",
    "get_all_climate_change_news_for_live_climate_change_v2": "This endpoint will return news from climate change from all over the world",
    "get_individual_news_from_source_news_for_live_climate_change_v2": "Get news about climate change from a specific source news",
    "tag_search_for_india_today_unofficial": "Get news as per the tag",
    "get_news_for_india_today_unofficial": "All Latest news from India Today Platform",
    "get_all_biden_articles_for_pac_api": "This end point will return all articles from each major newspaper for Biden",
    "get_trump_articles_from_specific_newspaper_for_pac_api": "This endpoint returns all articles for Trump from a specific newspaper",
    "get_biden_articles_from_specific_newspaper_for_pac_api": "this endpoint returns all articles for Biden from a specified newspaper",
    "v1_search_free_for_newscatcher": "**Up to 100 articles per 1 API call even with free Basic Plan.**\nFree search. Only the language filter is allowed.",
    "v1_search_enterprise_for_newscatcher": "Highly customizable search through our database. All filters and sorting options are allowed.",
    "v1_sources_for_newscatcher": "Returns a list of supported news websites for any topic, country, language, or any of those combined",
    "get_all_climate_change_news_for_climate_change_live_v3": "This endpoint will return back  all news about the climate change from all over world.",
    "get_indivisual_news_source_news_for_climate_change_live_v3": "Get News about climate change from a specific news resource.",
    "social_media_news_in_greek_for_onelike": "Get social media news in Greek",
    "social_media_news_in_hindi_for_onelike": "Get social media news in Hindi",
    "social_media_news_in_german_for_onelike": "Get social media news in German",
    "latest_news_for_philippine_news": "Get the latest news and stories from different sources",
    "get_articles_for_google_news_api": "Get, filter, smart search google news articles.",
    "get_news_for_cote_ivoire_news": "Cet endpoint produit plusieurs lignes d'information que vous pouvez directement utiliser dans votre app ou votre site web.",
    "home_for_cote_ivoire_news": "Welcome message",
    "getnews_for_coronavirus_smartable": "Get the latest coronavirus news for the globe or your selected country or state.",
    "getstats_for_coronavirus_smartable": "Get the latest and historic coronavirus stats data (confirmed cases, deaths and recovered cases) for the globe or your selected country or state.",
    "search_term_for_pharma_industry_data_collection": "search term",
    "keyword_for_targeted_keyword_trend": "Returns \u201cMonthly Data\u201d and \u201cSearch count\u201d for a given keyword",
    "china_and_us_relation_filter_for_east_china_news": "Filters all news for US and China",
    "filter_china_news_by_newspaper_company_for_east_china_news": "As name says.",
    "filter_japan_news_by_newspaper_company_for_east_china_news": "^^",
    "news_for_kubric_the_comprehensive_movie_news_api": "The `/news` endpoint provides you with the most recent movie news articles, keeping you informed about the latest updates, events, and releases in the film industry. This endpoint offers a quick and easy way to stay up-to-date with the latest happenings in the movie world without any additional filters or search parameters.",
    "advanced_search_for_kubric_the_comprehensive_movie_news_api": "The `/news/advanced/search` endpoint allows you to search for movie news articles by applying various filters such as date, source, type, and sentiment. It offers a versatile and customizable way to explore the latest news and updates in the movie industry.",
    "trending_for_kubric_the_comprehensive_movie_news_api": "The `/trending` endpoint is a powerful feature of the Kubric Movie News API, designed to provide users with the most recent and popular movie news articles. This endpoint returns the top 50 trending movie articles, ensuring users stay up-to-date with the latest and most engaging content from the world of cinema.",
    "get_anime_news_list_for_anime_news_net": "Get the most up-to-date anime list up to date and in real time",
    "get_details_of_a_news_item_for_anime_news_net": "Get the details of each news item, such as the title, an image and the body of the news item, in addition to other properties",
    "v1_search_for_newscatcher": "Highly customizable search through our database. All filters and sorting options are allowed.",
    "get_individual_news_articles_from_news_on_climate_change_for_live_climate_change_news_v2": "Get a news article from specific News resource on Climate Change.",
    "get_all_climate_change_news_for_live_climate_change_news_v2": "This endpoint will return all the news about Climate Change from all over the world.",
    "sources_for_kubric_the_comprehensive_movie_news_api": "Returns sources used for articles based of current tier.",
    "basic_search_for_kubric_the_comprehensive_movie_news_api": "The `/news/basic/search` endpoint allows you to search for movie news articles.",
    "get_individual_source_news_for_german_police_and_crime_news_live": "This endpoint will return back all news about police, crime, accidents and more like this from germany from a specific news source.",
    "get_all_police_news_for_german_police_and_crime_news_live": "This endpoint will return back all news about police, crime, accidents and more like this from germany.",
    "science_for_google_news": "This endpoint is used to get science news from Google News.",
    "business_for_google_news": "This endpoint is used to get business news from Google News.",
    "search_for_google_news": "This endpoint is used to search for news from Google News based on keywords. The mandatory parameter to be used is **keyword** to specify the search term",
    "get_article_by_sid_for_malaysia_kini": "Return news article content based on sid stated in **Get Latest Article List** method.",
    "get_latest_article_list_for_malaysia_kini": "Return a list of current latest news article with info.",
    "all_articles_for_news_v3": "Fetch all articles",
    "newspapers_for_news_v3": "Lists the newspapers currently supported",
    "articles_for_news_v3": "Fetches articles from one specific newspaper",
    "fetch_all_allsides_com_data_for_political_bias_database": "get request that returns entire allsides.com database as a json.",
    "fetch_all_mediabiasfactcheck_com_data_for_political_bias_database": "get request that returns entire mediabiasfactcheck.com database as a json.",
    "introduction_page_for_political_bias_database": "Credit to developer.",
    "world_climate_change_for_climate_change_v31": "Endpoint showing Climate changes all over the the world",
    "get_news_source_feeds_for_climate_change_v31": "Api showing news feedsa all over the planet",
    "filter_for_conflict_for_east_china_news": "Filters for conflict in all three regions",
    "filter_korean_news_for_east_china_news": "Filters Korean news from all sources",
    "title_get_awards_summary_for_imdb": "Get awards summary related to the title",
    "title_get_trivia_for_imdb": "Get trivia of title",
    "title_get_awards_for_imdb": "Get awards related to the title",
    "get_media_for_getmedia": "Get Media",
    "get_top_stories_of_kuensel_for_top_stories_of_kuensel": "Get top stories of kuensel",
    "get_individual_news_source_for_crypto_news_v2": "Get news about crypto from a specific news source. There are 18 news sources to choose from cryptonews, coindesk, crypto.news, yahoo, fxstreet, cointelegraph, businessinsider, cryptopotato, ambcrypto, cryptonewsline, cryptoglobe, coingecko, cryptoslate, bitcoinist, forbes, nulltx, blockonomi, and coinspeaker.",
    "general_search_for_crypto_news_v2": "Can take a single word search that will return any articles with the given keyword.",
    "get_all_crypto_news_for_crypto_news_v2": "This endpoint will return all news with crypto and bitcoin from many different websites across the internet.",
    "getbookcoverurl_for_book_cover_api": "Get a book cover image url by isbn and language code",
    "getbookcoverimage_for_book_cover_api": "Get a book cover image by isbn and language code",
    "latest_articles_for_crypto_news_v3": "This endpoint provides the latest crypto news articles scraped from the web  incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nFor historical cryptonews data check out our open source dataset on [Kaggle](https://www.kaggle.com/oliviervha/crypto-news)\n\nParameters:\n- **[REQUIRED] subject** e.g. bitcoin, altcoin, ethereum, nft, blockchain, defi\n- **[OPTIONAL] last_n_hours**: Only news articles from the last *n* hours are provided (default: 24).\n- **[OPTIONAL] max_articles**: Maximum number of articles in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract from article (default:10)\n\nCurrently news is scraped from:\n- [CryptoNews](cryptonews.com)\n- [CoinTelegraph](https://cointelegraph.com/)\n- [CryptoPotato](https://cryptopotato.com/)\n\nIf you have suggestions for more sources to add, please get in contact.\n\nMore information:\n- Get the [historical Crypto News dataset](https://www.kaggle.com/oliviervha/crypto-news) from Kaggle!\n- Click [here](https://app.swaggerhub.com/apis-docs/CryptoAdvisor/CryptoNews/1.0.0#/developers/cryptonews) for the API Swagger documentation.\n- Keep up-to-date with our [CryptoNews+ Twitter](https://twitter.com/cryptonews_plus) account!",
    "latest_tweets_for_crypto_news_v3": "This endpoint provides the latest crypto news tweets incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nParameters:\n- **[OPTIONAL] last_n_hours**: Only tweets from the last *n* hours are provided (default: 12).\n- **[OPTIONAL] max_articles**: Maximum number of tweets in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract form tweet (default:10)\n\nCurrently, we make use of the following sources:\n- [@BTCTN](https://twitter.com/BTCTN) \n- [@CryptoBoomNews](https://twitter.com/CryptoBoomNews)\n- [@cryptocom](https://twitter.com/cryptocom)\n- [@Crypto_Potato](https://twitter.com/crypto_potato)\n\nIf you have any suggestions for twitter accounts to add, please get in touch.",
    "movies_detail_for_flixster": "Get movie detail",
    "movies_get_opening_for_flixster": "Get opening movies",
    "theaters_list_for_flixster": "List theaters around a postal code or GEO location",
    "rt_arabic_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0627\u0644\u0645\u0636\u0627\u0641\u0629 \u0627\u0644\u0649 \u0645\u0648\u0642\u0639 \u0631\u0648\u0633\u064a\u0627 \u0627\u0644\u064a\u0648\u0645",
    "aljazeera_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u062c\u0632\u064a\u0631\u0629",
    "alarabiya_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 \u0646\u062a",
    "china_filter_for_all_news_for_east_china_news": "Filters all Chinese news from all sources",
    "japan_filter_for_news_for_east_china_news": "Filters Japan news from all sources",
    "get_all_ipl_news_for_latest_ipl_news": "This endpoint will return back all news about IPL from all over the world.",
    "get_individual_news_source_news_for_latest_ipl_news": "Get News about IPL from a specific news resource.",
    "get_articles_by_publisher_for_movie_articles_and_news": "Get articles by a specific publisher.",
    "get_all_articles_for_movie_articles_and_news": "This endpoint will return all articles about movies from various publishers.",
    "get_specific_climate_change_news_for_climate_change_api_v5": "This endpoint will return back specific news about climate change from all over the world",
    "get_all_climate_change_news_for_climate_change_api_v5": "This endpoint will return back all news about climate change from all over the world",
    "mm_for_sb_weather": "MMM ",
    "headlines_for_smart_curator": "Current/historical headlines",
    "get_individual_news_source_news_for_climate_change_api_tutorial": "Get News about Climate Change from a specific news resource.",
    "get_all_climate_change_news_for_climate_change_api_tutorial": "This endpoint will return back all news about Climate Change from all over the world.",
    "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api": "It returns all the week's top articles",
    "get_the_month_s_top_articles_for_dev_to_api": "It returns the month's top articles from dev.to website.",
    "get_all_the_year_s_top_articles_for_dev_to_api": "It return year's top articles from dev.to website",
    "get_all_narco_news_for_narco_in_mexico": "Get All Narco in Mexico News",
    "social_media_news_in_french_for_onelike": "Get social media news in French",
    "social_media_news_in_japanese_for_onelike": "Get social media news in Japanese",
    "getsponsorships_for_a_i_smartable": "Get sponsorships",
    "getnewsletters_for_a_i_smartable": "Get newsletters",
    "getcompanies_for_a_i_smartable": "Get artificial intelligence companies.",
    "search_term_for_fashion_industry_news_data_collection": "search term",
    "get_all_ai_news_for_ai_news_v2": "This endpoint will return back all news about artificial intelligence around the world",
    "get_individual_source_news_for_ai_news_v2": "Gets News about Artificial Intelligence from a specific news resource.",
    "social_media_news_in_spanish_for_onelike": "Get social media news in Spanish",
    "search_for_webit_news_search": "Search in a continuously updated database containing millions of articles finely crawled minute by minute from sources selected by a sophisticated A.I.\n\nTry it live at: https://webit.re/services/internet-search/news-search-api/tryout",
    "trending_for_webit_news_search": "Get a continuously updated, rich feed of articles finely picked by a sophisticated A.I.\n\nTry it live at: https://webit.re/services/internet-search/news-search-api/tryout",
    "auto_complete_for_imdb": "Get auto complete suggestion by term or phrase",
    "title_v2_get_business_for_imdb": "Get business (Box Office) information of the title",
    "get_all_climate_news_for_new_climate": "News from all publications",
    "get_individual_articles_for_new_climate": "Get individual articles from publications",
    "get_all_categories_for_reuters_business_and_financial_news": "Get all Categories",
    "get_articles_by_date_for_reuters_business_and_financial_news": "Get Articles by  Date",
    "get_article_by_category_id_and_article_date_for_reuters_business_and_financial_news": "Get Article by category id and article date\nex :/api/v1/category-id-8/article-date-11-04-2021\n\ncategory - category id from Category endpoint\ndate-{day-month-year}",
    "extract_for_article_api": "get readable content and metadata of a url",
    "news_for_newsdata": "The latest news endpoint provides access to the latest and breaking news for a country, for a specific category in a country, or for a single or multiple domains. The news articles are sorted by the publish date.\n\nRetrieving the latest news allows you to build experience such as showcasing the latest news, breaking news tickers and analyzing News to better understand their content.",
    "archive_for_newsdata": "The news archive endpoint provides access to the old news data for a country, for a specific category in a country, or for a single or multiple domains.\n\nRetrieving a piece of old news allows you to get the past news data for research and analysis purposes.",
    "sources_for_newsdata": "News sources endpoint provides access to the subsets of news publishers that the latest news is available from.\n\nIt's mainly a convenience endpoint that you can use to keep track of the publishers available on the API, and you can pipe it straight through to your users",
    "get_the_channels_social_accounts_and_contacts_for_live_tv_api": "It has links to different social platforms such as Facebook.....",
    "get_the_channels_description_and_status_for_live_tv_api": "Shows the description, status whether online or offline, number of views",
    "get_the_channel_stream_url_for_live_tv_api": "It has the links and channels name.",
    "latest_headlines_for_the_onion_api": "Get the latest news headlines from the The Onion.",
    "latest_news_on_crypto_for_h_crypto_news": "Returns the latest news  about crypto from several newspapers and websites",
    "get_individual_news_from_source_for_lgbtq_world_news_live": "Get News about LGBTQ+ from a specific news resource.",
    "get_all_lgbtq_news_for_lgbtq_world_news_live": "This endpoint will return back all news about LGBTQ+ from all over the world.",
    "by_source_new_for_moka_news": "Use this endpoint to get the recent 50 news items from a specific source from Sources list",
    "recent_100_for_moka_news": "GET the recent  100 news",
    "by_category_for_moka_news": "get the recent 50 news by category , EX :   Sport , World  .... etc",
    "find_by_title_for_movies_details": "We will provide movies details by title",
    "politician_goverlytics_id_for_goverlytics": "Get 1 politician given their 'goverlytics_id'.",
    "records_for_goverlytics": "Fetches records data",
    "politicians_for_goverlytics": "fetch a list of politicians data",
    "title_get_parental_guide_for_imdb": "Get parent guide information for specific movie",
    "title_find_for_imdb": "Find title by whatever you are familiar with, such as : name of title, album, song, etc...",
    "title_get_charname_list_for_imdb": "Get characters information of the title",
    "get_individual_news_source_for_live_world_futbol_news": "Get News about football news from a specific news resource.",
    "get_all_world_footbol_news_live_for_live_world_futbol_news": "This end point will return back all news about footbol.",
    "get_news_from_single_news_resource_for_climate_change_news_v5": "With this endpoint you can get news from one specific news resource",
    "all_climate_change_news_for_climate_change_news_v5": "With this endpoint you can get all climate change news",
    "asoy_for_us_presidential_election": "Returns JSON block of results for All States, One Year (ASOY), for the specified US Presidential Election year (i.e., 2008).",
    "osay_for_us_presidential_election": "Returns JSON block of results for One State, All Years (OSAY), for the specified US Presidential Election year (i.e., Illinois).",
    "osoy_for_us_presidential_election": "Returns JSON block of results for One State, One Year (OSOY), for the specified US Presidential Election year (i.e., Illinois/2008).",
    "articles_by_single_source_for_energy_price_news": "Narrow down to a single news outlet",
    "list_of_regions_for_energy_price_news": "See which regions we have news sources from.",
    "all_articles_for_energy_price_news": "Get all available articles from multiple sources",
    "get_all_climate_change_news_for_climate_change_live_v27": "This endpoint will return back all news about Climate Change from all over the world.",
    "home_page_for_climate_change_live_v27": "This is the API's home page",
    "get_individual_news_source_news_for_climate_change_live_v27": "This API gets news from individual news source",
    "search_term_for_trw_news": "search term",
    "search_for_news_api_v2": "Endpoint to search news by specific keywords.",
    "top_headlines_for_news_api_v2": "Endpoint to find top headlines news.",
    "get_size_for_test_v2": "get size",
    "get_twitter_feed_for_all_crypto_news_feed": "Returns Twitter Feed.",
    "get_all_feed_for_all_crypto_news_feed": "Returns all feed.\nTweets\nBlogs\nBinance\nUsGov",
    "get_blogs_feed_for_all_crypto_news_feed": "Returns Blogs Feed.",
    "categories_for_moka_news": "get the list of Moka News categories ( important if you want later to get data related to a specific category).",
    "filter_by_category_source_new_for_moka_news": "Use this endpoint to get the recent 50 news items from a specific category from Categories\nlist & a specific source from Sources list.",
    "getfutureeventsbytopic_for_election2020_smartable": "Get future election events by topic",
    "getpeoplebytopic_for_election2020_smartable": "Get people by topic.",
    "getnewsbytopic_for_election2020_smartable": "Get the latest 2020 U.S. election news by topic.",
    "get_news_from_single_source_for_covid_news_v2": "Get news related to Covid 19 news from a single source which are WHO, CNN, the guardian, etc",
    "news_from_all_sources_for_covid_news_v2": "Get news related to covid 19 from **All sources**",
    "get_individual_news_sources_for_crypto_news_live_v2": "Get Crypto News from a Specific Source",
    "get_all_crypto_news_for_crypto_news_live_v2": "Gets all crypto news from the currently configured websites",
    "news_latest_page_for_biztoc": "Get the latest news stories in chronological order, filtered by `{page_id}`.",
    "pages_for_biztoc": "Get the list of avilable `{page_id}`s. Akin to the /crypto and /media sites on biztoc.com. Required parameter for endpoints like **Tags/Trending**.",
    "news_source_for_biztoc": "Get the latest news stories for the respective `{source_id}` in chronological order.",
    "get_all_climate_change_news_for_climate_change_api_v2": "This endpoint returns back all news about the climate changes all over the world",
    "get_individual_news_source_for_climate_change_api_v2": "Get climate news from specific news source",
    "sources_list_new_for_moka_news": "Use this endpoint to get the list of all source.",
    "recent_50_for_moka_news": "GET the recent 50 news",
    "sources_by_region_for_energy_price_news": "See a group of sources from a single region.",
    "repost_for_telegrapher": " ",
    "football_for_football_api": "https://www.api-football.com/documentation",
    "specific_article_keyword_search_for_crypto_news_v2": "Takes a title and keyword that will then return any articles from a specific news source.",
    "nft_news_for_nft_api_news": "This is where you get all the up to date NFT news. This is a live feed and is updated daily.",
    "welcome_for_nft_api_news": "This is the welcome page.",
    "get_specific_news_articles_by_publication_for_global_recession_live": "This endpoint will return the latest articles from a specific publication.",
    "get_all_global_recession_news_for_global_recession_live": "This endpoint will return the latest articles from 7 publications about worldwide recession news.",
    "get_all_subcategories_for_reuters_business_and_financial_news": "Get all SubCategories",
    "get_all_publications_for_climate_news_feed": "Get the name of all publications this API delivers news from.",
    "get_articles_for_climate_news_feed": "Gets all articles.\n\nquery examples:\nsource = United Nations, Nasa Climate, The Guardian, Carbon Brief\nLimit = 100 (default)\nexclude=The Guardian",
    "article_page_for_climate_news_feed": "Get articles in pages",
    "getnews_for_election2020_smartable": "Get the latest 2020 U.S. election news tagged with democratic voice or republican voice.",
    "getevents_for_election2020_smartable": "Get election events",
    "getfutureevents_for_election2020_smartable": "Get future election events",
    "get_all_bitcoin_news_for_crypto_news_v11": "This endpoint will return news articles from over 70 different websites about Bitcoin",
    "get_all_crypto_news_for_crypto_news_v11": "This endpoint will return all news articles about Crypto from over 70 different websites",
    "get_all_ethereum_news_for_crypto_news_v11": "This endpoint will return news articles from over 70 different websites about Ethereum",
    "newspaper_company_filter_for_news_for_east_china_news": "filters based on newspaper company",
    "filter_for_diease_for_east_china_news": "Filters for all diseases in all newspaper sources",
    "get_the_news_in_swahili_for_kenyan_news_api": "This request will return the news articles in swahili language",
    "get_all_the_news_in_english_for_kenyan_news_api": "This endpoint will return back all news about climate change from all over the world",
    "hole_alle_news_beitr_ge_zu_klimawandel_for_klimawandel_live": "Dieser Endpunkt bringt alle News-Beitr\u00e4ge \u00fcber Klimawandel von diversen Schweizer Medien.",
    "hole_news_beitr_ge_von_einem_spezifischen_medium_for_klimawandel_live": "Dieser Endpunkt bringt alle News-Beitr\u00e4ge \u00fcber Klimawandel von einem spezifischen Medium.",
    "search_news_for_news_network": "Search news by given keyword.\nVisit our [demo site](https://core-api.net/news/news.html)",
    "get_news_for_news_network": "Return list of news by selected region and category.\nVisit our [demo site](https://core-api.net/news/news.html)",
    "available_region_list_for_news_network": "Return list of available regions.",
    "get_pakistan_news_for_pakistan_news_api": "All the latest news about Pakistan",
    "france24_arabic_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0641\u0631\u0627\u0646\u0633 24 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629",
    "cnn_arabic_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0633\u064a \u0627\u0646 \u0627\u0646 \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629",
    "getcompaniesbytopic_for_a_i_smartable": "Get artificial intelligence companies by topic.",
    "getprojects_for_a_i_smartable": "Get artificial intelligence projects.",
    "url_for_news_sentiment": "Input news URL",
    "gettopics_for_election2020_smartable": "Get election 2020 topics",
    "getnewsletters_for_election2020_smartable": "Get election 2020 newsletters",
    "tag_news_for_biztoc": "Get the latest news stories for the respective `{tag}` in chronological order.",
    "social_media_news_in_arabic_for_onelike": "Get social media news in Arabic",
    "title_get_video_playback_for_online_movie_database": "Get promoted, trailer video clips",
    "title_get_awards_summary_for_online_movie_database": "Get awards summary related to the title",
    "actors_get_all_images_for_online_movie_database": "Get all images of actor or actress",
    "get_all_trump_articles_for_pac_api": "This endpoint returns all newspaper artices for Trump",
    "blogs_for_spaceflight_news": " ",
    "blogsbylauch_for_spaceflight_news": " ",
    "detail2_for_spaceflight_news": " ",
    "getfaqsbytopic_for_election2020_smartable": "Get FAQs by topic.",
    "get_all_china_japan_korea_news_for_east_china_news": "This endpoint returns news about China, Japan, and Korean news from popular news networks",
    "filter_korea_news_by_newspaper_company_for_east_china_news": "^^",
    "module_for_berita": "okeee",
    "get_all_news_for_greek_news_in_english": "This endpoint will return back all greek news from all the sources.",
    "get_all_sources_for_greek_news_in_english": "Get All Sources' names and ids",
    "get_articles_from_a_single_source_for_greek_news_in_english": "Get Greek News from a specific news source.",
    "stories_topic_for_medium": "",
    "search_topics_for_medium": "",
    "search_stories_for_medium": "",
    "social_media_news_in_russian_for_onelike": "Get social media news in Russian",
    "social_media_news_in_dutch_for_onelike": "Get social media news in Dutch",
    "get_the_latest_30_news_from_ieee_spectrum_for_ieee_spectrum_api": "This endpoint will return back the latest 30 news from IEEE Spectrum website as JSON objects with 6 data elements. These will be the Title, URL, DatePublished, Section, Image source and how much time it takes to read the article.",
    "world_for_google_news": "This endpoint is used to get world news from Google News. The optional parameter that can be used is \"lr\" to determine the region",
    "latest_for_google_news": "This endpoint is used to get the latest news from Google News.",
    "actors_detail_for_flixster": "Get detailed information of an actor/actress",
    "movies_get_popularity_for_flixster": "Get popular movies",
    "movies_get_dvds_for_flixster": "Get movies that watch at home",
    "get_all_climate_change_related_news_for_climate_news_api_v2": "This endpoint will return all news about Climate change from all around the world.",
    "get_individual_news_source_news_for_climate_news_api_v2": "Get news about climate change from a specific newspaper.",
    "youm7_for_arabic_news_api": "\u0647\u0630\u0627 \u0627\u0644\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u062c\u0645\u064a\u0639 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0627\u0644\u064a\u0648\u0645 \u0627\u0644\u0633\u0627\u0628\u0639 \u0627\u0644\u0645\u0635\u0631\u064a",
    "hibapress_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0623\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0647\u0628\u0629 \u0628\u0631\u064a\u0633",
    "specific_publication_articles_for_green_gold": "Gets news articles from specific publications",
    "all_articles_for_green_gold": "Endpoint to gather all articles from all listed publications detailed in API",
    "tags_trending_for_biztoc": "Get list of trending tags for `{page_id}`, sorted by popularity. The `{tag}` can be used for the **Tag/News** endpoint.",
    "sources_for_biztoc": "Lists all currently available `{source_id}`s. Equivalent of news blocks on biztoc.com. Note that certain proprietary blocks like Twitter or Stock Tickers are not available.",
    "count0_for_spaceflight_news": " ",
    "reports_for_spaceflight_news": " ",
    "title_get_company_credits_for_imdb": "Get company credits related to a title",
    "actors_get_interesting_jobs_for_imdb": "Get interesting jobs of actor or actress",
    "actors_get_all_news_for_imdb": "Get all news of actor or actress",
    "overview_for_papercliff": "Returns summary statistics about how many keywords have been found and how many articles and agencies papercliff looked at",
    "timeline_for_papercliff": "Returns the 100 most recent articles and their keywords",
    "keywords_for_papercliff": "Returns the 100 most popular keywords with the corresponding number of news agencies and articles from which they have been cited",
    "title_get_business_deprecated_for_online_movie_database": "Get business (Box Office) information of the title\n* This endpoint is deprecated. You need to use .../title/v2/get-business endpoint instead",
    "actors_get_awards_summary_for_online_movie_database": "Get awards summary of actor or actress",
    "title_get_top_stripe_for_online_movie_database": "Get top stripe of the title",
    "social_media_news_in_portuguese_for_onelike": "Get social media news in Portuguese",
    "getfaqs_for_election2020_smartable": "Get election 2020 FAQs.",
    "getnews_for_ar_vr_news": "Get all news about AR and VR",
    "bbc_arabic_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0642\u0648\u0645 \u0628\u0627\u0633\u062a\u0631\u062c\u0627\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0628\u064a \u0628\u064a \u0633\u064a \u0628\u0627\u0644\u0639\u0631\u0628\u064a\u0629",
    "available_regions_for_ai_news_global": "Get all available regions.",
    "get_news_for_ai_news_global": "Get News by region.",
    "tirto_search_for_indonesia_news": "search tirto news data",
    "kompas_detail_for_indonesia_news": "kompas-detail",
    "kompas_search_for_indonesia_news": "kompas-search",
    "title_get_coming_soon_movies_for_imdb": "Get coming soon movies",
    "title_list_popular_genres_for_imdb": "List popular genres",
    "title_get_news_for_imdb": "Get news related to the title",
    "get_crypto_news_from_single_website_for_crypto_news_v11": "This endpoint allows you to retrieve all the news articles about Crypto from a single website",
    "get_all_the_latest_articles_for_dev_to_api": "It returns all the latest articles present in the dev.to website.",
    "get_all_the_relevant_articles_for_dev_to_api": "It returns all the relevant articles from dev.to website.",
    "get_the_top_articles_of_all_time_for_dev_to_api": "It returns the top articles of all time from dev.to website.",
    "title_get_seasons_for_imdb": "Get all seasons series information of the title",
    "title_get_technical_for_imdb": "Get technical information",
    "title_get_sound_tracks_for_imdb": "Get sound tracks in specific title",
    "info_for_spaceflight_news": " ",
    "articles_for_spaceflight_news": " ",
    "blogsbyid_for_spaceflight_news": " ",
    "list_of_sources_for_energy_price_news": "See which regions we have news sources from.",
    "getpeople_for_election2020_smartable": "Get election 2020 politicians and influencers.",
    "search_for_flixster": "Search for movies, actors, theaters by term and phrase",
    "detik_detail_for_indonesia_news": "detik-detail",
    "tirto_detail_for_indonesia_news": "detail tirto news",
    "title_get_most_popular_movies_for_online_movie_database": "Get most popular movies",
    "title_get_user_reviews_for_online_movie_database": "Get user reviews of the title",
    "vivanews_detail_for_indonesia_news": "vivanews-detail",
    "detik_search_for_indonesia_news": "search detik.com news",
    "vivanews_search_for_indonesia_news": "vivanews-search",
    "actors_get_all_filmography_for_online_movie_database": "Get all filmography of actor or actress",
    "title_get_taglines_for_online_movie_database": "Get taglines information of the title",
    "sky_news_arabic_for_arabic_news_api": "\u0645\u0633\u0627\u0631 \u064a\u0633\u062a\u0631\u062c\u0639 \u0627\u062e\u0631 \u0627\u0644\u0627\u062e\u0628\u0627\u0631 \u0645\u0646 \u0645\u0648\u0642\u0639 \u0633\u0643\u0627\u064a \u0646\u064a\u0648\u0632 \u0639\u0631\u0628\u064a",
    "v1_latest_headlines_for_newscatcher": "Always returns the latest 100 articles for any `topic`, `country`, `lang`, or any of those combined",
    "social_media_news_in_indonesian_for_onelike": "Get social media news in Indonesian",
    "articlesbyevent_for_spaceflight_news": " ",
    "v1_aggregation_for_newscatcher": "Searches as `/v1/search` but returns the articles count per hour or day instead of articles' data",
    "news_latest_for_biztoc": "Get the latest news stories in chronological order, across all pages. Akin to the /live view on biztoc.com.",
    "combinations_for_papercliff": "Returns the 100 most popular combinations/triples of keywords with the corresponding number of news agencies and articles from which they have been cited",
    "history_for_papercliff": "Returns the number of articles published daily during the last week and the number of corresponding news agencies that created those articles",
    "actors_list_most_popular_celebs_for_online_movie_database": "Get most popular movies",
    "title_v2_find_for_online_movie_database": "Find title by whatever you are familiar with, such as : name of title, album, song, etc\u2026 with options and filters",
    "title_get_parental_guide_for_online_movie_database": "Get parent guide information for specific movie",
    "title_get_popular_movies_by_genre_deprecated_for_imdb": "Get popular movies by genre\n* This endpoints is deprecated, use .../title/v2/get-popular-movies-by-genre instead",
    "title_get_top_rated_movies_for_imdb": "Get top rated 250 movies",
    "title_get_crazycredits_for_imdb": "Get crazycredits in specific title",
    "news_hot_for_biztoc": "Get trending topic clusters and their respective stories, ordered by a proprietary popularity algorithm. Akin to the /hot view on biztoc.com. The topics and stories will change every 15 minutes.",
    "search_for_biztoc": "Search across the entire news index from the last 14 days. Note that no search operators are supported via the API so all provided terms are considered required.",
    "movies_get_upcoming_for_flixster": "Get upcoming movies",
    "title_get_synopses_for_imdb": "Get synopses information of the title",
    "title_get_coming_soon_tv_shows_for_imdb": "Get coming soon TV shows",
    "social_media_news_in_chinese_for_onelike": "Get social media news in Chinese",
    "social_media_news_in_italian_for_onelike": "Get social media news in Italian",
    "depuertoplata_for_depuertoplata": "web",
    "supported_languages_and_regions_for_google_news": "This endpoint is used to retrieve a list of supported languages and regions.",
    "suggest_for_google_news": "This endpoint is used to get autocomplete suggestions or query predictions as a user types a search query. The endpoint requires the **keyword** parameter, which represents the partial text entered by the user. You can send a request with the partial text, and the request will generate a JSON response containing a list of relevant autocomplete suggestions for the search query.",
    "title_get_releases_for_online_movie_database": "Get release information of the title",
    "title_get_top_rated_movies_for_online_movie_database": "Get top rated 250 movies",
    "health_for_google_news": "This endpoint is used to get health  news from Google News.",
    "technology_for_google_news": "This endpoint is used to get technology news from Google News.",
    "the_universal_cmms_api_for_makini_v2": "The universal\nCMMS API",
    "peunaple_for_ucinema": "one package website",
    "items_for_codester_api": "You can get item details such as description, price, author, images and so on.",
    "check_wordpress_for_wordpress_checker": " ",
    "read_appointments_for_supersaas_online_bookings_and_appointment_scheduling": "",
    "recent_changes_for_supersaas_online_bookings_and_appointment_scheduling": "",
    "available_for_supersaas_online_bookings_and_appointment_scheduling": "",
    "profiles_for_bogieapis": "asd",
    "getpetbyid_for_freeplanhardlimitexternal": "Returns a single pet",
    "loginuser_for_freeplanhardlimitexternal": "",
    "logoutuser_for_freeplanhardlimitexternal": "",
    "read_case_type_by_id_for_yardillo": "Gets case type by _id",
    "read_vault_by_name_for_yardillo": "Gets vault details by Name. Response will send your key un encrypted",
    "read_vault_for_yardillo": "Returns all Vault keys. This api return keys encrypted.",
    "logo_api_for_logo": "Using our logo finder service is entirely free with attribution. \n<img src=\"https://api.companyurlfinder.com/logo/amazon.com\" />",
    "health_check_for_hris": "Check API Health Status",
    "get_access_settings_for_hris": "Get stored Access Setting for a specific customer",
    "get_employees_for_hris": "Get Employees for a specific customer",
    "create_qr_code_for_flowcode": "This API takes an endpoint and return and image for a QR Code in either svg, png, jpg, or pdf format",
    "read_case_type_for_yardillo": "Searches all or specific case type",
    "slot_and_betting_games_for_slot_and_betting_games": "Games for your online casino.",
    "get_company_basic_data_for_b2bhint": "The Get company details endpoint will return all basic company data on B2BHint.",
    "get_company_full_data_for_b2bhint": "The Get company details endpoint will return all full company data, including company contacts, financial reports and other data",
    "search_person_by_name_for_b2bhint": "Search for a person by parameters will return a list of persons that match your query",
    "get_brands_for_top_brand_names_valuation_api": "Get the brand data",
    "777_for_aug13": "7",
    "read_users_by_logon_success_for_ironwifi": "READ - USERS BY LOGON SUCCESS",
    "read_auth_requests_2_for_ironwifi": "READ - AUTH REQUESTS 2",
    "read_guest_registration_for_ironwifi": "READ - GUEST REGISTRATION",
    "health_check_for_scanily": "This endpoint allows you to check the availability of the systems to ensure everything is operational.",
    "terminate_for_mbox_migrator": "Termination of MBOX Migrator after successful conversion",
    "mobilitu_public_for_testapi_v2": "mobilitu",
    "bananas_for_testapi_v2": "hey",
    "getuserbyname_for_freeplanhardlimitexternal": "",
    "business_days_work_days_calculator_api_for_business_days_work_days_calculator_": "# Workdays Calculation API Documentation\n\nThe Workdays Calculation API allows you to calculate the date after a given number of workdays, taking into account weekends and holidays. By specifying the country code, number of workdays, start date, and options, you can retrieve the ISO date of the day after the workdays have passed.\n\n\n## Request Parameters\n\nThe API expects the following GET parameters:\n\n1. `state` (required): The country code for which the workdays are calculated. Please refer to the [list of country codes](https://www.nationsonline.org/oneworld/international-calling-codes.htm) to find the appropriate code for your country.\n\n2. `work_days` (required): The number of workdays to calculate. This indicates how many workdays should be skipped before determining the result.\n\n3. `start_date` (required): The starting date from which to begin counting the workdays. The format of the start date should be `DD/MM/YYYY`.\n\n4. `options` (optional): The options for skipping specific days. This parameter accepts the following values:\n   - `0`: Skip holidays and weekends.\n   - `1`: Skip only weekends.\n   - `2`: Skip only holidays.\n\n## Response\n\nThe API response will be a string representing the ISO date of the day after the specified workdays have passed.\n\n## Example\n\nGiven `start_date` of 19/05/2023, which is Friday, and `work_days` of 2, \nthe returned result will be 23/05/2023. Here's the breakdown of the calculation:\n\n- 19/5-20/5: Weekend (Saturday and Sunday)\n- 21/5: First workday\n- 22/5: Second workday\n\nTherefore, 23/5 is the day after the specified workdays have passed",
    "proxy_get_for_proxy_list": "Returns the list of proxies based on the given parameters. The list is updated every 1 minute. API returns only working at the time of check proxies.",
    "proxy_health_for_proxy_list": "ReturnS the health status of the API. Also return last time the proxies check was completed. Time is in UTC.",
    "get_inboxes_for_intelligent_automation_ocr_ai_": "Get a list of inboxes with their ids",
    "get_formats_for_intelligent_automation_ocr_ai_": "Get a list of formats",
    "getimage_for_address_to_image": "Generates an image for a given address. Images are output in JPEG as a base64 encoded string.",
    "recommend_for_optlog_co_optimize_anything": "Recommend",
    "optimize_for_optlog_co_optimize_anything": "get",
    "ttt_for_hellorold": "tt",
    "v1_render_for_inkit": " ",
    "v1_render_renderid_for_inkit": " ",
    "v1_render_renderid_pdf_for_inkit": " ",
    "api_for_demo": "to get the location",
    "ss_for_beeg": "ss",
    "details_all_templates_answers_for_nps_net_promoter_score": "Get a full list of all customer survey responses for a given template, by identifying its template id (tid)",
    "read_nps_template_for_nps_net_promoter_score": "Get details of a given template by its template id (tid)",
    "read_organization_for_nps_net_promoter_score": "Get a organization record by its organization id (oid)",
    "api_status_for_vizor_ads": "Check API server is running or not",
    "show_for_vizor_ads": "Get details of your existing embed records using it's unique slug",
    "getpetbyid_for_my_api_12345": "Returns a single pet",
    "getuserbyname_for_my_api_12345": "",
    "getinventory_for_my_api_12345": "Returns a map of status codes to quantities",
    "ping_for_quizapp": "Ping for Health Check",
    "get_for_newnew": "Get",
    "create_client_for_ptl": "Receive new users",
    "update_for_ptl": "update endpoint",
    "get_products_for__onboarding_project": " ",
    "read_reject_reasons_for_ironwifi": "READ - REJECT REASONS",
    "read_usage_totals_and_averages_for_ironwifi": "READ - USAGE TOTALS AND AVERAGES",
    "read_acct_data_2_for_ironwifi": "READ - ACCT DATA 2",
    "orgcode_accounts_accountid_cards_for_test2": "Returns a list of cards belonging to a specific account. User authentication is required.",
    "orgcode_cards_for_test2": "Returns a list of cards for the given session. User authentication is required.",
    "orgcode_cardart_bins_for_test2": "Returns card art URLs by BINs. Different URLs can be defined for each BIN/range of BINs. User authentication is not required.",
    "asdasd_for_sdfsdf_v2": "dasdasd",
    "label_sizes_for_print_your_own_labels_and_stickers": "Returns a list of label sizes in the format [width]x[height].\n\nThese sizes are rounded, meaning that they can represent a few other sizes that are close to them. For example size 4\"x3\", will represent 3.75\"x3\",  4\"x3.25\" and so on.",
    "label_template_brands_for_print_your_own_labels_and_stickers": "Returns the list of blank label sheet brands that Ecardify supports to date. If your preferred brand is missing, please let us know.",
    "print_on_label_templates_or_plain_paper_for_print_your_own_labels_and_stickers": "Generates the PDF file which contains the printout of labels.\n\nLabel layout conforms the label template and three print setup query parameters.\nThe content printed on each label, is the image whose URL is supplied by **labelContent** query parameter.",
    "get_campaign_lead_from_id_for_fomoapi": "Get ALL Lead From Your Campaign Social Proof",
    "get_campaign_from_url_for_fomoapi": "Get lead from Specific website  Campaign",
    "gbgb_for_fffvfv": "bgb",
    "get_evidence_for_stamping": "GET by hash sha256 or TrxId from Blockchain of Bitcoin and Ethereum",
    "nps_client_for_nps_net_promoter_score": "Get a summary of NPS calculation for a given client_id. It considers the overall answers related to all survey answers belonging to a given client and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs.",
    "read_all_templates_surveys_for_nps_net_promoter_score": "Get a list of all customer surveys answers related to a given template of questions (tid). In this method, you can see how each customer answered a given template of questions",
    "read_a_survey_nlp_for_nps_net_promoter_score": "Get a detail of customer survey answer by its survey id (sid), and applies to the third answer (a3) the sentiment analysis feature.",
    "label_shapes_for_print_your_own_labels_and_stickers": "List of available label shapes.",
    "get_reservation_by_id_for_limoucloud": "Get Reservation by ID",
    "get_assigned_vehicle_for_limoucloud": "Get the Assigned vehicle to add its id in Checklist creation",
    "get_reservations_for_limoucloud": "get all driver related reservations",
    "demand_sensing_for_e2open_llc_": "Creates accurate near-term forecasts that reflect current market realities using real-time data, automation and machine learning algorithms.",
    "viewrecords_for_zohocreator": "Replace https://zohocreator.p.rapidapi.com/ with https://creator.zoho.com/api/ if you're using native system\n\nGet Records from a Zoho View/Report",
    "getreservationforuser_for_mybooky_demo": " ",
    "getusersforslot_for_mybooky_demo": " ",
    "getusers_for_mybooky_demo": " ",
    "orgcode_cards_cardid_for_test2": "Returns card information for a given card ID. User authentication is required.",
    "ensure_flight_for_ensureflight": "Just ensure flight",
    "get_all_users_for_pulsar": "Get all users in system.",
    "get_all_active_users_for_pulsar": "Get all active users in system.",
    "get_all_collections_by_user_for_pulsar": "Get all collections by user",
    "read_forms_for_supersaas_online_bookings_and_appointment_scheduling": "",
    "user_agenda_for_supersaas_online_bookings_and_appointment_scheduling": "",
    "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling": "",
    "software_assets_for_saas_softwares_and_features_api": "This endpoint allows you to fetch SaaS/Software tools that offer a given list of features (feature tags) or just details of any particular software. The details will include it's website, it's description, etc.",
    "global_email_v4_for_global_email_v4": "Define Input Fields",
    "api_auditores_roac_roac_sociedad_for_roac": "asd",
    "convert_url_to_image_for_cloudlayer_io": "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options).",
    "get_screenshots_for_lambdatest_screenshot": "Fetch specified screenshot details",
    "get_os_browsers_for_lambdatest_screenshot": "Fetch all os browsers combinations available on lambdatest platform.",
    "get_resolutions_for_lambdatest_screenshot": "Fetch all available resolution on different OS",
    "cllax_for_cllax": "Cllax - Advice, resources and tools for starting a small business. Information on getting finance, business planning, hiring, IT, marketing and much more.",
    "list_folder_contents_for_git_pager": "Lists  all of the contents of a specific Github repo.",
    "download_zip_for_pulsar": "Download zip of images.",
    "get_all_images_of_an_collection_for_pulsar": "Get all images of an collection.",
    "dat_for_dathoang": "hoang",
    "template_download_for_xlsx_template": "Download template file from Cloud storage",
    "template_list_for_xlsx_template": "Cloud storage templates file list",
    "mail_config_get_for_xlsx_template": "Get a mail confing from cloud database",
    "listtemplates_for_boldsign": " ",
    "getembeddedsignlink_for_boldsign": " ",
    "listteams_for_boldsign": " ",
    "loginuser_for_my_api_12345": "",
    "getorderbyid_for_freeplanhardlimitexternal": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "generate_invoice_for_invoices_generator": "Quickly generate invoices through a REST API endpoint",
    "get_property_by_id_for_real_estate_usa": "get property by id",
    "search_properties_by_zip_for_real_estate_usa": "search properties by zip code",
    "locate_schools_for_real_estate_usa": "locate schools",
    "getinventory_for_freeplanhardlimitexternal": "Returns a map of status codes to quantities",
    "user_summary_for_opa_test": "Returns the user's document status summary",
    "read_clients_per_ap_for_ironwifi": "READ - CLIENTS PER AP",
    "read_capt_portal_for_ironwifi": "READ - CAPT PORTAL",
    "read_users_for_ironwifi": "READ USERS",
    "label_templates_for_print_your_own_labels_and_stickers": "List of label templates filtered by one or more of the following parameters:\npaper format\ntemplate brand\nexact label size\napproximate label size\nlabel shape",
    "print_on_dynamically_generated_label_templates_for_print_your_own_labels_and_stickers": "Generates the PDF file which contains the printout of labels.\n\nThe label template will be generated on the fly, based on the label layout dimensions that you will supply on every request.\nThe content printed on each label, is the image whose URL is supplied by **labelContent** query parameter.",
    "read_all_users_for_supersaas_online_bookings_and_appointment_scheduling": "",
    "api_templates_for_business_card_maker": "Get business cards templates list.",
    "api_for_business_card_maker": "Get version number.",
    "api_business_card_fromat_for_business_card_maker": "Get Business Card.",
    "generate_historys_for_xlsx_template": "Generated files history",
    "mail_config_list_for_xlsx_template": "Get mail config list from cloud database",
    "list_appointments_for_supersaas_online_bookings_and_appointment_scheduling": "it fetches list of appointments between given time range",
    "getproperties_for_boldsign": " ",
    "downloaddocument_for_boldsign": " ",
    "getteam_for_boldsign": " ",
    "http_shortlink_net_for_shortlink": "-",
    "get_categories_for__onboarding_project": " ",
    "details_all_organization_surveys_for_nps_net_promoter_score": "Get a full list of all customer survey responses for a given organization, by identifying its organization id (oid)",
    "logout_for_limoucloud": "Logout from account",
    "list_all_nps_organization_templates_for_nps_net_promoter_score": "Get a list of all NPS templates of a given Organization by its organization id (oid)",
    "nps_template_for_nps_net_promoter_score": "Get a summary of NPS calculation for a given template. It considers the overall answers related to that template and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs.",
    "getorderbyid_for_my_api_12345": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "logoutuser_for_my_api_12345": "",
    "get_all_checklists_for_limoucloud": "Get the Checklists created by driver",
    "search_case_for_yardillo": "Search your cases by fields id and its values",
    "get_tenant_for_yardillo": "This API allows you to push data into your own MongoDB Database",
    "read_case_type_by_name_for_yardillo": "Search a case type by its name. e.g. SensorX09",
    "search_company_by_email_for_b2bhint": "Search for a company by email will return a list of companies that match the selected email",
    "listdocuments_for_boldsign": " ",
    "listsenderidentities_for_boldsign": " ",
    "download_for_boldsign": " ",
    "get_case_by_id_for_yardillo": "Get the case payload by its Id",
    "ip_location_by_domain_name_for_find_any_ip_address_or_domain_location_world_wide": "Free IP Geo Location API which provide 100% accurate complete information of any IP address or Domain name with its city latitude, longitude, zipcode, state/province, country, country codes, country flag, currency, dialing code. timezone, total number of cities & states/province in country, continent code, continent name and many more details in JSON format. You can also test our API online by this IP lookup tool: https://ipworld.info/iplocator",
    "ip_location_by_ipv4_ipv6_ip_address_for_find_any_ip_address_or_domain_location_world_wide": "Free IP Geo Location API which provide 100% accurate geo location information of any IPv4, IPv6 IP address or Domain name like its city latitude, longitude, zipcode, state/province, country, country codes, country flag, currency, dialing code. timezone, total number of cities & states/province in country, continent code, continent name and many more details in JSON format. You can also test our API online by this IP lookup tool: https://ipworld.info/iplocator",
    "list_finance_rates_for_real_estate_usa": "list finance rates",
    "events_for__crypto_events_calendar_": "Get crypto events like listing, airdrops, release, tokenomics, partnershiop, other.\nGrouped by days!",
    "health_check_for_art_openings_italy": "The service it allows you to monitor if the application is up time. It returns an healthcheck object that has three properties uptime , message and timestamp.",
    "events_detail_for_art_openings_italy": "This service returns all data related to a specific id. The id field in the example you provided is a unique identifier for the event. It is a string of characters that follows the format of a universally unique identifier (UUID), which is a standardized way of generating a 128-bit identifier that is guaranteed to be unique across all devices and all time.",
    "live_events_for_art_openings_italy": "To call this service, you would make a GET request to the endpoint /api/ongoing-events with the optional query parameter city. When the service is called, it retrieves a list of events from the database, filtered by the city parameter if it is provided.",
    "public_holidays_for_public_holiday": "Returns the public holidays from a given year and country.",
    "get_event_for_today_in_history": "Gets a detailed summary of an event.",
    "all_belgian_races_for_wonderboyapi": "At this endpoint nothing happens for now",
    "date_and_time_of_last_update_for_wonderboyapi": "With this endpoint you can retrieve the Date and Time of the last update",
    "get_all_locations_for_art_openings_italy": "This service returns a list of all locations where art events take place.",
    "get_all_cities_for_art_openings_italy": "This service returns a list of all cities where art events take place.",
    "get_calendar_components_for_today_for_enoch_calendar": "Get calendar components for today",
    "get_hebrew_month_and_date_for_enoch_calendar": "Get Hebrew Month, Date and holydays from supplied date string or today's date",
    "get_calendar_components_for_enoch_calendar": "Get the calendar components to build the current Hebrew month calendar from the supplied Hebrew month number, if supplied, or the first Hebrew month and, a supplied year, or this year",
    "get_half_staff_events_for_given_flag_for_flag_status": "Get all half-staff events for the provided flag",
    "get_current_status_for_given_flag_for_flag_status": "Get the current status for the provided flag",
    "get_all_half_staff_events_for_every_flag_for_flag_status": "Get every half-staff event for the last 365 days",
    "list_for_sagenda_v3": "A list of bookable items associated with supplied authentication token (account)",
    "events_for_item_by_date_range_for_sagenda_v3": "Returns an array of events that start in the date range between startDate and endDate (inclusive) for given bookable item",
    "get_bookings_information_for_sagenda_v3": "This endpoint lets you request detailed booking information for a given period of time, optionally filtered by bookable item and status.",
    "get_all_genres_for_art_openings_italy": "This service returns a list of all genres of the events.",
    "contests_for_contests": "Get the latest active contests list",
    "health_for_contests": "Use health endpoint to check if server is up and running",
    "is_holyday_for_enoch_calendar": "Get the Holyday, corresponding Scritpures and if this Holyday is also a Sabbath from the supplied date string or today's date. Or false in for all returned properties",
    "get_hebrew_month_for_enoch_calendar": "Get Hebrew Month from supplied date string or today's date",
    "v1_historicalevents_for_historical_events_by_api_ninjas": "API Ninjas Historical Events API endpoint. Returns a list of up to 10 events that match the search parameters. At least one of the following parameters is required: text, year, month, day.",
    "v1_holidays_for_holidays_by_api_ninjas": "API Ninjas Holidays endpoint",
    "fetch_events_for_calendars": "Fetches a list of events in either JSON or iCalendar format for the selected calendar",
    "count_of_days_for_enoch_calendar": "Current day count in this Hebrew year from the supplied date string or today's date",
    "is_sabbath_day_for_enoch_calendar": "Is supplied date string or today a Sabbath day",
    "1_3_add_working_days_for_working_days": "Add (or remove) any number of working days to a date.",
    "1_3_list_non_working_days_for_working_days": "List the non working days (weekend days, public holidays and custom dates) between two dates in chronlogical order.",
    "1_3_add_working_hours_for_working_days": "Add an amount of working time to a given start date/time",
    "1_3_analyse_for_working_days": "Analyse a period (you provide a start_date and an end_date over a given calendar, we respond with the period analysis)",
    "1_3_define_custom_period_for_working_days": "Defining a custom period (typically days of vacations of an employee or days of annual closure of a company) can be done from the working days websites user interface but can also be done programmatically from the API. A typical use case would be to retrieve the vacations of the workers out of the human ressources software and insert them into a custom calendar, then being able to query available working days.",
    "1_3_get_info_day_for_working_days": "Get detailed information about a specific day.",
    "feriados_das_cidades_for_feriados_brasileiros": "Retorna os feriados de certa cidade brasileira. Os par\u00e2metros necess\u00e1rios s\u00e3o: 1. Cidade - Nome da cidade sem acentos ou s\u00edmbolos especiais, com exce\u00e7\u00e3o do h\u00edfen (\"-\") que deve ser mantido. 2. Estado - Unidade Federativa correspondente \u00e0 cidade. Usar a sigla e em letra ma\u00eduscula. 3. Ano",
    "feriados_dos_estados_for_feriados_brasileiros": "Retorna os feriados de certo estado. Os par\u00e2metros necess\u00e1rios s\u00e3o: 1. Estado - Sigla da Unidade Federativa em letra ma\u00eduscula. 2. Ano",
    "get_specific_event_information_for_sagenda_v3": "Returns a single event object containing all the booking information.",
    "api_status_for_sagenda_v3": "Receive an API status. Responds with HTTP 200 OK and API version in body if functional",
    "authentication_status_for_sagenda_v3": "You can use this endpoint to check whether your authentication token is valid. Responds with HTTP 200, API version and list of available claims for a token (for reference)",
    "base_for_fisrt": "Base desc",
    "get_hebrew_date_for_enoch_calendar": "Get Hebrew Date  for supplied date string or today's date; as well as current holyday if any",
    "count_of_days_for_today_for_enoch_calendar": "Get the count of days for today",
    "send_name_birthday_cakes_for_birthday_cake_with_name_generator": "Write name on birthday cake for free",
    "1_3_delete_custom_period_for_working_days": "Removing a previously defined custom period",
    "get_detect_for_xss_shield": "This endpoint detects and prevents XSS attacks in input data sent via query parameters.",
    "iplookup_for_greip": "Returns the geolocation data of a specific IP Address.",
    "validatephone_for_greip": "This method can be used as an extra-layer of your system for validating phone numbers.",
    "validateemail_for_greip": "This method can be used as an extra-layer of your system for validating email addresses.",
    "query_for_netdetective": "Query information about an IP address.",
    "get_chain_id_for_token_scanner_multichain_honeypot_checker_multichain": "Returns chainId from chain name.",
    "get_callback_url_status_for_weblasso": "Check if a callback URL is able to receive scan results (ensure that the callback URL accepts POST requests).",
    "get_scan_results_for_weblasso": "Obtain the scan results from a given scan ID.",
    "get_scan_status_for_weblasso": "Check the status of a scan (ongoing/completed) using a scan ID.",
    "get_scan_id_for_weblasso": "Run a scan against a target URL and receive a scan ID to obtain scan results or check scan status at a later time.\n\nProvide an optional callback URL to receive scan results automatically once the scan is completed (ensure that the callback URL accepts POST requests)",
    "v1_for_tweetfeed": "Version 1 Endpoint.",
    "country_for_greip": "Country endpoint: Returns the information of a specific country by passing the `countrCode`.",
    "specific_giveaway_details_for_gamerpower": "Get details from a specific giveaway (insert giveaway id).",
    "live_giveaways_by_platform_type_sorted_for_gamerpower": "Get all live giveaways by platform and type and sorted.",
    "sort_live_giveaways_for_gamerpower": "Insert sort by, eg: date, value, popularity",
    "3000_years_for_weeby": "Generates the 3000 Years Meme.\n**ALL DOCUMENTATION HERE**: [https://weebyapi.ntmnathan.com/api/docs](https://weebyapi.ntmnathan.com/api/docs)",
    "searchinventory_for_fortnitecosmetics": "By passing in the appropriate options, you can search for\navailable inventory in the system\n",
    "get_stats_for_world_of_tanks_stats": "Get WN8, WN7, battles, victories, defeats, kills, draws, avereageTier, tanksSpotted, battlesSurvived",
    "get_a_specific_champion_s_base_stats_for_league_of_legends_stats": "This endpoint returns the base stats of a specific champion.",
    "get_all_champion_base_stats_for_league_of_legends_stats": "This endpoint returns all base stats from every champion in the game.",
    "get_list_of_all_champion_names_for_league_of_legends_stats": "This endpoint returns a list of all Champion names.",
    "get_price_history_by_id_for_steam_market_and_store": "For a given ID, get the price history together with the number of items sold.",
    "retrieve_buy_sell_informations_by_id_for_steam_market_and_store": "From a given ID, retrieve the latest Buy/Sell orders placed on the Steam Store.",
    "get_latest_activity_by_id_for_steam_market_and_store": "Given a specific ID, retrieve the last activity dealed with it. Basic information about the user performing the activity is also provided.",
    "free_games_for_epic_games_store_free_games": "Return All Free Games on Offer on the Epic Games Store. Also returns upcoming Free Games.",
    "get_items_ids_by_query_for_steam_market_and_store": "Enter a (text) query and retrieve the IDS associated to your items. This ID will be needed in order to explore market information.",
    "search_for_a_item_for_league_of_legends_galore": "This will go through the list of items and return a single item or a list of items depending on YOUR request!",
    "get_all_league_ranks_for_league_of_legends_galore": "Get League of Legends ranks and their player base!",
    "get_random_item_for_league_of_legends_galore": "This will go through the list of items and return a single RANDOM item!",
    "get_users_for_fodase": "sdfsdfsdf",
    "match_for_cricketliveapi": "NA",
    "get_background_for_dungeons_and_dragon_5e": "Returns information about the D&D background in JSON format.",
    "get_class_for_dungeons_and_dragon_5e": "Get info about a D&D class such as the proficiencies or abilities.",
    "get_subclass_for_dungeons_and_dragon_5e": "Get info about a subclass",
    "get_pokemon_data_by_name_for_pokemon_unite_pokemons": "Get Pokemon data sing the pokemon name",
    "list_all_pokemons_for_pokemon_unite_pokemons": "A list of all pokemons within pokemon unite",
    "nwl20_for_word_tree": "Search using the NASPA Word List 2020 edition, \u00a9 2020 North American Word Game Players Association.",
    "csw21_for_word_tree": "Search for words using Collins Scrabble Words 2021 lexicon.",
    "get_champions_for_league_of_legends_api": "Get list of all champions by default give you in english",
    "get_playermatch_for_league_of_legends_api": "Return an detailed list of games for the number you passed for a player",
    "get_queue_for_league_of_legends_api": "Returns the list of people in division, tier and according to the type of queue",
    "all_characters_for_marvel_vs_capcom_2": "Access all characters in MVC2 (Marvel Vs Capcom) Universe",
    "show_moves_for_marvel_vs_capcom_2": "Show Moves For A Specific Character",
    "show_character_for_marvel_vs_capcom_2": "Get details about a single character and their traits",
    "get_item_for_dungeons_and_dragon_5e": "Returns information about the D&D item in JSON format. Only includes magic items, not equipment.",
    "get_spell_for_dungeons_and_dragon_5e": "Get information about a D&D spell like the school of magic, spell level and the full description.",
    "api_points_for_plugin_proto": "For unlimited lucky",
    "random_skin_from_weapon_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a random counterstrike skin from a specific weapon\n(prices for field tested condition in USD)\n\n(replace weapon_name)\n\nExample: /api/random/AWP",
    "random_skin_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a random counterstrike skin (prices for field tested condition)",
    "random_skin_from_class_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a random counterstrike skin from a specific class \n(prices for field tested condition in USD)\n\n(replace class_name)\n\nExample: /api/randomclass/Rifle",
    "v1_trivia_for_trivia_by_api_ninjas": "API Ninjas Trivia API endpoint",
    "live_giveaways_by_platform_for_gamerpower": "Insert platform eg: pc, steam, epic-games-store, uplay, gog, icthio, ps4, xbox-one, switch, android, ios, vr, battlenet",
    "all_live_giveaways_for_gamerpower": "Get all live giveaways.",
    "get_products_in_category_for__demo_project_v2": " ",
    "get_chest_item_recipes_for_lost_ark_simple": "Get List of **Lost Ark** Chest Item Recipes",
    "get_life_skill_tool_recipes_for_lost_ark_simple": "Get List of Lost Ark Life Skill Tool Recipes",
    "get_battle_item_recipes_for_lost_ark_simple": "Get List of Lost Ark Battle Item Recipes",
    "rating_for_hleby6ek": "Rating of the game for the month",
    "documentation_environment_for_wordle_api": " ",
    "health_for_wordle_api": " ",
    "documentation_for_wordle_api": " ",
    "get_champion_details_for_league_of_legends_api": "Getting detail from champion name you give, translate by the language you give",
    "get_champion_rotation_for_league_of_legends_api": "Return's you a liste of free champion ids and liste of free champions ids for new player.",
    "get_champion_abilities_as_text_for_league_of_legends_champion_informaion": "Accepts a comma delimited list of champion names/nicknames and returns a text list of champions as well as their passive and standard abilities.",
    "get_champions_for_league_of_legends_champion_informaion": "Accepts a comma delimited list of champion names or nicknames.\n\nReturns a list of Champions full names and list of passive ability and standard abilities in an on object format.",
    "search_for_a_champion_for_league_of_legends_galore": "This will go through the list of champions and return a single champion or a list of champions depending on YOUR request!",
    "warzone_rollosis_psn_for_call_of_duty_warzone_stats": "Warzone stats for Rollosis",
    "generate_league_of_legends_champion_for_league_of_legends_champion_generator": "Will generate a new champion along with its passive and standard abilities.",
    "all_solutions_for_wordle_answers_solutions": "Calling this endpoint you will get all the historical solutions of the Wordle game",
    "today_for_wordle_answers_solutions": "Calling this endpoint you will todays solution.",
    "get_team_info_for_valorant_esports_v2": "Get comprehensive information about a team, including player details, events, results, and more.",
    "get_player_info_for_valorant_esports_v2": "Get name, country, team and more about a player.",
    "get_all_players_for_valorant_esports_v2": "Get id, name and country of all players.",
    "bet7k_aviator_latest_for_bet7k_aviator_api": "Will retrieve the latest results from Aviator at BET7K.\n\n- The first result is the most recent\n- The last result is the oldest",
    "api_test_for_scott": "test",
    "latest_price_for_osrs_live_prices": "gives the latest price for the given itemID and timestep",
    "historical_prices_for_osrs_live_prices": "Gives a list of the high and low prices of item with the given id at the given interval",
    "get_raids_for_lost_ark": "Endpoint to get all guardian raids",
    "get_a_specific_item_by_id_for_lost_ark": "Enpoint to get a specific item by id",
    "get_engravings_for_lost_ark": "Endpoint to get all engravings",
    "gets_the_meta_data_from_one_given_champion_for_league_of_legends_champion_meta": "Fetches the Data from the provided League of Legends Champion.\nWill return a list of Objects, because a Champion can be played in multiple roles",
    "gets_the_data_from_all_league_champions_for_league_of_legends_champion_meta": "Fetches the Meta Data for all available League of Legends Champions",
    "gets_all_the_meta_data_from_all_champions_based_on_a_rank_for_league_of_legends_champion_meta": "Fetches all the Meta Data in a provided rank.\nPossible parameters are:\n- placements\n- iron\n- bronze\n- silver\n- gold\n- platinum\n- diamond\n- master\n- grandmaster\n- challenger\nThey also can be combined with a 'comma-sign': e.g. challenger**,**master",
    "big89_for_big89": "Big89 merupakan [situs judi online](https://www.inksgame.com) resmi di indonesia tanpa bank offline BCA BRI MANDIRI BNI DANAMON.",
    "getsecondword_for_contextoguess": "returns the second word for a given game",
    "docs_for_contextoguess": "docs",
    "home_for_contextoguess": "Home",
    "gamesdata_for_steamgames_special_offers": "This endpoint will give you the Games Data if you provide the APP_ID.\nYou can use the GamesList endpoint to get the list of APP_IDs and Feed it to this Endpoint to get the Games Data. Sample Details are given below:\n`{\n    \"discount\": \"-40%\",\n    \"original_price\": \"$49.99\",\n    \"price\": \"$29.99\",\n    \"title\": \"God of War\",\n    \"url\": \"https://store.steampowered.com/app/1593500/\"\n}`",
    "gameslist_for_steamgames_special_offers": "This Endpoint will List all the Games which are on Special Discount Offers.",
    "specific_skin_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a specific counterstrike skin \n(prices for field tested condition in USD)\n\n(replace skin_name, underscores instead of spaces)\n\nExample: /api/AK-47_Redline",
    "valorant_players_for_valorant": "This API gets all valorant players",
    "roll_for_diceforge": "Rolls a set of dice and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nsides (integer): A list of integers representing the number of sides for each die.\ncount (integer): A list of integers representing the number of times to roll each die. Defaults to 1 if not provided.\nmodifier (integer): A list of integers representing the modifier to apply to the total of each die roll.\nadvantage (boolean): If set to true, rolls each die twice and takes the higher result.\ndisadvantage (boolean): If set to true, rolls each die twice and takes the lower result.",
    "statroll_for_diceforge": "Rolls 4d6 for generating character stats, dropping the lowest die result from the total, and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nmodifier (integer): An integer representing the modifier to apply to the total of the stat roll.",
    "get_all_island_with_dropped_items_for_lost_ark": "This endpoint will return all the islands with the id's of the dropped items on the island.",
    "get_stats_for_lost_ark": "Endpoint to get all possible stats",
    "get_player_by_puiid_for_league_of_legends_api": "Return you the summoner profile related to the puuid given",
    "get_clips_for_twitch_channel_clips": "Get the latest 50 clips of a channel.",
    "raiderio_call_for_raider_io": "Calls the Raider.io API to get info",
    "gets_the_meta_data_from_one_given_champion_based_on_a_rank_for_league_of_legends_champion_meta": "Fetches the Data from the provided League of Legends Champion based on a rank.\nWill return a list of Objects, because a Champion can be played in multiple roles\n\nPossible rank parameters are: \n- placements\n- iron\n- bronze\n- silver\n- gold\n- platinum\n- diamond\n- master\n- grandmaster\n- challenger\nThey also be combined with a \"comma-sign\": e.g challenger,master",
    "gets_all_the_available_champions_names_without_any_meta_data_for_league_of_legends_champion_meta": "Fetches all the champion names",
    "hit_for_hitmen2": "main",
    "games_by_platform_for_mmo_games": "Insert platform, eg: pc, browser or all",
    "return_details_from_a_specific_game_for_mmo_games": "Insert game id",
    "games_by_category_or_tag_for_mmo_games": "Insert game category or tag, eg: mmorpg, shooter, pvp, mmofps and more. Full tag list at [https://www.mmobomb.com/api](url)",
    "search_coming_soon_games_for_epic_store_games": "Search Coming Soon Games",
    "search_on_sale_games_for_epic_store_games": "Search On Sale Games",
    "custom_dice_for_dice_roll_simulator": "Roll any number of dice with any number of sides.",
    "regular_dice_for_dice_roll_simulator": "Roll any number of regular dice.",
    "custom_dice_rolls_for_dice_roll_simulator": "Roll any number of dice with any number of sides any number of times.",
    "season_critical_damage_leaderboard_mw2_for_cod_api_2_0": "Get season critical damage information for up to 2000 players on the MW 2 leaderboard.",
    "season_kills_leaderboard_mw_2_for_cod_api_2_0": "Get season kills information for up to 2000 players on the MW 2 leaderboard.",
    "season_wins_leaderboard_wz2_for_cod_api_2_0": "Get season wins information for up to 2000 players on the leaderboard.",
    "upcoming_for_csgo_matches_and_tournaments": "Last of upcoming cs:go matches",
    "played_for_csgo_matches_and_tournaments": "Last of played cs:go matches",
    "getgamedetailpro_for_evosis_s_game_database": "Returns the game's information as Json.",
    "getplatformlist_for_evosis_s_game_database": "Returns the id and names of the platforms as Json.",
    "getgamedetail_for_evosis_s_game_database": "Returns the game's information as Json",
    "apis_for_stonxzyapi": "This shows the apis",
    "build_word_ladders_for_word_ladder_builder": "Create Word Ladders between two words. By default it uses 2019 edition of Collins Dictionary.",
    "get_stored_word_from_any_category_for_taboo_api": "Get a random result which will contain the main phrase and the taboo words, result may come from any of the stored categories.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10",
    "get_all_stored_categories_for_taboo_api": "Get a list of all stored categories. Use them to get results for the specified category",
    "get_result_from_category_for_taboo_api": "Given a stored category, get a random result which will contain the main phrase and the taboo words.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10",
    "get_feat_for_dungeons_and_dragon_5e": "Returns information about the feat. Mainly full text description.",
    "get_character_skills_for_lost_ark_simple": "List of Lost Ark Character Skills",
    "get_cards_collection_for_lost_ark_simple": "Get List of all** Lost Ark Cards** details",
    "heroes_data_for_dota2_heroes": "You can get heroes all heroes data name, image, videos, roles, abilities and talents with 20 languages.",
    "heroes_list_for_dota2_heroes": "You can list of heroes id , name , image, complexity and attribute",
    "weapon_for_valorant_weapons": "Returns the desired weapon's stats.",
    "weapon_classes_for_valorant_weapons": "Returns a list of all weapons classes (along with their respective weapons) that are currently in Valorant.",
    "getgamelist_for_evosis_s_game_database": "Returns the ID and series names of the games as Json.",
    "get_epic_free_games_coming_soon_for_epic_free_games": "Get Epic Free Games - Coming Soon",
    "get_epic_free_games_for_epic_free_games": "Get Epic Free Games",
    "alldetails_185_225_233_110_30015_for_vrising_server_query_api": "Get all details from server - change `/IP/PORT`",
    "playercount_185_225_233_110_30015_for_vrising_server_query_api": "Get the player count from server - change `/IP/PORT`",
    "discord_185_225_233_110_30015_for_vrising_server_query_api": "Gets the discord link found in the server description.",
    "group_profile_for_steam_community": "An overview of a steamcommunity group.",
    "user_aliases_for_steam_community": "Get a list of user aliases and when they were changed.",
    "user_friends_list_for_steam_community": "Get a full listing of in-game, online, and offline friends of a user.",
    "random_for_chess_puzzles_v2": "Get random chess puzzles",
    "advanced_for_chess_puzzles_v2": "Advanced search options",
    "range_for_chess_puzzles_v2": "Get random puzzles within a specified rating range",
    "get_tournaments_for_league_for_league_of_legends_esports": "This endpoint can gives you all of the tournaments for league id. You can get all league id from the Get Leagues endpoint . If you want you can get all tournaments data without filtering leagues.",
    "get_teams_and_players_for_league_of_legends_esports": "You can get all teams and player this api methods also you can filtered by team id or name.",
    "get_schedule_for_league_of_legends_esports": "In this method you can get all schedule for the leagues. You can filter multiple leagueId with join %  seperator.",
    "latest_mmo_news_for_mmo_games": "Latest MMO News powered by MMOBomb.",
    "get_champion_tier_list_for_league_of_legends_galore": "Get either a list of the current champion tier list or a tier list section based on YOUR request!",
    "get_username_higgs_domino_for_id_game_checker": "Enter your Higgs Domino ID  in the required parameters",
    "get_username_call_of_duty_mobile_for_id_game_checker": "Enter your Call of Duty Mobile ID  in the required parameters",
    "get_username_arena_of_valor_for_id_game_checker": "Enter your Arena of Valor ID  in the required parameters",
    "challenges_for_rocket_league": "Check the seasonal and weekly challenges.",
    "esports_for_rocket_league": "Check the Esports events:\n`rocket-league1.p.rapidapi.com/esports`",
    "news_for_rocket_league": "Check the news:\n`rocket-league1.p.rapidapi.com/news`",
    "free_games_for_free_epic_games": "Get the list of free games on Epic Games for the week",
    "titles_for_rocket_league": "Check a player's titles:\n`rocket-league1.p.rapidapi.com/titles/:player`",
    "population_for_rocket_league": "Check the playlist population:\n`rocket-league1.p.rapidapi.com/population`",
    "get_taboo_words_from_word_for_taboo_api": "Provide your own word and get the taboo words back.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10",
    "videogames_news_search_for_videogames_news": "Returns search results for current and historic news from top sources",
    "videogames_news_recent_get_for_videogames_news": "Get the most recent video games news from top sources\n10 news items will be returned per request",
    "get_leagues_for_league_of_legends_esports": "This api method can gives you all of the leagues and region information",
    "get_standings_for_league_of_legends_esports": "In this api method you can get all standings for tournaments. You can get tournaments id Get Tournaments From League method.",
    "get_statics_for_league_of_legends_esports": "This endpoint gives you champion statics. This statics can filtered time period and league.",
    "sponsor_players_for_trackmania": "Get Players that are sponsors.",
    "totd_tracks_by_page_for_trackmania": "Get the TOTD tracks by page number of the `https://trackmania.io/#/totd` page.",
    "player_summary_for_trackmania": "Get the summary of a player containing general information.",
    "summary_for_play_to_earn_blockchain_games": "Get games market data summary",
    "create_for_sudoku_all_purpose_pro": "Image output is base64 encoded! See https://myv.at/api/sudoku/code-examples/ how to decode back to HTML, SVG, JPG, PNG, GIF, WEBP easily!",
    "verify_for_sudoku_all_purpose_pro": "Check any solved (as well as *unsolved!*) Sudoku for authenticity and integrity.",
    "solve_for_sudoku_all_purpose_pro": "Solve every Sudoku. Simply make an API call with missing digits and receive the answer back immediately. Choose from different output formats to display your Sudoku perfectly.",
    "eu_for_bingoapi": "EU game spec.\nReturns numbers between 1 and 90.\n\nIf you have a paid plan you can specify the number of cards to generate as a query parameter: `?cards=10`\nThis will return an array of array (the cards).\n\nPlease note that empty spaces are not returned as it is more portable for who don't need them. You are free to loop through the cards and add them at your wish.",
    "us_for_bingoapi": "US game spec.\nReturns numbers between 1 and 75, randomized in 5 groups.\n\nIf you have a paid plan you can specify the number of cards to generate as a query parameter: `?cards=10`\nThis will return an array of array (the cards).\n\nPlease note that empty spaces are not returned as it is more portable for who don't need them. You are free to loop through the cards and add them at your wish.",
    "specificplayer_185_225_233_110_30015_billy_for_vrising_server_query_api": "Get the details of a specific player currently online on server - change `/IP/PORT`",
    "keydetails_185_225_233_110_30015_for_vrising_server_query_api": "Get the key details from server - change `/IP/PORT`",
    "tmgl_players_for_trackmania": "Get Players from tmgl.",
    "royal_matches_for_trackmania": "Get recent royal matches.",
    "top_players_by_matchmaking_for_trackmania": "Get the top players by their matchmaking rank.",
    "id_for_chess_puzzles_v2": "Get  a chess puzzle by its id",
    "getstorestatuslist_for_evosis_s_game_database": "Returns as Json of store status list.",
    "get_charades_word_for_pictionary_charades_word_generator": "Get a random charades word with the specified difficulty. If not difficulty is supplied, a random difficulty will be used.",
    "get_pictionary_word_for_pictionary_charades_word_generator": "Get a random pictionary word with the specified difficulty. If not difficulty is supplied, a random difficulty will be used.",
    "get_imbuements_for_demon_presence_holy_protection_for_tibia_items": "This enpoint will get all imbuement for type Demon Presence\n\nDemon Presence (Holy Protection)\nCultish Robe \nCultish Mask \nHellspawn Tail",
    "get_history_of_item_for_tibia_items": "In this enpoint we can deliver the history of item.\nyou will need to request in this pattern.\n\nKey: NameItem::World::TypeItem\nKey: Gold Token::Wizera::Valuable\n\nDate:2022-01-01\nDate: yyyy-MM-dd\n\nDate: 2022-01\nDate: yyyy-MM",
    "get_imbuements_for_snake_skin_earth_protection_for_tibia_items": "This enpoint will get all imbuement for type Snake skin\n\nSnake Skin (Earth Protection)\nBrimstone Fangs \nPiece of Swampling Wood \nSnake Skin",
    "players_185_225_233_110_30015_for_vrising_server_query_api": "Get all players currently online from server - change `/IP/PORT`",
    "get_a_specific_item_for_lost_ark": "Endpoint to get a specific item",
    "get_all_items_for_rpg_items": "Get all RPG items",
    "get_items_by_query_for_rpg_items": "Get all RPG items",
    "get_item_by_id_for_rpg_items": "Get all RPG items",
    "get_player_by_name_for_league_of_legends_api": "Return you the summoner related the name given",
    "get_player_details_for_league_of_legends_galore": "Get Player Details based on UserName.\nCase Sensitive!",
    "leaguetotalstandings_for_esportapi": "Get the total standings for a specific E-Sports league by providing the tournament ID and season ID.",
    "teamplaceholderimage_for_esportapi": "Get the team placeholder image in SVG format.",
    "categorytournaments_for_esportapi": "Get all leagues from a specific E-Sports category using the category ID.",
    "guessword_for_contextoguess": "guess a word and it will return the position it holds",
    "name_to_uuid_for_minecraft_uuid_converter": "Provide your Minecraft username",
    "uuid_to_name_for_minecraft_uuid_converter": "Convert your Mineccraft UUID to a Name",
    "cross_for_crossword_solver": "**Using this API is easy! An example?**\n\nSearch string:\n- must contain letters (a-z) AND at least one _ (underscore) for unknown letters.\n- must have a minimum length of 3 and a maximum lenght of 65 characters.\n- is a required parameter.\n\nExample request:   `word=u_b_l_e_a_l_`\n\nLanguage:\n- en, es, de (English, Spanish, German)\n- is a optional parameter. If not set /en/ is used. \n\nExample request:   `lang=en`\n\n**This is fun!**",
    "playstationdeals_for_playstation_store_deals_api": "There is only 1 parameter for this API endpoint.\n\n1. playstation_deals/?count=0\n\ncount = 0 (Min is 0, starting of the list. Max value depends on the total number of games available.)\nNote: Since its a List of Items, If the maximum number of games available on deals is 771 then you have to enter (771-1) = 770 to get the last game on the deal.\n\nThis will provide you with the game data as given below which contains name, price, platform, discount percent, discounted price, total no. of games, etc..:\n\n{\n  \"name\": \"God of War III Remastered\",\n  \"titleId\": \"CUSA01623_00\",\n  \"platform\": [\n    \"PS4\"\n  ],\n  \"basePrice\": \"$19.99\",\n  \"discountPercent\": \"-50%\",\n  \"discountPrice\": \"$9.99\",\n  \"url\": \"https://store.playstation.com/en-us/product/UP9000-CUSA01623_00-0000GODOFWAR3PS4\",\n  \"Total No. of Games\": 771\n}",
    "get_imbuements_for_vampirism_life_steal_for_tibia_items": "This enpoint will get all imbuement for type Vampirism\n\nVampirism (Life steal)\nVampire Teeth \nBloody Pincers \nPiece of Dead Brain",
    "get_imbuements_for_dragon_hide_fire_protection_for_tibia_items": "This enpoint will get all imbuement for type Dragon Hide\n\nDragon Hide (Fire Protection)\nBlazing Bone \nGreen Dragon Leather \nDraken Sulphur",
    "get_single_item_for_tibia_items": "This Endpoint will help you get sigle item in our data base by World",
    "filter_group_giveaways_for_gamerpower": "Filter and group platforms and giveaway types to get personalized results.",
    "total_live_giveaways_worth_estimation_in_dollars_for_gamerpower": "You can also use the \"platform\" and \"type\" parameters to get more specific results, eg: /api/worth?platform=steam?type=game",
    "edit_alert_for_cheapshark_game_deals": "Set or remove a price alert.",
    "stores_info_for_cheapshark_game_deals": "Returns a full list of store IDs and names, a flag specifying if store is active, and an array of image/logo sizes (relative URLs)",
    "manage_alerts_for_cheapshark_game_deals": "Send an email containing a link to manage your alerts.",
    "getgamesbycategory_for_unigamer_api": " ",
    "getallgames_for_unigamer_api": " ",
    "getgamesbyid_for_unigamer_api": " ",
    "custom_die_for_dice_roll_simulator": "Roll one die with any number of sides.",
    "commanderskills_for_gotw": "Commander skills",
    "user_data_for_minecraft_user_data": "Get minecraft user data.",
    "http_newexch_com_for_a56219609685dd9033d060cdbb60093c": "betting exchange",
    "game_for_game": "get game",
    "get_random_champion_for_league_of_legends_galore": "This will go through the list of champions and return a single RANDOM champion!",
    "search_for_esportapi": "Search for E-Sports players, teams, and tournaments by providing a search term.",
    "leaguenextmatches_for_esportapi": "Get the next matches for a specific E-Sports league by providing the tournament ID, season ID, and page number.",
    "get_sample_data_for_minecraft_servers_list": "Get 10 Servers List with Free Plan",
    "get_all_servers_for_minecraft_servers_list": "Get All Servers List",
    "regular_die_for_dice_roll_simulator": "Roll one regular die.",
    "language_list_for_steam_store_api": "Returns a full list of available languages. Use them in other endpoints to retrieve data in the language you're interested in.",
    "tag_list_for_steam_store_api": "Retrieve the full list of tags. Use the tag IDs to handle other endpoints. If you want to get all the games e.g. with **Action** tag, just:\n- retrieve the list\n- find the Action tag \n- take its ID \n- put it into **Items by tag** endpoint\nIt's so simple!",
    "achievement_list_for_steam_store_api": "Returns a full list of achievements with information on what needs to be done to get the achievement and what percentage of players have achieved it.",
    "games_by_platform_category_sorted_for_mmo_games": "Games by platform & category & sorted.",
    "sort_games_for_mmo_games": "Sort games by release date, alphabetical, popularity or relevance",
    "get_username_mobile_legends_for_id_game_checker": "Enter the Mobile Legends ID and Server in the required parameters",
    "get_username_pubg_mobile_for_id_game_checker": "Enter your PUBG Mobile ID  in the required parameters\n\nINFO: The API for this game is currently in the process of being maintained",
    "game_lookup_for_cheapshark_game_deals": "Gets info for a specific game. Response includes a list of all deals associated with the game.",
    "deal_lookup_for_cheapshark_game_deals": "Get info for a specific deal. Response includes game info, any cheaper current deals, and the cheapest historical price. As elsewhere, dealID is encoded",
    "blog_for_rocket_league": "Check the blog:\n`rocket-league1.p.rapidapi.com/blog`",
    "ranks_for_rocket_league": "Check a player's ranks:\n`rocket-league1.p.rapidapi.com/ranks/:player`",
    "user_reviews_for_steam_store_api": "\ud83d\udca1 The endpoint returns a complete list of user reviews. Use filters to narrow down the results as desired. If you want to get reviews from page 2, you must first grab data from page 1 and save the **cursor** value from response. Then set in the new call  **page=2** and **cursor** from page 1.",
    "country_code_list_for_steam_store_api": "Use this codes in other endpoints to grab data from the country of your interest. The country code is very **important** because it determines the **currency** in which prices will be displayed.",
    "get_username_point_blank_for_id_game_checker": "Enter your Point Blank ID  in the required parameters",
    "vaidebob_aviator_latest_for_vai_de_bob_aviator_api": "Will retrieve the latest results from Aviator at Vai de Bob.\n\n- The first result is the most recent\n- The last result is the oldest",
    "simbrief_get_latest_ofp_for_simbrief_get_latest_ofp": "Get latest ofp in xml (default) or json based on username\nthe json param must be 0 or 1",
    "get_live_for_league_of_legends_esports": "In this method you can get all live events score",
    "get_game_for_league_of_legends_esports": "In this api method you can search all of the game data with game id. You can get this id from the Get Vods api method.",
    "get_classes_list_for_lost_ark_simple": "List of Lost Ark Classes",
    "get_classes_for_lost_ark": "Get all classes and subclasses",
    "get_many_cards_for_pokemon_tcg_card_prices": "Returns many cards based on query parameters.\n\nA card represents a single card that can be defined by a combination of series / set / number in set / variant.",
    "get_one_set_by_id_for_pokemon_tcg_card_prices": "Returns information about a single set, retrieved using the ID for that set.",
    "get_many_sets_for_pokemon_tcg_card_prices": "Returns many sets based on query parameters.\n\nA set is a grouping of cards that are periodically released together. Every card has a set. Every set is part of a series.",
    "player_cup_of_the_day_information_for_trackmania": "Get the COTD info of a player.",
    "team_players_for_trackmania": "Get Players that are in the Openplanet Team.",
    "search_all_players_for_trackmania": "Search for players with `search_query`",
    "gamemapimage_for_esportapi": "Get the map image in PNG format by providing the map ID.",
    "eventgames_for_esportapi": "Get event games for a specific E-Sports event by providing the event ID.",
    "matchschedules_for_esportapi": "Get e-sports schedules for a specific day.",
    "get_sailors_for_lost_ark_simple": "Get list of all **Lost Ark** sailors details",
    "total_count_for_mcapi": "Get total count of entries",
    "items_for_mcapi": "Retrieve items information:\n\n- **item_id** is the id of the item like \"minecraft:stick\"\n- **item_group** is the group of the item like \"Ingredients\"\n- **stack_size** is the max amount of items in one stack\n- **fire_resistant** is true if the item doesn't burn\n- **rarity** is the item rarity such as \"COMMON\"\n- **is_food** is true if the item can be eaten\n- **is_damageable** is true if the item can be damaged when used\n- **is_enchantable** is true if the item can be enchanted\n- **durability** indicates how many times the item can be used\n- **tags** are the tags applied to this item",
    "advancements_for_mcapi": "Retrieve advancements:\n\n- **advancement_id** is the ID made of the category+title\n - **category** is the category of the advancement (adventure, husbandry, nether, story or end)\n - **title** is the in-game title\n - **description** is a short description of the advancement\n  - **frame** is the type of background used\n  - **icon** is the icon inside of the frame (block or item without minecraft:)\n  - **parent_advancement** is the ID of the previous adv. to be achieved",
    "get_imbuements_for_lich_shroud_death_protection_for_tibia_items": "This enpoint will get all imbuement for type Lich Shroud\n\nLich Shroud (Death Protection)\nFlask of Embalming Fluid \nGloom Wolf Fur \nMystical Hourglass",
    "get_username_genshin_impact_for_id_game_checker": "Enter the Genshin Impact ID and Server in the required parameters",
    "tags_for_mcapi": "Retrieve blocks and items tags",
    "recipes_for_mcapi": "Retrieve recipes",
    "shortened_item_details_for_steam_store_api": "\ud83c\udfae It retrieves shortened game data. Check the endpoint worth since it may contain information more important to you than the ones in \"Full item details\".",
    "today_word_for_wordle_game_api": "get today word or the correct answer",
    "top_players_by_trophies_for_trackmania": "Get the top players by their tophy count.",
    "live_giveaways_by_type_for_gamerpower": "Get live giveaways by type, eg: game, loot, beta",
    "search_items_for_steam_store_api": "\ud83d\udc49 This is one of the most important endpoints. Retrieve data from the Steam search engine. The filters here have a powerful impact. With their use you can find anything that interests you. If you want to limit the games to a certain amount, read the description of maxPrice parameter below.\n\nMaximum number of results served from one call is 50. But very often the number of results is lower because we skip game packs (bundles) in the search engine. If you're interested in this, let us know.",
    "connectip_185_225_233_110_30015_for_vrising_server_query_api": "Get the connect IP from server - change `/IP/PORT`",
    "estrelabet_aviator_latest_for_estrelabet_aviator_api": "Will retrieve the latest results from Aviator at Estrelabet.\n\n- The first result is the most recent\n- The last result is the oldest",
    "description_185_225_233_110_30015_for_vrising_server_query_api": "Get the full description from server - change `/IP/PORT`",
    "puzzles_for_chess_puzzles": "The main access point for the API",
    "puzzle_by_id_for_chess_puzzles": "Gets a single puzzle by Id",
    "in_game_ads_for_trackmania": "All currently active Maniapubs displayed in-game.",
    "get_event_detail_for_league_of_legends_esports": "In this api method you can get all of the event detail from the match or event id (exactly same those ids.) you can get this id from the Get Vods or Get Match api methods.",
    "card_for_card_draw_simulator": "Draw one card from a regular 52-card playing deck.",
    "cards_for_card_draw_simulator": "Draw multiple cards from a regular 52-card playing deck.",
    "get_one_card_by_id_for_pokemon_tcg_card_prices": "Gets details about a single card by it's ID.",
    "get_currency_for_countries": "This gets currency data on a country. Use ISO2 for country_code.",
    "iso3_for_countries": "This gets country name on a country. Use ISO3 for country_code.",
    "list_all_countries_for_countries": "This lists all countries.",
    "get_all_districts_of_a_city_in_vietnam_for_viet_nam_administrative_divisions": "Get all names of districts in a city",
    "get_all_cities_in_vietnam_for_viet_nam_administrative_divisions": "This endpoint will return back all names of cities in Vietnam",
    "get_all_wards_of_a_district_in_vietnam_for_viet_nam_administrative_divisions": "Get all names of wards in a district in Vietnam",
    "get_user_ip_for_ip_address": "Get user IP address.",
    "search_php_for_geokeo_forward_geocoding": "Blazing fast geocoding open service with world wide coverage and 24x7 Support.Quickly start deploying your apps with our affordable and accurate geocoding api.Support for all languages java, python, php, c, c++, React, Angular etc.Sign up without any credit card and get 2500 free api requests daily.",
    "reverse_php_for_geokeo_forward_geocoding": "Blazing fast geocoding open service with world wide coverage and 24x7 Support.Quickly start deploying your apps with our affordable and accurate geocoding api.Support for all languages java, python, php, c, c++, React, Angular etc.Sign up without any credit card and get 2500 free api requests daily.",
    "terminal_location_for_us_cellular": "",
    "get_all_postal_code_for_canada_postal_codes": "Get all postal code",
    "get_postal_codes_by_id_for_canada_postal_codes": "Get postal code by id",
    "find_by_udprn_for_find_by_udprn": "\u201cFind By UDPRN\u201d API gets address for the specified UDPRN.\n\nUDPRN stands for \u2018Unique Delivery Point Reference Number. A UDPRN is a unique numeric code (e.g. 64983) for any premise on the Postcode Address File.\n\nThis API uses the latest PAF and Multiple Residence data from Royal Mail.UDPRN are unique identifiers for every address in the UK that Royal Mail has in its database.",
    "getcountriesv2_for_getcountries": "get all coutries of the world",
    "getcountries_for_getcountries": "get all countries",
    "v1_1_for_bdapi": "`/v1.1`\nPrefix endpoint for version 1.1\nResponse provides a list of available endpoints in version 1.1",
    "v1_0_for_bdapi": "`/v1.0`\nPrefix endpoint for version 1.0\nResponse provides a list of available endpoints in version 1.0",
    "all_districts_with_coordinates_for_bdapi": "`/v1.1/districts`\nGet all Districts with their Coordinates in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string,\n  coordinates: string\n]\n```",
    "addresses_for_uk_postcode_api": "Gets addresses for given search term.",
    "addresses_autocomplete_for_uk_postcode_api": "Suggests address results for a given search term.",
    "postcodes_postcode_for_uk_postcode_api": "Gets addresses for the given UK PostCode",
    "tz_lookup_by_location_for_stadia_maps_time_zone_api": "The Stadia TZ Lookup API provides time zone information, as well as information about any special offset (such as DST) in effect based on the latest IANA TZDB. Note that this API may not be accurate for timestamps in the past and does not claim to report precise nautical times in the open ocean beyond territorial waters.",
    "isvalidmakani_for_dubai_makani": "Makani Number is generated to uniquely identify each main entrance of\nan existing building. When entering Makani Number for certain\nentrance, this method/function will verify if the entry is valid",
    "getqrcodeformakanino_for_dubai_makani": "When entering Makani Number, this method/function returns the\nQR Code download path in .jpg file which includes URL for\nentrance\u2019s location link.",
    "getmakaniinfofromcoordination_for_dubai_makani": "When entering the coordinate (latitude & longitude) for certain\nlocation, this method/function will return building details (in case\nthis location falls inside a building), Makani details for the building\nand latitude & longitude for each Makani Number. Makani\nentrance(s) for the building can be plotted / pinned on an\nelectronic map by using the latitude & longitude for each Makani\nNumber.",
    "types_google_for_nearby_places": "Get a list of establishment types.\n\nThese types will only work with **/nearby (Google)**.",
    "place_details_google_for_nearby_places": "Get contact and opening hours for a place.\n\nRequires a **place id** provided by **/nearby (Google)**.",
    "random_google_for_nearby_places": "Return a random place nearby.",
    "partenaire_par_id_for_partenaires_mobilis": "R\u00e9cup\u00e9rer un partenaire par son id",
    "health_for_partenaires_mobilis": "Donne l'\u00e9tat de sant\u00e9 de l'API",
    "get_all_partenaires_for_partenaires_mobilis": "R\u00e9cup\u00e9rer tous les partenaires.",
    "businesses_for_local_search": "",
    "searchcities_for_world_cities_and_countries": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.",
    "listallcountries_for_world_cities_and_countries": "This API returns list of all countries and can be paginated over the results.",
    "searchcountries_for_world_cities_and_countries": "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info.",
    "get_ip_geolocation_for_ip_geolocation_v3": "This endpoint returns geolocation and other useful points from an IP Address. If IP address is provided as query parameter, geolocation is performed on that IP address. If IP address is left empty, geolocation data of client IP is returned.",
    "timezones_for_world_time": "Request a list of valid timezones",
    "current_time_by_ip_for_world_time": "Request the current time based on your public IP",
    "timezone_for_location_for_world_time": "Request the current time for a timezone (in plain text or JSON)",
    "visitor_lookup_for_geoip_v2": "Returns the IP address of the client with additional data.",
    "ip_city_for_get_ip_info_v2": "Get the detail of Longitude and Latitude on the basis of IP-Address",
    "all_for_pharmacies_de_garde_nc": "Renvoie les pharmacies de garde de Nouvelle-Cal\u00e9donie",
    "health_for_pharmacies_de_garde_nc": "Renvoie le statut de l'application : up ou down",
    "fetch_distance_between_two_pincodes_for_pincode_distance_measurement_": "Enter two valid pincodes.",
    "get_the_states_for_location": "Get the states.",
    "get_the_places_by_latitude_and_longitude_for_location": "Get the places by latitude and longitude.",
    "get_the_addresses_by_ip_for_location": "Get the addresses by IP.",
    "nearby_google_for_nearby_places": "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20.",
    "find_by_postcode_for_find_by_postcode": "\u201cFind By PostCode\u201d API get addresses for the given UK PostCode. This API provides a JSON interface to search UK addresses for a postcode.",
    "v1_city_for_city_by_api_ninjas": "API Ninjas City API endpoint.",
    "v1_timezone_for_timezone_by_api_ninjas": "API Ninjas Timezone API endpoint. Returns the timezone name of the specified input location.\n\nEither both (**lat** and **lon**) or (**city**/**state**/**country**) parameters must be set.",
    "get_country_for_wgd_places": "Get country data using a name or continent",
    "get_city_for_wgd_places": "Gets city information from a country id",
    "api_v1_addresses_for_address_validation_nl": "Get Address",
    "geocode_for_tunisia_api": "This endpoint allows you to lookup locations in Tunisia by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "reverse_geocode_for_tunisia_api": "This endpoint allows you to perform reverse geocoding in Tunisia by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
    "measure_distance_for_tunisia_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Sfax to Tunis**",
    "current_time_by_specific_ip_for_world_time": "Request the current time for a specific IP (in plain text)",
    "get_ratings_by_restaurant_for_wyre_data": "Find a Food Hygiene Rating for a restaurant",
    "get_all_data_on_an_establishment_by_restaurant_for_wyre_data": "Find a Restaurant",
    "search_restaurants_by_town_for_wyre_data": "Find all Restaurants within a Town/City",
    "convert_coordinates_to_timezone_string_for_location_to_timezone": "This endpoint converts coordinates(latitude,longitude) to a timezone string which can be used for time calculations.",
    "single_lookup_for_ip_forensics_ip_geolocation_currency_exchange_and_threat_intelligence_api": "## Single Lookup\n\nThis is the primary IpForensics endpoint. It is used to look up any given IPv4 or IPv6 addresses. \n\nTo call this endpoint, simply attach an IP address to the API's base URL (HTTP GET method):\n\n**Each request to the single IP lookup endpoint consumes 1 token.**",
    "search_result_for_location_v2": "We are providing a location search result according to your search query,1",
    "get_geolocation_data_for_shw_geolocation_api": "fetch geolocation data",
    "obtener_cp_for_codigos_postales_mx": "Obt\u00e9n la lista de c\u00f3digos postales encontrados acorde al par\u00e1metro solicitado",
    "health_for_bps": "Get the status of the API",
    "all_codes_postaux_for_bps": "Tous les codes postaux.",
    "toutes_communes_for_bps": "R\u00e9cup\u00e8re le PDF de toutes les communes de la Nouvelle Cal\u00e9donie",
    "ip_locator_for_ip_geolocation_metadata": "The API supports .csv, .xml and .json as output formats.",
    "location_ip_for_ip_geo": "Location IP",
    "datum_conversion_for_navitime_geocoding": "\u7def\u5ea6\u7d4c\u5ea6\u306e\u6e2c\u5730\u7cfb(\u65e5\u672c\u6e2c\u5730\u7cfb/\u4e16\u754c\u6e2c\u5730\u7cfb)\u3092\u5909\u63db\u3057\u307e\u3059\u3002",
    "address_code_for_navitime_geocoding": "Return address information from address code of request parameters.",
    "address_inclusion_for_navitime_geocoding": "\u7def\u5ea6\u7d4c\u5ea6\u304c\u4f4f\u6240\u30b3\u30fc\u30c9\u306e\u7bc4\u56f2\u5185\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3092\u5224\u5b9a\u3057\u307e\u3059\u3002",
    "income_by_zipcode_for_income_by_zipcode": "Income By Zipcode",
    "v1_worldtime_for_world_time_by_api_ninjas": "API Ninjas World Time API endpoint. Returns the current date and time by city/state/country, location coordinates (latitude/longitude), or timezone.\n\nOne of the following parameter combinations must be set:\nlat + lon,\ncity (state and country optional),\ntimezone",
    "search_for_uk_postcode": "Find an street or post code using one of more key words",
    "getpostcode_for_uk_postcode": "Find an exact match for a given post code.",
    "timezone_by_area_for_world_time": "Request a list of valid locations for an area",
    "reverse_geocode_for_senegal_api": "This endpoint allows you to perform reverse geocoding in Senegal by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
    "directions_between_2_locations_for_senegal_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**",
    "facilities_lookup_for_senegal_api": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
    "find_by_address_for_find_by_address": "\u201cFind By Address\u201d API gets addresses for the given search term. This API provides a JSON interface to search UK addresses. This API gives access to Royal Mail PAF data and Geocoding.",
    "get_us_states_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get US states in GeoJSON format",
    "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get Postal areas of specific US state in GeoJSON format",
    "countybynameandstate_for_mapreflex": "Get boundaries of County by name and state (in GeoJSON format).  For a quick view, copy and paste results: http://geojsonlint.com",
    "placeslistbystate_for_mapreflex": "Get a plain list of Places of a state. Result is a plain list of place ids, not GeoJSON format. To retrieve boundaries of all Places of a state you may query method \"placesByIds\" with a portion of current method output.",
    "countiesbystate_for_mapreflex": "Get Counties boundaries of state (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com",
    "search_single_postcode_for_uk_postcode_to_latitude_and_longitude": "Search a single postcode and return the latitude and longitude",
    "calc_for_distance_calculator_v3": "Calculate distance between two coordinates",
    "timezone_for_services": "Return timezone",
    "get_addresses_by_postcode_for_pt_postcodes": "Get the list of addresses/street by specifying the postcode",
    "wilaya_informations_for_58_provinces_of_algeria": "all provinces",
    "provinces_and_municipalities_for_58_provinces_of_algeria": "All Algeria provinces and ther municipalities.",
    "get_ip_geolocation_for_ip_geolocation_find_ip_location_and_ip_info": "This endpoint returns geolocation and other useful points from an IP Address. If IP address is provided as query parameter, geolocation is performed on that IP address. If IP address is left empty, geolocation data of client IP is returned.",
    "geoip_v1_lite_getipinfolite_for_itcooking_eu_ip_geolocation": "Identifying location for 1 IP address.",
    "get_the_timezones_for_location": "Get the timezones.",
    "get_the_cities_for_location": "Get the cities.",
    "get_the_continents_for_location": "Get the continents.",
    "get_elevation_for_elevation_from_latitude_and_longitude": "Get Elevation",
    "get_time_zone_for_countries": "This gets timezone data on a country. Use ISO2 for country_code.",
    "get_phone_number_for_countries": "This gets phone codes on a country. Use ISO2 for country_code.",
    "nearest_metro_station_for_nearest_delhi_metro_station": "This endpoint is a **GET** method API that returns -\n\n- **Station name**\n- **Latitude** & **Longitude** of the nearest Delhi Metro station\n- **Google Maps direction**",
    "ip_for_ip_geo_location_and_ip_reputation": "Returns all data for the provided IP",
    "format_for_ip_geo_location_and_ip_reputation": "Format to display data\nCan be \"json\" or \"xml\"\nBy default will be select json",
    "reverse_for_reverse_geocode": "reverse geocode",
    "lookup_for_ip_directory": "This is the only endpoint available to this API. It accepts an IP Address and returns all available associated data.",
    "forward_for__forward_reverse_geocoding_by_googlemap_api": " ",
    "reverse_for__forward_reverse_geocoding_by_googlemap_api": " ",
    "bycountryname_for_country_information_and_conversion_api": "# Country Information and Conversion API\n\nThe Country Information and Conversion API provides comprehensive country-related data and conversion capabilities, allowing developers to access detailed information about countries worldwide and seamlessly convert between country names and country codes.\n\n## Endpoints\n\n### Get Country Code by Name\n\nRetrieve the country code based on the country name.\n\n- **URL:** `/api/country/code/:name`\n- **Method:** `GET`\n- **Parameters:**\n  - `:name` - The name of the country.\n\nExample Request:\n```\nGET /api/country/code/United States\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n### Get Country Name by Code\n\nRetrieve the country name based on the country code.\n\n- **URL:** `/api/country/name/:code`\n- **Method:** `GET`\n- **Parameters:**\n  - `:code` - The country code.\n\nExample Request:\n```\nGET /api/country/name/US\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n## Additional Country Information\n\nIn addition to the country code and name, both endpoints provide the following additional information about each country:\n\n- `capital`: The capital city of the country.\n- `population`: The population count of the country.\n- `language`: The official language(s) spoken in the country.\n- `currency`: The currency used in the country.\n- `timezone`: The time zone(s) observed in the country.\n\nPlease note that the additional country information is included in the example responses for both endpoints.\n\n## Error Handling\n\nThe API returns appropriate HTTP status codes and error responses to indicate various scenarios:\n\n- `200 OK`: Successful request and response.\n- `400 Bad Request`: Invalid request parameters or missing required parameters.\n- `404 Not Found`: Country not found or invalid country name/code.\n- `500 Internal Server Error`: An unexpected error occurred.\n\nPlease make sure to handle these status codes appropriately in your application.",
    "bycountrycode_for_country_information_and_conversion_api": "# Country Information and Conversion API\n\nThe Country Information and Conversion API provides comprehensive country-related data and conversion capabilities, allowing developers to access detailed information about countries worldwide and seamlessly convert between country names and country codes.\n\n## Endpoints\n\n### Get Country Code by Name\n\nRetrieve the country code based on the country name.\n\n- **URL:** `/api/country/code/:name`\n- **Method:** `GET`\n- **Parameters:**\n  - `:name` - The name of the country.\n\nExample Request:\n```\nGET /api/country/code/United States\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n### Get Country Name by Code\n\nRetrieve the country name based on the country code.\n\n- **URL:** `/api/country/name/:code`\n- **Method:** `GET`\n- **Parameters:**\n  - `:code` - The country code.\n\nExample Request:\n```\nGET /api/country/name/US\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n## Additional Country Information\n\nIn addition to the country code and name, both endpoints provide the following additional information about each country:\n\n- `capital`: The capital city of the country.\n- `population`: The population count of the country.\n- `language`: The official language(s) spoken in the country.\n- `currency`: The currency used in the country.\n- `timezone`: The time zone(s) observed in the country.\n\nPlease note that the additional country information is included in the example responses for both endpoints.\n\n## Error Handling\n\nThe API returns appropriate HTTP status codes and error responses to indicate various scenarios:\n\n- `200 OK`: Successful request and response.\n- `400 Bad Request`: Invalid request parameters or missing required parameters.\n- `404 Not Found`: Country not found or invalid country name/code.\n- `500 Internal Server Error`: An unexpected error occurred.\n\nPlease make sure to handle these status codes appropriately in your application.",
    "v1_urllookup_for_url_lookup_by_api_ninjas": "API Ninjas URL Lookup API endpoint.",
    "measure_distance_for_senegal_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from a hospital in Koalack to Dakar**",
    "geocode_for_senegal_api": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "get_by_id_for_kfc_locations": "Get by Id",
    "city_by_id_for_referential": "Direct lookup of over 75,000 cities by id. See the v1/city API to search for city ids.",
    "continent_by_id_for_referential": "Lookup a continent by id",
    "timezones_for_referential": "List the world's time zones in 20 languages",
    "get_sub_regions_for_world_country": "Get sub region list",
    "get_countries_for_world_country": "Get Country list",
    "get_states_for_world_country": "Get State list",
    "states_for_mapreflex": "Get boundaries of given States (in GeoJSON format). By default, returns boundaries of all States.  For a quick view, copy and paste results: http://geojsonlint.com",
    "countiessearchinradius_for_mapreflex": "Get Counties boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com",
    "zipcodesbyids_for_mapreflex": "Get boundaries of given ZIP Codes (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com",
    "directions_between_2_locations_for_tunisia_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Sfax to Tunis**",
    "facilities_lookup_for_tunisia_api": "This endpoint allows you to get facilities in Tunisia like hospital, bank, college, etc. by providing optional query parameters for facility type, province and city. It returns a list of facilities that match the query parameters.",
    "health_check_for_ip_geolocator": "Check if the API is up and running.",
    "ip_lookup_for_ip_geolocator": "## Retrieve an IP address geolocation and ASN informations.",
    "neighbours_for_australian_suburbs": "Find neighbouring suburbs based on the distance in km.",
    "suburbs_for_australian_suburbs": "Search for suburbs by name",
    "measure_distance_for_egypt_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Alexandria and Cairo**",
    "reverse_geocode_for_egypt_api": "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
    "geocode_for_egypt_api": "This endpoint allows you to lookup locations in Egypt by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "all_german_cities_for_locations_languages_countries_german_cities": "Get all German cities",
    "filter_german_cities_for_locations_languages_countries_german_cities": "Filter all German citities by name or postal code",
    "countries_all_min_for_locations_languages_countries_german_cities": "Minimized information of all countries",
    "search_places_for_mymappi": "Searches around a set of coordinates within a certain radius (in meters) to retrieve a list of nearby points of interest of a specific type (optionally).",
    "direct_geocoding_for_mymappi": "Translates an address as input into geographic coordinates. If there are multiple possible results, it retrieves the list of possible results ordered by the distance to the provided source coordinate (if any), in ascending order.",
    "distance_matrix_for_mymappi": "This services takes as input a list of coordinates and computes in a matrix format the fastest travel time among all possible pair combinations among all the provided coordinates. If sources/destinations params are provided, those indicate a semi-colon separated list of indices that specify which of the provided coordinates should be included as sources or destinations.",
    "reverse_geocoding_for_reverse_geocoding_v3": "Translate locations on the map into human-readable addresses.",
    "udprn_udprn_for_uk_postcode_api": "Gets addresses for given search term.",
    "health_for_localization_services": "Checks health status of services",
    "geo_ping_global_ip_lookup_for_global_webserver_or_ip_response_time_and_location": "Connects to 12 global servers and determines the local ip at that location for a given domain name or ip address, reports back location and response time of servers.",
    "ip_address_for_get_ip_address_and_basic_info_": "JUST SEND AJAX OR REQUEST TO API.",
    "getmakanidetails_for_dubai_makani": "When entering Makani Number for certain building entrance, this\nmethod/function will return building details and Makani details for\nthe building. In case Makani Number is available in more than\none emirate, this method/function will list the emirates and their\ncommunities",
    "latest_vessel_position_for_vessels": "Latest vessel position",
    "get_the_addresses_by_postal_code_for_location": "Get the addresses by postal code.",
    "get_the_countries_for_location": "Get the countries.",
    "get_the_addresses_by_latitude_and_longitude_for_location": "Get the addresses by latitude and longitude.",
    "reversegeocode_for_feroeg_reverse_geocoding": "Return a text address from a latitude/longitude location",
    "get_all_district_capital_for_district_capitals_in_ghana": "The endpoint retrieves all the district capitals",
    "get_district_capital_by_id_for_district_capitals_in_ghana": "This endpoint gets a particular district capital by ID",
    "get_district_capital_by_name_for_district_capitals_in_ghana": "This endpoint gets a district capital by district name",
    "v1_country_for_country_by_api_ninjas": "API Ninjas Country API endpoint.",
    "get_time_zones_for_world_country": "Get Time Zone list",
    "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb": "This endpoint takes your epic centre latitude, longitude along with radius in KM and returns all postcodes and suburbs within it.",
    "get_a_list_of_states_for_australian_postcode_to_suburb": "This endpoint return 3 letter states for the passed postcode.",
    "get_a_list_of_suburbs_for_australian_postcode_to_suburb": "This endpoint will return all matching suburbs for the passed postcode. The response also includes the state for each suburb and, if available, latitude and longitude for the suburb.",
    "getzip_for_schweizer_postleitzahlen": "get town information from ZIP-code (Postleitzahl)",
    "search_by_latitude_longitude_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude.",
    "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude.",
    "geocding_for_goapis_geocoding_api": "Geocoding is the process of converting a physical address into geographic coordinates, such as latitude and longitude. It allows for the identification of a specific location on the Earth's surface, making it possible to map and analyze data spatially",
    "types_arcgis_for_nearby_places": "Types (categories) of establishments. These types will only work with **/v2/nearby (ArcGIS)**.",
    "address_for_navitime_geocoding": "Return address information such as a postal code or latitude/longitude from free keyword of request parameters.",
    "address_reverse_geocoding_for_navitime_geocoding": "\u9006\u30b8\u30aa\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n\u7def\u5ea6\u7d4c\u5ea6\u3092\u6307\u5b9a\u3057\u3066\u4f4f\u6240\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002",
    "address_postal_code_for_navitime_geocoding": "Return address information from postal code of request parameters.",
    "get_cities_for_world_country": "Get City list",
    "placessearchinradius_for_mapreflex": "Get Places boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com",
    "directions_between_2_locations_for_tanzania_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Arusha to Dar es Salaam**",
    "geocode_for_tanzania_api": "This endpoint allows you to lookup locations in Tanzania by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "facilities_lookup_for_tanzania_api": "This endpoint allows you to get facilities in Tanzania like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
    "auto_ip_lookup_for_ip_address_tracker_free": "This endpoint will automatically look up the ip of your users",
    "countries_for_geography_v2": "get a list of all the countries filtering by name",
    "get_city_by_id_for_geography_v2": "get city by id",
    "get_country_by_id_for_geography_v2": "get a single country by id",
    "v1_geo_cities_for_get_cities": "s",
    "ip_address_lookup_for_ip_geolocalization_api": "When an IP address is provided this API will retrieve all possible data referred to its location.",
    "group_management_api_access_for_removing_group_information_for_catchloc": "API access to remove location object's group information.\n\nrequired parameter : api (api.common.group.set.delete)",
    "group_management_api_access_for_modifying_group_information_for_catchloc": "API access to modifying location object's group information\n\nrequired parameter : api (api.common.group.set.modify)",
    "group_management_api_access_for_registered_group_list_for_catchloc": "API access for group information.\n\nrequired parameter : api (api.common.group.get.list)",
    "ip_geolocation_for_ip_address_geolocation": "Returns the geolocation of the given IP address",
    "get_ip_data_for_ip_to_location_apiip": "Detailed information on our website: https://apiip.net/",
    "ip_for_ip_to_country_name": "A Free API for getting Country name Of any IP",
    "g_olocaliser_les_partenaires_for_partenaires_mobilis": "R\u00e9cup\u00e9rer tous les partenaires, ou r\u00e9cup\u00e9rer tous les partenaires dans un rayon donn\u00e9 autour d'un point donn\u00e9 :\n\n- **nearByLon**= {longitude du centre du cercle de la zone de recherche}\n- **nearByLat**= {latitude du centre du cercle de la zone de recherche}\n- **nearByDistance**= {rayon du cercle de la zone de recherche}",
    "iplookup_for_ip_lookup": "IPLookup",
    "isochrone_for_mymappi": "The Isochrone API allows you to request polygon or line features that show areas that are reachable within a few specified amounts of time from a certain location in different routing profiles (car, on foot and soon bike and public transport).",
    "snap_to_road_for_mymappi": "Given a geographical coordinate, it retrieves the another coordinate which is snapped to the nearest road. This means that the snapped coordinate is found by calculating the intersection between the longitudinal axis of the nearest road segment and the perpendicular line between the provided coordinate and this longitudinal axis.",
    "get_call_for_reverse_geocoding_v2": "Used to fetch api result using the request id received in responses.",
    "all_bps_for_bps": "Lister toutes les bo\u00eetes postales",
    "code_postal_par_code_for_bps": "Fournit les informations \u00e0 partir d'un code postal connu en Nouvelle Cal\u00e9donie.",
    "timezone_for_timezone_by_location": "Convert a position into its timezone",
    "all_languages_for_locations_languages_countries_german_cities": "List of most of the worldwide languages with the language code, the native language name and the English translation",
    "reverse_geocode_for_tanzania_api": "This endpoint allows you to perform reverse geocoding in Tanzania by providing query parameters for latitude and longitude. It returns the name of the address where the location is located.",
    "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau": "Returns a geocode and a geolookup for a specified address",
    "geocoding_for_an_address_for_geocoder_united_states_census_bureau": "Returns a geocode for a specified address",
    "is_a_coordinate_water_for_isitwater_com": "Given a latitude and longitude, return if that coordinate on Earth is water.",
    "group_management_api_access_for_device_s_group_list_for_catchloc": "API access for location object's group list.\n\nrequired parameter : api (api.common.group.get.object.group.list)",
    "get_all_for_countries": "This gets all data on a country. Use ISO2 for country_code.",
    "get_capital_for_countries": "This gets capital data on a country. Use ISO2 for country_code.",
    "iso2_for_countries": "This gets country name on a country. Use ISO2 for country_code.",
    "speed_limit_for_mymappi": "Given a coordinate, it retrieves speed limit info about the nearest road segment, in km/h.",
    "continents_for_geography_v2": "get a list of all the continents filtering by name",
    "cities_for_geography_v2": "get a list of all the cities filtering by name",
    "ip_geolocation_for_ip_geolocation_api": "IP Geolocation",
    "search_restaurants_by_local_authority_for_wyre_data": "Find all Restaurants within a Local Authority",
    "calculate_distance_by_lat_long_for_distance_calculation_api_by_pizza_api": "Calculate Distance between to place by their latitude and longitudes and metric you want the output of.",
    "findpincodebydistrict_for_india_pincode_api": "findpincodebydistrict",
    "findsubdistrict_for_india_pincode_api": "findsubdistrict",
    "findpincodebysubdistrict_for_india_pincode_api": "findpincodebysubdistrict",
    "all_communes_for_bps": "La liste des communes",
    "consulta_cep_for_viacep": "Consulta CEP",
    "findstate_for_india_pincode_api": "findstate",
    "main_for_timezonedb_find_local_time_zone_by_coordinate_or_name": "Return country code, GMT offset, daylight saving time, time zone name, and current timestamp.",
    "zipcode_by_city_for_geosource_api": "Retrives the zip code/codes of the city ( must be in the supported countries list [ 44 countries ]).",
    "emoji_flag_by_country_for_geosource_api": "Retrives  the emoji flag code of the country.",
    "countrieslist_for_geosource_api": "Retrives a list of all countries and some basic information of them",
    "ipfinder_for_https_ipfinder_io_": "ASN",
    "all_divisions_with_coordinates_for_bdapi": "`/v1.1/divisions`\nGet all divisions with coordinates in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  division: string,\n  divisionbn: string,\n  coordinates: string\n]\n```",
    "all_districts_for_bdapi": "`/v1.0/districts`\nGet all Districts of Bangladesh in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string\n]\n```",
    "get_geocoding_for_geocoding_places": "Get complete readable place info in prefered language based on given coordinate in latitude and longitude.",
    "get_geocoding_with_videos_for_geocoding_places": "Get complete readable place info in prefered language with related video on Youtube based on given latitude and longitude.",
    "get_geocoding_with_images_for_geocoding_places": "Get complete readable place info with high resolution images in prefered language based on given latitude and longitude.",
    "directions_between_2_locations_for_cameroon": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.",
    "measure_distance_reverse_for_cameroon": "This endpoint calculates the distance between two addresses in Cameroon.",
    "geocode_for_cameroon": "This endpoint allows you to lookup locations in Cameroon by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "cities_by_state_for_geosource_api": "Retrives a list of  cities of the state.",
    "location_by_city_for_geosource_api": "Retrives  the lat and lng of the city.",
    "group_management_api_access_for_creating_group_for_catchloc": "API access for location object's group designation and creation.\n\nrequired parameter : api (api.common.group.set.add)",
    "group_management_api_access_for_group_s_device_list_for_catchloc": "API access for location object group's device list.\n\nrequired parameter : api(api.common.group.get.group.object.list)",
    "municipio_por_c_digo_postal_for_c_digos_postales_de_espa_a": "Obtiene el municipio al que pertenece un c\u00f3digo postal",
    "distance_for_geowide": "This API endpoint takes latitude and longitude coordinates for two points and calculates the geodesic and great circle distances between them. It returns a json object with formatted coordinate information for each point, along with the distances in miles, kilometres, meters, feet, and nautical miles for both geodesic and great circle measurements.",
    "facilities_lookup_for_egypt_api": "This endpoint allows you to get facilities in Egypt like hospital, bank, college, etc. by providing optional query parameters for facility type, gov (governorate)  and city. It returns a list of facilities that match the query parameters.",
    "get_place_by_geoname_id_for_spott": "Returns a single Place identified by a Geoname ID.",
    "autocomplete_places_for_spott": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.",
    "get_place_by_ip_for_spott": "Returns the Place where a given IP Address is located. Returns \"Not Found\" error when no place is related to the IP. When sending '127.0.0.1' or '0.0.0.0' IP Addresses it will return the Place from the request was performed.",
    "reverse_geocode_for_uganda_api": "This endpoint allows you to perform reverse geocoding in Uganda by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
    "directions_between_2_locations_for_uganda_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a location in Nansana to Kampala**",
    "geocode_for_uganda_api": "This endpoint allows you to lookup locations in Uganda by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "get_place_by_id_for_spott": "Returns a single Place identified by an ID.",
    "search_places_for_spott": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.",
    "address_autosuggest_for_address_autosuggest": "\"Address Autosuggest\" API buit to suggests address results for a given search term. This API provides a JSON interface to extract address suggestions for a complete or partial address query.\n\nThe Autocomplete API suggests partial address results for a given query.",
    "ip_to_location_for_ip_to_location": "Get location details from IP address",
    "get_place_by_my_ip_for_spott": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.",
    "v1_iplookup_for_ip_lookup_by_api_ninjas": "API Ninjas IP Lookup API endpoint.",
    "traveling_salesman_for_mymappi": "It solves the Traveling Salesman Problem using a greedy heuristic (farthest-insertion algorithm) for 10 or more waypoints and uses brute force for less than 10 waypoints. The returned path does not have to be the fastest path. As TSP is NP-hard it only returns an approximation. Note that all input coordinates have to be connected for this service to work.",
    "district_detail_and_coordinates_of_specific_division_for_bdapi": "`/v1.1/division/{division_name}`\nGet all Districts, Coordinates, and Upazila of any Division.\n\n**Response:**\n```\nstatus: object,\ndata: [\n  _id: string:district,\n  district: string,\n  coordinates: string\n  upazilla: array\n]\n```",
    "nearby_superchargers_for_nearby_tesla_superchargers": "Get nearby superchargers up to 50km away.",
    "placebynameandstate_for_mapreflex": "Get boundaries of Place by name and state (in GeoJSON format).  For a quick view, copy and paste results: http://geojsonlint.com",
    "directions_between_2_locations_for_egypt_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Alexandria to Cairo**",
    "convert_for_bng2latlong": "Convert easting and northing to latitude and longitude",
    "lookup_ip_address_for_ip_location_lookup_service": "Feed this API an IP Address and have it perform a quick and easy lookup for you",
    "addressautocomplete_for_woosmap": "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings.\n",
    "getgeolocationposition_for_woosmap": "The `/position` returns JSON location of your users thanks to IP address of their devices.\n",
    "getdistancematrix_for_woosmap": "Get distances and durations for a matrix of origins and destinations, based on the recommended route between start and end points for a specified travel mode.\n",
    "timezone_for_timezone_by_coordinates": "Get the timezone of the coordinate location.",
    "promotional_sms_for_promotional_sms": "Promotional sms Endpoint",
    "send_single_message_for_branded_sms_pakistan": "This API is useful to send a branded sms to single number",
    "send_message_to_multiple_numbers_for_branded_sms_pakistan": "This API is useful to send a branded sms to multiple numbers",
    "validate_phonenumber_for_whatsapp_checker_pro": "Whatsapp Validate PhoneNumber",
    "get_all_countries_for_virtual_number": "Get the list of currently available countries",
    "get_number_by_country_id_for_virtual_number": "Get currently available numbers list by given country id",
    "view_sms_history_for_virtual_number": "View All received SMS for the given number and country id",
    "get_processing_status_of_file_for_phone_verification": "This endpoint gives you status of file uploaded for verification.",
    "download_verification_results_for_phone_verification": "This endpoint returns the result file to be downloaded.\n\nPass name of file to be downloaded as path param. Result file name is always in format {filename}_output.xlsx Replace {filename} with the name returned from upload file call.\n\nTo download the file with angular follow sample code here\n\nhttps://stackoverflow.com/questions/40240796/angular-2-best-approach-to-use-filesaver-js",
    "verify_single_number_for_phone_verification": "Get the details of phone number supplied in the query param. Do not forget to pass Authorization header with your access_token. \n\nHint - access_token are returned as part of login api call.",
    "getmessage_for_sms_receive": "Get message details.",
    "settag_for_sms_receive": "Change the current tag.",
    "getupdates_for_sms_receive": "Get updates about newly received messages.",
    "get_otp_status_for_d7_verify": "Get the status of OTP generated or verified",
    "check_balance_for_d7_verify": "Get information about current balance on your D7API account",
    "validate_for_phonenumbervalidatefree": "Free and easy. Validate any phone number, from any country.\nGet type of number (for example, fixed line or mobile), the location of the number, and also reformat the number into local and international dialing formats.",
    "get_messages_for_smsto": "Fetch paginated messages.\n\nPlease note that the messages will be sorted by the date of creating (sending) - latest first.",
    "get_last_campaign_for_smsto": "Get the last campaign that you have sent",
    "get_message_by_id_for_smsto": "Get the message that you have sent by ID",
    "send_sms_for_sms_v2": "Send SMS",
    "anjing_for_gunsky": "Wkwkwland",
    "dedu_for_dedu": "dedu",
    "d7api_check_balance_for_d7sms": "Get information about current balance on your D7API account",
    "get_otp_status_for_d7sms": "Get the status of OTP generated or verified",
    "get_message_status_for_d7sms": "Get Message Delivery Status of previously sent messages.",
    "lqv_for_lqv68": "get whois",
    "sendsms_for_rivet_sms": "Send single messages",
    "bulk_sms_for_rivet_sms": "Send bulk sms  to multiple numbers .",
    "get_sender_id_for_rivet_sms": "Get the list of all Sender ID that are registered for your account to send SMS.",
    "getnumbers_for_sms_receive": "Get a list of available numbers to receive messages from.",
    "lei_for_g2api2019": "Testing",
    "fetch_message_for_zigatext_global_bulk_sms_otp": "Fetch Message",
    "fetch_months_for_zigatext_global_bulk_sms_otp": "Fetch Months",
    "check_balance_for_zigatext_global_bulk_sms_otp": "Check Balance",
    "send_sms_for_broadnet_sms": "Message Submission",
    "send_for_sms_v3": "use this to send the sms.",
    "short_url_links_for_smsapi_com": "List short URLs.",
    "profile_for_smsapi_com": " ",
    "subusers_id_shares_sendernames_for_smsapi_com": " ",
    "sent_message_status_for_rivet_sms": "Get the sent message status of the message using the message id.",
    "sms_sendernames_for_smsapi_com": " ",
    "subusers_for_smsapi_com": " ",
    "fetch_newsletter_lists_for_zigatext_global_bulk_sms_otp": "Fetch Newsletter Lists",
    "fetch_birthday_groups_for_zigatext_global_bulk_sms_otp": "Fetch Birthday Groups",
    "fetch_timezones_for_zigatext_global_bulk_sms_otp": "Fetch Timezones",
    "get_balance_for_sms77io": "Retrieves the account balance for the given API key.",
    "replies_for_sms77io": "Retrieves message replies history.",
    "get_webhooks_for_sms77io": "Retrieves all existing webhooks.",
    "gettag_for_sms_receive": "Get the current tag.",
    "fetch_sent_message_extra_for_zigatext_global_bulk_sms_otp": "Fetch Sent Message Extra",
    "get_pricing_for_sms77io": "Retrieves pricing information for a single country or all.",
    "read_for_sms77io": "Retrieves information regarding subacounts.",
    "get_analytics_for_sms77io": "Get detailed statistics of your account directly through our API.",
    "get_contacts_for_sms77io": "Retrieves all contacts for a given API key.",
    "get_status_for_sms77io": "Get a delivery report for a message ID sent with your API key.",
    "voice_for_sms77io": "Retrieves voice messages history.",
    "similar_hashtags_for_hashtag": "Generated related hashtags to a text input provided",
    "get_category_for_hashtag": "Get a specific category",
    "trending_tags_from_country_for_hashtag": "Gets trending tags from a specific country",
    "profile_for_tiktok_v3": "get profile information by username",
    "user_videos_for_tiktok_v3": "get user videos by user_id and  secUid",
    "challenge_videos_for_tiktok_v3": "get challenge videos by challenge _id",
    "alexander_for_marryme": "123",
    "get_all_active_stream_infos_for_gwyo_twitch": "Get a Stream Informations if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )",
    "get_channel_profile_pic_html_element_for_gwyo_twitch": "Get Channel Profile Pictures as a HTML Element with <img/> tag (using username or id)\n( Sizes: 150x150, 300x300, 600x600 )",
    "get_stream_title_for_gwyo_twitch": "Get Stream Title (using username or id)\n( return an empty JSON object if not currently LIVE )",
    "getprofilebyuserid_for_instagram_v10": "getProfileByUserId",
    "get_members_for_socie": "Retrieve all or some members of your community.",
    "get_member_for_socie": "Return a specific member. To do this, you need the `externalId` you gave the member when you created it or the `id` provided by Socie.",
    "tweet_detail_conversation_for_twitter_v2": "Get Tweet Detail & Conversation",
    "user_by_rest_id_for_twitter_v2": "Get User By Rest ID",
    "user_tweets_replies_by_screen_name_for_twitter_v2": "Get User Tweets & Replies  By Screen Name",
    "get_search_user_for_tiktok_user": "Get search result for specific username",
    "get_user_for_tiktok_user": "Get user profile will return all the information of the user",
    "video_comments_for_tiktok_v3": "get video comments by video_id",
    "download_video_with_watermark_for_tiktok_v3": "Download Video With Watermark",
    "profile_by_url_for_instagram_statistics_api": "Returns profile information from our database or searches for an account in a social network.\nReturns general account information and identifier.\n\nContains the status of data collection and the time the data was last updated.\n\nDue to direct access to the social network, it may work a little slower. It is recommended to use for the initial receipt of the identifier.\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_16b6e212-c0c3-42c6-8c3c-9dfd22ae1bf6_f.png?time=1666776494)",
    "feed_for_instagram_statistics_api": "Returns a list of posts with all metrics for the period.\n\nThe effectiveness of hashtags, post types and text length\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_e1767a2c-31de-4501-9279-661f7c03e8c1_f.png?time=1666776603)",
    "retrospective_for_instagram_statistics_api": "Returns the history of the number of subscribers, posts, interactions, likes, comments, reposts, engagement for the selected period by day and in total for the period\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_1f14d181-31f7-40ea-b957-fac40f8eee6f_f.png?time=1666779218)",
    "generate_shield_for_shields": "Generate shield.",
    "generate_for_tiktok_hashtag_generator": "to Generate the best Tiktok Hashtags",
    "instagram_user_info_for_instagram_v9": "Get Instagram account information",
    "instagram_post_info_for_instagram_v9": "Get Instagram Post (likes, comments, hashtags, mentions, location, etc.)",
    "trending_countries_list_for_hashtag": "List countries where we can fetch trending tags from",
    "trending_tags_for_hashtag": "Get global trending tags",
    "getuservideos_for_tiktok_info": "Get all the videos of an user. By default the **limit** has been set to 10. You can customize it.",
    "getvideo_for_tiktok_info": "Get all the video information like Play URL, Cover, Stats, Codec along with Author and Music details",
    "getmusic_for_tiktok_info": "Get all the TikTok videos that are using a specific music along with the information about original music",
    "send_sms_for_hajana_one_free_sms_for_websites": "A File for sending SMS",
    "posts_by_username_for_reddit": "Posts By Username",
    "top_posts_by_subreddit_for_reddit": "Top Posts By Subreddit",
    "top_popular_posts_for_reddit": "Top Popular Posts",
    "all_data_for_robberydata": "Get all Data",
    "get_individual_result_by_id_for_robberydata": "Get Individual Result by ID",
    "user_by_rest_id_for_twitter_v2_v2": "User By Rest ID",
    "user_tweets_for_twitter_v2_v2": "User Tweets",
    "tweet_detail_conversation_for_twitter_v2_v2": "Tweet Detail & Conversation",
    "languages_for_popular_languages": "Get list of most popular  languages",
    "language_by_id_for_popular_languages": "Get popular language by id",
    "download_video_or_reel_for_instagram_downloader_reel_video_post_downloader": "Enjoy!",
    "download_youtube_video_for_youtube_videos_downloader": "This API endpoint allows users to download YouTube videos by providing the video URL as input.",
    "api_socialmedia_for_celebrity_social_media_api": "Use this endpoint to fetch  Social Media Accounts",
    "search_quotes_for_tronald_dump": "Free text search for quotes.",
    "quote_for_tronald_dump": "Get quote by id",
    "random_quote_for_tronald_dump": "Retrieve a random quote.",
    "list_for_onlyfans": "Used to get a full list of expired user details\n\nMust hit the auth endpoint first!\nAlso best to hit the count endpoint beforehand.",
    "authentication_for_onlyfans": "Best to call the Sign Info first take those values and pass them on",
    "performer_model_info_for_onlyfans": "Get detail info about a performer / model",
    "workspace_for_ocoya": "Returns workspace info.",
    "social_profiles_for_ocoya": "Returns information about connected social profiles.",
    "me_for_ocoya": "Returns information about authenticated user.",
    "username_for_idd": "get data by username",
    "video_full_info_by_url_for_tiktok_downloader_download_tiktok_videos_without_watermark": "Tiktok videos with full info \nvideo without watermark\ncover / music\nshare / likes / comments\nauthor  info  like connected  Youtube channel / IG  / avatar thumbnail / statistics about the video including comments number / likes \nsupport for  all Tiktok links ( vm.tiktok.com / vt.tiktok.com / m.tiktok.com / web / t.tiktok.com)",
    "video_without_watermark_mp4_mp3_cover_for_tiktok_downloader_download_tiktok_videos_without_watermark": "video without watermark mp4 mp3 and cover only\nwith light weight responses between 300-450ms or lower depending on your server geo loc",
    "video_without_watermark_mp4_mp3_cover_desc_region_wt_for_tiktok_downloader_download_tiktok_videos_without_watermark": "video without watermark [mp4,mp3,cover,description,region,verify]\nthe response may be slower than the other \" video without watermark\" endpoint cause it's more loaded but it is still so fast enough and it's more stable \nserved by proxy",
    "get_stories_for_instagram_api_media_downloader": "Receive all stories with download url for videos and photos",
    "get_highlight_by_id_for_instagram_api_media_downloader": "Provides all images and videos of the highlight. This has the same structure as the stories endpoint",
    "get_all_highlights_for_instagram_api_media_downloader": "Receive a list of all highlights, including the cover image.",
    "user_info_for_soundcloud": "Get basic user info",
    "search_for_soundcloud": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".",
    "playlist_info_for_soundcloud": "Get playlist info.",
    "download_tiktok_video_for_tiktok_video_downloader": "Provide Link of TikTok video in url parameter to get Download Links of TikTok Video.",
    "search_users_for_tiktok_apis": "Search user by keyword",
    "trending_videos_for_youtube_v2": "This endpoint returns the list of trending videos given a country",
    "channel_videos_for_youtube_v2": "Get the latest videos published by a Youtube channel",
    "video_details_for_youtube_v2": "Get all publicly available details about a Youtube Video",
    "download_story_post_highlight_for_instagram_downloader": "past a copied link of story or highlight or post \nindex/url={URL}",
    "api_exist_for_tiktok_private_api": "Get \"sec_id\" and \"id\" by username",
    "api_analyze_for_tiktok_private_api": "Analyze user data : engagement, hashtags, mentions, and recent videos.",
    "api_userinfo_for_tiktok_private_api": "Get avatar and followers, likes and videos count of a user by \"id\"",
    "extract_download_links_for_instagram_downloader_reels_and_videos_downloader": "Add url parameter to get download links.",
    "story_by_id_for_instagram_api": "Gets a story by Id",
    "location_by_id_for_instagram_api": "Gets a location by Id",
    "hashtag_by_name_for_instagram_api": "Gets a Hashtag by Name",
    "fetch_business_info_get_free_token_for_whatsapp_scraper": "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account.",
    "is_whatsapp_for_business_for_whatsapp_scraper": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
    "about_for_whatsapp_scraper": "This endpoint will return the `About` info of the Whatsapp for business number, and when the value was set.",
    "using_category_name_to_get_emoji_list_for_funny_emojis": "using category name to get emoji list",
    "emoji_api_instructions_for_funny_emojis": "emoji api Instructions",
    "get_emoji_category_list_for_funny_emojis": "get emoji category list",
    "user_lookup_for_peerreach": "Returns a detailed overview of available PeerReach data for the user",
    "v1_user_user_id_followers_for_tokapi_mobile_version": "User followers",
    "v1_user_user_id_playlist_playlist_id_for_tokapi_mobile_version": "Playlist information by ID",
    "v1_music_music_id_for_tokapi_mobile_version": "Music information by ID",
    "get_basic_details_dp_for_instagram_dp_download": "get basic details and Instagram DP download link",
    "searchfollowing_for_instagram_v6": "search someone's following",
    "mediainfo_for_instagram_v6": "get media info",
    "medias_for_instagram_v6": "Get someone's medias, batch_size range from 1 to 50",
    "get_greet_for_greet_generator": "Get Greet",
    "user_reels_feed_for_instagram_data": "Get user reels feed\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster",
    "user_search_for_instagram_data": "Search for a users by using keyword",
    "location_feed_for_instagram_data": "Get location post feed",
    "info_link_data_for_terabox_downloader": "Get Data Terabox Share Link",
    "stream_m3u8_format_for_terabox_downloader": "Stream by url with m3u8 format",
    "get_download_link_for_terabox_downloader": "Get Download Link",
    "get_video_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific video on Likee.",
    "get_all_videos_for_likee_downloader_download_likee_videos": "This endpoint will return back all videos about a specific user on Likee.",
    "get_user_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific user on Likee.",
    "url_for_instagram_downloader_download_videos_reels_stories_2023": "Enter Instagram Media URL\nExample:-\nhttps://www.instagram.com/p/Ctu7iCJpYhF/",
    "get_tiktok_video_info_for_tiktok_video_no_watermark_v3": "Get tiktok video full info. HD Quality, No Watermark. Fast.\nSupport Tiktok & Douyin.\nSupport Getting Image List.\nSupport Tiktok Stories.",
    "questions_for_quiz": "NOTHING",
    "user_likes_for_twttrapi": "Get user's likes",
    "search_images_for_twttrapi": "Search images",
    "search_videos_for_twttrapi": "Search videos",
    "youtube_video_details_for_youtube_video_details": "YouTube Video Details",
    "generate_for_instagram_hashtags": "Generate Hashtags",
    "extract_video_download_links_for_fdown_facebook_video_downloader": "Just provide the url of Video and You will get download links of Video in HD and SD format. :)",
    "user_info_for_tiktok_bulletproof": "Retrieve TikTok user info by username",
    "user_feed_for_tiktok_bulletproof": "Retrieves 30 latest feed items from TikTok account, by username",
    "getpostdetails_for_tiktok_videos_without_watermark": "Get video details like video, music, image",
    "get_userinfo_including_hd_profile_picture_for_instagram_api_media_downloader": "Get the full-resolution profile picture url, profile links, biography, internal information and more",
    "get_profile_for_instagram_api_media_downloader": "Get all general profile informations",
    "user_data_by_name_for_tiktok_solutions": "Get** User Data** by** Name**",
    "hashtag_feed_by_id_for_tiktok_solutions": "Get **Hashtag Feed **by **ID**",
    "music_data_by_id_for_tiktok_solutions": "Get** Music Data **by **ID**",
    "search_subreddits_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the Subreddits.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.",
    "search_users_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the users.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.",
    "get_posts_from_subreddit_for_reddit_fast_search": "Get Posts from Subreddit",
    "fb_for_fb_video_reels": "Get Facebook video",
    "youtube_channel_id_for_youtube_v2": "This endpoint get the channel ID of a Youtube Channel given the channel name",
    "channel_search_for_youtube_v2": "This endpoint gets search results in a given Youtube channel using the channel ID",
    "channel_search_continuation_for_youtube_v2": "This endpoint gets search the next list of search results in a given Youtube channel using the channel ID",
    "hls_for_twitter_v3": "hls => mp4 converter",
    "list_user_followings_for_tiktok_private": "User Followings List",
    "trending_challenges_for_tiktok_private": "Get Trending Challenges",
    "search_users_for_tiktok_private": "Search Users By Keyword",
    "download_video_or_reel_for_facebook_video_and_reel_downloader": "You can extract Download links of **Facebook **Video or Reel in **HD **and **SD **formats.",
    "video_without_watermark_cover_music_for_tiktok_full_info_without_watermark": "original video without watermark/cover/ music / other info about the user and the video",
    "full_info_with_url_for_tiktok_full_info_without_watermark": "tiktok videos with full info \nvideo without watermark\ncover / music\nshare / likes / comments\nauthor  info  like connected  youtube channel / IG  / avatar thumbnail / statistics about the video including comments number / likes \nsupport for  all tiktok links ( vm.tiktok.com / vt.tiktok.com / m.tiktok.com / web / t.tiktok.com)",
    "random_for_conversation_starters_api": "Get a random conversation starter",
    "suggested_profiles_for_instagram_bulk_profile_scrapper": "Instagram Discover Profiles endpoint",
    "advance_bulk_profile_for_instagram_bulk_profile_scrapper": "Scrap email and phone number using this api\n\nScrap Instagram Profile using username.\n\nThis API response take around 5-6 seconds scrap one profile with post.\n\nIt is designed and capable to handle bulk request. but we recommend to add 5-10 seconds random delay between each request.\n\n\nThis API also support optional parameter corsEnabled to generate image/video link which can be directly used in Browser",
    "followers_by_username_for_instagram_bulk_profile_scrapper": "**Contact me for Custom package or requirements**\n\nFetch followers list\n\nCarry forward nextMaxId to retrieve next batch",
    "my_fortune_for_fortune_cookie": "Get your fortune",
    "category_list_for_fortune_cookie": "List of fortune categories",
    "v1_post_post_id_for_tokapi_mobile_version": "Video by ID",
    "v1_category_for_tokapi_mobile_version": "Trending categories list",
    "v1_feed_recommended_for_tokapi_mobile_version": "Trending feed",
    "get_for_instagram_media_downloader_v2": "lol world",
    "getstorybyid_for_snapchat": "getStoryById",
    "getworldlenses_for_snapchat": "getWorldLenses",
    "getuserlenses_for_snapchat": "getUserLenses",
    "post_groups_for_ocoya": "Returns information about all my created posts.",
    "getting_full_details_for_tiktok_full_video_info_without_watermark_": "Tiktok videos with full info \n- video without watermark (HD)\n- cover / music\n- share / likes / comments\n- and more",
    "get_media_info_for_instagram_v7": "Get information about a media by providing the media id.",
    "get_media_id_from_data_for_instagram_v7": "Get the id of a media from some data like a link.",
    "get_user_info_for_instagram_v7": "Get information about a user",
    "get_new_hashtags_for_top_instagram_hashtag": "GET 1000 New Genereted Hashtags",
    "get_hashtags_for_top_instagram_hashtag": "Get 100 Most Popular Instagram Hashtags",
    "get_hashtag_for_top_instagram_hashtag": "Get detail hashtag",
    "search_among_followers_by_pk_for_instagram_api_v2": "search any query in an Instagram account followers when you have the pk, it can be one part or the whole username or full name",
    "get_followings_by_pk_for_instagram_api_v2": "Get lists of any public Instagram account followings via pk",
    "username_to_pk_convert_for_instagram_api_v2": "it converts any username on instagram to the unique id which is called pk",
    "tweet_favoriters_for_twitter_v2_v2": "Tweet Favoriters",
    "user_likes_for_twitter_v2_v2": "User Likes",
    "hls_for_instagram_v3": "hls => mp4 converter",
    "get_for_instagram_v3": "Getting data bypassing CORS",
    "followers_by_pk_for_instagram_pro": "Instagram Followers list up to 1000 records only",
    "following_by_username_for_instagram_pro": "Instagram Following List by username, Up to 1000 records",
    "following_by_pk_for_instagram_pro": "Instagram Following List by PK, Up to 1000 records",
    "song_download_for_soundcloud": "Download one song, the result is a url which you can get the song.",
    "song_info_for_soundcloud": "Get basic information of a song.",
    "check_phone_number_for_valid_whatsapp": "Enter the number you want to check. Returns `true` or `false`.",
    "search_comments_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the comments.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.",
    "search_posts_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the posts.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.",
    "shadowban_checker_for_reddit_fast_search": "This endpoint allows you to check if a Reddit user is shadowbanned. Shadowbanning is a practice where a user's actions and content are hidden from the public without their knowledge. This endpoint provides a way to detect if a user is affected by shadowbanning on Reddit.\n\nParameters:\n\nusername (string, optional): Specifies the username of the Reddit user to check for shadowbanning. The default value is set to \"John\".\nfull (boolean, optional): Determines whether additional user information should be returned in the response. If set to True, it includes details such as the user's join date, post karma, comment karma, and verified mail status. By default, it is set to False.\nproxy (string, optional): Specifies the proxy server to be used for the request. If required, you can provide the proxy server's details to route the request through a specific network or location. The default value is None, indicating no proxy is used.\ntimeout (integer, optional): Specifies the maximum time, in seconds, to wait for a response from the Reddit API. The default timeout is set to 5 seconds.\nReturns:\n\nThe endpoint returns a JSON response with the following fields:\n\nis_shadowbanned (boolean): Indicates whether the specified Reddit user is shadowbanned. If True, the user is shadowbanned. If False, the user is not shadowbanned.\nIf full is set to True, the response also includes the following additional fields:\nusername (string): The username of the Reddit user.\njoin_date (string): The date and time when the user joined Reddit.\npost_karma (string): The amount of karma the user has gained from posting.\ncomment_karma (string): The amount of karma the user has gained from commenting.\nverified_mail (string): Indicates whether the user has a verified email associated with their account.\nError Handling:\n\nThe endpoint handles potential errors during the process. If the provided username is invalid, a ValueError is raised with an HTTPException status code of 400 and an error message indicating the issue.\n\nPossible errors during the request process, such as proxy connection failures, request timeouts, or internal server errors, are handled as HTTPExceptions with status codes 500 and appropriate error details.\n\nNote:\n\nThe endpoint utilizes the Reddit API to fetch information about the user.\nProper validation and handling of the username parameter are performed to ensure the input is valid and avoid potential errors.\nThe endpoint supports the usage of proxy servers for the request if required.\nThe timeout parameter allows controlling the maximum waiting time for the response from the Reddit API.\nThe endpoint provides basic information about the user and helps identify if they are shadowbanned on Reddit.",
    "genderify_v3_for_genderify3": "Predict and detect male or female based on their name or email address. Names are supported in over 160 supported countries.\n\ninput: Emily Blunt or shigeotokuda@email.com",
    "status_for_tweesky": "Endpoint to verify API is working and available<br/>",
    "motivation_quote_for_olato_quotes": "It shows random quotes",
    "success_quote_for_olato_quotes": "It shows random quotes",
    "love_quote_for_olato_quotes": "It shows random quotes",
    "get_m3u8_links_for_gwyo_twitch": "Get All resolutions m3u8 link URLs if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )",
    "get_channel_total_views_for_gwyo_twitch": "Get Channel Cumulated Views since its creation (using username or id)",
    "generate_a_face_for_facegen": "Provides a link to download a face image generated by artificial intelligence.\n\n```\n\nOccasionally, a neural network makes mistakes, \nwhich is why artifacts appear: an incorrectly bent pattern, \na strange hair color, and so on.\n```",
    "get_post_for_tiktok_private": "Get Post Detail",
    "search_videos_for_tiktok_private": "Search Videos By Keyword",
    "playlist_posts_for_tiktok_private": "Get posts by User and Playlist",
    "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome",
    "https_www_youtoosound_com_sound_for_youtoosound": "https://www.youtoosound.com/sound",
    "search_suggest_for_kwai": "Search Suggest API",
    "list_comments_for_kwai": "List Comments API",
    "user_followers_for_kwai": "User Followers API",
    "telegram_channel_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Channel\n\n- Title\n- Photo\n- Description\n- Members",
    "messages_from_telegram_channel_for_telegram_v2": "The endpoint returns last 10 messages  or specific id message from Telegram Channel. \nThe channel must be public.\n\n- Author\n- Photo\n- Message\n- Views \n- DateTime\n- ID",
    "telegram_group_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Group\n\n- Title\n- Photo\n- Description\n- Members\n- On line Memebers",
    "get_sign_prediction_for_today_by_name_for_zodiacapi": "Get sign prediction for today  by name",
    "get_signs_list_for_zodiacapi": "Get signs list",
    "categories_for_hashtag": "Get a list of categories.",
    "top_hashtags_for_hashtag": "Gets a list of all the top hashtags",
    "generate_flirty_line_for_flirty_words": "Generates a random flirty line",
    "auto_complete_for_twitter_v2_v2": "Auto Complete",
    "users_by_rest_ids_for_twitter_v2_v2": "Users By Rest IDs",
    "post_with_cursor_for_instagram_bulk_profile_scrapper": "This API return time will be faster, As this fetch  profile data directly from userid (pk)\n\nScrap instagram profile by pk or username",
    "followings_by_username_for_instagram_bulk_profile_scrapper": "Fetch following list\n\nCarry forward nextMaxId to retrieve next batch",
    "get_product_reviews_for_yotpo": "get all reviews for a specific product that belongs to a specific app_key",
    "v1_1_translate_tweet_for_twitter_v4": "v1.1 / Translate Tweet",
    "tweet_retweeters_for_twitter_v4": "Tweet Retweeters",
    "v2_user_affiliates_for_twitter_v4": "v2 / User Affiliates",
    "getuserstory_for_snapchat": "getUserStory",
    "gettrendinglenses_for_snapchat": "getTrendingLenses",
    "getlensitem_for_snapchat": "getLensItem",
    "fetch_profile_picture_for_whatsapp_scraper": "Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.",
    "fetch_profile_picture_get_free_token_for_whatsapp_scraper": "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.\nLearn how to use this endpoint on this [video](https://youtu.be/65eJN7S8sBw).",
    "is_registered_on_whatsapp_get_free_token_for_whatsapp_scraper": "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. This endpoint returns `true` if the phone is registered on whatsapp.\nLearn how to use this endpoint on this [video](https://youtu.be/txPQ4ROpfuc).",
    "get_authenticated_users_micros_for_geeklist": "",
    "get_specified_users_links_for_geeklist": "",
    "get_specified_users_micros_for_geeklist": "",
    "media_by_code_for_instagram_api": "Get a media by code",
    "com_for_check_username": "Check a .com domain",
    "wikipedia_for_check_username": "Check username on Wikipedia",
    "snapchat_for_check_username": "Check username on Snapchat",
    "video_post_comments_for_tiktok_data": "Get video post comments.",
    "music_metadata_for_tiktok_data": "Get music metadata\n\nBasic metadata: number of posts,  direct url to the song(MP3) and etc",
    "user_metadata_information_for_tiktok_data": "Get user metadata. Number of followers, followings , avatar url, description and more",
    "list_comments_replies_for_scraptik": "Get replies of a comment.",
    "start_a_live_stream_for_scraptik": "Start a live stream.",
    "tiktok_url_shortener_for_scraptik": "TikTok URL Shortener.",
    "venue_search_for_wiman_the_social_wi_fi_network": "",
    "v1_post_user_user_id_liked_posts_for_tokapi_mobile_version": "User liked video feed",
    "v1_search_user_for_tokapi_mobile_version": "Search users by text query",
    "get_username_by_user_id_for_instagram_looter": "Get **Instagram** username by **user_id**",
    "get_user_related_profiles_by_user_id_for_instagram_looter": "Get **Instagram** user related profiles by **user_id**",
    "get_media_download_link_for_instagram_looter": "Get **Instagram** media download link by **/p/** - **/tv/** - **/reel/**",
    "get_profile_data_for_instagram_fast": "Get account data by username",
    "get_user_following_for_instagram_fast": "Get user following list",
    "get_feed_data_for_instagram_fast": "Get instagram feed, last 12 posts from username",
    "following_for_instagram_v6": "get someone's following",
    "medialikers_for_instagram_v6": "Get one media's likers, batch_size range from 1 to 50.",
    "getsuggesteduser_for_instagram_v6": "get suggested user by user id",
    "get_list_for_jobs_from_remoteok": "Will show you all job posts. Also you can filter it by adding in the end of endpoint ?tags=digital+nomad",
    "no_cors_images_from_media_id_for_instagram_api_2023": "Fetch no CORS image urls of posts, stories & reels. Please note currently we only support images. No CORS image urls will expire after 30 days from date of creation.\n**Note: For carousel media having more than 5 images, this endpoint will take some time to generate no CORS image urls for all carousel media of posts.**",
    "search_giphy_gif_for_instagram_api_2023": "Search gif using string. You can use any language as string. ex. \u092c\u093f\u0932\u094d\u0932\u0940  (in English: cat)",
    "get_all_stories_by_user_id_for_instagram_api_2023": "Get all active stories of an Instagram user using user_id.",
    "user_media_for_twitter_v2_v2": "User Media",
    "user_by_screen_name_for_twitter_v2_v2": "User By Screen Name",
    "generate_rss_feed_for_twitter_rss": "Generate RSS for given Twitter ID. (*NOTE: PubDates will be calculated approximately)",
    "get_misinformation_score_account_twitter_account_get_for_mescalc": "Retrieve account misinformation score by Twitter ID",
    "user_medias_for_instagram_cheapest": "get user_medias by user_id",
    "userinfo_for_instagram_cheapest": "get userinfo by username",
    "user_following_for_twitter_v2_v2": "User Following",
    "feed_by_username_for_instagram_1": "Collect the current feed from the username",
    "hashtag_for_instagram_1": "Posts by hashtag",
    "rising_popular_posts_for_reddit": "Rising Popular Posts",
    "top_comments_by_username_for_reddit": "Top Comments By Username",
    "hashtag_info_for_tiktok_scraper_v2": "Get hashtag (challenge) info.",
    "user_info_for_tiktok_scraper_v2": "Get basic user information.",
    "user_follower_for_tiktok_scraper_v2": "Get user followers.",
    "list_of_memes_for_memes": "Get List of Memes from genre\n\n**Default Type:**  top\n**Available Type**\n- Top\n- Hot\n- New\n\n**Default Genre: ** memes\n**Available Genres**\n- \"anime\"\n- \"dnd\"\n- \"history\"\n- \"historyani\"\n- \"memes\"\n- \"politics\"\n- \"science\"\n- \"lotr\"\n- \"ww2\"",
    "random_meme_for_memes": "Get Random Meme from genre\n\n**Default Type:**  top\n**Available Type**\n- Top\n- Hot\n- New\n\n**Default Genre: ** memes\n**Available Genres**\n- \"anime\"\n- \"dnd\"\n- \"history\"\n- \"historyani\"\n- \"memes\"\n- \"politics\"\n- \"science\"\n- \"lotr\"\n- \"ww2\"",
    "get_api_key_for_gigopost": "This will simply send you email with instruction. Complete signup process and then access url https://gigopost.com/dev_api to get the api key.",
    "get_session_info_for_gigopost": "Returns session information 1685369452715x643061726475037300",
    "music_info_for_tiktok_v3": "get music information by music_id",
    "challenge_for_tiktok_v3": "get challenge by hashtag",
    "media_info_for_tiktok_downloader_download_videos_without_watermark": "pass",
    "login_for_mocktwitter": "login to the user profile",
    "login_copy_for_mocktwitter": "login to the user profile",
    "get_user_favorite_list_for_tiktok_video_no_watermark_v2": "get user favorite list id",
    "search_users_for_tiktok_video_no_watermark_v2": "**Search users by keyword**",
    "get_user_follow_list_for_tiktok_video_no_watermark_v2": "Get user follower or following",
    "get_media_for_instagram_downloader_v2": "Post, Photo, Video, Igtv, Reel, Profile Picture",
    "getting_full_details_by_url_for_tiktok_full_video_info": "Url must be encoded",
    "get_reply_comment_by_id_for_tiktok_video_no_watermark_v2": "Get reply comment by id",
    "challenge_posts_for_scraptik": "Hashtag/Challenge Posts.",
    "end_a_live_stream_for_scraptik": "End a live stream.",
    "send_sms_for_scraptik": "Send SMS code to you mobile.",
    "activity_for_instagram_statistics_api": "Returns data for plotting the activity time graph of account users. Helps to understand when it is better to publish content and make integrations with influencers\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_df890402-1ba3-4da4-855b-84c4f5e43df6_f.png?time=1666777428)",
    "profile_by_id_for_instagram_statistics_api": "Returns profile information from our database or searches for an account in a social network.\nReturns general account information and identifier.\n\nContains the status of data collection and the time the data was last updated.\n\nDue to direct access to the social network, it may work a little slower. It is recommended to use for the initial receipt of the identifier.\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_16b6e212-c0c3-42c6-8c3c-9dfd22ae1bf6_f.png?time=1666776494)",
    "hashtag_videos_for_tiktok_scraper_v2": "Get hashtag (challenge) videos.",
    "user_videos_for_tiktok_scraper_v2": "Get user videos.",
    "user_followings_for_tiktok_scraper_v2": "Get user followings.",
    "user_followers_list_for_social_media_data_tt": "Get user followers:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs",
    "music_feed_video_posts_for_social_media_data_tt": "Get current music feed. \n\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
    "hashtag_metadata_information_v2_for_social_media_data_tt": "Get hashtag metadata V2\n\nV2 - returns more data then older version of the endpoint",
    "site_abcr_for_abcr": "site abcr",
    "copy_of_endpoint_site_abcr_for_abcr": "site abcr",
    "profile_highlights_for_instagram_scraper_2023_v2": "Profile Highlights",
    "profile_stories_for_instagram_scraper_2023_v2": "Profile Stories",
    "profile_igtv_for_instagram_scraper_2023_v2": "Profile IGTV",
    "v1_hashtag_hashtag_id_for_tokapi_mobile_version": "Search videos by hashtag ID",
    "v1_user_user_id_qr_code_for_tokapi_mobile_version": "QR code by user ID",
    "search_for_twitter_scraper": "Search Twitter by keyword, hashtag or URL",
    "trending_videos_by_region_for_tiktok_solutions": "Trending videos by specific Region. \nAvailable regions:\n- RU\n- US\n- GB\n- DE\n- FR\n- ES",
    "followers_of_account_by_id_for_tiktok_solutions": "Get **Followers** of account by **ID**",
    "hashtag_data_by_id_for_tiktok_solutions": "Get Hashtag Data by using ID number",
    "get_user_id_from_username_for_instagram_v7": "Finds user id by username",
    "posts_by_subreddit_for_reddit": "Posts By Subreddit",
    "video_comments_for_tiktok_scraper_v2": "Get video comments.",
    "video_no_watermark_for_tiktok_scraper_v2": "Get video no watermark.",
    "using_emoji_name_to_get_emoji_for_funny_emojis": "using emoji_name to get emoji",
    "v2_user_tweets_for_twitter_v4": "v2 / User Tweets",
    "v1_1_search_tweets_for_twitter_v4": "v1.1 / Search Tweets",
    "v2_user_by_rest_id_for_twitter_v4": "v2 / User By Rest ID",
    "tag_tag_for_tronald_dump": "Retrieve a quotes by a given tag.",
    "jokes_random_for_chuck_norris": "Retrieve a random chuck joke in JSON format.",
    "jokes_categories_for_chuck_norris": "Retrieve a list of available joke categories.",
    "jokes_search_for_chuck_norris": "Free text search",
    "get_stream_game_name_for_gwyo_twitch": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )",
    "get_stream_number_of_viewers_for_gwyo_twitch": "Get Stream Number of Viewers (using username or id)\n( return an empty JSON object if not currently LIVE )",
    "get_stream_language_for_gwyo_twitch": "Get Stream Language (using username or id)\n( return an empty JSON object if not currently LIVE )",
    "v1_hashtag_posts_hashtag_id_for_tokapi_mobile_version": "Search videos by hashtag ID",
    "v1_music_posts_music_id_for_tokapi_mobile_version": "Search videos by music ID",
    "v1_sticker_posts_sticker_id_for_tokapi_mobile_version": "Video by effect ID (look at stickers field in video response)",
    "from_tiktok_notifications_for_scraptik": "Show \"From TikTok\" account notifications.",
    "trending_creators_for_scraptik": "Get trending creators.",
    "music_posts_for_scraptik": "Get posts by music_id",
    "video_info_for_tiktok_v3": "get video information by video_id",
    "video_id_by_url_for_tiktok_v3": "get video Id by  url",
    "profile_for_twitter": "this returns user info by username.",
    "profile_by_user_id_for_twitter": "Profile by user id",
    "emoji_for_emoji": "This endpoint takes a 'GET' request with name / string as a parameter and returns emoji associated with the name.",
    "youtube_search_for_youtube_v2": "This endpoint will a specific number of videos for a specific keyword, note that the maximum is 40 videos per request",
    "category_tags_for_hashtag": "Get a list of all the tags from a category",
    "search_user_for_pinterest_apis": "Search user by keyword",
    "get_user_pins_for_pinterest_apis": "Get User Pins by user name",
    "get_user_profile_for_pinterest_apis": "Get User Profile by username",
    "user_by_id_for_instagram_api": "Get user by Id",
    "get_username_for_instagram_profile": "Basic profile information from id",
    "get_searchuser_for_instagram_profile": "Return search by username input",
    "get_following_by_username_for_instagram_profile": "Get 12 following user information per request",
    "channel_shorts_for_youtube_v2": "Get the latest shorts published by a Youtube channel",
    "following_timeline_for_twttrapi": "Get the \"Following\" timeline",
    "user_followers_for_twttrapi": "Get user followers",
    "sign_info_for_onlyfans": "Get required up to date sign info",
    "linkedin_contacts_for_linkedin_outreach": "This API fetches the Linkedin URL and Name of the search you have made.",
    "linkedin_connections_for_linkedin_outreach": "This API does the sending connections job easy for you , just feed the URLs of the people you want to connect with and leave the job to us.",
    "profile_for_instagram_v2": "Instagram Profile",
    "search_hashtags_for_instagram_v2": "Search tags name by keyword",
    "validate_username_for_instagram_v2": "Instagram Username validation",
    "get_media_data_for_instagram_fast": "Get media data by post short code or url",
    "get_user_id_for_instagram_fast": "Get instagram id by username",
    "view_profile_picture_for_instagram_profile_picture_viewer": "View full HD Profile Picture of anyone on Instagram just using username.",
    "v1_user_user_id_playlist_playlist_id_videos_for_tokapi_mobile_version": "Videos by playlist ID",
    "is_registered_on_whatsapp_for_whatsapp_scraper": "This endpoint returns `true` if the phone is registered on whatsapp.",
    "getusernamebyuserid_for_instagram_v6": "get username by user id",
    "hashtagmedias_for_instagram_v6": "Get hashtag medias",
    "avatar_for_initials_avatar": "Generates initials avatar",
    "auto_complete_for_twitter": "this returns  auto complete result in twitter search.",
    "user_likes_for_twitter": "User Likes",
    "get_places_for_instagram_profile": "Return places media list medias",
    "get_video_for_instagram_profile": "Get user video with username, use ?next={result.data.page_info.next} for next page",
    "get_highlight_item_for_instagram_profile": "Highlight item",
    "search_for_instagram_scraper_2023_v2": "Search",
    "profile_publications_for_instagram_scraper_2023_v2": "Profile Publications",
    "advance_profile_for_instagram_pro": "Profile data with email/phone if available",
    "followers_by_username_for_instagram_pro": "Followers list by username, Up to 1000 records",
    "tweets_by_userid_for_twitter_aio": "Receive all tweets ordered by most recent. You can use the cursor and count to navigate around.",
    "user_details_by_username_for_twitter_aio": "Receive follower counts, images and more user related data with this endpoint.",
    "user_likes_by_userid_for_twitter_aio": "Receive all likes of a user. You can use the cursor and count to navigate around.",
    "get_image_for_sendapic_api": "Retrieve the image by ID.",
    "video_data_for_youtube_v2": "Get downloadable links of the Video",
    "count_for_onlyfans": "Used to get the total expired followers\n\nMust hit the auth endpoint first!",
    "user_details_by_userid_for_twitter_aio": "This is the prefered method of getting any information. Receive follower counts, images and more user related data with this endpoint.",
    "twitter_space_by_spaceid_for_twitter_aio": "Receive all informations for a Twitter Space stream by its id.",
    "tweet_likes_for_twitter_aio": "Receive all likes for a tweet.",
    "user_followings_list_for_tiktok_data": "Get user followings:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs",
    "user_followers_list_for_tiktok_data": "Get user followers:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs",
    "real_time_hashtag_search_for_tiktok_data": "Search for hashtags by keyword",
    "tag_for_tronald_dump": "Retrieve a list of available tags",
    "get_user_media_by_user_id_for_instagram_looter": "Get **Instagram** user media by **user_id**",
    "get_user_info_by_user_id_for_instagram_looter": "Get **Instagram** user info by **user_id**",
    "get_user_feed_for_instagram_v7": "Get the feed of a user",
    "tags_for_instagram_statistics_api": "Returns all tags with which accounts are marked.\nYou can filter the desired tags and nesting.",
    "fetch_business_info_for_whatsapp_scraper": "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account.",
    "get_comments_list_by_media_id_for_instagram_api_v2": "Get comments list via media id. you can get more data using minid. The response will include this part:\n\"next_min_id\": \"{\"server_cursor\": \"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\", \"is_server_cursor_inverse\": true}\"\nand the minid will be:\n\"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\"",
    "media_id_to_shortcode_for_instagram_api_v2": "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts 2931558439012794055 to Ciu_N9Qpm5d",
    "get_likers_list_web_by_media_id_for_instagram_api_v2": "Get the list of people who has liked a post via media id and web method",
    "get_stream_preview_as_html_element_for_gwyo_twitch": "Get the Last Picture Preview as a HTML Element from a Live Stream\n( using optional width or width/height )\n( return an empty JSON object if not currently LIVE )",
    "userinfo_for_instagram_v6": "Get instagram user info by user name, response with old format. result -> user.",
    "region_list_for_tiktok_video_feature_summary": "the region list use in video search params",
    "get_user_following_list_for_tiktok_video_feature_summary": "get user following list",
    "get_music_info_for_tiktok_video_feature_summary": "get music info base on id",
    "get_favorite_video_by_id_for_tiktok_video_no_watermark_v2": "get favorite video by id\n**url doesn't seem to work please use get video details to get download link**",
    "search_challenge_for_tiktok_video_no_watermark_v2": "Search challenge by keywords",
    "get_info_challege_for_tiktok_video_no_watermark_v2": "Get info challege",
    "profile_info_for_instagram_scraper_2023_v2": "Profile Info",
    "video_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the video in original hd quality by passing pinterest video pin address",
    "image_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the image in original hd quality by passing pinterest image pin address",
    "ideapin_download_pinterest_reels_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the ideapins in original hd quality by passing pinterest ideapin address",
    "user_followings_by_userid_for_twitter_aio": "Receive all followings of a user. You can use the cursor and count to navigate around.",
    "search_for_twitter_aio": "With the search endpoint you can search all of twitter. You just need to provide a search term.",
    "v1_1_user_followers_for_twitter_v4": "v1.1 / User Followers",
    "user_by_screen_name_for_twitter_v4": "User By Screen Name",
    "v1_1_tweet_retweeters_ids_for_twitter_v4": "v1.1 / Tweet Retweeters IDs",
    "user_data_by_id_for_tiktok_solutions": "Get User Data by ID",
    "video_data_by_id_for_tiktok_solutions": "Get **Video Data** by **ID**",
    "user_feed_by_name_for_tiktok_solutions": "Get **User Feed** by **Name**",
    "v1_post_user_user_id_posts_for_tokapi_mobile_version": "User video feed",
    "v1_search_music_for_tokapi_mobile_version": "Search music by text query",
    "get_user_id_by_username_for_instagram_looter": "Get **Instagram** user_id by **username**",
    "get_user_tagged_media_by_user_id_for_instagram_looter": "Get **Instagram** user tagged media by **user_id**",
    "tweet_id_by_url_for_twitter": "Convert tweet url to id for use in \"getTweetById\" endpoint",
    "search_for_ig_private_api": "Search",
    "stories_for_ig_private_api": "Stories",
    "info_for_ig_private_api": "Info",
    "get_music_post_video_for_tiktok_video_no_watermark_v2": "Get music post video list",
    "get_info_user_for_tiktok_video_no_watermark_v2": "Get tiktok user info",
    "user_data_for_instagram_v13": "Get instagram user info by username.",
    "user_tagged_posts_for_instagram_v13": "Get instagram user tagged posts by user id.",
    "user_highlights_list_for_instagram_v13": "Get instagram user highlights list by user id.",
    "convert_username_to_userid_for_twitter_aio": "You'll need the userId to receive tweets, media and replies.",
    "user_followers_by_userid_for_twitter_aio": "Receive all followers of a user. You can use the cursor and count to navigate around.",
    "get_hashtag_media_by_query_for_instagram_looter": "Get **Instagram** hashtag media by **query**",
    "get_user_info_by_username_for_instagram_looter": "Get **Instagram** user info by **username**",
    "music_feed_by_id_for_tiktok_solutions": "Get** Music Feed **by **ID**\nYou can get ID from TikToc music url",
    "get_country_s_hashtags_for_twitter_hashtags": "Get hashtags based on country",
    "get_worldwide_hashtags_for_twitter_hashtags": "Returns a list of all recent hashtags worldwide",
    "user_guides_for_instagram_v13": "Get instagram user guides by user id.",
    "user_tv_channel_for_instagram_v13": "Get instagram user tv channel by user id.",
    "music_search_for_instagram_v2": "Search music/sound/audio names and get artists cover and sounds url",
    "user_info_by_user_id_for_instagram_v5": "Get Instagram user information by Instagram user id.",
    "music_information_for_instagram_v5": "Get Instagram music information by Instagram audio_cluster_id.",
    "post_detail_for_instagram_v5": "Get Instagram user post detail by Instagram shortcode.",
    "get_post_retweets_for_twitter_v5": "Get Post Retweets By Post ID",
    "get_user_replies_for_twitter_v5": "Get User Replies By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint",
    "get_user_followings_for_twitter_v5": "Get User Followings By ID. \n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint",
    "getfacelenses_for_snapchat": "getFaceLenses",
    "getlensesbyhashtag_for_snapchat": "getLensesByHashtag",
    "mediacomments_for_instagram_v6": "Get one media's comments, batch_size range from 1 to 50.",
    "media_by_userid_for_twitter_aio": "Receive all media items ordered by most recent. You can use the cursor and count to navigate around.",
    "tweet_retweeters_for_twitter_v2_v2": "Tweet Retweeters",
    "user_followers_for_twitter_v2_v2": "User Followers",
    "get_user_favorite_videos_for_tiktok_video_feature_summary": "get user favorite videos list",
    "get_users_detail_info_for_tiktok_video_feature_summary": "get users detail info\nunique_id or user_id is not empty",
    "register_device_information_for_tiktok_video_feature_summary": "Random device information,\nActivated",
    "search_for_instagram_statistics_api": "Search in the database of brands and influencers by parameters:\n- Keywords in the title, description, account link\n- Filtering by categories, account types, interests and other tags\n- Demographics of subscribers (country, city, gender, age)\n- Social network\n- Number of subscribers\n- Average Engagement per post\n- Average number of post views\n- Sort by relevance, percentage of selected audience or number of selected audience",
    "hashtag_challenge_posts_for_tiktok_v4": "Get Hashtag/Challenge Posts By \"challenge_name\" or \"challenge_id\",\nand the endpoint will return 35 posts by 'cursor', with post data including the author data.",
    "post_comments_for_tiktok_v4": "Get Posts CommentBy \"challenge_name\" or \"challenge_id\",\nand the endpoint will return Posts comments by 'cursor'.",
    "user_info_not_stable_for_tiktok_v4": "Get User Information By \"unique_id\",\nand the endpoint will return user data, including => id, nickname, bio, secUid, avatar, statistics",
    "getuserstories_for_instagram_v6": "get stories by user id",
    "getusernamebyuserid_v2_for_instagram_v6": "get username by user id",
    "get_pin_data_for_pinterest_downloader_download_pinterest_image_video_and_reels": "This endpoint will return back all information about a specific pin on Pinterest.",
    "video_recommendation_for_youtube_v2": "This endpoint returns a list of recommended videos based on a given a video ID",
    "channel_details_for_youtube_v2": "This endpoint get all available details about a given channel ID",
    "list_comments_for_tiktok_private": "List Comments By Post",
    "list_replies_by_comment_for_tiktok_private": "List Replies By Comment",
    "youtube_channel_details_for_youtube_channel_details": "YouTube Channel Details",
    "get_specified_users_connections_for_geeklist": "",
    "get_authenticated_users_links_for_geeklist": "",
    "get_specified_users_cards_for_geeklist": "",
    "get_all_channel_infos_for_gwyo_twitch": "Get Channel Infos (by username or id)",
    "get_channel_username_by_id_for_gwyo_twitch": "Get Channel Username by Id",
    "get_tweet_for_twttrapi": "Get a tweet",
    "get_post_comments_for_twitter_v5": "Get Post Comments By Post ID",
    "get_user_by_username_for_twitter_v5": "Gets a user by username",
    "get_user_media_for_twitter_v5": "Get User Media By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint",
    "vimeo_for_check_username": "Check username on vimeo",
    "net_for_check_username": "Check if .net domain is registered",
    "soundcloud_for_check_username": "Check username on Soundcloud",
    "9gag_for_check_username": "Check username on 9gag",
    "check_all_domains_at_once_for_check_username": "Check all domains with one call\nfalse if registered, true if not",
    "user_followers_for_twitter_v4": "User Followers",
    "v2_tweet_retweeters_for_twitter_v4": "v2 / Tweet Retweeters",
    "v1_1_tweets_for_twitter_v4": "v1.1 / Tweets",
    "get_dm_conversations_for_twttrapi": "Get direct message conversations and messages",
    "get_tweet_conversation_for_twttrapi": "Get a tweet conversation",
    "video_subtitles_for_youtube_v2": "Get the available subtitles of a Youtube Video",
    "highlight_items_for_instagram_scraper_2023_v2": "Highlight Items",
    "music_posts_for_tiktok_private": "Get Posts By Music",
    "challenge_posts_for_tiktok_private": "Get Posts By Challenge Name",
    "get_user_for_tiktok_private": "Get User",
    "user_stories_by_pk_for_instagram_api_v2": "Get all stories via pk",
    "user_info_by_username_for_instagram_api_v2": "Get all information of an Instagram account by  username",
    "music_posts_for_tiktok_v4": "Get Music  Posts By \"music_id\",\nand the endpoint will return 25 posts by 'cursor', with post data including the author data.",
    "get_profile_info_for_pinterest_scraper": "Get Profile Info",
    "get_user_activity_pins_for_pinterest_scraper": "Get User Activity Pins",
    "get_pin_info_for_pinterest_scraper": "Get Pin Info",
    "user_data_by_secuid_for_tiktok_solutions": "Get User Data by SecUID",
    "hashtag_by_keyword_for_tiktok_solutions": "Get **Hashtag search** by** Keyword**",
    "global_search_by_query_for_instagram_looter": "Global search in **Instagram** by **query**",
    "video_post_metadata_for_social_media_data_tt": "Get single post metadata",
    "real_time_user_search_for_social_media_data_tt": "Search for influencers by the keyword. \n\n- Very useful data will be returned in the response, if user is verified or not, users country and more",
    "user_highlight_detail_for_instagram_v13": "Get instagram user highlight detail by highlight id.",
    "post_detail_data_for_instagram_v13": "Get instagram user post detail by shortcode.",
    "short_code_check_for_instagram_v13": "Instagram shortcode check endpoint",
    "direct_post_url_for_social_media_data_tt": "Get direct post url",
    "user_feed_video_posts_for_social_media_data_tt": "Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
    "hashtag_feed_video_posts_v2_for_social_media_data_tt": "Get hashtag feed V2. \n\nV2 - returns more data then older version of the endpoint, video without watermark and etc\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
    "hashtag_challenge_info_for_tiktok_v4": "Get Hashtag/Challenge Information By \"challenge_name\" or \"challenge_id\",\nand the endpoint will return Challenge Information.  //Notice: it will not return the challenge posts",
    "user_info_by_id_for_tiktok_v4": "Get User Information By \"user_id\",\nand the endpoint will return user data, including => id, nickname, bio, secUid, avatar, statistics",
    "media_by_url_for_instagram_api": "Get a media by URL",
    "igtv_for_ig_private_api": "IGTV",
    "highlight_items_for_ig_private_api": "Highlight Items",
    "highlights_for_ig_private_api": "Highlights",
    "video_info_for_tiktok_scraper_v2": "Get video info.",
    "pk_to_username_for_instagram_v2": "Find username from PK (userid)",
    "auto_complete_for_twitter_v4": "Auto Complete",
    "v1_1_user_following_ids_for_twitter_v4": "v1.1 / User Following IDs",
    "feed_hot_for_kwai": "Feed Hot API",
    "search_posts_for_kwai": "Search Posts API",
    "publications_for_ig_private_api": "Publications",
    "get_authenticated_users_following_for_geeklist": "",
    "get_specified_users_following_for_geeklist": "",
    "highfive_item_for_geeklist": "",
    "hashtag_feed_by_name_for_tiktok_solutions": "Get **Hashtag Feed **by **Name**",
    "get_users_by_ids_for_twitter_v5": "Get Users By IDs (Rest IDs)",
    "autocomplete_for_twitter_v5": "Twitter Seach Query Autocomplete",
    "user_posts_by_username_for_instagram_api_v2": "Get all posts contents including photos, videos, reels, igtvs, and etc via username",
    "get_likers_list_app_by_media_id_for_instagram_api_v2": "Get the list of people who has liked a post via media id and app method",
    "search_for_instagram_api_v2": "search any query on Instagram",
    "music_search_by_keyword_for_instagram_bulk_profile_scrapper": "**Contact me for Custom package or requirements**\n\nSearch Music by Keyword\n\nYou can pass nextMaxId to fetch more reels",
    "validate_username_for_instagram_bulk_profile_scrapper": "**Contact me for Custom package or requirements**\n\nThis API will be usefull for Instagram username validation or finding similar usernames to pick correct one.",
    "search_v2_for_twitter": "-",
    "tweets_by_hashtag_for_twitter": "this returns tweets based on twitter hashtag.\nyou can use cursor input for pagination.",
    "search_musics_for_tiktok_private": "Search Musics By Keyword",
    "search_hashtags_for_tiktok_private": "Search Hashtags",
    "get_awemes_by_challenge_id_for_tiktok_private": "Get Awemes By Challenge ID",
    "post_comments_for_instagram_v13": "Get instagram user post comments data by shortcode.",
    "user_posts_for_instagram_v13": "Get instagram user posts by user id.",
    "tweet_retweets_for_twitter_aio": "Receive all retweets for a tweet.",
    "shortcode_to_media_id_for_instagram_api_v2": "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts Ciu_N9Qpm5d to 2931558439012794055",
    "hashtag_info_for_instagram_api_v2": "Get all information about a specific hashtag on Instagram",
    "tweet_by_id_for_twitter": "access to one tweet data by its id",
    "user_media_for_twitter": "User Media",
    "twitter_space_stream_url_for_twitter_aio": "Receive m3u8 url for Twitter Space stream by mediaId.",
    "user_reels_for_instagram_v5": "Get Instagram user reels by Instagram user id.",
    "user_info_by_username_for_instagram_v5": "Get Instagram user information by Instagram username.",
    "user_posts_for_instagram_v5": "Get Instagram user posts by Instagram user id.",
    "get_place_ids_from_city_names_for_instagram_api_2023": "Get place ids from place(city) names. You can use these place ids to get posts by city names in next endpoint. \nYou can use any language as place/city name.",
    "get_media_story_post_reel_other_info_by_media_id_for_instagram_api_2023": "Get brief media (story, post, reel & other) info by media_id.\n\n`story_id` can be obtained from url ex. in instagram. com/stories/thegoodquote/3102217023052923777/  here **3102217023052923777** is story_id.",
    "get_like_details_of_any_media_by_media_id_for_instagram_api_2023": "Get all users who liked a particular post/reel/IGTV/etc using media_id.\nYou can fetch upto 9000 users(upto 5MB of response). Please make sure your systems are capable of handling too much data otherwise you can use 1000 count value.",
    "get_for_real_love_calculator": "It is use to check if this API is working. Make sure that you use POST API and not the GET API.",
    "get_user_tags_posts_by_user_id_for_instagram_api_2023": "Get user tag posts of an Instagram user using user_id.\nUser tag posts can be found at www. instagram .com/{username}/tagged/",
    "get_all_stories_by_username_for_instagram_api_2023": "Get all active stories of an Instagram user using username.\n\n***Please use` Get all stories by user_id` endpoint for fast response.***",
    "search_user_for_instagram_api_2023": "Search user using string. You can use any language as string for ex. \ubbfc\uc9c0.",
    "hashtag_metadata_information_for_tiktok_data": "Get hashtag metadata",
    "video_post_metadata_for_tiktok_data": "Get single post metadata",
    "user_feed_video_posts_for_tiktok_data": "Get user feed",
    "music_videos_for_tiktok_scraper_v2": "Get videos with specific music.",
    "search_jobs_for_job_search": "Search jobs by input value",
    "search_for_front_page_search_engine": "takes any search string in any language.",
    "all_for_emplois_opt_nc": "L'int\u00e9gralit\u00e9 des [offres d'emploi](https://office.opt.nc/fr/emploi-et-carriere/postuler-lopt-nc/offres-emploi), sans pagination.",
    "supported_languages_for_bing_web_search": "These languages are supported for to search.",
    "supported_countries_for_bing_web_search": "You can search against these countries.",
    "search_for_webit_image_search": "Webit Image Search API provides you a powerful endpoint to search billions of images from the world wide web featuring rating, reverse search by image and multi-lingual capabilities.",
    "similar_for_webit_image_search": "Search for Visually Similar images to an image from a previous Search result.",
    "reverse_search_by_image_for_webit_image_search": "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint.",
    "get_d_tails_image_for_opt_nc_public_docker_images": "R\u00e9cup\u00e9rer tous les d\u00e9tails d'une image sp\u00e9cifique.",
    "get_all_images_for_opt_nc_public_docker_images": "R\u00e9cup\u00e8re la liste de toutes les images Docker publiques",
    "codes_for_postali": "Search by code ej. 66446",
    "get_answer_to_question_for_question_answered": "This endpoint fetches the answer to a single question.",
    "search_for_google_search_api": "Get search results for Google search keyword query. Customize your results using various parameters",
    "keywordsearch_for_google_keyword_scraper": "you can get all popular keywords  in any country and with any language",
    "hotelsearch_for_hotelapi": "Search Hotel List",
    "code_for_barcode_monster": "Returns code information",
    "search_for_serp_api": "Perform Google search and get results",
    "getcountrycode_for_asktheworld": "Gets all Country Codes which you can use to search for a specific country.",
    "getmultiplequestions_for_asktheworld": "Gets casual questions asked on Search Engine with your keyword.",
    "getquestions_for_asktheworld": "Gets Questions Asked by Keyword from Search Engines",
    "search_for_google_web_search": "Search",
    "search_wikihow_for_wiki_briefs": "Search any 'how-to' question on WikiHow and returns summarized methods and steps.",
    "search_wikipedia_for_wiki_briefs": "Search anything on Wikipedia and returns top K summarized information and similar items. Images and coordinates with map link are provided when available.",
    "query_for_postleitzahl_zu_adresse": "Suchanfrage. Zum Beispiel Anschrift, oder Ort oder POI.",
    "search_for_duckduckgo": "DuckDuckGo Search",
    "youtube_keyword_search_for_youtube_keyword_search": "YouTube Keyword Search",
    "web_search_for_neo_google_search": "This endpoint is used for web searches",
    "image_search_for_neo_google_search": "This endpoint is used for image searches",
    "get_trend_keyword_for_trends_keywords_in_different_regions": "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications.",
    "get_geo_map_for_regions_for_trends_keywords_in_different_regions": "The \"Trending Keywords by Geo Regions\" API allows developers to access a list of 50 geographic regions and their corresponding trending keywords. With this API, developers can retrieve valuable insights into the most popular and trending search terms for specific locations.",
    "searchbusiness_for_google_reviews_scraper": "with this endpoint you can search the business you want to get their reviews and ratings",
    "getreviews_for_google_reviews_scraper": "with this endpoint you can all reviews for any business searched  with pagination",
    "getfullreviews_for_google_reviews_scraper": "this endpoint get all the reviews in one request",
    "v2_image_search_for_image_search": "v2 / Image Search",
    "v1_image_search_for_image_search": "v1 / Image Search",
    "search_for_torrenthunt": "Search queries on different torrent sources",
    "config_for_torrenthunt": "Get config and available sites",
    "categories_for_fiverr_pro_services": "List of category names you can search for",
    "services_for_fiverr_pro_services": "List of pro sellers for a service category",
    "offerinfo_for_google_jobs": "get offer data",
    "searchoffers_for_google_jobs": "get all offers url",
    "autocomplete_for_place_autocomplete": "Auto-complete input text, returning matched places",
    "search_web_for_google_search_json": "This endpoint is used to perform text search on the web using the Google Search JSON API. You can send a request with various parameters such as **q** (search query), **num** (desired number of results), **start** (starting index of results),  and more. The request will return search results in JSON format containing information such as titles, URLs, and descriptions of the search results.",
    "search_image_for_google_search_json": "This endpoint is used to perform image search using the Google Search JSON API. You can send a request with parameters like **q** (search query), **num** (desired number of images), **start** (starting index of results), and others. The request will generate a JSON response containing information about images that match the search query",
    "vehicle_market_value_by_license_plate_for_vehicle_market_value": "Vehicle Market Value by License Plate",
    "vehicle_market_value_by_vin_for_vehicle_market_value": "Vehicle Market Value by VIN",
    "image_search_for_image_search_api": "Returns the list of images and related searches based on the **q** keyword.\nIf you want to make your search more specific based on a color use the **imgc** param, otherwise don't add it or leave it blank.",
    "suggestions_for_bing_autosuggest": "This operation provides suggestions for a given query or partial query.",
    "web_search_for_google_search_v3": "This endpoint is used for web searches",
    "image_search_for_google_search_v3": "This endpoint is used for image searches",
    "search_for_searchhook": "Search endpoint - Parameters compatible to SEARXNG  (see linked external documentation). \nIn addition, a parameter `url` might be given to specify a webhook URL (POST request will be sent).",
    "extend_for_searchhook": "Extend expiry of query identified with parameter `queryId` .",
    "webhooks_for_searchhook": "Returns list of saved queries with associated  webhooks.",
    "search_for_google_search_v2": "search",
    "youtubesearchresults_for_youtube_search_results": "Get all the YouTube Search Results Items and their Information! No limits and no Google API Key needed!",
    "entities_search_for_bing_entity_search": "Get entities and places results for a given query.",
    "license_plate_to_vin_for_license_plate_to_vin": "License Plate to VIN",
    "web_search_for_bing_web_search_v2": "The Bing Web Search API enables you to integrate Bing's search capabilities in your applications. By sending search queries with the API, you can get relevant webpages, images, videos, news and more.",
    "vin_decoder_basic_for_vin_decoder": "Get 22 items",
    "us_license_plate_to_vin_for_vin_decoder": "Get the vin by license plate number.",
    "vin_decoder_standard_for_vin_decoder": "Get 123 items",
    "host_read_for_netlas_all_in_one_host": "Both ip address and domain might be used as a search query.",
    "ufu_for_ufu": "Website rest API endpoint",
    "getvideodetails_for_youtube_search_v3": "Retrieve comprehensive video details to enhance your application's functionality and provide users with valuable insights about the videos they are interacting with.",
    "searchcontent_for_youtube_search_v3": "The search endpoint allows you to search for videos, playlists, and channels on YouTube.",
    "getplaylist_for_youtube_search_v3": "The \"getPlaylistDetails\" endpoint provides detailed information and metadata about a specific playlist on YouTube.",
    "animerandom_for_dbu_api": "\u041f\u043e\u0438\u0441\u043a \u0420\u0430\u043d\u0434\u043e\u043c\u043d\u043e\u0433\u043e \u0410\u043d\u0438\u043c\u0435",
    "getchannelplaylists_for_youtube_search_v3": "Retrieve a comprehensive list of playlists associated with a specific channel",
    "listallsuggestions_for_youtube_search_v3": "This endpoint allows you to access a wide range of recommendations, suggestions, or related items based on contextual information.",
    "getchannelvideos_for_youtube_search_v3": "Retrieve a comprehensive list of videos associated with a specific channel",
    "subdomains_lookup_for_subdomains_lookup": "Query API with root domain to retrieve all known subdomains",
    "autosuggest_for_keyword_autosuggest": "autosuggest and find related keywords for a given keyword. SEO-friendly",
    "suggestqueries_for_auto_suggest_queries": "Use this endpoint to fetch Suggestions",
    "search_for_google_search_results": "Enter data to search. GET-request.",
    "regions_for_google_trends": "The endpoint to retrieve a list of supported regions",
    "trendings_for_google_trends": "The endpoint used to display some of the trending search keywords on Google in a specific region and on a specific date.",
    "web_search_for_web_search_v2": "Get Web Search Results",
    "maclookup_for_mac_address_to_manufacturer": "Enter MAC Address (string) to find the manufacturer. MAC Formats Allowed: ('xx-xx-xx-xx-xx-xx', 'xx:xx:xx:xx:xx:xx', 'xxxx.xxxx.xxxx', 'xxxxxxxxxxxx')",
    "get_phone_image_ids_by_custom_id_for_mobile_phone_specs_database": "Get up to 10 phone images (IDs). \nUse these IDs in the Endpoint:  Get {Image} by {Phone Image id}\nThe image IDs expire after 30 minutes.",
    "list_all_phone_brands_for_mobile_phone_specs_database": "1. List all Phone Brands",
    "list_all_models_by_phone_brand_for_mobile_phone_specs_database": "List Models By Phone Brand name",
    "22_for_mmm": "mm",
    "get_lottery_list_by_date_for_lottery": "Get Lottery List By Date",
    "list_all_layers_for_geolocation_simulation_for_mobile_apps": "",
    "list_all_groups_for_geolocation_simulation_for_mobile_apps": "List All Groups",
    "list_applications_for_geolocation_simulation_for_mobile_apps": "List all your applications",
    "getphonedetails_for_cellphones": "Get all phone specifications & photos by phone id, get the phone id from the endpoint GetPhonesByBrandId",
    "getphonesbybrandid_for_cellphones": "Use this end point to load all phone ids for a specific brand. get the brand id from the endpoint GetBrands",
    "getbrands_for_cellphones": "Load all cell phone brands",
    "fasfas_for_asdasd": "fsafasfas",
    "test_copy_for_test": "1",
    "league_for_football": "league",
    "number_for_spam_number_checker": "Number for which you think that is a spam.",
    "get_specifications_by_custom_id_for_mobile_phone_specs_database": "Get all phone specifications by phone custom id",
    "get_specifications_by_brand_name_and_model_name_for_mobile_phone_specs_database": "Get all phone specifications by brand name and model name",
    "get_image_by_phone_image_id_for_mobile_phone_specs_database": "- Get Image by Id\n- Paste image ID from this api \"Get all phone image ids by phone custom id\" and image media content is returned\n- ex of image id : \"Z2RjOG80Smk2WVV2R0wwR1F1RjRNZG5TR1ZqUUZuU1JhU1pNT0FjNG94UT0=\"",
    "view_application_for_geolocation_simulation_for_mobile_apps": "Enter your applicationID in the route",
    "view_layer_for_geolocation_simulation_for_mobile_apps": "Enter layerID in route",
    "view_user_s_profile_for_geolocation_simulation_for_mobile_apps": "View Profile (Enter your user-id in route)",
    "list_all_simulations_of_a_group_for_geolocation_simulation_for_mobile_apps": "Enter groupID in the route",
    "get_variables_for_ubidots": "Retrieves the list of all the variables owned by a user. The header X-Auth-Token is needed to have the permissions for this endpoint.",
    "get_variables_variable_id_for_ubidots": "This resource returns a variable and its details. It shows additional fields than the ones required during the creation of the variable:  last_value: Shows the last value written to the variable.",
    "get_datasources_datasource_id_variables_for_ubidots": "This resource list the variables of a specified data source, showing all the fields of the variables.",
    "get_datasources_for_ubidots": "This resource lists all the existing data sources of a user.",
    "get_datasources_datasource_id_for_ubidots": "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity",
    "openhab_for_openhub": "smart home integration",
    "get_accounts_for_iotvas": " ",
    "get_private_keys_for_iotvas": " ",
    "get_config_issues_for_iotvas": " ",
    "list_all_simulations_for_geolocation_simulation_for_mobile_apps": "",
    "get_risk_for_iotvas": " ",
    "get_availiable_models_list_for_parking_places": "Method returns availiable models, which can be used for image processing.\nEvery model name can be passed to 'model' parameter.",
    "get_version_for_fashion": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "get_call_for_document_image_validation": "Used to fetch api result using the request id received in responses.",
    "get_person_by_id_for_auther_check": "To check if the person_id already exists in the system, just specify the path with person_id. If the person_id exists in response you will get the same person_id and information when a person was created and updated.",
    "get_list_of_algorithms_for_ocr": "Service provides alternative algorithms that may be used for OCR.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.",
    "get_version_for_ocr": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "get_response_for_fast_recaptcha_v2_solver": "Get response based on the input received from create request\nOnly numeric values are accepted.",
    "detection_objects_as_modified_image_by_image_url_for_mantis_object_detection": "Image URL and it will return a updated image of detected objects in image via bounding boxes",
    "detection_objects_as_json_by_image_url_for_mantis_object_detection": "Any valid image URL and return JSON",
    "downloadfile_for_aspose_ocr_cloud": " ",
    "hcpassthrough_for_aspose_ocr_cloud": " ",
    "getdiscusage_for_aspose_ocr_cloud": " ",
    "quality_for_everypixel_image_recognition": "This method allows you to get the quality score for your photo. This service doesn't measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
    "quality_ugc_for_everypixel_image_recognition": "The main difference between Stock photo scoring and this model is in the training dataset. User-Generated Photo Scoring is a model trained on a 347 000 of user photos from Instagram. Estimation parameters for this model were prepared by a group of 10 professional photographers. Scoring methods are based on five classes: very bad (0-20), bad (20-40), normal (40-60), good (60-80) and excellent (80-100).  This model is designed to evaluate user photos taken both by a professional camera and by a camera of a smartphone. It doesn't estimate the plot and do not measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.",
    "keywords_for_everypixel_image_recognition": "By sending an image to this method you can get a list of suggested keywords. You may specify a number of returned words or a threshold of its minimum score. Just provide num_keywords or threshold parameter to this method.",
    "view_db_for_face_recognition": "Read / view all face uids in your DB as \"faces_list\"",
    "get_version_for_wine_recognition": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "nsfw_image_classification_for_nsfw_image_classification_v2": "Use our Content Moderation API to flag possible inappropriate content in your images.",
    "get_version_for_face_detection_v3": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "get_version_for_brand_recognition": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "getimage_for_background_remover": "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits).\n",
    "getaccount_for_background_remover": "Returns a description of your user account information.\nUseful to get the remaining credits on your account\n",
    "get_version_for_general_detection": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "get_list_of_algorithms_for_general_detection": "Service provides alternative algorithms that may be used for image detection.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.",
    "get_label_detection_for_label_detection": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)",
    "ocr_for_ocr_separate_text_from_images": "This is the main endpoint for using ocr API.\n\nThe \"url\" parameter requires an image or PDF file url. The PDF file must not be long.\n\nThe \"language\" parameter requires some specific language codes:\n\n- Arabic - ara\n- Bulgarian- bul\n- ChineseSimplified- chs\n- ChineseTraditional- cht\n- Croatian- hrv\n- Czech- cze\n- Danish- dan\n- Dutch- dut\n- English- eng\n- Finnish- fin\n- French- fre\n- German- ger\n- Greek- gre\n- Hungarian- hun\n- Italian- ita\n- Japanese- jpn\n- Korean- kor\n- Polish- pol\n- Portuguese- por\n- Russian- rus\n- Slovenian- slv\n- Spanish- spa\n- Swedish- swe\n- Turkish- tur",
    "get_response_for_fast_hcaptcha_solver": "Get response using the Id received from the create Hcaptcha Request",
    "supported_languages_for_image_text_recognition": "3 letters language codes",
    "get_current_version_for_liquor_recognition": "Returns the current version of the service in format vX.Y.Z",
    "getfileslist_for_aspose_ocr_cloud": " ",
    "getfileversions_for_aspose_ocr_cloud": " ",
    "objectexists_for_aspose_ocr_cloud": " ",
    "get_version_for_masks_detection": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "get_info_from_vin_for_vin_recognition_decoder": "This endpoint returns the information of a vin such as country of origin, model, year, model, car seats, etc.",
    "get_version_for_nsfw": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "storageexists_for_aspose_ocr_cloud": " ",
    "getrecognizedocument_for_aspose_ocr_cloud": " ",
    "get_web_detection_for_web_detection": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=\u201cimage_url\u201d)",
    "get_version_for_general_classification": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "get_list_of_algorithms_for_general_classification": "Service provides alternative algorithms that may be used for image classification.\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.",
    "voltox_endpoint_ocr_for_voltox_ocr": "asdfesdxzfvas",
    "hclocal_for_aspose_ocr_cloud": " ",
    "list_models_for_microsoft_computer_vision": "This operation returns the list of domain-specific models that are supported by the Computer Vision API. Currently, the API supports following domain-specific models: celebrity recognizer, landmark recognizer.",
    "searchbyaddress_for_opennwi": "Search local walk scores and regional bike and transit data by address. NWI score range from 0-20.",
    "get_airplane_details_for_travel_hacking_tool": "This endpoint returns a list of airplanes and other means of transportation to match GDS responses.",
    "get_airline_list_for_travel_hacking_tool": "This endpoint returns a full list of airlines with their IATA code and full name.",
    "get_airplane_list_for_travel_hacking_tool": "This endpoint returns a list of all airplane types available in our database.",
    "specs_v1_tier2_for_datamo": "Pull requested vehicle data for specific field parameters. Tier 2 allows the following to be queried by:  \n1. make\n2. model\n3. engineType\n4. bodyType\n\nAt least one query parameter is required for a successful call.",
    "specs_v1_tier3_for_datamo": "Pull requested vehicle data for specific field parameters. Tier 3 access grants to filter by any of the 100+ fields in the database\n\nAt least one query parameter is required for a successful call.",
    "specs_v1_tier1_for_datamo": "Pull requested vehicle data for specific field parameters. Tier 1 allows the following to be queried by:  \n1. make\n2. model\n\nAt least one query parameter is required for a successful call.",
    "v1_helicopter_for_helicopter_by_api_ninjas": "API Ninjas Helicopter API endpoint. Returns a list of helicopter specs that match the given parameters.\n\nAt least one of the following parameters (excluding the limit parameter) must be set.",
    "get_seatrows_mrt_train_no_wagons_wagon_no_seatrows_get_for_aqls_b2c_system": " ",
    "get_seats_mrt_train_no_wagons_wagon_no_seatrows_seatrows_no_seats_get_for_aqls_b2c_system": " ",
    "get_standrows_mrt_train_no_wagons_wagon_no_standrows_get_for_aqls_b2c_system": " ",
    "v1_aircraft_for_aircraft_by_api_ninjas": "API Ninjas Aircraft API endpoint. Returns a list of aircrafts that match the given parameters. This API only supports airplanes - for helicopter specs please use our Helicopter API.\n\nAt least one of the following parameters (excluding the limit parameter) must be set.",
    "v1_airports_for_airports_by_api_ninjas": "API Ninjas Airports API endpoint. At least one of the optional parameters must be provided.",
    "specs_v1_getmakes_for_datamo": "This endpoint will return all the vehicle makes available, as an array of strings.",
    "get_timezones_for_travel_hacking_tool": "Get TimeZones in Olsen Format with UTC offset and Daylight Savings Time (DST).",
    "get_country_list_for_travel_hacking_tool": "This endpoint returns a list of country codes (ISO-3166).",
    "get_airline_details_for_travel_hacking_tool": "This endpoint returns the details for an airline based on an IATA code.",
    "exterior_colors_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i",
    "vehicle_attributes_for_car_api": "Returns all options for given attribute.",
    "years_for_car_api": "For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Scion\", \"Tesla\"]}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed search fields are: `year`, `make`, `model`, `trim`, `make_id`, and `make_model_id`.",
    "check_temporary_email_for_fachaapi": "Check if a domain is a known temporary email",
    "total_live_tracked_aircraft_for_fachaapi": "Get total live tracked aircraft",
    "live_aircraft_by_squawk_for_fachaapi": "Get live positioning for all aircraft with a specific Squawk",
    "get_airline_data_for_brazilian_airlines_real_flights_data": "In this endpoint you get all data about real flights of airline. Including detailed information like flight plan routes and remarks",
    "mileages_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"combined_mpg\", \"op\": \">=\", \"val\": 20}, {\"field\": \"combined_mpg\", \"op\": \"<=\", \"val\": 30}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, combined_mpg, epa_city_mpg, epa_highway_mpg, range_city, range_highway, make_id, make_model_id, and make_model_trim_id.",
    "trim_view_for_car_api": "Returns all data associated with the vehicle trim.",
    "v1_airlines_for_airlines_by_api_ninjas": "API Ninjas Airlines API endpoint. At least one of the optional parameters must be provided.",
    "get_priority_mrt_train_no_wagons_wagon_no_priorityrows_priorityrows_no_seats_get_for_aqls_b2c_system": " ",
    "get_wheelchairrows_mrt_train_no_wagons_wagon_no_wheelchair_get_for_aqls_b2c_system": " ",
    "get_trains_mrt_get_for_aqls_b2c_system": " ",
    "predictions_for_canadian_gas_prices": "Provides a current prediction of tomorrow's gas price provided by Dan McTeague's [gaswizard.ca](https://gaswizard.ca/gas-price-predictions/). Returns all estimated city prices and their expected day-to-day change (in cents).",
    "locations_list_for_canadian_gas_prices": "Returns full object representing collection of valid locations for this API.",
    "city_for_canadian_gas_prices": "Returns the average price of gas in a specific city in Canada. You must provide both the Province and the specific City you wish to gather the price for.\n\n**Warning you must select a City and Province supported by this API**: To view the current supported locations try out the `/locations-list` endpoint to view all valid Province/City combinations.",
    "vehicle_information_for_vehicle_rc_information_v2": "Fetch Vehicle Information using Registration Number.",
    "get_country_details_for_travel_hacking_tool": "This returns details for a country based on the country codes (ISO-3166).",
    "get_airport_list_for_travel_hacking_tool": "Returns an up to date list of all IATA Airports in our database.",
    "engines_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"horsepower_hp\", \"op\": \">=\", \"val\": 100}, {\"field\": \"horsepower_hp\", \"op\": \"<=\", \"val\": 300}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, fuel_type, engine_type, transmission, drive_type, cam_type, valve_timing, valves, horsepower_hp, size, cylinders, make_id, make_model_id, and make_model_trim_id.",
    "interior_colors_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i",
    "ymm_for_autoymm": "Year Make Model",
    "aircraft_details_by_icao_for_fachaapi": "Get Aircraft details for a specific ICAO HEX Code",
    "aircraft_database_stats_for_fachaapi": "Get the total number of known aircraft",
    "live_aircraft_by_reg_for_fachaapi": "Get live positioning for an aircraft with a specific REG",
    "get_directions_for_driving_directions": "Get driving directions from an origin to a destination.",
    "get_taxi_fares_for_taxi_fare_calculator": "Search fares by geo coordinates",
    "city_prediction_for_canadian_gas_prices": "Returns the estimated price for a given City and its expected day-to-day change (in cents). View the `/predictions-list` endpoint to view the list of valid cities.",
    "trackingpackage_for_trackingpackage": "Track UPS, USPS and FedEx packages.",
    "flights_list_most_tracked_for_flight_radar": "Return the most tracked flights around the world",
    "flights_search_for_flight_radar": "Search for specific flight",
    "flights_detail_for_flight_radar": "Get detailed information of specific flight",
    "v1_motorcycles_for_motorcycles_by_api_ninjas": "API Ninjas Motorcycles API endpoint. Returns up to 30 motorcycle results matching the input name parameters. For searches that yield > 30 results, please use the offset parameter.\n\nEither **make** or **model** parameter must be set.",
    "vin_decoder_for_car_api": "Decodes Vehicle Identification Numbers. The result will include a list of specifications in the specs property and a list of all possible trims matching the VIN in the trims property.",
    "bodies_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"doors\", \"op\": \">=\", \"val\": 4}, {\"field\": \"type\", \"op\": \"in\", \"val\": [\"SUV\",\"Van\"]}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, type, doors, make_id, make_model_id, and make_model_trim_id.",
    "get_wagon_on_train_mrt_train_no_wagons_wagon_no_get_for_aqls_b2c_system": " ",
    "read_root_get_for_aqls_b2c_system": " ",
    "state_list_for_canadian_gas_prices": "This endpoint provides a list of valid state codes that can be used with this API.",
    "province_for_canadian_gas_prices": "Returns the average price of gas in a specific province in Canada.",
    "v1_vinlookup_for_vin_lookup_by_api_ninjas": "API Ninjas VIN Lookup API endpoint. Returns key vehicle information including manufacturer, country of origin and model year for a given VIN.",
    "get_car_models_for_infocarsapi": "This endpoint will return back all the models of a respective car maker",
    "get_car_versions_for_infocarsapi": "Get the different versions of a car model",
    "get_car_data_for_infocarsapi": "You can get specifications, pictures and the average pricing of a car",
    "get_priorityrows_mrt_train_no_wagons_wagon_no_priorityrow_get_for_aqls_b2c_system": " ",
    "get_train_data_by_no_mrt_train_no_get_for_aqls_b2c_system": " ",
    "us_ks_for_us_gas_prices": "Returns current gas price data for Kansas. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_de_for_us_gas_prices": "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_for_us_gas_prices": "Returns current national average gas price data. You can query historical data starting from 2023-06-01 by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "getbyhex_for_aircraft_data_simple_collection": "get aircraft info by hex number",
    "3_months_flight_info_for_flight_information_of_hong_kong_international_airport": "Today - 90D or Today + 14D",
    "get_car_makers_for_infocarsapi": "This endpoint will return back all car makers supported.",
    "temporary_email_stats_for_fachaapi": "Get the number of temporary emails in the database and its last update",
    "airports_carriers_operating_out_of_an_airport_for_timetable_lookup_": "Return a list of carriers operating out of an airport",
    "airports_list_of_airports_for_timetable_lookup_": "Return a list of the airports worldwide",
    "codes_entertainment_codes_for_timetable_lookup_": "Return a list of entertainment codes used by the airlines",
    "predictions_list_for_canadian_gas_prices": "Returns valid cities that can be used for the `/city-prediction` endpoint.",
    "flights_get_more_info_for_flight_radar": "Get more information of specific aircraft, flight, airline, etc...",
    "flights_list_by_airline_for_flight_radar": "List flights by airline",
    "livetraffic_for_adsbx_flight_sim_traffic": "Returns all aircraft within 25nm radius of specified Lat/Lon",
    "autocomplete_for_waze": "Waze/Google autocomplete/type-ahead for places, locations and addresses.",
    "driving_directions_for_waze": "Get routes and driving directions from Waze/Google.",
    "alerts_and_jams_for_waze": "Get real-time alerts and jams from Waze in a geographic rectangular area defined by bottom-left and top-right latitude, longitude pairs.",
    "cities_for_canadian_gas_prices": "Returns the average price of gas of major cities in a specific province in Canada.",
    "provinces_for_canadian_gas_prices": "Returns the average price of gas in all Canadian provinces.",
    "us_ak_for_us_gas_prices": "Returns current gas price data for Alaska. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_hi_for_us_gas_prices": "Returns current gas price data for Hawaii. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_or_for_us_gas_prices": "Returns current gas price data for Oregon. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "airlines_nonstop_and_direct_flights_for_an_airline_for_timetable_lookup_": "Return a list of nonstop and direct flights for an airline",
    "airlines_airlines_and_the_countries_they_operate_in_for_timetable_lookup_": "Return a list of airlines and the countries they operate in",
    "airlines_countries_airline_operates_in_for_timetable_lookup_": "Return a list of the countries that an airline operates in",
    "zipcode_for_ap_sample": "Get locations by zipcode",
    "ar_by_city_state_for_ap_sample": "AR by state",
    "us_ca_for_us_gas_prices": "Returns current gas price data for California. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_ut_for_us_gas_prices": "Returns current gas price data for Utah. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_nc_for_us_gas_prices": "Returns current gas price data for North Carolina. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "airports_list_for_flight_radar": "List all airports around the world",
    "airports_nonstop_routes_for_an_airport_for_timetable_lookup_": "Returns a list of nonstop routes for an airport",
    "get_wagons_mrt_train_no_wagons_get_for_aqls_b2c_system": " ",
    "get_wagon_by_no_mrt_wagons_wagon_no_get_for_aqls_b2c_system": " ",
    "topic_for_quotes_diffusion": " ",
    "random_for_quotes_diffusion": " ",
    "author_for_quotes_diffusion": " ",
    "get_vehicle_information_for_mexican_vehicles_repuve": "Sample response:\n\n```\n{\n    \"doors\": 4,\n    \"has_stolen_report\": false,\n    \"year\": 2009,\n    \"license_plates\": \"CP50087\",\n    \"model\": \"DOBLE CABINA\",\n    \"assembly_plant_location\": \"\",\n    \"state\": \"CAMPECHE\",\n    \"classification\": \"ESTANDAR\",\n    \"type\": \"\",\n    \"make\": \"NISSAN\",\n    \"version\": \"V4\",\n    \"origin_country\": \"MEXICO\"\n}\n```",
    "getrecognizedocument_for_aspose_cells_cloud": " ",
    "storageexists_for_aspose_cells_cloud": " ",
    "getfileversions_for_aspose_cells_cloud": " ",
    "getinventory_for_platformbil": "Returns a map of status codes to quantities",
    "logoutuser_for_platformbil": "",
    "getorderbyid_for_platformbil": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getsupportedfileformats_for_groupdocs_comparison_cloud": " ",
    "storageexists_for_groupdocs_comparison_cloud": " ",
    "objectexists_for_groupdocs_comparison_cloud": " ",
    "gettest_for_testapi_v4": "get",
    "get_policy_for_mypolicyapi": "Get Policy",
    "v1_bucketlist_for_bucket_list_by_api_ninjas": "Returns a random bucket list idea.",
    "datapoint_hit_list_for_clickmeter": "A detailed hits list for the last 90 days maximum by DataPoint",
    "groups_associated_to_a_tag_for_clickmeter": "List of all the groups associated to the user and to the selected tag",
    "domain_count_for_clickmeter": "Get a count of domains available",
    "identity_for_random_username_generate": "Random Username Generate",
    "getfileslist_for_aspose_cells_cloud": " ",
    "objectexists_for_aspose_cells_cloud": " ",
    "garan_for_borsa": "GARAN",
    "getfileslist_for_groupdocs_translation_cloud": " ",
    "storageexists_for_groupdocs_translation_cloud": " ",
    "getlanguagepairs_for_groupdocs_translation_cloud": " ",
    "hello_for_calulator": "entertain",
    "downloadfile_for_groupdocs_merger_cloud": " ",
    "objectexists_for_groupdocs_merger_cloud": " ",
    "getdiscusage_for_groupdocs_merger_cloud": " ",
    "validation_for_demo": "qw",
    "api_v1_categories_for_sunnah_fasting": "Get list of categories",
    "api_v1_fastings_for_sunnah_fasting": "Get list of sunnah fasting",
    "api_v1_types_for_sunnah_fasting": "Get list of types",
    "korean_baby_girl_names_for_korean_baby_name_ranking": "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count.",
    "korean_baby_boy_names_for_korean_baby_name_ranking": "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count.",
    "exclusiveness_callerid_for_most_exclusive_api": "Check Exclusiveness. See if you are already exclusive, not yet or you get the exclusivity now.",
    "get_specific_dog_breed_for_dogbreeds": "Get all info from specific dog breed",
    "get_all_dog_breeds_for_dogbreeds": "Get all info from dog breeds",
    "items_for_toptalonlinetest": "gets an array of strings.",
    "test_for_testing": "This is my first API that i am testing",
    "faucets_for_felina_api": "Fetchs the balances of tokens in the faucet.",
    "transactions_for_felina_api": "Fetch and parsed data from Transfer events.",
    "transaction_id_for_uniswap_v2_api": "Return the info of the Transaction by the address",
    "uniswapfactory_for_uniswap_v2_api": "Return the info like pair count of Uniswap V2",
    "ethprice_for_uniswap_v2_api": "Return the current eth price in uniswap v2",
    "storageexists_for_groupdocs_merger_cloud": " ",
    "checkpassword_for_groupdocs_merger_cloud": " ",
    "getfileslist_for_groupdocs_merger_cloud": " ",
    "get_for_testapi": "simple get",
    "find_favicon_for_favicon_finder": "Find favicons for a URL",
    "get_quotes_by_specific_category_for_world_of_quotes": "This API returns the collection of quotes by category you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param.",
    "get_quote_of_the_day_for_world_of_quotes": "This API returns the handpicked quote of the day among 45,000+ quotes based on the highest ratings.\nYou may also get quote of the day of specific *author* or *category*.",
    "get_quotes_by_specific_author_for_world_of_quotes": "This API returns the collection of quotes by author you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param.",
    "get_source_for_getsource": "Get source",
    "inferno_for_inferno": "Meme API",
    "get_screenshot_version_ecoindexes_id_screenshot_get_for_ecoindex": "This returns the screenshot of the webpage analysis if it exists",
    "get_host_list_version_hosts_get_for_ecoindex": "This returns a list of hosts that ran an ecoindex analysis order by most request made",
    "get_ecoindex_analysis_task_by_id_v1_tasks_ecoindexes_id_get_for_ecoindex": "This returns an ecoindex given by its unique identifier",
    "get_markdown_for_heck_yes_markdown": "Enter a url or some HTML code to convert the page to Markdown. One parameter between \"u\" and \"html\" must be submitted with the request.",
    "get_all_users_for_node_express_api_tutorial": "This endpoint will return all users stored in the database.",
    "get_specific_user_for_node_express_api_tutorial": "This endpoint will return back the user with the specified ID.",
    "datapoint_health_status_by_id_for_clickmeter": "Retrieve some informations about the status of the destination URL associated to a datapoint. Available info depends on the account plan",
    "get_datapoint_by_id_for_clickmeter": "Datapoint details",
    "datapoints_count_for_clickmeter": "Datapoints count",
    "getdiscusage_for_groupdocs_translation_cloud": " ",
    "languages_versions_for_online_code_compiler": "Languages & Versions",
    "evaluate_expression_for_evaluate_expression": "Scans the given expression and returns the result of any calculation found, in plain text.",
    "belajarpostapi_for_trainmyapi27": "belajar post dan get",
    "synonyms_for_touchbase": "",
    "hcpassthrough_for_aspose_cells_cloud": " ",
    "get_all_artistic_directors_for_a_specific_category_for_hautecouture_api": "Renders all artistic directors in a specific category",
    "get_all_maisons_for_hautecouture_api": "Get all the maisons who possessed the haute couture label",
    "get_all_maisons_categories_for_hautecouture_api": "Renders all the maisons categories",
    "question_endpoint_for_ai_endpoint": "Ask this endpoint any question",
    "getaccountinfos_for_4bro_1337x": "GetAccountInfos",
    "getbrocoins_for_4bro_1337x": "GetBroCoins",
    "api_v1_sources_for_sunnah_fasting": "Get list of sources",
    "refugee_by_country_for_ukraine_war_data": "Ukranian refugees per country",
    "refugee_by_data_for_ukraine_war_data": "Refugee by data",
    "pair_id_for_uniswap_v2_api": "Return the info of the Par by the address",
    "swap_id_for_uniswap_v2_api": "Return the info of the Swap by the address",
    "v1_facts_for_facts_by_api_ninjas": "API Ninjas Facts API endpoint",
    "getuserbyid_for_user_demo": " ",
    "getusers_for_user_demo": " ",
    "v1_babynames_for_baby_names_by_api_ninjas": "API Ninjas Baby Names API endpoint. Returns 10 baby name results.",
    "get_posts_id_revisions_16a458a3_dbc6_4bec_aee5_93db717a117a_for_the_south_asian_express": "Get post revisions",
    "get_posts_id_revisions_revisionid_2156a9ee_f3cf_44f0_be60_37fbeb2d9b95_for_the_south_asian_express": "Get single post revisions",
    "get_comments_id_68712d36_48f7_4050_9c6a_a1e8491a8477_for_the_south_asian_express": "Get Single Comment",
    "objectexists_for_groupdocs_annotation_cloud": " ",
    "storageexists_for_groupdocs_annotation_cloud": " ",
    "getfileversions_for_groupdocs_annotation_cloud": " ",
    "get_test_api_method_for_testapi_v2": "Get Test Api Method!",
    "fal_for_hafez": "get a random a poem(Fal) and it's meaning!",
    "getsupportedfileformats_for_groupdocs_editor_cloud": " ",
    "getfileversions_for_groupdocs_editor_cloud": " ",
    "downloadfile_for_groupdocs_editor_cloud": " ",
    "account_for_myapi": "show account details",
    "getcodecontent_for_flow_study": " ",
    "codesearch_for_flow_study": "\u793a\u4f8b\u63a5\u53e3\u63cf\u8ff0",
    "getcodestructure_for_flow_study": " ",
    "getdiscusage_for_groupdocs_editor_cloud": " ",
    "get_qoutes_by_page_for_quotsy": "return quotes for the page no",
    "get_quotes_by_genre_for_quotsy": "returns first 10 list of quotes for the genre",
    "get_qoutes_by_authors_for_quotsy": "return a paginated  list of qoutes for a specific author",
    "get_quotes_by_genre_paginated_for_quotsy": "dd",
    "words2number_for_words_to_numbers": "Returns the corresponding number for your input sentence. Specify the language with the associated request parameter (currently available for italian (\"it\") and english (\"en\"))",
    "getdiscusage_for_groupdocs_conversion_cloud": " ",
    "getfileversions_for_groupdocs_conversion_cloud": " ",
    "storageexists_for_groupdocs_conversion_cloud": " ",
    "datapoints_associated_to_conversion_for_clickmeter": "List all datapoints associated to this conversion",
    "get_conversion_by_id_for_clickmeter": "Get conversion by id",
    "guest_details_for_clickmeter": "Guest list account. Access only for master key.",
    "get_for_httpbin_test": "Get request",
    "v1_prices_for_cardsearch": "Get general price information per card",
    "getdetails_for_katzion_test": "getDetails",
    "get_authors_for_world_of_quotes": "This API returns array of over 10,000 authors we have in our library.\nThis returns an array of strings.",
    "getfileslist_for_groupdocs_annotation_cloud": " ",
    "downloadfile_for_groupdocs_annotation_cloud": " ",
    "getdiscusage_for_groupdocs_annotation_cloud": " ",
    "getfileslist_for_groupdocs_comparison_cloud": " ",
    "json_rpc_boolean_format_for_test_v2": "JSON RPC response format with single field of type boolean",
    "getassessment_for_getassessments": "getAssessment",
    "getuserbyname_for_erictestpet": "",
    "getorderbyid_for_erictestpet": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions",
    "logoutuser_for_erictestpet": "",
    "getsupportedfileformats_for_groupdocs_merger_cloud": " ",
    "get_data_for_backend": "Get all Data",
    "getpetbyid_for_team_petstore": "Returns a single pet",
    "loginuser_for_team_petstore": "Logs user into the system",
    "getuserbyname_for_team_petstore": "Get user by user name",
    "petfoods_for_petfood": "petfoods",
    "syntax_status_syntax_ticket_get_for_ifc_bim_services": "Check Result of a syntax check",
    "exists_exists_ticket_get_for_ifc_bim_services": "Check if the key ticket is available or not",
    "ilod_status_ilod_ticket_get_for_ifc_bim_services": "Check Result of an ILOD check",
    "search_req_for_hanime_python_api": "Search API with Query\n\n**This request is limited, Please Refer to /search for more stuff**",
    "getvideo_for_hanime_python_api": "Get All Stream URL from Hanime Video",
    "getvideo_premium_for_hanime_python_api": "Get 1080p Stream URL with Account Session Token\n**Required : Hanime Premium Subscription**",
    "getsupportedconversiontypes_for_groupdocs_conversion_cloud": " ",
    "getbreeds_for_dog_api": "LIST ALL BREEDS",
    "getrandom_for_dog_api": "DISPLAY SINGLE RANDOM IMAGE FROM ALL DOGS COLLECTION",
    "myendpoint_for_mypersonal": "MyEndPoint",
    "get_quotes_category_for_world_of_quotes": "This API returns array of over 350 types of categories we have in our library.\nThis returns an array of strings. Real response will have more categories but in mock response we displayed a few.",
    "s_ytd_for_s_ytd": "Download vids",
    "getcoderelatedtransactioncode_for_flow_study": " ",
    "downloadfile_for_groupdocs_comparison_cloud": " ",
    "ranking_list_for_j2acoin": "Example test",
    "retrieve_random_article_for_industrypedia_random_articles": "Retrieves a random informational article from [Industrypedia](https://industrypedia.net).",
    "get_taxonomies_id_b2a5d5a0_3692_43aa_ae85_624855b4cde8_for_the_south_asian_express": "Get Single Taxonomy",
    "get_categories_id_411760b4_8ab7_4a73_a04a_6e0cb2e2c00c_for_the_south_asian_express": "Get Single Category",
    "get_tags_c0b25f9e_c759_46ae_8d6f_14e6404e49a3_for_the_south_asian_express": "List Tags",
    "getsupportedfileformats_for_groupdocs_classification_cloud": " ",
    "logoutuser_for_urltest": "Logs out current logged in user session",
    "getorderbyid_for_urltest": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getuserbyname_for_urltest": "Get user by user name",
    "get_posts_2504660f_8ad6_4815_86e0_312cc593fe26_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.",
    "get_statuses_id_1853ae07_ba42_43d0_8a00_00f562d98e48_for_the_south_asian_express": "Get Single Status",
    "hello_name_for_hello_world": "test api",
    "getdocumentrequestparameters_for_groupdocs_translation_cloud": " ",
    "downloadfile_for_groupdocs_translation_cloud": " ",
    "gettextrequestparameters_for_groupdocs_translation_cloud": " ",
    "get_a_daily_horoscope_for_horoscope_api": "Get a daily horoscope for the horoscope sign.",
    "glossary_for_horoscope_api": "This endpoint returns a JSON with information about the API. In it you can preview request and response templates, mandatory fields and much more.",
    "get_all_authors_for_quotsy": "returns all  the authors as a json array .",
    "storageexists_for_groupdocs_metadata_cloud": " ",
    "downloadfile_for_groupdocs_metadata_cloud": " ",
    "objectexists_for_groupdocs_metadata_cloud": " ",
    "asd_for_dad": "asd",
    "proxy_request_endpoint_for_cors_proxy": "returns response text of a given website using cors proxy",
    "mensajes_2_for_colegiosantaana": "Mensajes del alumno 2",
    "disciplina_2_for_colegiosantaana": "Disciplina alumno 2",
    "hijos_for_colegiosantaana": "Listar hijos",
    "fake_user_for_fake_users_v6": "This endpoint will give dummy users for your application testing.",
    "getfileversions_for_groupdocs_signature_cloud": " ",
    "getfileslist_for_groupdocs_signature_cloud": " ",
    "getsupportedfileformats_for_groupdocs_signature_cloud": " ",
    "qr_code_gen_for_qr_api": "Generates QR Code by URL",
    "storageexists_for_groupdocs_editor_cloud": " ",
    "echo_request_for_echo": "Echo HTTP Request",
    "apps_for_ignition": "Apps ",
    "getdiscusage_for_groupdocs_metadata_cloud": " ",
    "getfileversions_for_groupdocs_metadata_cloud": " ",
    "sign_for_horoscope_astrology": "Users can access the endpoint by sending a request for a specific sign, and receive a response with in-depth information about the traits, personality, and characteristics associated with that sign. This information can include compatibility with other signs, strengths and weaknesses, and general insights into the individual's nature and tendencies. The endpoint is designed to be easy to use, with a clear and concise format that makes it simple to access and understand the information.",
    "compatibility_for_horoscope_astrology": ".",
    "numerology_for_horoscope_astrology": ".",
    "getsupportedfileformats_for_groupdocs_annotation_cloud": " ",
    "getpetbyid_for_urltest": "Returns a single pet",
    "downloadfile_for_groupdocs_watermark_cloud": " ",
    "getfileslist_for_groupdocs_watermark_cloud": " ",
    "objectexists_for_groupdocs_watermark_cloud": " ",
    "convert_units_for_uniblock": "Gets the converted value (decimal units to number or number to decimal units) of a specified amount of a token.",
    "get_nft_collection_metadata_for_uniblock": "Fetches NFT collection metadata.",
    "get_token_transfers_for_user_for_uniblock": "Gets token transfer records for a specified user.",
    "smile_for_5970b9b3dcc757e61e53daec3e720974": "smile",
    "getdiscusage_for_aspose_cells_cloud": " ",
    "hclocal_for_aspose_cells_cloud": " ",
    "image_convert_for_pragmavantapi": "Convert image to different type and resize to smaller size.",
    "file_digest_for_pragmavantapi": "Get digest/checksum for a file",
    "web_pdf_for_pragmavantapi": "Get webpage snapshot as image",
    "singavaram_bhaskar_for_zomatoapi_bhaskar": "https://zomato62.p.rapidapi.com/restaurant",
    "loginuser_for_urltest": "Logs user into the system",
    "getwbsdefinition_for_aspose_tasks_cloud": " ",
    "getcalendars_for_aspose_tasks_cloud": " ",
    "getoutlinecodes_for_aspose_tasks_cloud": " ",
    "v1_airquality_for_air_quality_demo_1": "",
    "type_for_typography": " ",
    "random_for_typography": " ",
    "font_for_typography": " ",
    "sfw_for_neko_sfw": "This endpoint will provide SFW images",
    "get_quotes_for_quotsy": "return qoutes",
    "param1_for_test_v4": "Param1",
    "getinventory_for_urltest": "Returns a map of status codes to quantities",
    "getbycontextual_for_testing_demo": "sdfd",
    "get_all_facts_about_cat_for_cat_facts": "This endpoint returns all available fact about cats in our database.",
    "get_a_random_fact_about_cats_for_cat_facts": "This endpoint returns a random fact about cats",
    "downloadfile_for_aspose_cells_cloud": " ",
    "test_for_testapi_v3": "test",
    "getsupportedfileformats_for_groupdocs_metadata_cloud": " ",
    "getorderbyid_for_team_petstore": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "logoutuser_for_team_petstore": "Logs out current logged in user session",
    "getinventory_for_team_petstore": "Returns a map of status codes to quantities",
    "whois_lookup_v1_for_whois": "Whois api v1 with password authentication.",
    "term_for_term_analysis": "Given a text, this API returns lemma text",
    "info_for_odam": "Get information on the dataset\n",
    "tsv2_for_odam": "Get all values of a data subset\n",
    "tsv4_for_odam": "Get the entry list  of a merged data subsets\n",
    "prueba_for_practicauipath": "prueba",
    "get_nft_owner_for_uniblock": "Gets the owner of a specific ERC-721 NFT.",
    "get_current_nft_balance_for_user_for_uniblock": "Gets the NFT balance of a specific user.",
    "get_timestamp_of_block_number_for_uniblock": "Gets a numerical timestamp of a given block number",
    "getquotesbycategory_for_quotes_villa": "For valid response try these categories listed below:-\n- Quotes Categories are:-\n\n    age   science  success  time  travel\n\n    wisdom   alone  art  attitude  courage\n\n    culture  dreams  friendship  happiness hope\n\n    humour  imagination  inspirational   life   motivational\n\n    nature  philosophy  poetry   popular  psychology",
    "courses_for_courses": "courses",
    "get_materials_materialid_v1_for_shapeways": "",
    "get_models_modelid_files_fileversion_v1_for_shapeways": "",
    "get_orders_cart_v1_for_shapeways": "",
    "getuserbyname_for_platformbil": "",
    "loginuser_for_platformbil": "",
    "video_games_for_uros_kovcic": "video games forplaying",
    "asdfsdf_for_chevereto": "sdfsdf",
    "chevereto_for_chevereto": "chevereto",
    "health_for_ridet_nc": "Permet de v\u00e9rifier que l'application fonctionne.",
    "entreprise_par_rid_for_ridet_nc": "Affiche les informations d'une entreprise de la Nouvelle Cal\u00e9donie \u00e0 partir de son rid.",
    "etablissement_par_ridet_for_ridet_nc": "Affiche les informations d'un \u00e9tablissement d'une entreprise de la Nouvelle Cal\u00e9donie \u00e0 partir de son ridet.",
    "list_groups_for_clickmeter": "List groups",
    "get_a_full_list_of_groups_with_statistics_for_clickmeter": "Get a full list of groups with statistics",
    "getfileversions_for_groupdocs_comparison_cloud": " ",
    "get_all_tags_for_churchapp": "This will return tags ordered alphabetically",
    "search_contacts_for_churchapp": "Get a contact by name",
    "get_key_dates_by_contact_for_churchapp": "",
    "getcalendar_for_aspose_tasks_cloud": " ",
    "gettasktimephaseddata_for_aspose_tasks_cloud": " ",
    "get_a_tarot_card_for_horoscope_astrology": "This endpoint returns a randomly selected tarot card from a traditional tarot deck, along with its corresponding interpretation and meaning. The tarot card reading is generated using a randomized algorithm, offering users a unique and personalized tarot experience. The API is designed to be easy to use, allowing developers to integrate tarot card readings into their own applications and websites.",
    "tone_for_typography": " ",
    "get_qoute_for_quotsy": "get a quote by id",
    "getshapes_for_aspose_diagram_cloud": " ",
    "downloadfile_for_aspose_diagram_cloud": " ",
    "getmasters_for_aspose_diagram_cloud": " ",
    "getfileslist_for_groupdocs_metadata_cloud": " ",
    "getdiscusage_for_groupdocs_comparison_cloud": " ",
    "getfileslist_for_groupdocs_editor_cloud": " ",
    "sample_app_config_copy_for_sample_app_config_json": "test",
    "version_for_sample_app_config_json": "test",
    "shriji_for_shreehari": "Shreehari",
    "incognito_location_for_lab2": "Try to access a background location",
    "get_models_v1_for_shapeways": "",
    "get_printers_v1_for_shapeways": "",
    "get_categories_v1_for_shapeways": "",
    "versions_for_darko_androcec_example": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.",
    "getsupportedfileformats_for_groupdocs_watermark_cloud": " ",
    "getdiscusage_for_groupdocs_watermark_cloud": " ",
    "get_genres_for_quotsy": "return all the genres",
    "epname_for_pl1box1": "Get all collections",
    "logoutuser_for_pl1box1": "",
    "get_tag_for_clickmeter": "Get the specified tag.",
    "get_a_full_list_of_conversions_with_statistics_for_clickmeter": "Get a full list of conversions with statistics",
    "list_of_datapoint_health_statuses_for_clickmeter": "Retrieve the list of the links which have some status information attached.",
    "getvbaproject_for_aspose_tasks_cloud": " ",
    "getcriticalpath_for_aspose_tasks_cloud": " ",
    "get_tag_by_name_for_churchapp": "This will return data for a specific tag",
    "get_tags_by_contact_for_churchapp": "",
    "indisciplina_1_for_csa_v2": "Indisciplina alumno 1",
    "evaluaciones_1_for_colegiosantaana": "Evaluaciones alumno 1",
    "disciplina_1_for_colegiosantaana": "Disciplina alumno 1",
    "comunicado_2_for_colegiosantaana": "Comunicados del alumno 2",
    "ainameexpand_for_aspose_email_cloud": " ",
    "calendarget_for_aspose_email_cloud": " ",
    "clientmessagefetch_for_aspose_email_cloud": " ",
    "search_for_rakutensupportdefaultteam": "Search Items",
    "mensajes_for_colegiosantaana": "Lista de mensajes",
    "get_tags_id_b45ea222_6d54_4156_b9e6_5630c4edffe7_for_the_south_asian_express": "Get Single Tag",
    "get_posts_id_9d548709_72a0_48c0_a0fa_57c41026a2ef_for_the_south_asian_express": "Get Single Post",
    "getdiscusage_for_groupdocs_signature_cloud": " ",
    "objectexists_for_groupdocs_signature_cloud": " ",
    "downloadfile_for_groupdocs_signature_cloud": " ",
    "getrelevantcode_for_flow_study": " ",
    "mughal_empire_for_jak_api": "Get the JSON formated file containing details about The Mughal Empire!!",
    "jak_for_jak_api": "Get the JSON formated file containing details about JAK!!",
    "miraculous_for_jak_api": "Get the JSON formated file containing details about Miraculous!!",
    "get_tag_for_churchapp": "This will return data for a specific tag with the defined ID",
    "get_contacts_by_tag_for_churchapp": "This will return data for all contacts with the tag",
    "getsupportedbarcodes_for_groupdocs_signature_cloud": " ",
    "get_token_price_history_between_blocks_for_uniblock": "Gets the price chart of a token between two blocks in USD",
    "get_event_logs_within_block_range_for_uniblock": "Gets the event logs in a block range, filtered by topics.",
    "get_block_number_from_timestamp_for_uniblock": "Gets the block number closest to the given timestamp.",
    "get_api_v1_for_shapeways": "",
    "get_models_modelid_info_v1_for_shapeways": "",
    "getcomment_for_hanime_python_api": "Get Hanime Video Info",
    "getfileversions_for_groupdocs_watermark_cloud": " ",
    "etablissements_d_une_entreprise_for_ridet_nc": "Affiche les \u00e9tablissement d'une entreprise en Nouvelle Cal\u00e9donie.",
    "getpetbyid_for_erictestpet": "Returns a single pet",
    "getinventory_for_erictestpet": "Returns a map of status codes to quantities",
    "search_v2_for_active": "",
    "rr_for_agc": "Test",
    "getsupportedqrcodes_for_groupdocs_signature_cloud": " ",
    "storageexists_for_groupdocs_signature_cloud": " ",
    "getcalendarexceptions_for_aspose_tasks_cloud": " ",
    "getprojectids_for_aspose_tasks_cloud": " ",
    "objectexists_for_aspose_diagram_cloud": " ",
    "getfileslist_for_aspose_diagram_cloud": " ",
    "getcode_relatedproperties_for_flow_study": " ",
    "all_survey_details_for_surveymethods": "",
    "responses_summary_for_surveymethods": "Using this API call you can retrieve information such as custom field labels & values, date on which  a response was started and when was it completed, the survey response method (email/web), the  email address of the respondent in case of an email response, IP address and the response code  for each individual response of your survey.",
    "deployment_details_for_surveymethods": "Using this API call, you can retrieve the current deployment status of a particular survey.",
    "get_ecoindex_analysis_by_id_version_ecoindexes_id_get_for_ecoindex": "This returns an ecoindex given by its unique identifier",
    "get_all_contacts_for_churchapp": "Get all contacts, listed alphabetically",
    "get_contact_for_churchapp": "Search for a contact by their unique ID",
    "dashboard_for_surveymethods": "Get the deployment and response dashboard",
    "disposableemailisdisposable_for_aspose_email_cloud": " ",
    "ainamecomplete_for_aspose_email_cloud": " ",
    "objectexists_for_groupdocs_editor_cloud": " ",
    "objectexists_for_groupdocs_translation_cloud": " ",
    "genshin_impact_for_jak_api": "Get the JSON formatted data about Genshin Impact",
    "ben_10_for_jak_api": "Get the JSON formatted data about Ben 10!!",
    "gettaskdocumentwithformat_for_aspose_tasks_cloud": " ",
    "getriskanalysisreport_for_aspose_tasks_cloud": " ",
    "getfileslist_for_groupdocs_conversion_cloud": " ",
    "getfields_for_aspose_pdf_cloud": " ",
    "getpages_for_aspose_pdf_cloud": " ",
    "getpageconverttojpeg_for_aspose_pdf_cloud": " ",
    "get_all_artistic_directors_for_hautecouture_api": "Renders all the maisons artistic directors",
    "get_a_maison_by_id_for_hautecouture_api": "Renders a maison by its id",
    "tsv5_for_odam": "Get all values of a merged data subsets\n",
    "tsv_for_odam": "Get the subset list of a dataset along with the metadata\n",
    "get_healthcheck_health_get_for_ecoindex": "Check health status of components of the API (database...)",
    "get_ecoindex_analysis_list_version_ecoindexes_get_for_ecoindex": "This returns a list of ecoindex analysis corresponding to query filters and the given version engine. The results are ordered by ascending date",
    "daily_horoscope_for_horoscope_astrology": "A daily horoscope is a personalized astrological prediction for an individual based on their birth date and zodiac sign. It provides insight and guidance on various aspects of life such as love, career, finances, and personal growth. The predictions take into account the current positions of the planets and other celestial bodies, offering a unique perspective on the individual's current astrological influences. Daily horoscopes are meant to be used as a tool for reflection and can provide helpful insights and advice for navigating life's challenges and opportunities. Whether you're looking to start your day off on the right foot or seeking guidance in a specific area of your life, a daily horoscope can be a valuable resource for gaining new insights and perspective.",
    "get_three_tarot_card_for_horoscope_astrology": "This endpoint returns a randomly selected tarot card from a traditional tarot deck, along with its corresponding interpretation and meaning. The tarot card reading is generated using a randomized algorithm, offering users a unique and personalized tarot experience. The API is designed to be easy to use, allowing developers to integrate tarot card readings into their own applications and websites.",
    "python_env_for_pragmavantapi": "Get python env",
    "echo_for_pragmavantapi": "Echo request",
    "inasistencias_1_for_colegiosantaana": "Inasistencias de alumno 1",
    "datapoints_associated_to_a_tag_for_clickmeter": "List of all the datapoints associated to the user and to the selected tag",
    "list_conversions_for_clickmeter": "List conversions",
    "conversions_count_for_clickmeter": "Conversions count",
    "gettask_for_aspose_tasks_cloud": " ",
    "getcalendarworkweeks_for_aspose_tasks_cloud": " ",
    "contests_for_demo1": "Get list of contests",
    "health_for_demo1": "Get health info",
    "tsv6_for_odam": "Get the variable list within the specified category of a merged data subsets along with the metadata\n",
    "tsv1_for_odam": "Get all attribute metadata for all subsets of a dataset\n",
    "tsv3_for_odam": "Get all values of a merged data subsets\n",
    "token_id_for_uniswap_v2_api": "Return the info of the Token by the address",
    "getinfo_for_hanime_python_api": "Get Hanime Video Info",
    "get_m1lhao_by_date_for_euro_millions": "Get a specific M1lhao drawn result by date (M1lh\u00e3o (\u2018The Million\u2019) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of \u20ac1 million on Friday evenings.)",
    "get_m1lhao_for_euro_millions": "Get last drawn result of M1lhao (M1lh\u00e3o (\u2018The Million\u2019) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of \u20ac1 million on Friday evenings.)",
    "get_the_last_result_for_euro_millions": "Get the latest draw results available",
    "getlovequotes_for_love_quotes_by_lovemelon": "Get Love Quotes",
    "fetch_latest_for_mangaverse_api": "This will get the latest of the updated manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy",
    "get_manga_for_mangaverse_api": "Get manga details \nid should be manga id",
    "fetch_manga_for_mangaverse_api": "This will get the list of manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy",
    "search_for_joke_for_jokes_": "Find joke by text",
    "get_jokes_for_jokes_": "Get the jokes",
    "send_a_word_to_check_for_shimoneta": "The API returns what the word means if the word is vulgar.",
    "v1_chucknorris_for_chuck_norris_by_api_ninjas": "API Ninjas Chuck Norris API endpoint. Returns a Chuck Norris joke.",
    "double_name_long_for_nameforge": "Create double name.\nMax query length is 200 characters.",
    "single_name_medium_for_nameforge": "Create single name.\nMax query length is 50 characters.",
    "double_name_medium_for_nameforge": "Create double name.\nMax query length is 50 characters.",
    "https_mp3downy_com_twitter_video_downloader_api_for_twitter_video_downloader_mp4": "New twitter video downloader https://mp3downy.com/twitter-video-downloader-API",
    "question_for_would_you_rather": "Get random 'Would You Rather' question",
    "search_people_q_query_for_tvmaze": "Search for people",
    "shows_id_for_tvmaze": "Get show information",
    "schedule_for_tvmaze": "Get the TV schedule",
    "facebook_video_downloader_for_facebook_video_downloader_mp4": "Facebook video downloader API @ https://mp3downy.com/facebook-video-downloader-api",
    "author_title_author_title_for_poetry_db": "All poems with a specific title by a specific author",
    "lines_line_abs_for_poetry_db": "All poems that contain a specific line",
    "title_for_poetry_db": "List of all poem titles on Poetry DB",
    "random_for_daddyjokes": "Get a random dad joke",
    "title_url_for_youtube_to_mp4": "fetches YouTube direct download link and video title",
    "allchannel_for_tvview": "Get All the Channel",
    "wrestling_news_for_wrestling_api": "This will give you the most up to date results for wrestling matches.",
    "wrestling_api_home_for_wrestling_api": "This is the welcome message.",
    "dad_jokes_search_for_dad_jokes_v2": "Search for a joke by a keyword. Keyword will be used as is in the search. E.g. if you need to search for a joke with the keyword \"dad\" in it, you will need to pass \"dad\" as the keyword. If you need to search for a joke with specific word, you will need to pass keyword with surrounding spaces or punctuation, e.g. \" dad\". Search is not case-sensitive.\n\nAPI return is limited to 3 records per one search request.",
    "dad_jokes_health_for_dad_jokes_v2": "Return the health status of the API. Returns current UTC time.",
    "dad_jokes_joke_of_the_day_for_dad_jokes_v2": "Return joke of the day. Each new UTC day API will return a new joke. During the UTC day, API returns the same joke.",
    "get_results_for_soft_cat_quiz": "This endpoint returns the result of the users who attempted the quiz",
    "get_questions_and_answers_for_soft_cat_quiz": "This endpoint returns the quiz questions and answers",
    "search_for_netflix_original_series_top_100_ranked_": "Get Request for Netflix Original Series Top 100 (ranked)",
    "by_filter_for_netflix_original_series_top_100_ranked_": "by using search filter",
    "all_tags_for_rapid_porn": "",
    "photo_for_rapid_porn": "This is where the fun starts, replace category with a value to get ;))\nIf you get 500 Internal Server Error,\nPlease cross check your category inserted from the all-tags endpoint.",
    "request_random_quote_for_random_quote_generator": "A simple get request.",
    "choice_endpoint_for_vadym_rock_paper_scissors_api": "User's selection",
    "heads_tails_for_coin_flip": "Returns an outcome. Either heads or tails",
    "broadcaster_endpoint_for_tunein": "Your title and artist information should be set to be updated by your broadcast software in correspondence with the currently playing song.",
    "memes_for_meme_generator_v2": "Generate mems by /meme",
    "get_cast_by_id_for_cinema_api": "With this endpoint, you can retrieve the full cast's list (together with their images and their role in the movie).",
    "get_movie_id_by_title_for_cinema_api": "Use this endpoint to retrieve the ID of the movies you are interested in. You can search your movie or your preferite actor.",
    "get_movie_images_by_id_for_cinema_api": "This Endpoint returns a complete list of images associated to the ID. You can obtain the ID from the Get Movie By ID endpoint.",
    "getcharacterbyid_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_": "Get sepcific character",
    "getcharacterbyname_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_": "Get specific Character by name",
    "characters_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_": "Get All 30 Characters",
    "get_movie_reviews_by_id_for_cinema_api": "This Endpoint returns a complete list of reviews associated to the ID. You can obtain the ID from the Get Movie By ID endpoint.",
    "gmc_for_gmc_radio": "Allow users to add radio stations",
    "list_genres_for_media_group": "List genres",
    "helloworld_for_mydailyinspiration": "Test the API",
    "funny_movement_for_comedy_kk_": "Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved",
    "get_question_by_id_for_ase_s_quiz_api": "Get question by id",
    "get_difficulty_by_id_for_ase_s_quiz_api": "Get difficulty by id",
    "get_random_20_questions_for_ase_s_quiz_api": "Get random 20 questions",
    "get_charater_by_id_for_throne_of_glass_api_v2": "Get Character Detail by ID",
    "get_all_characters_for_throne_of_glass_api_v2": "To  Get All Characters in Throns of Glass",
    "get_all_draws_for_euro_millions": "Get a list of all draws dates available in the API",
    "get_all_m1lhao_results_for_euro_millions": "Get the whole history of M1lhao result draws",
    "get_last_fresh_result_for_euro_millions": "Get the latest result available in real time on official results website",
    "get_all_cards_for_poker_cards_cartomancy": "All cards name, number, meaning and images",
    "get_one_card_for_poker_cards_cartomancy": "This is a random card.",
    "action_movies_for_disney_worlds": "get action movies by generating movie id",
    "animes_for_disney_worlds": "Get the best and current disney animes released today",
    "romance_for_disney_worlds": "get all full movies for romance",
    "quotes_for_words_of_wisdom_the_famous_quotes_api": "Get inspired by the words of history's greatest thinkers. Get your daily dose of motivation",
    "categories_for_words_of_wisdom_the_famous_quotes_api": "Returns a list of categories",
    "authors_for_words_of_wisdom_the_famous_quotes_api": "Returns a list of authors",
    "text_for_fancy_text": "",
    "get_zodiac_for_chinese_zodiacs_ai": "return specific zodiac fortune by sign, period and language.",
    "getformat_for_heywatch_video_encoding": "Get a specific format",
    "getaccount_for_heywatch_video_encoding": "Get account information",
    "getdownload_for_heywatch_video_encoding": "",
    "yes_or_no_for_random_yes_no": "Get some random Yes or No",
    "flame_for_flames_love_calculator": "Pass both name as path parameters.",
    "v1_memes_for_programming_memes_images": "Get Random Programming Memes",
    "get_show_episodes_for_burning_series_api": "- page url\n- stream urls\n- episode title",
    "get_show_details_for_burning_series_api": "- Title\n- Description\n- Runtime\n- Author\n- Director\n- Actors\n- Producer\n- Genres\n- Languages\n- Seasons",
    "get_all_routes_for_burning_series_api": "Get all available routes",
    "search_shows_q_query_for_tvmaze": "Search for shows",
    "get_birthday_draws_for_euro_millions": "Get all draws result occurred at a given birthday date (mm-dd) and check it out what's your lucky number and related statistics.",
    "get_all_m1lhao_draws_dates_for_euro_millions": "Get all M1lhao draws dates (M1lh\u00e3o (\u2018The Million\u2019) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of \u20ac1 million on Friday evenings.)",
    "get_joke_for_dark_humor_jokes": "Fetch a joke.",
    "pixelstix_map_meta_for_pixelstix": "A PixelStix Map is a collection of PREMIUM PixelStix that have been assigned latitude and longitude coordinates. A PREMIUM PixelStix can belong to multiple Maps and is also known as a Gallery.\n\nThis endpoint will retrieve information about your particular Map/Gallery. The name used in the endpoint is the same name that you will see in the list of galleries when using the PixelStix app.",
    "pixelstix_meta_for_pixelstix": "This endpoint will retrieve the meta information for a given PixelStix code and any Maps/Galleries it may be associated with if the PixelStix is of type 'PREMIUM'",
    "get_last_n_days_scan_counts_for_tag_for_pixelstix": "Gets the number of scans over the last N days, per day",
    "top_100_movies_list_for_imdb_top_100_movies": "The Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and IMDb ID of The Top 100 Movies of All Time.",
    "movie_data_by_id_for_imdb_top_100_movies": "This endpoint Lists a movie's data by the id.\nContains medium sized cover image, trailer, description and more.\nExample id: top17",
    "v1_hobbies_for_hobbies_by_api_ninjas": "Returns a random hobby and a Wikipedia link detailing the hobby.",
    "chart_by_id_for_imdb_charts": "Get an IMDB Chart by ID\n\nThe API endpoint expects an `id` query parameter and the JSON response format is different based on it. We currently support these chart ids:\n* `boxoffice`: Top Box Office (US)\n* `moviemeter`: Most Popular Movies\n* `top`: IMDb Top 250 Movies\n* `top-english-movies`: Top Rated English Movies\n* `tvmeter`: Most Popular TV Shows\n* `toptv`: Top Rated TV Shows\n* `top-rated-indian-movies`: Top Rated Indian Movies\n* `bottom`: Lowest Rated Movies\n* `top-action`: (Top Rated Action Movies\n* `top-adventure`: Top Rated Adventure Movies\n* `top-animation`: Top Rated Animation Movies\n* `top-biography`: Top Rated Biography Movies\n* `top-comedy`: Top Rated Comedy Movies\n* `top-crime`: Top Rated Crime Movies\n* `top-drama`: Top Rated Drama Movies\n* `top-family`: Top Rated Family Movies\n* `top-fantasy`: Top Rated Fantasy Movies\n* `top-film_noir`: Top Rated Film-Noir Movies\n* `top-history`: Top Rated History Movies\n* `top-horror`: Top Rated Horror Movies\n* `top-music`: Top Rated Music Movies\n* `top-musical`: Top Rated Musical Movies\n* `top-mystery`: Top Rated Mystery Movies\n* `top-romance`: Top Rated Romance Movies\n* `top-sci_fi`: Top Rated Sci-Fi Movies\n* `top-sport`: Top Rated Sport Movies\n* `top-thriller`: Top Rated Thriller Movies\n* `top-war`: Top Rated War Movies\n* `top-western`: Top Rated Western Movies",
    "category_for_vod_app": "Category",
    "related_for_vod_app": "Show related collection",
    "episode_for_vod_app": "Single Episode Endpoint",
    "home_for_magicmirrorapi": "Home endpoint",
    "4d_dream_dictionary_for_4d_results": "Return relevant 4D/3D lucky draw number based on keyword (english/chinese) of your dream.",
    "get_4d_company_list_for_4d_results": "Return available company code and name.\nCode can use as parameter to query the Get 4D Results method.",
    "get_draw_dates_2023_for_4d_results": "List of draw dates in 2023.",
    "search_query_for_web_novel_api": "Search the Novel Catalog for Query and returns results with Scoring etc.\n\nSearches:\n- Title\n- Author",
    "tags_for_web_novel_api": "Returns all Tags",
    "novel_novel_id_cover_for_web_novel_api": "Returns the Cover for the Requested Novel ID",
    "get_all_characters_for_game_of_thrones": "Returns all of the GOT characters",
    "get_character_by_id_for_game_of_thrones": "Returns a character by their ID",
    "get_continents_for_game_of_thrones": "Returns all GOT continents",
    "filmarks_for_testing": "get popular titles",
    "latest_10_drawings_for_lotto_america": "Get the latest, and last winning 10 Lotto America number sets.",
    "latest_drawing_for_lotto_america": "Get the latest, and last winning Lotto America winning number set.",
    "drawings_between_dates_for_lotto_america": "Get all Lotto America winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date.",
    "get_the_most_popular_authors_for_hapi_books": "Get the list of the most popular authors right now with a set of other relevant information.",
    "get_weekly_popular_books_by_genre_for_hapi_books": "Returns the most popular books from the last weeks given a genre.",
    "get_the_top_15_most_popular_books_in_a_month_of_an_year_for_hapi_books": "Provide the year and the month (between 1 and 12) and receive the 15 most popular books for that month.",
    "movies_link_and_name_for_porn_movies": "Movies Link And Name",
    "get_sentence_for_pipotronic": "Funny and ironic randomly generated textual content to incorportate into powerpoints, meetings, corporate brochures...",
    "movie_details_for_disney_worlds": "Get movie details by searching movie name",
    "get_all_categories_for_ase_s_quiz_api": "Get all categories",
    "get_all_questions_for_ase_s_quiz_api": "Get all questions without pagination",
    "get_category_by_id_for_ase_s_quiz_api": "Get category by id",
    "info_for_hearthstone": "Returns a list of current patch, classes, sets, types, factions, qualities, races and locales.",
    "cards_by_quality_for_hearthstone": "Returns all the cards of a certain quality. Example values: Legendary, Common.",
    "cards_by_race_for_hearthstone": "Returns all the cards of a certain race. Example values: Mech, Murloc.",
    "battle_for_csc_e_sim": "It will shows the battle statistic of given ID",
    "get_all_jokes_in_a_single_category_for_the_dozen_the_yo_mamsa_roast_api": "This endpoint will return all joke  in a catagory.",
    "get_a_random_categorized_and_or_filter_joke_for_the_dozen_the_yo_mamsa_roast_api": "Allows for either randomize, categorized or filtered insults to be returned with or without metadata.",
    "get_specific_insult_for_the_dozen_the_yo_mamsa_roast_api": "Allows for a specific insults to be returned with or without metadata.",
    "get_wisdom_quote_by_id_for_wisdom_quotes": "Returns a single wisdom quote by a given ID. The highest is 27753.",
    "get_wisdom_quotes_by_page_for_wisdom_quotes": "Returns an JSON object that includes:\n\n- the page number requested  (current_page), \n- the amount of all pages (max_pages),\n- the amount of the quotes (quotes_count) (15 per page),\n- the wisdom quotes array (quotes).",
    "get_a_random_wisdom_quote_for_wisdom_quotes": "Returns a JSON object which includes a random wisdom quote and its related id.",
    "get_a_joke_for_bruno_jokes": "Retrieves a joke",
    "get_draw_results_for_new_york_lottery": "Return all draw results for all games.",
    "rapid_api_of_dung_bui_end_point_for_dung_bui": "l\u01b0u webhook call",
    "api_v1_beyblades_id_for_beyblade_api": " ",
    "api_v1_beyblades_for_beyblade_api": " ",
    "get_period_for_horoscopes_ai": "Return available period for Horoscope.",
    "get_types_for_horoscopes_ai": "Return available types for the particular period.",
    "get_signs_for_horoscopes_ai": "Return 12 horoscope sign names.",
    "statistics_for_crazytimeapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect",
    "latest_outcome_for_crazytimeapi": "Get the last Outcome data and details",
    "history_for_crazytimeapi": "Get the last 10 spins Histories and details",
    "random_joke_for_joke1": "Returns a random joke",
    "get_joke_by_id_for_retrieve_info": "Search joke by id",
    "get_random_joke_for_retrieve_info": "to get random joke",
    "get_property_from_joke_for_retrieve_info": "to get property",
    "search_for_meme_generator_and_template_database": "Returns meme templates that contain a specific string. **searchString is case sensitive**",
    "fonts_for_meme_generator_and_template_database": "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins",
    "templates_for_meme_generator_and_template_database": "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**.",
    "get_all_joke_categories_for_the_dozen_the_yo_mamsa_roast_api": "Returns a list of all joke categories, whose as values can be used as a path or query parameter in other endpoints.",
    "anime_details_for_hummingbird_v2": "",
    "get_records_for_guinness_world_records_api": "Get Guinness World Records for a given term",
    "get_record_details_for_guinness_world_records_api": "Get the record details for a given href which will be returned from the \"Get Records\" request\n\n\nReturns details like who/what/where/when and an array of strings indicating the different paragraphs as displayed in guinnessworldrecords.com",
    "v1_jokes_for_jokes_by_api_ninjas": "API Ninjas Jokes API endpoint.",
    "get_all_characters_for_throne_of_glass_api_2": "Get all the characters with options to limit amount of responses and skip an amount of characters",
    "get_character_by_id_for_throne_of_glass_api_2": "Get an Individual Character",
    "user_by_email_for_cubiculus_managing_lego_set_collection": "get detail user informations, requires users's own cubiculus credential",
    "v1_celebrity_for_celebrity_by_api_ninjas": "API Ninjas Celebrity API endpoint.",
    "v1_dadjokes_for_dad_jokes_by_api_ninjas": "API Ninjas Dad Jokes API endpoint. Returns one (or more) random dad jokes.",
    "search_for_hummingbird_apiv1": "Search for an anime (supports fuzzy search)",
    "anime_for_hummingbird_apiv1": "Get information about a single anime",
    "library_for_hummingbird_apiv1": "Get a user's anime library",
    "get_ascii_by_id_for_img_to_ascii": "Load previously generated ASCII image by id",
    "dad_jokes_random_for_dad_jokes_v2": "Return random joke.",
    "get_quotes_by_anime_title_for_anime_quotes": "Get quotes by anime title",
    "get_10_random_quotes_for_anime_quotes": "Get 10 random quotes",
    "get_quotes_by_character_name_for_anime_quotes": "Get quotes by character name",
    "get_all_wisdom_topics_for_wisdom_quotes": "Returns an Array of all available wisdom topics. \nEach topic has its own quotes.",
    "get_wisdom_quotes_by_topic_for_wisdom_quotes": "Returns an array of all wisdom quotes that are related to a given topic.",
    "linecount_linecount_for_poetry_db": "All poems on Poetry DB with a specific number of lines",
    "author_author_abs_for_poetry_db": "All poems by a specific author",
    "today_for_show_air_dates": "Shows airing today",
    "next_7_days_for_show_air_dates": "Shows airing in the next 7 days",
    "next_31_days_for_show_air_dates": "Shows airing in the next 31 days",
    "global_achievement_percentages_for_app_for_steam": "Get the list of all achievements and their percentages success rate",
    "app_reviews_for_steam": "Get last n reviews of an app",
    "search_for_steam": "Search in steam shop",
    "random_for_stapi_showerthoughts": "Fetches a random shower thought out of latest 100 posted on the subReddit.",
    "top_for_stapi_showerthoughts": "this end point will fetch the top shower thought from all frames of time. \n(i.e. now, today,week,month,year,alltime)",
    "latest_for_stapi_showerthoughts": "chose a number between 1 to 500 and based on that all the latest showerthoughts on the subReddit will be fetched.\n\nif the number is not specified a total of 100 showerthougts are returned by default.",
    "get_show_facts_rotten_tomato_scores_for_new_girl": "You can find show data including season by season rotten tomato scores by hitting the home route.",
    "get_recurring_characters_for_new_girl": "This endpoint gets the recurring characters within the show.",
    "get_main_characters_for_new_girl": "This route will provide you with the show's main characters",
    "get_user_metadata_for_waifu": "Get user metadata",
    "get_user_dialog_json_for_waifu": "Get user dialog json",
    "get_users_count_for_waifu": "Get users count",
    "get_all_memes_for_programming_memes_reddit": "Gets all memes",
    "users_password_reset_for_songmeanings": "Allows for a user to reset their password. When initiated, method will send the user an email with a link to click. The link will bring the user to desktop SongMeanings where the user will complete the password reset.",
    "comments_get_for_songmeanings": "Get comments from our database for a specific song.",
    "lyrics_get_for_songmeanings": "Retrieves lyrics and lyric related data for a specific song.",
    "get_channels_for_60k_radio_stations": "Get channel list",
    "get_countries_for_60k_radio_stations": "Get country list",
    "get_genres_for_60k_radio_stations": "Get genre list",
    "upvote_riddle_for_riddlie_": "Simply calling this endpoint registers a \"like\" to better serve the riddles in the future. There is no response back other than a status message.",
    "update_level_for_riddlie_": "This endpoint enables you to update the level of the Riddle. All the riddles are set to a medium level which is enumerated as \"1\".  You can suggest the level of a riddle by simply calling this endpoint with query parameters \"0\", \"1\", or \"2\". \n\"0\" is Easy\n\"1\" is Medium \n\"2\" is Hard",
    "riddle_by_id_for_riddlie_": "Get a riddle by ID.",
    "anime_for_hummingbird_v1": "",
    "top_memes_for_reddit_meme": "Use this route to get the all top quality memes from subreddit",
    "trending_memes_for_reddit_meme": "Use this route to get the newest trending memes from subreddit",
    "apiv1_asmx_searchlyricdirect_artist_michael_20jackson_song_bad_for_chart_lyrics": "Sample API request to search Lyrics",
    "get_by_imdb_id_for_mdblist": "Returns movie or TV Show info by IMDb ID",
    "get_by_trakt_tv_id_for_mdblist": "Returns movie or TV Show info",
    "get_by_tvdb_id_for_mdblist": "Returns TV Show info",
    "fetch_chapters_for_mangaverse_api": "This will get all the chapters list from the manga \nid should be manga id",
    "get_quote_by_id_for_quotes_v2": "Get quote information by id",
    "get_random_quote_for_quotes_v2": "Get a random quote",
    "get_horoscope_multilingual_for_horoscopes_ai": "Return horoscope information by sign, period, type and languages provided.",
    "match_details_for_dota_2_steam_web": "To retrieve the specific details of a match, use this API:",
    "match_history_for_dota_2_steam_web": "will return the latest 25 public matches in JSON format. You can request it in XML format",
    "downloadencodedvideo_for_heywatch_video_encoding": "Download the encoded video file",
    "getallvideos_for_heywatch_video_encoding": "List of all videos",
    "downloadvideo_for_heywatch_video_encoding": "Download the source video",
    "club_series_for_mbar": "",
    "event_for_mbar": "Can be ordered by start time, descending; and various fields can be filtered",
    "artist_for_mbar": "",
    "main_registration_page_get_for_clientwars": " ",
    "get_joke_of_the_day_for_world_of_jokes": "Get the joke of the day from a collection of most rated and most popular jokes.",
    "get_joke_of_the_day_by_category_for_world_of_jokes": "Get the joke of the day of specific category from a collection of most rated and most popular jokes.",
    "get_jokes_for_world_of_jokes": "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria.",
    "get_anime_by_id_for_anime_jokes": "Search anime using ID",
    "get_all_jokes_for_anime_jokes": "Get all the jokes",
    "search_jokes_by_anime_name_for_anime_jokes": "Search jokes using anime name",
    "temp_endpoint_for_top_free_apps": "/",
    "matches_for_official_world_cup": "",
    "allbet_casino_singapore_for_allbet_online_casino_in_singapore": "[Allbet ](https://allbetsg.com/\n)is so much more than just an online Allbet Casino Singapore.",
    "jokes_categories_for__jokester": " ",
    "jokes_for__jokester": " ",
    "get_all_lotto_america_drawings_for_lotto_america": "Get all winning drawings from Lotto America.",
    "drawing_by_date_for_lotto_america": "Get the winning Lotto America number set from a specific drawing date.",
    "get_result_by_date_for_euro_millions": "Get the draws result for an specific date",
    "info_news_for_kast": "official api",
    "match_for_starlovematch": "Accepts a string parameter containing the first person's name and birth date, followed by up to 10 other people and their birth dates  with which to apply the astrological matching algorithms and return them in order of most to least compatible.",
    "brad_pitt_for_starlovematch": "This is a demo endpoint showing how it processes a list of Jennifer Aniston's partners.\n\nHere are the input 'birthdetails' parameters :  name=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&sort=O&NC=C&ryr=2022&details=N&coupon=12345678\n\nYou will see that it calculates Nicole Poturalski as his best overall (sort='O')  general match.\n\nIf you change the input parameters and specify sort='P' (Physical), you will see that she is also currrently (20220 his best physical (sex) match.\n\nIf you wish to see how it sorts his Intellectual matches, change this to sort='I', and you will see that Jennifer Aniston is currently her best intellectual partner.\n\nFor interest, change the ryr parameter to '2004' using the sortorder = 'L'ove setting, you'll see how Jennifer was at the top of the love list, i.e.\n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=L&NC=C&ryr=2000&details=N&coupon=12345678\n\n\nTo have a look at what his compatibility ratings were in 2015, enter the following parameters : \n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=O&NC=C&ryr=2015&details=N&coupon=12345678\n\nYou'll see Angeline Jolie is second from the bottom, with a negative overall rating.\n\nNegative ratings indicate that there are bad aspects in operation and this person should be avoided. In 2015 Brad and Angelina divorced.\n\nBut there is some good news for him and his family. If you look ahead to the year 2030 by changing the ryr parameter to 2030, you will see he has a strong love relationship with Angelina Jolie again, and Jennifer Aniston has faded away in his life.\n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=O&NC=C&ryr=2030&details=N&coupon=12345678\n\nOf course, this is looking too far ahead to be generally useful at this point in time, so it is better to use the current year for the ryr parameter.",
    "jennifer_aniston_for_starlovematch": "This is a demo endpoint showing how it processes a list of Jennifer Aniston's partners.\n\nHere are the input 'birthdetails' parameters :  name=Jennifer Aniston&dob=2/11/1969&name1=Justin Theroux&dob1=8/10/1971&name2=Gerard Butler&dob2=11/13/1969&name3=John Mayer&dob3=10/16/1977&name4=Paul Sculfor&dob4=2/1/1971&name5=David Schwimmer&dob5=11/2/1969&name6=Vince Vaughn&dob6=3/28/1970&name7=Brad Pitt&dob7=12/18/1963&name8=Paul Rudd&dob8=4/6/1969&name9=Tate Donovan&dob9=9/25/1963&name10=Daniel McDonald&dob10=7/30/1960&sort=S&NC=C&ryr=2022&details=N&coupon=12345678\n\nYou will see that it calculates Paul Rudd to be her best overall (sort='O')  general match, followed by Justin Theroux and Brad Pitt.\n\nHowever, if you change the input parameters and specify sort='P' (Physical), you will see that John Mayer is her best physical (sex) match.\n\nLikewise, if you wish to see how it calculates her Intellection matches in order, change this to sort='I', and you will see that Paul Rudd is again her best intellectual partner.",
    "memes_for_memes_brasileiros": " ",
    "get_all_characters_for_new_girl": "This will provide the show's characters with a tiny bit of data",
    "get_character_by_id_for_new_girl": "Providing the character id, you will get that specific character in the response. You can find a character id by hitting `/characters` and grabbing an id from there.",
    "defaultroot_for_meowfacts": "By passing in the appropriate options, you can recieve a specific or more than one fact.\n",
    "options_for_meowfacts": "This endpoint will list all languages available to the root endpoint.   \n",
    "healthcheck_for_meowfacts": "The health check endpoint will return a status of 200 if the api is up and ready to recieve connections. It will tell the uptime, and total requests served since last restart. It also has a field for version which corresponds to the versioned release from the github repo.  \n",
    "generate_nonsense_word_for_humor_jokes_and_memes": "Generate a nonsense word.\nSee https://humorapi.com/docs/#Generate-Nonsense-Word for more.",
    "create_joke_for_humor_jokes_and_memes": "Create a joke using a large language model.",
    "search_jokes_for_humor_jokes_and_memes": "Search for jokes.\nSee https://humorapi.com/docs/#Search-Jokes for more.",
    "app_detail_for_steam": "Get detailed info of the app",
    "health_check_endpoint_for_interesting_facts_api": "This endpoint returns successful response, if service works fine.",
    "cinemas_cinemaid_films_filmid_showtimes_for_argentina_movie_theatres": " ",
    "cinemas_for_argentina_movie_theatres": " ",
    "cinemas_id_films_for_argentina_movie_theatres": " ",
    "fetch_images_for_mangaverse_api": "This will be get the image from the chapters, the image sort base on the index\nso make sure you sort base from index if you manipulate it,\nid should be chapter id",
    "cat_facts_for_random_cat_fact": "Get some random cat fact",
    "today_s_wordle_for_wordle_today": "Get today's wordle word",
    "show_movie_for_vod_app": "Show Movie",
    "home_for_vod_app": "Home",
    "generateencodedvideothumbnailsync_for_heywatch_video_encoding": "",
    "getallencodedvideos_for_heywatch_video_encoding": "Get all encoded videos of your account",
    "search_by_title_for_mdblist": "Search for Movies or TV Shows by title, include option year or mediatype filter to narrow your results",
    "get_book_information_by_book_id_for_hapi_books": "Giving its Id, this endpoint returns a lot of information about that book, such as Name, Published Date, Authors, Synopsis, and many more.",
    "get_the_awarded_books_of_a_year_for_hapi_books": "Returns the list of the best books of a year by its winning category.\nEach returned book has its Name, Winning Category, Cover Image and more.",
    "songs_search_for_songmeanings": "",
    "artists_search_for_songmeanings": "Search the SongMeanings database for artist names and aliases.",
    "users_favorite_get_for_songmeanings": "Get a user\u2019s favorites by specified type.",
    "api_all_for_movie_showtimes": "Get all the sessions for all the available movies",
    "api_information_for_movie_showtimes": "Get the sessions for the specified movie (IMDb id)",
    "songs_for_jet_set_radio_api": "Returns a list of all Songs from JSR/JSRF",
    "graffiti_tags_for_jet_set_radio_api": "Returns a list of all Graffiti-Tags",
    "levels_for_jet_set_radio_api": "Returns a list of all Levels",
    "general_statistics_for_fantasy_5": "This endpoint pulls basic statistics of the Fantasy 5 numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.",
    "random_quickpick_for_play_for_fantasy_5": "Get a randomized Quick Pick for the Fantasy 5. This is a random set of playable Fantasy 5 numbers.",
    "get_all_fantasy_5_for_fantasy_5": "Get all winning drawings in Fantasy 5",
    "latest_10_drawings_for_cash4life": "Latest 10 Cash4Life drawings",
    "general_statistics_for_cash4life": "This endpoint pulls basic statistics of the Cash4Life numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, and cashBall) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.",
    "lastest_drawing_for_cash4life": "Get the latest, and last winning Cash4Life winning number set.",
    "wisdomoftheday_for_wisdom_api": "Daily Wisdom Quote: This API endpoint provides a wise quote that is refreshed everyday between 8-9 AM PT.",
    "all_drawings_for_cash4life": "All Cash4Life drawings",
    "drawing_by_date_for_cash4life": "Get the winning Cash4Life number set from a specific drawing date.",
    "get_user_dialog_string_for_waifu": "Get user dialog string",
    "get_all_stats_for_euro_millions": "Provide statistics about the frequency of each number in all draws in EuroMillions history in database. Here you can get the most frequent number or star in the draws.",
    "tomorrow_for_show_air_dates": "Shows airing tomorrow",
    "series_for_vod_app": "Series Endpoint, will have details about series and it's episodes",
    "latest_anime_for_anime_streaming": "Gets all new anime added in last 24 hours",
    "getpercentage_for_text_similarity_calculator": "Calculate the percentage of match between two texts.",
    "get_last_update_for_lightningroulletteapi": "A JSON response with information about a single roulette spin.",
    "history_for_lightningroulletteapi": "The Histories of last 30 spins with all the details",
    "genre_for_deezer": "A genre object",
    "editorial_for_deezer": "An editorial object",
    "playlist_for_deezer": "A playlist object",
    "v1_riddles_for_riddles_by_api_ninjas": "API Ninjas Riddles API endpoint. Returns one or more random riddles.",
    "show_all_series_for_vod_app": "Show all series",
    "title_title_for_poetry_db": "All poems on Poetry DB with a specific title",
    "author_for_poetry_db": "List of all poets on Poetry DB",
    "getallformats_for_heywatch_video_encoding": "Retrieve all the formats",
    "getvideo_for_heywatch_video_encoding": "Get Information about a specific video",
    "yurna_for_yurna": "Discord bot",
    "get_by_tmdb_id_for_mdblist": "Returns movie or TV Show info",
    "events_for_events_linz": "Retrieves events in Linz, Austria",
    "cinemas_id_showtimes_for_argentina_movie_theatres": " ",
    "generatevideothumbnailsync_for_heywatch_video_encoding": "Generate the thumbnail of the video (Sync)",
    "gethlsjob_for_heywatch_video_encoding": "Get information of the specified HLS Job",
    "audiocloud_for_audiocloud": "Sound",
    "youtube_emb_link_for_football_highlight": "Youtube Emb Link",
    "highlight_link_for_football_highlight": "Best Live Emb",
    "elhighlights_for_football_highlight": "Elhighlights",
    "get_poster_for_outking": "Get movie poster by title and release year",
    "get_cities_for_60k_radio_stations": "Get city list",
    "midknightt_for_midknightt": "Receives data",
    "get_videos_by_channel_for_follow_youtube_channel": "This endpoint will return the last 30 videos. Just specify the channel id (cid).",
    "get_extra_character_details_for_new_girl": "Get extra details about a character. (Currently being updated with more data)",
    "riddle_by_keyword_for_riddlie_": "Get one random riddle around a specific subject or keyword. For example, a riddle on a \"cat\".",
    "get_animes_for_anime_jokes": "Get all the anime from Anime Jokes",
    "get_all_difficulties_for_ase_s_quiz_api": "Get all difficulties",
    "get_random_20_questions_by_category_for_ase_s_quiz_api": "Get random 20 questions by category",
    "people_id_for_tvmaze": "Get person information",
    "webtoons_list_all_for_manga_scrapper": "Make request to fetch webtoon's series collection from a specific provider.",
    "a_chapter_by_its_slug_for_manga_scrapper": "Make request to fetch a specific chapter information for a specific webtoon from a specific provider.",
    "chapters_list_all_for_manga_scrapper": "Make request to fetch chapter collection for a specific webtoon from a specific provider.",
    "get_a_random_quote_for_anime_quotes": "Get a random quote",
    "title_title_abs_for_poetry_db": "All poems with a specific title",
    "favourites_for_hummingbird_apiv1": "Get a user's favourite anime",
    "get_match_for_the_love_calculator": "The main endpoint to get your match percentage.",
    "artist_for_deezer": "An artist object",
    "infos_for_deezer": "Get the infos about the api in the current country",
    "genres_for_web_novel_api": "Returns all Genres.",
    "novel_novel_id_for_web_novel_api": "Returns the full Details Page for the Requested Novel ID.",
    "list_titles_for_watchmode": "Get a listing of titles that match certain parameters. This powerful endpoint can allow you to find many combinations of titles. For example you could search for something as granular \"Horror Movies Streaming on Netflix in the USA\" by using the genres, types, source_ids and regions parameters.\n\nResults are paginated, and return 250 pages per query by default. Useful for mapping all Watchmode title IDs in your app, and finding in bulk what titles are available in different countries, different sources or source types.\n\nStreaming sources are limited to USA only for free plans.",
    "new_people_for_watchmode": "Get a listing of the ids of new people added to Watchmode within the date range.",
    "titles_with_changed_details_for_watchmode": "Get a listing of titles that have had a change to their basic details (overview, cast, genres, ratings, etc) within the date range.",
    "random_quickpick_for_play_for_cash4life": "Get a quickpick number for the Cash4Life drawing.",
    "novel_novel_id_chapter_chapter_id_for_web_novel_api": "Returns the Crawling Result for the selected Chapter ID.\n\nThis Endpoint is Crawling Results live so there can be Problems due to Bot Protection etc. this usually is automatically resolved, and you should not be billed in this case, so if you get an Error Return we recommend waiting some time and to retry.",
    "get_anime_detail_for_animes": "This endpoint will allow a user to get the data of a specific anime. It will take the anime's mal_id as a parameter and return the anime's data in JSON format. The data returned will include the anime's title, aired episodes, genre, and a brief synopsis.",
    "get_animes_for_animes": "This endpoint allows for the retrieval of data about anime. The query parameters include q (the search query), limit (the number of results per page), offset (the number of results to skip), ascending (sort order), order (sort order), `media_type `(anime type), studio (studio name), source (source material), status (`currently_airing `or `finished_airing`), genre, season, `year_equal `(equal to a year specified), `year_less `(less than a year specified), `year_greater `(greater than a year specified), language, and nsfw (not safe for work content).",
    "music_lovers_for_69bd0c7193msh3c4abb39db3a82fp18c336jsn8470910ae9f0": "recibe datos",
    "request_for_simsimi_conversation": "",
    "feed_for_hummingbird_apiv1": "Get the latest posts on a user's feed",
    "user_for_hummingbird_apiv1": "Get informations about a single user",
    "football_live_for_football_live_stream_api": "Live Match",
    "match_embed_link_for_football_live_stream_api": "Live Link",
    "getsinglepageinfo_for_gogoanime_data_api": "GetInfoFrom SingleAnime Pages",
    "getrecentanimes_for_gogoanime_data_api": "Get Animes From googanime Recent Page",
    "showtimes_for_argentina_movie_theatres": " ",
    "get_random_50_questions_for_ase_s_quiz_api": "Get random 50 questions",
    "pass_a_cloudflare_protected_site_for_manga_scrapper": "Make a request to fetch a website protected with Cloudflare's IUAM (I'm Under Attack Mode). This endpoint returns HTML document ready for data scraping purposes.",
    "latest_chapters_updates_for_manga_scrapper": "Make request to fetch latest chapters updates up to 7 days ago.",
    "latest_outcome_for_xxxtremelightningrouletteapi": "last spin details and Outcome Data",
    "history_for_xxxtremelightningrouletteapi": "Histories of the last 30 spins",
    "letters_for_boggle": "Solve Boggle board",
    "search_for_epic_games_store": "Find games in simple search API endpoint.",
    "get_free_games_for_epic_games_store": "List of present free games.",
    "get_news_for_epic_games_store": "Get list of all news on the platform.",
    "getpercentage_for_love_calculator": "getPercentage",
    "get_past_results_10_years_for_4d_results": "Return all company 4D Results within a specific date range.\n(Up to 10 year data and only available for MEGA PLAN subscriber)",
    "search_books_by_name_for_hapi_books": "Giving a book name (where spaces must be replaced by '+') you will receive a list of corresponding books. This list can return up to 20 books related to the input.\nEach book has information such as Name, Authors, Cover image URL, Launched Year, and many more.",
    "list_of_nominated_books_for_a_genre_in_a_year_for_hapi_books": "For a certain year and a genre, get the list of all nominated books to win an award.",
    "get_random_riddle_for_riddlie_": "This endpoint responds with a new random riddle with an answer and other details.",
    "riddle_by_difficulty_level_for_riddlie_": "Get one random riddle based on the difficulty. For example, by Easy, Medium, Hard.",
    "movies_for_simapi_movies": "",
    "single_name_long_for_nameforge": "Create single names.\nMax query length is 200 characters.",
    "single_name_short_for_nameforge": "Create single name.\nMax query length is 25 characters.",
    "pet_pet_for_memeados": "Generate My Pet Pet meme GIF",
    "google_fake_autocomplete_for_memeados": "Generate Fake google autocomplete",
    "sponge_bob_for_memeados": "Generate Sponge Bob meme",
    "artists_for_jet_set_radio_api": "Returns a list of all music Artists who contributed to JSR/JSRF",
    "locations_for_jet_set_radio_api": "Returns a list of all Locations in JSR/JSRF",
    "get_status_cat_image_for_http_status_cats": "",
    "slack_for_fortune_cookie": "This endpoint's response shape is designed to match the requirements for slack messages. You can easily use this api to have a POST or GET for this /slack endpoint to get the same functionality as the defaultRoot endpoint, but in a slack style response.  \n",
    "defaultroot_for_fortune_cookie": "default get request to the random fortune endpoint returning a standard response",
    "healthcheck_for_fortune_cookie": "The health check endpoint will return a status of 200 if the api is up and ready to recieve connections. It will tell the uptime, and total requests served since last restart. It also has a field for version which corresponds to the versioned release from the github repo.  \n",
    "webtoons_list_paginated_for_manga_scrapper": "Make request to fetch webtoon's series collection from a specific provider.",
    "check_server_status_for_waifu": "Check server status",
    "get_all_users_paged_by_hundreds_for_waifu": "Get all users paged by hundreds",
    "drakelikehate_for_memeados": "Generate Drake Likes and Hates meme",
    "get_categories_of_jokes_for_world_of_jokes": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.",
    "get_random_joke_for_world_of_jokes": "Get the random joke from a collection of most rated and most popular jokes.",
    "search_gifs_for_humor_jokes_and_memes": "Search for gifs.\nSee https://humorapi.com/docs/#Search-Gifs for more.",
    "search_memes_for_humor_jokes_and_memes": "Search for memes.\nSee https://humorapi.com/docs/#Search-Memes for more.",
    "praise_for_humor_jokes_and_memes": "Praise somebody for doing something.\nSee https://humorapi.com/docs/#Praise for more.",
    "get_horoscope_english_only_for_horoscopes_ai": "Return horoscope information by sign, period, type and languages provided.",
    "latest_10_drawings_for_fantasy_5": "Get the latest, and last winning 10 Fantasy 5 number sets.",
    "novel_novel_id_chapters_for_web_novel_api": "Returns the Available Chapter Sources for the Requested Novel ID.",
    "get_all_shows_for_burning_series_api": "Get all currently available shows",
    "downloadoptimize_for_minecraft_forge_optifine": "Redirect to download Optimize.",
    "minecraftversionlist_for_minecraft_forge_optifine": "Return Minecraft version list in JSON format.",
    "downloadminecraftjarchecksum_for_minecraft_forge_optifine": "Return a .sha1 file used to checksum for downloadMinecraftJar method.",
    "citizen_profile_for_erpk": "",
    "app_news_for_steam": "Get last n news for App",
    "trending_for_youtube_search_and_download": "Get list of trending videos",
    "channel_for_youtube_search_and_download": "Channel videos",
    "about_channel_for_youtube_search_and_download": "Return more info about channel",
    "get_questions_by_category_for_ase_s_quiz_api": "Get questions by category",
    "get_questions_by_difficulty_for_ase_s_quiz_api": "Get questions by difficulty",
    "channel_videos_for_youtube_data": "channel-videos",
    "playlist_videos_for_youtube_data": "playlist-videos",
    "video_details_for_youtube_data": "video-details",
    "getalljobs_for_heywatch_video_encoding": "",
    "search_manga_for_mangaverse_api": "Fetch manga base on the text, text will be include from title and sub title",
    "get_author_information_by_id_for_hapi_books": "Get a large variety of information of an Author such as the name, a brief biography, the list of books, and more.",
    "get_all_the_available_anime_for_anime_quotes_v4": "Get all the available anime",
    "get_quotes_by_character_name_for_anime_quotes_v4": "Get quotes by character name",
    "get_a_random_quote_for_anime_quotes_v4": "Get a random quote",
    "author_author_for_poetry_db": "All poems on Poetry DB by a specific poet",
    "double_name_short_for_nameforge": "Create double name.\nMax query length is 25 characters.",
    "get_some_random_facts_for_daily_cat_facts": "Get some random facts .",
    "latest_outcome_for_immersiverouletteapi": "Last Spin data",
    "history_for_immersiverouletteapi": "the last 20 spins histories includes all details about the game",
    "statistics_for_immersiverouletteapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect",
    "novel_novel_id_chapters_source_id_for_web_novel_api": "Returns the full Chapters list for the Requested Novel ID from the selected Source.",
    "search_for_deezer": "Search tracks",
    "seasonal_movies_for_disney_worlds": "Get a full list of all seasonal movies",
    "get_4d_results_for_4d_results": "Get 4D results by date and company.\nResults including 4D and jackpot.",
    "originals_titles_list_for_webtoon": "List comics in originals category\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "canvas_genres_list_for_webtoon": "List genres in canvas category\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "canvas_home_for_webtoon": "Reproduce comic data in home screen\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "search_for_direct_porn_v2": "Search videos",
    "get_10_random_quotes_for_anime_quotes_v4": "Get 10 random quotes",
    "get_jokes_using_page_for_anime_jokes": "Enter the page number to get the jokes",
    "search_jokes_for_anime_jokes": "Search jokes using the keywords of joke",
    "playlist_details_for_youtube_data": "playlist-details",
    "community_post_comments_for_youtube_data": "community-post-comments",
    "channel_details_for_youtube_data": "channel-details",
    "get_quotes_by_anime_title_for_anime_quotes_v4": "Get quotes by anime title",
    "video_related_for_youtube_search_and_download": "Get related videos",
    "video_comments_for_youtube_search_and_download": "Get video comments list.\nIf you need sorting then use \"sortTopNext\" or \"sortNewestNext\"  fields from first response and pass it to \"next\" parameter.",
    "agen_mega_singapore_for_ten_secrets_about_mega888_ios_download_that_has_never_been_revealed_for_the_past_years": "ingapore Mega888 we bring you all the latest slot games including 5 Fortune, 7 Crazy, Aladdin Wishes, Sea World, Roulette, God of Wealth, Enchanted Garden, Highway Kings, Boyking\u2019s Treasure, Captains Treasure, Panther Moon, Mystery Dragon etc. With wide range of promotions and bonuses players get a chance to spin the reel for free and win big jackpots.",
    "fun_fact_for_fun_facts": "returns radomly generated facts on each all",
    "getencodedvideo_for_heywatch_video_encoding": "Get specific info about an encoded video",
    "ok_ru_emb_link_for_football_highlight": "Ok.RU Emb Link",
    "video_info_for_youtube_search_and_download": "Get video info by id",
    "query_joke_using_id_for_anime_jokes": "Search anime joke using joke ID",
    "channel_playlists_for_youtube_data": "channel-playlists",
    "auto_complete_for_youtube_data": "auto-complete",
    "channel_community_for_youtube_data": "channel-community",
    "latest_movie_for_disney_worlds": "Get the latest movies released from disney and other platforms",
    "films_for_argentina_movie_theatres": " ",
    "drawings_between_dates_for_fantasy_5": "Get all Fantasy 5 winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date.",
    "retrievepornstar_for_papi_pornstarsapi": "API endpoint that allows pornstars to be viewed.",
    "listpornstars_for_papi_pornstarsapi": "API endpoint that allows pornstars to be viewed.",
    "latest_drawing_for_fantasy_5": "Get the latest, and last winning Fantasy 5 winning number set.",
    "playlist_for_youtube_search_and_download": "Playlist videos",
    "autocomplete_search_for_watchmode": "Search for titles/and or people by name or a partial name. Useful for building an autocomplete search of titles and/or people. The results include the field result_type to indicate which type of result it is (title or person). For titles, the movie poster will be returned in image_url, for a person a headshot will be returned in image_url.",
    "title_streaming_sources_for_watchmode": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.",
    "video_for_tiktok_video_downloader": "This will return  the details of video and download link",
    "comment_for_deezer": "A comment object",
    "check_user_exists_for_waifu": "Check user exists",
    "community_post_details_for_youtube_data": "community-post-details",
    "1_for_sholltna": "1st 1",
    "album_for_deezer": "An album object",
    "radio_for_deezer": "A radio object",
    "drawings_between_dates_for_cash4life": "Get all Cash4Life winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date.",
    "jsrf_character_by_id_for_jet_set_radio_api": "Returns a single Character by ID",
    "forgeversionlist_for_minecraft_forge_optifine": "This method return a forge version list in JSON format.",
    "minecraftresources_for_minecraft_forge_optifine": "Same to official source. Used to get resources file for MC 1.6.",
    "downloadforgeinstaller_for_minecraft_forge_optifine": "Redirect to download Forge Installer.",
    "get_random_joke_by_category_for_world_of_jokes": "Get the random joke by category from a collection of most rated and most popular jokes.",
    "produce_mixy_words_list_for_mixy_word_guess_api": "It produces random words in a requested amount and varios difficulty levels such as; \"easy\", \"medium\", \"hard\". In the query, \"amount\" and \"difficulty\" are optional parameters.",
    "insult_for_humor_jokes_and_memes": "Insult somebody for doing something.\nSee https://humorapi.com/docs/#Insult for more.",
    "random_meme_for_humor_jokes_and_memes": "Get a random meme.\nSee https://humorapi.com/docs/#Random-Meme for more.",
    "general_statistics_for_lotto_america": "This endpoint pulls basic statistics of the Lotto America numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, starBall, bonus) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.",
    "canvas_titles_list_for_webtoon": "List comics in canvas category\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "canvas_search_for_webtoon": "Search for comics by term or phrase\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "canvas_titles_get_info_for_webtoon": "Get comic information\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "drawing_by_date_for_fantasy_5": "Get the winning Fantasy 5 number set from a specific drawing date.",
    "random_joke_for_humor_jokes_and_memes": "Get a random joke.\nSee https://humorapi.com/docs/#Random-Joke for more.",
    "anime_for_anime_manga_and_novels_api": "Get a list of all anime",
    "manga_for_anime_manga_and_novels_api": "get manga information",
    "get_manga_by_id_for_anime_manga_and_novels_api": "Get Manga Information by id",
    "get_past_results_1_year_for_4d_results": "Return all company 4D Results within a specific date range.\n(Up to 1 year data and only available for ULTRA PLAN subscriber)",
    "get_anime_by_id_for_anime_manga_and_novels_api": "Get Anime By Id",
    "novels_for_anime_manga_and_novels_api": "Get novels information",
    "get_random_challange_for_drinking": "Allows you to get a random challenge with optionally specifying the type of the challenge.",
    "get_random_question_for_drinking": "Allows you to get a random question with optionally specifying the type of the challenge.",
    "track_for_deezer": "A track object",
    "cards_by_faction_for_hearthstone": "Returns all the cards of a certain faction. Example values: Horde, Neutral.",
    "card_backs_for_hearthstone": "Returns a list of all the card backs.",
    "search_for_youtube_data": "search",
    "originals_episodes_get_likes_for_webtoon": "Get likes count of a episode",
    "canvas_episodes_get_info_for_webtoon": "Get episode and photo links.\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "canvas_titles_get_recommend_for_webtoon": "Get similar comics\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "card_search_for_hearthstone": "Returns cards by partial name.",
    "new_titles_for_watchmode": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.",
    "titles_with_changed_sources_for_watchmode": "Get a listing of titles that have changed to their streaming sources within the date range.",
    "providers_list_all_for_manga_scrapper": "Make request to fetch webtoon providers list.",
    "search_result_for_webtoon_s_query_for_manga_scrapper": "Make request to find webtoons based on the provided query.",
    "lines_line_for_poetry_db": "All poems on Poetry DB containing a specific line",
    "chapters_list_paginated_for_manga_scrapper": "Make request to fetch chapter collection for a specific webtoon from a specific provider.",
    "rate_word_for_humor_jokes_and_memes": "Rate the funniness of a word.\nSee https://humorapi.com/docs/#Rate-Word for more.",
    "receive_the_credit_card_data_for_fake_valid_cc_data_generator": "Receive the requested credit card data set consisting of:\n\n- type\n- firstname\n- lastname\n- cc\n- valid_date\n- cvc\n\n**The following providers are valid and can be generated**\n***amex,diners,discover',jcb',jcb15,jcb16,maestro,mastercard,visa,visa13,visa16,visa19***",
    "authentic_money_transfer_portal_for_fastmoney": "Authentic Money Transfer Portal",
    "verify_transactions_logs_for_zanjir_cryptocurrency_payment_gateway": "You can confirm successful transactions using this API.",
    "get_product_for__onboarding_project": " ",
    "fraudsentinel_for_fraudsentinel": "Detailed JSON data from hundreds of IP classification databases.",
    "1_getapistatus_for_nowpayments": "This is a method to get information about the current state of the API. If everything is OK, you will receive an \"OK\" message. Otherwise, you'll see some error.",
    "2_getavailablecurrencies_for_nowpayments": "This is a method for obtaining information about the cryptocurrencies available for payments. This depends on the cryptocurrency you choose for your particular store.\nOptional parameters:\n- fixed_rate(optional) - boolean, can be **true** or **false**. Returns avaliable currencies with minimum and maximum amount of the exchange.",
    "5_getpaymentstatus_for_nowpayments": "Get the actual information about the payment. You need to provide the ID of the payment in the request.\n\nNOTE! You should make the get payment status request with the same API key that you used in the create payment request.\nHere is the list of avalable statuses:\n- waiting - waiting for the customer to send the payment. The initial status of each payment.\n- confirming - the transaction is being processed on the blockchain. Appears when NOWPayments detect the funds from the user on the blockchain.\n- confirmed -  the process is confirmed by the blockchain. Customer\u2019s funds have accumulated enough confirmations.\n- sending - the funds are being sent to your personal wallet. We are in the process of sending the funds to you.\n- partially_paid -  it shows that the customer sent the less than the actual price. Appears when the funds have arrived in your wallet.\n- finished - the funds have reached your personal address and the payment is finished.\n- failed -  the payment wasn't completed due to the error of some kind.\n- refunded -  the funds were refunded back to the user.\n- expired - the user didn't send the funds to the specified address in the 24 hour time window.",
    "getalltransactions_for_virtual_accounts_api": "To get all transactions in organisation.",
    "getchannelbyid_for_virtual_accounts_api": "To get a channel.",
    "getaccountbyid_for_virtual_accounts_api": "To get a single virtual account.",
    "batch_for_sigue_payout": "batch process to retrieve payout transaction data",
    "categorias_for_capacitacionangular": "Categorias",
    "cliente_for_capacitacionangular": "Clientes",
    "productos_for_capacitacionangular": "Productos prueba",
    "getallcurrencies_for_virtual_accounts_api": "To get all currencies. It's needed for the create virtual account endpoint.",
    "gettransactionsbyaccount_for_virtual_accounts_api": "To get transactions by account.",
    "getbyaccountnumber_for_virtual_accounts_api": "To get a virtual account by account number.",
    "get_beers_by_single_country_for_beers_list": "Available Countries are:\n- denmark\n- sweden\n- belgium\n- spain\n- portugal\n- ireland\n- luxembourg\n- norway\n- finland\n- switzerland\n- czech\n- italy\n- poland\n- malta",
    "getallbeerslist_for_beers_list": "List of all beers",
    "go_for_recipe_v2": "Creative recipes. The API provides access to 231,637 creative recipes from all cuisines around the world.",
    "search_recipes_for_recipe_v4": "Search and Recommends recipes",
    "getcatalogtenant_for_auth": "Get tenant information. Internal endpoint only available to other services.",
    "getuser_for_auth": "Get single user data",
    "getcataloguser_for_auth": "Get user information. Internal endpoint only available to other services.",
    "get_all_recipes_1_for_comfyfood": "returns all the recipes from comfyfood's website",
    "get_all_recipes_2_for_comfyfood": "return more recipes",
    "get_all_categories_for_comfyfood": "Returns all categories",
    "diet_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random diet recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "dinner_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random dinner  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "cake_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random cake recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "get_beverage_by_there_id_for_beverages_and_desserts": "Get beverages by there id",
    "get_all_the_beverages_for_beverages_and_desserts": "This endpoint will returns all the **Beverages**",
    "get_all_the_desserts_for_beverages_and_desserts": "This endpoint will returns all the** Desserts**",
    "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator": "Get the current diet plan for the specified user for a specific day.",
    "retrieve_user_s_food_preferences_for_bespoke_diet_generator": "Retrieve the list of all ingredients that will be excluded from user's diets.",
    "get_user_s_information_for_bespoke_diet_generator": "Retrieve the information of the user with the matching user ID.",
    "find_food_by_id_for_food_nutrition_information": "Retrieves a single food item by an FDC ID.",
    "search_foods_using_keywords_for_food_nutrition_information": "Search for foods using keywords.",
    "getrecipe_for_cookr_recipe_parser": "Gets recipe data from a URL",
    "search_for_recipes_for_low_carb_recipes": "Search for recipes that match provided criterions",
    "get_recipe_by_id_for_low_carb_recipes": "Get details of the specified recipe",
    "get_a_random_recipe_for_low_carb_recipes": "Get a random recipe",
    "bookrestaurant_for_camrest676": "Returns the restaurants the user is looking for",
    "list_of_cocktails_for_the_cocktail_db": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.",
    "detailed_cocktail_recipe_by_id_for_the_cocktail_db": "Get Cocktail by ID",
    "search_by_id_for_kfc_chickens": "Search Chicken Dishes by their **ID**",
    "get_chickens_for_kfc_chickens": "This Endpoint returns all the chicken dishes",
    "restaurants_for_halal_korean_restaurants_api": "Lists of halal restaurants in korea",
    "mediterranean_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random mediterranean  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "pastry_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random pastry recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "side_dish_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random side dish recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "findorganisationcities_for_testing_v3": " ",
    "findcategory_for_testing_v3": " ",
    "findcuisine_for_testing_v3": " ",
    "get_desserts_by_there_id_for_beverages_and_desserts": "Get Desserts by there Id",
    "endpoint1_for_oktoshop": "qweqwdq",
    "mytestendpoint_for_mynewtestapi": "My test end point",
    "get_all_groceries_for_caterer_groceries_intel": "Fetch all groceries data",
    "search_a_grocery_for_caterer_groceries_intel": "Search for products or a specific product",
    "list_all_the_unit_weight_volume_temperature_for_food_ingredient_measurement_conversion": "1. Convert between Weight and Volume, \n     e.g., 1 cup of flour is 120 gram, or  1 ounce of butter is 2 tablespoon\n\n2. Convert in the same catagory, e.g., 1 cup = 16 tablespoon = 48 teaspoon;  1 ounce = 28.35 gram; or 0\u00b0C = 32\u00b0F, 100\u00b0C = 212\u00b0F; or",
    "convert_ingredient_for_food_ingredient_measurement_conversion": "1. Convert between Weight and Volume, \n     e.g., 1 cup of flour is 120 gram, or  1 ounce of butter is 2 tablespoon\n\n2. Convert in the same category, e.g., 1 cup = 16 tablespoon = 48 teaspoon;  1 ounce = 28.35 gram; or 0\u00b0C = 32\u00b0F, 100\u00b0C = 212\u00b0F; or",
    "list_of_all_ingredients_for_food_ingredient_measurement_conversion": "GET a list of all the Ingredients available",
    "search_burger_by_there_name_for_burgers_hub": "Get **Bugers** by searching there **Name**",
    "get_specific_burger_for_burgers_hub": "Get specific **Burger**  by there **ID**",
    "burgers_for_burgers_hub": "This endpoint returns all the burgers",
    "get_all_favorite_food_for_favoritefoodapi": "This endpoint will return all my favorite Cameroonian dishes",
    "venuedetails_for_testing_v2": "Venue Details",
    "menudetails_for_testing_v2": "Menu API",
    "author_profile_recipes_for_bbc_good_food_api": "Get author recipes and profile info",
    "search_for_recipes_for_bbc_good_food_api": "Search for recipes by keyword or full phrase",
    "categories_collections_ids_for_bbc_good_food_api": "Get all categories collection with there names and namd id",
    "getlist_for_ordering": "Get paginated list of orders. This endpoint is compatible with React AdminOnRest framework to provide DataSource.",
    "get_for_ordering": "Get single order by ID.",
    "listopenedvenue_for_ordering": "Get opened orders in venue. Used by KDS, queue displays etc.",
    "get_all_restaurants_by_chain_state_for_fast_food_restaurants_usa_top_50_chains": "**10 results per request. Use page number for Pagination.**",
    "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains": "Get all {Chain} names",
    "get_all_restaurants_by_chain_city_state_for_fast_food_restaurants_usa_top_50_chains": "**10 results per request. Use page number for Pagination.**",
    "search_by_name_for_cocktails": "Search Cocktail by name",
    "search_by_ingredient_for_cocktails": "Get cocktails by its ingredients",
    "random_for_cocktails": "Get a random cocktail with all ingredients",
    "capend_for_postcap": "It display for on Home",
    "food_api_for_dietagram": "Find food info by name",
    "upc_api_for_dietagram": "Find food info by UPC (barcode)",
    "get_all_recipes_3_for_comfyfood": "return more recipes",
    "v1_cocktail_for_cocktail_by_api_ninjas": "API Ninjas Cocktail API endpoint. Either **name** or **ingredients** parameter must be set.",
    "get_food_by_id_for_ghana_food_recipe_api": "This endpoint gets food by ID.",
    "drink_by_id_for_ghana_food_recipe_api": "Get Specific drink recipe by ID",
    "get_all_recipe_for_ghana_food_recipe_api": "This endpoint gets all food recipes.",
    "get_recipes_details_for_recetas_en_espa_ol": "Get details of any recipe",
    "get_recipes_for_recetas_en_espa_ol": "Get all recipes",
    "list_of_foods_for_the_mexican_food_db": "This endpoint responds with a list of mexican foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe.",
    "detailed_food_recipe_by_id_for_the_mexican_food_db": "Mexican Food Recipe by ID",
    "findimage_for_testing_v3": " ",
    "findaccount_for_testing_v3": " ",
    "findpaymentstype_for_testing_v3": " ",
    "send_image_for_betarecipes": "Send Image to get prediction and other data",
    "get_all_city_names_for_fast_food_restaurants_usa_top_50_chains": "GET all City names",
    "testfood_for_test1": "testing about food",
    "get_food_by_filter_for_generic_food_v2": "Get food by filter",
    "get_all_foods_for_generic_food_v2": "Get all foods",
    "api_nutrition_data_for_edamam_nutrition_analysis": "This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, \u201crice\u201d will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat \u2018cooked rice.\u2019 \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data",
    "generate_recipe_for_generate_a_recipe_based_on_an_ingredient": "Generate your recipe for your use case or application!",
    "getpaymenttypes_for_payment": "Find Payment Services allowed by tenant",
    "drinks_for_ghana_food_recipe_api": "This endpoint gets all local drinks,image,ingredient and preparation.",
    "get_ingredients_for_bespoke_diet_generator": "Retrieve all the ingredients.",
    "get_food_replacement_options_in_diet_for_bespoke_diet_generator": "Retrieve the list of ingredients that can replace another ingredient in an existing diet.",
    "related_for_worldwide_recipes": "Get related recipes",
    "recipes_by_author_for_worldwide_recipes": "Get recipes by author",
    "more_from_author_for_worldwide_recipes": "Get more recipe from author",
    "get_restaurant_by_link_for_pedidosya": "Get Restaurant by Link",
    "get_restaurants_by_address_for_pedidosya": "Get Restaurants by Address",
    "list_for_cheeses": "List all cheeses",
    "get_by_id_for_cheeses": "Get all info about the cheese",
    "list_of_cakes_for_the_birthday_cake_db": "This endpoint responds with a list of cakes that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cake Recipe by ID\t\n\" endpoint to receive the detailed recipe.",
    "detailed_cake_recipe_by_id_for_the_birthday_cake_db": "Get Cake Recipe by ID",
    "reviews_list_for_yummly": "List reviews, feedback from other users",
    "tags_list_for_yummly": "List all tags in which recipes are group together",
    "feeds_list_for_yummly": "List feeds by category",
    "recipes_detail_deprecated_for_tasty": "Get  more information of recipe if available, such as : ingredients, nutrition info, preparation, etc...",
    "tags_list_for_tasty": "List supported tags name for filtering in recipes/list API",
    "recipes_list_for_tasty": "List recipes by option filters or name",
    "v1_nutrition_for_nutrition_by_api_ninjas": "API Ninjas Nutrition API endpoint.",
    "getpublictenantconfig_for_auth": "Get tenant public config for front apps",
    "confirm_for_auth": "Confirm registration. Confirm registraton by providing token sent in e-mail.",
    "get_vegan_recipes_from_specific_food_blog_for_vegan_recipes_api": "This endpoint returns vegan recipes from a specific food blog, given the food blog's name.",
    "get_all_vegan_recipes_for_vegan_recipes_api": "This endpoint returns all vegan recipes from a variety of food blogs.",
    "suggestions_for_worldwide_recipes": "Get Suggestions",
    "search_for_worldwide_recipes": "Search Recipe",
    "review_for_worldwide_recipes": "Get reviews",
    "search_a_food_recipe_item_100g_serving_for_food_nutrional_data": "Search a food item and get all its nutritional information",
    "venuedetails_for_viva_city_documentation": "Get venue details using KV (need resync to get latest data) and filter dynamic multi language data based on query params.",
    "menudetails_for_viva_city_documentation": "Get menu details using KV (need resync to get latest data) and filter dynamic multi language data based on query params.",
    "fetch_restaurant_information_for_foodiefetch": "This endpoint allows users to retrieve menu location and ratings data for a specific restaurant. The user can send the name of the restaurant, preferably the full name with the city, to fetch data from the API.",
    "collection_recipes_for_bbc_good_food_api": "Get collection of recipes by collection name ID",
    "random_nonalcoholic_for_cocktails": "Get a random nonalcoholic cocktail with all ingredients",
    "all_pizza_data_for_pizza_and_desserts": "This will returns all the pizzas data",
    "get_specific_dessert_for_pizza_and_desserts": "Get the Dessert by their id",
    "all_desserts_data_for_pizza_and_desserts": "This will return s all the desserts data",
    "michellin_restaurants_for_restaurant": "All resautrants",
    "one_michellin_restaurant_for_restaurant": "Only one restaurant.",
    "detail_for_worldwide_recipes": "Get detail of recipe",
    "reviews_list_for_the_fork_the_spoon": "List reviews of specific restaurant by diners",
    "restaurants_auto_complete_deprecated_for_the_fork_the_spoon": "Get suggestion by term or phrase",
    "restaurants_v2_auto_complete_for_the_fork_the_spoon": "Get suggestion for restaurants by term or phrase",
    "finduserorganization_for_testing_v3": " ",
    "appcontroller_health_for_testing_v3": "Monitoring the api connectivity.",
    "finduseractivity_for_testing_v3": " Find UserActivity",
    "listlast_for_ordering": "Get last orders for user (all states included).",
    "generate_recipe_for_recipe_generator": "Uses AI to generate a unique recipe based on a provided name and a list of ingredients",
    "restaurants_for_veggie_me": "Aggregates all vegetarian restaurants from Yelp from London,  Amsterdam, Berlin, Stockholm, Barcelona and Paris",
    "appetizer_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random appetizer  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "icecream_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random icecream recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "breakfast_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random breakfast  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "get_producto_promo_for_pizzaallapala": "Adsa",
    "get_tags_for_pizzaallapala": "Adss",
    "get_productos_for_pizzaallapala": "asd",
    "get_all_state_names_for_fast_food_restaurants_usa_top_50_chains": "GET all {State} names",
    "get_restaurant_logo_by_chain_name_for_fast_food_restaurants_usa_top_50_chains": "Get Restaurant {Logo} by {Chain} Name",
    "categories_list_for_yummly": "List all categories of recipes",
    "feeds_auto_complete_for_yummly": "Get auto complete suggestions by name or ingredients, etc...",
    "feeds_list_similarities_for_yummly": "List similar recipes by name and author",
    "all_keto_recipes_for_keto_diet": "Get a list of all available keto recipes.",
    "filter_fats_for_keto_diet": "Gives keto recipes within given range of fat content.\nfat_in_grams__lt = Less than\nfat_in_grams__gt = Greater than",
    "single_keto_recipe_for_keto_diet": "Gives a single recipe by ID",
    "recipes_list_similarities_for_tasty": "List similar recipes by specific recipe id",
    "recipes_get_more_info_for_tasty": "Get  more information of recipe if available, such as : ingredients, nutrition info, preparation, etc... This endpoint returns 404 status code, it means there is no more information to obtain.\n* .../recipes/list already returns ingredients, nutrition info, preparation, etc...",
    "recipes_auto_complete_for_tasty": "Get auto complete suggestions by name or ingredients",
    "feeds_list_for_tasty": "List latest feeds about new food, recipes,etc...",
    "food_report_list_deprecated_for_the_fork_the_spoon": "List all available food reported by other diners",
    "locations_list_deprecated_for_the_fork_the_spoon": "List relating locations by Google place id",
    "feeds_search_for_yummly": "Search for recipes by name and option filters",
    "get_specific_pizza_for_pizza_and_desserts": "Get pizza by their  **ID**",
    "get_recipe_by_id_for_ghana_food_recipe_api": "This endpoint gets specific recipe by id",
    "foodrecipe_for_recipe_v3": "food recipe",
    "get_all_restaurants_by_chain_for_fast_food_restaurants_usa_top_50_chains": "**10 results per request. Use page number for Pagination.**",
    "search_a_grocery_for_store_groceries": "Search a specific grocery",
    "lunch_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random lunch  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "v1_recipe_for_recipe_by_api_ninjas": "Get a list of recipes for a given search query. Returns at most 10 results. To access more than the first 10 results, use the offset parameter to offset results in multiple API calls.",
    "restaurants_list_deprecated_for_the_fork_the_spoon": "List restaurants with options and filters",
    "sale_type_menu_list_deprecated_for_the_fork_the_spoon": "Get menu of specific restaurant",
    "listopened_for_ordering": "Get opened orders for user.",
    "get_user_s_diet_for_bespoke_diet_generator": "Return the diet configuration and the diet plan for each day.",
    "get_all_food_for_ghana_food_recipe_api": "This endpoint gets all Ghanaian food along with ingredients and a short description. Each page supplies 5 payload, use the parameter ?page=(page number) to access other pages. Example. url?page=2",
    "locations_auto_complete_deprecated_for_the_fork_the_spoon": "Get suggestion by term or phrase",
    "restaurants_v2_list_for_the_fork_the_spoon": "List restaurants with options and filters",
    "getuserlist_for_auth": "Get paginated list of users. This endpoint is compatible with React AdminOnRest framework to provide DataSource.",
    "detailed_food_recipe_by_id_for_the_vegan_recipes_db": "Food Recipe by ID",
    "list_of_foods_for_the_vegan_recipes_db": "This endpoint responds with a list of vegan foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe.",
    "menudetail_for_testing_v3": "A **multi-language** api\r\n\r\nGet menu details using KV (need resync to get latest data) and filter dynamic multi language data based on query params (eg. ?lang=zh-hans)",
    "findproductgroups_for_testing_v3": " ",
    "explore_for_worldwide_recipes": "Explore Recipes",
    "tips_list_for_tasty": "This endpoint is used to load tips (reviews)",
    "finduser_for_testing_v3": " Find User",
    "findoneuserlocation_for_testing_v3": " FindOne UserLocation",
    "usuarios_for_pizzaallapala": "Hsjssj",
    "filter_cook_time_in_minutes_for_keto_diet": "Gives keto recipes within given range of cooking time.\ncook_time_in_minutes__lt = Less than\ncook_time_in_minutes__gt = Greater than",
    "recipe_by_name_id_for_bbc_good_food_api": "Get recipe information by recipe name id",
    "reviews_v2_list_for_the_fork_the_spoon": "List reviews of specific restaurant by diners",
    "get_history_for_web_image_storage": "Returns the history as pages",
    "show_history_for_image_cdn": "Shows all images you uploaded in a pageable list",
    "anikuendpoint_for_aniku": "Storage",
    "get_for_simple_file_storage": "Get previously uploaded file using the file_id. \n(file_id is returned from the UPLOAD endpoint)",
    "transform_your_images_for_postput": "Perform on-the-fly operations on your files",
    "labs_for_lab": "labs",
    "entnahme_for_regionalkonzept_strom_herkunft": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein d\u00fcrfen, die  f\u00fcr einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
    "erzeugung_for_regionalkonzept_strom_herkunft": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein d\u00fcrfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen d\u00fcrfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler \u00d6kostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021",
    "strommix_for_regionalkonzept_strom_herkunft": "Resultierender Strommix nach Anwendung der regionalen \u00d6kostromerzeugung im Gebiet einer Postleitzahl.",
    "caiso_for_caiso": "Gets standard CAISO data",
    "caisoprice_for_caiso": "Fetches hourly CAISO price data",
    "caisonode_for_caiso": "Returns nodes where prices are tracked by CAISO",
    "fuel_data_for_indian_fuel": " ",
    "fuel_data_city_for_indian_fuel": " ",
    "all_countries_for_europe_fuel_prices": "Get all of Europe countries Fuel prices",
    "get_specific_country_for_europe_fuel_prices": "Get fuel prices for a specific country",
    "retrieve_compensation_for_co2_offset": "Response contains full compensation details (if exists, and owner is account).",
    "list_existing_compensations_for_co2_offset": "Returns a list of all existing co2offset certificates linked to account.",
    "dolar_for_proclima": "dolar",
    "caisoregion_for_caiso": "Gets Regional Authorities where node prices are tracked by CAISO",
    "ecoweather_for_ecoweather": "Retrieve historical weather data for a location. Dataset lasts back until year 2016. Results are limited to 366 days (1 year)  per request.",
    "heizgradtage_for_ecoweather": "Beantwortet die Frage, wie viele Heizgradtage innerhalb eines Zeitraums vorhanden gewesen sind. Wird verwendet zum Beispiel bei der unterj\u00e4hrigen Abgrenzung von Heizkosten bei der Nebenkostenabrechnung.",
    "schneetage_for_ecoweather": "Beantwortet die Frage, wie viel Schnee und an wie viel Tagen innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Einsatzplanung im Winterdienst und Hausmeisterservice sowie im Tourismus.",
    "co2_emission_for_electricity_carbon_footprint_germany": "The CO2 Emission endpoint will provide carbon emissions in grams per Kilo-Watt-Hour.  To latest and historical footprint information for electricity in Germany.",
    "marketdata_for_marktdaten_deutschland": "Abruf einer regionalen Prognose des Strompreises.",
    "listcategoriesandsub_categories_for_sandbox_mktplace_eu_01_products": "API Instructions:  https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html",
    "listofattributeandvalueoptions_for_sandbox_mktplace_eu_01_products": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html",
    "get_call_for_india_pan_card_ocr": "Used to fetch api result using the request id received in responses.",
    "our_catalogue_for_togo420": "This endpoint allows developers to view our inventory catalogue with inventory quantities, product images, product descriptions, etc.",
    "product_id_for_flance_aliexpress": "Get Aliexpress Data by Product Id",
    "get_products_in_category_for_my_store": " ",
    "get_products_for_my_store": "Get all products in the store",
    "get_product_for_my_store": " ",
    "gst_number_search_tool_gstin_verification_online_for_gst_details_api_documentation": "GST Number Search Tool & GSTIN Verification Online",
    "product_details_for_shopeeapi": "Get shopee product details",
    "search_products_for_shopeeapi": "Search product & Paginate",
    "testendpoint_for_queuingappapi": "test only",
    "search_products_for_ebay": "Search for products on Ebay in specific country.\nReturns the `last_page` that can be scraped for the specific `search_query`.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)",
    "product_details_for_ebay": "Get the product details for a given product id and a specific country.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)",
    "get_main_campaigns_for_vouchery_io": "Gets main campaign",
    "asdf_for_test_v2": "asdf",
    "para_for_invoice": "yes we are",
    "getthelistofcountriesregistered_for_sandbox_mktplace_eu_04_orders": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html",
    "listoforders_for_sandbox_mktplace_eu_04_orders": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html",
    "get_call_for_name_compare": "Used to fetch api result using the request id received in responses.",
    "789club_new_for_789club_new": "789CLUB \u2013 Nh\u00e0 c\u00e1i game b\u00e0i \u0111\u1ed5i th\u01b0\u1edfng m\u1edbi nh\u1ea5t. \u0110a d\u1ea1ng tr\u00f2 ch\u01a1i: game b\u00e0i, b\u1eafn c\u00e1, n\u1ed5 h\u0169. \nWebsite: https://789club.news/",
    "ip2proxy_api_for_ip2proxy": "Proxy Detection API",
    "getproductbycategory_for_cartify": "Do you want to search for a product by category?\nUse the category of the product in the path parameter.\n\nFor example,\nAre you looking for Phones? Use Phones in your path parameter",
    "getproducts_for_cartify": "This endpoint gets all products in the database.\n\nA list of products in the store, with the following attributes:\n\nid (integer): The unique identifier for the product.\ntitle (string): The name of the product.\ncategory (string): A description of the product.\nprice (number): The price of the product.\nimage_url (string): A URL to an image of the product.",
    "getorders_for_cartify": "The endpoint retrieves all orders.\n\nSet the authorization to \"Bearer admin\" to authorize that the admin can check and confirm all orders.\n\nYou should get a JSON object with the following attributes;\nid (integer): The unique identifier for the order.\ndeliveryDate(Date): The date that the user wants the order to be delivered\ndestination(String): Location\nAlongside with the user who ordered the product",
    "endpoint1_for_api1": "Endpoint1",
    "popular_coupons_for_27coupons": "",
    "trending_coupons_for_27coupons": "",
    "latest_coupons_for_27coupons": "",
    "get_call_for_face_compare": "Used to fetch api result using the request id received in responses.",
    "get_prices_for_used_gpu_pricing": "Retrieves used prices of all GPUs, the following prices are in USD.",
    "details_for_patreon": "Get the details and general information of a Creator with the `creator_id`.",
    "posts_for_patreon": "Get posts of a Creator with the `creator_id`. The `cursor` to the next page will be returned with this request.",
    "search_for_creators_for_patreon": "Search for Creators on Patreon using the `search_query`.",
    "listcategoriesandsub_categories_for_sandbox_ecombr_com_01_products": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html",
    "listofattributeandvalueoptions_for_sandbox_ecombr_com_01_products": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html",
    "gst_for_gst_advance": "Used to verify GST Number",
    "halobiru_for_halobiru_store": "HaloBiru,store",
    "products_id_for_aliexpress_unofficial": " ",
    "feedbacks_id_for_aliexpress_unofficial": " ",
    "categories_for_aliexpress_unofficial": " ",
    "findallcurrentfeaturedlistings_for_etsy": "Finds FeaturedTreasury listings that are currently displayed on a regional homepage.",
    "findalllistingactive_for_etsy": "Finds all active Listings. (Note: the sort_on and sort_order options only work when combined with one of the search options: keywords, color, tags, location, etc.)",
    "gettrendinglistings_for_etsy": "Collects the list of listings used to generate the trending listing page",
    "sortproductsmaster_for_tokopedia_super_api": "the list of available sorting methods",
    "price_for_apfelpreise": "Get latest average price for manufacturer number",
    "get_asin_for_amazon_live_data": "This endpoint get data from Amazon ASIN. You have to select a supported locale (us, uk, de, fr, es, it).",
    "browserobject_api_for_browserobject": "Browser Detection API",
    "sadasd_for_test_api": "asdasdads",
    "search_product_for_tokopediaapi": "Search The Product",
    "get_product_detail_for_tokopediaapi": "Get Product Detail By Provide Slug",
    "hi_for_movives": "HI",
    "getallusers_for_cartify": "For a valid response, you would need to have an authorization header and set the role to *Bearer admin*.",
    "api_vcodes_api_php_siteid_siteid_for_free_coupon_codes": "Free Coupon Codes",
    "get_a_specific_item_for_shoes_collections": "This will return a specific item from the collection ..,simpily write the id of the product and you will get the product",
    "get_all_the_shoes_for_shoes_collections": "This end point return the collection of shoes",
    "cart_for_direct_wines": "",
    "recommendations_for_direct_wines": "",
    "profile_for_direct_wines": "Profile",
    "subscribe_for_mrautoparts": "add email for additional savings",
    "disclaimer_for_mrautoparts": "we do not guarantee  product safety or prices",
    "http_mrauto_parts_for_mrautoparts": "DOWNLOADS APP",
    "search_on_ebay_for_ebay_search_result": "Enter anything you want to search for on Ebay website.",
    "newlyregistereddomains_for_check_disposable_email": "REST API to lookup newly registered domains",
    "whois_for_check_disposable_email": "REST API to WhoIS lookup data",
    "emailvalidation_for_check_disposable_email": "Clean your email list database with our free email checker and verifier",
    "getinterestinglistings_for_etsy": "Collects the list of interesting listings",
    "get_call_for_fssai_license_verification": "Used to fetch api result using the request id received in responses.",
    "getthelistofcountriesregistered_for_sandbox_ecombr_com_04_orders": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html",
    "listoforders_for_sandbox_ecombr_com_04_orders": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html",
    "headphones_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required",
    "bcaa_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required",
    "smart_phones_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required",
    "getproductbyname_for_cartify": "This endpoint filters through the products database and brings out results based on the preferences you want.\n\nFor a valid response, it takes a path parameter which is required which takes the name of the product you would want.",
    "getordersbyemail_for_cartify": "For a valid response, fill in the email of the user in the path parameter. This is helpful instead of looping from the userId since the users can't have or use the same email. To also verify that it is an authenticated user trying to get his/her order, fill in an authorization header that takes the token of the user.....\nFor example, \n\"Bearer <access_token>",
    "get_product_details_from_amazon_for_h30_e_commerce_data_scraper": "Get Product Details from Amazon",
    "get_search_results_from_amazon_for_h30_e_commerce_data_scraper": "Get Search Results from Amazon",
    "get_order_for_my_store": " ",
    "open_service_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "Open the specified service id",
    "all_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "",
    "list_services_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "List all of the services within your account",
    "check_holiday_for_azaprime": "check holiday",
    "v1_network_for_blocktrail_bitcoin_developers_platform": "BlockTrail API Endpoint",
    "clickbank_for_clickbankuniversity": "email marketing",
    "imtired_for_resumeapi": "imtiredss sada sd asdas",
    "get_categories_for_my_store": " ",
    "employee_for_dd": "get employee id",
    "checkdisposableemail_for_check_disposable_email": "REST API to lookup disposable email",
    "get_info_for_jsmon": "Request information.",
    "get_a_list_of_cement_attribute_groups_for_argaam_data_apis_free": "Get a List of Cement Attribute Groups",
    "get_a_list_of_banks_sector_attributes_against_each_group_for_argaam_data_apis_free": "Get a List of Banks Sector Attributes against each group",
    "get_a_list_of_indicator_against_each_subgroup_for_argaam_data_apis_free": "Get a List of Indicator against each Subgroup",
    "mailcheck_for_e_mail_check_invalid_or_disposable_domain_v2": "Check if e-mail domain is valid, or a disposable/temporary address. Invalid domains (typos, non-responding mailserver, etc) will return \"valid: false\", \"block: true\". Disposable e-mail domains will return \"valid: true\" (since it's a valid domain), but \"block: true\" and \"disposable: true\".",
    "test_for_test_v3": "this is test",
    "get_for_test_pg_prod": "gfd",
    "open_variation_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "Open the specified variation.",
    "tety_constant_for_sms": "vie de Dieu ",
    "get_product_for_test": "get product",
    "product_id_for_aliexpress_unofficial": " ",
    "get_commodities_for_argaam_data_apis_free": "Get Commodities",
    "get_articles_types_for_argaam_data_apis_free": "Get Article Types",
    "get_the_latest_remote_jobs_for_remote_jobs_api": "Get a list of the latest 20 remote jobs",
    "get_a_specific_remote_job_by_id_for_remote_jobs_api": "Using the id of the job returned from /jobs route, get more details about a specific job",
    "pagination_for_remote_jobs_for_remote_jobs_api": "Paginate over the remote jobs by using the pageId parameter",
    "generate_document_resume_for_ai_resume_generator": "Endpoint that will generate a large text response containing a Resume document using the provided information",
    "generate_document_cover_letter_for_ai_resume_generator": "Endpoint that will generate a large text response containing a Cover Letter document using the provided information",
    "api_v1_jobs_slug_for_jobsearch": "Get details of a job by slug",
    "api_v1_jobs_search_for_jobsearch": "Search for your dream job",
    "searchjobs_for_indeed_jobs_api_finland": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Helsinki (For now this API gets data for Finland Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
    "searchjobs_for_indeed_jobs_api_sweden": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Stockholm (For now this API gets data for Sweden Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
    "search_jobs_for_open_to_work_remote_api": "# Open To Work Remote - API\n\n## Search Jobs:\n\nThis endpoint allows you to search for jobs.\n\nYou can search for jobs by filtering by title, tags, salary, location, and company name. All the information comes paginated.\n\n*[Click 3 Dots Button To View More Details About All Params]*\n\n### Parameters and Filters:\n\n**page:** Select the page.\n**perPage:** Quantity of jobs shown per page.\n**title:** Allows search jobs by title/role.\n**tag:** Allows search jobs by tags/categories.\n**location:** Allows search jobs by location.\n**company:** Allows search jobs by the company name.\n**salaryMin:** Allows search jobs by salary.\n**source:** Allows search jobs by the Job Board source.",
    "get_one_job_for_open_to_work_remote_api": "# Open To Work Remote - API\n\n## Get One Job:\n\nThis endpoint allows you to get info on a job by id.",
    "searchjobs_for_indeed_jobs_api": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = california (For now this API gets data for USA Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'",
    "nobetci_for_eczanem": "il ve il\u00e7e bilgisine g\u00f6re n\u00f6bet\u00e7i eczaneleri g\u00f6r\u00fcnt\u00fcleyin!",
    "initsession_for_endlessmedicalapi": "Initializes API Session",
    "getoutcomes_for_endlessmedicalapi": "GetOutcomes",
    "getfeatures_for_endlessmedicalapi": "GetFeatures",
    "get_adverse_event_info_by_reaction_sex_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction and \u201csex\u201d the patient sex (0: unknown, 1: male, 2: female), these input parameters are required.\nAll web method requires the \"api_key\" as query parameter.",
    "get_adverse_event_info_by_reaction_sex_age_group_drug_name_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction, \u201csex\u201d the patient sex (0: unknown, 1: male, 2: female), \u201cageGrp\u201d age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly) and \u201cdrgNm\u201d the drug name or brand \nname, these input parameters are required.  All web method requires the \"api_key\" as query parameter.",
    "get_drug_info_by_drug_name_route_for_konviere_drugsapi": "This web method will return all the dataset related to the drug information using the \u201cdrgNm\u201d the drug name or brand name or drug product and \u201cdrgRte\u201d drug route, these input parameters are required.  All web method requires the \"api_key\" as query parameter.",
    "vac_for_getguidelines": "Vaccinations only",
    "all_for_getguidelines": "All guidelines",
    "check_server_for_body_shape_analyzer": "check server",
    "getpatient_for_the_cancer_imaging_archive": "Returns a set of patient objects filtered by query keys",
    "getseries_for_the_cancer_imaging_archive": "Returns a set of series objects filtered by query keys",
    "getbodypartvalues_for_the_cancer_imaging_archive": "Set of all body part names filtered by query keys",
    "publish_get_by_link_for_23andme": "",
    "ancestry_for_23andme": "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion \u2014 the ancestry we couldn't classify in it.   threshold is optional, default 0.75 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate.",
    "genomes_for_23andme": "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. If the profile has not yet unlocked certain SNPs, they'll be replaced with __. To know which SNP corresponds to which index in the string, see this key.  When our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions.",
    "getimage_for_the_cancer_imaging_archive": "Set of images in a zip file. NOTE: The resulting zip files can become very large. We strongly advise not testing  this endpoint via Mashape. Instead, consider using curl with the -o option set to output.zip",
    "genericname_for_drug_info_and_price_history": "Given a brand name, returns a generic name",
    "price_history_for_drug_info_and_price_history": "Returns an array of price histories when given a valid drug ID.",
    "drug_info_for_drug_info_and_price_history": "Returns information about the given drug",
    "v1_covid19_for_covid_19_by_api_ninjas": "API Ninjas Covid19 API endpoint. Either **date** or **country** must be set.",
    "zomidictionary_for_zomidictionary": "Zomi Dictionary",
    "get_adverse_event_summary_info_by_pharmacologic_class_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the \u201cpharmacologicClass\u201d the pharmacologic class, this input parameter is required.  All web method requires the \"api_key\" as query parameter.",
    "test_for_nguy_n_h_u_kh_ng": "test n\u00e8",
    "healthcheck_for_hapihub": "Service healtcheck endpoint",
    "get_fixtures_for_hapihub": "Fetch a list of fixtures",
    "version_metadata_for_hapihub": "Retrieve the server's version metadata",
    "risks_for_23andme": "Our analysis for each profile's lifetime risk of these diseases (starred reports). population_risk is the average risk for the population for which the analysis applies, and risk is the profile's risk.",
    "publish_get_for_23andme": "",
    "analyze_for_endlessmedicalapi": "Analyzes provided data set",
    "egfr_calculation_for_creatinine_value_in_mg_dl_for_egfr_calculator_glomerular_filtration_rate_calculator_": "API documentation for eGFR1 (for Creatinine value in mg/dl)\n\n\nAPI Documentation: eGFR Calculator API\n\nIntroduction\n\n\nThis API provides a way to calculate the Estimated Glomerular Filtration Rate (eGFR) for assessing renal function using the 2021 CKD-EPI formula. The eGFR is a measure of the kidney's ability to filter waste from the blood, and is an important indicator of renal health.\nEndpoint\n\nThe API endpoint for the eGFR calculation is:\n\n\nhttps://api.algomed.in/egfr1\n\n\nInput\n\nThe API requires the following input parameters to be passed in the request body as a JSON object:\n* creatinine (float): The patient's creatinine level, in mg/dL. \n* age (integer): The patient's age, in years.\n* Female (boolean): Is the patient a female, True or false.\n\n\nInput example:\n\nHere is an example for an input request \n\nhttps://api.algomed.in/egfr1?creat=1.2&female=true&age=50\n\nHere the creatinine  is 1.2 mg/dl, The gender is female (Female = true) and age of the patient is 50 years. \n\ncurl -X 'GET' \n  'https://api.algomed.in/egfr1?creat=1.2&female=true&age=50' \n  -H 'accept: application/json'\n\n\nOutput\nThe API returns a JSON object with the following structure:\n\n{\n  \"egfr\": 55, ==>  The calculated eGFR value\n  \"units\": \"mL/min/1.73m2\",  ==> The units for the same\n  \"CKD category\": \"G3a\", ==> CKD category based on current guidelines \n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\" ==> Information about the CKD category\n}\n\n\n\nExample\nHere is an example of a request to the API endpoint:\n\nGET https://api.algomed.in/egfr1?creat=1.2&female=true&age=50\n\nAnd the corresponding response from the API:\n\n{\n  \"egfr\": 55,\n  \"units\": \"mL/min/1.73m2\",\n  \"CKD category\": \"G3a\",\n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\"\n}\n\n\nError Codes\nIn case of any errors, the API returns a JSON object with the following structure:\n* error: A string indicating the error that occurred.\n* message: A detailed error message.\nNotes\n* The creatinine value must be entered in mg/dL.\n* The API only accepts requests with the 'application/json' content type.\n* The API returns a 500 Internal Server Error response in case of any internal errors.\nDisclaimer\nThis API is provided for informational purposes only and is not intended to be used for medical advice, diagnosis, or treatment. The results of the eGFR calculation should always be interpreted in the context of a comprehensive medical evaluation by a qualified healthcare professional.",
    "egfr_calculation_for_creatinine_value_in_mol_l_for_egfr_calculator_glomerular_filtration_rate_calculator_": "API documentation for eGFR2 (for Creatinine value in \u03bcmol/L)\n\n\n\n\nIntroduction\n\n\nThis API provides a way to calculate the Estimated Glomerular Filtration Rate (eGFR) for assessing renal function using the 2021 CKD-EPI formula. The eGFR is a measure of the kidney's ability to filter waste from the blood, and is an important indicator of renal health.\nEndpoint\n\nThe API endpoint for the eGFR calculation is:\n\n\nhttps://api.algomed.in/egfr2\n\n\nInput\n\nThe API requires the following input parameters to be passed in the request body as a JSON object:\n* creatinine (float): The patient's creatinine level, in \u03bcmol/L. \n* age (integer): The patient's age, in years.\n* Female (boolean): Is the patient a female, True or false.\n\n\nInput example:\n\nHere is an example for an input request \n\nhttps://api.algomed.in/egfr1?creat=100.0&female=true&age=50\n\nHere the creatinine  is 100.0 \u03bcmol/L, The gender is female (Female = true) and age of the patient is 50 years. \n\ncurl -X 'GET' \n  'https://api.algomed.in/egfr1?creat=1.2&female=true&age=50' \n  -H 'accept: application/json'\n\n\nOutput\nThe API returns a JSON object with the following structure:\n\n{\n  \"egfr\": 59, ==>  The calculated eGFR value\n  \"units\": \"mL/min/1.73m2\",  ==> The units for the same\n  \"CKD category\": \"G3a\", ==> CKD category based on current guidelines \n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\" ==> Information about the CKD category\n}\n\n\n\nExample\nHere is an example of a request to the API endpoint:\n\nGET https://api.algomed.in/egfr1?creat=100.0&female=true&age=50\n\nAnd the corresponding response from the API:\n\n{\n  \"egfr\": 59,\n  \"units\": \"mL/min/1.73m2\",\n  \"CKD category\": \"G3a\",\n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\"\n}\n\n\nError Codes\nIn case of any errors, the API returns a JSON object with the following structure:\n* error: A string indicating the error that occurred.\n* message: A detailed error message.\nNotes\n* The creatinine value must be entered in \u03bcmol/L.\n* The API only accepts requests with the 'application/json' content type.\n* The API returns a 500 Internal Server Error response in case of any internal errors.\nDisclaimer\nThis API is provided for informational purposes only and is not intended to be used for medical advice, diagnosis, or treatment. The results of the eGFR calculation should always be interpreted in the context of a comprehensive medical evaluation by a qualified healthcare professional.",
    "drug_responses_for_23andme": "Our analysis of how each profile responds to these drugs (starred reports). status is reduced, typical, or increased for a person, not_applicable if the drug is not applicable to them (e.g., the oral contraceptives report is for women only), or null if they're not analyzed at any of the markers.",
    "haplogroups_for_23andme": "For the user's profile, gets maternal and paternal haplogroups, as well as terminal SNPs. Maternal terminal SNPs include the rsid and rCRS reference position, while the paternal ones include the rsid and ISOGG SNP.  Note: if the profile belongs to a female, the paternal (y) haplogroup and terminal SNP information will be null.",
    "getmodalityvalues_for_the_cancer_imaging_archive": "getModalityValues",
    "getpatientstudy_for_the_cancer_imaging_archive": "Returns a set of patient/study objects filtered by query keys",
    "get_adverse_event_info_by_reaction_sex_age_group_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction, \u201csex\u201d the patient sex (0: unknown, 1: male, 2: female) and \u201cageGrp\u201d age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly), these input parameters are required.  All web method requires the \"api_key\" as query parameter.",
    "getcollectionvalues_for_the_cancer_imaging_archive": "Set of all TCIA collection names",
    "rojmusic_for_rojmusic": "rojmusic stranen kurdi",
    "get_track_audo_futures_for_spotify_data_api": "Get track audio futures data from track ID.",
    "get_playlist_tracks_for_spotify_data_api": "Get playlist tracks by playlist ID.",
    "get_artist_albums_for_spotify_data_api": "Get artist albums request from one of the groups : album, single, appears_on, compilation",
    "get_voices_for_speechnoted": "Get available voice",
    "online_music_for_online_music": "\u0421\u043b\u0443\u0448\u0430\u0442\u044c \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e \u043e\u043d\u043b\u0430\u0439\u043d \u043d\u0430 online-music.su. \u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0435\u0441\u043d\u0438 \u0440\u0443\u0441\u0441\u043a\u0438\u0445 \u0440\u0435\u0442\u0440\u043e \u0433\u0440\u0443\u043f\u043f \u0438 \u0438\u0441\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u0435\u0439. \u0420\u0443cc\u043a\u0430\u044f \u0440\u0435\u0442\u0440\u043e \u043f\u043e\u043f-\u0440\u043e\u043a-\u0448\u0430\u043d\u0441\u043e\u043d \u043c\u0443\u0437\u044b\u043a\u0430 1970\u0445-2000\u0445, \u043b\u0443\u0447\u0448\u0430\u044f \u0437\u0430\u0431\u0443\u0433\u043e\u0440\u043d\u0430\u044f \u043c\u0443\u0437\u044b\u043a\u0430 \u0440\u0435\u0442\u0440\u043e \u044d\u043f\u043e\u0445\u0438.",
    "station_for_station": "radio",
    "preview_gettrackmasterstatus_for_landr_mastering_v1": "Rate Limits: 100 requests per minute\n            ",
    "preview_getdownloadpath_for_landr_mastering_v1": "Rate Limits: 100 requests per minute\n            ",
    "master_getdownloadpath_for_landr_mastering_v1": "Rate Limits: 100 requests per minute\n            ",
    "track_credits_for_spotify": "Get track credits",
    "get_playlist_for_spotify": "Get playlist",
    "get_concert_for_spotify": "Get Concert",
    "shazam_songs_get_details_for_shazam": "Get mapping id information between systems to use with other endpoints.",
    "auto_complete_for_shazam": "Get suggestions by word or phrase",
    "songs_get_related_artist_for_shazam": "Get artist related to a song",
    "user_contributions_annotations_for_genius_song_lyrics": "User Contributions (annotations)",
    "artist_details_for_genius_song_lyrics": "An artist is how Genius represents the creator of one or more songs (or other documents hosted on Genius). It's usually a musician or group of musicians.",
    "album_appearances_for_genius_song_lyrics": "Album Appearances",
    "vkoorsound_for_vkoorsound": "VkoorSound",
    "get_user_playlists_for_spotify_v2": "Fetch all public playlists of a specific user.",
    "get_playlist_details_for_spotify_v2": "Get playlist details like: playlist_name, description, thumbnail, likes_count, tracks_count & details of each individual songs (upto 100) like: song_name, url, artist_name, thumbnail &  duration.",
    "search_for_spotify_v2": "Search Spotify",
    "your_vinyl_store_for_yourvinylstore": "Best vinyl records in your collection",
    "your_vinyl_store_copy_for_yourvinylstore": "Best vinyl records in your collection",
    "year_end_hot_100_songs_for_billboard_v2": "Get the Year-End Hot 100 Songs chart.",
    "year_end_billboard_200_albums_for_billboard_v2": "Get the Year-End Billboard 200 Albums chart.",
    "year_end_top_artists_for_billboard_v2": "Get the Year-End Top Artists chart.",
    "charts_track_for_shazam": "Get all popular songs in specific chart",
    "shazam_songs_list_similarities_for_shazam": "Get similar (You may also like) songs",
    "artists_get_details_for_shazam": "Get detailed information of an artist",
    "artist_overview_for_spotify": "Get artist overview",
    "artist_albums_for_spotify": "Get artist albums",
    "user_profile_for_spotify": "Get user profile",
    "get_top_songs_for_getsongs": "tujhe dekha toh as of now",
    "youtube_topartist_feat_year_for_musicdata_api": "Youtube top artist including features in music videos by year",
    "youtube_trending_countries_countryid_for_musicdata_api": "Youtube trending music and non-music videos in all countries / or in a specific country. Leave {countryID} blank for all countries.",
    "youtube_weekly_year_nthweek_for_musicdata_api": "Most viewed youtube music videos on ...nth week of  ....year  (E.g 21st week of 2019: /youtube/weekly/2019/21)",
    "xmusic_song_info_for_xmusic": "Test apis xmusic song info",
    "search_indie_songs_by_filters_for_indie_songs_distrokid_unsigned": "Search song by track name,  artist name, label, release date, ISRC, composer name, genre",
    "get_top_50_indie_songs_for_indie_songs_distrokid_unsigned": "Get TOP 50 indie songs based on their daily stream increase ratio",
    "get_csv_of_top_50_indie_songs_for_indie_songs_distrokid_unsigned": "Get TOP 50 indie songs by their daily stream increase in a CSV format using URL",
    "album_for_apple_music": "Get entire Playlist data of any album from Apple Music.",
    "single_track_for_apple_music": "Get Single track data from Apple Music",
    "song_concatenation_for_miza": "Joins one or more audio or video files into a single file.\nInputs are specified by URLs specified by query parameters \"u1\", \"u2\", etc. These URLs may be playlists, which will perform the concat operation on all contained tracks.\nOutput format supports most video and audio formats. See https://mizabot.xyz/downloader for list of available formats, as well as test usage of this API.\nMay or may not be the same input format, codec, or framerate/resolution/aspect ratio (if it is a video), but will take much longer to provide a response compared to the download endpoint, because it must finish all conversion before it can begin streaming.\nRedirects to a URL which will return the output file. This download link will be reusable, but temporary.",
    "song_download_convert_for_miza": "Searches, downloads, converts, and uploads the song URL simultaneously, streaming the file with very little delay. Song URL may be from any platform supported by Youtube-DL/FFmpeg, which are used as part of the backend.\nThis endpoint is the fastest to respond out of all the available ones for song downloading, but will only support *mp3*, *opus*, *ogg*, and *wav* as output formats (no video downloading). Quality will be maximum by default, or 224kbps if conversion is required. For those wishing to use this API as a backend for their own Discord bot, the opus format output is compatible with direct playback through Discord's voice websocket.\nFor testing purposes, the *download* query key may be changed to *view*, which will stream the same file, but without the attachment disposition, allowing it to play as audio in a browser while being downloaded.",
    "song_trimming_extending_for_miza": "Trims a song or video, outputting as a URL (similar to the concatenation function). Like the output from concat, one must send a GET request to the URL returned in order to retrieve the actual output.\nSpecify trim start and end after the URL, optionally omitting them by replacing them with an empty string or dash (-). Accepts input in number of seconds, as well as time formats such as *2h30m* or *1:53:30*.\nIf the trim end passes the end of the song, it will automatically be extended by looping back from the beginning. This is *much* faster than concatenating multiple copies of the same song, as it skips re-encoding every single copy, allowing it to produce 10-hour extensions of songs or videos in seconds. Output format can additionally be specified after trim end.\nSee https://mizabot.xyz/downloader for more info as well as test usage of this endpoint.",
    "get_user_playlists_for_youtube_music_api_detailed_": "Retrieve a list of playlists for a given user. Call this function again with the returned params to get the full list.",
    "get_artist_albums_for_youtube_music_api_detailed_": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases",
    "trends_for_youtube_music_api_detailed_": "Get latest charts data from YouTube Music: Top songs, top videos, top artists and top trending videos. Global charts have no Trending section, US charts have an extra Genres section with some Genre charts.",
    "teste_for_shoxbps": "teste",
    "get_download_url_mp3_mp4_for_youtube_mp3_converter": "Get Download URL",
    "ip_address_check_for_miza": "Retrieves the host (server) and remote (your) IP addresses. A fast and responsive endpoint that is also handy for checking whether the service is online.",
    "public_search_introspection_for_musicapi": "Allows you to fetch all different enums needed for sending API requests",
    "random_song_song_s_album_information_out_of_artist_for_halsey_lyric_snippets": "Returns album information and random song information",
    "all_songs_from_artist_for_halsey_lyric_snippets": "This endpoint retrieves all songs by the specified artist and returns them in the response.",
    "album_by_id_for_halsey_lyric_snippets": "returns album information when searched by {id}",
    "artist_100_for_billboard": "Provide the Artist 100 chart information.",
    "billboard_global_excl_us_for_billboard": "Billboard Global Excl. US. Available from SEPTEMBER 19, 2020",
    "hot_100_for_billboard": "Provide the Hot 100 chart information",
    "get_album_details_for_bandamp_downloader_api": "Fetch:\n- Album Name\n- 2. Album Description\n- 3. Album Thumbnail URL\n- 4. Artist Name\n- 3. Total Tracks Count\n- 4. Each Track URLs\n- 5. Each Track Names\n- 6. Each Track Durations",
    "download_bandcamp_track_for_bandamp_downloader_api": "Supply any Bandcamp track URL & get downloadable links, alongwith:\n\n- Track name\n- Related Album Name\n- Track Published date\n- Duration\n- Thumbnail\n- Artist name\n- Downloadable Mp3 file link",
    "teste_for_baixar_musicas_mp3_completas": "teste",
    "web_page_lookup_for_genius_song_lyrics": "A web page is a single, publicly accessible page to which annotations may be attached. Web pages map 1-to-1 with unique, canonical URLs.\n\nInformation about a web page retrieved by the page's full URL (including protocol). The returned data includes Genius's ID for the page, which may be used to look up associated referents with the /referents endpoint.\n\nData is only available for pages that already have at least one annotation.",
    "chart_songs_for_genius_song_lyrics": "Chart: Songs",
    "user_accomplishments_for_genius_song_lyrics": "User Accomplishments",
    "song_search_for_miza": "Searches for a song from popular song platforms.\nThe API will search YouTube for the item by default. Prepend *scsearch:* to the search term to specify a search from SoundCloud, *spsearch:* for Spotify, or *bcsearch:* for BandCamp.\nUnlike all other endpoints provided by this API, this endpoint can actually be used infinitely free of charge or quota. Simply direct your request directly to [http://i.mizabot.xyz/ytdl?search=](http://i.mizabot.xyz/ytdl?search=) instead of rapidapi's forwarded URL. This may be done for all other endpoints too, however there will be a rate limit in place.",
    "get_artist_s_albums_for_musiclinkssapi": "Given a **Spotify url**,  returns basic details about albums of artist.",
    "search_by_query_for_musiclinkssapi": "Given a **query** and **type** of element, this returns details about *tracks*, *albums* and *artists*.",
    "search_by_url_for_musiclinkssapi": "Given a **Spotify url**, this returns details about *tracks*, *albums* and *artists*.",
    "search_for_spotify_data_api": "Search for a one of the types \"album\", \"artist\", \"playlist\", \"track\", \"show\", \"episode\"",
    "get_new_releases_for_spotify_data_api": "Get new releases albums from one of the countrys :\nAD, AE, AG, AL, AM, AO, AR, AT, AU, AZ, \nBA, BB, BD, BE, BF, BG, BH, BI, BJ, BN, \nBO, BR, BS, BT, BW, BZ, CA, CD, CG, CH, \nCI, CL, CM, CO, CR, CV, CW, CY, CZ, DE, \nDJ, DK, DM, DO, DZ, EC, EE, EG, ES, ET, \nFI, FJ, FM, FR, GA, GB, GD, GE, GH, GM, \nGN, GQ, GR, GT, GW, GY, HK, HN, HR, HT, \nHU, ID, IE, IL, IN, IQ, IS, IT, JM, JO, \nJP, KE, KG, KH, KI, KM, KN, KR, KW, KZ, \nLA, LB, LC, LI, LK, LR, LS, LT, LU, LV, \nLY, MA, MC, MD, ME, MG, MH, MK, ML, MN, \nMO, MR, MT, MU, MV, MW, MX, MY, MZ, NA, \nNE, NG, NI, NL, NO, NP, NR, NZ, OM, PA, \nPE, PG, PH, PK, PL, PS, PT, PW, PY, QA, \nRO, RS, RW, SA, SB, SC, SE, SG, SI, SK, \nSL, SM, SN, SR, ST, SV, SZ, TD, TG, TH, \nTJ, TL, TN, TO, TR, TT, TV, TW, TZ, UA, \nUG, US, UY, UZ, VC, VE, VN, VU, WS, XK,\nZA, ZM, ZW",
    "get_album_for_spotify_data_api": "Get album by album ID.",
    "get_artist_for_youtube_music_api_detailed_": "Get information about an artist and their top releases (songs, albums, singles, videos, and related artists). The top lists contain pointers for getting the full list of releases.",
    "get_songs_with_all_metadata_and_stats_play_counts_for_indie_songs_distrokid_unsigned": "Get all tracks with full metadata including recent Spotify play counts.\n\nAlso Apple song URL, Spotify song URL, Composer name, ISRC, Label, Release date, Genres, Apple IDs, Spotify IDs are included.",
    "spotify_topalbums_for_musicdata_api": "Spotify most streamed albums of all time",
    "youtube_topviews_artist_nationality_for_musicdata_api": "Youtube top viewed music video by X artist. (X: nationality of the artist). For example: \"/youtube/topviews/vietnamese\"",
    "get_countries_for_50k_radio_stations": "Get country list",
    "get_genres_for_50k_radio_stations": "Get genre list",
    "get_cities_for_50k_radio_stations": "Get city list",
    "master_gettrackmasterstatus_for_landr_mastering_v1": "Rate Limits: 100 requests per minute\n            ",
    "webhook_getwebhookconfiguration_for_landr_mastering_v1": "Get the webhook configuration.\n            ",
    "songs_v2_get_details_for_shazam": "Get details information of specific song",
    "songs_list_artist_top_tracks_deprecated_for_shazam": "List top tracks of specific artist",
    "artists_get_top_songs_for_shazam": "Get top songs of an artist",
    "getsongs_for_musiczone": "get song details",
    "holiday_100_songs_for_billboard_api": "Provide the Greatest of All Time Holiday 100 Songs chart information",
    "australia_songs_for_billboard_api": "Provide the Australia Songs chart information",
    "latin_artists_for_billboard_api": "Provide the Greatest of All Time Latin Artists chart information",
    "tunein_for_tunein": "Radio",
    "main_endpoint_for_l_yrics": "Get the song lyrics",
    "billboard_hot_100_for_billboard_v2": "Get the Billboard Hot 100 chart.",
    "list_artist_concerts_for_spotify_scraper": "This endpoint lists all concerts of an artist.",
    "list_album_tracks_for_spotify_scraper": "This endpoint lists tracks of an album. Pagination scraping is supported.",
    "get_playlist_metadata_for_spotify_scraper": "This endpoint fetches full details of a playlist.",
    "view_song_for_view_song": "View song",
    "view_song_copy_for_view_song": "View song",
    "apitest_for_myapi": "aaaaaaaaaaaaaaaa",
    "billboard_200_for_billboard": "Provide the Billboard 100 chart information.",
    "billboard_global_200_for_billboard": "Provide Billboard Global 200 chart information. Available from SEPTEMBER 19, 2020",
    "get_album_tracks_for_spotify_data_api": "Get album tracks by album ID",
    "get_multiple_artists_for_spotify_data_api": "Get multiple artist with one request max 5 at once. Each id separeted by ,",
    "youtube_video_videoid_for_musicdata_api": "Specific Youtube music video statistics",
    "youtube_weekly_for_musicdata_api": "Most viewed Youtube music videos weekly",
    "youtube_toplikes_for_musicdata_api": "Top Youtube liked videos of all time",
    "get_user_profile_and_public_playlists_for_spotify_data_api": "Get useer profile and public playlists by user ID.",
    "get_artist_related_artists_for_spotify_data_api": "Get artist related artist by artis id",
    "get_futured_playlists_for_spotify_data_api": "Get futured playilsts by country from one of the countrys and timestamp date example 2022-10-20 :\nAD, AE, AG, AL, AM, AO, AR, AT, AU, AZ, \nBA, BB, BD, BE, BF, BG, BH, BI, BJ, BN, \nBO, BR, BS, BT, BW, BZ, CA, CD, CG, CH, \nCI, CL, CM, CO, CR, CV, CW, CY, CZ, DE, \nDJ, DK, DM, DO, DZ, EC, EE, EG, ES, ET, \nFI, FJ, FM, FR, GA, GB, GD, GE, GH, GM, \nGN, GQ, GR, GT, GW, GY, HK, HN, HR, HT, \nHU, ID, IE, IL, IN, IQ, IS, IT, JM, JO, \nJP, KE, KG, KH, KI, KM, KN, KR, KW, KZ, \nLA, LB, LC, LI, LK, LR, LS, LT, LU, LV, \nLY, MA, MC, MD, ME, MG, MH, MK, ML, MN, \nMO, MR, MT, MU, MV, MW, MX, MY, MZ, NA, \nNE, NG, NI, NL, NO, NP, NR, NZ, OM, PA, \nPE, PG, PH, PK, PL, PS, PT, PW, PY, QA, \nRO, RS, RW, SA, SB, SC, SE, SG, SI, SK, \nSL, SM, SN, SR, ST, SV, SZ, TD, TG, TH, \nTJ, TL, TN, TO, TR, TT, TV, TW, TZ, UA, \nUG, US, UY, UZ, VC, VE, VN, VU, WS, XK,\nZA, ZM, ZW",
    "specified_song_for_halsey_lyric_snippets": "This endpoint retrieves the specified song by name and returns it in the response.",
    "all_songs_from_a_specified_artist_and_specified_album_for_halsey_lyric_snippets": "This endpoint retrieves all songs from the specified album by the specified artist and returns them in the response.",
    "all_albums_from_artist_for_halsey_lyric_snippets": "This endpoint retrieves all albums by the specified artist and returns them in the response.\nUse \"Halsey\" for Halsey's music",
    "greatest_of_all_time_top_dance_club_artists_for_billboard_api_v2": "Greatest of All Time Top Dance Club Artists chart.\nSee response example",
    "greatest_of_all_time_top_country_artists_for_billboard_api_v2": "Greatest of All Time Top Country Artists chart.\nSee response example",
    "greatest_of_all_time_holiday_100_songs_for_billboard_api_v2": "Greatest of All Time Holiday 100 Songs chart.\nSee response example",
    "track_credits_for_spotify_v3": "Get track credits",
    "top_20_by_monthly_listeners_for_spotify_v3": "Monthly listeners in millions.",
    "artist_discography_overview_for_spotify_v3": "Get artist discography overview",
    "random_song_from_a_specific_artist_and_specified_album_for_halsey_lyric_snippets": "This endpoint retrieves a random song from the specified album by the specified artist and returns it in the response.",
    "song_by_id_for_halsey_lyric_snippets": "returns song when searched by id",
    "random_song_out_of_artist_for_halsey_lyric_snippets": "This endpoint retrieves a random song by the specified artist and returns it in the response.",
    "top_20_by_followers_for_spotify_v3": "Amount of followers in millions.",
    "artist_appears_on_for_spotify_v3": "Get artist appears on albums (max 50)",
    "get_albums_for_spotify_v3": "Get one or more albums",
    "artist_details_single_for_spotify_v2": "Get Spotify artist details",
    "audio_analysis_for_spotify_v2": "Get audio analysis of any track",
    "get_track_details_single_for_spotify_v2": "Get track_name, thumbnail, duration & artist_name of any Spotify Track. Album/Podcast/Show not supported.",
    "getallcountry_for_radio_world_75_000_worldwide_fm_radio_stations_": "Get all countries Name based on.\n- limit\n- page\n- order",
    "getallstation_for_radio_world_75_000_worldwide_fm_radio_stations_": "You will get all recent stations  here, based on.\n- limit (integer)\n- order (string)\n- page (integer)\n- random (boolean)",
    "getstationbycountry_for_radio_world_75_000_worldwide_fm_radio_stations_": "Getting all Stations by country based on.\n- country id\n- limit\n- page\n- order",
    "albums_get_details_for_shazam": "Get detailed album of an album",
    "artists_get_latest_release_for_shazam": "Get latest release of an artist",
    "get_watch_playlist_for_youtube_music_api_detailed_": "Get a watch list of tracks. This watch playlist appears when you press play on a track in YouTube Music.\n\n\nList of watch playlist items. The counterpart key is optional and only appears if a song has a corresponding video counterpart (UI song/video switcher).",
    "search_for_youtube_music_api_detailed_": "Search YouTube music Returns results within the provided category.",
    "searchstation_for_radio_world_75_000_worldwide_fm_radio_stations_": "Search Radio station by keywords.\n- keyword = radio name, country name\n- limit = item limitation per page ***default 10***\n- page = page number to be displayed ***default 1***\n- order = order by ASCENDING/DISASCENDING  *(use only ASC or DESC)* ***default ASC***",
    "247naijabuzz_media_for_247naijabuzz": "For Flash Music Download",
    "downloader_for_mp3_downloader": "MP3 Downloader",
    "top_artists_for_billboard_api": "Provide the YEAR-END Top Artists chart information\n\nIf `year` is not supplied, will default to last year.",
    "portugal_songs_for_billboard_api": "Provide the Portugal Songs chart information",
    "hot_100_for_billboard_api": "Provide the HOT 100 chart information",
    "list_top_tracks_for_spotify_scraper": "This endpoint lists weekly or daily top tracks at any time and in any country.",
    "get_episode_downloadable_audio_for_spotify_scraper": "This endpoint fetches full details of an episode. Downloadable URL of full audio is available for **some** of the episodes.",
    "user_details_for_spotify_v2": "get user details of any Spotify user",
    "youtube_trending_overall_for_musicdata_api": "Treding Youtube (including non-music) videos worldwide",
    "youtube_topviews_published_year_for_musicdata_api": "Top Youtube viewed videos that was published in year X (X: 2010 - now)",
    "youtube_topcomments_for_musicdata_api": "Top Youtube commented videos of all time",
    "spotify_music_for_spotify_top_charts_2022": "Spotify top chart songs 2022",
    "chile_songs_for_billboard_api_v2": "Chile Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week",
    "portugal_songs_for_billboard_api_v2": "Portugal Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week",
    "greatest_of_all_time_pop_songs_for_billboard_api_v2": "Greatest of All Time Pop Songs chart.\nSee response example",
    "hot_100_songs_by_women_for_billboard_api": "Provide the Greatest of All Time Hot 100 Songs by Women chart information",
    "top_country_albums_for_billboard_api": "Provide the Greatest of All Time Top Country Albums chart information",
    "malaysia_songs_for_billboard_api": "Provide the Malaysia Songs chart information",
    "charts_get_top_songs_in_country_for_shazam_api": "get top osngs in country",
    "artist_get_details_for_shazam_api": "Retrieving information from an artist profile",
    "charts_get_top_songs_in_country_by_genre_for_shazam_api": "get top songs in country by genre",
    "spotify_artist_artistid_for_musicdata_api": "Get specific Spotify artist details. \nAdd \"_info\" or leave blank for general information, \"_songs\" for all songs, \"_albums\" for all albums",
    "youtube_topviews_year_for_musicdata_api": "Top Youtube viewed videos all time / on a specific year (2007 - now). Leave {year} blank for all time results",
    "spotify_topsongs_year_for_musicdata_api": "Spotify most streamed songs of all time / of {year} . Leave {year} blank for all time results",
    "specified_album_information_from_artist_for_halsey_lyric_snippets": "This endpoint retrieves the specified album by the specified artist and returns it in the response.",
    "user_contributions_articles_for_genius_song_lyrics": "User Contributions (articles)",
    "artist_activity_for_genius_song_lyrics": "Artist Activity",
    "get_user_for_youtube_music_api_detailed_": "Retrieve a user\u2019s page. A user may own videos or playlists.",
    "mood_categories_for_youtube_music_api_detailed_": "Returns mood categories.",
    "gethomepage_for_radio_world_75_000_worldwide_fm_radio_stations_": "*We have made an option for you to display result in your landing/home page. So you don't have to work hard to achieve this.*\nGet limited radios to show in landing/home page, based on.\n- limit",
    "artist_discography_overview_for_spotify": "Get artist discography overview",
    "artist_featuring_for_spotify": "Artist featuring",
    "artist_singles_for_spotify": "Get artist singles",
    "random_song_for_k_pop": "Get random K-POP song",
    "random_idol_for_k_pop": "Get random idol",
    "girl_groups_for_k_pop": "Get info of girl-groups",
    "album_tracks_for_spotify_web": "Get album tracks",
    "artist_related_for_spotify_web": "Artist related",
    "track_lyrics_for_spotify_web": "Get track lyrics",
    "retrieve_file_for_miza": "Retrieves a file hosted by the server. This link is usually obtained by replacing the /p/ path in the /merge and /edit endpoint responses with /f/ or /d/. The request fails if the file requested does not exist or has been deleted.",
    "boy_groups_for_k_pop": "Get boy-groups info",
    "random_girl_group_for_k_pop": "Get random girl-group",
    "billboard_global_200_for_billboard_v2": "Get the Billboard Global 200 chart.",
    "greatest_of_all_time_artists_for_billboard_v2": "Get the Greatest of All Time Artists chart.",
    "myplayvv_for_myplayvv": "myplayvv",
    "getallquotes_for_radio_world_75_000_worldwide_fm_radio_stations_": "You will get all the quotes here based on.\n- limit\n- page",
    "get_home_page_overview_for_spotify_scraper": "This endpoint fetches trending information displayed on the Spotify home page as an incognito visitor.",
    "download_track_on_youtube_3_quotas_for_spotify_scraper": "Provides a solution to download a Spotify track on YouTube and returns URLs of audio files. (Powered by [Youtube Media Downloader](https://rapidapi.com/DataFanatic/api/youtube-media-downloader/). Get a better price by subscribing to and using it directly.)",
    "download_track_on_soundcloud_3_4_quotas_for_spotify_scraper": "Provides a solution to download a Spotify track on SoundCloud. HQ (4 Quotas) and SQ (3 Quotas) audios. (Tutorial: [How to Use SoundCloud Audio URLs](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-audio-urls)) (Powered by [SoundCloud Scraper](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/). Get a better price by subscribing to and using it directly.)",
    "top_artists_female_for_billboard_api": "Provide the YEAR-END Top Artists - Female chart information\n\nIf `year` is not supplied, will default to last year.",
    "adult_pop_songs_for_billboard_api": "Provide the Greatest of All Time Adult Pop Songs chart information",
    "brazil_songs_for_billboard_api": "Provide the Brazil Songs chart information",
    "tangga_lagu_for_kotak7": "Daftar tangga lagu",
    "artis_for_kotak7": "Daftar artis",
    "artis_info_for_kotak7": "Artis info",
    "song_comments_for_genius_song_lyrics": "Song Comments",
    "user_contributions_suggestions_for_genius_song_lyrics": "User Contributions (suggestions)",
    "user_following_for_genius_song_lyrics": "User Following",
    "get_artists_for_spotify_v3": "Get one or more artists",
    "playlist_tracks_for_spotify_v3": "Get playlist tracks",
    "artist_overview_for_spotify_v3": "Get artist overview",
    "get_playlist_for_spotify_data_api": "Get playlist by ID.",
    "get_episode_for_spotify_data_api": "Get episode from episode ID.",
    "get_channels_for_50k_radio_stations": "Get channel list",
    "get_show_for_spotify_data_api": "Get show by show ID.",
    "download_track_for_latest_spotify_downloader": "Download a track by passing the details from the fetch track API",
    "fetch_track_details_for_latest_spotify_downloader": "Download a track mp3 file returned by the download endpoint",
    "youtube_artist_artistname_for_musicdata_api": "Get details about an artist",
    "youtube_trending_for_musicdata_api": "Trending Youtube music videos worldwide now",
    "trending_and_top_charts_for_soundcloud_charts_api": "Get trending (New & Hot) and top charts from SoundCloud",
    "get_song_for_youtube_music_api_detailed_": "Returns metadata and streaming information about a song or video.",
    "artist_featuring_for_spotify_v3": "Artist featuring",
    "artist_singles_for_spotify_v3": "Get artist singles",
    "billboard_200_for_billboard_v2": "Get the Billboard 200 chart.",
    "artist_100_for_billboard_v2": "Get the Artist 100 chart.",
    "get_radio_playlist_for_spotify_v3": "Get artist or song radio",
    "album_tracks_for_spotify_v3": "Get album tracks",
    "adult_alternative_songs_for_billboard_api": "Provide the Greatest of All Time Adult Alternative Songs chart information",
    "top_labels_for_billboard_api": "Provide the YEAR-END Top Labels chart information\n\nIf `year` is not supplied, will default to last year.",
    "get_tracks_for_spotify": "Get one or more tracks",
    "artist_appears_on_for_spotify": "Get artist appears on albums (max 50)",
    "random_boy_group_for_k_pop": "Get random boy-group",
    "artist_singles_for_spotify_web": "Get artist singles",
    "album_metadata_for_spotify_web": "Get album metadata",
    "artist_overview_for_spotify_web": "Get artist overview",
    "album_metadata_for_spotify_v3": "Get album metadata",
    "user_followers_for_spotify_v3": "Get user followers",
    "get_tracks_for_spotify_web": "Get one or more tracks",
    "melodyn_for_melodyn": "melodyn",
    "get_albums_for_spotify": "Get one or more albums",
    "album_tracks_for_spotify": "Get album tracks",
    "user_followers_for_spotify": "Get user followers",
    "youtube_24h_for_musicdata_api": "Youtube most viewed music video past 24 hours",
    "playlist_tracks_for_spotify": "Get playlist tracks",
    "artist_discovered_on_for_spotify": "Artist discovered on playlists (max 50)",
    "greatest_of_all_time_hot_100_songs_for_billboard_v2": "Get the Greatest of All Time Hot 100 Songs chart.",
    "prueb_for_deepsound": "Prueb",
    "south_africa_songs_for_billboard_api": "Provide the South Africa Songs chart information",
    "czech_republic_songs_for_billboard_api": "Provide the Czech Republic Songs chart information",
    "denmark_songs_for_billboard_api": "Provide the Denmark Songs chart information",
    "confusing_for_gg": "i don't know what i'm doing",
    "list_weekly_top_albums_for_spotify_scraper": "This endpoint lists weekly top albums at any time and in any country.",
    "list_genre_contents_for_spotify_scraper": "This endpoint lists sub-genres, playlists, podcasts, albums, etc. of a genre. Pagination scraping is supported.",
    "get_user_profile_for_spotify_scraper": "This endpoint fetches a user's profile.",
    "artist_discography_overview_for_spotify_web": "Get artist discography overview",
    "user_profile_for_spotify_web": "Get user profile",
    "get_playlist_for_spotify_web": "Get playlist",
    "top_artists_male_for_billboard_api": "Provide the YEAR-END Top Artists - Male chart information\n\nIf `year` is not supplied, will default to last year.",
    "france_songs_for_billboard_api": "Provide the France Songs chart information",
    "netherlands_songs_for_billboard_api": "Provide the Netherlands Songs chart information",
    "youtube_24h_type_for_musicdata_api": "Youtube most viewed music video by content language type: (English, Spanish, Asian or Other)",
    "youtube_topartist_year_for_musicdata_api": "Youtube top artist of all time / or at a specific year.\nLeave {year} blank for all time data, or specify a year.",
    "get_artist_for_spotify_data_api": "Get artist by ID",
    "song_recommendations_for_genius_song_lyrics": "Song Recommendations",
    "annotation_versions_for_genius_song_lyrics": "Annotation Versions",
    "list_user_followers_for_spotify_scraper": "This endpoint lists part of a user's followers.",
    "list_top_artists_for_spotify_scraper": "This endpoint lists weekly or daily top artists at any time and in any country.",
    "list_user_recently_played_artists_for_spotify_scraper": "This endpoint lists recently played artists of a user.",
    "get_all_data_from_api_for_androidapi": "read all data from api to show on detail screen",
    "getorderbyid_for_androidapi": "get data  by Id",
    "ask_stories_for_yc_hacker_news_official": "Up to 200 of the latest Ask HN Stories!",
    "top_stories_for_yc_hacker_news_official": "Returns the current top 100 stories.",
    "user_by_id_for_yc_hacker_news_official": "Users are identified by case-sensitive ids",
    "1_for__": "\u3147\u3148\u3147",
    "api_followme_uploadfileanonymously_for_fm_api_release_v0_1": "The aim of the FollowMe Tracking Servie API is to enable developers on brining our tracking services to more convenient and accessible platforms for users",
    "getuserbyname_for_petstoreapi2_0": "",
    "getinventory_for_petstoreapi2_0": "Returns a map of status codes to quantities",
    "logoutuser_for_petstoreapi2_0": "",
    "search_by_company_name_for_uganda_company_data": "Perform a search on the Uganda company register by name",
    "567_live_t_i_app_m_i_nh_t_2022_t_i_trang_ch_ch_nh_th_c_for_567_live_app_2022": "567 Live c\u00f3 trang ch\u1ee7 567live.io duy nh\u1ea5t ch\u00ednh x\u00e1c. Cung c\u1ea5p \u0111\u1ee7 link t\u1ea3i 567 live app an to\u00e0n cho b\u1ea1n phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t.\n\u0110\u1ecba ch\u1ec9 : 99 Gi\u1ea3i Ph\u00f3ng, \u0110\u1ed3ng T\u00e2m, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i\nGoogle map https://www.google.com/maps?cid=7118718670140148249 \nHotline 0978720550\nGmail:  567liveapp@gmail.com\nWebsite https://567live.io/ \nhttps://sites.google.com/view/567live-app/\nhttps://567live.io/tai-ve/567live-apk \nhttps://567live.io/tai-ve/567live-ios\nhttps://567live.io/thu-muc/app-live/ \nhttps://folkd.com/user/567liveapp\nhttps://sketchfab.com/567liveapp\nhttps://forums.iis.net/members/567liveapp.aspx\nhttps://wefunder.com/567live\nhttps://www.ultimate-guitar.com/u/567liveapp\nhttps://www.thingiverse.com/567liveapp/designs\nhttps://www.tickaroo.com/user/61fe0be0ed68b63b06bd40d5\nhttps://www.goodreads.com/user/show/147284265-567live\nhttps://gifyu.com/567liveapp\nhttps://ignitiondeck.com/id/dashboard/?backer_profile=153894\nhttps://www.sqlservercentral.com/forums/user/567liveapp\nhttps://abroadsanjal.com/index.php?qa=user&qa_1=567live\nhttps://beermapping.com/account/567liveapp\nhttps://www.zoimas.com/profile/567liveapp1/about\nhttps://www.eduvision.edu.pk/counseling/index.php?qa=user&qa_1=567liveapp\nhttps://567live.hpage.com/\nhttps://www.leetchi.com/en/c/5Yj6J40r\nhttps://public.tableau.com/app/profile/567live\nhttps://www.brownbook.net/user-profile/4782891\nhttps://amara.org/en/profiles/profile/MndaPixiSx4HXYOyjdeCtoryc1vYtjp933bdJZs6MYo/\nhttps://cycling74.com/author/6201cfb5d540c65659fc25e7\nhttps://api.rakuten.net/user/567liveapp\nhttps://lnk.bio/567live\nhttps://www.pozible.com/profile/567live\nhttps://new.edmodo.com/home\nhttp://www.nfomedia.com/profile?uid=rKfQfiD&result=ep5dbp81\nhttps://degreed.com/profile/567liveapp/overview\nhttps://bittube.tv/profile/567live\nhttps://git.feneas.org/567liveapp\nhttps://forum.singaporeexpats.com/memberlist.php?mode=viewprofile&u=370389\nhttps://sallatunturinkoulu.purot.net/profile/567liveapp\nhttps://liveviewsports.com/community/profile/567live/\nhttp://q2a.sydt.com.tw/index.php?qa=user&qa_1=567live",
    "dynamic_qr_codes_for_custom_qr_code": "Generate dynamic QR Codes with custom colors for Qr Code Background, Qr Code Body, eyes and eyeballs.  Choose designs for QR Body, QR eyes and eyeballs. Encode URL, TEXT, EMAIL, PHONE, SMS, VCARD, LOCATION, FACEBOOK, TWITTER, YOUTUBE, WIFI, EVENT, BITCOIN  in your QR Code.",
    "healthcare_mailing_for_healthcaremailing": "Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list.",
    "testapi_ep_for_test": "afeaw",
    "contacts_list_for_verticalresponse": "",
    "lists_list_for_verticalresponse": "",
    "messages_list_for_verticalresponse": "",
    "private_endpoint_for_sapling_intelligence": "https://api.sapling.ai/",
    "email_for_soti_sync": "Fetch Customer Email",
    "enterprise_customer_for_soti_sync": "Is he a Enterprise Customer?",
    "total_amount_for_soti_sync": "Total Amount to be paid",
    "news_for_news": "news",
    "rating_for_comparable_companies": "Enables the user to rate the output returned by the /similar API. It is advisable to refresh results after ratings have been submitted as the algorithm fine-tunes its output based on them. Re-searching a company is always free of charge.\n\n*Example*: If a user searches similar companies for \"unilever.com\", and the first result is \"nestle.com\", then the user is able to rate how similar those companies are on a scale from 0-10 through this API. If the user submits a rating of 0, that comparable company (\"nestle.com\") will not show up when searching the same company (\"unilever.com\") in the future. If the user submits a rating higher than 5, then the algorithm will fine-tune its output to include more companies similar to that one (\"nestle.com\").\n\n*Including user ratings in the output is completely optional*.",
    "logo_for_comparable_companies": "The Logo API is used to show company logos in the frontend. The API link is already included in results returned by the Similar companies API.",
    "contacts_for_comparable_companies": "Returns a list of contact persons (incl. email addresses) at a given company.\n\nQuerying the same domain multiple times will only cost a single search credit.\n\nQuerying a domain that you have already queried through the /similar endpoint will not cost any credit.",
    "search_for_norwegian_license_plate_api": " ",
    "target_url_for_web_scraping_and_proxy": "To make a request, you simply include the target URL  API will return the data from that site. Optional configuration options, like proxies, location of the request, and more are possible to include.",
    "get_device_asset_by_identifier_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier",
    "get_device_asset_by_identifier_copy_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier",
    "get_rentals_for_deal_catcher": "Get rentals",
    "getallrecordssince_for_360_business_tool": "Get all data modified since",
    "getcasessince_for_360_business_tool": "Get cases modified since",
    "getcompanies_for_360_business_tool": "Get all companies",
    "something_for_test_v14": "ad",
    "root_endpoint_for_my_public_interface": "Description",
    "asd_for_test_new_team": "asd",
    "sa_for_test_v3": "a",
    "get_for_cloudways_v2": "Response Class (Status 200)",
    "testendpoint_for_test_v20": "test",
    "properties_detail_for_realty_in_au": "Get detailed information of a property",
    "schools_list_for_realty_in_au": "List schools around a GEO location",
    "auto_complete_for_realty_in_au": "Get suggestions by term or phrase. The returned data will be used with .../properties/list endpoint",
    "validate_php_action_validate_id_user_example_com_for_check_mail": "",
    "domain_url_metrics_for_domain_authority": "This Will Get Domain Authority and Page Rank For Any Domain/URL",
    "price_after_discount_for_soti_sync": "SOTI Sync ticket price after discount",
    "customer_name_for_soti_sync": "Fetch Customer Name",
    "get_billionaires_for_forbes_worlds_billionaires_list": "This method can get you full list of Forbes billionaires by year.If you want you can search by name or filtered by country or country of citizenship. This api can get list of people page by page and you can search max 100 limit per one request.",
    "download_pass_for_passbook": "",
    "list_passes_for_passbook": "",
    "search_for_french_vehicle_license_plate_api": " ",
    "crawler_for_explorarc_s_internel_links_crawler": "The Best API t Fetch all the Internel Links from an given URL",
    "proxy_detection_api_for_proxy_detection": "API will detect if an ip address is related to a proxy of any kind. Checks through a database of over 26 million proxies.",
    "properties_lookup_for_realty_in_au": "Look for off-market property by id",
    "ff_for_b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e": "fff",
    "https_dev_is_api_entytle_com_for_testpocapi": "https://dev-is-api.entytle.com",
    "companies_id_data_for_german_company_data_v2": "This endpoint returns the basic information of the company with the given identifier. The information includes all the core data (name, address), web data if known (phone, fax, email, url, social media profiles), legal information (registry, founding date, capital), up to three industries, and revenue and employees class.",
    "companies_id_people_for_german_company_data_v2": "This endpoint returns the information about people associated with the company with the given identifier. The information includes names, roles, email addresses, and phone numbers, if available.",
    "companies_id_events_for_german_company_data_v2": "This endpoint returns the latest events about the company with the given identifier since the given timestamp. This timestamp is optional and is specified via a query parameter. Events come with a type (companies' register event, blog article, press release, etc.), a category (change in management, finances, merger/acquisition, etc.), a text (the content of the event), a source, and a timestamp.",
    "getpestsscientificname_for_agrofitdata": " ",
    "findbypestcommonname_for_agrofitdata": " ",
    "findbypestscientificname_for_agrofitdata": " ",
    "postal_for_princier_couture": "Postal",
    "basic_search_for_slovenia_company_data": "Basic text based search for company names registered in Slovenia",
    "api_customer_id_for_quickbooks": " ",
    "api_customer_for_quickbooks": " ",
    "getlisting_for_florida_realty_api": "Use this endpoint to get detailed information about a single condominium or townhouse.",
    "getimage_for_florida_realty_api": "Load images of cities you retrieve by calling getCities().",
    "getlistings_for_florida_realty_api": "Use this endpoint to retrieve a list of condominiums and townhouses in Southwest Florida and on the East Coast.",
    "get_language_for_textking_translation": "Returns a single language with the given ISO 639 language code.",
    "list_topics_for_textking_translation": "Returns a collection of all available topics.",
    "list_target_languages_for_textking_translation": "",
    "house_prices_values_for_zoopla": "House prices & values",
    "house_prices_for_detail_for_zoopla": "House-prices for detail",
    "auto_complete_for_zoopla": "auto-complete",
    "get_call_for_mca_corporate_verifications": "Used to fetch api result using the request id received in responses.",
    "is_mobile_for_phone_validator_api": "Returns `true` or `false` depending on whether the number is a mobile line or not.",
    "is_valid_for_phone_validator_api": "Validates both phone number length and the actual phone number digits, returns `true` or `false`.",
    "country_iso_3166_for_phone_validator_api": "Returns the officially assigned ISO alpha-2 country code, on [ISO 3166-1 alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-2).",
    "samburg_boologn_for_123caca": "visit https://123goal.info",
    "get_job_for_textking_translation": "Returns a single job with the given ID.",
    "download_source_document_for_textking_translation": "Downloads the source document for a job.",
    "ppp_for_000": "Ppp",
    "product_by_name_for_company_consultation_reportero_industrial_mexicano_api": "Return product data",
    "company_by_name_for_company_consultation_reportero_industrial_mexicano_api": "Return company data",
    "th_network_for_syamsul_bachri": "IONPREMIER",
    "v2_for_email_verifier": "Email Verifier Api",
    "ep1_for_8prd2t1api1": "ep1 test",
    "search_for_matricula_api_espana": " ",
    "api_for_flight_booking": "API Key",
    "companies_id_financials_for_german_company_data_v2": "This endpoint returns the financial key figures (balance sheet total, revenue, profit, number of employees) for the company with the given identifier. For each key figure the endpoint returns a list of values associated with the corresponding year.",
    "companies_id_financials_exists_for_german_company_data_v2": "This endpoint returns the list of years for which financial key figures (balance sheet total, revenue, profit, number of employees) for the company with the given identifier are available. The purpose of this endpoint is to give the user the opportunity to avoid potentially expensive and useless calles to the /financials-endpoint.",
    "realtoragentlist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`",
    "realtorschoollist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`",
    "realtorpropertylist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`",
    "vat_validation_api_endpoint_for_vat_validation_and_tax_rates": "The Validate Endpoint takes a VAT number in the request, checks if that number is valid, and if it is valid, returns addition details about the company associated with that VAT number.",
    "vat_price_calculation_api_endpoint_for_vat_validation_and_tax_rates": "The Calculate Endpoint makes it easy to calculate a VAT compliant price given a country and price, as well as such optional values as the type of goods.",
    "vat_rates_categories_api_endpoint_for_vat_validation_and_tax_rates": "The /categories/ endpoint makes it easy to get the latest VAT rates, including the reduced rates for certain categories, for a specific country.",
    "search_for_swedish_vehicle_license_plate_lookup": " ",
    "getpetbyid_for_apfd": "Returns a single pet",
    "getorderbyid_for_apfd": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getuserbyname_for_apfd": " ",
    "item_by_id_for_yc_hacker_news_official": "Stories, comments, jobs, Ask HNs and even polls are just items. They're identified by their ids, which are unique integers.",
    "r_cvr_virksomhed_for_cvr_dev": "Dette endpoint returnerer alt data om en virksomhed, som den er i CVR. Dette dataformat er bestemt af Virk, ikke af cvr.dev.",
    "fetch_email_of_a_person_for_email_finder": "Get email of anyone in the internet. Best for lead generation, prospecting, and cold marketing.",
    "api_endpoint_for_esignly": "main end point to access api",
    "getorderbyid_for_petstore": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "search_for_finnish_license_plate_api": " ",
    "test_endpoint_for_test_v18": "test endpoint",
    "v1_databasestatus_for_uspto_trademark": "Returns info about the freshness of the Trademark Search API database.\n\n`last_update_date` holds the date of the newest entry from USPTO filling entries that is synced to the API. \n\n`latest_trademark` array holds 10 random samples from the most recent confirmed registered trademarks, the `keyword`, the `registration_number` and the `registration_date` . Please note the date could be a few days back as not every day are published new registration of trademarks. They publish daily new partial filings and abandoned trademarks.",
    "v1_trademarksearch_for_uspto_trademark": "Does a keyword search and returns trademark name, serial number,services code, status, owner, address, filing date and registration date.",
    "v1_ownersearch_for_uspto_trademark": "Does a search on **owner name** or **postcode** and returns details about the trademarks found for that owner. Duplicate owner results can be returned by this endpoint, especially when an owner had an address change.\n\nYou can use literal 'null' if you don't want to use a param. So you can either search just for a keyword or just for a postcode or together if you want to filter by both.",
    "test_for_1800_printing_test": "Test",
    "ingest_status_for_fake_brightcove": "Ingest Job Status",
    "temp_upload_urls_for_fake_brightcove": "Generate Temp Upload URLs",
    "kubetzz_for_kubet_": "kubetzz",
    "holidays_of_2d_for_shwe_2d_live_api": "Holidays of 2D",
    "3d_live_for_shwe_2d_live_api": "3D Live",
    "2d_calendar_for_shwe_2d_live_api": "2D Calendar",
    "parse_for_us_address_parser": "Parses US Address as String and Returns JSON",
    "check_ip_for_tor_detect": "Check IP and get info",
    "getorderbyid_for_firstapi_v2": "for testing purpose only",
    "addnumbers_for_calapi": "Add 2 numbers",
    "searchcnit_for_french_cnit_type_mime_api": " ",
    "validate_a_token_for_token2go": "Submit a token (t=token) or a link (t=link) id in order to check if  it is a valid one. To be a valid token it must have a valid signature and not expired.",
    "read_a_link_or_token_by_its_id_for_token2go": "Read a link or token by its id. It is used to see the content (t=link or t=token), but cannot validate the signature.",
    "personasapi_for_personas": "RapidAPI\u2019s official API that allows you to add or update your API\u2019s definition.",
    "testbook_for_denemeapisi": "123455",
    "user_listing_for_users": "User Listing",
    "company_enrichment_endpoint_for_company_enrichment": "With Company Enrichment API, you can get the company details of any domain.",
    "getarchivereport_for_property_report": " ",
    "get_call_detail_for_calltrackingmetrics": "",
    "list_text_messages_for_calltrackingmetrics": "The SMS API allows you to search, send, and manage text messaging triggers for all capable numbers.",
    "list_accounts_for_calltrackingmetrics": "The accounts API allows you to create and manage accounts.",
    "njajal_for_new_client": "show nearby place from current location",
    "x_rapidapi_proxy_secret_123f7cd0_e73e_11e9_9851_17fbbfd737cf_for_test1": "X-RapidAPI-Proxy-Secret: 123f7cd0-e73e-11e9-9851-17fbbfd737cf",
    "getcurrentipaddress_for_dns_propagation_and_domain_checker": " ",
    "get_all_available_tags_for_self_help_quotes_for_self_help_quotes": "List all available tags for the hand-picked self-help quotes",
    "get_a_random_quote_tagged_by_a_specific_tag_for_self_help_quotes": "Get a random quote tagged by a specific tag",
    "get_a_random_quote_from_a_specific_book_for_self_help_quotes": "Get a random self-help quote from a specific book by passing the book_id",
    "updates_for_yc_hacker_news_official": "Get the changed items and profiles",
    "getdocumenttypes_for_360_business_tool": "Get all document types",
    "get_project_for_textking_translation": "Returns a single project with the given ID.",
    "search_books_for_project_gutenberg_api": "Search for books using full name or just a snippit and get the book's ID.",
    "extract_info_for_project_gutenberg_api": "Get all the informations about a book using it's ID\nInformations : \n- title.\n- authors.\n- language.\n- download links.\n- download count.\nand much more ...",
    "check_endpoint_for_abuse_ip_check": "The check endpoint accepts a single IP address (v4 or v6). Optionally you may set the maxAgeInDays parameter to only return reports within the last x amount of days.\n\nThe desired data is stored in the data property. Here you can inspect details regarding the IP address queried, such as version, country of origin, usage type, ISP, and domain name. And of course, there is the valuable abusive reports.\n\nGeolocation, usage type, ISP, and domain name are sourced from the IP2Location\u2122 IP Address Geolocation Database. If you're looking for a performant IP database for geolocation, then use their product directly.\n\nThe isWhitelisted property reflects whether the IP is spotted in any of our whitelists. Our whitelists give the benefit of the doubt to many IPs, so it generally should not be used as a basis for action. The abuseConfidenceScore is a better basis for action, because it is nonbinary and allows for nuance. The isWhitelisted property may be null if a whitelist lookup was not performed.\n\nThe usageType is a string that describes the general usage of this address. Possible values are:\n\nCommercial\nOrganization\nGovernment\nMilitary\nUniversity/College/School\nLibrary\nContent Delivery Network\nFixed Line ISP\nMobile ISP\nData Center/Web Hosting/Transit\nSearch Engine Spider\nReserved\nThe maxAgeInDays parameter determines how far back in time we go to fetch reports. In this example, we ask for reports no older than 90 days. The default is 30.\n\nThe totalReports property is a sum of the reports within maxAgeInDays.\n\nReports are included in this response because the verbose flag was added. Omitting the verbose flag will exclude reports and the country name field. If you want to keep your response payloads light, this is recommended. The reports array is limited to 10,000 elements. Only reports within the timeframe of maxAgeInDays are considered.\n\nThe IP address should be url-encoded, because IPv6 addresses use colons, which are reserved characters in URIs.",
    "token_for_cpf_format_validation": "Returns the authentication token.",
    "ad_for_constructioness": "ad",
    "v1_trademarkavailable_for_uspto_trademark": "returns if the given keyword is available",
    "products_for_prueba": "Prueba de servicio products",
    "get_all_available_self_help_books_for_self_help_quotes": "Get a list of all available books in addition to the total count of quotes available from that book",
    "gstin_for_gst_return_status": "Get Details about GSTIN (GST number) and following \n1. Latest Return filing list\n2. GST Compliance Classification\n3. HSN/SAC",
    "getcompaniessince_for_360_business_tool": "Get companies modified since",
    "get_data_entity_uid_for_ofac_service": "Gets an entity record by `uid`.",
    "get_data_info_for_ofac_service": "Gets an information about OFAC database.",
    "agencies_get_listings_for_bayut": "Get listing belonging to an agency",
    "agencies_list_for_bayut": "List agencies or search for agencies by name",
    "properties_detail_for_bayut": "Get detail information of a property",
    "v1_folders_folderid_summary_documentid_for_sertifi_esignature_and_epayment": " ",
    "v1_folderid_participants_for_sertifi_esignature_and_epayment": " ",
    "v1_users_email_for_sertifi_esignature_and_epayment": " ",
    "0mmo_for_0mmo": "0MMO is the number 1 site offering the very best software designed for Internet Marketers from 2008!\nAddress Novokosinskaya 14k7, Moscow,119034, Russia\nHotline 0945273782\nEmail: support@0mmo.net\nhttps://www.0mmo.net \nhttps://www.0mmo.net/gb \nhttps://www.0mmo.net/im-tools \nhttps://www.0mmo.net/wp \nhttps://www.0mmo.net/tutorials \nhttps://www.liveinternet.ru/users/0mmo/profile\nhttps://dribbble.com/0mmo/about\nhttps://infogram.com/0mmonet-1h7g6k0e17ry02o?live\nhttps://www.babelcube.com/user/0m-mo\nhttps://www.spreaker.com/user/15816794\nhttps://sketchfab.com/0mmo\nhttps://gitlab-test.eclipse.org/0mmo\nhttps://w3techs.com/users/profile/2751735\nhttps://www.scoop.it/topic/0m-mo\nhttps://0mmo.hpage.com/\nhttps://www.diigo.com/user/ommonet\nhttps://forums.iis.net/members/0mmo.aspx\nhttps://www.podomatic.com/podcasts/0mmonet9\nhttps://pinshape.com/users/1775513-0mmonet#designs-tab-open\nhttps://osf.io/xmzqj/\nhttps://gitlab.tue.nl/0mmo\nhttps://git.qt.io/0mmo\nhttps://communities.bentley.com/members/53bef9c4_2d00_8015_2d00_43ab_2d00_8a9c_2d00_d7d0b2a8d418\nhttps://myanimelist.net/profile/0mmo\nhttps://app.glosbe.com/profile/6875826798379142906\nhttps://8tracks.com/users/0mmo\nhttps://0mmo.cgsociety.org/profile\nhttps://api.rakuten.net/user/0mmonet\nhttps://www.forexfactory.com/0mmonet\nhttps://os.mbed.com/users/0mmonet/\nhttps://xclams.xwiki.org/xwiki/bin/view/XWiki/0mmonet\nhttp://photozou.jp/user/top/3300078\nhttps://www.designspiration.com/0mmonet9/saves/\nhttps://piqs.de/user/0mmo/account/\nhttps://hypothes.is/users/0mmo\nhttps://www.renderosity.com/users/0mmonet\nhttps://onmogul.com/0mmo\nhttps://www.hulkshare.com/0mmo\nhttps://writeablog.net/qur56j124j\nhttps://www.noteflight.com/profile/137b8a32fba12c039d5987842f5b20676af05440\nhttps://blogfreely.net/me/posts/\nhttps://www.cakeresume.com/dashboard\nhttps://appsliced.co/u/0mmo\nhttps://dashburst.com/0mmo\nhttps://timeswriter.com/members/0mmo/profile/\nhttps://www.csslight.com/profile/0mmo\nhttps://git.feneas.org/0mmonet9\nhttps://www.phuot.vn/members/0mmo.267461/\nhttps://startupmatcher.com/p/0mmo\nhttps://getpocket.com/@0mmo\nhttps://www.free-ebooks.net/profile/1356925/0mmo\nhttps://www.cnccode.com/user/0mmo\nhttps://amara.org/en/profiles/profile/pOFx88VGGOI-X9mHsomnquPySAFAWbW6JlrFYtYIgKU/\nhttps://en.eyeka.com/u/0mmo\nhttp://gitlab.aic.ru/0mmo\nhttp://www.asmetalwork.1gb.ua/forum/user/edit/56363.page\nhttps://band.us/band/86095136\nhttps://www.tripline.net/0mmo/\nhttps://bookme.name/0mmonet\nhttps://able2know.org/user/0mmo/\nhttps://profile.hatena.ne.jp/huyss/profile\nhttps://lackky.com/0mmonet\nhttps://www.webmasterpro.de/user/0mmonet/\nhttps://openuserjs.org/users/0mmo\nhttps://www.linkedin.com/in/0mmo/",
    "getarchivereport_for_dl_format_validation": "Gets Archived DL Report",
    "getcities_for_florida_realty_api": "Get a list of supported cities with some data about those cities like the number of residents, the latitude, longitude, altitude  and a description and image of the city.",
    "getwebsite_for_convert_company_name_to_website_url": "Get Company Website from Company Name",
    "og_for_explorarc_s_opengraph_crawling_api": "The Best API to Fetch all the OpenGraph and Meta tags from an given website URL",
    "search_translations_for_mymemory_translation_memory": "This API gets a list of translation from the translation memory ranked by quality and similarity (what we call match). MyMemory will check if a sentence has been already translated in the private TM specified. If we don't find it in the private TM of the translator, we search it in the public TMs (shared among all the translators). Again, if we don't have this translation we ask MT providers to generate it.  In order to get the best from MyMemory, it is highly recommended to use different keys for each translators and also different keys for different topics (as a real Translation Memory).",
    "set_contribution_for_mymemory_translation_memory": "The SET api is used to save a contribution. You can either save a contribution privately with your private TM key or add it to the public collaborative TM.",
    "create_key_for_mymemory_translation_memory": "MyMemory provides a specific API to create a new private TM key. Such key can be then used in the API call to identify a private TM or to privately contribute to a TM. Every contribution that has been created with a private TM key will be only shown if the same private TM key is used in the GET call; no other users will see private contributions without the right private TM key.",
    "sdsfsd_for_czkjlj": "fsdfsdfds",
    "cashabck_for_free_cashback": "Access this for cashback feed",
    "getallrecords_for_360_business_tool": "Get all data",
    "accept_charset_for_testing_out_sharing_w_rachael": "accepting character set",
    "lastname_for_testing_out_sharing_w_rachael": "Last name of customer",
    "input_test_for_testing_out_sharing_w_rachael": "description of the endpoint",
    "test_for__img_src_x_onerror_prompt_document_domain_": "+++++++++++++++++++++++++++++++++++++++'\"/>><img/onanimationstart=prompt`${document.domain}>",
    "new_stories_for_yc_hacker_news_official": "Returns the current top 100 stories.",
    "11bet_link_for_11bet": "11BET \u2b50\ufe0ftrang  Web c\u00e1 c\u01b0\u1ee3c th\u1ec3 thao, b\u00f3ng \u0111\u00e1 \u0111\u1ec9nh cao uy t\u00edn nh\u1ea5t Vi\u1ec7t Nam \u2b50\ufe0f C\u00f3 nh\u1eefng \u01b0u \u0111\u00e3i l\u1edbn cho ng\u01b0\u1eddi ch\u01a1i, Link truy c\u1eadp v\u00e0o nh\u00e0 c\u00e1i 11bet m\u1edbi nh\u1ea5t.\t\n#\u0111\u0103ng k\u00fd 11bet #n\u1ea1p ti\u1ec1n 11bet #t\u1ea3i \u1ee9ng d\u1ee5ng 11bet #r\u00fat ti\u1ec1n_11bet  #/m/033_l8  /m/033_l8 #Casino\n\u0110\u1ecba ch\u1ec9 : 43 L\u00fd Th\u00e1nh T\u00f4ng, An \u0110\u00e0o, \u0110a T\u1ed1n, Gia L\u00e2m, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam\nHotline 0376202879\nGmail: 11betlink@gmail.com\t\nWebsite https://11bet.link/  \t\nhttps://11bet.link/dang-ky-11bet/  \t\nhttps://11bet.link/nap-tien-11bet/    \t\nhttps://11bet.link/rut-tien-11bet/\nhttps://11bet.link/tai-ung-dung-11bet/  \t\nhttps://sites.google.com/view/11betlink/11bet-di-dong-link-vao-nha-cai-11bet-tren-mobile \nhttps://sites.google.com/view/11betlink \nhttps://11betlink.blogspot.com/ \t\nhttps://en.wikipedia.org/wiki/Online_casino\nhttps://issuu.com/11betlink?\nhttps://profile.hatena.ne.jp/betlink11/\nhttps://www.liveinternet.ru/users/nhacaibetlink/profile\nhttps://www.openstreetmap.org/user/11betlink\nhttps://ok.ru/profile/589311685548\nhttps://linktr.ee/11betlink\nhttps://www.bark.com/en/gb/company/11betlink/gyvgQ/\nhttp://community.getvideostream.com/user/11betlink\nhttps://www.110designs.com/profile/28077-11betlink\nhttps://myspace.com/11betlink\nhttps://hub.docker.com/u/11betlink\nhttps://about.me/link11bet\nhttps://start.me/p/ADxp7n/11bet\nhttps://tawk.to/11betlink\nhttps://www.doyoubuzz.com/11bet-link\nhttps://www.reverbnation.com/11betlink\nhttps://note.com/11betlink/\nhttps://www.discogs.com/fr/user/11betlink\nhttps://fliphtml5.com/homepage/sfodp\nhttps://www.producthunt.com/@11bet_link\nhttps://gallery.autodesk.com/users/AMUJJ9W5QP6HQP8T?relProf=1\nhttps://support.wedesignthemes.com/users/11betlink/\nhttps://descubre.beqbe.com/p/-11betlink\nhttps://ko-fi.com/11betlink\nhttp://wpc.hotlog.ru/profile.php?user_id=423307",
    "meme_for_alt_coins": "Provide memes",
    "generateshopeelink_for_shopeeapi": "/generateShopeeLink?url=SHOPEEURLPRODUCT\nGenerates a affiliate link \n\nHeaders\nx-shopee-appId: YOURAPPID\nx-shopee-secret: YOUR SECRET\n\nget this in https://affiliate.shopee.com.br/open_api",
    "status_for_shopeeapi": "Verify if is up",
    "auto_complete_for_idealista_v2": "Get auto complete suggestion by term or phrase",
    "properties_detail_for_idealista_v2": "Get property detail",
    "zois_detail_for_idealista_v2": "Get information about specific zone of interest",
    "party_for_partydiva": "party",
    "pipeline_for_streak_crm_for_gmail": "Pipelines represent a business process that a user would like managed.",
    "user_for_streak_crm_for_gmail": "User call",
    "search_for_uk_vrm_lookup": " ",
    "get_all_for_print": "Gets all the data",
    "list_stories_by_section_for_ny_times_top_stories": "The Top Stories API returns an array of articles currently on the specified section.",
    "9p_for_dxjewof": "0o",
    "fetch_full_metadata_for_phone_validator_api": "This endpoint will return the full metadata of the number included on the request.",
    "is_fixed_for_phone_validator_api": "Returns `true` or `false` depending on whether the number is fixed or not.",
    "format_number_for_phone_validator_api": "Returns the phone number on standardized formats.",
    "search_for_verifica_targhe_italiane_api": " ",
    "levels_category_for_woo_temp": "get levels category",
    "levels_for_woo_temp": "Get levels",
    "boxes_for_woo_temp": "Get all boxes",
    "search_for_indeed": "",
    "mgs_products_for_mgs": "MGS Products",
    "blogs_for_mgs": "MGS Blogs",
    "blogs_copy_for_mgs": "MGS Blogs",
    "fdfdf_for_111": "fdfdf",
    "tickets_for_an_event_for_ticketbud": "All tickets for an event that you have access to",
    "a_single_event_for_ticketbud": "Information about a single event you have access to",
    "me_for_ticketbud": "Information about the current token holder",
    "house_prices_get_market_activity_for_zoopla_v2": "Get market activity in an area",
    "auto_complete_for_zoopla_v2": "Get auto complete suggestion by term or phrase",
    "house_prices_get_points_of_interest_for_zoopla_v2": "Get nearest points of interest",
    "ld_for_ld": "LD",
    "test_for_pss": "test",
    "get_settings_for_smartsync": "smartsync settings",
    "business_name_for_for_business_starter_api": "Generate a Business name for existing idea",
    "business_name_for_business_starter_api": "Generate a random Business name",
    "businessplan_for_business_starter_api": "Generate a Businessplan for your idea",
    "companies_id_jobs_for_german_company_data_v2": "This endpoint returns the latest job postings about the company with the given identifier since the given timestamp. This timestamp is optional and is specified via a query parameter. Job postings come with a title, a text (the content of the posting), a source, and a timestamp.",
    "calendar_events_for_calendarevents": "Retrieve Google Calendar Events from a public calendar",
    "search_company_by_name_for_business_and_company_name_api": "Do you know the company name? you can make a search of company information with just the name. You will get hits of all companies and businesses that are matching that particular name.",
    "get_all_companies_paginated_for_business_and_company_name_api": "This endpoint gets all the companies and business as in the CAC database.",
    "search_by_registration_number_for_business_and_company_name_api": "Search company information by the company or business' registration number issued by the CAC. It returns a single match if the registration number exists.",
    "email_validation_api_for_email_validation_and_verification": "Email Validation and Verification API requires only a single email.\nChecking a misspelled email.\nChecking a malformed email.",
    "business_slogan_for_business_starter_api": "Generate a slogan for you Business name",
    "list_projects_for_textking_translation": "Returns a collection of projects of the authorized customer.",
    "getteam_for_demo": "gets team",
    "getinventory_for_apfd": "Returns a map of status codes to quantities",
    "logoutuser_for_apfd": " ",
    "get_call_for_import_export_verification": "Used to fetch api result using the request id received in responses.",
    "show_stories_for_yc_hacker_news_official": "Up to 200 of the latest Show HN Stories!",
    "asdf_for_test_plan": "asdf",
    "get_topic_for_textking_translation": "Returns a single topic area with the given ID.",
    "validate_vat_for_validate_vat": "\u201cValidate VAT\u201d validates VAT numbers, get company information, including address, returned for each VAT number.",
    "public_holiday_endpoint_for_public_holidays": "The Public Holiday API allows you to gett the public, local, religious, and other holidays of a particular country.",
    "ev_for_ev": "get data, place parameter page to paginate list by 1000 object. ex.: *?page=2*",
    "search_for_netherlands_vehicle_license_plate_lookup": " ",
    "gergfdg_for_anttdev_2": "gdfdfg",
    "email_marketing_for_lake_b2b": "Lake B2B provides best email marketing services and programs across the globe to meet your marketing needs thus helping business to run more efficiently.",
    "karenrecommends_com_for_karenrecommends": "posts news stories",
    "post_api_for_test_api": "Testing post request",
    "tradesq_for_xtream": "Collects",
    "view_item_for_catalogapi": "Returns an image and description of the item",
    "view_for_catalogapi": "Returns the current address and items in the cart.",
    "empty_for_catalogapi": "Removes all items in the cart.",
    "search_by_mbs_or_oib_for_croatia_company_data": "Search the Croatian company register by either MBS or OIB company identifiers (osobni identifikacijski broj)",
    "properties_list_for_idealista_v2": "List properties for sale or rent in Italy, Spain, Portugal with options and filters",
    "getpests_for_agrofitdata": " ",
    "findbyactiveingredientcrop_for_agrofitdata": " ",
    "getactiveingredients_for_agrofitdata": " ",
    "games_for_hfghfgh": "game list",
    "getorderbyid_for_petstoreapi2_0": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "qwe_for_qwe": "qwe",
    "business_name_generator_for_business_name_generator": "Business Name Generator",
    "buscar_empresas_for_enotas_gateway": "Buscar empresas emissoras",
    "da_laforce_for_giay_tay_nam": "\u0110\u1ed3 da Laforce l\u00e0 th\u01b0\u01a1ng hi\u1ec7u uy t\u00edn t\u1ea1i H\u00e0 N\u1ed9i c\u0169ng nh\u01b0 tr\u00ean to\u00e0n qu\u1ed1c v\u1ec1 s\u1ea3n ph\u1ea9m \u0111\u1ed3 da nh\u01b0 gi\u00e0y, t\u00fai, v\u00ed, th\u1eaft l\u01b0ng, g\u0103ng tay.",
    "api_for_test_api_v2": "12",
    "loginuser_for_petstoreapi2_0": "",
    "getpetbyid_for_petstoreapi2_0": "Returns a single pet",
    "email_extractor_for_email_scraper": "Get emails scraped from url provided",
    "dashboard_free_access_for_email_scraper": "Call this endpoint (or click 'Test Endpoint') to get access to the dashboard.",
    "dashboard_pro_access_for_email_scraper": "Call this endpoint (or click 'Test Endpoint') to get access to the dashboard with all features.",
    "ken_for_ken": "**",
    "properties_list_for_seloger": "List properties with options and filters",
    "properties_count_for_seloger": "Count total properties returned with options and filters",
    "properties_detail_for_seloger": "Get property detailed information",
    "place_order_for_catalogapi": "This method places as order using the address and items in the cart. Once the order is placed, the cart is deleted.",
    "validate_for_catalogapi": "Validates the address and items in the cart. You should call this method just before placing an order to make sure that the order will not be rejected.",
    "list_available_catalogs_for_catalogapi": "Lists the Available Catalogs",
    "v1_serialsearch_for_uspto_trademark": "Does a serial number search and returns details about the trademark attributes.",
    "image_for_testpk": "image",
    "get_company_domain_for_company_domain_finder": "Enter the name of a company and the API will return the matching domain.",
    "registration_fee_for_soti_sync": "Registration Fee",
    "getcrops_for_agrofitdata": " ",
    "products_for_interceptor_sample": "list of products",
    "quote_for_interceptor_sample": "Quotation service",
    "is_weekend_for_daysapi": "Endpoint will return True if date falls on the weekend, Saturday or\nSunday.",
    "business_days_for_daysapi": "Calculate working days from given date with given number of days.\n\nThe timezone is set to US/Eastern due to US banks operate only in\nthat timezone.",
    "difference_calendar_for_daysapi": "This endpoint takes in two dates and calculates the difference for\nyou with the queries you enter.",
    "1_for_notevent": "1",
    "yep_for_docs_v2": "Yep yep yep",
    "loginuser_for_apfd": " ",
    "mailboxvalidator_api_for_mailboxvalidator": "Email validation API",
    "base_currency_exchange_rates_for_ziff": "Get all Exchange Rates (in alphabetical order) for a Base Currency.",
    "all_exchange_rates_for_ziff": "Get all Exchange Rates in alphabetical order; organised by Base Currency (also in alphabetical order).",
    "parse_data_for_5ka_porocila": "description",
    "year_month_json_for_ny_times_archive_": "Pass in year and month and get back JSON with all articles for that month. The response can be big (~20 megabytes) and contain thousands of articles, depending on the year and month.\n",
    "converting_currencies_for_currency_exchange_rates": "The /convert/ endpoint is similar to the /live/ and /historical/ endpoints, except it allows you to convert an arbitrary amount of currency.\n\nFor example, it calculates how many EUR you would get for 1,337.99 USD today, or how many GBP and CAD you'd get for that amount on January 1, 2020.",
    "getting_historical_exchange_rate_s_for_currency_exchange_rates": "The /historical/ endpoint functions almost exactly like the /live/ endpoint, except it requires you to request a date parameter, and subsequently returns the returns the most recent exchange rate(s) for a given set of currencies.\n\nAs with the /live/ endpoint, the base currency is the currency you're converting FROM, while the target currency or currencies are what you're converting TO. Also, if no target currency or currencies are specified, then all available currencies are returned. You can see a full list of supported currencies at the bottom of this documentation.",
    "getting_the_latest_exchange_rate_s_for_currency_exchange_rates": "The /live/ endpoint returns the most recent exchange rate(s) for a given set of currencies. The base currency is the currency you're converting FROM, while the target currency or currencies are what you're converting TO.\n\nIf no target currency or currencies are specified, then all available currencies are returned. You can see a full list of supported currencies at the bottom of this documentation.",
    "categorize_website_for_website_categorization_api": "Returns the top 3 categories for any website.",
    "openid_connecter_for_acrosuite_oauther": "OAuth/OpenID Connect(OIDC) authentication information from the third-party providers(**Google/LINE/YahooJP/Azure**) will be available. \nAfter calling the API, you will get an OIDC list without **oAuthCode** or OIDC authentication information with **oAuthCode**.\nWhen you get an OIDC list, you may choose an **OAuthURL** to call it, then you will get OIDC authentication information.\nAnd it is not necessary to input redirectHost/redirectPort parameter here.\nPlease refer to the sample[**OIDC Authentication**] in the following demo page.\nhttps://mars.restgate.net/intro/en/suite_en.html#oauther\n\n\u30b5\u30fc\u30c9\u30d1\u30c6\u30a3\u30d7\u30ed\u30d0\u30a4\u30c0\u30fc(**Google/LINE/YahooJP/Azure**)\u304b\u3089OAuth **OpenID Connect(OIDC)**\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3053\u306eAPI\u3092\u547c\u3073\u51fa\u3057\u305f\u3089\u3001OIDC\u4e00\u89a7(**oAuthCode**\u4ed8\u304d\u306a\u3057\u306e\u5834\u5408)\u53c8\u306f\u8a8d\u8a3c\u60c5\u5831(**oAuthCode**\u4ed8\u304d\u306e\u5834\u5408)\u304c\u623b\u3089\u308c\u307e\u3059\u3002\nOIDC\u4e00\u89a7\u304c\u623b\u3055\u308c\u305f\u5834\u5408\u306f\u3001\u7d9a\u3044\u3066**OAuthURL**\u3092\u9078\u3093\u3067\u547c\u3073\u51fa\u3059\u3068\u3001\u8a72\u5f53\u3059\u308b\u8a8d\u8a3c\u60c5\u5831\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3053\u3053\u3067\u306f\u3001redirectHost/redirectPort\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5b9f\u969b\u306e\u6319\u52d5\u306f\u3001\u4e0b\u8a18\u306e\u30c7\u30e2\u30da\u30fc\u30b8\u306b\u547c\u3073\u51fa\u3057\u30b5\u30f3\u30d7\u30eb[**OIDC\u8a8d\u8a3c**]\u3092\u3054\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\nhttps://mars.restgate.net/intro/jp/suite_jp.html#oauther\n<hr>\nThe following external document is for directly calling AcroSuite original APIs. Some Auth parameters may be neglected here.\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=2&withTitle=true&apiCode=02301016\n\n\u4e0b\u8a18\u306e\u5916\u90e8\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u3001AcroSuite\u30aa\u30ea\u30b8\u30ca\u30ebAPI\u306b\u5bfe\u3059\u308b\u8cc7\u6599\u3067\u3042\u308a\u3001\u3053\u3053\u3067\u306f\u4e00\u90e8\u306e\u8a8d\u8a3c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u7701\u7565\u3057\u307e\u3059\u3002\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=1&withTitle=true&apiCode=02301016",
    "test_for_wraws_load_test": "Test",
    "house_prices_estimate_for_zoopla_v2": "Returned list of estimated house prices",
    "properties_list_for_zoopla_v2": "List properties for sale or rent with options and filters",
    "house_prices_get_running_costs_for_zoopla_v2": "Get running costs",
    "24hkhoedep_for_24hkhoedep": "24hkhoedep.com l\u00e0 trang b\u00e1n l\u1ebb tr\u1ef1c tuy\u1ebfn tr\u1ef1c thu\u1ed9c C\u00f4ng Ty TNHH Ch\u0103m S\u00f3c Kho\u1ebb V\u00e0 \u0110\u1eb9p Vi\u1ec7t Nam \u2013 m\u1ed9t c\u00f4ng ty chuy\u00ean nh\u1eadp kh\u1ea9u v\u00e0 ph\u00e2n ph\u1ed1i \u0111\u1ed9c quy\u1ec1n cho c\u00e1c h\u00e3ng d\u01b0\u1ee3c m\u1ef9 ph\u1ea9m v\u00e0 trang thi\u1ebft b\u1ecb y t\u1ebf t\u1eeb Ch\u00e2u  u.\n#khoedep #khoedepvietnam #mypham #myphamchauau #duocphamchauau #duocmypham\n#m\u1ee5n th\u1ecbt #r\u1ed1i lo\u1ea1n ti\u00eau h\u00f3a #ng\u1ef1c ch\u1ea3y x\u1ec7\n\u0110\u1ecba ch\u1ec9 : 40/19 B\u00e0u C\u00e1t 2, Ph\u01b0\u1eddng 14, Qu\u1eadn T\u00e2n B\u00ecnh, TP. HCM, Vi\u1ec7t Nam\nHotline 028 - 6296 2262 | 0931320062\nEmail: hbcvn@healthbeautycare.com.vn\nGoogle map https://www.google.com/maps?cid=5320003827413062825 \nWebsite https://24hkhoedep.com/ \nhttps://24hkhoedep.com/mun-thit-la-gi-nguyen-nhan-va-cach-chua-mun-thit-an-toan-hieu-qua/ \nhttps://24hkhoedep.com/roi-loan-tieu-hoa-la-gi/ \nhttps://24hkhoedep.com/nguc-chay-xe-phai-lam-gi-cach-nang-nguc-chay-xe-tai-nha/ \nhttps://www.facebook.com/24hkhoedepHBC \nhttps://twitter.com/24hkhoedep \nhttps://community.opengroup.org/24hkhoedep \nhttps://www.pinterest.com/24hkhoedep/ \nhttps://www.instagram.com/comem_homelab \nhttps://www.beatstars.com/24hkhoedep/about \nhttps://gifyu.com/24hkhoedep\nhttps://folkd.com/user/24hkhoedep\nhttps://www.blogger.com/profile/06161746755325811075 \nhttps://www.youtube.com/channel/UCk-noRhYKMPmPdKN2s1mIlQ \nhttps://soundcloud.com/24hkhoedep\nhttps://www.behance.net/24hkhoedep\nhttps://www.openstreetmap.org/user/24hkhoedep\nhttps://issuu.com/24hkhoedep\nhttps://profile.hatena.ne.jp/hkhoedep/profile\nhttps://ko-fi.com/24hkhoedep\nhttps://gitlab-test.eclipse.org/24hkhoedep \nhttps://www.twitch.tv/24hkhoedep/about\nhttps://dribbble.com/24hkhoedep/about\nhttps://onlyfans.com/khoedep24h \nhttps://myspace.com/24hkhoedep\nhttps://www.goodreads.com/user/show/151102363-24hkhoedep\nhttps://linktr.ee/24hkhoedep\nhttps://www.deviantart.com/24hkhoedep\nhttps://about.me/dep.24hkhoe \nhttps://www.yumpu.com/xx/document/view/66823841/24hkhoedep\nhttps://tawk.to/24hkhoedep \nhttps://gallery.autodesk.com/users/5EB2PJGRPF8CEZU6 \nhttps://sketchfab.com/24hkhoedep \nhttps://li.sten.to/24hkhoedep\nhttps://connect.garmin.com/modern/profile/7b87f84b-717b-463c-9760-9a2f431f11c7",
    "validationreport_for_appraisalqc": "The API returns the XML validation report of the Appraisal Report uploaded",
    "country_code_number_for_phone_validator_api": "Returns the digits between the `+` and the national number when the number is written in international format.",
    "get_a_random_self_help_quote_for_self_help_quotes": "Get a random hand-picked self-help quote in addition to its tags and the book it was taken from",
    "get_role_ids_for_signnow": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
    "get_signing_links_for_signnow": "The endpoint allows to get all existing signing links and IDs of these signing links.",
    "embedded_signing_get_role_ids_for_signnow": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It\u2019s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.",
    "free_ofac_api_for_free_ofac_scan": "This API returns a simple TRUE (target found) or FALSE (target not found) value n response to an OFAC scan request.",
    "properties_list_for_realty_in_au": "List properties with options and filters",
    "account_status_for_entity_risk": "Check the status of this account (api key)",
    "indicator_categories_for_entity_risk": "List the available Sigma indicator categories to filter by.",
    "sources_for_entity_risk": "Lists the available Sigma Sources to search on. Sigma Sources are specific integrations which Sigma has constructed to impose structure to its various datasets. Use the name field as value to filter sources on.",
    "a_single_ticket_for_ticketbud": "Information about a single ticket.",
    "your_events_for_ticketbud": "A list of events owned or accessible by the current token holder",
    "similar_for_comparable_companies": "The key feature of the comparable-companies API. This endpoint will return a list of companies that are similar to the one that has been provided. The endpoint will also return information about the queried domain through the variable \"frontend_company_info\".\n\nOccasionally, the algorithm finds new information that will take longer to crawl and process. In these cases, it will return results with the \"further_crawling\" variable set to true, indicating that we will have better results available in the next 10-15 sec. There is a possibility to establish a WebSocket connection through the \"connectionID\" parameter to be notified of these new results. This is not covered in this documentation, but our engineers will happily assist you with it.\n\nQuerying the same domain multiple times will only cost you a single search credit.",
    "download_translated_document_for_textking_translation": "Downloads the translated document for a job.",
    "list_a_project_s_jobs_for_textking_translation": "Returns a collection of jobs for a project.",
    "best_stories_for_yc_hacker_news_official": "Returns up to the current best 500 stories.",
    "business_idea_for_business_starter_api": "Generate a business idea",
    "product_category_for_woo_temp": "get product category",
    "search_for_australian_business_industries_api": "Search Australian business industries",
    "get_gst_info_filing_data_for_gst_details_filing_data": "Just punch in the GSTIN & get company info & filing data.",
    "fdvfv_for_hyhryh": "dfbvv",
    "findbyactiveingredient_for_agrofitdata": " ",
    "findbypestscientificnamecrop_for_agrofitdata": " ",
    "properties_list_for_bayut": "List properties with options and filters",
    "audit_for_entity_risk": "This endpoint retrieves individual audit records. An audit record represents the request and response that was submitted using Sigma's API and it is used for traceability.",
    "phone_number_for_soti_sync": "Fetch Customer Phone Number",
    "properties_list_in_boundary_for_seloger": "List properties in a bounding box with options and filters",
    "locations_search_for_seloger": "Search location by term or phrase",
    "get_field_and_field_invite_id_for_signnow": "The endpoint returns field and field invite ids.",
    "getlistingsbyradius_idx_for_remarketlite_apis": "Search listings around a point or address within the specified Radius",
    "getlistingsbyradius_valuation_for_remarketlite_apis": "Search listings around a point or address within the specified Radius",
    "getlistingsbygeo_valuation_for_remarketlite_apis": "API returns property listings by accepting various filters like Zip code, Street, City and State",
    "list_users_for_calltrackingmetrics": "The users API allows you to create and manage users.",
    "auto_complete_for_bayut": "Get suggestions of locations by term or phrase",
    "business_delta_for_daysapi": "Given two dates. This endpoint will output the number of business\ndays between them.\n\nDates can be entered in any order. Please enter readable dates.\nDoesn't have to be ISO or RFC formatted dates.",
    "get_price_info_for_word_count_for_textking_translation": "Returns price information for a specific number of words for all available quality levels.",
    "properties_sale_for_real_estate": "U.S properties for sale",
    "properties_rent_for_real_estate": "U.S properties for rent",
    "property_details_for_real_estate": "Get detailed information on U.S properties",
    "check_2_params_for_eu_vat_number_checker": "Get details (2 params: 'country' and 'vat num' )",
    "check_1_param_for_eu_vat_number_checker": "Get details (1 param: full vat number, with country code)",
    "asd_for_test_v16": "asdasdasd",
    "qwe_for_test_apizzz": "qwe",
    "casino_tournaments_list_for_casinosearch": "Casino Tournaments List with details",
    "electric_scooters_for_sigma_scooters": "electric scooter rental similar to lime",
    "allcompanies_for_acopaer": "# Description GET All Companies\r\n\r\nThis url is to get all Companies created is type `GET`, the url is `BASE_URL/companies` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.",
    "allscenarios_for_acopaer": "# Description GET All Scenarios\r\n\r\nThis url provides all Scenarios created, method type `GET`.\r\n\r\n `BASE_URL/scenarios`\r\n \r\n returns an array of objects or only an object depends on how many are there.\r\n\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.",
    "formactionby_id_for_acopaer": "# Description GET Form Action By id\r\n\r\nThis url is to get a Form Action by id is type `GET`, the url is `BASE_URL/form-actions/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Form Action to get details about this Form Action.",
    "getlistingsbygeo_idx_for_remarketlite_apis": "API returns property listings by accepting various filters like Zip code, Street, City and State",
    "categorize_job_title_for_job_title_categorization": "Easily categorize any job title",
    "search_for_american_company_business_data": "Search business contacts",
    "get_all_domaines_for_domaine_nc": "Get all domain names",
    "get_domaine_for_domaine_nc": "R\u00e9cup\u00e8re les d\u00e9tails d'un domaine, cela permet de rechercher en mode API le contenu disponible en web sur [DOMAINE.nc](https://www.domaine.nc/whos).",
    "get_api_health_for_domaine_nc": "Status de l'API",
    "rotating_proxy_api_for_rotating_proxies": "API will respond with a random proxy currently active in the pool upon each request.",
    "v1_folderid_payments_paymentid_for_sertifi_esignature_and_epayment": " ",
    "getfolder_for_sertifi_esignature_and_epayment": " ",
    "daily_live_for_shwe_2d_live_api": "Daily Live Perfect",
    "calendar_arithmetic_for_daysapi": "This endpoint will take in a date number of years, months, days,\nhours, minutes, and seconds as query parameters and return the date\nwith the addtion or subtraction produced from entered query\nparameters.\n\nThis endpoint can do addition and subtraction. To do subtraction just add\n`-` befor the integer like so `-8` and the endpoint will subtract based\non the query.\n\n**Note**: Please enter properly formatted dates and optionally times.\nThis endpoint will try and figure out what is entered but will output\nincorrect dates and times if date format isn't well formatted.",
    "is_weekday_for_daysapi": "Endpoint will return True or False of date entered is a weekday.\n\nIf date is a Saturday or Sunday, then `false` will be returned.",
    "getcases_for_360_business_tool": "Get all cases",
    "https_kassbet_p_rapidapi_com_for_kassbet": "fetch games",
    "sea_games_31_for_sea_games_31": "C\u1ed5ng th\u00f4ng tin ch\u00ednh th\u1ee9c c\u1ee7a SEA Games 31 - Vi\u1ec7t Nam 2021. \u0110\u1ea1i h\u1ed9i Th\u1ec3 thao \u0110\u00f4ng Nam \u00c1 2021. \u0110\u1ea1i h\u1ed9i Th\u1ec3 thao \u0110\u00f4ng Nam \u00c1 - SEA Games 2021, s\u1ebd di\u1ec5n ra \u1edf H\u00e0 N\u1ed9i, Vi\u1ec7t Nam t\u1eeb ng\u00e0y 12 th\u00e1ng 5 \u0111\u1ebfn ng\u00e0y 23 th\u00e1ng 5 n\u0103m 2022.\nWebsite http://seagames.info/ \nEmail:info@seagames.info\nGoogle map: https://www.google.com/maps?cid=10302187337639672513 \n\u0110\u1ecba ch\u1ec9 : 36 P. Tr\u1ea7n Ph\u00fa, \u0110i\u1ec7n Bi\u00ean, Ba \u0110\u00ecnh, H\u00e0 N\u1ed9i Hanoi, Vietnam 100000\n#vietnamxseagames31 #H\u00e0_N\u1ed9i #Vi\u1ec7t_Nam #L\u1ecbch_thi_\u0111\u1ea5u_SEA Games 31\nhttps://seagames.info/sea-games-31/ \nhttps://www.facebook.com/vietnamxseagames31 \nhttps://sites.google.com/view/vietnamxseagames31 \nhttps://connect.garmin.com/modern/profile/9fba05fe-267e-4843-9511-74c0fd2d697d\nhttps://gitlab.haskell.org/seagamesinfo\nhttps://cartoonmovement.com/cartoonist/18495\nhttps://www.feedsfloor.com/profile/seagamesinfo\nhttps://deepai.org/profile/seagamesinfo\nhttps://www.bark.com/en/gb/company/seagamesinfo/kVPmo/\nhttps://community.tubebuddy.com/index.php?members/103488/#about\nhttps://start.me/p/jja0qL/seagamesinfo\nhttps://marketplace.apartmenttherapy.com/store/d03759a3-53fa-4a94-a31b-dbbba532f142\nhttps://www.lifeofpix.com/photographers/seagamesinfo/\nhttps://kuula.co/post/NHp4C\nhttp://wiki.cs.hse.ru/\u0423\u0447\u0430\u0441\u0442\u043d\u0438\u043a:Seagamesinfo\nhttps://bibliocrunch.com/profile/seagamesinfo/\nhttps://www.dday.it/profilo/seagamesinfo\nhttps://www.mountainproject.com/user/201342996/seagames-info\nhttps://www.thingiverse.com/seagamesinfo/designs\nhttps://www.trepup.com/seagamesinfo-100997554504555\nhttps://sharree.com/User-seagamesinfo\nhttps://orcid.org/0000-0002-5432-601X\nhttps://zindi.africa/users/seagamesinfo\nhttps://ourstage.com/seagamesinfo\nhttps://infogram.com/seagamesinfo-1h8n6m35qeovz4x?live\nhttps://kyteapp.mn.co/members/11333334\nhttps://www.bhimchat.com/seagamesinfo\nhttp://pixelhub.me/seagamesinfo",
    "sms_for_insafel": "Send",
    "getpestsbycrop_for_agrofitdata": " ",
    "findbycrop_for_agrofitdata": " ",
    "set_address_for_catalogapi": "Adds a shipping address to the cart",
    "catalog_breakdown_for_catalogapi": "Breaks down the catalog into its categories",
    "bots_telegram_for_my_bot": "For Bots",
    "upload_source_document_for_textking_translation": "Uploads the source document for a job.",
    "list_endpoints_can_be_used_as_an_endpoint_health_check_for_text_sentiment_api": "This endpoint lists the possible endpoints to connect to.\n\nAlias: /api/sentiment",
    "languages_for_speech_recognition": "Get list of supported languages",
    "get_sessions_for_optitalk": "Get a list of sessions and their corresponding `session_id`.",
    "get_characters_for_optitalk": "Get a list of publicly available characters as well as the characters that you created.\n\n## Character Usage\nOnce you've retrieved a character, you can copy its ID and use it in the /chat endpoint in order to chat with it.",
    "get_session_messages_for_optitalk": "Retrieve the message history inside a session.",
    "get_result_for_face_animer": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.",
    "create_job_id_for_face_animer": "Create Job ID",
    "get_image_for_arimagesynthesizer": "Retrieve generated image with given `hash`.",
    "my_images_by_id_for_arimagesynthesizer": "Similar to `/my_images` endpoint, returns generated images' information in a JSON response filtered by given `id`.",
    "my_images_for_arimagesynthesizer": "Get all generated images' information in a JSON response. Images can be accessed at `/get` endpoint with the given hash.",
    "get_version_for_people_photo_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.",
    "scraper_for_web_scraping_api": "The \"Scraper\" endpoint of the Web Scraping API is responsible for extracting data from websites while simulating a real browser. With its Headless Browser capability, the endpoint enables users to bypass restrictions, solve captchas, and scrape dynamic websites with ease. The endpoint can be used for high-level web scraping tasks, making it an ideal choice for businesses, data analysts, and developers who need to extract data from websites quickly and efficiently. By providing the endpoint with the necessary input parameters, users can initiate the scraping process and receive the extracted data in the desired format. This endpoint is a powerful tool for anyone who needs to extract data from websites and can be easily integrated into existing workflows and systems.",
    "qwetre_for_test": "qweytr",
    "generate_image_for_stable_diffusion_v2": "Generate an image with stable diffusion",
    "mood_list_for_text_mood_changer_ai": "list of moods available",
    "get_news_from_all_news_sources_related_to_artificial_intelligence_for_artificial_intelligence_news_api": "This end point will return back all the artificial intelligence news from all over the world.",
    "get_recent_news_from_a_single_news_source_for_artificial_intelligence_news_api": "This will return all the artificial intelligence news from a single news source.",
    "list_languages_for_ttskraken": "Get a list of currently supported languages. We are constantly adding more every few weeks.",
    "list_speakers_for_ttskraken": "List the speakers available and some more information such as the languages they can speak.",
    "list_my_bots_for_aion": "Once you have created your bot, you can manage the configurations by using the \u201caccess_token\u201d received during authentication. Here you can view a list of all the bots you have created on the platform.",
    "get_call_for_face_liveness_check": "Used to fetch api result using the request id received in responses.",
    "colors_for_explor_arc_s_colors_api": "The Best API for Effortless Color Inspiration, Unleash Limitless Color Possibilities with The Best API",
    "getforecast_pro_for_the_apophis": "This endpoint is part of Pro subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 10 Periods\n\n**Timeframe:**\n- 1h",
    "getassetslist_pro_for_the_apophis": "Retrieve a list of available assets for forecasting",
    "getforecast_mega_for_the_apophis": "This endpoint is part of Mega subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 30 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h",
    "chat_gpt_detector_for_ai_content_detector_v2": "detector",
    "toxdetectai_api_for_toxdetectai_ai_powered_toxic_comment_detector_": "\ud83d\ude00 Our AI-powered endpoint can analyze text in over 140 languages",
    "generate_blog_post_for_blogzee_ai_seo_social_content_generator": "This is the /generate_blog_post endpoint for the Blogzee AI service, designed to generate a complete blog post based on user-provided input parameters.\n\nEndpoint Structure:\n\n    Method: GET\n    Route: /generate_blog_post\n    Response Model: BlogPostResponse\n\nFunctionality:\nThis endpoint accepts a blog post title, a list of keywords (minimum of 2, maximum of 5), and two boolean flags (include_html, include_emojis) as parameters. It uses these inputs to generate a complete blog post using the underlying AI model.\n\nInput Validation:\nThe endpoint expects the keywords to be a list with a minimum length of 2 and a maximum length of 5, with each keyword being no longer than 30 characters. If these conditions are not met, an error is thrown.\n\nError Handling:\nThe endpoint has a mechanism to handle potential API errors from OpenAI's language model. If there is a \"Request failed due to server shutdown\" error, it responds with an HTTP 503 status code and a \"Service Unavailable: API server shutdown\" message. For other unknown errors, it returns an HTTP 500 status code with a \"Internal Server Error: Unknown API error\" message.\n\nOutput Formatting:\nIf the 'include_html' flag is set, it converts new lines in the generated blog post to HTML break tags for better web display.\n\nOutput:\nThis endpoint returns a BlogPostResponse, which includes the blog post title, the generated blog post content, and the values of include_html and include_emojis flags, and the keywords used for generation.\n\nOverall, this endpoint provides a way for users to generate complete blog posts tailored to specific titles and keywords, significantly accelerating the content creation process with the help of AI.",
    "generate_blog_post_ideas_for_blogzee_ai_seo_social_content_generator": "This is the /generate_blog_ideas endpoint for the Blogzee AI service, designed to generate blog post ideas based on user-provided keywords.\n\nEndpoint Structure:\n\n    Method: GET\n    Route: /generate_blog_ideas\n    Response Model: BlogIdeasResponse\n\nFunctionality:\nThis endpoint accepts a list of keywords (minimum of 2, maximum of 5), each with a maximum length of 30 characters. The keywords are used to generate blog post ideas using the underlying AI model.\n\nInput Validation:\nThe endpoint validates the input parameters to ensure they are within the expected range and character limits. If the validation fails, it returns an HTTP 400 status code with an appropriate error message.\n\nError Handling:\nThe endpoint handles potential API errors from OpenAI's language model, specifically the \"Request failed due to server shutdown\" error. In this case, it returns an HTTP 503 status code with the detail \"OpenAI API is currently unavailable\". If an unknown error occurs, it returns an HTTP 500 status code.\n\nOutput:\nThis endpoint returns a BlogIdeasResponse, which is a list of blog post ideas generated based on the input keywords.\n\nOverall, this endpoint provides a way for users to leverage AI to generate creative blog post ideas tailored to specific keywords, helping to streamline the content creation process.",
    "generate_youtube_video_description_for_blogzee_ai_seo_social_content_generator": "Endpoint: /generate_youtube_video_description\n\nMethod: GET\n\nSummary: This endpoint generates an SEO-optimized, keyword-rich description for a YouTube video. It also optionally includes social media links.\n\nParameters:\n\n    video_title (required): The title of the YouTube video.\n    include_emojis (required): A boolean indicating whether to include emojis in the video description.\n    keyword1 to keyword5 (required for keyword1 and keyword2, optional for keyword3 to keyword5): Keywords relevant to the video. A minimum of two keywords and a maximum of five can be specified. Each keyword should not exceed 30 characters.\n    facebook_link, twitter_link, instagram_link, linkedin_link, tiktok_link (all optional): Valid URLs pointing to respective social media profiles.\n\nResponse: The response is a YouTubeDescriptionResponse model that includes the video title, video description (which includes the social media links if provided), a boolean indicating if emojis were included, and a list of the provided keywords.\n\nUse Case: Use this endpoint when you need to generate a unique, keyword-rich description for a YouTube video. This can be particularly useful for SEO and improving the visibility of your video in YouTube search results. Also, by providing social media links, you can direct your audience to your other platforms, enhancing your overall online presence.\n\nErrors:\n\n    400 Bad Request: Raised if the number of keywords is not between 2 and 5, or if a keyword exceeds 30 characters.\n    500 Internal Server Error: Raised for unknown API errors.\n    503 Service Unavailable: Raised if the OpenAI server is unavailable.",
    "statusforemissiontable_for_carbon_management": "Get results in details from the task id.",
    "getprocesscountforcelery_for_carbon_management": "Get results in details from the task id.",
    "statusforexcelemissionanalysis_for_carbon_management": "Get results in details from the task id.",
    "generatequiz_for_quizy_api": "This endpoint will return you the 5 questions, options, correct answer and explaination for the quiz topic you provide.",
    "generate_for_face_studio": "Generate a face given optional parameters: **gender**, **age**, and **ethnicity**. Ethnicity is an approximation of the corresponding ethnic/racial phenotype for a given option.",
    "locales_for_review_generator_ai_": "Get list of locales",
    "languages_for_review_generator_ai_": "Get list of Languages",
    "qr_code_for_ai_writer": "Generate a QR Code from a link or a text.",
    "keywords_for_ai_writer": "Quickly define keywords from a given text",
    "hashtags_for_ai_writer": "Generate hashtags from a given text.",
    "get_chat_detail_for_lemurbot": "Get the details for an active chat session.\nSend a bot slug and client slug as query parameters and the request will return the details from the last active chat session.",
    "get_a_bot_property_for_lemurbot": "Get a specific bot property by it's id and view it's details",
    "get_a_category_for_lemurbot": "Get a specific category by it's id and view it's details",
    "getforecast_free_for_the_apophis": "This endpoint is part of Basic (Free) subscriptions.\n\n**Available Currencies:**\n- BTC\n- ETH\n\n**Forecast Data:**\n- 3 Periods\n\n**Timeframe:**\n- 1h",
    "getforecastllist_mega_for_the_apophis": "Get Full Crypto Asset List with Expected Daily Forecast Change",
    "sourcingresume_for_screening_and_matching_resumes": " ",
    "getvoiceslist_for_microsoft_edge_text_to_speech": "Voices list for the param \"voice_name\" of the function \"GetDownloadUrl\"",
    "getdownloadurl_for_microsoft_edge_text_to_speech": "request with a long text and get the mp3 download URL created by the TTS engine.\n\nSupporting lots of languages with different voices, such as French, Spanish, Portuguese, Japanese, Korean, Chinese, Polish, Hindi and so on\n\nparams:\ntext - STRING : the text to be transformed to speeches.\nvoice_name - STRING: the voice and language for the speeches.",
    "get_job_status_for_large_text_to_speech": "Get the status and results of a job",
    "getgeneration_for_dream_diffusion": "Gets the generation status and generated images",
    "gettraining_for_dream_diffusion": "Gets the training status",
    "voices_endpoint_for_text_to_speech_v2": "Get List of all available speakers that can be used as voice in /tts Endpoint\n\n**Format of Voices** : Language-Accent-Speaker_Name",
    "have_a_chat_with_our_bot_for_islam_ai_api": "Have a conversation with our Islam&AI Bot in which it remembers your previous conversation! (upto 30 texts)",
    "get_an_answer_to_your_question_for_islam_ai_api": "Get answer to an Islamic question from our Islam&AI bot",
    "prediction_for_timeseries_prediction_model": "predict next period with dates and values",
    "get_job_by_task_id_for_midjourney_best_experience": "you can get the generate job  and  action job status by the task_id, and the task_id will expired at 24 hours after",
    "ping_for_midjourney_best_experience": "not for use",
    "teste_for_teste": "teste",
    "status_for_getting_pdf_urls_for_carbon_management": "Get results in details from the task id.",
    "status_for_mapper_for_carbon_management": "Get results in details from the task id.",
    "status_for_mapper_v2_upload_file_for_carbon_management": "Get results in details from the task id.",
    "progress_for_omniinfer": "This page will help you get started with text to image. Support ControlNet.",
    "get_models_for_omniinfer": "This page will help you get started with text to image. Support ControlNet.",
    "summarize_for_article_extractor_and_summarizer": "Summarizes the article after extracting it from the specified url.",
    "extract_for_article_extractor_and_summarizer": "Extract an article body and markdown version of the body.",
    "textsentai_api_for_textsentai_ai_powered_text_sentiment_analyzer_": "Our API can analyze text in over 140 languages",
    "get_generation_status_for_midjourney": "Get status of the previously posted job.\n\n- outcome - if Failure, then it comes from MJ, like censorship.\n- estimated_time - in seconds. based on previous generation.\n- percent - available when actual generation started",
    "get_binary_image_set_for_midjourney": "returns requested binary image (\"image/png\"). Full image set",
    "get_upscaled_binary_image_for_midjourney": "returns requested binary image (\"image/png\") from the set",
    "get_a_bot_category_group_for_lemurbot": "Get a specific bot category group by it's id and view it's details",
    "get_a_conversation_turn_for_lemurbot": "Get a specific conversation turn by it's id and view it's details",
    "list_all_conversation_turns_for_lemurbot": "Each conversation has conversation turns.\nEach turn represents an input from the client and the output from the bot.",
    "get_classes_for_lexai_api": "Get available detection classes",
    "emoai_api_for_emoai_ai_powered_text_emotion_analyzer": "**\ud83d\ude00 Our AI-powered endpoint can analyze text in over 140 languages**",
    "text_for_ai_writer": "Generate content",
    "get_a_bot_for_lemurbot": "Get a specific bot by its id. (e.g. 1)",
    "get_a_category_group_for_lemurbot": "Get a specific category group by it's id and view it's details.\nYou are able to view your own category groups and locked category groups.\n'Locked' category groups are a master set of records available to link to your bots",
    "list_all_bot_category_groups_for_lemurbot": "Get a list of category groups which are linked to user owned bots (not locked bots).",
    "revise_for_ai_writer": "Revise and correct any text",
    "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices",
    "get_list_of_audios_for_text_to_speech_pro": "Get List of Audios",
    "statusforonepdffilecrawler_for_carbon_management": "Get results in details from the task id.",
    "statusforemissionreductiontarget_for_carbon_management": "Get results in details from the task id.",
    "chatgpt_detector_api_for_chatgpt_detector_ai_powered_chatgpt_answer_detector_": "Our API can detect text in over 140 languages",
    "getforecast_ultra_for_the_apophis": "This endpoint is part of Ultra subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 10 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h",
    "text_sentiment_analysis_for_text_sentiment_analysis_": "Analyse the Sentiment of the given text context",
    "checkfactorswithmongodb_for_carbon_management": "Check if the factor in mapping table is correct.",
    "eventget_for_31events_send_native_calendar_invites": "",
    "eventresponses_for_31events_send_native_calendar_invites": "",
    "accoungget_for_31events_send_native_calendar_invites": "",
    "retrieve_audio_file_for_melrose_labs_voice_api": "Retrieve audio file from previously converted text-to-speech. File is in MP3 format.",
    "retrieve_text_for_melrose_labs_voice_api": "Retrieve text from previously converted speech-to-text.",
    "get_endpoint_for_melrose_labs_voice_api": "Get endpoint for a number",
    "usuarios_for_hotspot_social_1": "banco para usuarios",
    "get_message_status_for_d7_viber": "Retrieve the delivery status of Viber messages that were sent earlier.",
    "check_balance_for_d7_viber": "Retrieve details about your D7API account's current balance.",
    "check_account_balance_for_eazita_com": "Retrieve your current eazita account balance.",
    "flask_app_for_flask": "flask application",
    "list_available_numbers_for_a_country_for_melrose_labs_voice_api": "Get list of available telephone numbers for a country",
    "free_json_endpoint_for_free_phone_number_lookup_and_validation_api": "Please see [https://phone-number-api.com/docs/json](url) for details",
    "verify_for_veriphone": "Global phone number verification",
    "example_for_veriphone": "Get an example phone number for any country",
    "api_command_username_test_password_test_cmd_x_for_bulksmsapi": "HTTP GET Commands",
    "redeploy_for_maytapi_whatsapp": "Redeploys docker instance of your phone. If your phone having any unexpected problems you can use this endpoint to reboot the instance.",
    "logs_for_maytapi_whatsapp": "Gets logs.",
    "getqrcode_for_maytapi_whatsapp": "Gets the image of QR-Code.",
    "get_an_answer_for_english_talking": "Get an answer",
    "prefereces_for_getbs": "Prefereces",
    "getbars_for_getbs": "getBars",
    "check_lists_for_mailvalid": "The route for checking the lists of disposable or non disposable emails",
    "green_journal_for_revista_verde": "A Revista Verde (RV) \u00e9 peri\u00f3dico cient\u00edfico internacional semestral do Programa Escola Verde e do Grupo de Pesquisa em Educa\u00e7\u00e3o Ambiental Interdisciplinar (CNPq) sobre problem\u00e1ticas socioambientais e sustentabilidade.\n\nWebsite: https://revistaverde.escolaverde.org",
    "media_for_serverless_blogging": "Get image from your sapphire account",
    "blog_for_serverless_blogging": "Open Individual blog",
    "blogs_for_serverless_blogging": "Query blogs from your account",
    "send_sms_for_hqsms": "",
    "health_for_stampr": "",
    "https_i_imgur_com_jm9tesv_jpg_for_https_i_imgur_com_jm9tesv_jpg_": "https://i.imgur.com/JM9TESV.jpg/",
    "events_getbookableitemlist_for_sagenda_free_booking_system": "list of the bookable Items",
    "phone_number_for_phone_and_email_validator_v2": "E164 Format. Eg 19542567890 for USA",
    "ip_address_for_phone_and_email_validator_v2": "Eg: 8.8.8.8",
    "email_id_for_phone_and_email_validator_v2": "eg: email@example.com",
    "validate_phone_for_validate_phone": "\u201cValidate Phone\u201d API Validates single phone number or bulk phone  numbers.",
    "demo_max_for_another_rapid_test": "hello",
    "events_eventid_parameters_for_signl4_critical_mobile_alerting": "Get parameters of an event by id.",
    "categories_teamid_metrics_for_signl4_critical_mobile_alerting": "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/metrics",
    "teams_teamid_alertreports_filename_for_signl4_critical_mobile_alerting": " ",
    "get_verify_for_checky_verify_phone_number": "To use this endpoint, you need to make an HTTP GET request to the API with the phone and country parameters in the query string.",
    "v1_qrcode_for_qr_code_by_api_ninjas": "API Ninjas QR Code API endpoint. Returns a QRCode image binary specified by input parameters.",
    "owner_info_for_web_push_notifications_server": "Fetch owner's details",
    "index_for_web_push_notifications_server": "Endpoint to fetch server information",
    "time_for_pubnub_network": "Timetoken from PubNub Network",
    "history_for_pubnub_network": "Get older messages.",
    "stickers_trending_for_mojitok_sticker_store_sdk": "API that provides information on creators and stickerpacks of 16 popular stickers",
    "m_for_barbaraaa": "crypto",
    "documentation_for_cakemail": "",
    "endpoint1_for_bcolimited": "endpoint desc",
    "messages_getpendingmessagesfromaccount_for_trumpetbox_cloud": " ",
    "devices_getasingledeviceinfofromaccount_for_trumpetbox_cloud": " ",
    "groups_for_serverless_blogging": "Get different blog groups of your account.",
    "message_send_for_sendsms": "",
    "sending_sms_otp_custom_otp_custom_template_for_2factor_authentication_india": "This endpoint is used to send SMS OTP to India",
    "sending_voice_otp_auto_generated_otp_for_2factor_authentication_india": "This endpoint is used to send Auto Generated VOICE OTP to India",
    "check_balance_addon_services_for_2factor_authentication_india": "Check Balance For Addon Services",
    "postalcode_for_phone_and_email_validator_v2": "Postal Code or Zip Code to Location For USA only",
    "kirim_pesan_for_grup_terbuka": "api untuk kirim pesan",
    "sawyer_test_for_sawyertest": "test",
    "list_groups_for_whin": "This endpoint returns a list of the groups you created through whin.",
    "signup_for_whin": "This endpoint is **ONLY** used to enter the code you received to signup. Follow this [video](https://youtu.be/uOZ-oH4kP58), or read the [tutorial](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/what-to-do-to-start-using-whin%3F-1), to learn how to start using whin.",
    "hk_receiver_for_whin": "this endpoint shall be used by the origin services, it's **NOT** to be used on the playground.",
    "validate_phone_number_for_phone_number_validator": "Easily and quickly looks up details about a phone number",
    "fetchoauthauthorizedapplications_for_upcall": "Fetch Oauth authorized applications",
    "fetchwebhook_for_upcall": "Get a specific webhook",
    "fetchcustomfields_for_upcall": "Get custom fields",
    "purgequeue_for_maytapi_whatsapp": "Clears phone's send message queue.",
    "queue_for_maytapi_whatsapp": "Returns the queue info of the phone.",
    "regions_for_phone_formatter": "Returns a collection of supported regions for the specified\n IETF BCP 47 language tag string.",
    "simple_for_phone_formatter": "A simplified version of the formatting method that does not accept additional filtering and parsing parameters\n and uses the language value from the \"Accept-Language\" header.",
    "simpleregions_for_phone_formatter": "Returns a collection of supported regions. Method use \"Accept-Language\" header value for output list of\n regions on specific language",
    "whatsmyip_for_networking": "This will fetch your public IP.",
    "endpoint_for_on_hold_audio_messages": "It needs for ordering messages",
    "websocket_checker_for_whin": "Whin-receive (thick-client) websockets checker. \nThis endpoint is **ONLY** used to authorize websocket connections to the backend by thick clients. The Response is a token needed to complete handshaking.",
    "create_a_group_for_whin": "This API will create a group, it will add you, and will promote you to Admin of the group. Check this [video](https://youtu.be/wD0DWoua0L4) to learn how to use it.",
    "v1_verify_for_quick_email_verification": "",
    "tariff_plans_api_for_mobile_recharge_plans_api_tariff_plans_free": "Just send the operator and circle and GET ALL PLANS according to circle and operator our api",
    "advanced_phone_number_lookup_for_scout": "**Advanced Phone Number Information**\n\n*retrieves valuable technical data about a phone number*\n\n- validity\n\n- approximate location\n\n- timezone\n\n- carrier\n\n- line type\n\n- ported status\n\n- carrier\n\n- robocall/spam score\n\n- much more",
    "basic_phone_number_validation_for_scout": "**Basic Phone Number Validation**\n\n- determine if a phone number is in a valid format \n\n- determine if a phone number is impossible for a particular region\n\n- properly format the number for various scenarios like international or local dialing\n\n- attempts to determine line type\n\n- determines country and country code",
    "list_of_languages_for_languagetool": "",
    "get_places_json_for_quickblox": "Retrieving a list of the created places by application",
    "get_geodata_find_json_for_quickblox": "Retrieve all (by default) geodata for current application. The ID of the application is taken from the token which is specified in the request",
    "get_blobs_uid_xml_for_quickblox": "Download File (Get File as a redirect to the S3 object) by uid. 'uid' is a parameter which should be taken from the response of the request for the creating a file. To have a possibility to download a file you should set a status complete to your file firstly.",
    "rebootaccount_for_green_api": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f [Reboot](https://green-api.com/docs/api/account/Reboot/)",
    "downloadfilefromincomingmessage_for_green_api": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f [DownloadFile](https://green-api.com/docs/api/receiving/files/DownloadFile/)",
    "getqrcode_for_green_api": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f [QR](https://green-api.com/docs/api/account/QR/)",
    "command_for_dudu": "Please check http://dudu.com/docs/api/command/list for the proper parameter and method combinations",
    "send_message_for_clickatell": "",
    "send_sms_for_smslink": "Send SMS",
    "account_balance_for_smslink": "Account Balance",
    "fetchcampaign_for_upcall": "Get a specific campaign",
    "fetchwebhooks_for_upcall": "Get all webhooks",
    "fetchcampaignquestions_for_upcall": "Get campaign's questions",
    "v1_validatephone_for_validate_phone_by_api_ninjas": "API Ninjas Validate Phone API endpoint. Returns metadata (including whether it is valid) for a given phone number.",
    "fetchcallsforcampaign_for_upcall": "Get all calls for a campaign",
    "acceso_al_chat_for_quierochat": "Conecta al usuario con el chat",
    "hesab_yarat_for_hesab": "Yoxdur",
    "get_country_codes_for_truecaller_v2": "This will return list of all country codes.",
    "get_details_for_truecaller_v2": "This end point will display the search details for the number you are looking for.",
    "test_api_for_truecaller_v2": "This API is to test if server is up and running",
    "message_send_for_zipwhip": "Sends a message from the logged in user's phone number.",
    "user_login_for_zipwhip": "Takes a username and password and returns json with the account's session key. A sessionkey lasts forever, so it is best to store the sessionkey and use it for future purposes.",
    "contact_list_for_zipwhip": "This method returns all contacts associated with session provided.",
    "fetchcontactanswers_for_upcall": "Get contact's answers",
    "get_response_for_automatic_custom_response_creator": "There are 3 params necessary : \n\n- First - Add a review \"avis\" (ex. \"Merci pour votre accueil, c'\u00e9tait parfait\")\n- Then - Add a \"business_type\" (ex. \"Restaurant\")\n- Finaly - Add a \"business_brand\" (ex. \"Fuzi\")",
    "subscriptions_subscriptionid_userlicenses_for_signl4_critical_mobile_alerting": " ",
    "subscriptions_subscriptionid_prepaidsettings_for_signl4_critical_mobile_alerting": " ",
    "alerts_alertid_attachments_attachmentid_for_signl4_critical_mobile_alerting": " ",
    "get_rich_menu_id_of_user_for_line_messaging": "Gets the ID of the rich menu linked to a user.",
    "get_default_rich_menu_id_for_line_messaging": "Gets the ID of the default rich menu set with the Messaging API.",
    "get_number_of_sent_reply_messages_for_line_messaging": "Gets the number of messages sent with the /bot/message/reply endpoint.",
    "eventlist_for_31events_send_native_calendar_invites": "",
    "get_for_iss_location": "gets you the data",
    "get_rich_menu_list_for_line_messaging": "Gets a list of all uploaded rich menus.",
    "get_profile_for_line_messaging": "Gets user profile information.",
    "fetchcalls_for_upcall": "Get all calls",
    "fetchquestionanswers_for_upcall": "Get question's answers",
    "get_bulk_details_for_truecaller_v2": "This end point will display the search details for the bulk number's you are looking for.",
    "contacts_for_maytapi_whatsapp": "Returns the contacts in the current whatsapp instance.",
    "getscreen_for_maytapi_whatsapp": "Returns the screenshot of the screen in the current session",
    "check_email_for_email_checker_and_validator": "Just paste the Email Address you want to validate and wait for the results",
    "article_index_for_test_apideno": "article index",
    "search_for_skype_graph": "Search for a Skype user by email address or name",
    "accountlist_for_31events_send_native_calendar_invites": "",
    "get_blobs_json_for_quickblox": "Get list of files for the current user. The ID of the user is taken from the token specified in the request",
    "2_mensagens_do_chat_chat_message_for_compras_net_api": "Chat",
    "1_obter_c_digo_do_chat_code_to_chat_for_compras_net_api": "Obter C\u00f3digo do Chat",
    "group_invite_link_for_whin": "the endpoint returns an invite link url for a group you own.",
    "sms_mt_send_sms_get_for_wavecell_sms": "Send a SMS message using Wavecell HTTP GET",
    "get_delivery_status_for_wavecell_sms": "This API should be used to retrieve the current delivery status of a message sent using Wavecell.",
    "fetchspecificcontact_for_upcall": "Get a specific contact",
    "api_whois_for_retrieve_dns_entries": " ",
    "api_schema_for_retrieve_dns_entries": " ",
    "api_dns_for_retrieve_dns_entries": " ",
    "retention_for_flowplayer_drive": "Get retention data for the specified video. Retention data answers following questions: How long do viewers spend watching your videos? At what point do they lose interest or tune out and go elsewhere? The returned data tells the percentage (and count) of viewers that watched the video up to a given time in the video's timeline.",
    "show_account_for_flowplayer_drive": "Shows the account",
    "videos_for_flowplayer_drive": "List all videos in the library",
    "api_soa_domain_for_dns_lookup": "Sample request:\r\nGET /api/soa/oxog.net",
    "api_any_domain_for_dns_lookup": "Sample request:\r\nGET /api/any/oxog.net",
    "api_txt_domain_for_dns_lookup": "Sample request:\r\nGET /api/txt/oxog.net",
    "carrier_endpoint_for_free_phone_carrier_lookup": "The phone number carrier provides useful information about location. Please any Bug contact me at @ta9ra9pa9 on Telegram",
    "receivenotification_for_green_api": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f [ReceiveNotification](https://green-api.com/docs/api/receiving/technology-http-api/ReceiveNotification/)",
    "logoutaccount_for_green_api": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f [Logout](https://green-api.com/docs/api/account/Logout/)",
    "lopp1_for_bitikas1": "niisamalopp",
    "block_number_voice_service_for_2factor_authentication_india": "This endpoint is used to add number to VOICE Blocklist",
    "verify_sms_otp_input_for_2factor_authentication_india": "This endpoint is useful in verifying user entered OTP with sent OTP",
    "block_number_sms_service_for_2factor_authentication_india": "This endpoint is used to add number to SMS Blocklist",
    "fetchcampaigns_for_upcall": "Get all campaigns",
    "form_check_user_for_botlibre": "The form-check-user API validates user, and returns the user's details.",
    "form_check_instance_for_botlibre": "The form-check-instance API validates that a bot ID or name exists, and returns the bot's details.",
    "form_chat_for_botlibre": "The form-chat API receives a chat message and returns the chat bot's reply as an XML document.",
    "search_mobile_for_caller_id": "Retrieve personal details with mobile number",
    "getarchive_for_punto_61": "getarchive",
    "on_line_for_generaltalker": "LINE\u30dc\u30c3\u30c8\u5c02\u7528\u306e\u96d1\u8ac7API\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306fon_line\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    }\n}\n```",
    "on_slack_for_generaltalker": "slack\u30dc\u30c3\u30c8\u5c02\u7528\u306e\u96d1\u8ac7API\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306fon_slack\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    }\n}\n```",
    "on_general_for_generaltalker": "\u3044\u308d\u3044\u308d\u306a\u30dc\u30c3\u30c8\u3067\u3054\u5229\u7528\u3044\u305f\u3060\u3051\u308b\u96d1\u8ac7API\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306fon_general\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    }\n}\n```",
    "18_1_app_config_for_hog": "\u53d6\u5f97\u7cfb\u7d71\u53c3\u6578",
    "api_a_domain_for_dns_lookup": "Sample request:\r\nGET /api/a/oxog.net",
    "api_aaaa_domain_for_dns_lookup": "Sample request:\r\nGET /api/aaaa/oxog.net",
    "api_mx_domain_for_dns_lookup": "Sample request:\r\nGET /api/mx/oxog.net",
    "contact_delete_for_zipwhip": "This method can take one or more contact ID(s) and delete those records from Zipwhip. A contact's ID is available from contact/list or part of the return from message/send.",
    "group_removemember_for_zipwhip": "Remove a group member. This is useful if a group member has requested to opt-out of notifications.",
    "alerts_alertid_notifications_for_signl4_critical_mobile_alerting": "Get notifications of all users by alert id.",
    "subscriptions_subscriptionid_prepaidbalance_for_signl4_critical_mobile_alerting": " ",
    "teams_teamid_setupprogress_for_signl4_critical_mobile_alerting": " ",
    "hellosalut_for_hellosalut": "",
    "getcontacts_for_whatsapp_private_api": " ",
    "getaccount_for_whatsapp_private_api": "API for get list account under the projects",
    "get_rich_menu_for_line_messaging": "Gets a rich menu via a rich menu ID.",
    "download_rich_menu_image_for_line_messaging": "Downloads an image associated with a rich menu.",
    "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api": "Get list of available telephone numbers for a country and given prefix",
    "list_allocated_numbers_for_melrose_labs_voice_api": "Get list of allocated numbers",
    "getlatestlocation_for_sim_based_location_tracking": "<p>This API can be used for getting latest location of the passed number.</p>\n\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>phone_number</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n\n<p>\n<h4>Wrong or not added mobile number passed</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">\n{\n    \"status\": \"invalid_mobile\"\n}\n</code></pre>",
    "numberlist_for_sim_based_location_tracking": "\n<p>All  of <b>last updated locations</b> of provided concents phone numbers can be fetched through this endpoint,</p>\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n",
    "checkconsent_for_sim_based_location_tracking": "<p>You can use this endpoint to check concent status of the passed mobile number.</p>\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>tel</td>\n<td>Yes</td>\n<td> 10 digit comma seperated mobile number used for creating trip</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>",
    "weather_dataset_for_weather_dataset": "Check The Weather Api Process",
    "contact_save_for_zipwhip": "Save details about the contact for the given phone number.",
    "conversation_get_for_zipwhip": "Retrieves conversation details and messages that specific to the conversation ID provided.",
    "traffic_for_flowplayer_drive": "Get traffic statistics for the specified video.",
    "getchats_for_green_api": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f [GetContacts](https://green-api.com/docs/api/service/GetContacts/)",
    "getoutgoingmessagesjournal_for_green_api": "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f [LastOutgoingMessages](https://green-api.com/docs/api/journals/LastOutgoingMessages/)",
    "sending_voice_otp_custom_otp_for_2factor_authentication_india": "This endpoint is used to send VOICE OTP to India",
    "pull_delivery_report_for_2factor_authentication_india": "Pull Delivery Report - Transactional SMS",
    "getlistphones_for_maytapi_whatsapp": "Gets the list of phones with their id's and numbers that are registered to the given product id.",
    "hook_receiver_for_whin": "This endpoint shall be triggered by the webhook origin and is not intended to be used through this frontend.",
    "show_url_for_whin": "This endpoint is used to request the webhook routes created on your account. \nLearn how to use it on this [video](https://youtu.be/8WyG_becZXM)",
    "tracking_correo_argentino_create_task_service_tracking_code_for_transportistas_de_argentina": "Create task to get the history.\nThe result of the trace can be obtained after approximately 20-60 seconds by calling the endpoint: /tracking/correo_argentino/result_task/:task_id\n**IMPORTANT: ** The result will only be stored for approx 1 hour.",
    "user_followers_for_spotify_data": "user-followers",
    "get_citations_for_dicolink": "Get citations of a word",
    "get_transaction_as_is_from_backend_v2_for_chain49": "Returns transaction data in the exact format as returned by backend, including all coin specific fields",
    "get_open_profile_status_for_fresh_linkedin_profile_data": "Given a LinkedIn profile URL, the API will let you know if that profile is \u201copen profile\u201d or not. **1 credit per call.**",
    "get_company_data_by_id_for_fresh_linkedin_profile_data": "Given a company\u2019s LinkedIn internal ID, the API will return valuable data points in JSON format. **1 credit per call.**",
    "sold_house_prices_for_uk_real_estate_rightmove": "Sold house prices",
    "pvwatts_for_nrel_national_renewable_energy_laboratory": "NREL's PVWatts calculates the energy production of grid-connected photovoltaic (PV) energy systems. This service estimates the performance of hypothetical residential and small commercial PV installations.  Version 4 is the current version of the PVWatts API. Previous versions have been deprecated and its users are encouraged to migrate to this newly enhanced version.",
    "search_links_in_website_for_advanced_serp_operators": "Search for all links in a website",
    "search_words_in_title_for_advanced_serp_operators": "Find a web page with certain words in the title",
    "check_index_block_pages_for_advanced_serp_operators": "Check if Indexed Pages You Thought Were Blocked, are indeed not blocked.",
    "zestimate_history_for_zillow_v2": "Zestimate history by zpid",
    "year_make_lookup_returns_json_for_hull_id_boat_hin_decoder": "Lookup the boat manufacturers (makes) for a given year. This API can be used to create selection drop down menu for year and make. It will return json results",
    "makes_for_car_database": "Return all makes",
    "download_stream_for_yt_api": "Stream or download info.\nQuota cost is 5 units.",
    "related_videos_or_playlists_for_yt_api": "Get related videos or playlists.\nQuota cost is 1 unit.",
    "search_channel_s_videos_playlists_for_yt_api": "Search channel's videos and playlists, also get channel details.\nQuota cost is 1 unit.",
    "getpetbyid_for_pet_store": "Returns a single pet",
    "search_for_words_in_url_for_advanced_serp_operators": "Search for words in URL",
    "search_within_website_for_advanced_serp_operators": "Search within a website",
    "get_generations_by_model_id_for_car_specs": "Returns a list of generations of a car model.",
    "get_makes_for_car_specs": "Returns a list of all car manufacturers available in the API.",
    "download_entire_database_for_car_specs": "Returns a zipped csv file containing all the data that the Car Specs API owns.",
    "get_mempool_v2_for_chain49": "Get a list of transaction IDs currently in the mempool of the node (meaning unconfirmed transactions not included in any block yet)\n\nNote: this route was implemented by us and is therefore not yet supported by existing blockbook clients.",
    "estimate_transaction_fee_v2_for_chain49": "Returns an estimated transaction fee for a specific confirmation target.\nIf you want your transaction to be included in the next block, then you give 1 as parameter. If it is not urgent, then you can wait a bit longer and get an estimation for the fifth next block.",
    "autocomplete_results_for_google_search_2": "Use this API to get suggestions based on the entered keyword.",
    "get_open_to_work_status_for_fresh_linkedin_profile_data": "Given a LinkedIn profile URL, the API will let you know if that profile is \u201copen to work\u201d or not. **1 credit per call.**",
    "get_company_posts_for_fresh_linkedin_profile_data": "Get 50 latest posts from a LinkedIn company page. **2 credits per call.**",
    "getproducts_for_feku_json": "To Get all Product list",
    "latest_rates_for_commodity_rates_api": "Check the real-time exchange rate data updated every 60 seconds with this endpoint. \n \n\nNote: All the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD",
    "search_for_verses_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns verses that contain term(s). Terms are not case sensitive. \nBooks, operators etc. are NOT CASE SENSITIVE\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **",
    "types_for_car_data": "get a list of supported types",
    "get_alert_adverts_for_fluximmo": " ",
    "comment_info_for_youtube_v3_v2": "Get comments info.",
    "retrieve_collection_traits_for_opensea_v2": "This endpoint is used to retrieve trait information about a single collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "sizes_all_countries_for_africa_api_": "Gets the sizes of all countries in Africa\nTakes parameter: <country_name> with value <all>\nResponse example:\n[54 items\n0:{3 items\n\"size\":2381741\n\"unit\":\"km2\"\n\"country\":\"Algeria\"\n}\n]",
    "sizes_percountry_for_africa_api_": "Gets the size of a specific country.\nTakes parameter: <country_name>\nResponse example:\n{\n\"size\":580367\n\"unit\":\"km2\"\n\"country\":\"Kenya\"\n}",
    "languages_per_country_for_africa_api_": "Returns a json of all languages spoken in a specific country in Africa\nTakes parameter <country_name> \nResponse example:\n{2 items\n\"other_languages\":[12 items\n0:\n\"English\"\n1:\n\"Kikuyu\"\n2:\n\"Luhya\"\n3:\n\"Luo\"\n4:\n\"Kalenjin\"\n5:\n\"Kamba\"\n6:\n\"Meru\"\n7:\n\"Embu\"\n8:\n\"Maasai\"\n9:\n\"Turkana\"\n10:\n\"Samburu\"\n11:\n\"Somali\"\n]\n\"national_language\":\"Swahili\"\n}",
    "top_traits_for_rich_nft_api_metadata": "Get NFT tokens in specific collection.\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**Filter by traits example**:\ntraits=[{\"name\":\"type\",\"value\":\"Female\"}]\n\n**order_by** \nrarity_rank_at \nOR\n-rarity_rank_at",
    "getmentions_for_get_twitter_mentions": "Find your brand, competitor, or any other query mentions across Twitter",
    "area_code_for_phone": "Get the International Country Calling Code and the Local Area Code information",
    "getcommunitiesbytopic_for_powerbi": "Get Power BI communities by topic.",
    "get_all_employees_payment_cards_for_human_resources_api": "This endpoint gets all the available records in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...",
    "country_location_api_for_country_location_api": "The Country Location API is a RESTful API that allows developers to retrieve location data for any country in the world. Using a GET request with a country parameter, the API retrieves information about the specified country, such as its name, capital city, region, subregion, population, languages, and currencies.",
    "get_channel_details_for_youtube_media_downloader": "This endpoint fetches details of a YouTube channel.",
    "get_post_details_for_youtube_media_downloader": "This endpoint fetches details of a YouTube community post.",
    "get_region_details_for_gis_engine": "Get the region details by providing the country code and region code",
    "get_districts_for_gis_engine": "Get districts by providing the country code, region code and city number\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint\n- city_num can be fetch from the Get Cities endpoint",
    "login_data_for_ssh_honeypot": "",
    "proxy_requests_for_ssh_honeypot": "",
    "commands_run_for_ssh_honeypot": "Commands being run by honey pot logins",
    "replies_for_axesso_instagram_data_service": "Fetch replies for a given commentId.  CommentId can be obtained from the comments endpoint response in field node.id. Also the field edge_threaded_comments.page_info.end_cursor needs to be passed for the given comment which can also be found in the response from the comments endpoint.",
    "get_livestreams_from_category_for_kick_com_api_kick_api": "Returns livestreams from category.",
    "user_tweets_for_twitter_data": "user-tweets",
    "user_followers_for_twitter_data": "user-followers",
    "user_by_rest_id_for_twitter_data": "user-by-rest-id",
    "autocomplete_pincodes_for_autocomplete_india": "Autocomplete PinCodes",
    "autocomplete_localities_for_autocomplete_india": "Autocomplete Localities",
    "autocomplete_cities_for_autocomplete_india": "Autocomplete Cities",
    "random_credit_card_by_id_for_fake_data_generator": "Retrieve fake credit cards by id.",
    "random_crypto_by_id_for_fake_data_generator": "Retrieve fake crypto assets by id.",
    "random_address_for_fake_data_generator": "With this enpoints you can manage the generation of fake addresses and retrieve them by id.",
    "retrieve_blur_events_for_blur": "This endpoint is used to retrieve events, customisable.\n\n**Filter examples:**\n{\"count\":50,\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\n{\"count\":50,\"tokenId\":\"541\",\"contractAddress\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_tokens_listings_for_blur": "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nFilter for Listed Tokens: {\"cursor\":null,\"traits\":[],\"hasAsks\":true}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_user_airdrop_rewards_for_blur": "Retrieve user airdrop rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "transactions_for_real_estate_records": "Show transactions given a zipcode. The API returns 50 records each time in descending order by date and supports pagination. This API requires a subscription cost.\n\nThe returned data shows the summary of information. To get further detail (such as the unit of a building that posts the most recent transaction, use summary API.\n\nSample data of the API when query zipcode 10019 is:\n \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"310\",\n        \"STREET\": \"W 56th St\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL COOP UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-07-21T00:00:00.000Z\",\n      \"lastSalesAmount\": 514000,\n      \"maxSalesAmount\": 1359000,\n      \"TotalRecords\": 74\n    },",
    "users_for_moodring": "Get all users of MoodRing",
    "quiz_for_moodring": "Get one quiz by quizId.",
    "quizzes_for_moodring": "Retrieves all the MoodRing Quizzes.",
    "search_for_properties_for_zillow_v2": "Search for filtered properties by address, neighborhood, city, or ZIP code.\nPS : Searching by address would return the details of the property instead of a list\nFor a list of properties, you can select the output format (JSON , CSV , XLSX) using the optional \"output\" parameter.",
    "search_for_agents_for_zillow_v2": "Search for agents by location and name",
    "relatedtopic_for_gtrend": "Get related topic from given query",
    "page_info_for_axesso_facebook_data_service": "Fetch information for a page like followers and many more",
    "search_for_videos_movies_for_youtube_media_downloader": "This endpoint searches for YouTube videos (movies) with optional filters. Pagination scraping is supported. Thumbnails will not be blurred by age safety.",
    "search_term_for_cryptocurrencies_data_collection": "search term",
    "seller_products_for_rainforest": "The Seller Products Parameters are applicable when making a request with type=seller_products to retrieve seller product listing results for a single seller on Amazon - the seller is specified using either the seller_id and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon seller product listing page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nSeller product listing results are retrieved from the seller product listings page for a single seller on Amazon. You can retrieve the seller_id value for a given seller from other Rainforest requests, such as type=offers requests.",
    "gettopics_for_powerbi": "Get Power BI topics.",
    "getnewsletters_for_power_bi_smartable": "Get Power BI newsletters",
    "getsponsorships_for_power_bi_smartable": "Get Power BI sponsorships",
    "getlearningresources_topic_for_power_bi_smartable": "Get Power BI learning resources by topic.",
    "retrieve_blur_collections_for_opensea_v2": "This endpoint is used to retrieve information about all collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_events_for_opensea_v2": "This endpoint provides a list of events that occur on the NFTs that are tracked by OpenSea. The event_type field indicates the type of event (transfer, successful auction, etc) and the results are sorted by event timestamp.\n\nNote that due to block reorganizations, recent events (less than 10 minutes old) may not reflect the final state of the blockchain.",
    "search_for_lexicala": "search for entries with filters in query",
    "video_comments_for_youtube_v3_v2": "Get YouTube video comments.",
    "video_details_for_youtube_v3_v2": "Get YouTube video details.\n\nNote:\n**topicDetails** part is not enabled. If you want this part to be included in the API response then please contact us.",
    "auto_complete_for_redfin_base": "You send a request and receive the following information:\n- `id`: The unique identifier for the city.\n- `type`: The type of the city.\n- `name`: The name of the city.\n- `subName`: The additional description of the city.\n- `url`: The direct URL to access the city's information page on Redfin.com.\n- `active`: The active status of the city.\n- `claimedHome`: The status of claimed home ownership.\n- `invalidMRS`: The invalid MRS (Market Revenue Share) status.\n- `businessMarketIds`: The list of relevant business market IDs.\n- `countryCode`: The country code.\n- `internalSearchVolume`: The internal search volume statistic.",
    "google_videos_for_google_search_2": "Using this API you can get the JSON data of the video results.",
    "get_brand_by_id_for_cigars": "Grab a Brand by it's Database ID",
    "get_related_questions_for_advanced_serp_operators": "The People Also Ask For Keywords Tool. We scrape Google for all the keywords shown in the \"people also ask for\" boxes, that it shows when you click a link and then go back to the Google SERP.",
    "find_competition_mentions_for_advanced_serp_operators": "Find PR opportunities by finding competitor mentions",
    "search_for_youtube_v3_v2": "Search from YouTube",
    "ai_bot_for_chat_gpt_ai_bot": "Simply ask for whatever you require, and our API will provide the solutions. Let us know your needs, and our AI BOT will effortlessly generate the marketing copy for you. With this convenient tool, you'll have more time to dedicate to your passions.",
    "get_all_cat_breeds_for_cat_breeds": "This endpoint will return back all available cat breeds that are available",
    "get_breed_information_for_cat_breeds": "This endpoint will return information for a specific cat breed",
    "group_breed_data_by_property_for_cat_breeds": "This endpoint will group the available data by the given property and the property value. The property can be any property of the JSON response object including the properties of the meta object.",
    "auto_complete_for_youtube": "Auto Complete",
    "channel_playlists_for_youtube": "Channel Playlists",
    "home_for_youtube": "Home",
    "trend_list_for_twitter_pack_v2": " ",
    "trending_charts_for_youtube_v3_lite": "Get Trending Videos list or Chart.\nQuota cost is 1.",
    "categories_search_for_unofficial_trust_pilot": "Search for categories in which the term or phrase belong to",
    "business_units_get_web_links_for_unofficial_trust_pilot": "Get web link of a business unit",
    "health_check_for_gis_engine": "Provide a way to test connectivity to API",
    "search_for_opensea_v2": "Blur Search Query\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_collection_bids_for_opensea_v2": "This endpoint is used to retrieve the collection bid price levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "independence_per_country_for_africa_api_": "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name>",
    "list_available_blockchains_for_chain49": "Get an array of active blockchains",
    "get_tickers_v2_for_chain49": "Returns currency rate for the specified currency and date. If the currency is not available for that specific timestamp, the next closest rate will be returned. All responses contain an actual rate timestamp.",
    "search_for_unicode_codepoints": "Search for Codepoints. This API exposes the functionality of the main site\u2019s search.",
    "plane_for_unicode_codepoints": "Information about a Unicode plane",
    "events_for_data_police_uk": "",
    "videos_for_youtube_v3_lite": "Get YouTube Video details.\nQuota cost is 1. For statistics part, quota is +1.",
    "average_salary_for_adzuna": "Provides historical average salaries",
    "histogram_data_for_adzuna": "Provide histogram data of salary data",
    "video_comments_for_youtube": "Video Comments",
    "search_for_youtube": "Search",
    "artist_discovered_on_for_spotify_data": "artist-discovered-on",
    "locales_for_geodb_cities": "Get all known locales.",
    "places_near_location_for_geodb_cities": "Get places near the given location, filtering by optional criteria.",
    "places_near_place_for_geodb_cities": "Get places near the given place, filtering by optional criteria.",
    "business_reviews_for_local_business_data": "Get all business reviews. Supports pagination, query and several sort options.",
    "search_for_local_business_data": "Search local businesses on Google Maps.",
    "locationsuggestions_for_zillow_base": "Search for a location",
    "get_trims_by_generation_id_for_car_specs": "Returns a list of all engines (trims) available for a given generation of a car model.",
    "retrieve_collections_for_openblur": "Retrieve all Blur Collections",
    "whois_for_whois_lookup_v4": "REST API to WhoIS lookup data",
    "search_for_store_apps": "Search for apps on the Store.",
    "app_details_for_store_apps": "Get full app details.",
    "job_for_seo_api": "Perform Job Search\n\nCurrently only supports jobs in North America\n\nParameters\n----------\nquery : Position Title and Location (optional). The query should be url encoded\n\nReturns\n-------\njson: a list of jobs with their link to apply, description, and title for each job opportunity",
    "search_b_for_seo_api": "Perform SEO search for secondary search engine",
    "video_for_seo_api": "Perform Video Search\n\nParameters\n----------\nquery : A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n\nReturns\n-------\njson: a list of results with the link, description, and title for each result",
    "pl_car_averages_for_car_averages": "PL Car averages",
    "retreive_portfolio_collections_for_blur": "This endpoint is used to retrieve collections owned for a single wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_trait_offers_for_opensea_v2": "This endpoint is used to get all trait offers for a specified collection.\n\nWhat are trait offers?\nA trait offer is an offer that applies to every item in a collection with the specified trait. For example, this is a filter that shows every Cool Cat NFT where the type is 'tier' and the value is 'classy_1'.\n\nBelow is a response when querying trait offers for Cool Cats where trait type is 'tier' and the value is 'classy_1'.\n\nNote: this example query might not return any data if there are no open offers for that trait.\n\nSample URL\nhttps://api.opensea.io/v2/offers/collection/cool-cats-nft/traits?type=tier&value=classy_1",
    "get_car_specs_for_car_specs": "Returns detailed specs for the chosen car by trim id.",
    "get_models_by_make_id_for_car_specs": "Returns a list of all models for a given car make.",
    "stars_get_string_for_unofficial_trust_pilot": "Get string describing the star-rate",
    "consumers_detail_for_unofficial_trust_pilot": "Get detailed information of a consumer",
    "property_for_sale_detail_for_uk_real_estate_rightmove": "Property for sale for detail",
    "top_paid_games_for_store_apps": "Top paid games chart.",
    "business_units_search_for_unofficial_trust_pilot": "Search for business units by term or phrase",
    "street_level_crimes_for_data_police_uk": "Crimes at street-level; either within a 1 mile radius of a single point, or within a custom area. For custom areas see http://data.police.uk/docs/method/crime-street/",
    "forces_for_data_police_uk": "A list of all the police forces available via the API. Unique force identifiers obtained here are used in requests for force-specific data via other methods.",
    "find_blogs_for_advanced_serp_operators": "You can easily find blogs with specific search terms or phrases.",
    "search_for_twitter_data": "search",
    "retrieving_collection_stats_for_opensea_data_query": "Use this endpoint to fetch stats for a specific collection, including realtime floor price statistics",
    "categories_for_app_store": "Get App Store categories and their matching category codes",
    "top_grossing_ipad_apps_for_app_store": "Get list of the top grossing ipad apps",
    "getsponsorships_for_powerbi": "Get Power BI sponsorships",
    "responses_for_moodring": "Get all responses to the quizzes",
    "artist_featuring_for_spotify_data": "artist-featuring",
    "get_tracks_for_spotify_data": "get-tracks",
    "calculate_grid_coordinate_points_for_local_rank_tracker": "Get all grid coordinate points based on a center geocoordinate point and distance arguments.",
    "videos_for_youtube_v3_v3": "Returns a list of videos that match the API request parameters.",
    "commentthreads_for_youtube_v3_v3": "Returns a list of comment threads that match the API request parameters.",
    "channelsections_for_youtube_v3_v3": "Returns a list of `channelSection` resources that match the API request criteria.",
    "getlearningresourcesbytopic_for_azure": "Get Azure learning resources by topic.",
    "rent_zestimate_and_comparable_properties_for_zillow_v2": "Returns a property's rent zestimate and it's comparable properties in the same area.",
    "list_channel_playlists_releases_podcasts_for_youtube_media_downloader": "This endpoint lists playlists, releases or podcasts of a YouTube channel. Pagination scraping is supported.",
    "list_channel_videos_shorts_live_for_youtube_media_downloader": "This endpoint lists videos, shorts or live streams of a YouTube channel. Pagination scraping is supported.",
    "cities_near_division_for_geodb_cities": "Get cities near the given administrative division, filtering by optional criteria.",
    "channel_channels_for_youtube": "Channel Channels",
    "retrieve_offers_v2_for_opensea_data_query": "This endpoint is used to fetch the set of active offers on a given NFT for the Seaport contract.",
    "getgames_for_diablo4_smartable": "Get Diablo 4 gameplays.",
    "get_subregions_for_geography": "Get list of sub regions in the world",
    "get_cities_for_geography": "Get details about cities",
    "getlearningresources_for_azure": "Get Azure learning resources",
    "getfutureevents_for_azure": "Get future Azure events.",
    "get_suggestion_for_google_play_api": "Returns suggestions",
    "get_similar_apps_for_google_play_api": "Returns similar apps.",
    "channel_community_posts_for_yt_api": "Get community post listing and channel details.\nQuota cost is 1 unit.",
    "comments_for_youtube_v3_v3": "Returns a list of comments that match the API request parameters.",
    "get_linkedin_profile_data_for_fresh_linkedin_profile_data": "Get full profile data, including experience & education history, skillset and company related details. Accept all type of profile urls. **1 credit per call.**",
    "getbooks_for_feku_json": "get list of all books",
    "business_units_search_by_domain_for_unofficial_trust_pilot": "Search for exact business unit by domain name",
    "list_featured_channels_for_youtube_media_downloader": "This endpoint lists subscribed or featured channels of a YouTube channel. Pagination scraping is supported.",
    "business_units_get_reviews_for_unofficial_trust_pilot": "Get reviews related to a business unit",
    "latest_draw_date_for_thai_lottery_result": "Get latest draw date information - \u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e27\u0e31\u0e19\u0e2b\u0e27\u0e22\u0e2d\u0e2d\u0e01\u0e25\u0e48\u0e32\u0e2a\u0e38\u0e14",
    "draw_date_listing_for_thai_lottery_result": "Draw Date Listing - \u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e27\u0e31\u0e19\u0e2b\u0e27\u0e22\u0e2d\u0e2d\u0e01",
    "lottery_results_by_date_id_for_thai_lottery_result": "Lottery Results by date id - \u0e1c\u0e25\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25",
    "top_free_games_for_store_apps": "Top free games chart.",
    "za_car_averages_for_car_averages": "ZA  Car averages",
    "v1_cats_for_cats_by_api_ninjas": "API Ninjas Cats API endpoint.",
    "search_neighbour_countries_by_country_code_for_geography": "Search broder sharing countries for given country code. Country code is ISO 3166 standard alpha code",
    "search_countries_by_continent_for_geography": "Search Countries by its Continent",
    "find_keywords_in_url_for_advanced_serp_operators": "Return only results where the search words are included in the URL",
    "independence_all_countries_for_africa_api_": "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name> with value: <all>\nResponse example: \n{\n\"country\":\"Kenya\"\n\"colonizer\":\"United Kingdom\"\n\"independence_date\":\"December 12, 1963\"\n}",
    "province_state_county_percountry_for_africa_api_": "Returns json for province/state/county in a specific country in Africa",
    "countries_allcontries_for_africa_api_": "Returns a json of all countries in Africa. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\"",
    "retrieve_listings_for_opensea_v2": "This endpoint is used to fetch the set of active listings on a given NFT for the Seaport contract.",
    "retrieve_all_listings_for_opensea_v2": "Get all active listings for a collection\n\nThis endpoint is used to get all active listings for a given collection. The listings are sorted by ascending date (oldest listings first) -- at this time, we do not support any other sorting methods.\n\nThe response has two fields: listings and an optional next cursor in case the number of active listings is greater than our default page size (100). This endpoint returns only a subset of the fields found in our orders endpoint. Here is the model for each listing\n\norder_hash\nchain\ntype: can be basic, english, or dutch\nprice\nprotocol_data\nSample URL\nhttps://api.opensea.io/v2/listings/collection/cool-cats-nft/all",
    "getnews_for_azure_smartable": "Get Azure news",
    "place_distance_for_geodb_cities": "Gets this place's distance to the given place.",
    "scrape_playstore_for_android_playstore_scraper": "Scrape AppStore app listing details like descriptions, and reviews",
    "consumers_get_reviews_for_unofficial_trust_pilot": "Get reviews belonging to a consumer",
    "company_details_for_indeed": "Crawl information for Indeed's Companies.",
    "find_pages_with_keywords_for_advanced_serp_operators": "Return results where the text appears in the body of the page.",
    "get_related_keywords_for_advanced_serp_operators": "Scrape Google for all the related keywords that it shows at the bottom of the search results page, and show them to you along with the Volume and other SEO metrics in the Related Keyword Tool.",
    "convert_translate_download_subtitle_for_yt_api": "Convert, translate, download the subtitle. \nTo get the subtitle url, use `Video -> Subtitles` endpoint or `Video -> Details` endpoint\nQuota cost is 1 unit.",
    "random_company_for_fake_data_generator": "This endpoint generate a list of fake companies",
    "random_post_by_id_for_fake_data_generator": "Retrieve fake post by id.",
    "random_bank_by_id_for_fake_data_generator": "Retrieve fake banks by id.",
    "channel_videos_for_youtube": "Channel Videos",
    "tourism_allcountries_for_africa_api_": "Returns best tourism locations and categories you can explore in each country in Africa",
    "admin_divisions_for_geodb_cities": "Find administrative divisions, filtering by optional criteria. If no criteria are set, you will get back all known divisions with a population of at least 1000",
    "cities_near_location_for_geodb_cities": "Get cities near the given location, filtering by optional criteria.",
    "time_zone_time_for_geodb_cities": "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ",
    "get_data_by_class_for_scrapemaster": "This endpoint will return all data from a specific tag and its class attribute.",
    "album_tracks_for_spotify_data": "album-tracks",
    "artist_discography_overview_for_spotify_data": "artist-discography-overview",
    "student_property_to_rent_detail_for_uk_real_estate_rightmove": "Student property to rent for detail",
    "playlists_for_youtube_v3_lite": "Get playlist details.\nQuota cost is 1.",
    "getpeople_for_powerbi": "Get Power BI influencers.",
    "getnewsbytopic_for_powerbi": "Get Power BI news by topic.",
    "consulta_unificada_for_consulta_cnpj_tempo_real": "Retorna todos os dados presentes no Comprovante de Inscri\u00e7\u00e3o do Cadastro Nacional da Pessoa Jur\u00eddica junto a Receita Federal",
    "tourism_per_country_for_africa_api_": "Returns best tourism locations and categories you can explore in a country in Africa\nTakes parameter <country_name>",
    "autocomplete_cities_for_autocomplete_usa": "Autocomplete USA Cities",
    "search_emails_for_email_search": "Search the web for emails using a query and email domain and get up to 5,000 email addresses.",
    "resources_allcontries_for_africa_api_": "Gives you a list of the most important resources that each African country relies on to keep their economy running.",
    "news_for_seo_api": "Perform Google News Search\n\n Parameters\n----------\nquery : the string query to perform search for Google news. A simple query for `president` will be `q=president`. An example of multiple keyword would be `q=news+about+presdient+trump`. News can also be filtered by country and language. For `US` news and in English the query will be `q=trump&ceid=US:en` for news in Great Britian the query will be `q=trump&ceid=GB:en`\n\nReturns\n-------\njson: {\"feed\": { \"title\" : \"trump\" ...} , \"entites\": [ {\"title\" : \"Trump doubles down on divisive messaging in speech to honor Independence Day - CNN\", \"links\": []} ...]}",
    "serp_get_for_seo_api": "Perform Google Search and search for website in Search Engine Results Pages (SERP)\n\nParameters\n----------\nquery : the string query to perform search. supports advance queries. Check out https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters guide for formatting, it is recommended to set the query `&num=100`\n\nReturns\n-------\njson: a list of results with the query, website, searched_results, and position. json[\"position\"] will be set to -1 if website is not found in results",
    "images_for_seo_api": "Perform Google Image Search\n\nParameters\n----------\nquery : the string query to perform search. supports advance queries.\n\nReturns\n-------\njson: a list of results with the link, description, title, and image thumbnail for each result",
    "search_agent_for_zillow": "Search Agent",
    "user_likes_for_twitter_data": "user-likes",
    "json_rpc_over_http_for_chain49": "All JSON-RPC methods are also available as normal HTTP GET routes if you specify a method (and optional parameters) in the URL.",
    "titles_random_for_moviesdatabase": " ",
    "get_movie_aliases_by_id_for_movies_tv_shows_database": "A valid Movie ID (e.g. tt1375666)\nreturn movie aliases",
    "titles_search_title_title_for_moviesdatabase": "Search by Title",
    "get_similar_tv_shows_for_movies_tv_shows_database": "return tv series results with title, id, release date",
    "titles_episode_id_for_moviesdatabase": " ",
    "titles_utils_genres_for_moviesdatabase": " ",
    "get_similar_movies_for_movies_tv_shows_database": "return movie results with title , release date , id",
    "rereer_copy_for_nowyapi": "rererer",
    "rereer_for_nowyapi": "rererer",
    "random_wallpapers_for_premium_anime_mobile_wallpapers_illustrations": "Get a random anime wallpaper\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "anime_boy_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime boy wallpapers:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "get_video_status_for_api_video": "This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.\n\nOnce encoding is completed, the response also lists the available stream qualities.",
    "supported_sites_for_quality_porn": "Get all available pages with the possible qualities and filters.",
    "video_search_for_quality_porn": "Search for quality porn and get a provider-subdivided list of the best matching videos.\n\n### Examples\n\nSearch only HD videos that have been rated best with the search term \"amateur\".\n`/search?quality=hd&filter=rating&query=amateur'`\n\nSearch for \"amateur\" only. Filters and quality are optional.\n`/search?query=amateur'`\n\nSearch for \"amateur\" on page 2.\n`/search?query=amateur&page=2'`\n\nSearch for \"amateur\" and set a timeout for 5 seconds for each site request.\n`/search?query=amateur&timeout=5000`\n\nFilter only by the page you need. Here for example by PornHub. It can be filtered by any name part or part URL. For example \"porn\", \".com\" or complete names \"pornhub\", \"youporn.com\".\n`/search?query=amateur&site=pornhub`",
    "random_search_query_for_quality_porn": "Get a random search query;",
    "get_videos_videoid_captions_for_api_video": " ",
    "pornstar_search_for_quality_porn": "Search for a porn star using the \"Query\".\nA list of all stars found is returned, or a detail pornstar if only one is found.",
    "paint_image_paint_get_for_image": " ",
    "floor_image_floor_get_for_image": " ",
    "angel_image_angel_get_for_image": " ",
    "search_for_ykapi": "search",
    "docs_for_quality_porn": "Get available routs and parameters as json.",
    "deskewimage_for_aspose_imaging_cloud": " ",
    "getdiscusage_for_aspose_imaging_cloud": " ",
    "getvisualobjectbounds_for_aspose_imaging_cloud": " ",
    "test_app_deepfry_get_for_image": " ",
    "america_image_america_get_for_image": " ",
    "discord_quote_yt_get_for_image": " ",
    "style_for_flaticon": "Method that allows you go get detailed information about a style, the design format that an icon or a pack has. Styles are the different versions in which an icon a given family may appear. For example, an icon may be available in lineal, color, or lineal color styles.",
    "download_for_flaticon": "Method that allows you to download the selected icon with the selected format.",
    "invert_image_invert_get_for_image": " ",
    "sepia_image_sepia_get_for_image": " ",
    "tweet_tweet_get_for_image": " ",
    "poster_image_poster_get_for_image": " ",
    "anime_wallpapers_related_to_the_christmas_with_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get  anime wallpapers related to the christmas:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "search_by_animename_art_id_for_premium_anime_mobile_wallpapers_illustrations": "Search by animename, art_id\n\nRequired GET parameter\n\n**page**: 1\n**sensitivity**: 1\n**searchText**: 'Tokyo'\n**exact**: 0\n\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper\npage 1 : 0-10\npage 2: 10-20 \u2026\u2026\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOn the above **searchText**, means it will try to fetch all arts based on the above text (Japanese anime name)\nOR\nart_id\n\n***Note: searchText param should be min 3 chars length***\n\nOptional GET parameter\n**exact**: \n\nIf the exact parameter is not provided then by default it will be set to 0.\n0 represents fetch all the arts related to any searchText word of animename.\n\n**Note: Exact params value 0 assume that you are passing japanese animename it will search all the wallpapers related to it**\n( So **attack on t** will result in empty response since its english name but **Shingeki no** will not)\n\n1 represents fetch all the arts which have the same animename and searchText.\n\n**Note: Exact params value 1 support both english and japanese animename**\n( So **Attack on titan** which is english will result wallpaper of japanese animename **Shingeki no Kyojin**)\n\n2 represent fetch arts based on art_id ( so If you are sending art_id on searchText make sure you set the exact param to 2 )\n\n**quality**:0\nThis API provides two types of wallpaper images\n\nCompress lower size wallpaper.\nBest quality but will result in high size.\nIf the **quality** parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\nRESPONSE\n**animename**( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity**( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id**( Depend on subscription )\nUnique wallpaper id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\nNote: if no wallpaper found response will be\n\n*{\"status\": \"empty\"}*",
    "findsimilarimages_for_aspose_imaging_cloud": " ",
    "charcoal_image_charcoal_get_for_image": " ",
    "pride_image_pride_get_for_image": " ",
    "asc_image_ascii_get_for_image": " ",
    "getfileslist_for_aspose_imaging_cloud": " ",
    "live_cams_for_quality_porn": "Search for live cams and according to your preferences. Filter by gender, tags and pages.",
    "pornstar_list_by_alphabetical_letter_for_quality_porn": "Loads a list with the names and request URLs of pornstars. This list is requested by alphabet.",
    "anime_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime wallpapers:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity** , 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "get_analytics_sessions_sessionid_events_for_api_video": "Useful to track and measure video's engagement.",
    "trash_image_trash_get_for_image": " ",
    "blur_image_blur_get_for_image": " ",
    "modifygif_for_aspose_imaging_cloud": " ",
    "stock_for_barpatterns": "Stock information",
    "get_top_50_cryptocurrencies_details_for_crypto_update_live": "This endpoint gives all the details of the top fifty cryptocurrencies.",
    "get_top_100_cryptocurrencies_details_for_crypto_update_live": "This endpoint gives all the details of the top hundred cryptocurrencies.",
    "get_ether_balance_for_cryptocurrency_balance": "This endpoint will return back the Ether balance of an address",
    "get_verge_balance_for_cryptocurrency_balance": "This endpoint will return back the Verge balance of an address",
    "rising_three_methods_for_barpatterns": "List of stocks having Rising Three Methods signal.",
    "bullish_engulfing_for_barpatterns": "List of stocks having Bullish Engulfing signal.",
    "macd_crossover_up_for_barpatterns": "List of stocks having Macd crossover up signal.",
    "web_top_momentum_for_open_defi": "\nReturn top up and down 100 price changes for 24h.\n\nThe results are split for all trading pairs and trading pairs with $1M min liquidity.\n",
    "web_exchanges_for_open_defi": " ",
    "fetchallmatches_for_cleardil": " ",
    "fetchriskprofile_for_cleardil": "Create individual customer",
    "get_invite_for_smile": "Get invite sent to users by ID.",
    "get_webhook_for_smile": "Get a webhook endpoint.",
    "list_invite_templates_for_smile": "Get the list of invite templates.",
    "web_chains_for_open_defi": " ",
    "get_aave_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Aave balance of an address in a specific network.",
    "get_yearn_finance_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the yearn.finance balance of an address in a specific network.",
    "news_for_yahoo_finance": "returns latest news articles related to symbol passed as parameter",
    "web_candles_for_open_defi": "\nFetch candle data for a single trading pair.\n\nYou need to resolve the symbolic trading pair name to `pair_id` primary key with `/pairs` or `/pair-details`\nto call this API endpoint.\n\nCandle response size is limited to 10,000 candles. Only the first 10,000 candles\nsince the start timestamp is returned.\n\n[Inspired by Bitfinex API](https://docs.bitfinex.com/reference#rest-public-candles).\n",
    "get_employment_for_smile": "Get a user's employment by ID.",
    "list_incomes_for_smile": "Get the user's incomes from employment data sources.",
    "web_exchange_details_for_open_defi": " ",
    "rsi_overbought_for_barpatterns": "List of stocks having RSI Overbought signal.",
    "list_employments_for_smile": "Get the user's previous employments.",
    "get_comment_list_by_video_for_tiktok_download_video_": "get comment list by video",
    "get_region_list_for_tiktok_download_video_": "get region list",
    "comments_for__cheap_youtube_api_": "**Get comments from a video**\nexample: /comments/dQw4w9WgXcQ\n\n**Parameters**\nsort_by: \"top\", \"new\" (default: top)",
    "getcategoryinfo_for_vimeo": "",
    "user_details_json_for_yts_am_torrent": "Get the user details",
    "get_pages_for_9gag_api_detailed_": "Returns pages.",
    "list_upcoming_jsonp_for_yts_am_torrent": "Returns the 4 latest upcoming movies",
    "movie_suggestions_json_for_yts_am_torrent": "Returns 4 related movies as suggestions for the user",
    "getallchannels_for_vimeo": "Get a list of all public channels.",
    "top_track_by_country_for_shazam": "This endpoint will return the top tracks from a specific country",
    "sources_for_streamlinewatch_streaming_guide": "Returns a list of all sources covered in a specific region",
    "get_user_info_for_tiktok_download_video_": "get user info\nunique_id or user_id is not empty",
    "search_video_list_by_keywords_for_tiktok_download_video_": "search video list by keywords",
    "list_movies_jsonp_for_yts_am_torrent": "Used to list and search through out all the available movies. Can sort, filter, search and order the results",
    "sticker_translate_for_giphy": "Using the same alogirithm as the GIF translate endpoint, the sticker translate endpoint turns words into stickers.",
    "popular_for__cheap_youtube_api_": "Get popular videos",
    "movie_reviews_xml_for_yts_am_torrent": "Returns all the IMDb movie reviews for the specified movie",
    "getinventory_for_swagger_petstore": "Returns a map of status codes to quantities",
    "categories_list_for_wayfair": "List categories and their recursive children categories if available",
    "api_countriesavailabletoshipping_for_magic_aliexpress": "This resource represents the countries. Each country is composed of Code and Name Attributes. This service can be used to communicate with product service for the countryFrom and countryTo query parameters.",
    "getcarrierservices_for_ecartapi": " ",
    "countallproductvariants_for_ecartapi": "<p>Counts all the registered variants of a single product.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t</ul></b>",
    "getyourstoreinformation_for_ecartapi": "Access store information fast with the access token we provided.",
    "getcart_for_appibase": "Get a cart",
    "gettransaction_for_appibase": "Get an order transaction",
    "getstocklocationaddress_for_appibase": "Get stock location address",
    "getproductoptions_for_appibase": "Get all product options",
    "getordertransactions_for_appibase": "Get all order transactions",
    "getstore_for_appibase": "Get a store",
    "get_amazon_search_results_for_abiola_amazon_data_scraper": "This endpoint allows you to search any amazon product description by typing the name of the product.",
    "products_list_for_unofficial_shein": "List products by a category with options and filters",
    "auto_complete_for_unofficial_shein": "Get suggestions by term or phrase",
    "getmerchants_for_appibase": "Get all merchants",
    "get_amazon_search_results_for_amazon_data_scraper_v2": "Get Amazon Search results",
    "product_search_for_target_com_store_product_reviews_locations_data": "The endpoint returns products from the Target.Com Search Result\n\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**",
    "deposit_nominal_bank_for_ppob": "API Deposit Nominal & Bank is used to display available deposit information on PulsaXpress as well as bank account information used for the deposit process. It also allows users to make a deposit by choosing the desired deposit amount and payment method.",
    "check_status_for_ppob": "<table><thead><tr><th>Parameter</th> <th>Deskripsi</th> <th>Contoh</th></tr></thead> <tbody><tr><td><code>ref_id</code></td> <td>Referensi ID transaksi</td> <td><code>trx1</code> atau <code>41241211133</code></td></tr></tbody></table>",
    "internasional_credit_pricelist_for_ppob": "The Pricelist API is used to display all available Pulsa and Data products. The result of this API can obtain the Code, Name, Nominal, and Price of each available product.\n\n<table><thead><tr><th>Country</th> <th>Code</th></tr></thead> <tbody><tr><td>China</td> <td><code>China</code></td></tr> <tr><td>Malaysia</td> <td><code>Malaysia</code></td></tr> <tr><td>Philippines</td> <td><code>Philippines</code></td></tr> <tr><td>Singapore</td> <td><code>Singapore</code></td></tr> <tr><td>Thailand</td> <td><code>Thailand</code></td></tr> <tr><td>Vietnam</td> <td><code>Vietnam</code></td></tr></tbody></table>",
    "getproductchildren_for_appibase": "Get all child products",
    "getproductparent_for_appibase": "Get the parent product",
    "getpricelists_for_appibase": "Get all price lists",
    "getallstorewebhoooks_for_ecartapi": " ",
    "getallorders_for_ecartapi": "<p><b>Note:</b><br>\nFilters are available depending of the ecommerce\n</p>",
    "aliexpress_item_review_for_aliexpress_datahub": "All details of a single item.",
    "aliexpress_item_review_2_for_aliexpress_datahub": "All details of a single item.",
    "aliexpress_item_search_by_image_for_aliexpress_datahub": "This endpoint allows you to search products with an Image URL. Note! You must use images from the Aliexpress products at this time.",
    "api_bestsales_products_for_magic_aliexpress": "This resource represents the best sales detected by our system",
    "get_shop_information_for_taobao_tmall_product_detail": "Get shop information",
    "api_product_productid_historic_sales_for_magic_aliexpress": "This endpoint returns the sales historic of product loaded by a client",
    "countallorders_for_ecartapi": " ",
    "products_get_details_deprecated_for_target": "Get detail information of product",
    "products_list_deprecated_for_sephora": "List products with options and filters",
    "stores_list_deprecated_for_sephora": "List nearest stores around a GEO location",
    "products_v2_get_filters_for_sephora": "Generate the filter panel dynamically",
    "search_by_keyword_filters_for_ikea_api": "Complimentary to the \"Search By Keyword\" endpoint. Obtain a list of filters available based on a keyword.",
    "stores_for_ikea_api": "Obtain a list of all stores in a specified country.",
    "getasingleproductimage_for_ecartapi": "<p>Searches for the selected image of a product.<br></p>\n\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#6870b009-81d8-42c6-b910-3aaca8e5d0f2\"> The product's ID must exist</a></li>\n\t<li><a href= \"https://docs.ecartapi.com/?version=latest#ff23601f-006f-4680-a5be-4607ff6bbc34\">The product's image ID must exist.</a></li>\n\t</ul></b>",
    "countallcostumers_for_ecartapi": " ",
    "getcustomeraddresses_for_appibase": "Get all customer addresses",
    "getproductvariations_for_appibase": "Get all product variations",
    "aliexpress_item_search_for_aliexpress_datahub": "All details of a single item.",
    "aliexpress_store_item_search_2_for_aliexpress_datahub": "All details of a single item.",
    "loginuser_for_swagger_petstore": "Logs user into the system",
    "indonesia_credit_pricelist_for_ppob": "This Endpoint is for Indonesia only.\nThe Credit & Data Pricelist API is used to display the list of available credit and data prices on PulsaXpress. This information can be used to know the price of the products you want to buy before making a transaction. This price information can be updated according to the current prices and can be used to determine the prices offered on your application.",
    "account_for_ppob": "API Account is used to display user information according to the Token embedded in the header request.",
    "products_v2_list_for_target": "List products in specific store with options and filters",
    "get_relatedproducts_by_productid_siteid_zappos_1_6pm_2_for_zappos_2022": "Get relatedProducts by siteId & productId",
    "getorders_for_appibase": "Get all orders",
    "gettokeninfo_for_appibase": "Get token info",
    "get_1688_product_detail_for_taobao_tmall_product_detail": "Get 1688 product detail",
    "get_amazon_product_reviews_for_ag_amazon_data_web_scraper": "It Helps You To Get Reviews Of Any Product By Entering Its Product Id.",
    "get_amazon_search_results_for_ag_amazon_data_web_scraper": "It Will Give The Product Details You Want Just By Searching The Product Name.",
    "fastest_laps_result_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about fastest laps for a specific race by passing path parameters location & year. The path parameters are required.",
    "race_result_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about a specific race result by passing path parameters year & location. The path parameters are required.",
    "race_detail_info_for_horse_racing": "**Get racecard detailed info** and **Odds comparator**\nHorses, Jockeys, Trainers, Form, OR, Owner, Sire, Dam, Age, Weight and more information.",
    "get_team_logo_for_viperscore": "Returns the logo of the team as a png",
    "get_next_games_for_viperscore": "This will return the next games. Please keep in mind that -1 means that no score or winner has been there because the game didn't started.",
    "getstandingtypes_for_nhl_stats_and_live_data": " ",
    "getplayer_for_nhl_stats_and_live_data": " ",
    "getstandingsbytype_for_nhl_stats_and_live_data": " ",
    "series_list_archives_for_cricbuzz_cricket": "List archived series",
    "event_highlights_video_for_flashlive_sports": "Get highlights video by event ID",
    "event_rounds_results_golf_for_flashlive_sports": "Rounds results (golf) by  and event ID, (golf)",
    "event_commentary_for_flashlive_sports": "Get a comment on an event by event ID",
    "leaguetotalteamevents_for_handballapi": "Get total team events for a handball unique tournament and season",
    "teamoveralltopplayers_for_handballapi": "Get overall top players for a handball team in a unique tournament and season",
    "sport_translations_for_pinaculo": "Get sport translations.",
    "labels_for_pinaculo": "Get labels.",
    "club_profile_for_transfermarkt_db": "Get club profile by club_id. Main facts, stadium, additional teams",
    "player_progress_for_transfermarkt_db": "Get player progress",
    "team_performance_index_history_for_metrx_factory": "Returns the history of a team's performance index. Each datapoint represents an index change based on a match performance. The indication of projections controls which data should be collected and has direct impact on the payload and billed credits.\n\nThere is one obligatory parameter which identifies the team of the trend. If no more parameters are provided then the trend for the last year's performance (*Basic* subscriptions: one month) is returned with only the main index projection in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. time span returned: 1 month`",
    "countries_for_metrx_factory": "Returns a list of countries for which teams and metrics are available.\nThere are no parameters to provide.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. countries returned: 5`",
    "tablenames_for_fitness_calculator": "Find the more than 70 main table names of the food database.",
    "body_fat_percentage_for_fitness_calculator": "Knowing body fat percentage would be helpful to decide on a well-programmed fitness plan. You can use this endpoint with 7 parameters.",
    "event_points_history_for_flashlive_sports": "Get the history of points by event ID. Point by Point",
    "matches_by_tournament_by_player_for_tennis_live_data": "Retrieves matches and results for a given `player_id `within a given `tournament_id`",
    "categories_for_motorsportapi": "Get a list of all Motorsport categories.",
    "matchincidents_for_footapi": "Get the incidents for a specific Football match.",
    "teams_get_news_for_unofficial_cricbuzz": "Get news by team",
    "fixtures_by_team_by_season_for_rugby_live_data": "Fixtures and results for a given team within a given season, across all competitions they play in.",
    "fixtures_for_rugby_live_data": "Lists fixtures for entire season using competion_id and season_id combination",
    "images_team_for_livescore_sports": "Get team image",
    "events_h2h_for_livescore_sports": "Get event H2H (head to head) form event ID",
    "leagueoveralltopplayers_for_handballapi": "Get overall top players for a handball unique tournament and season",
    "seasons_of_competition_for_transfermarkt_db": "Get competition seasons",
    "fixture_standings_for_transfermarkt_db": "Get fixture standings by fixture_id",
    "list_of_clubs_for_transfermarkt_db": "Get a list of clubs",
    "qualifyingresults_for_formula_1_fixed": " ",
    "informationforaspecificpitstop_for_formula_1_fixed": "This endpoint requires the season(year), race(round) and pit stop number(pitstopnumber) to be specified.",
    "constructorstandingsafterarace_for_formula_1_fixed": "To list the constructor standings after a specific race (round) in a season(year), use this endpoint.\n\n",
    "list_of_special_markets_for_pinnacle_odds": "Get a list of special markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value. You must always use the since parameter, after the first call. Please note that prematch and live events are different",
    "matches_get_votes_for_divanscore": "Get votes for match, and players",
    "tournaments_get_last_matches_for_divanscore": "Get last matches of specific league by season",
    "daily_match_list_live_for_handball_data": "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "tournament_info_for_handball_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.",
    "provider2_live_upcoming_for_football_betting_odds": "get upcoming matches list",
    "provider1_live_match_id_for_football_betting_odds": "get match",
    "players_get_profile_for_transfermarket": "Get player profile",
    "tvcountries_for_motorsportapi": "Get a list of countries and their respective TV channels broadcasting a specific Football match.",
    "vip_featured_predictions_for_today_football_prediction": "Returns **Daily  Featured Prediction** results which have higher probability and better odds than others. More efficient selections.\n\nCompare its performance from **stats/performance** endpoint.",
    "result_for_sports_betting_api": "Event Result",
    "getteams_for_nhl_stats_and_live_data": " ",
    "getdraftprospects_for_nhl_stats_and_live_data": "Be forewarned that this endpoint returns a **lot** of data and there does not appear to be a way to paginate results.",
    "teams_next_event_for_livescore_sports": "Get team next event by team ID.",
    "matches_list_by_game_plan_for_transfermarket": "List matches by game plan",
    "matches_get_result_for_transfermarket": "Get result of specific match",
    "players_get_short_info_for_transfermarket": "Get short information of one or more players",
    "results_by_date_for_cricket_live_data": "Lists results for given date",
    "staffs_list_by_competition_for_transfermarket": "List staffs relating to specific competition or league",
    "news_list_by_club_for_transfermarket": "List latest news relating to specific club",
    "series_get_news_for_cricbuzz_cricket": "Get news by series",
    "getcompetitions_for_wosti_futbol_tv_spain": "Obtener el listado de competiciones de partidos de f\u00fatbol televisados en Espa\u00f1a.\n\n> Este endpoints no requiere de ning\u00fan par\u00e1metro.",
    "get_rankings_post_season_by_id_for_nba_stats_v2": "Api to query rankings post season",
    "get_career_totals_regular_season_by_id_for_nba_stats_v2": "Api to query career totals regular season",
    "event_news_for_flashlive_sports": "Get news by event ID",
    "event_report_for_flashlive_sports": "Get an event report by event ID",
    "football_league_team_performance_for_allsportsapi": "Get league team performance.",
    "cricket_player_near_matches_for_allsportsapi": "Get player near matches.",
    "ice_hockey_team_next_matches_for_allsportsapi": "Get team next matches.",
    "competitions_standings_for_zeus_api": "List the current standings for a league \ud83d\udd1d.",
    "daily_match_list_scheduled_for_handball_data": "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "team_depth_charts_for_basketball_datafeeds_by_rolling_insights": "Returns player depth charts for a team",
    "getupcoming_for_sport_odds": "GetUpcoming data api",
    "quarter_analysis_for_basketball_data": "Provides the analyst data for each quarters including Quarter Winning Avereages, Quarter Winning Counts, Quarter Winning Percentages with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "match_margins_for_basketball_data": "Provides the average match margin statistics of the team in the tournament.",
    "tournament_teams_for_basketball_data": "List of teams participating in a specific tournament.",
    "under_over_analysis_for_basketball_data": "Provides the under/over score analysis and statistics with the home/away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**\n\nP.S.\nFull data is available at Under / Over Analysis endpoint but can not be shown in mock response.",
    "get_general_game_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNFLGamesForDate\" call or the \"getNFLTeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNFLGameInfo?gameID=20221212_NE@ARI",
    "get_number_of_games_today_for_viperscore": "With \"Get number of games today\" you'll receive all sports we support, how many games are today and how many of them are live.",
    "get_team_details_for_viperscore": "You'll get all details to a specific team by its id.",
    "teams_detail_for_livescore_v2": "Get team information, recent and up coming matches",
    "matches_v2_get_info_for_livescore_v2": "Get where the match takes place",
    "tournament_info_for_soccer_data": "Current season, stage structure(groups,knockout stages etc.), country and many more information about a tournament.",
    "seasonal_statistics_goals_for_soccer_data": "Provides the goal statistics of the team in the tournament.",
    "matches_list_by_club_for_transfermarket": "List matches by specific club",
    "competitions_list_seasons_for_transfermarket": "List passed seasons of specific competition",
    "event_missing_players_for_flashlive_sports": "Get all missing players by event ID",
    "changes_to_live_events_for_flashlive_sports": "Get only new data into live-events by sport_id. Call every 5 seconds.",
    "getdivision_for_nhl_stats_and_live_data": "You can use this to also retrieve inactive divisions. For example, the ID for the old Patrick division is `13`.",
    "getstattypes_for_nhl_stats_and_live_data": " ",
    "get_per36_career_post_season_for_nba_stats_v2": "Api to query per36 career post season",
    "get_career_totals_post_season_for_nba_stats_v2": "Api to query career totals post season",
    "events_live_list_for_livescore_sports": "Get the list of the live events by sport",
    "stages_events_for_livescore_sports": "Get the list of the events for stage",
    "get_player_list_for_tank01_mlb_live_in_game_real_time_statistics": "One call grabs the FULL MLB player list. This is mainly used for associating players with their \"playerID\" which is what you'll want to use when cross referencing with box scores.\n\nNo parameters, just make the call:\n\n/getMLBPlayerLIst",
    "missing_player_list_for_soccer_data": "List of injured and suspended players for the matches in a specific date.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today +- 7 days.**",
    "market_tables_both_teams_to_score_for_soccer_data": "Provides both team to score statistics of the teams in the tournament, ordered by the tournament standings.\n\nP.S.\nFull data is available at Market Tables: Both Teams to Score endpoint but can not be shown in mock response.",
    "statistic_list_clean_sheets_for_transfermarket": "List clean sheets",
    "ufc_fight_night_dern_vs_hill_may_20_2023_for_mma_stats": "**Get details to UFC Fight Night: Dern vs. Hill**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record.",
    "match_for_rugby_live_data": "Detailed match data given a valid match_id.",
    "official_atp_players_rankings_for_ultimate_tennis": "This endpoint allows you to retrieve the rankings(**singles**+ **doubles**) of the current tennis season. You can arbitrarily decide the number of players displayed (nplayers) and the time window to refer to (timestamp).\n\nFor example, if nplayers = 10,  category= \"singles\" and timestamp = 2022-04-11 you will receive the top 10 singles standings at the corresponding timestamp (**IMPORTANT**: The timestamp must be in the following format **YYYY-MM-DD** and the date **must fall on Monday** since the rankings are updated at the start of every week)",
    "live_scores_with_live_betting_odds_for_ultimate_tennis": "This endpoint provides info about all the live matches from ATP + WTA. It includes live and prematch odds.",
    "live_players_rankings_for_ultimate_tennis": "With this endpoint, you can retrieve info about the live tennis rankings for a given number of players, with position/points/info about the last match played in the current active tournament. Please note that in the ATP circuit the official leaderboard is updated every Monday.",
    "daily_match_list_all_for_basketball_data": "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "country_channels_stage_for_sofascores": "Get tv country channels (stage) by stage_id",
    "sport_list_for_sofascores": "Get a list of sports",
    "daily_match_list_results_for_basketball_data": "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "players_get_performance_for_transfermarket": "Get players performance of specific club",
    "table_tennis_live_matches_for_sports_live_scores": "Returns Table Tennis Live Matches with betting odds",
    "tennis_rankings_for_sports_live_scores": "Returns ATP or WTA Standings for a given number of players.",
    "playeruniquetournamentlastratings_for_sportifyapi": "Player Unique Tournament Last Ratings",
    "teamstandings_seasons_for_sportifyapi": "Team Standings",
    "teamstatistics_seasons_for_sportifyapi": "Team Statistics",
    "match_game_leaders_for_basketball_data": "Live points, rebounds and assists leaderboards of the game for triple-double hunting.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "player_performance_details_for_transfermarkt_db": "Get player performance details",
    "fixture_report_for_transfermarkt_db": "Get report by fixture_id",
    "raceresult_for_formula_1_fixed": "This endpoint gives the result for a specific race (round) in a season(year).\n\n\nIf the results for the specified race are not yet available the RaceTable element in the response will be empty.\n\n",
    "seasonenddriverstandings_for_formula_1_fixed": "Driver Standings at the end of the season(year).",
    "listofallfinishingstatuscodes_for_formula_1_fixed": "Every driver has a finishing status like 'finished', disqualified', 'accident', '+1 lap', '+2 lap', etc. This endpoint will give the list of all such statuses. Example request and response attached",
    "tournament_list_for_ultimate_tennis": "Via this endpoint, you can retrieve the list of all tournaments to be played in a selected year.  We return some basic info about every row such as tournament venue, surface, winners, etc. If you want to have all the details regarding the matches played in a single tournament you can use the **Tournament Results by Id and Year** endpoint",
    "official_wta_players_rankings_for_ultimate_tennis": "This endpoint allows you to retrieve the rankings(**singles**+ **doubles**) of the current tennis season. You can arbitrarily decide the number of players displayed (nplayers) and the time window to refer to (timestamp).\n\nFor example, if nplayers = 10,  category= \"singles\" and timestamp = 2022-04-11 you will receive the top 10 singles standings at the corresponding timestamp (**IMPORTANT**: The timestamp must be in the following format **YYYY-MM-DD** )",
    "player_statistics_for_hockey_live_sk_data": "Get player historical statistics by his name or his ID",
    "game_report_for_hockey_live_sk_data": "Get game score, goals, penalties and team statistics for a certain game ID",
    "team_standings_for_hockey_live_sk_data": "Get current or historical team standings for the certain league and year",
    "teamtournaments_for_cricketapi2": "Get a list of unique tournaments for a specific Cricket team by providing its team ID.",
    "tournament_matches_for_tennis_live_data": "Lists matches for a given `tournament_id`. This endpoint is a brief summary of all matches within a tournament without result details or detailed player information - use for quick summary of a given tournament.",
    "players_for_tennis_live_data": "Full Listing of Players by Tour",
    "daily_match_list_all_for_handball_data": "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "players_get_last_year_summary_for_divanscore": "Get summary of specific player in last year",
    "transfers_of_team_for_sofascores": "Get transfers of team by team ID",
    "get_play_by_play_for_nhl_api": "This endpoint gets the NHL game play-by-play data for a specified game",
    "data_sport_for_sports_odds_betapi": "Data Sport params",
    "malefighterimageplaceholder_for_mmaapi": "Get male fighter placeholder image",
    "tournamentfeaturedevents_for_mmaapi": "Get featured events for a unique tournament",
    "scorecards_for_live_golf_data": "Fetch a scorecard for a given `tournId`, `year`, `playerId`, and `roundId`.  Scorecards include shot-by-shot granularity.",
    "tournaments_for_live_golf_data": "Fetch tournament information, such as metadata, players, courses, and earnings. Query the `schedule` endpoint to retrieve the necessary `tournId` and `year` parameters. This info will be updated with a players entry list the Friday before the tournament.",
    "teamplaceholderimage_for_cricketapi2": "Get the team placeholder image in SVG format.",
    "categoryflag_for_cricketapi2": "Get the flag image of a specific category in PNG format.",
    "matchinnings_for_cricketapi2": "Get the innings for a specific Cricket match using its match ID.",
    "getupcoming_for_sportapi": "GetUpcoming Api data",
    "fantasy_squad_api_for_fantasy_cricket": "Using match ID get the list of players in the squad for the match as announced by the teams. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com",
    "live_matches_api_for_fantasy_cricket": "A list of cricket matches from around the world that are currently Live. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com",
    "getallsports_for_sportapi": "GetAllSports data api",
    "geteventdetails_for_sportapi": "GetEventDetails api data",
    "teamplayers_for_footapi": "Get the players for a specific Football team.",
    "footballmatchawayplayerjersey_for_footapi": "Get the away player jersey for a specific Football match.",
    "managerdetails_for_footapi": "Get details of a football manager, including their name, age, nationality, and other relevant information.",
    "matches_detail_for_divanscore": "Get match information",
    "race_results_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve race results data about a specific F1 championship by specifying a year. If you ommit the ***year*** query parameter, a default value will be set to current year. The response data will contain information about the Grand Prix, Date, Winner, Car (Team), Laps & overall time of each driver in the form of a collection.",
    "predict_for_sofasport": "Get predict by event_id",
    "schedule_by_category_for_sofasport": "Get event schedule by category and date",
    "lineups_for_sofasport": "Get lineups by event_id",
    "wnba_schedule_for_wnba_api": "This endpoint provides you with the WNBA schedule data for a specified date as long as it is available.",
    "leagueplayoffstopplayers_for_icehockeyapi": "Get the top players for a specific Ice Hockey league during playoffs by providing the tournament ID and season ID.",
    "leaguecuptrees_for_icehockeyapi": "Get the cup trees for a specific Ice Hockey league by providing the tournament ID and season ID.",
    "getlivenow_for_sport_odds": "GetLivenow data now",
    "getstatictranslations_for_sport_odds": "GetStaticTranslations data api",
    "pitstop_summary_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the pitstop summary about a specific race by passing path parameters year & location. The path parameters are required.",
    "tournament_matches_by_date_for_tennis_live_data": "Lists all matches for a given `tournament_id` on a given `date`. This is a quick summary view of matches on the given date without result or detailed player info.",
    "basketball_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint.",
    "cricket_live_matches_for_sports_live_scores": "Returns Cricket Live Matches with betting odds",
    "leagues_v2_list_for_livescore_v2": "List all leagues by category (football, cricket, basketball, tennis, hockey)\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png",
    "seasonteamevents_for_sportifyapi": "Season Team Events",
    "tournamentseasoninfo_for_sportifyapi": "Tournament SeasonInfo",
    "playertransferhistory_for_sportifyapi": "Player Transfer History",
    "baseball_match_h2h_duel_for_allsportsapi": "Get match h2h duel.",
    "tennisteamstandingsseasons_for_allsportsapi": "Get team or players standings seasons.",
    "motorsport_unique_stage_image_for_allsportsapi": "Get unique stage image.",
    "popular_events_for_os_sports_perform": "Get today's popular events",
    "teams_translations_for_os_sports_perform": "Teams translations",
    "sport_list_for_os_sports_perform": "Get a list of sports",
    "events_comments_for_livescore_sports": "Get event comments form event ID",
    "images_category_for_livescore_sports": "Get category image",
    "teams_media_for_livescore_sports": "Get team media by team ID.",
    "stage_logo_motorsport_for_sofasport": "Get stage logo by stage_id (motorsport)",
    "streaks_for_sofasport": "Get team streaks by event_id",
    "match_key_statistics_for_football_data": "Live key match statistics for both team of the match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**",
    "daily_match_list_live_for_football_data": "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "get_team_roster_for_tank01_mlb_live_in_game_real_time_statistics": "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getMLBTeams\" call.\n\nRosters are updated hourly during the day.\n\nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n \nHere are examples of the two ways to call and get the White Sox roster:\n/getMLBTeamRoster?teamID=6\nor\n/getMLBTeamRoster?teamAbv=CHW\n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505.",
    "list_of_nicknames_for_ncaa_final_four": "Get a list of every Final Four team nickname sorted alphabetically.",
    "top_competitions_for_allscores": "Get top competitions",
    "playernearmatches_for_americanfootballapi": "Get the upcoming and recent matches for an American Football player using their ID.",
    "teamnextmatches_for_americanfootballapi": "Get the upcoming matches for a specific American Football team by providing the team ID and page number. You can expect empty responses if no upcoming matches are scheduled.",
    "matches_v2_get_lineups_for_livescore_v2": "Get match line-ups",
    "competitions_get_team_stats_for_livescore_v2": "Get teams statistics in a competition",
    "teamdetails_for_cricketapi2": "Get detailed information about a cricket team using their team ID.",
    "playeroverallstatistics_for_cricketapi2": "Get the overall statistics for a specific cricket player for a given tournament and season.",
    "matchdetails_for_cricketapi2": "Get detailed information for a specific cricket match by providing the match ID.",
    "games_schedule_for_hockey_live_sk_data": "Get games list for certain league and year",
    "nextevents_for_sportifyapi": "Next Events",
    "featuredtournamentsevents_for_sportifyapi": "Featured Tournaments Events",
    "leaguetotalstandings_for_basketapi": "Get the total standings for a specific basketball league in a given tournament and season.",
    "leaguehomestandings_for_basketapi": "Get the home standings for a specific basketball league in a given tournament and season.",
    "matchbestplayers_for_basketapi": "Get best players information for a specific basketball match.",
    "data_tournaments_all_for_sports_odds_betapi": "Data Tournaments All Sports & All Countries",
    "prediction_details_for_football_prediction": "Grab all available predictions for a match id",
    "match_statistics_for_basketball_data": "Live in match team statistics for each team in a match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "list_of_archive_events_for_pinnacle_odds": "Get a list of archive events. Use pagination",
    "sport_list_for_sofasport": "Get a list of sports",
    "heatmap_for_sofasport": "Get heatmap player by event_id and team_id",
    "daily_unique_tournaments_for_sofasport": "Get daily unique tournaments by date and sport",
    "tournament_fixture_for_soccer_data": "Full match list with half time and final scores, with additional info for each match such as referee and stadium.",
    "country_flag_for_allscores": "Get country flag. It generates image/png.",
    "athlete_large_image_for_allscores": "Get athlete large image. It generates image/png.",
    "competition_large_image_for_allscores": "Get competition large image. It generates image/png.",
    "provider2_live_match_id_for_football_betting_odds": "get match",
    "channels_list_for_sofascores": "Get a list of channels by country",
    "games_esports_for_sofascores": "Get games (esports) by event_id",
    "current_team_tournaments_for_sofascores": "Get current team tournaments by team ID",
    "season_schedule_for_football_datafeeds_by_rolling_insights": "Returns season schedule for the specified season. If omitted, returns the schedule for current season.",
    "bookbreakers_team_lookups_for_sportsbook_odds": "This will return our dictionary of team names and aliases that different sites use for this game. Our matching games algorithm uses this to determine which team names on different sites correspond to the team name on ESPN's schedule of games.",
    "get_all_competitions_for_viperscore": "With \"Get all competitions\" you'll receive a list with top competitions (like NFL, Premier League, ...) and all competitions from every sport.",
    "lookup_for_satellite_api": "Lookup active Sleeper leagues for a given username.",
    "available_coaches_for_transfermarkt_db": "Get the list of available coaches",
    "fixture_result_for_transfermarkt_db": "Get fixture result by fixture_id",
    "countries_for_allscores": "Get list of countries.",
    "featured_competitions_for_allscores": "Get featured competitions.",
    "leaguetotalstandings_for_handballapi": "Get total standings for a handball unique tournament and season",
    "livematches_for_handballapi": "Get live handball matches.",
    "matchodds_for_handballapi": "Get odds for a handball match by ID.",
    "teamnextevents_for_mmaapi": "Get information about the next events for a specific team.",
    "categorytournaments_for_mmaapi": "This operation allows you to retrieve all leagues from a specified MMA category.",
    "team_results_events_for_flashlive_sports": "Get team results by team ID. Use the pagination",
    "series_for_cricket_live_data": "Lists available cricket series' to query",
    "event_data_brief_for_flashlive_sports": "Get brief data by event ID. It is better to use Event Details and Event Data Brief endpoints",
    "tournament_matches_and_results_by_date_for_tennis_live_data": "This endpoint is the same as the /matches-results/{tournament_id} endpoint but can be narrowed down by date for faster loading.",
    "list_of_champions_for_ncaa_final_four": "Get a list of every National Champion sorted alphabetically.",
    "list_of_teams_for_ncaa_final_four": "Get a list of every Final Four team sorted alphabetically.",
    "sport_data_for_sportscore": "Returns sport data",
    "challenges_list_for_sportscore": "Returns a list of challenges",
    "sport_list_for_sportscore": "Returns a list of sports. This is the main way to get the IDs of the available sports for future inquiries.",
    "playeroverallstatistics_for_handballapi": "Get overall player statistics for a handball player in a unique tournament season",
    "teamnearmatches_for_handballapi": "Get near matches for a handball team by ID",
    "matchheadtoheadduel_for_handballapi": "Get headtohead resume for a handball match by ID.",
    "get_season_totals_allstar_by_id_for_nba_stats_v2": "Api to query season totals allstar",
    "get_season_totals_post_season_by_id_for_nba_stats_v2": "Api to query season totals post season",
    "teams_get_stats_for_cricbuzz_cricket": "Get stats by team",
    "players_get_last_matches_for_divanscore": "Get last matches in which the player attended in the past",
    "getstandings_for_nhl_stats_and_live_data": " ",
    "tournament_fixture_for_handball_data": "Full match list with period and final scores.",
    "tournament_info_for_basketball_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.",
    "tournament_fixture_for_basketball_data": "Full match list with quarter, half time and final scores with venue info.",
    "leaguenextmatches_for_cricketapi2": "Get a list of next matches for a cricket league using the tournament ID, season ID, and page number.",
    "teamplayers_for_cricketapi2": "Get a list of players for a cricket team using their team ID.",
    "matchodds_for_cricketapi2": "Get the odds for a specific cricket match.",
    "teamplaceholderimage_for_americanfootballapi": "Get the team placeholder image in SVG format.",
    "leaguelogo_for_americanfootballapi": "This operation retrieves the logo image for an American Football league, given its unique tournament ID. The image is returned in PNG format.",
    "teamtournaments_for_americanfootballapi": "Get team tournaments they are participating.",
    "tennis_calendar_for_allsportsapi": "Get calendar of the month.",
    "ice_hockey_league_away_standings_for_allsportsapi": "Get league away standings.",
    "rugby_league_media_for_allsportsapi": "Get league media.",
    "livematches_for_rugbyapi2": "Get live Rugby matches.",
    "leaguehometeamevents_for_rugbyapi2": "Get the home team events for a specific Rugby league and season.",
    "get_per_game_post_season_for_nba_stats_v2": "Api to query per game post season",
    "playernextevents_for_sportifyapi": "Player Next Events",
    "topplayersinuniquetournament_for_sportifyapi": "Top Playersin Unique Tournament",
    "standingtotal_for_sportifyapi": "Standing Total",
    "game_playbyplay_gamepk_for_baseball": "Query Baseball games, teams, scores etc...",
    "getplayerstats_for_nhl_stats_and_live_data": " ",
    "tournament_results_by_id_and_year_for_ultimate_tennis": "Via this endpoint, you can retrieve all the matches played in the selected tournament, in a given year. The results are added instantly for every match that ends. You can Retrieve the list of the IDs from the tournament_list endpoint.",
    "projected_hitting_stats_for_mlb_data": "Retrieve a players projected hitting stats for a given season.  Omitting the season parameter will return the actual stats for the players earliest major league season.",
    "hitting_leaders_for_mlb_data": "Retrieve n leaders for a given hitting statistic.  This endpoint is best used alongside col_in/col_ex to prune response data. Without, it returns entire player objects.  For best results, include the player\u2019s name, id, and the stat as a starting point.  See: Using col_in & col_ex",
    "player_search_for_mlb_data": "Search for active and historic/inactive players by name.  The active_sw parameter should be set depending on whether you want to search for active or inactive players. You can omit this parameter, though you will notice a slower response time as the search is done across all (active and inactive) players.",
    "tournamentnextmainevents_for_mmaapi": "Get next main events for a unique tournamente",
    "teamdetails_for_mmaapi": "Get detailed information about a specific team.",
    "categories_for_mmaapi": "This operation allows you to retrieve MMA categories.",
    "rounds_for_sofasport": "Get rounds of the season",
    "unique_tournaments_list_for_sofasport": "Get a list of unique tournaments by category id",
    "seasons_for_player_statistics_for_sofasport": "Get seasons for player statistics by team ID",
    "team_appearances_by_count_for_ncaa_final_four": "Get a list of team appearances in the Final Four ranked by count.",
    "third_place_for_ncaa_final_four": "Get third place data (only available between 1946 and 1981) for the given year.",
    "matchlineups_for_americanfootballapi": "Get the match lineups for a specific American Football match by providing the match ID.",
    "teamlogo_for_americanfootballapi": "This operation retrieves the logo image for an American Football team, given its team ID. The image is returned in PNG format.",
    "leaguelastmatches_for_americanfootballapi": "Get the last matches of an American Football league for a specific tournament and season, including match timings, teams, and other relevant information.",
    "competitions_standings_for_livescore_sports": "Get competition standings (table) by competition ID.  LTT_CODE: All(1),Home(2),Away 3",
    "events_list_for_livescore_sports": "Get the list of the events by sport and date",
    "competitions_player_stats_for_livescore_sports": "Get competition Player statistics by competition ID",
    "top_match_metrics_for_metrx_factory": "Returns the metrics of matches with top values regarding a certain metric.\n\nThis is the premium endpoint for goal-oriented search of match related figures and is available only for the *Mega* subscription. It allows custom logic for match selection and supports functions used to join metrics. Finding the teams with highest conversion rates or market lines with the highest discrepancies to statistical odds are simple tasks by means of this operation.\n\nFurthermore, it may save you credits in comparison to the *Match Metrics* operation as only a filtered subset will be fetched. By default, the Top-10 upcoming matches are returned. Historical top searches are supported for specific teams and competition stages as well.\n\nNote that testing this endpoint with the *Basic* subscription will result in a 403 HTTP error (Forbidden). Instead, refer to the [docs](https://docs.metrxfactory.io/#get-/match-metrics/top) to learn about the features offered by the endpoint.",
    "allwinnersofconstructors_championships_for_formula_1_fixed": "To fetch all the winners information of constructors.",
    "listofallconstructorswithinaraceinayear_for_formula_1_fixed": "This endpoint is to obtain a list of all constructors in a particular race(round) of a season(year)",
    "listofallcircuitswithinaraceinayear_for_formula_1_fixed": " ",
    "teams_affiliates_teamids_for_baseball": "Query baseball team affiliates by ID",
    "matchstreaks_for_icehockeyapi": "Get the streaks for a specific Ice Hockey match using the match id.",
    "playerplaceholderimage_for_icehockeyapi": "Get the player placeholder image in PNG format.",
    "tournament_teams_for_football_data": "List of teams participating in a specific tournament.",
    "matchhighlights_for_handballapi": "Get highlights of a handball match by ID.",
    "get_rankings_regular_season_for_nba_stats_v2": "Api to query rankings regular season",
    "player_stats_by_id_and_year_for_ultimate_tennis": "Via this endpoint you can retrieve official updated statistics for a given WTA player. Values are updated after every played match. ID can be retrieved from the Official WTA Players Rankings endpoint.",
    "player_ranking_history_by_id_for_ultimate_tennis": "You can access all the history of the rankings for a selected player. ID **must** be provided, you can retrieve a player ID from the Players Rankings endpoint.",
    "get_nfl_games_and_stats_for_a_single_player_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call will grab a map of all of the games a player has played this season.   \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \n\nExample:\nCorrect way to get the stats for Justin Fields for his game against Detroit on 11/13/2022 would be this:\n/getNFLGamesForPlayer?playerID=4362887&gameID=20221113_DET@CHI\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNFLGamesForPlayer?playerID=4362887\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNFLBoxScore call with that specific gameID.\n\nYou can choose which season you pull games from with parameter: season .   \nNFL Season that runs from 2022-2023 is season 2022.  And so on.\nIf you call without season parameter then it will pull back current season's games.\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.",
    "tournament_results_events_for_flashlive_sports": "Get team results by tournament_stage_id. Use the pagination",
    "tables_tabs_for_flashlive_sports": "Get the available types (tabs) of standings",
    "currentconstructor_sstanding_for_formula_1_fixed": "Current constructor standings can always be obtained using this endpoint.",
    "managers_get_image_for_divanscore": "Get image of specific manager",
    "managers_get_next_matches_for_divanscore": "Get recent and future matches in which the manager control",
    "players_get_characteristics_for_divanscore": "Get characteristics of specific player",
    "popular_events_for_sofascores": "Get today's popular events",
    "world_latest_odds_for_surebets_2": "Latest odds for international matches - updated every 6 hours",
    "season_pitching_stats_for_mlb_data": "Retrieve a players pitching stats for a given season.",
    "league_pitching_stats_for_mlb_data": "Retrieve a players career hitting stats for a given game type, split by league.",
    "stage_seasons_motorsport_for_sofascores": "Get team stage seasons (motorsport)",
    "daily_unique_tournaments_for_sofascores": "Get daily unique tournaments by date and sport",
    "sub_events_for_sofascores": "Get sub events by event_id",
    "pga_scorecards_for_golf_leaderboard_data": "Provides scorecards for a given player in a given tournament",
    "usa_latest_matches_for_surebets_2": "Latest matches in the USA by bookie - updated every 24 hours",
    "countries_by_bookie_for_surebets_2": "This endpoint gets all available links. In addition you will have a URL to the leagues. (not every bookie included)",
    "matches_v2_list_by_date_for_livescore_v2": "List all matches by specific date\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png",
    "recent_match_list_for_handball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handball Match List or Fixture endpoints.**",
    "get_season_totals_regular_season_for_nba_stats_v2": "Api to query season totals regular season",
    "search_competition_for_viperscore": "Search for any competition",
    "get_live_games_for_viperscore": "With \"Get live games\" you'll receive a full list of all live games with their current status and score.",
    "teamplayers_for_basketapi": "Get the players of a specific basketball team.",
    "leaguegroupmatches_for_basketapi": "Get the groups in the basketball league.",
    "search_for_basketapi": "Search for basketball players, teams, and tournaments using a search term.",
    "matchdetails_for_handballapi": "Get handball match details by ID.",
    "prematchform_for_handballapi": "Get pregame form for a handball match by ID.",
    "teams_history_teamids_for_baseball": "Query baseball team history by ID",
    "event_statistics_for_flashlive_sports": "Get event statistics by event ID",
    "event_details_beta_for_flashlive_sports": "Get event details by event ID",
    "event_summary_results_for_flashlive_sports": "Get event summary results by event ID",
    "tournament_info_for_football_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.",
    "get_roster_by_seasons_for_mlb_data": "Retrieve a teams roster between a given start and end season.",
    "tournamentallevents_for_mmaapi": "Get all MMA events for a unique tournament and tournament ID",
    "eventform_for_mmaapi": "This operation returns the pre game form for a specific MMA event, including team statistics and player data.",
    "schools_for_ncaa_final_four": "Get number of schools in tournament for the given year.",
    "detail_for_ncaa_final_four": "Get the full Final Four data set for the given year.",
    "players_for_live_golf_data": "Fetch a PGA Tour player by his last name, first name, playerId, or a combination of these parameters.\n\nYou must provide at least one search parameter to the API.",
    "events_competition_standings_for_livescore_sports": "Get event competition standings (table) by event ID",
    "playernearmatches_for_cricketapi2": "Get a list of upcoming and recent matches for a cricket player using their player ID.",
    "leaguetotalteamevents_for_cricketapi2": "Get the total team events for a specific Cricket league for a given season by providing its unique tournament ID and season ID.",
    "football_match_lineups_for_sports_live_scores": "Returns LineUps about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint.",
    "getdraft_for_nhl_stats_and_live_data": " ",
    "world_latest_matches_for_surebets_2": "Latest matches international matches by bookie - updated every 24 hours",
    "fedexcup_ranking_for_live_golf_data": "Fetch the FedExCup ranking leaderboard for a given year. These rankings are updated live during a tournament to show the player's projected ranking.",
    "playerimage_for_icehockeyapi": "Get the image for a specific Ice Hockey player in PNG format by providing the player ID.",
    "matchincidents_for_icehockeyapi": "This operation returns incidents for a specific ice hockey match, including red cards, yellow cards, and other relevant data.",
    "leaguetopplayerstypes_for_icehockeyapi": "Get the top players types for a specific Ice Hockey league by providing the tournament ID and season ID.",
    "channels_data_stage_for_sofasport": "Get channels data (stage)",
    "statistics_overall_for_sofasport": "Get team overall statistics by team ID, unique tournament ID, season ID",
    "popular_events_for_sofasport": "Get today's popular events",
    "getbreadcrumbnavitem_for_sportapi": "GetBreadCrumbNavItem  api data",
    "event_details_for_pinnacle_odds": "Get a event details and history odds. history:[time, value, max bet]. `Period_results - status`: 1 = Event period is settled, 2 = Event period is re-settled, 3 = Event period is cancelled, 4 = Event period is re-settled as cancelled, 5 = Event is deleted",
    "headtoheadevents_for_mmaapi": "Get information about head-to-head tennis events for a specific event.",
    "constructors_standings_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve constructor standings data about a specific F1 championship by specifying a year. If you ommit the ***year *** query parameter, a default value will be set to current year.",
    "live_game_data_for_basketball_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.",
    "getspecialcompetitionview_for_betsports": "getSpecialCompetitionView data",
    "bans_esports_for_sofascores": "Get bans (esports) by event_id",
    "event_managers_for_sofascores": "Get team managers by event_id",
    "pitstopdataforarace_for_formula_1_fixed": "This endpoint requires the season(year) and race(round) to be specified.\n",
    "currentdrivers_standing_for_formula_1_fixed": "Current driver standings can always be obtained using this endpoint.",
    "get_mlb_betting_odds_for_tank01_mlb_live_in_game_real_time_statistics": "This grabs MLB betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getMLBBettingLines?gameDate=20230410\n/getMLBBettingLines?gameID=20230410_HOU@PIT",
    "fixture_highlights_for_transfermarkt_db": "Get fixture highlights by fixture_id",
    "competition_play_day_matches_for_transfermarkt_db": "Get competition play day matches",
    "events_by_sport_id_for_sportscore": "Get a list of events belonging to a specified sport. Returns a list of events",
    "media_list_for_sportscore": "Returns a list of medias. Simple pagination is used",
    "player_injuries_for_basketball_datafeeds_by_rolling_insights": "Returns a record of each player's injury on a team",
    "fixtures_by_date_for_rugby_live_data": "Returns fixtures and results by date. When date is not present, defaults to today.",
    "playerstatisticsseasons_for_basketapi": "Get the statistics seasons for a specific basketball player.",
    "teamplayersstatisticsseasons_for_basketapi": "Get the players statistics seasons for a specific basketball team.",
    "matchincidents_for_basketapi": "Get incidents for a specific basketball match.",
    "team_details_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve a detailed information about a specific team. You will need to provide the team's name in the path parameter called team_name. You can specify either full name of the team or partial. If partial name is provided as parameter, still the api will make an attempt to search and return the expected result. The expected response will hold information about team's base location , team chief, chassis & more additional statistical data.\nEXAMPLE: redbull or red, haas or haasf1team, alfaromeo or alfa romeo",
    "uefa_rankings_for_transfermarkt_db": "Get countries within 5 years. Ex. https://www.transfermarkt.com/statistik/5jahreswertung",
    "matchvotes_for_handballapi": "Get votes for a handball match by ID.",
    "teamplayers_for_handballapi": "Get players for a handball team by ID",
    "matchstreaks_for_handballapi": "Get team streaks for a handball match by ID.",
    "team_squad_for_basketball_data": "List of players in a team.",
    "country_competitions_for_transfermarkt_db": "Get country competitions by countries ID",
    "player_news_for_transfermarkt_db": "Get player news",
    "fixtures_for_allscores": "Get fixtures for competitors or competitions.",
    "fighter_for_spectation_sports_events_api": "Get a single fighter by ID",
    "matches_list_for_cricbuzz_cricket": "List live, recent, upcoming matches",
    "teams_get_news_for_cricbuzz_cricket": "Get news by team",
    "teams_get_players_for_cricbuzz_cricket": "Get players by team",
    "matchh2hduel_for_baseballapi": "Get the head-to-head duel for a specific baseball match using the match ID.",
    "playerstatisticsseasons_for_baseballapi": "Get the statistics seasons for a specific baseball player using the player ID.",
    "matchodds_for_baseballapi": "Get the odds for a specific baseball match using the match ID.",
    "tournament_list_wta_for_ultimate_tennis": "Via this endpoint, you can retrieve the list of all tournaments to be played in a selected year (from *1960* to *2022*).  We return some basic info about every row such as tournament venue, surface, prizemoney, etc. Results by Id and Year** endpoint",
    "countries_for_surebets_2": "Available countries",
    "england_latest_odds_for_surebets_2": "Latest odds for matches in England - updated every 6 hours",
    "email_endpoint_for_emailbounceapi": "Simplify your email management with our API that detects and handles bounced emails from a range of ISPs, ensuring your messages are delivered effectively.",
    "getgroupwithcontactspaginated_for_mailslurp_email_testing": "Get group and paginated contacts belonging to it",
    "getinboxemailspaginated_for_mailslurp_email_testing": "Get a paginated list of emails in an inbox. Does not hold connections open.",
    "getunreademailcount_for_mailslurp_email_testing": "Get number of emails unread. Unread means has not been viewed in dashboard or returned in an email API response",
    "gettestwebhookpayloadnewemail_for_mailslurp_email_testing": " ",
    "doesinboxexist_for_mailslurp_email_testing": "Check if inboxes exist by email address. Useful if you are sending emails to mailslurp addresses",
    "getausersmessage1_for_ishan": " ",
    "retrievethelistofapplications_for_ishan": " ",
    "getcontacts_for_mailslurp_email_testing": " ",
    "downloadbodybytes_for_mailslurp_email_testing": "Returns the specified email body for a given email as a stream / array of bytes.",
    "getwebhookresult_for_mailslurp_email_testing": " ",
    "getemailcount_for_mailslurp_email_testing": " ",
    "emailverifications_for_fast_email_verifier": "He is  a simple way  to verify a list of email addresses with different dimensions.",
    "email_check_smtp_for_fast_email_verifier": "An easy way of checking your domain's SMTP.",
    "getmailboxsettings_for_ishan": " ",
    "enumeratesubsitesofsite_for_ishan": " ",
    "getalerts_for_ishan": " ",
    "disposable_domain_and_suggest_domain_for_fast_email_verifier": "Find out if the domain is disposable and get a suggested domain.",
    "enumeratethedoclibsinrootsite_for_ishan": " ",
    "getdrivefiles_for_ishan": " ",
    "getusersrelatedpeople_for_ishan": " ",
    "allplannertasksforaplan_for_ishan": " ",
    "getphoneplans_for_mailslurp_email_testing": " ",
    "gettestwebhookpayloadnewcontact_for_mailslurp_email_testing": " ",
    "getattachment_for_mailslurp_email_testing": " ",
    "search_for_locationiq": "The Search API allows converting addresses, such as a street address, into geographic coordinates (latitude and longitude). These coordinates can serve various use-cases, from placing markers on a map to helping algorithms determine nearby bus stops. This process is also known as Forward Geocoding.",
    "hillshading_for_maptoolkit": "Global raster hillshading tiles.",
    "query_for_ldu_boundary_by_h3index_for_ca_boundaries_io": "Query for Boundary by H3Index.\nQuery for a LDU boundary by H3 Index, if a LDU Postal Code does not exist within the H3 Index Hexagon, an empty FeatureCollection is returned.\n\n**H3Index resolution must be greater than 8.**",
    "get_raster_tile_for_mapilion_vector_and_raster_map_tiles": "Returns Raster tiles as PNG. These can be used in mapping libraries like Leaflet. The style-name can be one of:\n- `kurviger-liberty` a map style developed for Kurviger.de\n- `osm-bright` the default Osm Bright style",
    "query_for_all_province_territory_names_for_ca_boundaries_io": "Query for All Province / Territory names",
    "query_for_hexagon_by_h3index_for_ca_boundaries_io": "Create a h3 hexagon with any h3Index value in the world.",
    "reverse_for_maptoolkit": "Reverse geocoding.",
    "market_get_reports_for_schwab": "Get reports about the market\n* You need to use .../content/decrypt endpoint to decrypt content returned by Url fields.",
    "gettokenbalance_for_chaingateway_io": "Returns the token balance of a given address.",
    "market_auto_complete_for_bb_finance": "Query suggestion by term and phrase",
    "pools_get_pool_by_blockchain_for_defi_watch": "Get full data about pool by blockchain",
    "stock_quote_price_for_financial_modeling_prep": "This API returns stock price in real time",
    "market_news_stock_for_mboum_finance": "Recently published stock news.",
    "asset_by_id_for_crypto_exchanges": "Get Asset by ID",
    "indexes_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "options_prices_for_quotient": "Return current options data given the input parameters.",
    "fed_funds_overnight_rate_for_u_s_economic_indicators": "Get daily federal funds overnight rate at which commercial banks borrow and lend their excess reserves to each other overnight.",
    "stocks_get_financials_for_trading_view": "Get financials information related to a ticker or symbol",
    "calendars_get_earning_calendar_for_trading_view": "Get earning calendar by specific date range and exchange",
    "type_parent_get_summary_for_morning_star": "Get summary information as displayed in the Parent tab",
    "type_get_strategy_for_morning_star": "Get strategy",
    "watchlists_show_for_stocktwits": "Returns the the list of ticker symbols in a specified watch list for the authenticating user. Required parameter is the ID of the watch list, not the name of the watch list.",
    "daily_4_recent_for_ca_lottery": "Most recent draw for Daily 4",
    "commodity_channel_index_cci_for_qvantana": "Commodity Channel Index (CCI) indicator",
    "moving_average_ma_sma_for_qvantana": "Moving average (MA/SMA) indicator",
    "get_litecoin_block_by_hash_or_height_for_litecoin_wallet": "Get Litecoin Block detail by block hash or height.",
    "query_premium_index_kline_for_bybit": "Premium index kline. Tracks the premium / discount of BTC perpetual contracts relative to the mark price per minute.",
    "latest_symbol_info_for_bybit": "Latest Symbol Info",
    "last_traded_price_for_bybit": "If symbol is not specified, the price from all symbols will be returned",
    "past_3_years_for_the_sandbox_sand": "Get price data for the past 3 years.\n\n~ daily (00:00 UTC) data points.",
    "etfs_list_for_twelve_data": "This API call return array of ETFs available at Twelve Data API. This list is daily updated.",
    "market_movers_stocks_for_twelve_data": "Get the list of the top gaining or losing stocks today.\n\nTop gainers are ordered by the highest rate of price increase since the previous day's close. Top losers are ordered by the highest percentage of price decrease since the last day.\n\nAvailability: Ultra plan\nData weighting: 100 API credits per symbol",
    "correl_for_twelve_data": "Measures linear correlation between two time series. Takes values in the range from -1 to 1, where -1 is total negative correlation, 0 is no correlation, and 1 is total positive correlation. ",
    "get_information_about_a_transaction_output_utxo_in_a_litecoin_transaction_for_litecoin_wallet": "Get information about a transaction output in a transaction and check whether this output is a UTXO or has been spent.\n\n\"UTXO\" stands for \"Unspent Transaction Output\". A UTXO is the amount of LTC that remains at a Litecoin address after a cryptocurrency transaction involving this address has been performed. The UTXO can then be used as input for a new cryptocurrency transaction. For more information the UTXO, see the [Bitcoin user documentation.](https://developer.bitcoin.org/devguide/transactions.html)\n\nIf the transaction output is an UTXO, the API returns data about it.\nIf the transaction output has been spent and there is no UTXO to return, the API returns an error with the 404 response code.",
    "stock_v2_get_news_for_morning_star": "Get news in the News tab",
    "company_balance_sheet_for_real_time_finance_data": "Get public company's **quarterly** or **annual** balance sheet. Supports the *stock* type only.",
    "stock_get_financial_stmts_for_yh_finance_v2": "return financial statements for 'income', 'balance',  or 'cash'",
    "stock_get_beta_for_yh_finance_v2": "return beta",
    "market_get_sparks_for_webull": "Used to draw small charts which often display next to symbols",
    "stock_get_realtime_quote_for_webull": "Get stock quote in real time.",
    "longterm_analysis_retrieve_for_palmy_investing_api": "Long Term Scores are calculated based on the date of the next 10-Q Report. Check the docs for explanation",
    "timeseries_stats_list_for_palmy_investing_api": "Use lists full of price statistics to compare and analyse stocks",
    "etf_list_for_palmy_investing_api": "A list of n ETFs where each hold time critical information such as price",
    "major_indices_for_investing_financial_stocks": "get country  major indices",
    "indices_future_tables_for_investing_financial_stocks": "get indices futures tables",
    "market_aggressive_small_caps_for_mboum_finance": "Small cap stocks with earnings growth rates better than 25%.",
    "stock_institution_ownership_stock_for_mboum_finance": "Get stock institution ownership.",
    "market_undervalued_large_caps_for_mboum_finance": "Large cap stocks that are potentially undervalued.",
    "get_52_week_low_by_price_with_respecto_to_country_for_global_stock_market_api_data": "Get 52 Week Low by price with respecto to Country",
    "get_52_weel_high_by_performance_with_respecto_to_country_for_global_stock_market_api_data": "Get 52 Weel High by performance with respecto to Country",
    "summary_detail_for_yh_finance_complete": "This endpoint returns full detail of any public stock",
    "recommendation_trends_for_yh_finance_complete": "This endpoint returns Recommendation Trends.",
    "currency_converter_for_yh_finance_complete": "Looking for a fast and reliable currency converter? Our API endpoint has got you covered! With just a few lines of code, you can easily integrate our endpoint into your application and start converting currencies in no time. Say goodbye to the hassle of manual calculations and let our endpoint handle it all for you. \n\nTry it out today and experience the convenience and efficiency of our currency converter API endpoint.",
    "list_subscriptions_for_coinbase": "List customer subscriptions",
    "list_recurring_payments_for_coinbase": "List your recurring payments",
    "symbols_attributes_for_seeking_alpha_finance": "Get details by Ticker Slugs. Specify attribute category",
    "news_comment_maps_for_seeking_alpha_finance": "Get comment-maps for news by news_id",
    "news_list_for_seeking_alpha_finance": "Get list of the news by category. Trending news in the /news/trending. Ex.: https://seekingalpha.com/market-news/crypto",
    "currency_exchange_rate_for_real_time_finance_data": "Get currency / forex or crypto exchange rates.",
    "market_day_gainers_for_mboum_finance": "Stocks ordered in descending order by price percent change with respect to the previous close.",
    "options_stock_for_mboum_finance": "Get option data for stocks, ETFs, and indexes.",
    "past_1_week_for_the_sandbox_sand": "Get price data for past 1 week.\n\n~hourly data points.",
    "10_year_historical_daily_prices_for_stock_prices": "10 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.",
    "options_for_stock_and_options": "Return Stock and Options Data for given ticker",
    "straddle_for_stock_and_options": "Return options data in straddle format",
    "economic_indicators_news_for_investing": "This endpoint provides the economic indicators news",
    "currency_options_for_investing_financial_stocks": "get the currency options  iframe",
    "equity_related_indices_for_investing_financial_stocks": "get equity related indices by slug",
    "economy_news_for_investing_financial_stocks": "get latest  economy news",
    "financial_growth_list_for_palmy_investing_api": "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s).",
    "balance_sheet_list_for_palmy_investing_api": "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s).",
    "keyfigures_retrieve_for_palmy_investing_api": "A list of all metrics you can assign for i.e data tables",
    "stock_v2_key_stats_get_financial_health_for_ms_finance": "Get key stats financial health in the Valuation tab",
    "stock_v2_get_key_stats_for_ms_finance": "Mapped to Key Ratios section in Quote tab",
    "type_risk_get_risk_volatility_measures_for_ms_finance": "Get risk volatility measures in the Risk tab",
    "south_korea_scheduled_flights_growth_for_global_flight_data": "Get weekly South Korea scheduled departing flights growth.",
    "spain_scheduled_flights_level_for_global_flight_data": "Get weekly Spain scheduled departing flights level.",
    "singapore_scheduled_flights_growth_for_global_flight_data": "Get weekly Singapore scheduled departing flights growth.",
    "stock_get_200day_moving_avg_for_yh_finance_v2": "return 200 day moving average",
    "calendar_events_for_yh_finance_complete": "Calendar Events of a particular stock",
    "summary_details_for_yh_finance_complete": "This endpoint returns a summary detailed of any public stock",
    "yh_historical_for_yh_finance_complete": "This endpoint returns the history of a public stock.",
    "stock_get_stock_historical_price_data_for_yh_finance_v2": "This method will pull historical pricing data for stocks, currencies, ETFs, mutual funds, U.S. Treasuries, cryptocurrencies, commodities, and indexes.",
    "stock_get_current_percent_change_for_yh_finance_v2": "return current percent change",
    "get_option_chains_for_tradier": "",
    "get_the_market_calendar_for_tradier": "",
    "get_global_stats_for_coinranking": "These global statistics tell about the data available on coinranking.",
    "stock_v2_get_news_for_ms_finance": "Get news in the News tab",
    "market_get_movers_for_bb_finance": "Get latest information of movers in the market",
    "get_global_indices_by_technical_for_global_stock_market_api_data": "World financial market to get global Indices with respect to technical",
    "get_stock_market_news_for_global_stock_market_api_data": "Stock market news from the US and around the world. Our news team reports on market moving events around the world, that traders need to know in order to stay on top of developments in the companies whose stocks they trade.",
    "sabr_hist_for_kiann_options_sabr": "This function pulls out the latest 5 time-stamp snapshot of the SABR calibrated parameters.\nThere are choices of either 'btc' or 'eth'.\n\nThe data returns, amongst, the time-to-expiry, the error-in-calibration (where error = sum[abs(target_vol - sabr_vol)]",
    "news_search_for_webull": "Search for news by terms or phrase",
    "market_get_charts_for_webull": "Get multiple history pricing  charts",
    "stock_get_dividends_splits_for_webull": "Get stock dividends and splits",
    "united_states_residential_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at residential.",
    "max_historical_monthly_prices_for_stock_prices": "Max monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included.",
    "symbols_get_fundamentals_for_seeking_alpha": "Get fundamentals for specific symbol",
    "symbols_get_analyst_price_target_for_seeking_alpha": "Get Wall Street analyst price target for specific symbol",
    "news_list_trending_deprecated_for_seeking_alpha": "List latest trending news",
    "markets_day_watch_for_seeking_alpha_finance": "Get day-watch, top gainers, top losers, cryptocurrencies, most active",
    "news_trending_for_seeking_alpha_finance": "Get the list of trending news by category",
    "companies_by_exchange_for_freedom_finance": "Convenient User-Friendly Manually Populated List Of Common Stocks Per Exchange Code. Not Guaranteed To Be Up To Date.",
    "list_exchanges_for_freedom_finance": "List all exchanges known to have stocks associated with them",
    "get_top_coins_by_mentions_for_crowdsense": "Retrieve real time top 10 coins by Mentions\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions value\n\n**Definitions:**\n- Mentions: Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\n**Details:**\n- All results are in real time",
    "list_system_wallets_for_walletapi_cloud": "Obtain a list of system wallets for this project.",
    "stock_index_trend_stock_for_mboum_finance": "Get index trend earnings history information for a particular stock",
    "market_get_realtime_quotes_for_seeking_alpha": "Get real time quotes",
    "articles_get_details_for_seeking_alpha": "Get analysis detail by id",
    "get_sentiment_change_bullish_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for top 50 trending stocks or crypto symbols on social media with the greatest change in bullish or bearish sentiment on Twitter/StockTwits.",
    "get_content_for_finance_social_sentiment_for_twitter_and_stocktwits": "Content Articles\nSearch for the latest Utradea generated articles that cover analysis, commentary, & due dilligence for a given stock or cryptocurrency.",
    "forex_retrieve_for_palmy_investing_api": "Query a specific Forex pair by ID.",
    "reports_retrieve_for_palmy_investing_api": "Premium: Retrieve one of the reports by their ID",
    "keymetrics_list_for_palmy_investing_api": "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s).",
    "get_social_moving_averages_2w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 2-week intervals.",
    "crypto_signal_for_quotient": "Return a trading signal based on market sentiment, reliable indicators, analyst ratings and news. Signal : `1`=**buy**, `0`=**hold** and `-1`=**sell**. Confidence interval : [0%-100%].",
    "equity_earnings_for_quotient": "Return earnings (EPS, quarterly) history data for a given security.",
    "forex_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "block_for_optimism": "Get full data from a specific block on the Optimism blockchain.",
    "unemployment_rate_adjusted_for_u_s_economic_indicators": "Get monthly seasonally adjusted unemployment rate.",
    "consumer_sentiment_index_for_u_s_economic_indicators": "Get monthly Consumer Sentiment Index.",
    "earnings_trend_for_stock_analysis": "Get earnings trend.",
    "earnings_history_for_stock_analysis": "Get earnings history.",
    "v2_auto_complete_deprecated_for_fidelity_investments": "Auto suggestion by input name or quote",
    "all_markets_for_crypto_exchanges": "Get all markets",
    "get_trending_stocks_by_performance_with_respecto_to_country_for_global_stock_market_api_data": "Get Trending Stocks by performance with respecto to Country",
    "get_cryptocurrency_news_for_global_stock_market_api_data": "Investing.com's crypto news section is providing the latest cryptocurrency news - stay up-to-date with breaking news on major cryptocurrencies, including Bitcoin, Ethereum, Litecoin, Ripple and ICOs.",
    "get_major_global_indices_by_technical_for_global_stock_market_api_data": "World financial market to get major global Indices with respect to technical",
    "get_an_asset_for_alpaca_trading": "",
    "key_metrics_for_holistic_finance_stock_data": "Provides either annual or quarterly key metrics of a single stock company.",
    "balance_for_holistic_finance_stock_data": "Provides either annual or quarterly balance sheet statements of an single stock company.",
    "2_crows_for_qvantana": "2 Crows indicator",
    "get_all_symbols_for_finance_data": "Get all available symbols in API",
    "get_equity_latest_data_for_investing_financial_stocks": "get equity  latest data by slug",
    "stock_candlestick_for_investing_financial_stocks": "get stock  candlestick table by slug",
    "show_user_account_settings_for_coinbase": "Show current user with account settings",
    "stock_v2_get_financials_for_ms_finance": "Mapped to Financials tab",
    "stock_v2_get_realtime_data_for_ms_finance": "Get detail information of stock, market,index, etc...",
    "list_previously_used_emails_for_coinbase": "List emails the user has previously used for autocompletion.",
    "earning_events_list_for_palmy_investing_api": "A list of all current earnings. We use data in an interval of the last month to the next year.",
    "shortterm_analysis_list_for_palmy_investing_api": "The Following Week Score is calculated once every week. Check the docs for explanation",
    "get_the_account_for_alpaca_trading": "Returns the account associated with the API key",
    "stock_earnings_stock_for_mboum_finance": "Get earnings information for a particular stock",
    "stock_insider_holders_stock_for_mboum_finance": "Get stock insider holders' information.",
    "market_auto_complete_for_ms_finance": "Get auto complete suggestion by term or phrase",
    "market_get_global_indices_for_ms_finance": "Get information of global indices",
    "stock_v2_get_trading_information_for_morning_star": "Get Trading Information in the Quote tab",
    "stock_v2_get_analysis_data_for_morning_star": "Mapped to Analysis section in Quote tab",
    "stock_v2_get_financials_for_morning_star": "Mapped to Financials  tab",
    "natr_for_twelve_data": "Normalized Average True Range(NATR) is used to compare and analyze across different price levels due to its normalized quality, which might be more effective than the original ATR.",
    "linearreg_for_twelve_data": "Linear Regression(LINEARREG) is used to determine trend direction by a straight line.",
    "real_time_price_for_twelve_data": "This endpoint is a lightweight method that allows retrieving only the real-time price of the selected instrument.",
    "stock_get_yearly_low_for_yh_finance_v2": "return yearly low",
    "daily_derby_for_ca_lottery": "Daily Derby History",
    "symbols_author_ratings_for_seeking_alpha_finance": "Get a author ratings for symbol. Ex result: https://seekingalpha.com/symbol/NVDA/ratings/author-ratings",
    "get_social_change_posts_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search the top 50 tickers trending on social media with the greatest change in posts.",
    "plus_di_for_twelve_data": "Plus Directional Indicator(PLUS_DI) is a component of the Average Directional Index(ADX), and it measures the existence of uptrend.",
    "earnings_for_twelve_data": "This API call returns earnings data for a given company, including EPS estimate and EPS actual. Earnings are available for complete company history.\n\nAvailability: Pro plan\nData weighting: 20 API credits per symbol",
    "plus_dm_for_twelve_data": "Plus Directional Movement(PLUS_DM) is calculated as High - Previous High.",
    "symbols_v2_get_momentum_for_seeking_alpha": "Get momentum of specific symbol",
    "get_most_popular_news_for_global_stock_market_api_data": "Featured here: links to the most widely read news articles from all sections as determined by readers.",
    "get_other_trade_record_for_binance_futures_leaderboard": "Get the other trade record",
    "stock_institution_ownership_for_yahoo_finance_v2": "Get stock institution ownership.",
    "stock_key_statistics_for_yahoo_finance_v2": "Get stock key statistics data.",
    "stock_financial_data_for_yahoo_finance_v2": "Get stock financial data.",
    "get_project_details_for_walletapi_cloud": "Obtain a project's details including all assets.",
    "stock_get_dividend_rate_for_yh_finance_v2": "return dividend rate",
    "singapore_scheduled_flights_level_for_global_flight_data": "Get weekly Singapore scheduled departing flights level.",
    "market_most_watched_for_mboum_finance": "Trending stocks in today's market",
    "stock_get_quote_deprecated_for_morning_star": "Get stock quote information",
    "news_list_for_morning_star": "List latest news",
    "market_v2_get_realtime_data_for_morning_star": "Query one or more entities data at once",
    "stock_split_calendar_for_investing": "This endpoint provides information about the stock split calendar.",
    "united_kingdom_scheduled_flights_growth_for_global_flight_data": "Get weekly United Kingdom scheduled departing flights growth.",
    "australia_scheduled_flights_growth_for_global_flight_data": "Get weekly Australia scheduled departing flights growth.",
    "time_series_for_metals_prices_rates_api": "Timeseries endpoint lets you query the API for daily historical rates between two dates of your choice.\nThis endpoint has a limitation of 365 days and only one symbol per request.",
    "stock_calendar_events_for_yahoo_finance_v2": "Get stock calendar events.",
    "market_undervalued_large_caps_for_yahoo_finance_v2": "Large cap stocks that are potentially undervalued.",
    "united_states_continued_claims_count_for_covid_19_economic_impact": "Get weekly count of continued claims, combining Regular, PUA and PEUC claims.",
    "estimates_for_holistic_finance_stock_data": "Provides estimates of a single stock company.",
    "type_price_get_cost_illustration_for_morning_star": "Get cost illustration as displayed in the Price tab",
    "m1_money_stock_adjusted_for_u_s_economic_indicators": "Get monthly seasonally adjusted M1 monetary aggregate from the Federal Reserve.  M1 is the money supply that is composed of physical currency and coin, demand deposits, travelers' checks, other checkable deposits, and negotiable order of withdrawal (NOW) accounts.",
    "insider_trades_for_sec_filings": "Returns an aggregated and summarized collection of the most recent BUY, SELL and OPTION EXERCISE insider trades filed with Form 4 SEC Filings.\n\nVisit [https://last10k.com/stock-screeners/insider-trading](https://last10k.com/stock-screeners/insider-trading) to view this data as a web page.",
    "stock_net_share_purchase_activity_stock_for_mboum_finance": "Get net share purchase activity information for a particular stock",
    "earnings_for_yh_finance_complete": "This endpoint returns the company earnings.",
    "get_an_account_s_balances_for_tradier": "",
    "get_option_expirations_for_tradier": "",
    "volume_weighted_average_price_vwap_for_qvantana": "Volume Weighted Average Price (VWAP) indicator",
    "quote_get_details_for_schwab": "Get details information of quote",
    "etf_expand_list_for_palmy_investing_api": "Premium: A list of ETFs with expanded functionality. Here you can view Sectors& Countries.",
    "technicals_analysis_retrieve_for_palmy_investing_api": "Technical Scores are calculated multiple times a day. Check the docs for explanation",
    "economical_events_retrieve_for_palmy_investing_api": "Retrieve a an Economical Event by its name or Event ID to inspect it in more detail.",
    "mega_millions_recent_for_ca_lottery": "Most recent draw for Mega Millions",
    "powerball_recent_for_ca_lottery": "Most recent draw for Powerball",
    "daily_derby_recent_for_ca_lottery": "Most recent draw for Daily Derby",
    "stock_get_stat_for_webull": "Get stock statistic",
    "regions_list_for_webull": "List all supported regions",
    "market_get_dividends_for_webull": "Get market dividends in specific region",
    "get_company_quarterly_balance_sheet_for_finance_data": "Get Company Quarterly Balance Sheet",
    "get_major_commodities_by_price_for_global_stock_market_api_data": "World financial market to get major commodities with respect to price",
    "options_historical_for_quotient": "Return historical options data given the input parameters.",
    "indexes_live_for_quotient": "Return current market price data given the input parameters.",
    "earnings_for_holistic_finance_stock_data": "Provides earnings of a single stock company.",
    "cashflow_for_holistic_finance_stock_data": "Provides either annual or quarterly cash flow statements of an single stock company.",
    "get_an_account_s_cost_basis_for_tradier": "",
    "stock_get_financials_for_bb_finance": "Get financial information of stocks",
    "current_average_price_for_crypto_markets": "Current Average Price",
    "compressed_aggregate_trades_list_for_crypto_markets": "Compressed/Aggregate Trades List",
    "market_get_cross_currencies_for_bb_finance": "Get exchange rate between currencies",
    "quote_get_option_fundamentals_for_schwab": "Get option fundamentals of quote",
    "tickers_retrieve_for_palmy_investing_api": "A list response of all stock tickers with their ID, that are possible to trade",
    "dividends_for_palmy_investing_api": "A list of all dividends that are upcoming/occurred recently",
    "balance_sheet_for_sec_filings": "Returns a company's most recent balance sheet summarizing their liabilities, assets and shareholders' equity",
    "operations_for_sec_filings": "Returns a company's most recent statement of operations showing how they balance costs with revenue",
    "get_other_position_for_binance_futures_leaderboard": "Get trader open positions",
    "historical_crypto_price_for_holistic_finance_stock_data": "Provides historical crypto currency data.",
    "grades_for_holistic_finance_stock_data": "Provides grades of a single stock company.",
    "getmarketorderbook_for_kalshi_trading_api": "Endpoint for getting the orderbook for a market.",
    "stock_earnings_trend_stock_for_mboum_finance": "Get earnings trend earnings history information for a particular stock",
    "get_top_coins_by_followers_change_for_crowdsense": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers change value\n\n**Definitions:**\n\n- FollowersChange: Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days\n\n\n**Details:**\n- All results are in real time",
    "get_coin_metrics_by_name_for_crowdsense": "Retrieve  coin\u00b4s real time social media metrics by Coin name\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Name: Coin Name (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n\u2022\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n\u2022\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\u2022\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\u2022\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n\u2022\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All dates are in UTC\n- Results are on 1 day timeframe",
    "get_exchanges_for_coinranking": "Get a list of exchanges. Exchanges are ranked based on their trading volume in the last 24 hours.\nThis endpoint requires the **ultra** plan or higher.",
    "get_commodities_for_investing": "Get Commodities",
    "grains_futures_prices_for_investing": "page source : https://www.investing.com/commodities/grains",
    "getpositions_for_kalshi_trading_api": "Endpoint for getting all market positions for the logged-in member.",
    "timeseries_id_retrieve_for_palmy_investing_api": "Retrieve all important daily price information about a stock",
    "sectors_history_retrieve_for_palmy_investing_api": "A detailed view on a specific sector. Find it by referring the Sector ID.",
    "income_statement_list_for_palmy_investing_api": "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s).",
    "stock_recommendation_trend_for_yahoo_finance_v2": "Get stock recommendations and trends.",
    "market_quotes_stocks_for_yahoo_finance_v2": "Quote data for stocks, ETFs, mutuals funds, etc...",
    "stock_combine_data_for_yahoo_finance_v2": "Get combine stock data such as profile, financial data, statistics, balance sheet, sec-filing, quote, earnings, trends and more!",
    "quarterly_balance_sheets_for_freedom_finance": "Quarterly balance sheet statements",
    "getblock_for_chaingateway_io": "Returns information of an ethereum block with or without transactions",
    "newaddress_for_chaingateway_io": "Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.",
    "getgasprice_for_chaingateway_io": "Returns the current gas price in GWEI.",
    "symbols_get_sector_metrics_for_seeking_alpha": "Get Profitability, Growth, etc... metrics",
    "screeners_list_for_seeking_alpha": "List all screeners (Top Rated Stocks, Top Quant Dividend Stocks,  Top Yield Monsters, etc...)",
    "symbols_get_earnings_chart_for_cnbc": "Generate image of earnings chart of specific stock quote, index, exchange, etc...",
    "auto_complete_deprecated_for_cnbc": "Get auto suggestion by familiar words or phrase",
    "get_coin_ohlc_data_for_coinranking": "Get OHLC (Open High Low Close) data for the coin throughout time.\nThis endpoint requires the **ultra** plan or higher.\n\n**Beta**\nThe OHLC endpoint is currently in beta. This means we might make some changes that could be considered breaking for your application, and we expect to have downtime every now and then while we are still in beta.",
    "stock_get_company_profile_for_webull": "Get relating company profile",
    "economy_news_for_investing": "This endpoint provides the economy news",
    "moving_average_convergence_divergence_macd_for_qvantana": "Moving Average Convergence Divergence (MACD) indicator",
    "3_black_crows_for_qvantana": "3 Black Crows indicator",
    "financial_statements_disclosures_for_sec_filings": "Returns a list of financial statements and disclosures from a company's Annual or Quarterly report.\n<p><i>Use the CIK and Accession Number values returned from the <b>SEC Filings</b> endpoint for this endpoint's Request Parameters.</i></p>",
    "trending_stocks_for_sec_filings": "Returns the top  trending stocks on Last10K.com right now with the most viewed <strong>10-K / 20-F / 40-F Annual Reports</strong> and <strong>10-Q Quarterly SEC Filings</strong>.\n\nView live data at: https://last10k.com/stock-screeners/trending",
    "auto_complete_deprecated_for_seeking_alpha": "Get suggested symbols, authors, etc... by provided word or phrase",
    "symbols_get_splits_for_seeking_alpha": "Get splits",
    "market_get_market_open_for_seeking_alpha": "Get market open",
    "press_releases_list_deprecated_for_seeking_alpha": "List press releases of specific symbol",
    "ratios_for_holistic_finance_stock_data": "Provides either annual or quarterly ratios of a single stock company.",
    "stalled_pattern_for_qvantana": "Stalled pattern indicator",
    "hull_moving_average_for_qvantana": "Hull Moving Average indicator",
    "typical_price_for_qvantana": "Typical price indicator",
    "holiday_calendar_for_investing": "This endpoint provides information about the holiday calendar.",
    "energy_futures_prices_for_investing": "page source: https://www.investing.com/commodities/energy",
    "commodity_indices_for_investing": "page source : https://www.investing.com/indices/commodities-indices",
    "content_decrypt_for_schwab": "Used to decrypt content of Url fields returned in .../market/get-reports endpoint",
    "listaddresses_for_chaingateway_io": "Returns all ethereum addresses created with an account.",
    "equity_daily_for_quotient": "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "type_performance_get_returns_for_ms_finance": "Get returns in the Performance tab",
    "type_get_realtime_data_for_ms_finance": "Get realtime data related to an ETF or FUND",
    "get_coin_modifiers_for_coinranking": "Get the modifiers of a coin's supply and their balance.\nThis endpoint requires the **ultra** plan or higher.",
    "datatables_retrieve_for_palmy_investing_api": "Premium: Interact with your table by querying it with its unique ID. You can list, retrieve, delete, update, create and replace tables on the go.",
    "getorders_for_kalshi_trading_api": "Endpoint for getting all orders for the logged-in member.",
    "getexchangestatus_for_kalshi_trading_api": "Endpoint for getting the exchange status.",
    "get_economy_news_for_global_stock_market_api_data": "Breaking economic news, with reports on global stock markets, personal finance, businesses and technology.",
    "currency_info_for_changenow_crypto_exchange": "This method returns the name of the coin, the coin's main features (such as anonymity, the need for Extra ID, and logo), and the coin's supported wallets.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an object with currency information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>warnings</i></b></td>\n        <td><i>String</i></td>\n        <td>Some warnings like warnings that transactions on this network take longer or that the currency has moved to another network. Field \u201cfrom\u201d for warnings in case of exchange of this currency and field \u201cto\u201d for warnings in case of exchange for this currency, respectively</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>isAnonymous</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has the ability to hide their transactions. This means that even if you know someone\u2019s address, you won\u2019t be able to recognize the balance and receive information about transactions without additional information (e.g. XMR)</td>\n    </tr>\n    <tr>\n        <td><b><i>wallets</i></b></td>\n        <td><i>Object</i></td>\n        <td>This field contains a list of primary and secondary wallets. For each wallet, this endpoint returns the name, url, logo url, supported platforms, degree of anonymity, degree of security, application weight and indicates if the wallet supports different currencies</td>\n    </tr>\n    <tr>\n        <td><b><i>addressExplorerMask</i></b></td>\n        <td><i>String</i></td>\n        <td>This field helps to create a link for the wallet address. Wallet address url = this field.replace('$$', payinAddress or payoutAddress from the <a href=\"#fa12244b-f879-4675-a6f7-553cc59435dc\">Transaction status API endpoint</a>)</td>\n    </tr>\n    <tr>\n        <td><b><i>transactionExplorerMask</i></b></td>\n        <td><i>String</i></td>\n        <td>This field helps to create a link for the transaction hash. Transaction hash url = this field.replace('$$', payinHash or payoutHash from the <a href=\"#fa12244b-f879-4675-a6f7-553cc59435dc\">Transaction status API endpoint</a>) </td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "exchange_range_for_changenow_crypto_exchange": "<b>New!</b>\n\nThe API endpoint returns minimal payment amount and maximum payment amount required to make an exchange. If you try to exchange less than minimum or more than maximum, the transaction will most likely fail. Any pair of assets has minimum amount and some of pairs have maximum amount.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>minAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Minimal payment amount</td>\n    </tr>\n    <tr>\n        <td><b><i>maxAmount</i></b></td>\n        <td><i>Number|null</i></td>\n        <td>Maximum payment amount. Could be null.</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "quarterly_cashflow_statements_for_freedom_finance": "Quarterly cashflow statements",
    "dividends_for_freedom_finance": "Download dividend history by specific stock symbol",
    "meta_tooltips_by_slug_for_seeking_alpha_finance": "Get tooltips for news or article",
    "symbols_suggested_for_seeking_alpha_finance": "Get suggested tickers by symbol",
    "hong_kong_scheduled_flights_growth_for_global_flight_data": "Get weekly Hong Kong scheduled departing flights growth.",
    "three_inside_up_down_for_qvantana": "Three Inside Up/Down indicator",
    "latest_spac_deals_ipos_closings_for_spachero_spac_database": "Returns a list of latest SPAC events, such as deals, ipos, closings, rumors.\n\n**Available options are: ** ipo, closings, deals, rumor",
    "adosc_for_twelve_data": "Chaikin A/D Oscillator(ADOSC) is an indicator, which finds the relationship between increasing and decreasing volume with price fluctuations. The Chaikin Oscillator measures the momentum of the Accumulation/Distribution Line(ADL) using two Exponential Moving Averages of varying length to the line(MACD).",
    "eps_trend_for_twelve_data": "This API endpoint returns a breakdown of the estimated historical EPS changes at a given period.\n\nAvailability: Mega plan\nData weighting: 20 API credits per symbol",
    "sustainability_for_twelve_data": "This API request returns brief information on mutual fund sustainability and ESG.\n\nAvailability: Mega plan\nData weighting: 200 API credits per symbol",
    "live_stock_metadata_for_freedom_finance": "Get all the real time metadata about the stock  (currency, trend averages etc)",
    "coins_list_for_investing_cryptocurrency_markets": "List all available cryptocurrencies",
    "stock_get_yearly_high_for_yh_finance_v2": "return yearly high",
    "balansheet_financials_for_yh_finance_complete": "This endpoint returns a company/ stock financials",
    "transcripts_list_deprecated_for_seeking_alpha": "List transcripts of specific symbol",
    "stock_v2_get_competitors_for_ms_finance": "Mapped to Competitors section in Quote tab",
    "type_parent_get_investment_flows_for_ms_finance": "Get investment flows as displayed in the Parent tab",
    "historical_forex_price_for_real_time_quotes": "Returns historical data of a specific time interval and foreign exchange currency pair",
    "stock_get_stock_earnings_data_for_yh_finance_v2": "return stock earning data",
    "stock_get_market_cap_for_yh_finance_v2": "return market cap",
    "account_verify_for_stocktwits": "This verifies the credentials of a user. Useful for checking if authentication method is correct.",
    "api_v2_address_validation_for_changenow_crypto_exchange": "This API endpoint validates the address with a checksum depending on a transferred network.\nThe \u2018result\u2019 field in the response shows if the address is valid: True if valid, and False if the address is invalid. The \u2018message\u2019 field describes why the address is invalid. In case the address is valid, this field is null.\nAn error may occur in case the request is incorrect: a cryptocurrency or an address are not indicated, or we do not support this network yet.\n\n<h3>Successful response:</h3>\nThe response contains the \u2018result\u2019 and \u2018message\u2019 fields.\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>result</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>The validity of an address</td>\n    </tr>\n    <tr>\n        <td><b><i>message</i></b></td>\n        <td><i>String|null</i></td>\n        <td>Explains why the address is invalid</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>",
    "get_sentiment_change_bearish_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for top 50 trending stocks or crypto symbols on social media with the greatest change in bullish or bearish sentiment on Twitter/StockTwits.",
    "query_historical_volatility_for_bybit": "The data is in hourly.\nIf time field is not passed, it returns the recent 1 hour data by default.\nIt could be any timeframe by inputting startTime & endTime, but it must satisfy [endTime - startTime] <= 30 days.\nIt returns all data in 2 years when startTime & endTime are not passed.\nBoth startTime & endTime entered together or both are left blank",
    "query_kline_for_bybit": "Get kline.",
    "market_aggressive_small_caps_for_yahoo_finance_v2": "Small cap stocks with earnings growth rates better than 25%.",
    "gettoken_for_chaingateway_io": "Returns information about a specific ERC20 token like name, symbol, decimal places and total supply.",
    "sendtoken_for_chaingateway_io": "Sends ERC20 tokens from an address controlled by the account to a specified receiver address. The token contract address is needed to specify the token. The use of the identifier parameter is recommend and awaits an unique string. Whenever a transaction is beeing sent, the identifier is checked and the transaction gets dropped if there is one with that identifier already.",
    "stations_get_information_deprecated_for_airvisual": "Get information at specific station by its id",
    "list_of_bodyparts_for_exercisedb": "Fetch a list of available body parts",
    "list_by_name_for_exercisedb": "Fetch exercise by name",
    "stations_get_measurements_deprecated_for_airvisual": "Get measurements at specific station by its id",
    "cities_v2_get_measurements_for_airvisual": "Get measurements in specific city by its id",
    "check_availability_for_airbnb_v2": "-",
    "listings_by_administrative_divisions_for_airbnb_listings": "Retrieve listings ids and last updated dates for prices, availability and ratings in the specified geographic area. Geocrafic area names can be found from \"Get administrative divisions\" endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie listings with cities with the same name but in different countries). Returns 50 results. Can be filtered on bedrooms and max guest capacity",
    "listing_availability_for_airbnb_listings": "Retrieve listing availability and stay length rules for the requested month.\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.",
    "search_property_for_airbnb_search": "Search Property",
    "the_prices_for_the_alternative_directions_for_flight_data_v2": "Brings the prices for the directions between the nearest to the target cities back.",
    "airport_search_for_flight_fare_search": "An endpoint to search airports",
    "facilities_of_the_hotel_for_booking_com": "Get facilities of the hotel by hotel_id. Ex.: `Restaurant`, `Room service`, `Breakfast in the room`",
    "properties_get_policies_for_booking": "Get policies of property by id",
    "hotel_rooms_offers_for_hotels_com_provider": "Get available rooms at the hotel",
    "vehicle_supplier_details_for_booking_com": "Vehicle supplier details by vehicle_id",
    "search_flight_everywhere_for_skyscanner_v2": "Use this API to get flights when the destination is everywhere or unsure.",
    "get_things_to_do_for_skyscanner_v2": "Use this API to get Thing  to do nearby the hotel selected.",
    "nearby_places_of_the_hotel_for_booking_com": "Get nearby places of the hotel by hotel_id. Ex.: nearby `Airport`, `Shopping Centre`",
    "download_chains_for_priceline_com_provider": "Downloads a list of Hotel chains",
    "seat_map_for_priceline_com_provider": "Gets the seat map of all flights in a contract bundle through the getFlightSeatMap endpoint",
    "list_of_payment_types_for_booking_com": "Returns a list of payments. Only payments with {bookable} set to 1, can be used in processBooking. For processBooking, we always support Visa, Mastercard and American Express.",
    "list_of_facility_types_for_booking_com": "Returns facility types names and their translations",
    "bus_trolley_locations_for_septa": "",
    "get_administrative_divisions_for_airbnb_listings": "Retrieve geographical admin names to be used in Listing by georef endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie cities with the same name but in different countries). Returns 50 results",
    "search_location_for_tripadvisor": "-",
    "get_cruises_location_for_tripadvisor": "-",
    "get_restaurant_details_for_tripadvisor": "-",
    "search_property_by_geo_for_airbnb_search": "Search Property By GEO",
    "trainview_for_septa": "Regional Rail real-time train locations",
    "stays_properties_detail_for_booking_com_v2": "Get detail",
    "list_of_hotel_types_for_booking_com": "Returns hotel types names and their translations.",
    "search_car_rental_for_booking_com": "Search car rental. Browse our inventory of hundreds of cheap car rentals. Get the best rental car deals on your next trip",
    "test_api_for_airbnb_v2": "This API is to test if server is up and running",
    "special_offers_for_flight_data_v2": "Brings the recent special offers from the airline companies back in the .XML format.",
    "search_flights_locations_for_priceline_com_provider": "Search airports and locations by name",
    "download_amenities_for_priceline_com_provider": "Downloads a list of Amenities",
    "get_languages_for_airbnb_search": "Get languages",
    "airlineinfo_for_flightera_flight_data": "Returns detailed airline information for airlines identified by the provided identifiers. In most cases the list should contain only one entry.\nHowever, due to the nature of the data, it is possible that multiple entries are returned.\nIf searched by ident, only one airline is returned.\nOne of ident, iata, icao, name must be provided.",
    "get_hotels_filter_for_tripadvisor": "-",
    "search_hotels_by_location_for_tripadvisor": "-",
    "cheapest_tickets_for_flight_data_v2": "Returns the cheapest non-stop tickets, as well as tickets with 1 or 2 stops, for the selected route with departure/return date filters. Important: Old dates may be specified in a query. No error will be generated, but no data will be returned.",
    "photos_of_the_hotel_for_booking_com": "Get all photos of the hotel by hotel_id",
    "search_vacation_rental_location_for_tripadvisor": "-",
    "search_cars_different_dropoff_for_tripadvisor": "-",
    "properties_list_by_map_for_booking": "List properties by coordinate of bounding box",
    "filters_list_for_booking": "A list of filter options to pass in categories_filter field. Pass params and values are as same as .../properties/list API",
    "airportstatistics_for_flightera_flight_data": "Returns detailed airport statistics for airports identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airport is returned.\nOne of ident, iata, icao, localID must be provided.\nStatistics are calculated overnight and represent the current day's data.",
    "airlinesearch_for_flightera_flight_data": "Returns a list of airlines for a given country, identifiers or name search pattern. Multiple arguments can be specified to limit the search.\nEither one of the arguments must be specified.",
    "airportinfo_for_flightera_flight_data": "Returns detailed airport information for airports identified by the provided identifiers. In most cases the list should contain only one entry.\nHowever, due to the nature of the data, it is possible that multiple entries are returned.\nIf searched by ident, only one airport is returned.\nOne of ident, iata, icao, localID must be provided.",
    "markets_for_airbnb_listings": "Retrieve Market names to be used in Listing by market endpoint. Returns 50 results",
    "airlineaircrafts_for_flightera_flight_data": "A list of plane registrations for a given airline. Can search by ident only.\nOnly returns currently active aircraft",
    "aircraftsearch_for_flightera_flight_data": "A list of plane registrations for a given search criteria.\nCan search by airline ident, country, model\nIf multiple arguments are provided, they will be chained as AND\nReturns only currently active aircraft",
    "europe_for_nomad_list_cities": "Get European cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc",
    "properties_get_rooms_deprecated_for_booking": "Get full details of rooms in the hotel",
    "webcams_list_property_property_property_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed {property}. Multiple {property} must be separated by comma. Required: at least one {property}. Possible values are \"editors\" (featured from the editors), \"hd\" (high resolution webcams), and \"live\" (webcams with a live stream).",
    "city_data_in_json_format_for_flight_data_v2": "API returns a file with a list of cities from the database",
    "search_rental_cars_location_for_tripadvisor": "-",
    "get_filters_for_tripadvisor": "-",
    "webcams_list_exclude_webcamid_webcamid_for_webcams_travel": "This is a modifier. Exclude the {webcamid} from a list. Multiple {webcamid} must be separated by comma. Required: at least one {webcamid}",
    "airlineflights_for_flightera_flight_data": "Returns a list of flights for an airline given a start time. The list is sorted ascending by scheduled departure time.\nThe next departure/ time is returned for pagination (use start times to paginate).\nThe dates returned for each flight represent the scheduled departure date in local time and can be used to query flight data via /flight/info.",
    "count_listings_by_lat_lng_for_airbnb_listings": "Retrieve listings count in a range from a given geographical point. Can be filtered on bedrooms and max guest capacity",
    "search_cars_locations_for_priceline_com_provider": "Search locations by name",
    "download_filter_amenities_for_priceline_com_provider": "Downloads an Amenity list filtered ",
    "auto_complete_for_priceline_com_provider": "Gets airport and city ids for the air product related to words in passed string.",
    "language_list_for_sitedomain": "\u7cfb\u7d71\u8a9e\u7cfb\u5217\u8868",
    "get_all_kfc_locations_by_state_and_city_for_kfc_locations": "GET all KFC locations by state and city",
    "measurements_for_timedb": "Retrieve list of Measurements in TimeDB",
    "get_all_app_keys_for_aaaa": "Get all App Keys for a specified App.",
    "get_multiple_users_for_aaaa": "Get information on all or multiple users in your Enterprise Hub. Use the optional parameters to return a more narrow range of users.The information returned for each user includes userId , status, email, lastActive, and more. ",
    "students_for_student": "all students",
    "specifications_by_year_make_model_for_motorcycle_specs_database": "GET /article/{year}/{make}/{model}\n[ArticleGetByYearMakeModel]",
    "search_for_catbreeddb": "Search cat breed by keyword.",
    "single_cat_breed_for_catbreeddb": "Gives details of a single cat breed.",
    "industry_list_for_sitedomain": "\u7522\u696d\u5225\u4e8c\u78bc",
    "production_years_grouped_by_model_id_for_motorcycle_specs_database": "Get makeName, modelName, years, by model Id",
    "airplanes_ordered_by_descending_for_airplanesdb": "Get all airplanes ordered by name in descending order.",
    "get_geo_location_of_ip_address_for_mocking_rock_": "Pass IP address to get its geo location and other details",
    "get_sample_businessprofile_for_mocking_rock_": "Use this API to get fake-generated Business Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above.",
    "get_locales_list_for_mocking_rock_": "You can use this API to get the list of available locales \nWhich can be used to generate profile APIs response.",
    "get_all_state_names_for_kfc_locations": "GET all State names",
    "search_for_dogbreeddb": "Search dog breed by keyword.",
    "getclosestimage_for_helioviewer_v1": "Find the image data that is closest to the requested date/time.  Return the associated metadata from the helioviewer database and the XML header of the JPEG2000 image file.\n\n        Either `sourceId` must be specified, or the combination of `observatory`, `instrument`, `detector`, and `measurement`.",
    "shortenurl_for_helioviewer_v1": "Shorten a Helioviewer.org URL with the bit.ly URL shortening web service.",
    "requeuemovie_for_helioviewer_v1": "Re-generate a custom movie that is no longer cached on disk.  Once the movie has been successfully queued for regeneration, the Movie ID can be used to check on the status of the movie (via `getMovieStatus`) and to download the movie (via `downloadMovie`).",
    "memre_api_v1_concepts_id_for_learning_engine": "Retrieve the details of a specific concept by ID.",
    "queuemovie_for_helioviewer_v1": "Create a custom movie by submitting a request to the movie generation queue.  The response returned will provide you with a unique Movie ID that can be used to check on the status of your movie (via `getMovieStatus`) and to download your movie (via `downloadMovie`).",
    "downloadscreenshot_for_helioviewer_v1": "Download a custom screenshot (that was generated using the `takeScreenshot` API endpoint).",
    "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "radical_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "retrieve_objectives_for_drillster_2_0": "Retrieves the objectives that have been defined for the calling user.",
    "retrieve_group_results_for_drillster_2_0": "Retrieves the up-to-date results for a group.",
    "memre_api_v1_users_user_id_learning_stats_for_learning_engine": "Get the most effective times of day for a user to study.\n",
    "get_all_hadiths_for_hadiths_api": "Get all hadiths from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
    "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "get_categories_by_collection_for_hadiths_api": "Each collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the categories by their specific collections.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
    "takescreenshot_for_helioviewer_v1": "Generate a custom screenshot.\n\n        You must specify values for either `x1`, `y1`, `x2`, and `y2`\n        or `x0`, `y0`, `width` and `height`.\n\n        By default, the response is a JSON object containing a unique screenshot identifier (`id`) that can be used to with the `downloadScreenshot` API endpoint.\n\n        Set the `display` parameter to `true` to directly return the screenshot as binary PNG image data in the response.\n\n        Please note that each request causes the server to generate a screenshot from scratch and is resource intensive.  For performance reasons, you should cache the response if you simply intend to serve exactly the same screenshot to multiple users.",
    "retrieve_drill_details_for_drillster_2_0": "Retrieves drill or course details",
    "retrieve_practice_preferences_for_drillster_2_0": "Retrieves the user's practice preferences for a given drill.",
    "retrieve_list_of_groups_for_drillster_2_0": "Retrieves a list of all groups the calling user has access to.",
    "get_all_collections_for_hadiths_api": "Get all collections from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.",
    "radical_stroke_number_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "convert_planet_degree_to_planet_angle_for_yawin_indian_astrology": "Convert a Planet Degree to  Angle Format . (Degree is 67.5666666667, converted to Angle as 67.34.0)",
    "carbonfootprintfrommotorbike_for_carbonfootprint": "Returns the CO2e in Kg from a motorbike travel",
    "significant_earthquakes_past_hour_for_everyearthquake": "Significant Earthquakes, Past Hour",
    "m2_5_earthquakes_past_hour_for_everyearthquake": "Magnitude 2.5+ Earthquakes, Past Hour",
    "distance_between_airports_for_carbonsutra": "Returns the distance between two IATA airport codes in kilometers.",
    "get_sun_rise_and_sun_set_time_for_yawin_indian_astrology": "Find the Sun Rise and Sun Set Time on a day with timezone",
    "convert_planet_angle_to_planet_degree_for_yawin_indian_astrology": "Convert a Planet Angle to  Degree Format . (Angle is 67.34.0, converted to Degree as 67.5666666667)",
    "getassetsbycontractinformation_for_reddio_nft_token_and_ipfs": "This request will return asset_id wrapped with return code and error code",
    "aggregationbalanceofastark_keybycontractaddress_for_reddio_nft_token_and_ipfs": "The API aggregation balances by contract address, for previous API, each NFT have an asset_id, but in this API. NFT do not have asset_id when return, but has token id",
    "listfilesunderproject_for_reddio_nft_token_and_ipfs": "It will list files under the project, the response item like\n\n| **field** | **description** |\n| --- | --- |\n| cid | [Content Identifiers](https://docs.ipfs.tech/concepts/content-addressing/#what-is-a-cid) |\n| filename | The stored file name |\n| created_at | first create time |\n| filesize | file size(in byte) |\n| endpoints | the endpoints you can view the file |",
    "decrypt_for_cryptocurrency_news": "Get the top latest news from Decrypt.",
    "the_guardian_for_cryptocurrency_news": "Get the top latest news from The Guardian.",
    "bitcoinist_for_cryptocurrency_news": "Get the top latest news from Bitcoinist.",
    "getkey_for_secure_text_api": "This endpoint will generated publickey and privatekey.\nIt response **msgCode** as six character string.\n\nClient can use this code to verify owner of key, \nwhen calling encrypt and decrypt endpoint.\n\n*** After decrypt ciphertext this code will inactive, \nclient need to call getKey again to get new code",
    "video_descriptions_for_youtube_classification_api": "GET Video descriptions",
    "gettaskresult_free_of_use_for_yandex_serp": "To get the result of the task just provide the **task_id** that you obtained after requesting **GetSerpAsync**. When task is not finished yet you will receive **task_status: inprogress**. For a finished task you will get **task_status: succeeded**. Check the **Example Responses** tab to see the examples. \nPossible task statuses:\n- **pending** - task is waiting for its turn\n- **inprogress** - task has been passed to the worker\n- **succeeded** - task has been finished with success\n\nUse this endpoint how much you want. **It's free of charge**!\n\nThe average **GetCompleteDataAsync**  execution time is 10-40 seconds.  It all depends how many tasks are in the queue.",
    "abuse_contact_lookup_for_viewdns": "Used to find the abuse contact address for a domain name. This is where you would send complaints about spam originating from that domain.",
    "chinese_firewall_test_for_viewdns": "Checks whether a site is blocked by the Great Firewall of China. This test checks across a number of servers from various locations in mainland China to determine if access to the site provided is possible from behind the Great Firewall of China.   This test checks for symptoms of DNS poisoning, one of the more common methods used by the Chinese government to block access to websites.",
    "get_qr_code_for_tvb_qr_code": "/qr-code",
    "measurements_detailed_for_measurement_unit_converter": "GET a list of all the available measurements with unit details.",
    "get_from_yts_for_torrent_search": "You can use this for moive search",
    "infobox_for_wikipedia_infobox": "returns a json object representation of the provided wikipedia entry",
    "length_from_to_number_for_unitconversion": "Length unit conversions",
    "volume_from_to_number_for_unitconversion": "Volume unit conversions",
    "check_datacenter_proxies_service_status_for_ephemeral_proxies": "It returns the current status of the service, including the total number of datacenter proxies available and grouped by country.\n",
    "hex_to_hsv_for_convexity": "Converts  hex color code to  hsv color code",
    "hsl_to_hex_for_convexity": "Converts  hsl color code to hex color code",
    "email_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with the email address. When scanned, the QR Code will prompt the user to 'send an email' to the specified email address.",
    "spam_database_lookup_for_viewdns": "Find out if your mail server is listed in any spam databases.",
    "angular_jobs_for_usa_jobs_for_it": "Angular Jobs API",
    "metadata_album_for_spotify_downloader": "Get metadata about album",
    "echo_for_simpleecho": "Send a GET request to the Echo",
    "iran_firewall_test_for_viewdns": "Test if any website is accessible using the Internet in Iran in real-time.",
    "traceroute_for_viewdns": "Determines the series of servers that data traverses from the ViewDNS server to the specified domain name or IP address.",
    "convert_hex_for_convexity": "Endpoint to converts hex color code to other color code like RGB , HSL, CMYK",
    "hex_to_hsl_for_convexity": "Converts  hex color code to  hsl color code",
    "rgb_to_hex_for_convexity": "Converts  rgb color code to hex color code",
    "data_analyst_jobs_for_usa_jobs_for_it": "Data Analyst Jobs Api",
    "python_jobs_for_usa_jobs_for_it": "API for Python Jobs",
    "c_14_versions_for_cpp_14_code_compiler": "C++ 14 Versions",
    "define_for_wordnet_search": "Defines the word",
    "wifi_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with WiFi network details. When scanned, the QR Code prompts the scanning device to 'Join the Network'. Note that this QR Code works only for Android devices. iPhones do not allow automatic joining of WiFi networks and will display network details as text.",
    "list_all_tasks_for_odesk_apis": "pull all tasks assigned within a company, team or to a specific user",
    "c99_versions_for_c99_code_compiler": "C99 Versions",
    "nodejs_jobs_for_usa_jobs_for_it": "NodeJs Jobs Api",
    "create_a_user_with_only_an_email_for_dailycred": "",
    "whois_for_viewdns": "Displays owner/contact information for a domain name. Can also be used to determine if a domain name is registered or not.  This tool is not available to free API key users. Access is restricted to paid API keys only.",
    "port_scanner_for_viewdns": "This web based port scanner will test whether common ports are open on a server. Useful in determining if a specific service (e.g. HTTP) is up or down on a specific server.   Ports scanned are: 21, 22, 23, 25, 80, 110, 139, 143, 445, 1433, 1521, 3306 and 3389",
    "hsl_to_rgb_for_convexity": "Converts  hsl color code to rgb color code",
    "get_categories_for__onboarding_project_v3": " ",
    "google_map_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with a Google Maps URL linked to specified map coordinates. When scanned, the QR Code prompts the scanning device to open the URL in a mobile browser or Google Maps mobile application (if installed)",
    "javascript_jobs_for_usa_jobs_for_it": "JavaScript Jobs Api",
    "test_for_vps_tester": "Test",
    "get_call_for_philippines_tin_ocr": "Used to fetch api result using the request id received in responses.",
    "get_products_in_category_for__onboarding_project": " ",
    "user_by_id_for_reqres_dont_change_": "User by id",
    "users_for_reqres_dont_change_": "Users",
    "aa_for_test1": "bb",
    "getorderbyid_for_freeplanwithhardlimit": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "getpetbyid_for_freeplanwithhardlimit": "Returns a single pet",
    "getinventory_for_multipleteamscallingtest": "Returns a map of status codes to quantities",
    "brotli_for_autosub": "testing auto subscription",
    "getorderbyid_for_multipleteamscallingtest": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
    "logoutuser_for_freeplanwithhardlimit": "",
    "ad_generator_20_head_and_10_desc_1_min_for_adcopy_ai_google_ads_ai_text_generation": "Get a relevant & Compliant Google Ad, for SEM and PPC marketers, created by SEM Experts. Result includes 10+ ad descriptions &  20+ headlines, and  is based on user inputs as well as A.I. Intelligence based on OpenAI's engine. \n\n**Detailed description:**\nThe Full Ad generator endpoint combines the power of the headlines AI generator with the descriptions AI generator to generator a full set of Google Ad Dynamic Search Ad consisting of 4 descriptions and 15 headlines ( though we provide more so you could pick and choose the best ones ). \n\nThis API endpoint uses advanced prompt engineering to analyze user inputs in the form of URL, subject, and important keywords to create high-quality ad descriptions that are tailored to the product or service being advertised. By leveraging the advanced capabilities of OpenAI's ChatGPT engine, the endpoint is able to deliver top-of-the-line ad descriptions that are optimized for relevance, clarity, and engagement.\n\n**Detailed Technical Documentation:**\nCombined the Descriptions & Headlines generator endpoint of AdCopy AI into a single GET request, with the following query parameters:\n\n**subject:** Required. A string of between 10 and 60 characters, which represents the \"value proposition\" of the product or service being advertised. The user is advised to provide keywords in a comma-delimited format.\n\n**url:** Required. A string that represents the URL of a page that describes the product or service being advertised. The API will fetch the content from the page and extract relevant keywords to help generate quality ads.\n\n**mostImportantKeywords:** Optional. A string of up to 100 characters, representing the most important keywords about the ad group being advertised. The presence of these keywords in the resulting content is not guaranteed.\n\n**language:** Optional. A string that represents the target audience's language in ISO-2 format (e.g. EN, IT, ES, etc.). The field is currently in alpha testing and may not provide results in the requested language.\n\n**country:** Optional. A string that represents the target audience's country in ISO-2 format (e.g. US, CA, IT, etc.). The field is currently in alpha testing and may not provide country-specific content.\n\n**exampleDescriptions:** Optional. A string of at most 200 characters, representing example descriptions that the user may provide to fine-tune the results.\n\n**exampleHeadlines:** Optional. A string of at most 200 characters, representing example headlines that the user may provide to fine-tune the results.\n\nThe endpoint will return at least 10 ad descriptions and at least 20 headlines that are tailored to the product or service being advertised. \n\nThe Headlines & Descriptions will be optimized for relevance, clarity, and engagement, leveraging the advanced capabilities of OpenAI's ChatGPT engine and Significat Prompt Optimization for your specific ad and product  or service requirement.\n\nTry it now, for free.",
    "getuserbyname_for_petstoreratelimit": "",
    "getinventory_for_petstoreratelimit": "Returns a map of status codes to quantities",
    "api_key_validation_for_adcopy_ai_google_ads_ai_text_generation": "This endpoint is used only to validate API Keys, it simply returns a status of 200 and a message of 'OK'. \nThe use of this endpoint is Free, and is useful for server-to-server FREE API validation.",
    "getpetbyid_for_petstoreratelimit": "Returns a single pet",
    "getinventory_for_thisshouldbefree": "Returns a map of status codes to quantities",
    "getuserbyname_for_thisshouldbefree": "",
    "view_status_code_and_message_for_pe_demo": "View status code and message for the specified value.",
    "search_api_for_world_weather_online_api": "The Location search API method takes a query value and returns information about the location, including area name, country, latitude/longitude, population, and a URL for the weather information.",
    "marine_weather_api_for_world_weather_online_api": "Marine Weather API provides worldwide marine weather forecast and tide data for upto 7-days.",
    "availability_for_kayuloweather": "Determine the data sets available for the specified location.",
    "weather_for_kayuloweather": "Obtain weather data for the specified location.\n\nThe `dataSets` query parameter is used to obtain different data, like forecasts and current weather. Thus not all query parameters are needed for every data set. See the description of the query parameters to identify, which parameter is needed for which data set.",
    "weather_alert_for_kayuloweather": "Receive an active weather alert.",
    "find_places_for_ai_weather_by_meteosource": "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc.",
    "find_places_prefix_for_ai_weather_by_meteosource": "**Search places by beginning of the name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places* endpoint, you can specify only the prefix of the place you are looking for. You can search for cities, mountains, lakes, countries, etc.",
    "by_city_name_for_rapidweather": "You can call by city name or city name, state code and country code. Please note that searching by states available only for the USA locations.",
    "cities_in_circle_for_rapidweather": "API returns data from cities laid within definite circle that is specified by center point",
    "coordinates_by_zip_post_code_for_rapidweather": "Coordinates by zip/post code",
    "call_5_day_3_hour_forecast_data_by_zip_code_for_rapidweather": "Please note if country is not specified then the search works for USA as a default.",
    "reverse_geocoding_for_rapidweather": "Reverse geocoding allows to get name of the location (city name or area name) by using geografical coordinates (lat, lon). The **limit **parameter in the API call allows you to cap how many location names you will see in the API response.",
    "points_point_for_national_weather_service": "Metadata about a point. This is the primary endpoint for forecast information for a location. It contains linked data for the forecast, the hourly forecast, observation and other information. Example: /points/39.0693,-94.6716",
    "points_point_stations_for_national_weather_service": "Stations nearest to a point in order of distance. Example: /points/39.0693,-94.6716/stations",
    "alerts_active_for_national_weather_service": "A list of active alerts that can be filtered by parameters. Uses same parameters as the /alerts endpoint, but sets \"active\" parameter to 1 and ignores \"start\" and \"end\" parameters. The ATOM format returns items in CAP-ATOM.",
    "zones_type_zoneid_forecast_for_national_weather_service": "Forecast data for zone. Example: /zones/forecast/MOZ028/forecast",
    "location_info_for_foreca_weather": "Metadata for location.",
    "local_weather_api_for_world_weather_online_api": "The Local Weather REST API (also called City and Town Weather API) method allows you to access current weather conditions, the next 14 days of accurate and reliable weather forecast, Air Quality Data, Weather Alerts and Monthly Climate Averages for over 4 million cities and towns worldwide. The Local Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, etc.",
    "three_hourly_for_foreca_weather": "A longer three-hourly forecast up to 14 days.",
    "nearest_place_for_ai_weather_by_meteosource": "Use this endpoint to search for the **nearest named place** (village/town/city) from a given GPS coordinates. You will get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information**.\n\n*Note: If you specify coordinates of a secluded place (e.g. middle of the ocean), the nearest point can be very far from the coordinates.*",
    "alerts_parameters_for_national_weather_service": "A list of alerts that can be filtered by parameters. If no parameters are provided, then all alerts are returned. The ATOM format returns items in CAP-ATOM.",
    "points_point_forecast_hourly_for_national_weather_service": "Hourly forecast data for a point. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast/hourly",
    "astro_for_ai_weather_by_meteosource": "Returns global **Sun and Moon information** (sunrise/sunset, moonrise/moonset and moon phase) for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`.",
    "minutely_for_ai_weather_by_meteosource": "**Minute-by-minute** precipitation forecast for the next 60 minutes. Updated in **real-time** based on our **AI nowcasting models**. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.",
    "forecast_air_pollution_data_for_rapidweather": "Forecast air pollution data.\nBesides basic Air Quality Index, the API returns data about polluting gases, such as Carbon monoxide (CO), Nitrogen monoxide (NO), Nitrogen dioxide (NO2), Ozone (O3), Sulphur dioxide (SO2), Ammonia (NH3), and particulates (PM2.5 and PM10).\n\nAir pollution forecast is available for 5 days with hourly granularity. Historical data is accessible from 27th November 2020.",
    "products_types_for_national_weather_service": "A list of product types with an active product",
    "gridpoints_wfo_x_y_for_national_weather_service": "Raw (commonly referred to as \"gridded\") data provided by the Weather Office. Every forecast request will use this data to build the forecast response. The grid for a given location is determined by the \"property.forecastGridData\" property in the /points/{lat},{lon} endpoint. Example: /gridpoints/EAX/40,48",
    "title_get_most_popular_movies_for_imdb": "Get most popular movies",
    "title_get_top_stripe_for_imdb": "Get top stripe of the title",
    "news_list_for_flixster": "List latest news",
    "sport_for_google_news": "This endpoint is used to get sport news from Google News.",
    "count_for_spaceflight_news": " ",
    "articlesbylaunch_for_spaceflight_news": " ",
    "theaters_detail_for_flixster": "Get theater and showtime information",
    "reviews_list_for_flixster": "List reviews related to a movie",
    "title_get_genres_for_imdb": "Get genres information of the title",
    "actors_get_bio_for_imdb": "Get biography of actor or actress",
    "title_get_versions_for_imdb": "Get versions information that supported",
    "social_media_news_in_english_for_onelike": "Get social media news in English",
    "social_media_news_in_turkish_for_onelike": "Get social media news in Turkish",
    "getpeoplebytopic_for_a_i_smartable": "Get artificial intelligence influencers, entrepreneurs and top researchers by topic.",
    "getlearningresourcesbytopic_for_a_i_smartable": "Get artificial intelligence learning resources by topic.",
    "getprojectsbytopic_for_a_i_smartable": "Get artificial intelligence projects by topic.",
    "actors_list_most_popular_celebs_for_imdb": "Get most popular movies",
    "getlearningresources_for_a_i_smartable": "Get artificial intelligence learning resources.",
    "title_get_hero_with_promoted_video_for_online_movie_database": "Get heroes information of the title",
    "title_v2_get_popular_movies_by_genre_for_online_movie_database": "Get popular movies by genre",
    "title_get_quotes_for_online_movie_database": "Get quotes in specific title",
    "actors_get_all_news_for_online_movie_database": "Get all news of actor or actress",
    "title_get_technical_for_online_movie_database": "Get technical information",
    "title_get_plots_for_online_movie_database": "Get plots information of the title",
    "title_get_taglines_for_imdb": "Get taglines information of the title",
    "actors_get_awards_for_online_movie_database": "Get awards of actor or actress",
    "title_get_ratings_for_online_movie_database": "Get ratings of the title",
    "title_get_all_images_for_online_movie_database": "Get all available photos of the title",
    "getsponsorships_for_election2020_smartable": "Get sponsorships",
    "title_get_genres_for_online_movie_database": "Get genres information of the title",
    "title_get_details_for_online_movie_database": "Get detail information of the title",
    "getpastevents_for_election2020_smartable": "Get past election events.",
    "title_get_overview_details_for_imdb": "Get overview information of the title",
    "title_get_metacritic_for_imdb": "Get metacritic information of the title",
    "title_get_release_expectation_bundle_for_online_movie_database": "Get release expectation of the title",
    "title_get_video_playback_for_imdb": "Get promoted, trailer video clips",
    "title_v2_get_popular_movies_by_genre_for_imdb": "Get popular movies by genre",
    "title_get_goofs_for_imdb": "Get goofs in specific title",
    "actors_get_awards_summary_for_imdb": "Get awards summary of actor or actress",
    "title_get_hero_with_promoted_video_for_imdb": "Get heroes information of the title",
    "detail_for_spaceflight_news": " ",
    "entertainment_for_google_news": "This endpoint is used to get entertainment news from Google News.",
    "getnewsbytopic_for_a_i_smartable": "Get artificial intelligence news by topic.",
    "title_get_most_popular_tv_shows_for_imdb": "Get most popular TV shows",
    "title_get_full_credits_for_imdb": "Get full list of casts and crews relating to specific title",
    "title_get_user_reviews_for_imdb": "Get user reviews of the title",
    "search_for_market_intelligence_by_automata": " ",
    "similar_for_market_intelligence_by_automata": " ",
    "resetpassword_for_mybooky_demo": " ",
    "search_company_by_name_for_b2bhint": "Search for a company by parameters will return a list of companies that match your query",
    "brandlist_for_boldsign": " ",
    "read_a_survey_for_nps_net_promoter_score": "Get the details of a given customer survey by its survey id (sid)",
    "download_csv_format_for_ironwifi": "DOWNLOAD CSV FORMAT",
    "read_users_by_logon_fail_for_ironwifi": "READ - USERS BY LOGON FAIL",
    "read_auth_requests_1_for_ironwifi": "READ - AUTH REQUESTS 1",
    "read_user_usage_sum_for_ironwifi": "READ - USER USAGE SUM",
    "read_network_for_ironwifi": "READ NETWORK",
    "read_usage_by_terms_for_ironwifi": "READ - USAGE BY TERMS",
    "users_for_geospark": "Get users details",
    "downloadattachment_for_boldsign": " ",
    "teamdocuments_for_boldsign": " ",
    "downloadauditlog_for_boldsign": " ",
    "read_networks_for_ironwifi": "READ NETWORKS",
    "read_user_for_ironwifi": "READ USER",
    "calculate_mortgage_for_real_estate_usa": "calculate mortgage",
    "listusers_for_boldsign": " ",
    "gettoken_for_mybooky_demo": " ",
    "getslots_for_mybooky_demo": " ",
    "getusersreservation_for_mybooky_demo": " ",
    "behalfdocuments_for_boldsign": " ",
    "getuser_for_boldsign": " ",
    "v1_plan_apicreditscount_for_boldsign": " ",
    "nps_organization_for_nps_net_promoter_score": "Get a summary of NPS calculation for a given organization. It considers the overall answers related to all templates belonging to a given organization and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs.",
    "shops_for_rocket_league": "Check the current shops:\n`rocket-league1.p.rapidapi.com/shops/:type`",
    "season_career_leaderboard_mw_2_for_cod_api_2_0": "Get season career information for up to 2000 players on the MW 2 leaderboard.",
    "kills_leaderboard_wz2_for_cod_api_2_0": "Get top kills information for up to 2000 players on the leaderboard.",
    "tournaments_for_rocket_league": "Check the scheduled tournaments:\n`rocket-league1.p.rapidapi.com/tournaments/:region`",
    "list_of_games_for_cheapshark_game_deals": "Get a list of games that contain a given title or matches steamAppID. Response includes the cheapest current deal for each game.",
    "career_leaderboard_wz2_for_cod_api_2_0": "Get top career information for up to 2000 players on the leaderboard.",
    "get_card_by_slug_for_hearthstone": "get card information by slug",
    "get_cards_for_hearthstone": "get a list of all the cards available in hearthstone",
    "gulag_leaderboard_wz2_for_cod_api_2_0": "Get top gulag information for up to 2000 players on the leaderboard.",
    "get_stronghold_item_recipes_for_lost_ark_simple": "Get List of Lost Ark Stronghold Item Recipes",
    "get_vods_for_league_of_legends_esports": "In this api method you can get all previous event , match game information. You can search by tournaments id and you can get this value from the Get Tournaments For League endpoint.",
    "get_all_valuable_items_for_tibia_items": "This endpoint will get all Valuble item in our data base.",
    "get_imbuements_for_cloud_fabric_energy_protection_for_tibia_items": "This enpoint will get all imbuement for type Cloud Fabric\n\nCloud Fabric (Energy Protection)\nWyvern Talisman \nCrawler Head Plating \nWyrm Scale",
    "get_username_valorant_for_id_game_checker": "Enter the Valorant Riot ID and Tag in the required parameters",
    "filter_games_by_multiple_tags_for_mmo_games": "Filter Games by multiple tags for personalized results. Insert tag, eg: mmorpg, shooter, pvp, mmofps and more at [https://www.mmobomb.com/api ](url). Optionally you can also use the \"platform\" and \"sort\" parameters",
    "warzone_for_warzone_2": "Activision ID :",
    "items_by_tag_for_steam_store_api": "\ud83d\udc49 This is one of the most important endpoints. It returns games and other products based on the provided **TagID** . You can find the **TagID** by calling the **Tag list** endpoint from the **Tags** section. You can also specify which tab you're interested in by setting the appropriate **tab** value.",
    "dlc_details_for_steam_store_api": "Returns details of the selected DLC.",
    "get_imbuements_for_epiphany_magic_skillboost_for_tibia_items": "This enpoint will get all imbuement for type Epiphany\n\nEpiphany (Magic Skillboost)\nElvish Talisman \nBroken Shamanic Staff \nStrand of Medusa Hair",
    "totd_tracks_by_date_for_trackmania": "Get the TOTD tracks by date containing the year and month.",
    "apostaganha_aviator_latest_for_aposta_ganha_aviator_api": "Will retrieve the latest results from Aviator at Aposta Ganha.\n\n- The first result is the most recent\n- The last result is the oldest",
    "get_weapon_recipes_for_lost_ark_simple": "Get List of** Lost Ark** craftable Weapons.",
    "images_for_mcapi": "Retrieve item or block image (to be removed):\n\n- **name** is the name of the block or item (without minecraft;)\n- **width** is the desired width of the returned image\n- **height** is the desired height of the returned image",
    "get_abyssal_dungeons_for_lost_ark": "endpoint to get all abyssal dungeons",
    "get_username_free_fire_for_id_game_checker": "Enter your Free Fire ID  in the required parameters",
    "get_imbuements_for_strike_critical_damage_for_tibia_items": "This enpoint will get all imbuement for type Strike\n\nStrike (Critical Damage)\nProtective Charm \nSabretooth \nVexclaw Talon",
    "get_imbuements_for_void_mana_steal_for_tibia_items": "This enpoint will get all imbuement for type Void\n\nVoid (Mana Steal)\nRope Belt \nSilencer Claws \nSome Grimeleech Wings",
    "wins_leaderboard_mw2_for_cod_api_2_0": "Get top wins information for up to 2000 players on the MW 2 leaderboard.",
    "season_kills_leaderboard_wz2_for_cod_api_2_0": "Get season kills information for up to 2000 players on the leaderboard.",
    "games_list_for_mmo_games": "Live games list.",
    "get_imbuements_for_quara_scale_ice_protection_for_tibia_items": "This enpoint will get all imbuement for type Quara Scale\n\nQuara Scale (Ice Protection)\nWinter Wolf Fur \nThick Fur \nDeepling Warts",
    "regular_dice_rolls_for_dice_roll_simulator": "Roll any number of regular dice any number of times.",
    "user_profile_for_steam_community": "Get a full listing of data from a user profile. Friends, Groups, Steam Profile Level, and so much more.",
    "user_groups_list_for_steam_community": "Get a listing of all the public and private groups a user is apart of.",
    "wins_leaderboard_wz2_for_cod_api_2_0": "Get top wins information for up to 2000 players on the leaderboard.",
    "skill_rating_mw_2_ranked_for_cod_api_2_0": "Get top Skill Rating for top 250 players, MW 2 ranked Leaderboard",
    "season_skill_rating_mw_2_ranked_for_cod_api_2_0": "Get season Skill Rating for top 250 players, MW 2 ranked Leaderboard",
    "nadeo_players_for_trackmania": "Get Players from nadeo.",
    "matchmaking_matches_for_trackmania": "Get recent matchmaking matches.",
    "eventstreaks_for_esportapi": "Get streaks of a specific E-Sports event by providing its ID.",
    "leaguelogoimage_for_esportapi": "Get the league logo image in PNG format by providing the tournament ID.",
    "leagueseasons_for_esportapi": "Get the seasons of a specific E-Sports league by providing the tournament ID.",
    "dlc_list_for_steam_store_api": "Returns full DLC list for selected item.",
    "kills_leaderboard_mw2_for_cod_api_2_0": "Get top kills information for up to 2000 players on the MW 2 leaderboard.",
    "stat_for_rocket_league": "Check a player's stat:\n`rocket-league1.p.rapidapi.com/stat/:player/:stat`",
    "list_of_deals_for_cheapshark_game_deals": "Get a paged list of deals matching any number of criteria, all the filtering parameters are optional.\n\nThe deal object is what drives most of what you see on the site. They are price + metadata properties for games for a given store. All dealID\u2019s are encoded on the server. On your website/app, you will use the redirect page to link users to a specific deal:\n\n> https://www.cheapshark.com/redirect?dealID={id}\n\n**Important Note**: The redirect page is not an API endpoint and is not designed for automated access. It is purely a way to link your end users to deals.\n\nThe deal rating property provides a quick way to compare how 'good' a deal is. It is normalized on a scale from 0 to 10.",
    "season_gulag_leaderboard_wz2_for_cod_api_2_0": "Get season gulag information for up to 2000 players on the leaderboard.",
    "eventlineups_for_esportapi": "Get event lineups for a specific E-Sports event by providing the event ID.",
    "playerdetails_for_esportapi": "Get the details for a specific E-Sports player by providing the player ID.",
    "gamebans_for_esportapi": "Get game bans for a specific E-Sports game by providing the game ID.",
    "matchtvchanneldetails_for_esportapi": "Get the details of a specific TV channel broadcasting a specific Football match.",
    "eventvotes_for_esportapi": "Get votes of a specific E-Sports event by providing its ID.",
    "teamlastmatches_for_esportapi": "Get the last matches for a specific E-Sports team by providing the team ID and the page number.",
    "managerplaceholderimage_for_esportapi": "Get the manager placeholder image in PNG format.",
    "season_career_leaderboard_wz2_for_cod_api_2_0": "Get season career information for up to 2000 players on the leaderboard.",
    "phone_code_by_country_for_geosource_api": "Retrives a Phone code of the country.",
    "all_divisions_for_bdapi": "`/v1.0/divisions`\nGet all divisions of Bangladesh in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  division: string\n  divisionbn: string\n]\n```",
    "address_for_address_correction_and_geocoding": "Address",
    "facilities_lookup_for_ghana_api": "This endpoint allows you to get facilities in Ghana like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
    "measure_distance_for_ghana_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Kumasi to Accra**",
    "geocode_for_ghana_api": "This endpoint allows you to lookup locations in Ghana by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "get_language_for_countries": "This gets language data on a country. Use ISO2 for country_code.",
    "state_for_referential": "List the sub-regions/states/provinces/departments of the world's countries",
    "language_by_id_for_referential": "Find language by id translated into 20 languages",
    "ip_lookup_for_ip_to_location_v2": "Returns the IP address of the client with all the location data",
    "bd_upazila_for_bd": " ",
    "bd_division_for_bd": " ",
    "bd_district_for_bd": " ",
    "allcountries_for_rest_country_api": "Returns all countries and its details in single api request",
    "getbyuniqueid_for_rest_country_api": "Returns a single pet",
    "measure_distance_for_tanzania_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Arusha to Dar es Salaam**",
    "get_geo_for_countries": "This gets geo data on a country. Use ISO2 for country_code.",
    "get_continent_by_id_for_geography_v2": "get continent by id",
    "capital_by_country_for_geosource_api": "Retrives a value of the capital of the country.",
    "get_zip_info_for_us_zip_code_information": "This Endpoint returns the zip information",
    "facilities_lookup_for_nigeria_api": "This endpoint allows you to get facilities in Nigeria like hospital, bank, college, etc. by providing optional query parameters for facility type, state and city. It returns a list of facilities that match the query parameters.",
    "geocode_for_nigeria_api": "This endpoint allows you to lookup locations in Nigeria by providing an address query parameter. It returns the latitude, longitude and city name of the location.",
    "measure_distance_for_nigeria_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Lagos and Abuja**",
    "findallstates_for_india_pincode_api": "findallstates",
    "finddistrict_for_india_pincode_api": "finddistrict",
    "findbypincode_for_india_pincode_api": "\u201cFind By PinCode\u201d API is JSON API to query India Pincode.",
    "facilities_lookup_for_uganda_api": "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.",
    "measure_distance_for_uganda_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Nansana to Kampala**",
    "commune_par_nom_for_bps": "R\u00e9cup\u00e9rer une ou plusieurs communes gr\u00e2ce \u00e0 son nom. Perfect match ou partiel.",
    "localitiesdetails_for_woosmap": "Provides details of an autocomplete suggestion (using the suggestion\u2019s `public_id`).\n",
    "getzone_for_woosmap": "Used to retrieve a zone from his `zone_id`\n",
    "get_regions_for_world_country": "Get region list",
    "reverse_geocode_for_ghana_api": "This endpoint allows you to perform reverse geocoding in Ghana by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
    "directions_between_2_locations_for_nigeria_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Kaduna to Maiduguri**",
    "reverse_geocode_for_nigeria_api": "This endpoint allows you to perform reverse geocoding in Nigeria by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.",
    "statessearchinradius_for_mapreflex": "Get States boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com",
    "countiessearchinboundingbox_for_mapreflex": "Get Counties boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com",
    "storesearch_for_woosmap": "Used to retrieve assets from query\n",
    "localitiesautocomplete_for_woosmap": "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings. You can therefore send queries as the user types, to provide on-the-fly city names, postal codes or suburb name suggestions.\n",
    "states_by_country_for_geosource_api": "Retrives a list of all states of the country.",
    "bp_par_localite_for_bps": "Liste des BP par localit\u00e9 en Nouvelle Cal\u00e9donie",
    "ip_geolocation_lookup_for_ip_geolocation_lookup": "API returns location data such as country, region, city, zip, timezone, isp, asn and org and more",
    "currency_by_country_for_geosource_api": "Retrives a currecny and currency symbol of the country",
    "getstore_for_woosmap": "Used to retrieve an asset from his `storeId`\n",
    "communes_par_code_commune_for_bps": "R\u00e9cup\u00e9rer les d\u00e9tails d'une commune depuis son code.",
    "all_for_bps": "Liste des provinces de la Nouvelle Cal\u00e9donie",
    "get_for_ipstack": "exemple",
    "countiesbyids_for_mapreflex": "Get boundaries of given Counties (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com",
    "country_by_iso_code_for_referential": "Get country by 2 letter iso code localized to a given language",
    "transit_for_mymappi": "Calculates a route between an origin and a destination in public transport. It takes into consideration several configuration options in order to customize the response.",
    "highway_type_for_mymappi": "Given a coordinate, finds the nearest road and determines what type of road it is (motorway, path, primary... etc.)",
    "cities_for_referential": "List and search over 75,000 world cities in 20 languages.",
    "continents_for_referential": "List continents of the world localized to requested language",
    "storeautocomplete_for_woosmap": "Autocomplete on `localizedNames` with highlighted results on asset name. Use the field `localized` in your query parameter to search for localized names.\n",
    "addressdetails_for_woosmap": "Provides details of an address autocomplete suggestion (using the suggestion\u2019s `public_id`).\n",
    "state_by_id_for_referential": "Lookup sub-regions/states/provinces/departments by iso 3166-2 code",
    "languages_for_referential": "List the world's languages translated into 20 languages",
    "route_calculation_for_mymappi": "Calculates a route between an origin and a destination, possibly passing through many waypoints. It takes into consideration several configuration options in order to customize the response.",
    "validatetest_for_phonenumbervalidate": "Validate any phone number from any country. For testing purposes only.",
    "validate_for_phonenumbervalidate": "Validate any phone number from any country.",
    "profile_regional_settings_available_languages_for_smsapi_com": " ",
    "profile_prices_for_smsapi_com": " ",
    "ping_for_smsapi_com": " ",
    "subusers_id_for_smsapi_com": " ",
    "blacklist_phone_numbers_for_smsapi_com": " ",
    "search_locations_for_instagram_v2": "Location name search from keyword",
    "v1_search_live_for_tokapi_mobile_version": "Search live streams by text query",
    "v1_user_user_id_playlist_for_tokapi_mobile_version": "User playlists",
    "search_for_twitter_v2_v2": "Search",
    "search_pins_for_pinterest_scraper": "Search Pins",
    "get_followers_by_pk_for_instagram_api_v2": "Get lists of any public Instagram account followers via pk",
    "get_likers_list_app_by_shortcode_for_instagram_api_v2": "Get the list of people who has liked a post via shortcode and app method",
    "new_get_channel_followers_count_for_gwyo_twitch": "Get Channel Followers Count",
    "followers_for_twitter": "this returns followers based on twitter user id.\nyou can use cursor input for pagination.",
    "tweets_by_username_for_twitter": "this returns tweets based on twitter username.\nyou can use cursor input for pagination.",
    "post_count_for_hashtag": "Get the total post count for a given hashtag",
    "music_feed_video_posts_for_tiktok_data": "Get current music feed. \n\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
    "v1_search_hashtag_for_tokapi_mobile_version": "Search hashtags by text query",
    "v1_sticker_for_tokapi_mobile_version": "Effects information by IDs (look at stickers field in video response)",
    "get_media_info_by_url_for_instagram_looter": "Get **Instagram** media info by **/p/** - **/tv/** - **/reel/**",
    "music_id_by_url_for_tiktok_v3": "get music id by url",
    "post_comments_v2_for_instagram_data": "Get post comments V2 - more accurate data\n\n**NOTE:** Profile should be public(not private)",
    "user_stories_for_instagram_data": "Retrieve active user stories\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster",
    "user_information_metadata_by_user_id_for_instagram_data": "Get user information(followers, followings and etc) by using user id (numbers)",
    "userid_for_instagram_v13": "Get instagram user id by username",
    "user_guide_detail_for_instagram_v13": "Get instagram user guide detail by guide id.",
    "user_following_for_instagram_v13": "Get instagram user following by user id.",
    "v1_1_user_following_for_twitter_v4": "v1.1 / User Following",
    "v1_1_users_for_twitter_v4": "v1.1 / Users",
    "comments_by_video_id_for_tiktok_solutions": "Get **Comments** of **Video **by **ID**",
    "tweet_retweeters_for_twitter_v2": "Get Tweet Retweeters",
    "user_tweets_replies_by_rest_id_for_twitter_v2": "Get User Tweets & Replies By Rest ID",
    "lists_details_for_twitter_v2": "This endpoint returns the public information a Twitter Lists",
    "get_user_post_video_for_tiktok_video_no_watermark_v2": "Get user post video",
    "user_by_username_for_instagram_api": "Get a user by username",
    "story_by_url_for_instagram_api": "Gets a story by URL",
    "user_tweets_replies_for_twitter_v2_v2": "User Tweets & Replies",
    "hashtag_data_by_name_for_tiktok_solutions": "Get Hashtag Data by using Name of Hashtag",
    "video_data_by_url_for_tiktok_solutions": "Get Video Data by U",
    "user_tweets_for_twitter_v4": "User Tweets",
    "v2_user_followers_for_twitter_v4": "v2 / User Followers",
    "v1_1_user_favorites_for_twitter_v4": "v1.1 / User Favorites",
    "no_cors_hd_profile_photo_for_instagram_api_2023": "Fetch no CORS HD profile picture of a Instagram user. \nNo CORS image urls will expire after 30 days from date of creation.\n\nAlong with original no CORS image, you will get thumbnail & display_url for the same.",
    "get_public_contact_details_by_user_id_for_instagram_api_2023": "Get public contact details such as phone number, email, address, etc of an Instagram user using user_id",
    "lists_tweets_for_twitter_v2": "This endpoint return a list of tweets in a given Twitter list",
    "get_authenticated_users_contributions_for_geeklist": "",
    "get_popular_links_for_geeklist": "",
    "v1_post_for_tokapi_mobile_version": "Video by web URL, can be vm.tiktok.com or tiktok.com",
    "reels_by_music_id_for_instagram_bulk_profile_scrapper": "Instagram reels music by id\n\nYou can use nextMaxId to fetch next page",
    "followers_by_pk_for_instagram_bulk_profile_scrapper": "Fetch followers list\n\nCarry forward nextMaxId to retrieve next batch",
    "trending_creators_for_tiktok_private": "Get Trending By Creators",
    "video_comments_for_youtube_v2": "This endpoint returns a list comments under a given Youtube video",
    "media_by_id_for_instagram_api": "Get a media by Id",
    "user_feed_video_posts_v2_for_social_media_data_tt": "Get user feed V2\n\nV2 - returns more data then older version of the endpoint",
    "music_metadata_for_social_media_data_tt": "Get music metadata\n\nBasic metadata: number of posts,  direct url to the song(MP3) and etc",
    "autocomplete_for_twitter_aio": "Use autocomplete to get suggestions for your search term. This can be events, users or topics. You can specify the type in the request.",
    "top_search_for_tiktok_private": "Top Search: videos, hashtags, sounds, users",
    "video_comment_replies_for_tiktok_v3": "get video comment replies",
    "get_id_for_instagram_profile": "Basic profile information",
    "download_video_without_watermark_for_tiktok_v3": "Download Video Without Watermark",
    "get_post_by_shortcode_for_instagram_bulk_profile_scrapper": "**Contact me for Custom package or requirements**\n\nFetch Instagram post/feed from shortcode",
    "feeds_by_secuid_for_tiktok_v2": "Fetch feeds from secUid\n\nYou can get secUid from Profile api",
    "music_by_id_for_tiktok_v2": "This ID you can extract from TikToc music url",
    "feeds_for_tiktok_v2": "Fetch TikToc user recent feeds by username",
    "feed_for_kwai": "Feed API",
    "search_users_for_kwai": "Search Users API",
    "v1_user_username_for_tokapi_mobile_version": "User information by username",
    "users_by_rest_ids_for_twitter_v4": "Users By Rest IDs",
    "get_related_video_with_keywords_for_tiktok_video_feature_summary": "get related video  list with list",
    "get_users_video_for_tiktok_video_feature_summary": "get user post videos\nget user feed\nunique_id or user_id is not empty",
    "get_user_follower_list_for_tiktok_video_feature_summary": "get user follower list",
    "search_hashtags_for_instagram_api_2023": "Search hashtags using string. You can use any language as string for ex. \ubbfc\uc9c0.",
    "user_by_keyword_for_tiktok_solutions": "Get** Search of Users **by **Keyword**",
    "general_trending_for_tiktok_solutions": "**Trending videos** General",
    "hashtag_reels_feed_for_instagram_data": "Get hashtag reels feed",
    "user_contact_details_email_phone_and_etc_for_instagram_data": "Get user contact details such as email, phone and etc\n\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster\n**NOTE: the output will include email, phone only IF THESE DATA IS AVAILABLE in IG**",
    "similar_users_for_instagram_v5": "Get similar Instagram users by Instagram user id.",
    "search_location_for_instagram_v5": "Get Instagram locations by keyword.",
    "user_live_broadcast_for_instagram_v5": "Get Instagram user live broadcast by Instagram user id.",
    "for_you_timeline_for_twttrapi": "Get the \"For You\" timeline",
    "search_users_for_twttrapi": "Search users",
    "popular_posts_for_reddit": "Popular Posts",
    "user_likes_for_twitter_v2": "Get User Likes",
    "user_id_by_username_for_twitter": "this returns twitter user id based on twitter username.",
    "list_of_language_codes_for_search_for_twitter": "this endpoint gives a list of language codes required for \"getSearch\" endpoint",
    "authenticated_users_data_for_geeklist": "",
    "get_authenticated_users_cards_for_geeklist": "",
    "specified_users_data_for_geeklist": "",
    "get_comments_by_media_id_for_instagram_api_2023": "Get comments of post/reel/igtv/etc using media_id",
    "search_music_audio_for_instagram_api_2023": "Search music using string. You can use any language as string.",
    "tweet_detail_conversation_for_twitter_v4": "Tweet Detail & Conversation",
    "v2_users_by_rest_ids_for_twitter_v4": "v2 / Users By Rest IDs",
    "user_tweets_replies_for_twitter_v4": "User Tweets & Replies",
    "user_by_rest_id_for_twitter_v4": "User By Rest ID",
    "v1_1_user_timeline_for_twitter_v4": "v1.1 / User Timeline",
    "tweet_favoriters_for_twitter_v4": "Tweet Favoriters",
    "search_music_for_kwai": "Search Music API",
    "user_recommend_for_kwai": "User Recommend API",
    "get_user_for_scraptik": "Get user by id.",
    "list_followers_for_scraptik": "Get list of followers by user id.",
    "search_lives_for_scraptik": "Search live streams",
    "profile_for_tiktok_v2": "Get T-tok Profile Data",
    "v1_location_location_id_for_tokapi_mobile_version": "Get location info by ID",
    "v1_user_username_username_for_tokapi_mobile_version": "Get user identifiers by username",
    "top_music_for_kwai": "Top Music API",
    "comment_list_by_video_for_tiktok_video_feature_summary": "get comment list by video",
    "search_users_data_for_tiktok_video_feature_summary": "get users data list by keywords",
    "send_sms_code_for_kwai": "Send SMS Code API",
    "get_dm_conversation_for_twttrapi": "Get single conversation messages",
    "top_posts_by_username_for_reddit": "Top Posts By Username",
    "user_feed_by_id_for_tiktok_solutions": "Get **User Feed** by** ID**",
    "get_user_likes_for_twitter_v5": "Get User Likes By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint",
    "v1_1_translate_profile_for_twitter_v4": "v1.1 / Translate Profile",
    "user_likes_for_twitter_v4": "User Likes",
    "v2_user_by_screen_name_for_twitter_v4": "v2 / User By Screen Name",
    "user_following_for_twttrapi": "Get user following",
    "mass_messages_for_onlyfans": "Used to get the last 100 mass messages\n\nMust hit the auth endpoint first!",
    "get_reel_by_shortcode_for_instagram_api_2023": "Get reel info by shortcode.",
    "username_to_user_id_for_instagram_api_2023": "Fetch User Id & other details by using Instagram username",
    "videos_by_music_for_tiktok_v3": "get videos by music_id",
    "get_followers_by_username_for_instagram_profile": "Get 12 followers user information per request.",
    "get_detail_post_for_instagram_profile": "Detail post information from shortcode",
    "get_followers_by_id_for_instagram_profile": "Get 12 followers user information per request",
    "post_metadata_for_instagram_data": "Get post metadata\n\n**NOTE:** Profile should be public(not private)",
    "get_stream_mature_content_status_for_gwyo_twitch": "Get Stream Mature Content Status (using username or id)\n( return an empty JSON object if not currently LIVE )",
    "get_authenticated_users_connections_for_geeklist": "",
    "get_story_by_username_for_instagram_bulk_profile_scrapper": "Fetch Instagram stories from username",
    "location_search_for_instagram_bulk_profile_scrapper": "Location search on Instagram",
    "tagged_posts_for_instagram_bulk_profile_scrapper": "Instagram Users Tagged posts",
    "check_usernames_on_all_platforms_for_check_username": "Check if a username is available on all platforms at once!\ntrue if available, false if not",
    "steam_for_check_username": "Check username on Steam",
    "behence_for_check_username": "Check username on Behence",
    "twitch_for_check_username": "Check username on Twitch",
    "dev_to_for_check_username": "Check username on Dev.to",
    "get_music_for_tiktok_private": "Get Music",
    "get_feed_for_instagram_profile": "Get user feed with username, use ?next={result.page_info.next} for next page",
    "get_search_keyword_for_instagram_profile": "Return search by keyword will return hashtag & places",
    "get_profile_for_instagram_profile": "Detail profile information",
    "get_user_followers_by_user_id_for_instagram_api_2023": "Get followers of an Instagram user using user_id.",
    "get_user_posts_by_user_id_for_instagram_api_2023": "Get posts of an Instagram user using user_id.",
    "get_comments_of_media_by_shortcode_for_instagram_api_2023": "Get comments of post/reel/igtv/etc using shortcode",
    "get_followings_by_username_for_instagram_api_v2": "Get lists of any public Instagram account followings via pk",
    "getprofile_for_snapchat": "getProfile",
    "post_details_for_reddit": "Post Details",
    "video_post_comments_for_social_media_data_tt": "Get video post comments.",
    "user_tweets_for_twttrapi": "Get user's tweets",
    "get_likers_for_instagram_profile": "Detail post likers information",
    "trending_feed_video_posts_v2_for_social_media_data_tt": "Get trending feed V2. \n\nV2 - returns more data then older version of the endpoint, video without watermark and etc\n\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
    "dockerhub_for_check_username": "Check username on Dockerhub",
    "search_for_twitter_v2": "This endpoint return search results",
    "music_info_for_tiktok_v4": "Get Music Information By \"music_id\",\nand the endpoint will return the Music's Information.  //Notice: it will not return the music posts",
    "user_posts_for_tiktok_v4": "Get User Posts by 'user_id',\nand the endpoint will return 30 posts by cursor.",
    "v1_search_post_for_tokapi_mobile_version": "Search videos by text query",
    "tweet_favoriters_for_twitter_v2": "Get Tweet Favoriters",
    "twitter_hashtag_emojis_for_twitter_aio": "Receive a full list of all twitter custom emojis with the hashtag, image and more.",
    "tweets_and_replies_by_userid_for_twitter_aio": "Receive all tweets and replies ordered by most recent. You can use the cursor and count to navigate around.",
    "get_video_without_the_watermark_for_tiktok_data": "Get direct post url to the video without watermark",
    "org_for_check_username": "Check if .org domain is registered",
    "etsy_for_check_username": "Check username on Etsy",
    "askfm_for_check_username": "Check username on Ask.fm",
    "live_broadcast_info_for_instagram_v5": "Get Instagram live broadcast info by Instagram broadcas id.",
    "check_unique_id_for_scraptik": "Check unique id if exist",
    "create_a_live_stream_for_scraptik": "Create a new live stream.",
    "all_activity_for_scraptik": "Show \"All Activity\" account notifications.",
    "post_likers_for_instagram_data": "Get users that liked specific post\n\n**NOTE:** Profile should be public(not private)",
    "audio_feed_for_instagram_data": "Get audio post feed",
    "search_hashtag_for_instagram_api_v2": "Search any hashtag on instagram",
    "hashtag_feed_v2_for_instagram_data": "Get hashtag post feed V2",
    "get_post_for_kwai": "Get Post API",
    "search_trending_for_kwai": "Search Trending API",
    "search_among_followers_by_username_for_instagram_api_v2": "search any query in an Instagram account followers when you have the username, it can be one part or the whole username or full name",
    "get_comments_list_by_shortcode_for_instagram_api_v2": "Get comments list via shortcode. you can get more data using minid. The response will include this part:\n\"nextminid\": \"{\"servercursor\": \"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\", \"isservercursorinverse\": true}\"\nand the minid will be:\n\"QVFEdjNRSEU5SFY4SzR5TE00MV9ISmh6STZfV1dwcnBxbGlPYlhuZTl3T3lvVW4zYVNETXc0YWVHSnJQTHNKR25ncXE1RFdCT2MzTEhTVWpGMTBBNlhIaw==\"",
    "search_suggestions_for_twttrapi": "Search suggestions",
    "searchfollowers_for_instagram_v6": "search someone's followers",
    "followers_for_instagram_v6": "get someone's followers",
    "search_mix_for_kwai": "Search Mix API",
    "user_following_for_kwai": "User Following API",
    "get_channel_description_for_gwyo_twitch": "Get Channel Description (using username or id)",
    "getchanneldetails_for_youtube_search_v3": "Fetch detailed information and insights about a specific YouTube channel",
    "states_details_for_city_and_state_search_api": "This endpoint allows you to retrieve detailed information about a specific state by ID",
    "search_for_city_and_state_search_api": "This endpoint allows you to search for locations (cities, states, or countries) by name. It returns a list of locations that match the specified search query.",
    "cities_search_for_city_and_state_search_api": "This endpoint allows you to search for specific cities by name. It returns a list of cities that match the specified search query.",
    "countries_search_for_city_and_state_search_api": "This endpoint allows you to search for specific countries by name. It returns a list of countries that match the specified search query.",
    "states_search_for_city_and_state_search_api": "This endpoint allows you to search for specific states by name. It returns a list of states that match the specified search query. You can also set country code or country name to search states in that country only.",
    "states_list_for_city_and_state_search_api": "This endpoint returns a list of States .It returns basic information about each state, such as name, code, and country. You can also use this endpoint to retrieve a list of states filtered by various criteria such as country.",
    "city_details_for_city_and_state_search_api": "This endpoint allows you to retrieve detailed information about a specific city by ID",
    "country_details_for_city_and_state_search_api": "This endpoint allows you to retrieve detailed information about a specific country by ID or his name.",
    "web_search_api_for_bing_search_apis": "Search data and suggested keywords from Bing search engine.",
    "images_search_for_bing_search_apis": "Search images from the search engine for the most relevant keywords and images related to keywords and images.",
    "emails_search_for_bing_search_apis": "Search emails from search engines for related keywords.",
    "search_for_superhero_search": "This endpoint searches through our superhero database",
    "villains_for_superhero_search": "Return 20 random Villains",
    "heroes_for_superhero_search": "Return a list of 20 random heroes",
    "vehicle_ownership_cost_by_license_plate_for_vehicle_ownership_cost": "Vehicle Ownership Cost by License Plate",
    "vehicle_ownership_cost_by_vins_for_vehicle_ownership_cost": "Vehicle Ownership Cost by VINs",
    "searchchannel_for_youtube_search_v3": "Efficiently search for specific videos or playlists within a channel",
    "links_finder_for_explorarc_s_link_finder": "ExplorArc's Link Finder API simplifies the process of finding relevant links by returning results based on a given query. With this powerful tool, users can easily access the information they need to streamline their workflow and achieve their goals",
    "nftsearch_for_nft_explorer": "Get NFTs that match a given metadata search in all widely used networks",
    "license_plate_lookup_for_license_plate_lookup": "License Plate Lookup",
    "2_get_account_information_for_rewards_as_a_service": "Get the information for an account created under a Customer",
    "7_get_order_history_for_rewards_as_a_service": "Get more information about all the orders placed on this customer and account",
    "4_get_list_of_rewards_for_rewards_as_a_service": "Gets the list of rewards available for the platform",
    "kitten_for_kitten_placeholder": "Fetches random kitten image!",
    "cat_for_kitten_placeholder": "Fetches a random cat picture.",
    "view_simulation_for_geolocation_simulation_for_mobile_apps": "Enter simulationID in route",
    "get_variables_variable_id_values_for_ubidots": "This resource returns the values of the specified variable.  Every value will have a timestamp which is a value in milliseconds according to the POSIX standard.",
    "get_weak_keys_for_iotvas": " ",
    "get_expired_certs_for_iotvas": " ",
    "get_weak_certs_for_iotvas": " ",
    "airports_nonstop_and_direct_routes_for_an_airport_for_timetable_lookup_": "Returns a list of nonstop and direct routes for an airport",
    "airports_airports_in_a_metro_for_timetable_lookup_": "Returns a list of airports in a metro",
    "codes_equipment_codes_for_timetable_lookup_": "Return a list of equipment codes used by the airlines",
    "get_airline_alliance_list_for_travel_hacking_tool": "This endpoint returns a list of airline alliances.",
    "us_ky_for_us_gas_prices": "Returns current gas price data for Kentucky. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_ga_for_us_gas_prices": "Returns current gas price data for Georgia. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "live_emergency_aircraft_for_fachaapi": "Get live emergency aircraft (Squawk 7500/7600/7700)",
    "live_aircraft_by_icao_for_fachaapi": "Get live positioning for an aircraft with a specific ICAO HEX Code",
    "us_mn_for_us_gas_prices": "Returns current gas price data for Minnesota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_nm_for_us_gas_prices": "Returns current gas price data for New Mexico. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_ia_for_us_gas_prices": "Returns current gas price data for Iowa. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "get_airport_details_for_travel_hacking_tool": "This endpoint returns the details such as name and location for a specified IATA airport.",
    "get_stands_mrt_train_no_wagons_wagon_no_standrows_standrows_no_seats_get_for_aqls_b2c_system": " ",
    "state_for_canadian_gas_prices": "Endpoint to provide average gas price of a given American State.",
    "airlines_list_for_flight_radar": "List all airlines around the world",
    "airlines_get_logos_for_flight_radar": "Get logos of airlines",
    "us_ct_for_us_gas_prices": "Returns current gas price data for Connecticut. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_in_for_us_gas_prices": "Returns current gas price data for Indiana. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_dc_for_us_gas_prices": "Returns current gas price data for Washington D.C. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "airports_country_iata_codes_for_timetable_lookup_": "Returns a list of country IATA codes",
    "states_for_canadian_gas_prices": "Returns the average price of gas in all American states.",
    "airports_direct_routes_for_an_airport_by_airline_for_timetable_lookup_": "Returns a list of direct routes for an airport restricted to an airline",
    "airports_latitude_and_longitude_for_location_in_country_for_timetable_lookup_": "Returns the latitude and longitude for location in country",
    "us_wi_for_us_gas_prices": "Returns current gas price data for Wisconsin. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_il_for_us_gas_prices": "Returns current gas price data for Illinois. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_md_for_us_gas_prices": "Returns current gas price data for Maryland. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "airports_metro_iata_codes_for_timetable_lookup_": "Returns a list of metro IATA codes",
    "airports_airport_information_for_timetable_lookup_": "Return an airport's information",
    "get_wagon_data_mrt_wagons_id_id_get_for_aqls_b2c_system": " ",
    "airports_airports_in_a_country_for_timetable_lookup_": "Returns a list of airports in a country",
    "airlines_direct_flights_for_an_airline_from_an_airport_for_timetable_lookup_": "Return a list of direct flights for an airline from an airport",
    "us_ar_for_us_gas_prices": "Returns current gas price data for Arkansas. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_nd_for_us_gas_prices": "Returns current gas price data for North Dakota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_mo_for_us_gas_prices": "Returns current gas price data for Missouri. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "province_list_for_canadian_gas_prices": "Returns list of valid provinces for this API.",
    "aircrafts_list_for_flight_radar": "List available aircrafts",
    "live_nato_air_policing_aircraft_for_fachaapi": "Get live military aircraft squaking NATO Air Policing / QRA (Squawk 1301-1327)",
    "flights_list_in_boundary_for_flight_radar": "Helps to list flights, aircrafts in a GEO bounding box, and display them on a map",
    "us_nj_for_us_gas_prices": "Returns current gas price data for New Jersey. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_mi_for_us_gas_prices": "Returns current gas price data for Michigan. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_sd_for_us_gas_prices": "Returns current gas price data for South Dakota. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "build_for_odam": "Building a database and indexing it, allows to accelerate considerably the response times on large files\n",
    "get_token_price_history_between_dates_for_uniblock": "Gets the price chart of a token between two dates in USD.",
    "get_block_info_with_transactions_for_uniblock": "Gets a block with transactions of a given block number",
    "create_wallet_for_uniblock": "Creates and gets a new wallet with a random private key, generated from cryptographically secure entropy sources.",
    "guest_permissions_for_clickmeter": "A list of permission that guest have",
    "downloadfile_for_groupdocs_conversion_cloud": " ",
    "list_domains_for_clickmeter": "List domains to which is possible to register a datapoint",
    "get_aggregated_counts_with_daily_breakdown_for_clickmeter": "Get aggregated counts with daily breakdown",
    "tags_count_for_clickmeter": "Get a count of the tags. You can use the same filters of \"/tags\"",
    "getassignmenttimephaseddata_for_aspose_tasks_cloud": " ",
    "brawl_stars_for_jak_api": "Get the JSON formated file containing details about Brawl Stars!!",
    "generate_mnemonic_for_uniblock": "Generates a random mnemonic, defaults to 128-bits of entropy",
    "get_approval_for_nft_transfer_for_uniblock": "Determines whether or not a spender address can transfer the NFTs of an owner address.",
    "get_allowance_for_uniblock": "Gets the token allowance limit of a spender for tokens owned by another address.",
    "getfileversions_for_groupdocs_merger_cloud": " ",
    "getdocumentscreenannotations_for_aspose_pdf_cloud": " ",
    "getpdfinstoragetoepub_for_aspose_pdf_cloud": " ",
    "getdiscusage_for_aspose_pdf_cloud": " ",
    "get_transaction_by_hash_for_uniblock": "Gets transaction information of a given hash",
    "format_ether_for_uniblock": "Gets a string representation of a given value in terms of ether.",
    "getcode_relatedcontracts_for_flow_study": " ",
    "list_datapoints_for_clickmeter": "List of all the datapoints associated to the user",
    "hit_list_for_clickmeter": "A detailed hits list for the last 90 days maximum",
    "getproductbyid_for_13": "Retrieves an product",
    "getcategorybyid_for_13": "Retrieves an category",
    "printerlist_for_13": "Retrieves all the printers",
    "getpetbyid_for_platformbil": "Returns a single pet",
    "indopak_text_for_quran_com": "Get Indopak script of ayah. Use query strings to filter results, leave all query string blank if you want to fetch Indopak script of whole Quran.",
    "ayah_recitations_for_quran_com": "Get list of ayah recitations for a Hizb.",
    "reciters_for_quran_com": "Get list of reciters",
    "getorderbyid_for_13": "Retrieves an order",
    "categorylist_for_13": "Retrieves all category",
    "orderlist_for_13": "Retrieves up to 50 orders",
    "storageexists_for_groupdocs_watermark_cloud": " ",
    "loginuser_for_erictestpet": "",
    "root_for_pragmavantapi": "Root resource",
    "getaccountbyid_for_13": "Retrieves an account",
    "getfileversions_for_groupdocs_translation_cloud": " ",
    "downloadfilewithformat_for_aspose_diagram_cloud": " ",
    "getdiscusage_for_aspose_diagram_cloud": " ",
    "evaluaciones_2_for_colegiosantaana": "Evaluaciones alumnos 2",
    "inasistencias_2_for_colegiosantaana": "Inasistencia de alumnos 2",
    "plan_detail_for_clickmeter": "Get detail of the plan used by this account. Valid only for MASTER key.",
    "getfileslist_for_aspose_tasks_cloud": " ",
    "web_snapshot_for_pragmavantapi": "Get webpage snapshot as image",
    "click_stream_for_clickmeter": "Return the clickstream for the desired object.",
    "get_group_by_id_for_clickmeter": "Get group by id",
    "recitation_style_for_quran_com": "Get the available recitation styles.",
    "glyph_codes_qcf_v2_font_for_quran_com": "Get glyph codes of ayah for QCF v2 font",
    "recitations_by_id_for_quran_com": "Get list of reciters for a single recitaiton. See reciters endpoint to fetch available recitations.\n\nYou can also include more fields of audio files using `fields` query string.",
    "groups_count_for_clickmeter": "Groups count",
    "list_domains_whitelist_for_clickmeter": "List domains whitelist",
    "daily_phrase_for_horoscope_astrology": "Get a daily phrase",
    "get_categories_36a9b66a_641f_4969_a849_36119ad674a3_for_the_south_asian_express": "List categories",
    "get_types_id_523e7700_867d_45a5_8362_f7d4818f6bc9_for_the_south_asian_express": "Get Single Type",
    "get_pages_id_04cce496_738c_44ef_9faf_4d42e99c642b_for_the_south_asian_express": "Get Single Page",
    "get_types_852347ee_35c5_44fb_8548_1bee078d2350_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.",
    "get_a_full_list_of_datapoints_with_statistics_for_clickmeter": "Get a full list of datapoints with statistics, based on filters",
    "get_media_8125bc02_6037_4c8c_8102_2297920726f0_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.",
    "getdocumentmetadata_for_groupdocs_conversion_cloud": " ",
    "get_all_artistic_directors_for_a_specific_country_for_hautecouture_api": "Renders  all artistic directors for a specific country",
    "get_transactions_for_user_for_uniblock": "Gets transaction records for a specified user.",
    "get_current_price_for_uniblock": "Gets the current price of a token in USD.",
    "get_aggregated_counts_on_customer_for_clickmeter": "Get aggregated counts on customer",
    "get_materials_v1_for_shapeways": "",
    "get_a_random_artistic_director_for_hautecouture_api": "Renders a random artistic director",
    "getpagelinkannotation_for_aspose_pdf_cloud": " ",
    "getpagetext_for_aspose_pdf_cloud": " ",
    "getmhtinstoragetopdf_for_aspose_pdf_cloud": " ",
    "getpages_for_aspose_diagram_cloud": " ",
    "productlist_for_13": "Retrieves up to 50 products",
    "getreportpdf_for_aspose_tasks_cloud": " ",
    "getextendedattributes_for_aspose_tasks_cloud": " ",
    "getprojectlist_for_aspose_tasks_cloud": " ",
    "get_models_modelid_v1_for_shapeways": "",
    "get_printers_printerid_v1_for_shapeways": "",
    "get_block_info_for_uniblock": "Gets the block of a given block number",
    "get_total_supply_for_uniblock": "Gets the total supply of an ERC-20 or ERC-721 token.",
    "languages_for_quran_com": "Get all languages. You can get translated names of languages in specific language using `language` query parameter. For example\n\n  ```\n  /resources/languages?language=ur\n  ```\n\nwill return language names translated into Urdu",
    "check_for_odam": "Made automatically many test checks and return a list several status about the dataset implementation\n",
    "get_all_draws_results_for_euro_millions": "Get the results of all draws in history of EuroMillions since 2004",
    "games_for_jet_set_radio_api": "Returns a list of all Games",
    "get_random_20_questions_by_difficulty_for_ase_s_quiz_api": "Get random 20 questions by difficulty",
    "cards_by_class_for_hearthstone": "Returns all the cards of a class. Example values: Mage, Paladin.",
    "get_random_100_questions_for_ase_s_quiz_api": "Get random 100 questions",
    "jsr_characters_for_jet_set_radio_api": "Returns a list of all JSR Characters",
    "cards_by_type_for_hearthstone": "Returns all the cards of a certain type. Example values: Spell, Weapon.",
    "optifineversionlist_for_minecraft_forge_optifine": "Get Optifine version list.",
    "get_riddle_of_the_day_for_riddlie_": "With this endpoint, you can request a riddle of the day. Each day API will serve a different riddle with an answer and other details.",
    "all_cards_for_hearthstone": "Returns all available Hearthstone cards including non collectible cards.",
    "get_jokes_by_specific_category_for_world_of_jokes": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.",
    "originals_titles_get_info_for_webtoon": "Get comic information\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "originals_titles_get_recommend_for_webtoon": "Get similar comics\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "novels_page_for_web_novel_api": "Returns the requested Novel Catalog Page.",
    "search_videos_channels_playlists_for_youtube_search_and_download": "Search any youtube content with all available filters",
    "originals_episodes_list_for_webtoon": "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "title_cast_crew_for_watchmode": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.",
    "sources_for_watchmode": "Return a listing of all streaming sources that Watchmode supports. Optionally filter by type of source (subscription, free, etc).",
    "get_novel_by_id_for_anime_manga_and_novels_api": "Get Novel By Id.",
    "title_episodes_for_watchmode": "Return all of the episodes for a TV series or mini-series, as well as the streaming sources each episode is available on.",
    "video_related_contents_for_youtube_data": "video-related-contents",
    "video_comments_for_youtube_data": "video-comments",
    "canvas_episodes_get_likes_for_webtoon": "Get likes count of a episode",
    "canvas_episodes_list_for_webtoon": "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "random_quickpick_for_play_for_lotto_america": "Get a randomized Quick Pick for Lotto America. This is a random set of playable Powerball numbers",
    "originals_episodes_get_info_for_webtoon": "Get episode and photo links\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "originals_genres_list_for_webtoon": "List genres in originals category",
    "originals_titles_list_by_rank_for_webtoon": "List comics in originals category by ranking\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images",
    "novels_for_web_novel_api": "Returns the amount of pages in the Novel Catalog.",
    "channel_channels_for_youtube_data": "channel-channels",
    "single_card_for_hearthstone": "Returns card by name or ID. This may return more then one card if they share the same name. Loatheb returns both the card and the boss.",
    "flag_riddle_for_riddlie_": "With this endpoint, you can flag a riddle. This helps the API developer to finetune the API for better service in the future.  You can only use four flags sending the number corresponding to the flag type as below:\n\n0: for flagging the riddle as \"Duplicate\"\n1: for flagging the riddle as \"Inappropriate\"\n2: for flagging the riddle as \"Not a Riddle\"\n3: for flagging the riddle as \"Missing Information\"",
    "regions_for_watchmode": "Return a listing of all regions (countries) that Watchmode currently supports and their 2 letter country codes used in the return data of other endpoints.",
    "card_set_for_hearthstone": "Returns all cards in a set. Example values: Blackrock Mountain, Classic.",
    "downloadminecraftjson_for_minecraft_forge_optifine": "Redirect to download Minecraft .json file.",
    "streaming_release_dates_for_watchmode": "Get a listing of recently released or coming soon releases on the major streaming services. Only major services and US releases dates included, however most of the major services (Netflix, Hulu, etc) release original content on the same days in all countries they support. We return is_original field to indicate wheter the title is an original release on that streaming service.",
    "downloadminecraftjar_for_minecraft_forge_optifine": "Redirect to download Minecraft .jar file.",
    "characters_for_jet_set_radio_api": "Returns a list of all Characters",
    "titles_with_changed_episodes_for_watchmode": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.",
    "search_for_watchmode": "Search for titles or people using an external ID (IMDB, TheMovieDB.org), or by name. Returns an array of results objects, that can either be a title or a person. Useful for getting the Watchmode IDs for titles and people. For example, you can set the parameters to search_value=Breaking%20Bad and search_field=name to get all of the titles named \"Breaking bad\", and then use the IDs returned in other endpoints such as /v1/title/",
    "red_colour_qr_code_generator_for_image_qr_code_generator": "Generate the QR code for anything you want.",
    "7_getlistofpayments_for_nowpayments": "Returns the entire list of all transactions, created with certain API key.\nThe list of optional parameters:\n- limit - number of records in one page. (possible values: from 1 to 500)\n- page - the page number you want to get (possible values: from 0 to **page count - 1**)\n- sortBy - sort the received list by a paramenter. Set to **created_at** by default (possible values: payment_id, payment_status, pay_address, price_amount, price_currency, pay_amount, actually_paid, pay_currency, order_id, order_description, purchase_id, outcome_amount, outcome_currency)\n- orderBy - display the list in ascending or descending order. Set to **asc** by default (possible values: asc, desc)\n- dateFrom - select the displayed period start date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ).\n- dateTo - select the displayed period end date (date format: YYYY-MM-DD or yy-MM-ddTHH:mm:ss.SSSZ).",
    "getallaccounts_for_virtual_accounts_api": "To get all virtual accounts in your organisation.",
    "6_gettheminimumpaymentamount_for_nowpayments": "Get the minimum payment amount for a specific pair.\n\nYou can provide both currencies in the pair or just currency_from, and we will calculate the minimum payment amount for currency_from and currency which you have specified as the outcome in the Store Settings.\n\nIn the case of several outcome wallets we will calculate the minimum amount in the same way we route your payment to a specific wallet.",
    "3_getestimatedprice_for_nowpayments": "This is a method for calculating the approximate price in cryptocurrency for a given value in Fiat currency. You will need to provide the initial cost in the Fiat currency (amount, currency_from) and the necessary cryptocurrency (currency_to)\nCurrently following fiat currencies are available: usd, eur, nzd, brl, gbp.",
    "findvenueorganisation_for_testing_v3": " ",
    "findproduct_for_testing_v3": " ",
    "finduserlocation_for_testing_v3": " Find UserLocation",
    "recipe_search_and_recommendations_for_recipe_search_and_diet": "Search 2 million recipes using keywords, 28 nutrients and 40 diet and health filters",
    "filter_calories_for_keto_diet": "Gives keto recipes within given range of calories.\ncalories__lt = Less than\ncalories__gt = Greater than",
    "all_keto_recipes_by_category_for_keto_diet": "Gives all keto recipes by category ID.",
    "filter_protein_for_keto_diet": "Gives keto recipes within given range of protein value.\nprotein_in_grams__lt = Less than\nprotein_in_grams__gt = Greater than",
    "venuedetail_for_testing_v3": "A **multi-language** api\r\n\r\nGet venue details using KV (need resync to get latest data) and filter dynamic multi language data based on query params (eg. ?lang=zh-hans)",
    "findoneuseractivity_for_testing_v3": " FindOne UserActivity",
    "findvenuecategories_for_testing_v3": " ",
    "findcountries_for_testing_v3": " ",
    "findonevenue_for_testing_v3": " FindOne Venue",
    "reviews_get_stat_for_the_fork_the_spoon": "Get review stat of specific restaurant",
    "reviews_list_best_for_the_fork_the_spoon": "List all best reviews of specific restaurant by diners",
    "salad_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random salad recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.",
    "keto_recipes_by_difficulty_for_keto_diet": "Gives all keto recipes by its difficulty (Easy, Medium or Difficult).",
    "locations_v2_list_for_the_fork_the_spoon": "List relating locations by Google place id",
    "categories_for_keto_diet": "Lists all available categories of keto recipe.",
    "restaurants_get_info_deprecated_for_the_fork_the_spoon": "Get all available information of specific restaurant",
    "niederschlag_for_ecoweather": "Beantwortet die Frage, wie viel Niederschlag innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Dimensionierung von Regenwassernutzung (Zisterne) oder bei der Planung von G\u00e4rten .",
    "product_by_id_for_aliexpress_true_api": "Get entirely a single product and all possible values comes from it including images, videos and all product data.",
    "hot_products_for_aliexpress_true_api": "Get hot products by search value, you can set maximum search price too. You will get up to 50 results.",
    "shipping_id_for_aliexpress_unofficial": " ",
    "categories_id_for_aliexpress_unofficial": " ",
    "open_item_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "Get one item",
    "get_company_s_profile_for_argaam_data_apis_free": "Get Company's Profile",
    "get_a_list_of_cement_attributes_against_each_group_for_argaam_data_apis_free": "Get a List of Cement Attributes against each group",
    "get_popular_articles_by_market_for_argaam_data_apis_free": "Get Popular Articles by Market",
    "get_a_list_of_bank_attributes_groups_for_argaam_data_apis_free": "Get a List of Bank Attributes Groups",
    "genotypes_for_23andme": "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. If the profile has not yet unlocked certain SNPs, they'll be replaced with __. To know which SNP corresponds to which index in the string, see this key.  When our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions.",
    "getmanufacturervalues_for_the_cancer_imaging_archive": "Returns a set of all manufacturer names filtered by query keys",
    "get_adverse_event_info_by_reaction_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the \u201creaction\u201d the reaction that was reported, this input parameter is required.  All web method requires the \"api_key\" as query parameter.",
    "songs_get_track_listening_count_for_shazam_api": "Returns the number of times a particular song has been played",
    "search_for_shazam_api": "Search for songs, artists that match input term",
    "playlist_tracks_for_spotify_web": "Get playlist tracks",
    "get_show_episodes_for_spotify_data_api": "Get show episodes by show ID.",
    "user_followers_for_spotify_web": "Get user followers",
    "search_for_spotify_web": "Search",
    "download_track_lyrics_for_spotify_scraper": "This endpoint allows downloading lyrics in different formats. You can also tweak the delay time of lyrics.",
    "list_daily_viral_tracks_for_spotify_scraper": "This endpoint lists daily viral tracks at any time and in any country.",
    "idols_for_k_pop": "Get idol individual info",
    "netherlands_songs_for_billboard_api_v2": "Netherlands Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week",
    "colombia_songs_for_billboard_api_v2": "Colombia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week",
    "billboard_200_for_billboard_api_v2": "Billboard 200 chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week",
    "shazam_events_list_for_shazam": "List future events",
    "albums_get_related_artist_for_shazam": "Get artist related to an album",
    "album_metadata_for_spotify": "Get album metadata",
    "artist_related_for_spotify": "Artist related",
    "get_playlist_by_category_for_spotify_data_api": "Get playlist from category, supported categories are :\npop, hip-hop, rock, latino, dance/electro, mood, indie, workout, country, r&b, k-pop,\nchill, sleep, party, decades, love, metal, jazz, gaming, folk&acoustic, focus, classics,\npunck, ambient, blues, afro, summer",
    "artist_related_for_spotify_v3": "Artist related",
    "artist_discovered_on_for_spotify_v3": "Artist discovered on playlists (max 50)",
    "new_releases_for_spotify_v2": "Get new releases based on country code.",
    "album_tracks_for_spotify_v2": "Get all tracks of an specific Spotify album",
    "audio_features_for_spotify_v2": "Get audio_features of any track",
    "get_artist_overview_for_spotify_scraper": "This endpoint fetches full details of an artist.",
    "youtube_milestone_milestone_for_musicdata_api": "Fastest to Youtube music video to X views milestone. Note: X: 100 - 7000 (million views), X must increase by an increment of 100. E.g: 100, 200, 300,...etc",
    "spotify_chart_countryid_timeframe_for_musicdata_api": "Get global/country daily/weekly chart or total daily/weekly chart for Spotify. Read external docs for more information",
    "get_tracks_for_spotify_v3": "Get one or more tracks",
    "search_for_spotify_v3": "Search",
    "hot_latin_songs_for_billboard_api": "Provide the Greatest of All Time Hot Latin Songs chart information",
    "greatest_of_all_time_songs_of_the_summer_for_billboard_v2": "Get the Greatest of All Time Songs of the Summer chart.",
    "get_artist_top_tracks_for_spotify_data_api": "Get artist top tracks by artist id",
    "artist_albums_for_spotify_v2": "Fetch all albums of any Spotify artist",
    "get_track_id_by_name_for_spotify_scraper": "This is a simplified version of the search endpoint that gets the ID of a track by its name.",
    "chart_artists_for_genius_song_lyrics": "Chart: Artists",
    "artist_get_top_songs_for_shazam_api": "Get the top songs by artist according to Shazam",
    "charts_get_top_songs_in_city_for_shazam_api": "return top songs in city",
    "get_artists_for_spotify": "Get one or more artists",
    "genre_view_for_spotify": "Genre View",
    "youtube_global_for_musicdata_api": "Insight on weekly trending videos for each countries globally",
    "song_details_for_genius_song_lyrics": "A song is a document hosted on Genius. It's usually music lyrics.\n\nData for a song includes details about the document itself and information about all the referents that are attached to it, including the text to which they refer.",
    "charts_get_top_songs_in_world_for_shazam_api": "get top songs in world",
    "track_lyrics_for_spotify": "Get track lyrics",
    "charts_get_top_songs_in_world_by_genre_for_shazam_api": "get top songs in world by gener",
    "year_end_billboard_global_200_for_billboard_v2": "Get the Year-End Billboard Global 200 chart.",
    "get_artist_id_by_name_for_spotify_scraper": "This is a simplified version of the search endpoint that gets the ID of an artist by name.",
    "get_radio_playlist_for_spotify_web": "Get artist or song radio",
    "get_playlist_for_spotify_v3": "Get playlist",
    "referents_for_genius_song_lyrics": "Referents are the sections of a piece of content to which annotations are attached. Each referent is associated with a web page or a song and may have one or more annotations. Referents can be searched by the document they are attached to or by the user that created them.\n\nReferents by content item or user responsible for an included annotation.\n\nYou may pass only one of song_id and web_page_id, not both.",
    "videos_for_genius_song_lyrics": "Videos",
    "playlist_extraction_for_miza": "Produces information on all songs in a playlist (YouTube, Spotify, SoundCloud, etc), with much faster response time than most other available tools. Currently O(1) for YouTube, O(log n) for Spotify, and O(log n) for SoundCloud. See [this article](http://i.mizabot.xyz/f/Bc9AUlCRkA) for the algorithm behind the YouTube playlists specifically.",
    "episode_sound_for_spotify": "Episode Sound",
    "download_reverbnation_song_for_reverbnation_song_downloader": "Get song data & download URL of any paid song.\n(Fetch song name, artist, thumbnail, duration & mp3 downloadable link)",
    "list_user_playlists_for_soundcloud_scraper": "This endpoint lists the playlists of a user. Pagination scraping is supported.",
    "search_for_playlists_for_soundcloud_scraper": "This endpoint searches for SoundCloud playlists with optional filters. Pagination scraping is supported.",
    "list_user_popular_tracks_for_soundcloud_scraper": "This endpoint lists all popular tracks of a user.",
    "artist_songs_for_genius_song_lyrics": "Documents (songs) for the artist specified.",
    "songs_list_recommendations_for_shazam_api": "Similar songs based on song id",
    "hot_100_songs_greatest_of_all_time_for_billboard_api": "Provide the Greatest of All Time Hot 100 Songs chart information",
    "top_200_songs_by_country_global_for_spotify_v3": "Information obtained from https://charts.spotify.com/",
    "charts_list_for_shazam": "List all available charts by cities, countries, and genres",
    "leaderboard_for_genius_song_lyrics": "Leaderboard",
    "list_artist_albums_singles_compilations_appearson_for_spotify_scraper": "This endpoint lists albums associated with an artist. Pagination scraping is supported.",
    "list_related_artists_for_spotify_scraper": "This endpoint lists related artists of an artist.",
    "search_for_spotify_scraper": "This endpoint searches for albums, artists, episodes, genres, playlists, podcasts, and users. Pagination scraping is supported.",
    "songs_for_k_pop": "Get K-POP songs info",
    "download_lyrics_on_spotify_2_quotas_for_soundcloud_scraper": "This endpoint provides a solution to download a track's lyrics on Spotify. (Powered by [Spotify Scraper](https://rapidapi.com/DataFanatic/api/spotify-scraper/))",
    "get_user_profile_for_soundcloud_scraper": "This endpoint fetches a user's profile.",
    "opera_list_for_testing_options": "",
    "track_credits_for_spotify_web": "Get track credits",
    "related_artists_for_spotify_v2": "Get related artists",
    "list_playlist_album_tracks_for_soundcloud_scraper": "This endpoint lists tracks of a playlist or album. Pagination scraping is supported.",
    "get_home_page_overview_for_soundcloud_scraper": "This endpoint fetches trending information displayed on the SoundCloud home page as an incognito visitor.",
    "user_contributions_transcriptions_for_genius_song_lyrics": "User Contributions (transcriptions)",
    "user_contributions_all_for_genius_song_lyrics": "User Contributions (all)",
    "list_user_public_playlists_for_spotify_scraper": "This endpoint lists public playlists of a user. Pagination scraping is supported.",
    "user_followers_for_genius_song_lyrics": "User Followers",
    "song_lyrics_for_genius_song_lyrics": "Song Lyrics",
    "get_lyrics_for_youtube_music_api_detailed_": "Returns lyrics of a song or video.",
    "philippines_south_korea_songs_for_billboard_api_v2": "South Korea Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week",
    "greatest_of_all_time_songs_of_the_summer_for_billboard_api_v2": "Greatest of All Time Songs of the Summer chart.\nSee response example",
    "greatest_of_all_time_adult_alternative_songs_for_billboard_api_v2": "Greatest of All Time Adult Alternative Songs chart.\nSee response example",
    "chart_referents_for_genius_song_lyrics": "Chart: Referents",
    "chart_albums_for_genius_song_lyrics": "Chart: Albums",
    "list_user_followers_for_soundcloud_scraper": "This endpoint lists a user's followers.",
    "list_user_albums_for_soundcloud_scraper": "This endpoint lists the albums of a user. Pagination scraping is supported.",
    "list_user_tracks_for_soundcloud_scraper": "This endpoint lists tracks of a user. Pagination scraping is supported.",
    "get_podcast_metadata_for_spotify_scraper": "This endpoint fetches full details of a podcast.",
    "search_numbers_for_calltrackingmetrics": "",
    "job_stories_for_yc_hacker_news_official": "Up to 200 of the latest Job HN Stories!",
    "get_role_ids_for_template_for_signnow": "The endpoint allows to get role ids for a template.",
    "live_recent_v3_for_chartbeat": "Returns information about the most recent visitors to a given host. This call returns real-time data.",
    "live_summary_v3_for_chartbeat": "Returns either numeric or categorical summaries of event fields given a host and optional path. Numeric summaries include min, max, sum, nonzero observations, observations and sum of squares. Categorical summaries include field keys with associated counts. This call return real-time data.",
    "historical_traffic_stats_for_chartbeat": "Returns traffic sources and/or page load time summarized over the given timespan. You should use this call if you want to discover broad information about your data where we already did the work providing the max or min.",
    "historical_engagement_stats_for_chartbeat": "Returns engaged seconds summarized over the given timespan. You should use this call if you want to discover broad information about your data where we already did the work providing the max or min.",
    "live_top_pages_v3_for_chartbeat": "Returns a list of pages, ordered by which ones have most visitors right now. This call returns real-time data.",
    "live_quick_stats_v3_for_chartbeat": "Returns an overview summary of the people on your domain right now. The number of people on a page, reading, writing, idle, etc... This call returns real-time data.",
    "countformactions_for_acopaer": "# Description GET Number Of Form Actions\r\n\r\nThis url is to get the number of Form Actions created is type `GET`, the url is `BASE_URL/form-actions/count` and returns the number of Form Actions.",
    "allformactions_for_acopaer": "# Description GET All Form Actions\r\n\r\nThis url is to get all Form Actions created is type `GET`, the url is `BASE_URL/form-actions` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.",
    "allreviewers_for_acopaer": "# Description GET All Reviewers\r\n\r\nThis url is to get all Reviewers created is type `GET`, the url is `BASE_URL/reviewers` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.",
    "find_agents_letting_agents_for_zoopla": "find-agents/letting-agents",
    "find_agents_auto_complete_for_zoopla": "find-agents/auto-complete",
    "get_calls_for_calltrackingmetrics": "The Calls API allows you easy access to all your call data. You can subscribe to new incoming calls to receive an HTTP request when a call is completed. You can also query the call API to retrieve all past calls.",
    "answerformby_id_for_acopaer": "# Description GET Answer Form By id\r\n\r\nThis url is to get a Answer Form by id is type `GET`, the url is `BASE_URL/answers-forms/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Answer Form to get details about this Answer Form.",
    "allforms_for_acopaer": "# Description GET All Forms\r\n\r\nThis url is to get all Forms created is type `GET`, the url is `BASE_URL/forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.",
    "789betlinkvao2022_for_789bettnet": "789bet l\u00e0 nh\u00e0 c\u00e1i c\u00e1 c\u01b0\u1ee3c tr\u1ef1c tuy\u1ebfn uy t\u00edn top \u0111\u1ea7u khu v\u1ef1c ch\u00e2u \u00c1, cung c\u1ea5p c\u00e1c d\u1ecbch v\u1ee5 c\u00e1 c\u01b0\u1ee3c nh\u01b0 casino, c\u00e1 c\u01b0\u1ee3c th\u1ec3 thao, n\u1ed5 h\u0169, b\u1eafn c\u00e1, t\u00e0i x\u1ec9u.\n#789bettnet #789bet #nhacai789bet #linkvao #dangky789bet #dangnhap789bet\nHotline 0985 433 336\n\u0110\u1ecba ch\u1ec9 : 89 Ng\u00f5 15 Gi\u1ea3i Ph\u00f3ng, Ho\u00e0ng Li\u1ec7t, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam \nGoogle map https://www.google.com/maps?cid=5871956287660487504 \nGmaiL: 789bett.net@gmail.com\nWebsite https://789bett.net/ \nhttps://789bett.net/dang-ky-789bet/ \nhttps://789bett.net/khuyen-mai-789bet/ \nhttps://sites.google.com/view/789bettnet/home \nhttps://dailygram.com/index.php/profile-432167\nhttps://www.mtbproject.com/user/201407644/789bett-net\nhttps://mydramalist.com/profile/789bettnet\nhttps://my.desktopnexus.com/789bettnet/\nhttps://worldcosplay.net/member/1058048\nhttps://www.tetongravity.com/community/profile/789bettnet/\nhttps://community.amplifi.com/user/789bett-net\nhttps://www.gaiaonline.com/profiles/789bettnet/45915060/\nhttps://www.hackathon.io/789bettnet\nhttps://pawoo.net/@789bettnet\nhttp://pixelhub.me/789bettnet\nhttps://guides.co/p/789bett-net\nhttps://www.allmyfaves.com/789bettnet\nhttps://my.mamul.am/en/profile/1314087/info\nhttp://www.effecthub.com/people/789bettnet\nhttps://kuwestions.248am.com/user/789bettnet\nhttps://www.mapleprimes.com/users/789bettnet\nhttps://www.bahamaslocal.com/userprofile/137779/789bettnet.html\nhttps://www.misterpoll.com/users/4137466\nhttps://yarabook.com/789bettnet\nhttps://anchor.fm/789bettnet\nhttps://www.bitsdujour.com/profiles/Vj49if",
    "countscenarios_for_acopaer": "# Description GET Number Of Scenarios\r\n\r\nThis url provides the Scenarios quantity created, method type `GET`.\r\n\r\n`BASE_URL/scenarios/count`\r\n\r\nreturns the Scenarios quantity.",
    "finance_rates_for_realty_in_us": "Get finance rates",
    "locations_v2_auto_complete_for_realty_in_us": "Get auto complete suggestions by city, ward, street name to pass in other endpoints. This endpoint also helps to get a specific property id by its address",
    "mortgage_v2_calculate_for_realty_in_us": "Calculate mortgage",
    "find_agents_estate_agents_for_zoopla": "find-agents/estate-agents",
    "new_build_developments_for_zoopla": "New build developments",
    "properties_get_running_costs_for_zoopla_v2": "Get running costs",
    "mortgage_calculate_affordability_for_realty_in_us": "Calculate affordability",
    "properties_v2_list_for_sale_deprecated_for_realty_in_us": "List properties for sale",
    "countanswersforms_for_acopaer": "# Description GET Number Of Answers Forms\r\n\r\nThis url is to get the number of Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms/count` and returns the number of Answers Forms.",
    "reviewerby_id_for_acopaer": "# Description GET Reviewer By id\r\n\r\nThis url is to get a Reviewer by id is type `GET`, the url is `BASE_URL/reviewers/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Reviewer to get details about this Reviewer.",
    "is_possible_for_phone_validator_api": "Validates phone number length, returns `true` or `false`.",
    "no_of_participants_for_soti_sync": "No. of Participants",
    "properties_get_nearby_for_zoopla_v2": "Get nearest points of interest",
    "formby_id_for_acopaer": "# Description GET Form By id\r\n\r\nThis url is to get a Form by id is type `GET`, the url is `BASE_URL/forms/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Form to get details about this Form.",
    "get_reviews_by_app_id_for_google_play": "Returns the reviews of a single application by its ID",
    "get_list_of_apps_with_pagination_for_google_play": "Returns a list of apps and a pagination token",
    "get_data_safety_attributes_by_app_id_for_google_play": "Returns the data safety attributes of a single application by its ID",
    "set_item_quantity_for_catalogapi": "Adds items to the cart. The quantity passed to this call overrides the quantity of a duplicate item.",
    "properties_get_broadband_for_zoopla_v2": "Get broadband information",
    "house_prices_get_area_stats_for_zoopla_v2": "Get area stats",
    "house_prices_get_sales_history_for_zoopla_v2": "Get sales history",
    "ae6888_link_vao_nha_cai_ae688_trang_chu_dang_ky_chinh_thuc_for_ae6888_link_vao_nha_cai_ae688_2022": "AE6888  - Ae6888.net\u2b50 Trang ch\u1ee7 \u0111\u0103ng k\u00fd, \u0111\u0103ng nh\u1eadp AE888 m\u1edbi nh\u1ea5t \u2b50\ufe0f bao g\u1ed3m: \u0111\u00e1 g\u00e0 thomo, t\u00e0i x\u1ec9u, th\u1ec3 thao, l\u00f4 \u0111\u1ec1 online \u2b50\ufe0f Link v\u00e0o ae388 - ae688 - ae88 ch\u00ednh th\u1ee9c.\n#\u0111\u0103ng_k\u00fd_ae6888 #n\u1ea1p_ti\u1ec1n_ae6888  #link_v\u00e0o_ae6888 #t\u1ea3i app ae6888 #/m/033_l8  /m/033_l8 #Casino #l\u1ecbnkvaoae68882022 #dangnhap #\u0111\u0103ng_nh\u1eadp_ae6888\n\u0110\u1ecba ch\u1ec9 : 74 Ng\u00f5 238 T\u00e2n Mai, T\u00e2n Mai, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam\t\nHotline 0839138910\t\nGmail: ae6888net@gmail.com\t\nWebsite https://ae6888.net/\nhttps://ae6888.net/huong-dan-dang-ky-ae6888/ \t\nhttps://ae6888.net/huong-dan-nap-tien-ae6888/   \t\nhttps://ae6888.net/link-vao-ae6888-ae388-ae888/  \t\nhttps://ae6888.net/huong-dan-tai-app-ae6888/  \t\nhttps://en.wikipedia.org/wiki/Online_casino    \nhttps://sites.google.com/view/ae6888net/ \nhttps://comicvine.gamespot.com/profile/ae6888net/\nhttps://gifyu.com/ae6888net\nhttps://folkd.com/user/ae6888net\nhttps://phab.mercurial-scm.org/p/ae6888net/\nhttp://ae6888net.wikidot.com/system:welcome\nhttps://bikepgh.org/message-board/users/ae6888net/\nhttps://gotartwork.com/Profile/ae6888-net/149316/\nhttps://bibliocrunch.com/profile/ae6888net/\nhttps://ko-fi.com/ae6888net\nhttps://linktr.ee/ae6888net\nhttp://uid.me/ae6888_net\nhttps://www.scribblemaps.com/maps/view/ae6888net/F8ABhGlKGR\nhttps://gitlab.manjaro.org/ae6888net\nhttps://gitlab.pasteur.fr/ae6888net\nhttps://repo.getmonero.org/ae6888net\nhttps://career.habr.com/ae6888net\nhttps://gitlab.haskell.org/ae6888net\nhttps://cartoonmovement.com/cartoonist/18696\nhttps://forum.umbandaeucurto.com/usuario/ae6888net\nhttps://www.pinterest.com/ae6888net/_saved/\nhttps://www.behance.net/ae6888net\nhttps://vi.gravatar.com/ae6888net\nhttps://www.jigsawplanet.com/ae6888net?viewas=0f0bf43f18f5\nhttps://binaryoptionrobotinfo.com/forums/users/ae6888net/\nhttps://www.divephotoguide.com/user/ae6888net\nhttps://mootools.net/forge/profile/ae6888net\nhttps://fr.ulule.com/ae6888net/#/projects/followed\nhttps://my.archdaily.com/us/@ae6888net\nhttp://codepad.org/users/ae6888net",
    "uk_new_homes_for_sale_for_zoopla": "UK new homes for sale",
    "properties_get_area_stats_for_zoopla_v2": "Get area stats",
    "property_detail_for_zoopla": "property/detail",
    "properties_list_by_mls_deprecated_for_realty_in_us": "List properties by MLS ID",
    "mortgage_check_rates_deprecated_for_realty_in_us": "Check mortgage rates",
    "getdocumenttypessince_for_360_business_tool": "Get document types modified since",
    "quantum4u_for_find_vehicle": "test",
    "find_agents_commercial_agents_for_zoopla": "find-agents/commercial-agents",
    "fraudlabs_api_for_fraudlabs": "Credit Card Fraud Detection API",
    "allanswersforms_for_acopaer": "# Description GET All Answers Forms\r\n\r\nThis url is to get all Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.",
    "search_catalog_for_catalogapi": "Searches the catalog based on the parameters passed.",
    "get_applications_by_developer_id_for_google_play": "Returns the list of applications of a single developer by its ID",
    "get_permissions_by_app_id_for_google_play": "Returns the permissions of a single application by its ID",
    "get_app_by_id_for_google_play": "Returns a single application by its ID",
    "agents_get_recommendations_for_realty_in_us": "Get agent's recommendations",
    "properties_detail_deprecated_for_realty_in_us": "Get property detail information",
    "schools_get_school_district_for_realty_in_us": "Get detailed information of a school district",
    "historical_social_stats_for_chartbeat": "Returns social activity summarized over the given timespan. You should use this call if you want to discover broad information about your data where we already did the work providing the max, min, average or median.",
    "historical_social_series_for_chartbeat": "Returns series of the social activity where the default time span between each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data.",
    "historical_traffic_series_for_chartbeat": "Returns series of the traffic sources and/or page load time where the default time span of each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data.",
    "list_source_languages_for_textking_translation": "Returns a collection of all source languages supported by TEXTKING.",
    "translation_for_ai_writer": "Translate content into any language just enter the language name.",
    "collectfactorswithmongodb_for_carbon_management": "Check if the factor in mapping table is correct.",
    "statusformapperevaluation_for_carbon_management": "Get results in details from the task id.",
    "newsletter_for_ai_writer": "Write a compelling newsletter from a given text",
    "get_users_json_for_quickblox": "Call this API to get a list of current users of you app. By default it returns upto 10 users, but you can change this by adding pagination parameters.",
    "show_video_for_flowplayer_drive": "Shows the specified video, with embedded encodings",
    "sending_sms_otp_auto_generated_otp_custom_template_for_2factor_authentication_india": "This endpoint is used to send Auto Generated SMS OTP to India",
    "un_block_number_sms_service_for_2factor_authentication_india": "This endpoint is used to remove number from SMS Blocklist",
    "sending_sms_otp_auto_generated_otp_for_2factor_authentication_india": "This endpoint is used to send Auto Generated SMS OTP to India",
    "bombed_for_bombsaway": "Sends SMS",
    "group_addmember_for_zipwhip": "Once a group is created via the group/save call, you then need to populate members.",
    "alerts_report_for_signl4_critical_mobile_alerting": "Returns information about the occurred alert volume in different time periods as well as information about the\r\nresponse behaviour (amount of confirmed and unhandled alerts) of your team members.",
    "getwebhookbyid_for_signl4_critical_mobile_alerting": "Returns information of the webhook specified by the passed id.",
    "on_twitter_for_generaltalker": "\u30c4\u30a4\u30c3\u30bf\u30fc\u30dc\u30c3\u30c8\u5c02\u7528\u306e\u96d1\u8ac7API\u3067\u3059\u3002reply_to_id\uff08\u30ea\u30d7\u30e9\u30a4\u5148\u306eID\uff09\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u904e\u53bb\u306e\u4f1a\u8a71\u5c65\u6b74\u3092\u3075\u307e\u3048\u305f\u4f1a\u8a71\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4f8b\u3068\u3001\u305d\u306e\u610f\u5473\u3067\u3059\u3002\n\n```\n{\n\"response\":{\n    \"res\":\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"         # \u751f\u6210\u3055\u308c\u305f\u8fd4\u7b54\n    \"user_score\":-2.8724350929260254   # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306e\u30b9\u30b3\u30a2\n    \"lm\":0.7096909880638123            # \u6587\u7ae0\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"mc\":-1.5187406539916992           # \u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027\u30b9\u30b3\u30a2\n    \"score\":-0.3534274697303772        # \u7dcf\u5408\u30b9\u30b3\u30a2\n    \"history_text\":\"<speaker2>Hello\"   # \u767a\u8a71\u306e\u751f\u6210\u306b\u4f7f\u308f\u308c\u305f\u767a\u8a71\u5c65\u6b74\n    \"res_score_list\":[                 # \u63a1\u7528\u3057\u306a\u304b\u3063\u305f\u8fd4\u7b54\u306e\u30ea\u30b9\u30c8\n        0:[\n            0:\"\u304a\u306f\u3088\u30fc\u3054\u3056\u3044\u307e\u3059\"       # \u8fd4\u7b54\u306e\u5185\u5bb9\n            1:[                          # \u30b9\u30b3\u30a2\uff08\u6587\u7ae0\u306e\u59a5\u5f53\u6027,\u8fd4\u7b54\u3068\u3057\u3066\u306e\u59a5\u5f53\u6027,\u7dcf\u5408\u30b9\u30b3\u30a2\uff09\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # \u4e2d\u7565\n    ]\n    \"user_utt_id\":1355             # \u30e6\u30fc\u30b6\u30fc\u306e\u767a\u8a71\u306eid\n    \"bot_utt_id\":1356              # \u751f\u6210\u3057\u305f\u8fd4\u7b54\u306eid\n    }\n}\n```",
    "fetchatrip_for_sim_based_location_tracking": "<p>This endpoint is for fetching a trip</p>\n<p><strong>Body Parameters</strong></p>\n\n<p><strong>Notes</strong></p>\n<ul>\n<li>Atleast one of the below three parameters should be passed</li>\n</ul>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>invoice</td>\n<td>No</td>\n<td> invoice received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>trip_id</td>\n<td>No</td>\n<td> trip_id received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>lr_number</td>\n<td>No</td>\n<td> lr_number received in response of submit trip API</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>",
    "checkconcent_for_sim_based_location_tracking": "<p>This endpoint is responsible for refreshing the tracking concent of provided number, i.e. whether location tracking is allowed or not yet</p>\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>tel</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n\n<p>\n<h4>Wrong or not added mobile number passed</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">\n{\n    \"status\": \"invalid_mobile\"\n}\n</code></pre>",
    "categories_teamid_categoryid_for_signl4_critical_mobile_alerting": "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e",
    "subscriptions_for_signl4_critical_mobile_alerting": " ",
    "subscriptions_subscriptionid_channelprices_for_signl4_critical_mobile_alerting": " ",
    "teams_teamid_dutyreports_for_signl4_critical_mobile_alerting": " ",
    "api_ns_domain_for_dns_lookup": "Sample request:\r\nGET /api/ns/oxog.net",
    "conversation_list_for_zipwhip": "Deletes the conversation based on the provided conversation ID. It also deletes the associated messages.",
    "user_save_for_zipwhip": "Save details about the user associated with the provided session",
    "fetchalltrips_for_sim_based_location_tracking": "This endpoint is for fetching all trips ",
    "routehistory_for_sim_based_location_tracking": "<p>Through this endpoint <b>route history</b> can be fetched of provided number..</p>\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>phone_number</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n<tr>\n<td>from_date</td>\n<td>Yes</td>\n<td>From date for Route history in YYYY/MM/DD formate</td>\n</tr>\n\n<tr>\n<td>to_date</td>\n<td>Yes</td>\n<td>To date for Route history in YYYY/MM/DD formate</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>",
    "users_userid_dutystatus_for_signl4_critical_mobile_alerting": "Returns a object with duty information.",
    "events_eventid_overview_for_signl4_critical_mobile_alerting": "Get overview event by id.",
    "get_content_for_line_messaging": "Gets image, video, and audio data sent by users.",
    "subscriptions_subscriptionid_teams_for_signl4_critical_mobile_alerting": " ",
    "users_userid_setupprogress_for_signl4_critical_mobile_alerting": " ",
    "scripts_inventory_parsed_scriptid_for_signl4_critical_mobile_alerting": "Gets the script specified by the passed script id.",
    "sending_sms_otp_custom_otp_for_2factor_authentication_india": "This endpoint is used to send Custom SMS OTP to India",
    "categories_teamid_categoryid_metrics_for_signl4_critical_mobile_alerting": "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e/metrics",
    "get_channel_details_for_kick_com_api_kick_api": "Get Channel Details",
    "get_channel_emotes_for_kick_com_api_kick_api": "Get Channel Emotes",
    "agent_details_by_username_for_zillow_v2": "Get agent's details by username(contact infos, active listings and reviews etc).\nPS : username is the profile link \nExample : \nusername :  Pardee-Properties\nfor https://www.zillow.com/profile/Pardee-Properties/",
    "trending_for_theclique": "Get trending videos of the particular geo",
    "get_user_profile_for_theclique": "Enter SLUG user.\nFor example, from URL  **https://soundcloud.com/siamusic** get only  -     **siamusic**",
    "get_time_diff_by_location_for_location_and_time": "Find out time difference from `from_time` to `to_time` for specified location. Daylight saving time are taken care of.",
    "get_astral_data_by_city_for_location_and_time": "Get times of various aspects of the sun for specified date and city, including dawn, sunrise, noon, sunset, dusk times. **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use /astral/bylocation endpoint instead.",
    "get_holidays_for_location_and_time": "List holidays for the specified country and year.",
    "encode_geohash_for_location_and_time": "Encode a geolocation into [geohash](https://en.wikipedia.org/wiki/Geohash) string which can then used for applications such as proximity search.",
    "search_countries_timezone_for_geography": "Search Countries where provided TimeZone is used by the country",
    "continuation_user_s_media_for_twitter": "This endpoint returns the list of a user's medias",
    "retrieve_an_asset_for_opensea_v2": "This endpoint is used to fetch information about a single NFT, based on its contract address and token ID. The response will contain an Asset Object.",
    "agency_for_theclique": "Enter SLUG and ID",
    "transfermarkt_search_for_theclique": "Search by name",
    "get_artist_overview_for_theclique": "Enter Artist ID",
    "collection_information_for_opensea_v2": "Scrape all the HTML information from the NFT collection page without having to use chrome.",
    "get_scrabble_score_for_dicolink": "Get Scrabble score for a word",
    "responses_from_a_question_for_moodring": "Get all responses to a question.",
    "privacy_permissions_by_id_for_app_store": "Get privacy permissions for an app by ID",
    "channel_details_for_youtube": "Channel Details",
    "video_details_for_youtube": "Video Details",
    "get_linkedin_profile_by_sales_nav_url_for_fresh_linkedin_profile_data": "Get full profile data, including experience & education history, skillset and company related details. **1 credit per call.**",
    "everything_for_theclique": "Search through millions of articles from over 80,000 large and small news sources and blogs.\n\nThis endpoint suits article discovery and analysis.",
    "playlist_for_theclique": "Get playlist by Channel ID",
    "list_realated_artists_for_theclique": "Enter Artist ID",
    "status_for_seo_api": "It \"status\" == true then API is up",
    "retrieve_collection_for_opensea_v2": "This endpoint is used to retrieve more in-depth information about an individual collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_blur_events_for_opensea_v2": "This endpoint is used to retrieve events, customisable.\n\n**Filter examples:**\n{\"count\":50,\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\n{\"count\":50,\"tokenId\":\"541\",\"contractAddress\":\"0x60e4d786628fea6478f785a6d7e704777c86a7c6\",\"eventFilter\":{\"mint\":{},\"sale\":{},\"transfer\":{},\"orderCreated\":{}}}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_tokens_listings_for_opensea_v2": "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nFilter for Listed Tokens: {\"cursor\":null,\"traits\":[],\"hasAsks\":true}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "getnews_for_powerbi": "Get Power BI news.",
    "getlearningresourcesbytopic_for_powerbi": "Get Power BI learning resources by topic.",
    "subtitles_for_yt_api": "Get the list of available subtitles for the video.\nQuota cost is 1 unit.",
    "search_countries_by_language_for_geography": "Search Countries by its used Language",
    "resident_advisor_api_for_theclique": "Enter ID event\n\nFor example, with the url \"https://ra.co/events/1618892\" we need \"1618892\"",
    "squad_for_theclique": "Enter SLUG, ID and SEASON\n\nFor example: borussia-dortmund, 16, 2022",
    "activities_for_youtube_v3_v3": "Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel or with the user's own channel.",
    "videocategories_for_youtube_v3_v3": "Returns a list of categories that can be associated with YouTube videos.",
    "get_geolocation_by_ip_for_location_and_time": "Get geographic location information about the specific IP address. Information includes the city, country, continent, geolocation with accuracy, postal code, and more.",
    "channel_videos_for_yt_api": "Get channel video listing and channel details.\nQuota cost is 1 unit.",
    "channel_featured_channels_for_yt_api": "Get featured channel listing and channel details.\nQuota cost is 1 unit.",
    "user_followers_for_100_success_instagram_api_scalable_robust": "Get user followers list",
    "get_channel_chatroom_for_kick_com_api_kick_api": "Get Channel Chatroom",
    "is_whatsapp_for_business_for_whatsapp_data": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.",
    "is_registered_on_whatsapp_for_whatsapp_data": "This endpoint returns `true` if the phone is registered on whatsapp.",
    "artist_related_for_spotify_data": "artist-related",
    "verse_range_api_for_complete_study_bible": "Use when you only want to fetch a passage subset, not the entire chapter.",
    "search_place_id_api_for_complete_study_bible": "Used in conjuction with Chapter and Verse API, Place Detail API. Receives a Place Unique ID, returns a list of all verses in the Bible that mention the place. Helpful for studying the Biblical history of a particular place.",
    "search_by_filetype_for_advanced_serp_operators": "Search operator helps you to find results for a specific file type.",
    "search_for_words_in_title_text_or_url_for_advanced_serp_operators": "Search for words in the title and text or URL",
    "channels_for_youtube_v3_lite": "Get channel details.\nQuota cost is 1.",
    "deprecated_retrieving_listings_for_opensea_data_query": "Used to fetch active listings on a given asset.",
    "year_end_top_artists_for_theclique": "Get the Year-End Top Artists chart.\nAvailable years **2006 - 2022**",
    "songkick_concert_for_theclique": "Concert info",
    "get_categories_for_google_play_api": "Returns categories.",
    "youtube_search_for_youtube_search": "This endpoint will a specific number of videos for a specific keyword, note that the maximum is 40 videos per request",
    "response_by_quizid_for_moodring": "Get all responses of a certain quizId.",
    "getcommunities_for_powerbi": "Get Power BI communities.",
    "questions_for_rainforest": "The Questions Parameters are applicable when making a request with type=questions to retrieve customer Questions & Answers for a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nQuestions are retrieved from the customer questions page for a single product on Amazon",
    "asin_to_gtin_for_rainforest": "When making a request with the type parameter set to type=asin_to_gtin Rainforest API will attempt to look up GTIN / EAN / UPC / ISBN numbers for the ASIN and Amazon domain specified in the asin and amazon_domain parameters.",
    "hashtag_for_yt_api": "Get videos or Shorts listings related to any hashtag.\nQuota cost is 1 unit.",
    "channel_shorts_for_yt_api": "Get shorts listing along with channel details\nQuota cost is 1 unit.",
    "property_details_for_zillow_data_v2": "Property details",
    "get_zip_code_by_usps_for_zillow_data_v2": "Get zip code by usps",
    "scholar_for_seo_api": "Perform Scholar Search\n\nParameters\n----------\nquery : A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n\nReturns\n-------\njson: a list of results with the link, description, and title for each result",
    "post_likes_for_100_success_instagram_api_scalable_robust": "Get post likes list",
    "search_for_google_play_api": "Search page.",
    "get_ages_for_google_play_api": "Get Ages",
    "tweet_user_favoriters_for_twitter": "This endpoint returns a list of user who favorited the tweet",
    "user_s_likes_for_twitter": "This endpoint return a list of user's likes given a user ID",
    "api_version_for_adzuna": "Returns the current version of this API",
    "random_address_by_id_for_fake_data_generator": "Retrieve a fake address by id",
    "random_bank_for_fake_data_generator": "This endpoint generate a list of fake banks",
    "retrieve_airdrop_leaderboard_for_blur": "Retrieve the current airdrop leaderboard list\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "photos_for_zillow_v2": "Returns a property's photos with different sizes and types.",
    "search_countries_by_region_for_geography": "Search Countries by its Region",
    "get_continents_for_geography": "Get list of continents in the world",
    "country_specific_country_for_africa_api_": "Returns a json of specific country in Africa eg Kenya. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\"",
    "post_comments_for_yt_api": "Get post's comments or thread.\nQuota cost is 1 unit.",
    "video_details_for_yt_api": "Get all the details of the YouTube video.\nQuota cost is 1 unit.",
    "google_place_details_for_value_serp": "The Google Place Details Parameters are applicable when making a request with search_type=place_details to retrieve place details for a Place. The Place is specified in the data_id parameter, data_id values are returned from search_type=places Places requests.\n\nIf the data_id is not available you may also request a place_details request using a data_cid (a standardised Google Place identifier you may already have access to). However, data_id is the recommended identifier to use.",
    "search_for_asin_data": "The Search Parameters are applicable when making a request with `type=search` to retrieve search results for an Amazon domain - the Amazon domain is specified using the `amazon_domain` parameter and the search term is specified in the `search_term` parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nSearch results are retrieved from the search results page on Amazon.",
    "retrieve_collection_activity_for_opensea_v2": "This endpoint is used to retrieve activity for an individual collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "retrieve_a_contract_for_opensea_v2": "This endpoint is used to fetch detailed information about a specified contract.",
    "news_for__all_in_one_crypto_swiss_knife_": "get crypto news",
    "podcasts_for__all_in_one_crypto_swiss_knife_": "get crypto podcasts",
    "songkick_festivals_for_theclique": "festivals info",
    "get_info_about_artist_for_theclique": "Give info about artist on allmusic.com\n\nResponse -> json",
    "weekly_billboard_200_for_theclique": "Get the Billboard 200 chart.",
    "collections_for_rich_nft_api_metadata": "Get NFT collections.\n\nPagination example: start=0&limit=100\nSearch for collections: q=CRYPTOPUNKS\nSupported chain ids: eth, bsc, matic, avax, arb, op",
    "getbookbyid_for_feku_json": "get Specific Book by ID",
    "search_for_seo_api": "Perform Google Search\n\nParameters\n----------\nquery : A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n\nReturns\n-------\njson: a list of results with the link, description, and title for each result",
    "strongs_number_detail_api_for_complete_study_bible": "Receives a Strongs Number or comma-separated list of Strong's Numbers (limit 3 at a time) and returns detailed information for each number, including Greek and Hebrew, phonetic pronunciation guide, root, Strong's Condordance, Mounce's Dictionary, Thayer's Greek Lexicon, and Brown-Driver-Brigg's (BDB) Lexicon (Hebrew only).\n\nThayer's and BDB are stored as html and should be displayed as raw html in the browser. Add CSS styling as desired.\nAll scripture references in the html are stored as <a> tags with the following href format: \"/Bible/{book}/{chapter}/{verse}\". If you want the links to work properly, you can program your front-end to recognize these links and do an API call to the Chapter and Verse api  and display the response in a pop-up window.",
    "get_app_reviews_for_google_play_api": "Returns app reviews. Uses cursor.",
    "get_app_datasafety_for_google_play_api": "Returns datasafety.",
    "rarity_tools_for_opensea_v2": "Rarity Tools Collection Items Endpoint , to  use you need to understand the source code of the webpage and reconstruct.",
    "whale_activities_for__all_in_one_crypto_swiss_knife_": "Get latest whale activities.",
    "products_for_seo_api": "Search for products rankings",
    "random_custom_by_id_for_fake_data_generator": "Retrieve  fake  data banks by id customizing the layout setting the number and type.\n\nYou can define fake data layout with de 'layout' param.\n\nThe structure of this param:\n\n```\n{'fields': \t{\n\t\t\t\t'date': {'type': 'DATE_AND_HOUR'},\n\t\t\t\t'name': {'type': 'NAME_FULL_NAME'},\n\t\t\t\t'purchase': {\n\t\t\t\t\t\t\t\t'type': 'COMPOUND', \n\t\t\t\t\t\t\t\t'fields': {\n\t\t\t\t\t\t\t\t\t\t\t'company': {'type': 'COMPANY_NAME'},\n\t\t\t\t\t\t\t\t\t\t\t'amount': {'type': 'CURRENCY_PRICE'}\n\t\t\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t}\n\t\t\t}\n}\n```\n\nWith 'type': 'COMPOUND', you can add nodes, tha max depth is 3.\n\nIn regard to the diferents type of data, you can use this types:\n\n```\n'COUNTRY'\n'COUNTRY_CODE'\n'CITY'\n'STREET_ADDRESS'\n'BUILDING_NUMBER'\n'POSTAL_CODE'\n'COMPANY_NAME'\n'COMPANY_SUFFIX'\n'COMPANY_BUSINESS'\n'COMPANY_PHRASE'\n'CREDIT_CARD_EXPIRE'\n'CREDIT_CARD_NUMBER'\n'CREDIT_CARD_PROVIDER'\n'CREDIT_CARD_SECURITY_CODE'\n'CURRENCY_PRICE'\n'CURRENCY_CODE_NAME'\n'CURRENCY_CRYPTO_CODE_NAME'\n'NAME_PREFIX_NAME'\n'NAME_FIRST_NAME_MALE'\n'NAME_FIRST_NAME_FEMALE'\n'NAME_LASTNAME'\n'DATE'\n'DATE_AND_HOUR'\n'DATE_CENTURY'\n'DATE_THIS_DECADE'\n'DATE_THIS_MONTH'\n'INT'\n'PARAGRAPH'\n'PARAGRAPH_LOREMIPSUM'\n'SENTENCE'\n'SENTENCE_LOREMIPSUM'\n'BBAN'\n'IBAN'\n'SWIFT'\n'SWIFT11'\n'TEXT'\n'TEXT_LOREMIPSUM'\n'URL'\n'WORD'\n```",
    "lists_tweets_for_twitter": "This endpoint return a list of tweets in a given Twitter list",
    "available_locations_beta_for_twitter": "Get the list of available locations",
    "get_nft_metadata_v2_for_chain49": "Only works on Ethereum-like blockchains (currently ethereum and bsc)\n\nGet metadata like name or description for a specified contract and token ID.\nThe resulting data contains a link which can then be used to request the IPFS link for the actual image to display in a block explorer for example.\n\nNote: this route was implemented by us and is therefore not yet supported by existing blockbook clients.",
    "get_utxo_v2_for_chain49": "Returns array of unspent transaction outputs of address or xpub, applicable only for Bitcoin-type coins. By default, the list contains both confirmed and unconfirmed transactions. The query parameter confirmed=true disables return of unconfirmed transactions. The returned utxos are sorted by block height, newest blocks first. For xpubs or output descriptors, the response also contains address and derivation path of the utxo.\n\n\n\nUnconfirmed utxos do not have field height, the field confirmations has value 0 and may contain field lockTime, if not zero.\n\nCoinbase utxos have field coinbase set to true, however due to performance reasons only up to minimum coinbase confirmations limit (100). After this limit, utxos are not detected as coinbase.",
    "get_regions_for_geography": "Get list of regions in the world",
    "house_prices_auto_complete_for_uk_real_estate_rightmove": "house-prices/auto-complete",
    "estate_agents_list_for_uk_real_estate_rightmove": "Find estate agents",
    "google_images_for_google_search_2": "Using this API you can get the JSON data of the image results.",
    "top_free_mac_apps_for_app_store": "Get list of the top free mac apps",
    "languages_allcountries_for_africa_api_": "Returns a json of all languages spoken in each country in Africa\nTakes parameter <country_name> with value <all>\nResponse example:\n{54 items\n\"Chad\":{2 items\n\"other_languages\":[11 items\n0:\n\"Sara\"\n1:\n\"Maba\"\n2:\n\"Kanembu\"\n3:\n\"Kotoko\"\n4:\n\"Bagirmi\"\n5:\n\"Boulala\"\n6:\n\"Gorane\"\n7:\n\"Marba\"\n8:\n\"Masalit\"\n9:\n\"Tama\"\n10:\n\"Teda\"\n]\n\"national_language\":[2 items\n0:\n\"French\"\n1:\n\"Arabic\"\n]\n}\n]",
    "get_profile_posts_for_fresh_linkedin_profile_data": "Get 50 latest posts of a person based on his/her LinkedIn profile url. **2 credits per call.**",
    "city_details_for_geodb_cities": "Get the details for a specific city, including location coordinates, population, and elevation above sea-level (if available).",
    "tweet_favoriters_for_twitter_data": "tweet-favoriters",
    "list_artist_albums_singles_compilations_for_theclique": "Enter Artist ID and type search",
    "events_for_theclique": "Enter SLUG of the artist\nYou can get SLUG from Search endpoint",
    "time_zone_for_geodb_cities": "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ",
    "time_zone_date_time_for_geodb_cities": "Get the timezone current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ",
    "search_a_range_for_advanced_serp_operators": "Search \"Android phone\" but only show results where the price ranges from $300-$500; also works for dates and other numbers",
    "retrieve_user_airdrop_rewards_for_opensea_v2": "Retrieve user airdrop rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.",
    "get_box_office_movies_for_movies_tv_shows_database": "return movie results with title , year , id",
    "get_movies_by_year_for_movies_tv_shows_database": "return movie results with title, year , id",
    "get_videos_videoid_captions_language_for_api_video": " ",
    "modifyjpeg2000_for_aspose_imaging_cloud": " ",
    "getimageframerange_for_aspose_imaging_cloud": " ",
    "trigger_image_triggered_get_for_image": " ",
    "live_tags_for_quality_porn": "Search for live tags and the associated data.",
    "logoutuser_for_tes": "",
    "pack_for_flaticon": "Method that allows you to get detailed information about a pack. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.",
    "get_live_streams_for_api_video": " ",
    "anime_illustrations_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime illustrations made by anime fans:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`",
    "icons_for_flaticon": "Method that allows you to get a paged list with information about the icons available at Flaticon. By default, it will return a list order by priority. If no order is set, it will return items order by priority. In order to avoid 403 errors when svg icon is used to show the icon in result lists you must not store data in cache more than 15 minutes",
    "hit_image_hitler_get_for_image": " ",
    "get_identity_for_smile": "Get the user's identity profile by ID.",
    "list_invites_for_smile": "Get the list of invites sent out to users.",
    "three_black_crows_for_barpatterns": "List of stocks having Three Black Crows signal.",
    "get_polygon_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Polygon balance of an address in a specific network.",
    "get_digibyte_balance_for_cryptocurrency_balance": "This endpoint will return back the DigiByte balance of an address",
    "get_archive_for_smile": "Get a user's archive by ID.",
    "get_contribution_for_smile": "Get the user's contribution by ID.",
    "customerstats_for_cleardil": " ",
    "all_news_for_crypto_news_v2": "Get news from all supported sources.",
    "get_invite_template_for_smile": "Get invite template.",
    "evening_star_for_barpatterns": "List of stocks having Evening Star signal.",
    "searchverificationsdone_for_cleardil": " ",
    "three_inside_down_for_barpatterns": "List of stocks having Three Inside Down signal.",
    "hanging_man_for_barpatterns": "List of stocks having Hanging Man signal.",
    "bullish_hammer_for_barpatterns": "List of stocks having Bullish Hammer signal.",
    "three_outside_down_for_barpatterns": "List of stocks having Three Outside Down signal.",
    "movie_parental_guides_jsonp_for_yts_am_torrent": "Returns all the parental guide ratings for the specified movie",
    "getaddress_for_appibase": "Get an address",
    "logoutuser_for_swagger_petstore": "Logs out current logged in user session",
    "getstores_for_appibase": "Get all stores",
    "getcollectionparent_for_appibase": "Get the parent collection",
    "getstockitem_for_appibase": "Get a stock item",
    "getpricelist_for_appibase": "Get a price list",
    "getmerchant_for_appibase": "Get a merchant",
    "aliexpress_item_description_for_aliexpress_datahub": "All details of a single item.",
    "aliexpress_item_shipping_detail_4_for_aliexpress_datahub": "All details of a single item.",
    "auto_complete_deprecated_for_sephora": "Get suggestions by term or phrase",
    "categories_v2_list_root_deprecated_for_sephora": "List top root categories",
    "aliexpress_item_shipping_detail_5_for_aliexpress_datahub": "All details of a single item.",
    "search_by_category_filters_for_ikea_api": "Complimentary to the \"Search By Category\" endpoint. Obtain a list of filters available to a specified category.",
    "categories_list_deprecated_for_sephora": "List categories and its recursive.",
    "product_for_ikea_api": "Get up-to-date Information for a specific product.",
    "getasingleorder_for_ecartapi": "<p>Searches for a selected order and shows the detailed information.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#646f03ea-0962-4570-9a23-fa06320fc2e6\"> The order's ID must exist</a></li>\n\t</ul></b>",
    "getallproducts_for_ecartapi": "Request used to obtain all the products in a store catalog.\n\nFind a general representation of all the filters and information EcartAPI can abet.\n\n#### For more detailed information please refer to our Supported Requests By Cart folder and find the eCommerce of your choice.",
    "getcollection_for_appibase": "Get a collection",
    "getproductpricelists_for_appibase": "Get all product price lists",
    "getordershippingaddress_for_appibase": "Get the order's shipping address",
    "navigations_get_tabs_for_unofficial_shein": "Get tabs for navigation",
    "api_bestsales_product_productid_saleshistory_for_magic_aliexpress": "This resource returns the historic of sales",
    "aliexpress_item_search_2_for_aliexpress_datahub": "All details of a single item.",
    "aliexpress_item_shipping_detail_2_for_aliexpress_datahub": "All details of a single item.",
    "categories_list_deprecated_for_target": "List all root and sub categories",
    "categories_for_ikea_api": "Obtain a list of all categories available in a specified country.",
    "reviews_v2_list_for_target": "List reviews relating to a product",
    "aliexpress_store_info_for_aliexpress_datahub": "All details of a single item.",
    "products_v2_detail_for_sephora": "Get detailed information of a product",
    "aliexpress_user_basic_parameters_for_aliexpress_datahub": "User Basic Parameters for Region, Currency and Locale",
    "aliexpress_store_categories_for_aliexpress_datahub": "All details of a single item.",
    "getsinglecarrierservices_for_ecartapi": " ",
    "infoproductlisting_for_ecartapi": " ",
    "getcollectionchildren_for_appibase": "Get all child collections",
    "getstocklocations_for_appibase": "Get all stock locations",
    "getsallorder_sfulfillments_for_ecartapi": "<p>Shows all of the order's fulfillments detailed.<br></p>\n<b>Important information:<br><b/>\n\t<b><ul>\n<li>Filters are subject to ecommerce.</li>\n\t<li><a href = \"https://docs.ecartapi.com/?version=latest#646f03ea-0962-4570-9a23-fa06320fc2e6\"> The order's ID must exist</a></li>\n\t</ul></b>",
    "products_detail_deprecated_for_sephora": "Get details of product by id",
    "products_v2_list_for_sephora": "List products with options and filters",
    "categories_v2_list_for_sephora": "List categories",
    "categories_list_root_deprecated_for_sephora": "List top root categories",
    "champion_for_ncaa_final_four": "Get championship team data for the given year.",
    "sport_highlighted_matchups_for_pinaculo": "Get sport highlighted matchups.",
    "player_events_for_flashlive_sports": "Get the player events by player ID",
    "image_data_for_flashlive_sports": "Get a image player, team, tournament by IMAGE_ID",
    "get_player_list_for_tank01_fantasy_stats": "Grabs all of this season's players and their IDs.  \n\nONE CALL is all you need to retrieve every player.  No need to call multiple times to get the full list.\n\nRosters are updated multiple times per day during the season.\n\nYou mainly will use this to match a player with his playerID.\n\nThere are no parameters, just a simple call..\n\n/getNBAPlayerList",
    "get_general_game_information_for_tank01_fantasy_stats": "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNBAGamesForDate\" call or the \"getNBATeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNBAGameInfo?gameID=20220310_BKN@PHI",
    "get_general_game_information_for_tank01_mlb_live_in_game_real_time_statistics": "This returns very basic information about each game.  The some data points that you will get from this call which you won't get from other calls are the time that the game starts, the game ID and link  for mlb.com and espn.com, and the game status (Postponed/scheduled/completed/in-progress/etc).  All game start times are in Eastern time zone.  \n\nExample:\n\n/getMLBGameInfo?gameID=20220409_CHW@DET\n\nwill return:\n\n```\n\n{\n\"statusCode\":200\n\"body\":\"{\"espnID\": \"401354266\", \"mlbLink\": \"https://www.mlb.com/gameday/white-sox-vs-tigers/2022/04/09/662864#game_tab=box,game=662864\", \"gameStatus\": \"Completed\", \"season\": \"2022\", \"gameDate\": \"20220409\", \"gameTime\": \"1:10p\", \"away\": \"CHW\", \"mlbID\": \"662864\", \"gameID\": \"20220409_CHW@DET\", \"espnLink\": \"https://www.espn.com/mlb/boxscore/_/gameId/401354266\", \"home\": \"DET\"}\"\n}\n```",
    "matches_get_hhighlights_for_unofficial_cricbuzz": "Another endpoint used to get match highlights",
    "matches_get_table_deprecated_for_livescore_v2": "Get table of related match",
    "matches_v2_list_live_for_livescore_v2": "List available live matches at request time\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png",
    "esport_games_get_lineups_for_divanscore": "Get eSport game's lineups",
    "teams_get_tournaments_for_divanscore": "Get attended tournaments of specific team",
    "players_get_last_ratings_for_divanscore": "Get ratings of specific player recently",
    "matches_get_graph_for_divanscore": "Get graph to describe recent form between two teams",
    "teams_get_transfers_for_divanscore": "Get transfers of specific team",
    "provider3_live_inplaying_for_football_betting_odds": "get inplaying matches list",
    "news_details_for_livescore_sports": "News details",
    "teams_details_for_livescore_sports": "Get team details by team ID. News tag, country, badge_id (logo), result and fixtures events",
    "get_per_game_regular_season_for_nba_stats_v2": "Api to query per game regular season",
    "get_players_by_id_for_nba_stats_v2": "Api to query players",
    "players_at_position_for_national_football_players": "Returns all of the players at specified position. Only use abbreviated position names for position (i.e. QB, RB, WR, etc). See list of current positions @ /position",
    "referee_statistics_for_soccer_data": "Provides the information about referee and his/her statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
    "daily_match_list_scheduled_for_soccer_data": "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "daily_match_list_all_for_soccer_data": "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**",
    "leagueseasons_for_basketapi": "Get the seasons for a specific basketball league using the tournament ID.",
    "teammedia_for_basketapi": "Get the media for a specific basketball team.",
    "livematches_for_basketapi": "Get a list of all live basketball matches.",
    "recent_match_list_for_basketball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**",
    "matches_v2_get_statistics_for_livescore_v2": "Get statistics of a match",
    "news_v2_list_for_livescore_v2": "List latest news relating to all sports at once",
    "teamimage_for_mmaapi": "Get player image in PNG format for a specific team.",
    "eventdetails_for_mmaapi": "Get information about a MMA event based on its ID.",
    "tournamentrnkingsummary_for_mmaapi": "Get ranking summary for a unique tournament",
    "matches_get_team_for_unofficial_cricbuzz": "Get players attended the match",
    "venues_get_info_for_unofficial_cricbuzz": "Get venue info",
    "stats_for_allscores": "Get competitor or competition stats.",
    "last_game_report_by_teams_for_hockey_live_sk_data": "Get the last game report of the two teams",
    "uniquestageseasons_for_motorsportapi": "Get the seasons of a specific Motorsport stage.",
    "teamdriverhistory_for_motorsportapi": "Get the driver history for a specific Motorsport team by providing the team ID.",
    "leagueoveralltopplayers_for_cricketapi2": "Get the overall top players for a specific cricket league in a given season, including player statistics and other relevant information.",
    "prematchform_for_cricketapi2": "Get pre-match form information for a specific cricket match.",
    "innings_cricket_for_sofasport": "Get innings (cricket) by event_id",
    "tournament_data_for_sofasport": "Get tournament data by tournament id",
    "featured_events_for_sofasport": "Get featured events of the unique tournament",
    "tournament_teams_for_soccer_data": "List of teams participating in a specific tournament.",
    "seasonal_goal_analysis_scoring_first_for_soccer_data": "Provides the scoring first goal statistics of the teams against to other teams in tournaments in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
    "tournaments_for_tennis_live_data": "Lists a schedule of all tournaments for a given `tour_code` and `season_id`",
    "match_for_tennis_live_data": "An individual match file for a given `match_id`",
    "matches_get_esport_games_for_divanscore": "Get eSport games (Only supports eSport matches)",
    "teamlastmatches_for_icehockeyapi": "Get the list of last matches played by a specific Ice Hockey team.",
    "playermedia_for_icehockeyapi": "Get the media for a specific Ice Hockey player by providing the player ID.",
    "managerimage_for_icehockeyapi": "Get the image for a specific Ice Hockey manager in PNG format by providing the manager ID.",
    "tennis_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Tennis Live Matches endpoint.",
    "competitions_detail_for_livescore_v2": "Get competition information, recent and up coming matches",
    "matches_v2_get_commentary_for_livescore_v2": "Get comments in a match",
    "player_heatmap_for_sofasport": "Get a player's heatmap",
    "country_channels_for_sofasport": "Get tv country channels by event_id",
    "categories_for_sofasport": "Get actual categories by date and sport",
    "staffs_get_profile_for_transfermarket": "Get profile of specific staff",
    "playerplayoffsstatistics_for_americanfootballapi": "This endpoint retrieves playoffs statistics for a specific player in a given tournament and season.",
    "teamstandingsseasons_for_americanfootballapi": "Get the seasons for which standings are available for a specific American Football team by providing the team ID.",
    "playerstatisticsseasons_for_americanfootballapi": "Get player statistics seasons.",
    "playerlastevents_for_sportifyapi": "Player Last Events",
    "teamtransfers_for_sportifyapi": "Team Transfers",
    "search_leagues_for_pinaculo": "Search leagues.",
    "tennis_league_rounds_for_allsportsapi": "Get league rounds.",
    "teammedia_for_footapi": "Get the media for a specific Football team.",
    "statistics_esports_for_sofascores": "Get statistics (esports) by event_id",
    "manager_career_history_for_sofascores": "Get the manager's career history",
    "listofallcircuits_for_formula_1_fixed": "This endpoint is to obtain a list of all constructors.\n\n\nCircuit lists can be refined by adding one or more of the following criteria:\n\n/constructors/<constructorId>\n/drivers/<driverId>\n/grid/<position>\n/results/<position>\n/fastest/<rank>\n/status/<statusId>\n\nFor example, to list all circuits at which a specific driver has driven for a particular constructor:\n\nhttp://ergast.com/api/f1/drivers/alonso/constructors/mclaren/circuits",
    "listofallconstructorswithinayear_for_formula_1_fixed": "This endpoint is to obtain a list of all constructors in a particular season (year)",
    "players_get_performance_detail_for_transfermarket": "Get player performance detail by specific season and competition",
    "yesterday_sure_vip_under_3_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers yesterday under 3.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "get_player_information_for_tank01_mlb_live_in_game_real_time_statistics": "Call this to get general information on each player (name, team, experience, birthday, college, image link, etc).\n\nThis can accept either \"playerID\" or \"playerName\".    \n\nIf you use playerID then the body will return one object.  playerID values can be found from performing a get on the team roster API. playerID is the unique identifier for each player, and is the preferred parameter to use in this call.\n\nIf you use playerName then it will return a list of objects, since many players can have the same name.  It acts as more of a search/scan than direct access, and will be a slower call than if you use playerID.\n\nAlso, you don't have to call the full name with playerName.  You can use partial name.  For example, if you call with only playerName=smith then it will return all players with smith in their full name.",
    "usa_latest_odds_for_surebets_2": "Latest odds for matches in the USA - updated every 6 hours",
    "euro_latest_matches_for_surebets_2": "Latest matches international in europe by bookie - updated every 24 hours",
    "photos_get_gallery_for_cricbuzz_cricket": "Get photo gallery",
    "matches_get_leanback_for_cricbuzz_cricket": "Get match leanback",
    "matches_list_for_unofficial_cricbuzz": "List live, recent, upcoming matches",
    "seasons_of_clubs_for_transfermarkt_db": "Get short seasons of clubs by club_id",
    "list_of_coaches_for_transfermarkt_db": "Get a list of coaches. Use endpoint `Staff Short info` to get more information by coach ID",
    "staff_profile_for_transfermarkt_db": "Get staff (coaches) profile by IDs",
    "series_get_squads_for_cricbuzz_cricket": "Get squads by series",
    "unique_tournaments_list_for_os_sports_perform": "Get a list of unique tournaments by category id",
    "sports_number_live_events_for_os_sports_perform": "Get number of live events in the sports",
    "team_near_events_for_os_sports_perform": "Get team near events by team ID",
    "staffs_get_short_info_for_transfermarket": "Get short information of one or more staffs",
    "matches_get_stats_for_transfermarket": "Get stats of specific match",
    "players_get_header_info_for_transfermarket": "Get header information of player on the top of page",
    "compare_players_for_transfermarkt_db": "Compare players by player_ids",
    "player_market_value_progress_for_transfermarkt_db": "Get player market value",
    "playernationalteamstatistics_for_sportifyapi": "Player National Team Statistics",
    "playercharacteristics_for_sportifyapi": "Player Characteristics",
    "team_rankings_for_os_sports_perform": "Get team rankings by team ID",
    "team_logo_for_os_sports_perform": "Get team logo by team ID",
    "statistics_overall_for_os_sports_perform": "Get team overall statistics by team ID, unique tournament ID, season ID",
    "statistic_list_fifa_world_rankings_for_transfermarket": "List FIFA world rankings",
    "venues_for_baseball": "Baseball venues",
    "teamdetails_for_basketapi": "Get the details of a specific basketball team.",
    "tournamentplaceholderimage_for_basketapi": "Get the tournament placeholder image in PNG format.",
    "match_for_basketapi": "Get detailed information of a specific basketball match using the match ID.",
    "playerdetails_for_rugbyapi2": "Get the details for a specific Rugby player.",
    "get_game_lineup_for_viperscore": "With \"Get game lineup\" you'll receive the full lineup and if it is confirmed or a forecast",
    "get_game_highlights_for_viperscore": "Want to use the highlight video after a match? Here you get all information you need",
    "home_team_last_10_matches_for_football_prediction": "Grab the statistics and list of the last 10 matches played by the home team for a certain ID",
    "getgameboxscore_for_nhl_stats_and_live_data": "If you want detailed play information, you should use `/game/{id}/feed/live` or `/game/{id}/feed/live/diffPatch`.",
    "getconference_for_nhl_stats_and_live_data": "You can use this to also retrieve inactive conferences. For example, the ID for the World Cup of Hockey is `7`.",
    "prematchform_for_americanfootballapi": "Get pre-match form data for a specific American Football match by providing the match ID.",
    "teamdetails_for_americanfootballapi": "Get detailed information for a specific American Football team by providing its ID.",
    "matchincidents_for_americanfootballapi": "Get match incidents for a specific American Football match by providing the match ID.",
    "teamraces_for_motorsportapi": "Get races for a specific Motorsport team during a stage season.",
    "stageimage_for_motorsportapi": "Get image for a specific Motorsport stage.",
    "matchtvchanneldetails_for_motorsportapi": "Get the details of a specific TV channel broadcasting a specific Football match.",
    "teams_roster_teamids_for_baseball": "Query baseball team roster by ID",
    "latest_player_events_for_flashlive_sports": "Get the latest player events by player ID",
    "event_data_for_flashlive_sports": "Get all event data by event ID",
    "referee_data_for_sofasport": "Get referee data by referee ID",
    "manager_career_history_for_sofasport": "Get the manager's career history",
    "getschedule_for_nhl_stats_and_live_data": " ",
    "getgamecontent_for_nhl_stats_and_live_data": " ",
    "tournament_list_for_basketball_data": "List of tournaments in your data coverage.",
    "get_daily_schedule_for_tank01_mlb_live_in_game_real_time_statistics": "Get basic information on which games are being played during a day.\n\nExample call: \n\n/getMLBGamesForDate?gameDate=20220410\n\nThe above call will return all of the games from April 10th, 2022.  Date must be in the format YYYYMMDD.\n\nGames are returned in a list like shown below:\n\n```\n{\"statusCode\":200\n\"body\":\"[{\"gameID\": \"20220410_BAL@TB\", \"away\": \"BAL\", \"gameDate\": \"20220410\", \"home\": \"TB\"}, {\"gameID\": \"20220410_TEX@TOR\", \"away\": \"TEX\", \"gameDate\": \"20220410\", \"home\": \"TOR\"}, {\"gameID\": \"20220410_SD@ARI\", \"away\": \"SD\", \"gameDate\": \"20220410\", \"home\": \"ARI\"}, {\"gameID\": \"20220410_CHW@DET\", \"away\": \"CHW\", \"gameDate\": \"20220410\", \"home\": \"DET\"}, {\"gameID\": \"20220410_HOU@LAA\", \"away\": \"HOU\", \"gameDate\": \"20220410\", \"home\": \"LAA\"}, {\"gameID\": \"20220410_PIT@STL\", \"away\": \"PIT\", \"gameDate\": \"20220410\", \"home\": \"STL\"}, {\"gameID\": \"20220410_BOS@NYY\", \"away\": \"BOS\", \"gameDate\": \"20220410\", \"home\": \"NYY\"}, {\"gameID\": \"20220410_NYM@WAS\", \"away\": \"NYM\", \"gameDate\": \"20220410\", \"home\": \"WAS\"}, {\"gameID\": \"20220410_MIL@CHC\", \"away\": \"MIL\", \"gameDate\": \"20220410\", \"home\": \"CHC\"}, {\"gameID\": \"20220410_LAD@COL\", \"away\": \"LAD\", \"gameDate\": \"20220410\", \"home\": \"COL\"}, {\"gameID\": \"20220410_SEA@MIN\", \"away\": \"SEA\", \"gameDate\": \"20220410\", \"home\": \"MIN\"}, {\"gameID\": \"20220410_CLE@KC\", \"away\": \"CLE\", \"gameDate\": \"20220410\", \"home\": \"KC\"}, {\"gameID\": \"20220410_OAK@PHI\", \"away\": \"OAK\", \"gameDate\": \"20220410\", \"home\": \"PHI\"}, {\"gameID\": \"20220410_MIA@SF\", \"away\": \"MIA\", \"gameDate\": \"20220410\", \"home\": \"SF\"}, {\"gameID\": \"20220410_CIN@ATL\", \"away\": \"CIN\", \"gameDate\": \"20220410\", \"home\": \"ATL\"}]\"\n}\n```",
    "tournaments_get_top_teams_for_divanscore": "List top teams of specific league",
    "teams_get_player_statistics_for_divanscore": "Get player statistics of specific team in chosen season and league",
    "tournament_standings_for_basketball_data": "Team rankings for a specific competition.",
    "playershotactionsregularseason_for_basketapi": "Get the overall statistics of a player in the basketball league during the regular season.",
    "matchodds_for_basketapi": "Get odds information for a specific basketball match.",
    "matchplayershotmap_for_basketapi": "Get the shotmap of a player in a basketball match.",
    "goal_leaderboard_for_soccer_data": "Top scorers of the competition supported with player stats.",
    "driverstandingsbyspecifyingthedriver_for_formula_1_fixed": "Driver standings by giving in the driverid(name of the driver).",
    "constructorinformation_for_formula_1_fixed": "Each constructor listed in the response is identified by a unique constructorId which is used to identify the constructor throughout the API. To obtain information about a particular constructor append the constructorId (name of the constructor)\n\nThis endpoint is to obtain the information of a particular constructor based on the constructorId (constructor name)",
    "playerattributeoverviews_for_sportifyapi": "Player Attribute Overviews",
    "tournamentmetadata_for_sportifyapi": "Tournament Meta data",
    "seasontopplayers_for_sportifyapi": "Season Top Players",
    "media_for_sportifyapi": "Media",
    "eventstatistics_for_sportifyapi": "Event Statistics",
    "get_rounds_if_exist_for_viperscore": "Get all rounds for a season for a round-based competition",
    "get_player_attributes_for_viperscore": "Isn't it interesting how a player performs?",
    "news_comments_for_transfermarkt_db": "Get news comments by news_id",
    "compare_clubs_for_transfermarkt_db": "Compare clubs by club_ids, only 2 clubs",
    "best_players_for_transfermarkt_db": "Get a list of the best players. Ex. https://www.transfermarkt.com/statistik/spielertitel?titel_id=195",
    "tomorrow_sure_vip_under_3_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow sure and precise under 3.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "list_of_main_odds_for_flashlive_sports": "Get a list of main odds by sport and date",
    "number_of_sport_events_for_flashlive_sports": "Get data about the sport and the number of sport events",
    "list_of_top_news_for_flashlive_sports": "Get list of top news",
    "most_read_news_for_flashlive_sports": "Get the most read news",
    "teams_get_schedules_for_cricbuzz_cricket": "Get scheduled matches for a team",
    "career_pitching_stats_for_mlb_data": "Retrieve a players career hitting stats for a given game type.",
    "player_info_by_id_for_ultimate_tennis": "This endpoint provides YTD and Career details for a selected player. You can obtain the Player ID from the WTA Rankings endpoint.",
    "tournament_results_by_id_and_year_wta_for_ultimate_tennis": "Via this endpoint, you can retrieve all the matches played in the selected tournament, in a given year. The results are added instantly for every match that ends. You can Retrieve the list of the IDs from the tournament list WTA endpoint.",
    "teams_detail_for_divanscore": "Get information of specific team",
    "teams_get_next_matches_for_divanscore": "Get recent matches and future matches in which the team attend",
    "leaguedetails_for_baseballapi": "Get the details of a specific baseball league using the unique tournament ID.",
    "teamnearmatches_for_baseballapi": "Get the near matches for a specific baseball team using the team ID.",
    "matchlineups_for_baseballapi": "Get the lineups for a specific baseball match by providing its ID.",
    "matches_list_by_league_deprecated_for_livescore_v2": "List all matches by specific league",
    "listoffinishingstatusforaspecificseason_for_formula_1_fixed": "To fetch the list of finishing status of a specific season(year).\n",
    "driverstandingsafterarace_for_formula_1_fixed": "To fetch the driver standings after a specific race(round) in a season(year), use this endpoint.",
    "activities_for_fitness_calculator": "Find the met values for activities.",
    "get_season_totals_allstar_for_nba_stats_v2": "Api to query season totals allstar",
    "get_per36_post_season_by_id_for_nba_stats_v2": "Api to query per36 post season",
    "provider4_live_match_id_for_football_betting_odds": "get match",
    "stagesubstages_for_motorsportapi": "Get all substages of a specific Motorsport stage.",
    "teamplaceholderimage_for_motorsportapi": "Get the team placeholder image in SVG format.",
    "teams_get_results_for_unofficial_cricbuzz": "Get matched results by team",
    "eventstatistics_for_mmaapi": "Get statistics for a specific MMA event.",
    "unique_tournaments_top_list_for_sofascores": "Get a top list of unique tournaments by category id",
    "shotmap_for_sofascores": "Get shotmap by event_id",
    "coach_appearances_for_ncaa_final_four": "Get a list of every coach along with the team and year of each Final Four appearance.",
    "leaguehomestandings_for_footapi": "Get the home standings of a specific Football league.",
    "matchhomegoalkeeperjersey_for_footapi": "Get the home goalkeeper jersey for a specific Football match.",
    "teamnextmatches_for_footapi": "Get the next matches for a specific Football team.",
    "unique_seasons_list_motorsport_for_sofascores": "Get list of the unique stages by category_id (motorsport)",
    "events_player_statistics_for_sofascores": "Get player statistics by event_id",
    "leagueshotactionsareasregularseason_for_basketapi": "Get the shot actions areas for the basketball league during the regular season.",
    "leaguecuptrees_for_basketapi": "Get the cup trees for a specific basketball league using the tournament and season IDs.",
    "matchlineups_for_basketapi": "Get lineups for a specific basketball match.",
    "getlivemenustreaming_for_sportapi": "GetLiveMenuStreaming api data",
    "team_depth_charts_for_baseball_datafeeds_by_rolling_insights": "Returns player depth charts for a team",
    "player_information_for_baseball_datafeeds_by_rolling_insights": "This endpoint returns player demographic information",
    "football_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint.",
    "list_of_national_competitions_for_transfermarkt_db": "Get the list of National competitions",
    "transfers_list_by_club_for_transfermarket": "List transfers relating to specific club",
    "table_tennis_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Table Tennis Live Matches endpoint.",
    "career_history_motorsport_for_sofascores": "Get team career history (motorsport)",
    "rounds_esports_for_sofascores": "Get rounds (esports) by event_id",
    "matches_v2_get_scoreboard_for_livescore_v2": "Get scoreboard of a match",
    "goal_analysis_goal_minutes_in_between_for_soccer_data": "Provides the goals statistics of the teams between in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
    "leaguedetails_for_americanfootballapi": "Get the details of an American Football league for a specific tournament, including the league's name, logo, country, and other relevant information.",
    "team_logo_for_sofasport": "Get team logo by team ID",
    "team_data_for_sofasport": "Get team data by team ID",
    "players_of_team_for_sofasport": "Get players of team by team ID",
    "area_flag_for_soccerway_feed": "Get area flag by area_uid",
    "referee_data_for_os_sports_perform": "Get referee data by referee ID",
    "h2h_events_for_os_sports_perform": "Get h2h events by custom_event_id",
    "listofallconstructors_for_formula_1_fixed": "This endpoint is to obtain a list of all constructors.\n\nConstructor lists can be refined by adding one or more of the following criteria:\n\n/circuits/<circuitId>\n/constructors/<constructorId>\n/drivers/<driverId>\n/grid/<position>\n/results/<position>\n/fastest/<rank>\n/status/<statusId>\n\nFor example, to list all constructors a specific driver has driven for at a particular circuit:\n\nhttp://ergast.com/api/f1/drivers/alonso/circuits/monza/constructors\n\nAlternatively, to list all the constructors who have achieved a particular final position in the championship:\n\nhttp://ergast.com/api/f1/constructorStandings/1/constructors",
    "playerdetails_for_icehockeyapi": "Get the details for a specific Ice Hockey player by providing the player ID.",
    "leaguetotalstandings_for_icehockeyapi": "Get the total standings for a specific Ice Hockey league by providing the tournament ID and season ID.",
    "prematchform_for_icehockeyapi": "Get the pre-match form for a specific Ice Hockey match using the match id.",
    "categories_for_basketapi": "Get the list of available basketball categories.",
    "matchstatistics_for_basketapi": "Get statistics for a specific basketball match.",
    "leagueregularseasonpergametopplayers_for_basketapi": "Get the best players in the basketball league per game during the regular season.",
    "yesterday_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions": "This endpiont delivers yesterday BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.",
    "livematches_for_cricketapi2": "Get live cricket matches that are currently taking place.",
    "statistic_list_most_valuable_clubs_for_transfermarket": "List most valuable clubs",
    "transfers_list_records_for_transfermarket": "List records transfers information along with player info, and trade value",
    "uniquestageimage_for_motorsportapi": "Get image for a specific Motorsport unique stage.",
    "get_players_last_ratings_for_viperscore": "Get the last game ratings of a player.",
    "team_rankings_for_sofasport": "Get team rankings by team ID",
    "country_channels_stage_for_sofasport": "Get tv country channels (stage) by stage_id",
    "matches_v2_detail_deprecated_for_livescore_v2": "Get detail information of a match\n*The default timezone currently is UTC+7",
    "teamtransfers_for_basketapi": "Get the transfers of a specific basketball team.",
    "leaguetopplayersplayoffs_for_basketapi": "Get the top players of a specific basketball league's playoffs using the tournament and season IDs.",
    "recent_unique_tournaments_for_os_sports_perform": "Get recent unique tournaments by team ID",
    "unique_tournament_data_for_os_sports_perform": "Get unique tournament data by unique tournament id",
    "odds_all_for_os_sports_perform": "Get all odds by event_id. You can convert them to decimals. `provider_id`: 1 - Bet365, 100 - betano, 101 - bilyoner",
    "leaderboards_for_live_golf_data": "Fetch the most recent leaderboard for a given `tournId`, `year`,  and `roundId`. Query the `schedule` endpoint for the desired `tournId` and `year`.\n\nLeaderboards are available 1-2 days before the event begins.",
    "playernearmatches_for_rugbyapi2": "Get near matches for a specific Rugby player.",
    "get_rugby_union_rankings_for_rugbyapi2": "Get the current Rugby Union rankings.",
    "tvcountries_for_rugbyapi2": "Get a list of countries and their respective TV channels broadcasting a specific Football match.",
    "players_list_trending_for_cricbuzz_cricket": "List trending players",
    "matchincidents_for_rugbyapi2": "Get incidents for a specific Rugby match.",
    "leaguetotalteamevents_for_rugbyapi2": "Get the total team events for a specific Rugby league and season.",
    "match_for_rugbyapi2": "Get information of a Rugby match by its ID.",
    "managerlastmatches_for_rugbyapi2": "Get the list of the last matches managed by the specified rugby manager.",
    "matchmanagers_for_rugbyapi2": "Get the managers of a specific Rugby match.",
    "categoryschedules_for_handballapi": "Get handball matches by category and date.",
    "seasonal_goal_analysis_goal_minutes_for_soccer_data": "Provides the goals statistics of the teams against to the other teams(in tournament) in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.",
    "match_lineup_for_soccer_data": "Team lineups, formations and head coaches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**",
    "red_card_leaderboard_for_soccer_data": "List of players shown most red cards of the competition supported with player stats.",
    "teamplayers_for_icehockeyapi": "Get the players for a specific Ice Hockey team by providing the team ID.",
    "career_history_motorsport_for_sofasport": "Get team career history (motorsport)",
    "unique_tournament_data_for_sofasport": "Get unique tournament data by unique tournament id",
    "get_latest_highlights_for_viperscore": "This will return the latest video highlights of the competition.",
    "event_summary_incidents_for_flashlive_sports": "Get event summary incidents by event ID",
    "teamnextmatches_for_handballapi": "Get upcoming matches for a handball team by ID and page",
    "playerstatisticsseasons_for_handballapi": "Get player statistics seasons for a handball player by ID",
    "brazil_latest_matches_for_surebets_2": "Latest matches in Brazil by bookie - updated every 24 hours",
    "get_teams_by_season_for_mlb_data": "Retrieve a list of major league teams that were active during a given season.  If all_star_sw is set to 'Y', you will instead receive data on the all star teams for that season.  You can sort using the sort_order paramater. Ex: Sort in ascending order by the name field using sort_by='name_asc'",
    "career_hitting_stats_for_mlb_data": "Retrieve a players career hitting stats for a given game type.",
    "playerdescription_for_sportifyapi": "Player Description",
    "point_leaderboard_for_basketball_data": "Points-per-game leaders of the competition supported with player stats.",
    "seasons_standings_for_sofascores": "Get seasons of the standings by team ID",
    "teams_player_statistics_for_sofascores": "Get overall player statistics by team ID, unique tournament ID, season ID",
    "prematchform_for_basketapi": "Get pre-match form information for a specific basketball match.",
    "playertransferhistory_for_basketapi": "Get the transfer history for a specific basketball player.",
    "matches_v2_get_h2h_for_livescore_v2": "Get head to head information in the past",
    "tournaments_search_for_divanscore": "Search for tournaments by name",
    "tournaments_get_logo_for_divanscore": "List logo image of specific league",
    "getalltemplates_for_mailslurp_email_testing": "Get all templates in paginated format",
    "getaliasthreads_for_mailslurp_email_testing": "Returns threads created for an email alias in paginated form",
    "getwebhookresults_for_mailslurp_email_testing": " ",
    "getlatestemailininbox_for_mailslurp_email_testing": "Get the newest email in an inbox or wait for one to arrive",
    "getinboxrulesets_for_mailslurp_email_testing": "List all rulesets attached to an inbox",
    "getemailspaginated_for_mailslurp_email_testing": "By default returns all emails across all inboxes sorted by ascending created at date. Responses are paginated. You can restrict results to a list of inbox IDs. You can also filter out read messages",
    "getauserprofilebyid_for_ishan": " ",
    "channelinfo_for_ishan": " ",
    "getavaiableschemaextensions_for_ishan": " ",
    "getadministrativeunits_for_ishan": " ",
    "gettestwebhookpayloadbounce_for_mailslurp_email_testing": "Get webhook test payload for bounce",
    "getinboxemailcount_for_mailslurp_email_testing": " ",
    "gettemplatepreviewhtml_for_mailslurp_email_testing": "Get email template preview with passed template variables in HTML format for browsers. Pass template variables as query params.",
    "enumeratesitecontenttypes_for_ishan": " ",
    "getsecurityactions_for_ishan": " ",
    "getsubscriptions_for_ishan": " ",
    "getgroup_for_mailslurp_email_testing": " ",
    "waitfornthemail_for_mailslurp_email_testing": "If nth email is already present in inbox then return it. If not hold the connection open until timeout expires or the nth email is received and returned.",
    "get_tile_json_for_mapilion_vector_and_raster_map_tiles": "Returns the tile json for the give style. Currently there are three different types:\n- `v3` the OpenMapTiles compatible vector tiles\n- `hillshading-v1` Hillshading tiles Version 1\n- `hillshading-v2` Hillshading tiles Version 2",
    "query_for_postal_code_boundary_by_postal_code_for_de_boundaries_io": "Query For Postal Code Boundary by postal code.",
    "planet_contour_vectortiles_for_maptoolkit": "Global Vectortiles combined with Contourlines.",
    "search_for_maptoolkit": "Global Geocoder.",
    "retrieve_uk_postal_district_outline_boundaries_for_uk_boundaries_io": "example: Query by \"TW12\" district",
    "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io": "Query for Postal Unit Boundary by H3Index\n\nIf  a Postal Unit code exists within this hexagon a boundary is returned.\nadjusting the resolution(0-16) increases the hexagon area.\n\nhttps://eng.uber.com/",
    "directions_for_locationiq": "Finds the fastest route between coordinates in the supplied order.",
    "autocomplete_for_locationiq": "The Autocomplete API is a variant of the Search API that returns place predictions in response to an HTTP request.  The request specifies a textual search string and optional geographic bounds.  The service can be used to provide autocomplete functionality for text-based geographic searches, by returning places such as businesses, addresses and points of interest as a user types. The Autocomplete API can match on full words as well as substrings. Applications can therefore send queries as the user types, to provide on-the-fly place predictions.",
    "market_day_gainers_for_yahoo_finance_v2": "Stocks ordered in descending order by price percent change with respect to the previous close.",
    "insider_trades_for_yahoo_finance_v2": "Latest insider trading activities from CEO, Directors, Chief Executive Officer, 10% Owner, etc...",
    "type_people_get_proxy_voting_shareholder_for_ms_finance": "Get proxy voting shareholder as displayed in the People tab",
    "market_get_videos_for_ms_finance": "Get latest videos in the market",
    "crypto_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "stock_splits_for_freedom_finance": "List all stock splits for given stock symbol",
    "stock_get_num_shares_outstanding_for_yh_finance_v2": "return number of share outstanding",
    "company_description_for_stock_analysis": "Get company description.",
    "past_3_months_for_the_sandbox_sand": "Get price data for the past 3 months.\n\n~hourly data points.",
    "manager_ownership_for_sec_filings": "Returns institutional managers positions in a stock including the number of managers that sold, increased, decreased and added a stock to their portfolio by comparing current and previous 13F SEC Filings",
    "get_top_coins_by_sentiment_for_crowdsense": "Retrieve real time top 10 coins by Sentiment\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Sentiment value\n\n**Definitions:**\n\n- Sentiment: Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative). Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n\n**Details:**\n- All results are in real time",
    "ideas_list_for_trading_view": "List ideas post with options and filters",
    "get_company_ratios_for_finance_data": "Get Company ratios latest data",
    "index_historical_data_deprecated_for_investing_financial_stocks": "get index historical data by dates",
    "countries_list_for_investing_financial_stocks": "get all countries list",
    "equity_splits_for_quotient": "Return splits history data for a given security.",
    "api_v2_estimated_exchange_network_fee_for_changenow_crypto_exchange": "This endpoint provides an estimated value that will be spent on paying network fees during an exchange.\n\nThis number is ALREADY included in the estimate.\n\n## SUCCESSFUL RESPONSE:\nThe response contains the \u2018estimatedFee\u2019 object and 'deposit', 'withdrawal', 'totals', and 'converted' fields inside it.\n\n\n\n### SUCCESSFUL RESPONSE FIELDS\n\n<table>\n    <tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>estimatedFee</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the network fee estimation.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>deposit</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the deposit network fees.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Deposit currency's ticker.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>network</i></b></td>\n        <td><i>String</i></td>\n        <td>Deposit currency's network.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>amount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Network fee in the deposit currency.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>withdrawal</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the withdrawal network fees.\n        </td>\n    </tr>\n<tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Withdrawal currency's ticker.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>network</i></b></td>\n        <td><i>String</i></td>\n        <td>Withdrawal currency's network.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>amount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Network fee in the withdrawal currency.\n        </td>\n    </tr>\n<tr>\n        <td><b><i>totals</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains combined network fee in deposit or withdeawal currency. \n        </td>\n    </tr>\n    <tr>\n        <td><b><i>from</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains combined network fee estimated to the deposit currency.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>to</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains combined network fee estimated to the withdrawal currency.        </td>\n    </tr>\n    <tr>\n        <td><b><i>converted</i></b></td>\n        <td><i>Object</i></td>\n        <td>Object that contains detailed info on the network fee estimation in select currency.        </td>\n    </tr>\n    <tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Network fee currency's ticker.        </td>\n    </tr>\n    <tr>\n        <td><b><i>network</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of currency's ticker.        </td>\n    </tr>\n    <tr>\n        <td><b><i>deposit</i></b></td>\n        <td><i>Number</i></td>\n        <td>Deposit fee in the selected currency.\n        </td>\n    </tr>\n    <tr>\n        <td><b><i>withdrawal</i></b></td>\n        <td><i>Number</i></td>\n        <td>Withdrawal fee in the selected currency.\n        </td>\n    </tr>\n<tr>\n        <td><b><i>total</i></b></td>\n        <td><i>Number</i></td>\n        <td>Combined network fee in selected currency.\n        </td>\n    </tr>\n<tr>",
    "stock_get_peers_for_webull": "Get stock peers or ETF",
    "south_korea_scheduled_flights_level_for_global_flight_data": "Get weekly South Korea scheduled departing flights level.",
    "sweden_scheduled_flights_growth_for_global_flight_data": "Get weekly Sweden scheduled departing flights growth.",
    "china_scheduled_flights_growth_for_global_flight_data": "Get weekly China scheduled departing flights growth.",
    "get_ico_calendar_for_investing_cryptocurrency_markets": "Get ICO calendar",
    "get_social_timestamps_15m_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Each timeframe is grouped by time intervals specified below.",
    "recommendations_for_twelve_data": "This API endpoint returns the average of all analyst recommendations and classifies them as Strong Buy, Buy, Hold, or Sell. Also, it returns a recommendation score.\n\nAvailability: Mega plan\nData weighting: 100 API credits per symbol",
    "exchange_rate_for_twelve_data": "This API call returns real-time exchange rate for currency pair. Works with forex and cryptocurrency.",
    "type_parent_get_lowest_rated_investments_for_morning_star": "Get lowest rated investments as displayed in the Parent tab",
    "type_parent_get_recent_investment_rating_change_for_morning_star": "Get recent investment rating change as displayed in the Parent tab",
    "stock_v2_get_instruments_for_morning_star": "Mapped to Competitors section in Quote tab",
    "tickers_list_for_palmy_investing_api": "A list response of all stock tickers with their ID, that are possible to trade",
    "quote_get_option_chains_for_schwab": "Get option chains",
    "ideas_detail_for_trading_view": "Get detailed ideal post",
    "cashflow_statement_retrieve_for_palmy_investing_api": "We serve 6 categories for 10-Q data. To combine all of them use the '10-Q' endpoint(s).",
    "longterm_analysis_list_for_palmy_investing_api": "Long Term Scores are calculated based on the date of the next 10-Q Report. Check the docs for explanation",
    "stock_get_pe_ratio_for_yh_finance_v2": "return pe ratio",
    "sentiments_list_for_palmy_investing_api": "Here we provide a list of all sentiments. A sentiment is computed via NLP",
    "sentiments_retrieve_for_palmy_investing_api": "Get a single sentiment by its ID or the title.",
    "quote_list_for_palmy_investing_api": "This endpoint provides stock quotes with time critical information, such as price and trading volume",
    "get_an_account_s_orders_for_tradier": "",
    "stock_v2_get_price_fair_value_for_ms_finance": "Mapped to Price vs Fair Value tab",
    "type_risk_get_risk_return_summary_for_ms_finance": "Get summary of risk return in the Risk tab",
    "stock_v2_get_mini_chart_realtime_data_for_ms_finance": "Used to draw chart in Quote tab",
    "historical_forex_price_for_holistic_finance_stock_data": "Provides historical forex data.",
    "scores_for_holistic_finance_stock_data": "Provides scores of a single stock company.",
    "api_pricetofreecashflow_for_finanzoo_api_fundamentals": "Contains the price-free-cash-flow ratio (P / FC ratio) for each past trading day.\n\nAPI_Pricetofreecashflow\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0",
    "type_price_get_fee_level_for_ms_finance": "Get fee level as displayed in the Price tab",
    "index_overview_for_investing_financial_stocks": "get all overview about index by symbol",
    "indices_countries_for_investing_financial_stocks": "get all indices countries",
    "market_get_splits_for_webull": "Get market splits in specific region",
    "stock_get_rating_pricing_target_for_webull": "Get stock rating and pricing target",
    "consumer_price_index_for_u_s_economic_indicators": "Get monthly consumer price index referenced to year 2010.",
    "crypto_quotes_for_holistic_finance_stock_data": "Provides real-time crypto data.",
    "quote_get_summary_for_schwab": "Get summary information of quote",
    "get_coin_price_for_coinranking": "With the price endpoint the price can be requested for a specific coin on a specific time. The response is just a single price nearest to the requested time, including its timestamp.",
    "economic_indicators_news_for_investing_financial_stocks": "get latest  economic indicators news",
    "mom_for_twelve_data": "Momentum(MOM) compares the current price with the previous price N timeperiods ago.",
    "coppock_for_twelve_data": "Coppock Curve(COPPOCK) is usually used to detect long-term trend changes, typically on monthly charts.",
    "cci_for_twelve_data": "Commodity Channel Index(CCI) is a universal indicator that can help to identify new trends and assess current critical conditions.",
    "news_list_special_reports_deprecated_for_cnbc": "List special reports",
    "symbols_get_priceline_chart_for_cnbc": "Generate image of price line chart of specific stock quote, index, exchange, etc...",
    "shares_float_for_holistic_finance_stock_data": "Provides the amount of current shares float.",
    "stock_get_50day_moving_avg_for_yh_finance_v2": "return 50 day moving average",
    "stock_get_daily_dividend_data_for_yh_finance_v2": "return daily dividend data",
    "company_cash_flow_for_real_time_finance_data": "Get public company's **quarterly** or **annual** cash flow information. Supports the *stock* type only.",
    "2_year_historical_monthly_prices_for_stock_prices": "2 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included.",
    "real_time_commodity_futures_prices_for_investing": "page source : https://www.investing.com/commodities/real-time-futures",
    "list_markets_for_investing": "This endpoint returns a list of markets available on this API.",
    "opt_delta_for_kiann_options_project": "option lognormal greeks : delta calculates the delta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), cp  =call (c) /put (p) (string), type_ = 0 (default) for use in rapidAPI.com\n\n\nr: float, S: float, K: float, T: float, sigma: float, type_: str =\"c\", ret_: int = 1",
    "market_growth_technology_stocks_for_yahoo_finance_v2": "Technology stocks with revenue and earnings growth in excess of 25%.",
    "historical_stock_price_for_holistic_finance_stock_data": "Provides historical stock data.",
    "live_stock_statistics_for_freedom_finance": "Get all the real time statistics about the stock (market cap, etc)",
    "popular_news_for_investing": "This endpoint provides the popular news on stocks, commodities, money, politics, etc",
    "softs_futures_prices_for_investing": "page source : https://www.investing.com/commodities/softs",
    "stock_get_financial_data_for_yh_finance_v2": "return stock financial information",
    "get_social_timestamps_30m_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped in 30 min intervals.",
    "united_states_covid_19_new_case_count_for_covid_19_economic_impact": "Get United States COVID-19 new case count daily.",
    "key_executives_for_twelve_data": "Returns individuals at the highest level of management of an organization.\n\nAvailability: Mega plan\nData weighting: 1000 API credits per symbol",
    "list_bitcoin_addresses_for_coinbase": "List bitcoin addresses associated with this account.",
    "list_of_available_currencies_for_changenow_crypto_exchange": "This API endpoint returns the list of available currencies. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an array of objects with currency information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>featured</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is popular</td>\n    </tr>\n    <tr>\n        <td><b><i>isStable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is stable</td>\n    </tr>\n    <tr>\n        <td><b><i>supportsFixedRate</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available on a fixed-rate flow</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>",
    "api_v2_market_estimate_fiat_crypto_to_crypto_for_changenow_crypto_exchange": "This API endpoint provides the direct and reverse market crypto-to-crypto or fiat-to-crypto estimated amounts.  \n<b>Attention! Do not use this endpoint for financial aims, only for informational! These rates don't include any fees.</b>  \nTo work with this endpoint, provide your API key in the X-CHANGENOW-API-KEY title.  \nTo calculate the direct estimated amount, set: fromCurrency, toCurrency, fromAmount, type: direct  \nTo calculate the reverse estimated amount, set: fromCurrency, toCurrency, toAmount, type: reverse  \n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>\u201cFrom\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>\u201cTo\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>fromAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>The amount of \u201cfrom\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>toAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>The amount of \u201cto\u201d currency</td>\n    </tr>\n    <tr>\n        <td><b><i>type</i></b></td>\n        <td><i>String</i></td>\n        <td>The type of the estimated amount \u2014 direct or reverse</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>",
    "france_scheduled_flights_growth_for_global_flight_data": "Get weekly France scheduled departing flights growth.",
    "backtrack_kline_for_qvantana": "This endpoint retrieves historical k-line (candlestick) data for a specific cryptocurrency pair on a chosen exchange and market. This endpoint is equal to the Kline endpoint except it returns the result up until the \"from\" parameter. The endpoint accepts the following parameters:\n\nsymbol (required): The trading pair (e.g., 'ethusdt'). The availability of symbols depends on the chosen exchange.\nmarket (required): The market type. Options include 'usdt-perpetual', 'spot', and 'inverse-perpetual'.\ninterval (required): The timeframe for each k-line data point. The available timeframes depend on the chosen exchange.\nlimit (optional): The number of data points to return. The maximum limit is 5000.\nfrom & to (optional): The start and end time for the data, respectively. They can be in UNIX timestamp format (seconds) or 'yyyy-MM-dd HH:mm:ss' format.\nexchange (required): The exchange to fetch data from. Available options are 'bybit', 'binance', 'bitstamp', 'gateio', and 'kraken'.\nThis endpoint offers comprehensive historical trading data tailored to your specific needs, providing a valuable tool for market analysis.",
    "exponential_moving_average_ema_for_qvantana": "Exponential Moving Average (EMA) indicator",
    "get_52_week_high_by_fundamental_with_respecto_to_country_for_global_stock_market_api_data": "Get 52 week high by Fundamental with respecto to Country",
    "type_get_quote_for_morning_star": "Get quote related to an ETF or FUND",
    "type_risk_get_risk_volatility_measures_for_morning_star": "Get risk volatility measures in the Risk tab",
    "market_v2_get_time_series_for_morning_star": "Query one or more entities data at once in time series manner",
    "stock_v2_get_security_info_for_morning_star": "Mapped to Quote section in Quote tab",
    "type_risk_get_market_volatility_measures_for_morning_star": "Get market volatility measures in the Risk tab",
    "type_parent_get_medalist_rating_for_morning_star": "Get medalist rating as displayed in the Parent tab",
    "get_social_notifications_for_finance_social_sentiment_for_twitter_and_stocktwits": "Social Sentiment Notifications\nSearch for notifications that identify changes in social media activity for a given stock or cryptocurrency on Twitter, StockTwits, and Reddit.",
    "stock_net_share_purchase_activity_for_yahoo_finance_v2": "Get net share purchase activity information for a particular stock",
    "get_latest_news_for_global_stock_market_api_data": "View the latest financial news articles published on Investing.com. Read the most recent stories and breaking news, covering all aspects of financial markets worldwide, including commodities, stocks, currencies, indices and more.",
    "get_major_commodities_by_performance_for_global_stock_market_api_data": "World financial market to get major commodities with respect to performance",
    "symbols_charts_period_for_seeking_alpha_finance": "Get prices charts by ticker_slug and period",
    "symbols_dividends_payout_ratio_for_seeking_alpha_finance": "Get dividends payout ratio chart by Ticker slug",
    "type_portfolio_get_credit_quality_for_morning_star": "Get credit quality as displayed in the Portfolio tab",
    "type_get_realtime_data_for_morning_star": "Get realtime data related to an ETF or FUND",
    "doji_for_qvantana": "Doji indicator",
    "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 1 week intervals.",
    "standard_deviation_for_qvantana": "Standard deviation indicator",
    "italy_scheduled_flights_growth_for_global_flight_data": "Get weekly Italy scheduled departing flights growth.",
    "fed_policy_rates_for_u_s_economic_indicators": "Get daily interest rates paid by the Federal Reserve System on reserves.",
    "market_quotes_stocks_for_mboum_finance": "Quote data for stocks, ETFs, mutuals funds, etc...",
    "minindex_for_twelve_data": "Index of lowest value over period(MININDEX).",
    "indices_list_for_twelve_data": "This API call return array of indices available at Twelve Data API. This list is daily updated.",
    "market_news_for_mboum_finance": "Recently published stock news in all sectors.",
    "stock_profile_stock_for_mboum_finance": "Get stock profile information such as company name, descriptions, website, etc...",
    "futures_prices_for_investing_financial_stocks": "get futures prices list",
    "equity_ratios_for_investing_financial_stocks": "get all equity ratios by slug",
    "sec_filings_for_sec_filings": "Returns a list of SEC Filings for the requested company.",
    "stock_upgrade_downgrade_history_for_yahoo_finance_v2": "Get stock upgrade and downgrade history.",
    "press_releases_get_details_for_seeking_alpha": "Get press release detail by id",
    "symbols_get_analyst_recommendations_for_seeking_alpha": "Get Wall Street analyst recommendations for specific symbol",
    "type_people_get_summary_for_ms_finance": "Get summary information as displayed in the People tab",
    "stock_v2_get_risk_rating_assessment_for_ms_finance": "Get risk rating assessment in the Sustainability tab",
    "type_portfolio_get_maturity_schedule_for_ms_finance": "Get maturity schedule as displayed in the Portfolio tab",
    "coins_get_historical_data_for_investing_cryptocurrency_markets": "Get historical data of specific cryptocurrency",
    "orderbook_for_bybit": "Query order book info. Each side has a depth of 25 orders.",
    "news_get_details_for_schwab": "Read news in details",
    "indexes_daily_for_quotient": "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters.",
    "symbols_estimated_estimates_for_seeking_alpha_finance": "Get the estimates for the symbol (Latest Quarter's Earnings, Upcoming Quarter's Earnings). Ex result: https://seekingalpha.com/symbol/NVDA/income-statement",
    "screeners_filters_for_seeking_alpha_finance": "Get list of screener filters",
    "get_social_stats_spam_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a stock or cryptocurrency's sentiment statistics from posts generated on Twitter or Stocktwits by user post category (influencers,spam,bot).",
    "type_people_get_proxy_voting_management_for_ms_finance": "Get proxy voting management as displayed in the People tab",
    "type_parent_get_lowest_rated_investments_for_ms_finance": "Get lowest rated investments as displayed in the Parent tab",
    "search_for_investing_financial_stocks": "search by query",
    "symbols_faq_for_seeking_alpha_finance": "Get Answers to common questions on a topic by Ticker slug. Ex.: https://seekingalpha.com/symbol/NVDA",
    "screeners_details_for_seeking_alpha_finance": "Get more details about screener. Ex. https://seekingalpha.com/screeners/96793299-Top-Rated-Stocks",
    "crypto_live_for_quotient": "Return current market price data given the input parameters.",
    "upgrade_downgrade_history_for_yh_finance_complete": "This endpoint returns a Upgrade Downgrade History.",
    "type_parent_get_medalist_rating_for_ms_finance": "Get medalist rating as displayed in the Parent tab",
    "news_list_for_ms_finance": "List latest news",
    "type_sustainability_get_esg_risk_for_ms_finance": "Get ESG risk in the Sustainability tab",
    "analysis_get_details_deprecating_for_seeking_alpha": "Get analysis detail by id\n* This endpoint is deprecating. Use .../analysis/v2/get-details instead",
    "get_supported_coins_for_crowdsense": "Get all the supported coins, the result contains pairs of Name and Ticker of each coin ordered alphabetically",
    "stock_data_stock_modules_for_mboum_finance": "Get combine stock data such as profile, financial data, statistics, balance sheet, sec-filing, quote, earnings, trends and more!",
    "super_lotto_plus_for_ca_lottery": "Super Lotto Plus History",
    "deleteaddress_for_chaingateway_io": "Deletes an existing ethereum address. Be careful when using this function.",
    "exercise_by_id_for_exercisedb": "Fetch an exercise by its ID",
    "search_cars_locations_for_booking_com": "Search cars locations by name",
    "questions_about_the_hotel_for_booking_com": "Get questions and answers of hotel staff by hotel_id",
    "trainsbetweenstations_for_irctc": "-",
    "rental_details_for_tripadvisor": "-",
    "search_cars_same_dropoff_for_tripadvisor": "-",
    "airlinestatistics_for_flightera_flight_data": "Returns detailed airline statistics for airlines identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airline is returned.\nOne of ident, iata, icao must be provided.\nStatistics are calculated overnight and represent the current day's data.",
    "airportflights_for_flightera_flight_data": "Returns a list of flights for an airport, direction and time. The list is sorted ascending by scheduled departure time for direction==\"departure\" and sorted descending by scheduled arrival time for direction==\"arrival\".\nThe next departure/arrival time is returned for pagination.\nThe dates returned for each flight represent the scheduled departure date in local time and can be used to query flight data via /flight/info.",
    "popular_airline_routes_for_flight_data_v2": "Returns routes for which an airline operates flights, sorted by popularity.",
    "policies_of_the_hotel_for_booking_com": "Get policies of the hotel by hotel_id",
    "list_of_room_types_for_booking_com": "Returns room types names",
    "rental_rates_for_tripadvisor": "-",
    "test_api_for_tripadvisor": "This API is to test if server is up and running",
    "search_flights_filter_by_agent_id_for_skyscanner_v2": "Get and poll all flights, search between origin and destination with prices, filter, sorting for specific agent id.",
    "airportmetar_for_flightera_flight_data": "Returns the most recent METAR for an airport specified by the given ident.\nIncludes a parsed version of the METAR.",
    "airportsearch_for_flightera_flight_data": "Returns a list of airports for a given country, bbox or timezone. Multiple arguments can be specified to limit the search.\nEither one of country, bbox or timezone must be specified.",
    "search_return_flights_for_priceline_com_provider": "Gets all the return flights for a given contract/return bundle from FlightDepartures through the getFlightReturns endpoint",
    "booking_details_of_the_hotel_for_priceline_com_provider": "Get hotel descriptions, prices and available booking options. Indicate the hotel_id, check-in and check-out date",
    "download_areas_for_priceline_com_provider": "Downloads an Area list",
    "list_of_room_facility_types_for_booking_com": "Returns room facility types names",
    "properties_get_static_map_for_booking": "Get static map at specific GEO location",
    "get_recommend_hotels_for_skyscanner_v2": "Use this API to get recommend hotel based on the hotel selected.",
    "get_all_endpoints_for_aaaa": "Get all Endpoints",
    "get_api_spotlights_for_aaaa": "Get API Spotlights",
    "get_all_transactions_for_aaaa": "Get all Transactions",
    "get_countrywise_city_data_for_mocking_rock_": "Use this API to get city list of country. You need to send country name or ISO3 or ISO2 code \nas query to get it. Which you can get it from other API \"Country Codes\"",
    "get_user_teams_for_aaaa": "Get all of the `organizationTeamIds` for each Team the user is a member of.",
    "get_all_teams_for_aaaa": "Get information about all of the Teams in a specific Organization, including the `name`, `status`, and `description` for each Team. ",
    "get_api_log_details_for_aaaa": "Get API logs details information, including `endpoint`, `http method`, `payload` and more.",
    "hhside_for_hhside": "aaa",
    "get_category_for_aaaa": "Get information on a specific Category within your environment",
    "get_all_billing_plans_for_aaaa": "Get all Billing Plans",
    "get_user_subscription_for_aaaa": "Get info on an existing subscription ",
    "get_all_api_docs_for_aaaa": "Get information about all of the docs associated with an API, including the docId.",
    "specifications_by_make_model_for_motorcycle_specs_database": "Get Specifications by {Make} / {Model}\n[MakeModelGetCompleteSpecification]",
    "airports_for_database_of_airports_api": "Get data about global airports by providing the IATA code.",
    "retrieve_test_result_for_drillster_2_0": "Retrieves an individual test result for a specific test instance.",
    "search_in_repertoire_for_drillster_2_0": "Retrieves the user's repertoire, or searches in it using a search query.",
    "radical_position_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "search_for_hadiths_with_key_words_for_hadiths_api": "Searching for hadiths. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database.",
    "kunyomi_reading_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.",
    "m4_5_earthquakes_past_30_days_for_everyearthquake": "Magnitude 4.5+ Earthquakes, Past Thirty Days",
    "collection_for_tle": "Search records",
    "earthquakes_by_date_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world, within a specified date range.",
    "m1_0_earthquakes_past_7_days_for_everyearthquake": "Magnitude 1.0+ Earthquakes, Past Seven Days",
    "all_earthquakes_past_hour_for_everyearthquake": "All Earthquakes, Past Hour",
    "significant_earthquakes_past_7_days_for_everyearthquake": "Significant Earthquakes, Past Seven Days",
    "m1_0_earthquakes_past_hour_for_everyearthquake": "Magnitude 1.0+ Earthquakes, Past Hour",
    "bsc_news_for_cryptocurrency_news": "Get the top latest news from BSC News.",
    "cointelegraph_for_cryptocurrency_news": "Get the top latest news from Cointelegraph.",
    "cmyk_to_hex_for_convexity": "Converts  cmyk color code to hex color code",
    "generate_time_reports_for_a_specific_team_for_odesk_apis": "Time reports can be generated for a specific team, with or without detailed monetary information based on the relationship of the authorized user at the time the call is made and what information is included in the call.",
    "hex_to_rgb_for_convexity": "Converts hex color code to rgb color code.",
    "get_a_specific_task_record_for_odesk_apis": "return details on a specific oTask or set of oTasks, this format can be used within a company (:companyid), team (:teamid) or user (:userid)",
    "business_intelligence_jobs_for_usa_jobs_for_it": "Business Intelligence Jobs Api",
    "hsv_to_rgb_for_convexity": "Converts  hsv color code to rgb color code",
    "time_from_to_number_for_unitconversion": "Temperature unit conversions",
    "generating_provider_specific_reports_for_odesk_apis": "This API allows callers to fetch data source of themselves. No monetary fields, such as charges or earnings, are supported. The caller of this API must be the provider himself.",
    "website_url_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with a specified URL",
    "convert_date_for_calendar_converter": "# Converts a date to a specified calendar.",
    "hsv_to_hsl_for_convexity": "Converts  hsv color code to hsv color code",
    "list_all_otask_records_for_odesk_apis": "returns all task records under the company",
    "cmyk_to_hsl_for_convexity": "Converts  cmyk color code to hsl color code",
    "get_language_code_for_ginger": "-",
    "get_synonyms_for_ginger": "-",
    "loginuser_for_thisshouldbefree": "",
    "products_locations_for_national_weather_service": "A list of locations with active products.",
    "points_point_forecast_for_national_weather_service": "Forecast data for a point. The DWML format is a temporary format to aid transition and will be sunset at a later date. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast",
    "sports_api_for_weatherapi_com": "Sports API method allows a user to get listing of all upcoming sports events for football, cricket and golf in json.",
    "time_zone_api_for_weatherapi_com": "Time Zone API method allows a user to get up to date time zone and local time information in json.",
    "call_5_day_3_hour_forecast_data_by_city_id_for_rapidweather": "You can search weather forecast for 5 days with data every 3 hours by city ID. We recommend to call API by city ID to get unambiguous result for your city.",
    "by_city_id_for_rapidweather": "You can make an API call by city ID.\nWe recommend to call API by city ID to get unambiguous result for your city.",
    "by_geographic_coordinates_for_rapidweather": "By geographic coordinates",
    "by_zip_code_for_rapidweather": "Please note if country is not specified then the search works for USA as a default.",
    "previous_5_days_historical_weather_data_for_rapidweather": "Historical weather data for the previous 5 days",
    "products_locations_locationid_types_for_national_weather_service": "Metadata about a Weather Office. Example /offices/EAX",
    "daily_forecast_5_days_for_easy_weather": "Get a 5-day daily forecast for the given latitude and longitude.",
    "historical_daily_for_easy_weather": "Get a historical daily forecast for the given latitude, longitude, and start date/time.",
    "products_types_typeid_for_national_weather_service": "A list of products by type. Example: /products/types/AFD",
    "alerts_for_ai_weather_by_meteosource": "**Severe weather alerts** for the USA, Europe, and Canada. **Define your location** using GPS coordinates or `place_id` from `Location` endpoints.",
    "rapidapigetforecasthourlybycoordinates_for_forecast": "Get forecast hourly information.",
    "historical_air_pollution_data_for_rapidweather": "Historical air pollution data",
    "one_call_api_for_rapidweather": "The One Call API provides the following weather data for any geographical coordinates:\n\n- Current weather\n- Minute forecast for 1 hour\n- Hourly forecast for 48 hours\n- Daily forecast for 7 days\n- National weather alerts\n- Historical weather data for the previous 5 days",
    "actors_list_born_today_for_online_movie_database": "List all actors and actresses by day and month",
    "title_get_best_picture_winners_for_online_movie_database": "Get best picture winners",
    "title_get_sound_tracks_for_online_movie_database": "Get sound tracks in specific title",
    "title_get_more_like_this_for_imdb": "Get similar title",
    "title_v2_find_for_imdb": "Find title by whatever you are familiar with, such as : name of title, album, song, etc\u2026 with options and filters",
    "title_get_news_for_online_movie_database": "Get news related to the title",
    "getpeople_for_a_i_smartable": "Get artificial intelligence influencers, entrepreneurs and top researchers.",
    "title_v2_get_business_for_online_movie_database": "Get business (Box Office) information of the title",
    "actors_get_all_filmography_for_imdb": "Get all filmography of actor or actress",
    "gettopics_for_a_i_smartable": "Get artificial intelligence topics.",
    "actors_get_bio_for_online_movie_database": "Get biography of actor or actress",
    "getnews_for_a_i_smartable": "Get artificial intelligence news.",
    "title_get_versions_for_online_movie_database": "Get versions information that supported",
    "title_find_for_online_movie_database": "Find title by whatever you are familiar with, such as : name of title, album, song, etc\u2026",
    "title_get_coming_soon_movies_for_online_movie_database": "Get coming soon movies",
    "title_get_most_popular_tv_shows_for_online_movie_database": "Get most popular TV shows",
    "actors_get_all_videos_for_online_movie_database": "Get all videos of actor or actress",
    "actors_get_known_for_for_imdb": "Get known-for of actor or actress",
    "title_get_top_rated_tv_shows_for_imdb": "Get top rated 250 tv shows",
    "title_get_full_credits_for_online_movie_database": "Get full list of casts and crews relating to specific title",
    "title_get_business_deprecated_for_imdb": "Get business (Box Office) information of the title",
    "title_get_trivia_for_online_movie_database": "Get trivia of title",
    "title_get_metacritic_for_online_movie_database": "Get metacritic information of the title",
    "title_get_company_credits_for_online_movie_database": "Get company credits",
    "get_all_tenants_for_yardillo": "This returns all your Tenants",
    "read_access_points_for_ironwifi": "READ ACCESS POINTS",
    "manual_token_list_for_ironwifi": "MANUAL TOKEN LIST",
    "read_groups_for_ironwifi": "READ GROUPS",
    "read_access_point_for_ironwifi": "READ ACCESS POINT",
    "read_captive_portal_for_ironwifi": "READ CAPTIVE PORTAL",
    "read_captive_portals_for_ironwifi": "READ CAPTIVE PORTALS",
    "read_group_for_ironwifi": "READ GROUP",
    "read_acct_data_1_for_ironwifi": "READ - ACCT DATA 1",
    "get_all_imbuements_items_for_tibia_items": "This enpoint will get all imbuement",
    "playerplaceholderimage_for_esportapi": "Get the player placeholder image in PNG format.",
    "teammedia_for_esportapi": "Get the media for a specific E-Sports team by providing the team ID.",
    "free_to_play_for_steam_store_api": "Get a full list of free to play games and other free products.",
    "group_trending_topics_for_steam_community": "Get a list of the trending topics, and the OP.",
    "get_raids_by_level_for_lost_ark": "Get all guardian raids by level",
    "get_food_recipes_for_lost_ark_simple": "Get List of Lost Ark Food Recipes",
    "live_mmo_giveaways_for_mmo_games": "Live Giveaways list",
    "tvcountries_for_esportapi": "Get a list of countries and their respective TV channels broadcasting a specific Football match.",
    "eventh2hduel_for_esportapi": "Get head-to-head duel information of a specific E-Sports event by providing its ID.",
    "gamelineups_for_esportapi": "Get game lineups for a specific E-Sports game by providing the game ID.",
    "teamnearmatches_for_esportapi": "Get the near matches for a specific E-Sports team by providing the team ID.",
    "teamlogoimage_for_esportapi": "Get the team logo image in PNG format by providing the team ID.",
    "leaguelastmatches_for_esportapi": "Get the last matches for a specific E-Sports league by providing the tournament ID, season ID, and page number.",
    "season_critical_damage_leaderboard_wz2_for_cod_api_2_0": "Get season critical damage information for up to 2000 players on the leaderboard.",
    "season_wins_leaderboard_mw_2_for_cod_api_2_0": "Get season wins information for up to 2000 players on the MW 2 leaderboard.",
    "player_matchmaking_information_for_trackmania": "Get the matchmaking info of a player.",
    "player_royal_information_for_trackmania": "Get the royal info of a player.",
    "critical_damage_leaderboard_wz2_for_cod_api_2_0": "Get top critical damage information for up to 2000 players on the leaderboard.",
    "profile_for_rocket_league": "Check a player's profile:\n`rocket-league1.p.rapidapi.com/profile/:player`",
    "top_players_by_royal_for_trackmania": "Get the top players by their royal rank.",
    "getstoresfromgeolocationposition_for_woosmap": "Retrieve the stores nearby an ip location. Stores are returned only if a relevant ip location is found - for an accuracy of 20km or less.\n",
    "timezone_by_id_for_referential": "Lookup a time zone",
    "directions_between_2_locations_for_ghana_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Kumasi to Accra**",
    "measure_distance_for_cameroon": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.",
    "nearby_arcgis_for_nearby_places": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50.",
    "countries_for_referential": "List or search countries of the world in different languages.. Get iso a2, a3 country code and localized country name",
    "getroute_for_woosmap": "Get distance, duration and path (as a polyline) for a pair of origin and destination, based on the recommended route between those two points for a specified travel mode.\n",
    "inbound_for_sms77io": "Retrieves inbound messages history.",
    "profile_regional_settings_for_smsapi_com": " ",
    "outbound_for_sms77io": "Retrieves outbound messages history.",
    "sms_sendernames_sender_for_smsapi_com": " ",
    "short_url_links_id_for_smsapi_com": "Get short URL.",
    "get_info_for_instagram_profile": "Basic profile information",
    "v1_search_location_for_tokapi_mobile_version": "Search locations by text query",
    "list_comments_for_scraptik": "Get list comments of a post.",
    "get_music_for_scraptik": "Get music by id.",
    "user_contact_info_for_instagram_v13": "Get instagram user contact info by user id.",
    "user_info_by_pk_for_instagram_api_v2": "Get all information about an Instagram account by pk (the unique id of Instagram account) such as username, profile_pic_url (hd), full_name, media_count, follower_count, following_count and etc",
    "getallsign_for_zodiac_sign_api": "Get all sign. This returns all the available signs",
    "searchzodiacbysign_for_zodiac_sign_api": "Search Zodiac by sign. This returns the value of the selected sign",
    "get_tiktok_video_full_info_for_tiktok_video_feature_summary": "Support Tiktok & Douyin.\nReturns relevant information about querying video addresses, \nincluding high-definition watermark free video addresses, \nauthor information, \nbackground music information, \nviews, \nlikes, \ncomments, \netc- List Item",
    "music_info_for_tiktok_scraper_v2": "Get music info.",
    "user_information_metadata_for_instagram_data": "Get user information(followers, followings and etc)",
    "get_individual_link_for_geeklist": "",
    "v1_sticker_sticker_id_for_tokapi_mobile_version": "Effect information by ID (look at stickers field in video response)",
    "generate_signature_for_tiktok_v2": "Generate Signature from TikToc API Url\n\nFollowing API Path will work with this signature\n\n/node/share/user/\n/api/post/itemlist/\n/api/challenge/itemlist/\n/api/music/item_list/",
    "video_by_url_for_tiktok_v2": "Fetch video data from TikToc video url \n\ne.g. \nhttps://www.****.com/@therock/video/6800111723257941253\n(copy exact url from browser)",
    "hashtag_for_tiktok_v2": "Search TikToc feeds by hashtag",
    "get_quotes_by_keyword_for__quotes_api": " ",
    "get_quotes_by_max_char_count_for__quotes_api": " ",
    "get_quotes_by_source_for__quotes_api": " ",
    "get_specified_users_activity_for_geeklist": "",
    "get_authenticated_users_activity_for_geeklist": "",
    "reddit_for_check_username": "Check username on Reddit",
    "story_highlights_for_instagram_bulk_profile_scrapper": "Instagram Story Highlights",
    "post_commenter_for_instagram_bulk_profile_scrapper": "Get Instagram Post Commenter's list by media_id",
    "user_stories_for_instagram_v5": "Get Instagram user stories by Instagram user id.",
    "post_comments_for_instagram_v5": "Get Instagram user post comments by Instagram shortcode.",
    "user_highlights_list_for_instagram_v5": "Get Instagram user highlights list by Instagram user id.",
    "get_channel_profile_pic_url_for_gwyo_twitch": "Get Channel Profile Picture's URL (using username or id)\n( Sizes: 150x150, 300x300, 600x600 )",
    "get_random_quote_for__quotes_api": " ",
    "get_instagram_media_comments_for_instagram_fast": "Get instagram media comments by code",
    "user_media_for_twttrapi": "Get user's images",
    "getlenscreators_for_snapchat": "getLensCreators",
    "getdeeplinktolensid_for_snapchat": "getDeeplinkToLensId",
    "user_info_from_user_id_for_instagram_api_2023": "Get brief Information about an Instagram user using user_id",
    "get_hashtags_followed_by_an_user_using_user_id_for_instagram_api_2023": "Get hashtags followed by an Instagram user using user_id.",
    "pk_to_username_for_instagram_bulk_profile_scrapper": "Get Username from pk/id",
    "liked_posts_for_kwai": "Liked Posts API",
    "tweet_details_for_twitter_aio": "Receive all tweet informations and comments by tweetId.",
    "linktree_for_check_username": "Check username on Linktree",
    "hashtag_feed_video_posts_for_tiktok_data": "Get hashtag feed\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.",
    "all_activity_for_geeklist": "",
    "get_specified_users_followers_for_geeklist": "",
    "search_posts_for_scraptik": "Search posts.",
    "video_without_watermark_for_scraptik": "Get video without watermark by url or aweme_id.",
    "username_to_user_id_for_tiktok_private": "Get User By Username",
    "get_post_quotes_for_twitter_v5": "Get Post Quotes By Post ID",
    "v1_1_user_followers_ids_for_twitter_v4": "v1.1 / User Followers IDs",
    "shopify_for_check_username": "Check username on Shopify",
    "facebook_for_check_username": "Check username on Facebook",
    "us_for_check_username": "Check if .us domain is registered",
    "hashtag_feed_for_instagram_api_v2": "It shows the content which is shared on Instagram with a specific hashtag, the first query does not need maxid, but if you want to get the rest of results you need to send it, and it can be taken from previous call as a next_max_id in Json response.\nfor example:\n\"next_max_id\": \"QVFBeHItQXBZTHZPdEdNM2RLTmFtODJEZXpkUVIwbktBWDFscFQ5SFIyZTlodWU3bFZ6RXJmaURNMGJGYk1BbFk1WjIzdzlITGJzRjBkM2lNZ2lwZ2s2TA==\"",
    "real_time_hashtag_search_for_social_media_data_tt": "Search for hashtags by keyword",
    "post_likes_for_instagram_v5": "Get Instagram user post likes data by Instagram shortcode.",
    "search_hashtag_for_instagram_v5": "Get Instagram hashtags by keyword.",
    "get_story_by_shortcode_for_instagram_bulk_profile_scrapper": "Fetch Instagram story from shortcode",
    "v1_user_user_id_for_tokapi_mobile_version": "User information by ID",
    "v1_user_user_id_followings_for_tokapi_mobile_version": "User following list",
    "search_username_for_instagram_bulk_profile_scrapper": "**Contact me for Custom package or requirements**\n\nThis API will be usefull for Instagram username validation or finding similar usernames to pick correct one.\n\nThis API also support CORS enabled image URL.",
    "reels_with_cursor_for_instagram_bulk_profile_scrapper": "Scrap instagram reels by pk or username",
    "username_to_id_for_scraptik": "Get user id from username",
    "user_tagged_feed_for_instagram_data": "Get user tagged feed, post where user was tagged\n\n**NOTE:** Profile should be public(not private)\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster",
    "search_sounds_for_scraptik": "Search sounds.",
    "search_twitter_for_twitter_v5": "Search Twitter (Top, Latest, Videos, Photos and People)",
    "user_feed_v2_for_instagram_data": "Get user post feed v2\n\n**NOTE:** Profile should be public(not private)",
    "comments_by_username_for_reddit": "Comments By Username",
    "get_user_reels_by_user_id_for_instagram_api_2023": "Get reels of an Instagram user using username.",
    "user_tagged_posts_for_instagram_v5": "Get Instagram user tagged posts by Instagram user id.",
    "location_search_for_instagram_v5": "Get Instagram locations by keyword.",
    "user_tweets_by_rest_id_for_twitter_v2": "Get User Tweets By Rest ID",
    "v2_tweet_detail_conversation_for_twitter_v4": "v2 / Tweet Detail & Conversation",
    "get_channel_broadcaster_type_for_gwyo_twitch": "Get Channel Broadcaster Type (using username or id)",
    "login_with_mobile_code_for_kwai": "Login with Mobile Code API",
    "create_card_for_geeklist": "",
    "location_search_for_instagram_data": "Get locations metadata (id and etc)",
    "get_individual_micro_for_geeklist": "",
    "get_feed_by_username_for_instagram_bulk_profile_scrapper": "Get Instagram Profile Feeds by Username",
    "get_feed_by_hashtags_for_instagram_bulk_profile_scrapper": "Get Instagram Feeds by Hashtag",
    "hashtag_info_for_instagram_data": "Get hashtag metadata, top post, total posts and etc",
    "location_stories_for_instagram_data": "Get location user stories by using set of location ids values.  \n\n**Location ids can be found by using /location/search endpoint**",
    "search_video_for_tiktok_video_no_watermark_v2": "Search video",
    "search_top_music_for_kwai": "Search Top Music API",
    "get_music_for_kwai": "Get Music API",
    "get_hashtags_for_instagram_profile": "Return hashtag media list medias",
    "get_comments_for_instagram_profile": "Detail post likers information",
    "user_media_for_twitter_v4": "User Media",
    "get_reels_by_shortcode_for_instagram_bulk_profile_scrapper": "**Contact me for Custom package or requirements**\n\nFetch Instagram reels/clips from short code",
    "post_likers_for_instagram_bulk_profile_scrapper": "Get Instagram Post Likers list by media_id",
    "v2_user_tweets_replies_for_twitter_v4": "v2 / User Tweets & Replies",
    "video_post_metadata_v2_for_social_media_data_tt": "Get single post metadata V2\n\nV2 - returns more data then older version of the endpoint",
    "hashtag_metadata_information_for_social_media_data_tt": "Get hashtag metadata\n\nBasic informations as number of posts and etc",
    "getmusiclenses_for_snapchat": "getMusicLenses",
    "get_user_followers_for_twitter_v5": "Get User Followers By ID. \n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint",
    "search_among_followings_by_pk_for_instagram_api_v2": "search any query in an Instagram account followings when you have the pk, it can be one part or the whole username or full name",
    "media_info_by_media_id_for_instagram_api_v2": "Get any post information such as photos, videos, igtvs, reels , . . . when you have the id",
    "get_user_followings_by_user_id_for_instagram_api_2023": "Get followings of an Instagram user using user_id.",
    "get_authenticated_users_followers_for_geeklist": "",
    "user_profile_picture_for_instagram_v13": "Get instagram user profile picture by username.",
    "device_registeration_for_scraptik": "Generate a new device.",
    "q_a_notifications_for_scraptik": "Show \"Q&A\" account notifications.",
    "user_following_for_instagram_v5": "Get Instagram user following by Instagram user id.",
    "comment_list_for_tiktok_video_no_watermark_v2": "Comment list",
    "post_likes_for_instagram_v13": "Get instagram user post likes data by shortcode.",
    "similar_users_for_instagram_v13": "Get similar Instagram users by userid.",
    "search_music_for_tiktok_video_no_watermark_v2": "Search music",
    "get_video_detail_for_tiktok_video_no_watermark_v2": "**Get links without watermarks quickly and easily**\nNo support url image list",
    "hashtag_search_for_instagram_data": "Search for a hashtags by using keyword",
    "user_guides_feed_for_instagram_data": "Get user guides feed\n\n**NOTE:** Profile should be public(not private)\n**NOTE:** By using **user_id** instead of the username your request will be executed much faster",
    "user_posts_for_tiktok_private": "Get Posts By User",
    "highlights_tray_by_id_for_instagram_bulk_profile_scrapper": "Fetch Instagram story highlights tray list by Highlight id",
    "v2_user_following_for_twitter_v4": "v2 / User Following",
    "get_feed_by_location_id_for_instagram_bulk_profile_scrapper": "Get Instagram Feeds by Location",
    "followings_by_pk_for_instagram_bulk_profile_scrapper": "Fetch following list\n\nCarry forward nextMaxId to retrieve next batch",
    "user_followers_for_instagram_v13": "Get instagram user followers by user id.",
    "get_post_likes_for_twitter_v5": "Get Post Likes By Post ID",
    "vin_decoder_lite_for_vin_decoder": "Get 7 items",
    "6_get_order_information_for_rewards_as_a_service": "Get more information about an order",
    "simulations_by_application_id_for_geolocation_simulation_for_mobile_apps": "Enter applicationID in route",
    "aircraft_details_by_reg_for_fachaapi": "Get Aircraft details for a specific Registration / Tail Number",
    "airports_nonstop_routes_for_an_airport_by_airline_for_timetable_lookup_": "Returns a list of nonstop routes for an airport restricted to an airline",
    "makes_for_car_api": "Search makes by name and year.",
    "get_train_data_mrt_id_id_get_for_aqls_b2c_system": " ",
    "city_list_for_canadian_gas_prices": "Returns a list of valid cities for this API when provided a valid province. Ex: 'Ontario'",
    "airports_nearest_airports_for_a_given_latitude_and_longitude_for_timetable_lookup_": "Returns the nearest airports for a given latitude and longitude",
    "us_nv_for_us_gas_prices": "Returns current gas price data for Nevada. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "us_ny_for_us_gas_prices": "Returns current gas price data for New York. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.",
    "flights_get_playback_for_flight_radar": "Get history traveling data of specific flight",
    "trims_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"year\", \"op\": \">=\", \"val\": 2010}, {\"field\": \"year\", \"op\": \"<=\", \"val\": 2020}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, bodies.type, engines.cam_type, engines.cylinders, engines.drive_type, engines.engine_type, engines.fuel_type, engines.transmission, engines.valve_timing, engines.valves, make_id, make_model_id, make_model_trim_id, created, and modified.",
    "get_wheelchair_mrt_train_no_wagons_wagon_no_wheelchairrows_wheelchairrows_no_seats_get_for_aqls_b2c_system": " ",
    "webhooklist_for_13": "Retrieves all webhooks",
    "accountlist_for_13": "Retrieves all accounts",
    "get_comments_ccfc31c2_0e94_4db6_9956_382d4c9efe6e_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.",
    "get_gas_price_for_uniblock": "Gets the best estimate for gas price to use in a transaction.",
    "get_current_block_number_for_uniblock": "Gets the current block number.",
    "getdocumentproperties_for_aspose_tasks_cloud": " ",
    "downloadfile_for_aspose_tasks_cloud": " ",
    "get_token_price_history_by_period_for_uniblock": "Gets the price chart of a token within a given period in USD.",
    "format_units_for_uniblock": "Gets a string representation of a given value formatted with unit digits.",
    "tafsir_info_by_id_for_quran_com": "Get the information of a specific tafsir. Could include information about the author, when it was published etc.",
    "glyph_code_qcf_v1_font_for_quran_com": "Get glyph codes of ayah for QCF v1 font",
    "chapter_by_id_for_quran_com": "Get details of a single chapter.",
    "ping_server_for_uniblock": "Check API server status.",
    "get_taxonomies_6b249ef7_e2c2_4378_b40a_42146d250423_for_the_south_asian_express": "List Taxonomy",
    "objectexists_for_groupdocs_conversion_cloud": " ",
    "file_content_type_for_pragmavantapi": "File: get content type",
    "emailgetasfile_for_aspose_email_cloud": " ",
    "downloadfile_for_aspose_email_cloud": " ",
    "get_event_logs_for_uniblock": "Gets the logs of a contract.",
    "get_historical_nft_balances_for_uniblock": "Gets the user's historical NFT balance records.",
    "look_up_address_for_uniblock": "Looks up the ens domain for a crypto address if there is any domain bound with the address.",
    "calendargetasalternate_for_aspose_email_cloud": " ",
    "getfileslist_for_aspose_email_cloud": " ",
    "calendargetlist_for_aspose_email_cloud": " ",
    "get_media_id_adb0e84c_5f56_4e25_8aba_9042e0c3f90f_for_the_south_asian_express": "Get Single Media",
    "storageexists_for_aspose_email_cloud": " ",
    "ainameparseemailaddress_for_aspose_email_cloud": " ",
    "get_categories_categoryid_v1_for_shapeways": "",
    "getdiscusage_for_aspose_tasks_cloud": " ",
    "getresources_for_aspose_tasks_cloud": " ",
    "getextendedattributebyindex_for_aspose_tasks_cloud": " ",
    "getdocumentproperty_for_aspose_tasks_cloud": " ",
    "recitations_by_chapter_number_for_quran_com": "Get list of ayah recitations for a Surah.",
    "random_for_quran_com": "Get a random verse. You can get random verse by `chapter`,`page`, `juz`, `hizb`, `rub el hizb`, `ruku`, `manzil` number, or from whole Quran.",
    "storageexists_for_aspose_tasks_cloud": " ",
    "getresource_for_aspose_tasks_cloud": " ",
    "list_custom_blacklisted_ips_for_clickmeter": "List custom blacklisted IPs",
    "getcomboboxfield_for_aspose_pdf_cloud": " ",
    "getpdfinstoragetomobixml_for_aspose_pdf_cloud": " ",
    "getpdfainstoragetopdf_for_aspose_pdf_cloud": " ",
    "getcodeplaygroundlink_for_flow_study": " ",
    "get_a_random_maison_for_hautecouture_api": "Renders a maison who possessed the haute couture label",
    "forgelegacylist_for_minecraft_forge_optifine": "Return a JSON format file of http://files.minecraftforge.net/minecraftforge/index_legacy.html .",
    "a_webtoon_by_its_slug_for_manga_scrapper": "Make request to fetch a specific webtoon information from a specific provider.",
    "jsr_character_by_id_for_jet_set_radio_api": "Returns a single Character by ID",
    "jsrf_characters_for_jet_set_radio_api": "Returns a list of all JSRF Characters",
    "genres_for_watchmode": "Return a mapping of genre names and IDs. Some genres have a tmdb_id, which is the corresponding genre ID on TheMovieDB.org API.",
    "person_for_watchmode": "Return details on a specific person (actor, director, etc).",
    "networks_for_watchmode": "Return a listing of all TV networks that may be returned for a title in the /title endpoint.",
    "gettransactionbyid_for_virtual_accounts_api": "To get transaction by unique id.",
    "restaurants_v2_get_info_for_the_fork_the_spoon": "Get all available information of specific restaurant",
    "filter_prep_time_in_minutes_for_keto_diet": "Gives keto recipes within given range of preparation time.\nprep_time_in_minutes__lt = Less than\nprep_time_in_minutes__gt = Greater than",
    "findtags_for_testing_v3": " ",
    "locations_v2_auto_complete_for_the_fork_the_spoon": "Get suggestion for locations by term or phrase",
    "filter_carbohydrates_for_keto_diet": "Gives keto recipes within given range of carbohydrates value.\ncarbohydrates_in_grams__lt = Less than\ncarbohydrates_in_grams__gt = Greater than",
    "b2borganisationdetails_for_testing_v3": "This endpoint will retrieve a specific organisation details with city list assigned.",
    "get_markets_for_argaam_data_apis_free": "Get Markets",
    "get_a_list_of_fund_managers_for_argaam_data_apis_free": "Get a List of Fund Managers",
    "laptops_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required",
    "get_a_list_of_indicator_groups_and_subgroups_for_argaam_data_apis_free": "Get a List of Indicator Groups and Subgroups",
    "get_sectors_by_market_for_argaam_data_apis_free": "Get Sectors by Market",
    "get_inernational_markets_for_argaam_data_apis_free": "Get International Markets",
    "get_a_list_of_funds_against_each_fund_manager_for_argaam_data_apis_free": "Get a List of Funds against each Fund Manager",
    "get_international_market_data_for_argaam_data_apis_free": "Get International Market Data",
    "get_market_data_for_argaam_data_apis_free": "Get Market Data",
    "get_a_list_of_bank_sector_groups_for_argaam_data_apis_free": "Get a List of Bank Sector Groups",
    "carriers_for_23andme": "Our analysis of whether or not each profile is a carrier for these diseases (starred reports). The person has 0, 1, or 2 mutations, or null if they're not analyzed at any of the markers. Normally, with one mutation, the person is considered a \"carrier\" and can pass the mutation to children; with two, the person is likely to be affected by the disease.",
    "profile_picture_for_23andme": "",
    "names_for_23andme": "For the user and user's profile, gets first and last names. If your user wants to remain anonymous, you shouldn't request this scope. You can optionally filter by profile_id to get the names for just that profile.",
    "traits_for_23andme": "Our analysis for each profile for these traits (starred reports). trait is a value in possible_traits, or null if the profile's not analyzed at those markers.",
    "neanderthal_for_23andme": "Estimated genome-wide proportion of Neanderthal ancestry for the user's profile. Most users have between 0.01 and 0.04 Neanderthal ancestry -- read a full explanation of the science. proportion is -1 for un-genotyped (or as-of-yet uncomputed) profiles.",
    "mexico_songs_for_billboard_api": "Provide the Mexico Songs chart information",
    "artist_albums_for_spotify_web": "Get artist albums",
    "get_track_metadata_for_spotify_scraper": "This endpoint fetches full details of a track.",
    "search_for_albums_for_soundcloud_scraper": "This endpoint searches for SoundCloud albums with optional filters. Pagination scraping is supported.",
    "list_user_comments_for_soundcloud_scraper": "This endpoint lists a user's comments.",
    "get_playlist_album_metadata_for_soundcloud_scraper": "This endpoint fetches full details of a playlist or album, including all track IDs.",
    "artist_albums_for_genius_song_lyrics": "Get artist albums",
    "hungary_songs_for_billboard_api": "Provide the Hungary Songs chart information",
    "top_country_artists_for_billboard_api": "Provide the Greatest of All Time Top Country Artists chart information",
    "youtube_global_countryid_timeframe_for_musicdata_api": "Weekly/Daily country Youtube chart for a specific country. Read external docs for more information",
    "get_track_metadata_1_3_quotas_for_soundcloud_scraper": "This endpoint fetches full details of a track on SoundCloud and helps you download uncut tracks of high and standard quality. (Tutorial: [How to Use Audio URLs](https://rapidapi.com/DataFanatic/api/soundcloud-scraper/tutorials/how-to-use-audio-urls))",
    "list_user_likes_tracks_playlists_for_soundcloud_scraper": "This endpoint lists tracks, playlists and albums liked by the specified user.",
    "user_details_for_genius_song_lyrics": "User Details",
    "search_for_genius_song_lyrics": "The search capability covers all content hosted on Genius (all songs).",
    "multi_search_for_genius_song_lyrics": "The multi search capability covers all content hosted on Genius (all sections).",
    "get_album_info_single_for_spotify_v2": "Get single Spotify album info",
    "billboard_global_200_for_billboard_api": "Provide the BILLBOARD GLOBAL 200 chart information",
    "hot_100_songs_for_billboard_api": "Provide the YEAR-END Hot 100 Songs chart information\n\nIf `year` is not supplied, will default to last year.",
    "spotify_toplist_for_musicdata_api": "Spotify most streamed songs/album .....",
    "hot_trending_songs_powered_by_twitter_for_billboard_api": "Provide the HOT TRENDING SONGS POWERED BY TWITTER chart information",
    "get_artists_for_spotify_web": "Get one or more artists",
    "artist_appears_on_for_spotify_web": "Get artist appears on albums (max 50)",
    "user_contributions_unreviewed_annotations_for_genius_song_lyrics": "User Contributions (unreviewed annotations)",
    "year_end_top_artists_female_for_billboard_api_v2": "Year end Top Top Artists \u2013 Female chart\nis yearly based. \n\nIf `year` is not supplied, will default to last year.",
    "year_end_top_artists_male_for_billboard_api_v2": "Year end Top Artists \u2013 Male chart\nis yearly based. \n\nIf `year` is not supplied, will default to last year.",
    "malaysia_songs_for_billboard_api_v2": "Malaysia Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week",
    "user_contributions_pyongs_for_genius_song_lyrics": "User Contributions (pyongs)",
    "user_contributions_q_a_for_genius_song_lyrics": "User Contributions (q&a)",
    "list_podcast_episodes_for_spotify_scraper": "This endpoint lists all episodes of a podcast.",
    "album_comments_for_genius_song_lyrics": "Album Comments",
    "web_page_referents_for_genius_song_lyrics": "Web Page Referents",
    "spotify_topartist_for_musicdata_api": "Spotify top artist by monthly listeners",
    "luxembourg_songs_for_billboard_api": "Provide the Luxembourg Songs chart information",
    "list_user_followings_for_soundcloud_scraper": "This endpoint lists users that follow the specified user.",
    "get_song_related_for_youtube_music_api_detailed_": "Gets related content for a song. Equivalent to the content shown in the \u201cRelated\u201d tab of the watch panel.",
    "properties_v3_get_commute_time_for_realty_in_us": "Get commute time to travel to a location",
    "properties_v2_list_similar_homes_deprecated_for_realty_in_us": "List similar properties for sale\n* This endpoint is deprecating, the official have changed to use .../properties/v2/list.... endpoints to list similar properties.",
    "properties_v3_get_surroundings_for_realty_in_us": "Get surroundings data around  a property",
    "v1_folderid_payments_for_sertifi_esignature_and_epayment": " ",
    "v1_folderid_invites_for_sertifi_esignature_and_epayment": " ",
    "type_for_phone_validator_api": "Returns phone number type (`fixed line`, `mobile`, `toll free`, etc); or `undefined` if the number is invalid or if there are no phone number type regular expressions for this country in metadata.",
    "agents_get_listings_for_realty_in_us": "Get agent's listings",
    "properties_list_sold_deprecated_for_realty_in_us": "List sold properties",
    "properties_list_similarities_deprecated_for_realty_in_us": "List similar properties",
    "list_numbers_for_calltrackingmetrics": "The numbers API allows you to search, purchase, and manage settings on each tracking number.",
    "unlock_for_catalogapi": "Unlocks a cart that has been locked via the cart_validate method.",
    "properties_v2_list_by_mls_deprecated_for_realty_in_us": "List properties by MLS ID",
    "properties_list_for_rent_deprecated_for_realty_in_us": "List properties for rent",
    "house_prices_get_historic_listings_for_zoopla_v2": "Get historic listings",
    "getbyregistrationnumber_for_agrofitdata": " ",
    "v1_folders_folderid_content_for_sertifi_esignature_and_epayment": " ",
    "remove_item_for_catalogapi": "Removes items from the cart.",
    "get_similar_apps_by_id_for_google_play": "Returns list of applications that is similar to a single application by its ID",
    "uk_letting_agents_for_zoopla": "UK letting agents",
    "uk_property_to_rent_for_zoopla": "UK property to rent",
    "new_homes_for_sale_for_zoopla": "New homes for sale",
    "delete_delete_a_webhook_for_calltrackingmetrics": "",
    "email_for_enrich": "Enrich data from person email",
    "track_order_for_catalogapi": "Tracks an order given an order number.",
    "schools_list_nearby_deprecated_for_realty_in_us": "List schools that are near the property",
    "properties_v3_detail_for_realty_in_us": "Get property detail information (include new Home Value feature)",
    "schools_list_for_realty_in_us": "List schools with options and filters",
    "list_all_bots_for_lemurbot": "Get a list of bots that are available to this user.\nThese will either be bots created by the user or 'locked' public bots which can be chatted to but not editted. (e.g. 1)",
    "get_a_conversation_for_lemurbot": "Get a specific conversation by it's id and view it's details",
    "list_all_bot_properties_for_lemurbot": "Get a list of bot properties that belong to bots created by the user (not locked bots).",
    "list_all_conversations_for_lemurbot": "Conversations are created between clients and bots.\nUsers can only view conversations between their clients and bots.",
    "statusforkeysentenceextraction_for_carbon_management": "Get results in details from the task id.",
    "list_all_category_groups_for_lemurbot": "Categories are organised into category groups. For example if you have a set of categories to handle questions on the weather these could be grouped into a category group called 'weather-categories'.\nYou are able to view your own category groups and locked category groups.\n'Locked' category groups are a master set of records available to link to your bots",
    "delete_url_for_whin": "This endpoint will erase the url you set to receive the whatsapps sent to whin. Learn how to use it on this [video](https://youtu.be/8WyG_becZXM).",
    "personal_listener_for_whin": "The response is an url that you have to use as a webhook destination at the origin service. The content sent to it will be routed as a message to a whatsapp group owned by the user, or to the user.\nLearn use-cases on these videos: [grafana alerts](https://youtu.be/RvVgg0qwNDk),[Shelly notifications](https://youtu.be/B6MLlBUkyvo), [synology notifications](https://youtu.be/zeAJNuXYqH4).",
    "scripts_inventory_parsed_for_signl4_critical_mobile_alerting": " ",
    "un_block_number_voice_service_for_2factor_authentication_india": "This endpoint is used to remove number from VOICE Blocklist",
    "fetchlocation_for_sim_based_location_tracking": "<p>This endpoint is for fetching location of a trip</p>\n<p><strong>Required Body Parameters</strong></p>\n\n<p><strong>Notes</strong></p>\n<ul>\n<li>Atleast one of the below three parameters should be passed</li>\n</ul>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>invoice</td>\n<td>No</td>\n<td> invoice received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>id</td>\n<td>No</td>\n<td> trip_id received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>lr_number</td>\n<td>No</td>\n<td> lr_number received in response of submit trip API</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>",
    "subscriptions_subscriptionid_prepaidtransactions_for_signl4_critical_mobile_alerting": " ",
    "categories_teamid_categoryid_subscriptions_for_signl4_critical_mobile_alerting": "Sample Request:\r\n            \r\n    GET /categories/cbb70402-1359-477f-ac92-0171cf2b5ff7/c0054336-cd89-4abf-882d-ba69b5adb25e/subscriptions\r\n    {\r\n    }",
    "message_list_for_zipwhip": "Retrieves messages for account. A start of 0 provides newest to oldest messages.",
    "message_read_for_zipwhip": "Marks the given message as read in Zipwhip's database.",
    "group_delete_for_zipwhip": "Delete the group. This is similar to deleting a contact, no message objects will be affected by deleting the group.",
    "getgroups_for_maytapi_whatsapp": "Sets the option for getting the acknowledge messages from the webhook to true or false.",
    "group_save_for_zipwhip": "Create a group. A named group is a unique set of contacts that are referenced similar to a contact  A group is defined as device:/xxxxxxxxxx/xx. After the :/, this is the phone number associated with the account you are sending messages under. The /xx is the id for the group.",
    "user_get_for_zipwhip": "Provides information about the logged in user or account associated with sessionKey passed in.",
    "teams_teamid_for_signl4_critical_mobile_alerting": " ",
    "alerts_alertid_for_signl4_critical_mobile_alerting": "Gets an alert by id.",
    "users_userid_image_for_signl4_critical_mobile_alerting": " ",
    "prepaid_balance_for_signl4_critical_mobile_alerting": " ",
    "teams_for_signl4_critical_mobile_alerting": " ",
    "webhooks_for_signl4_critical_mobile_alerting": "Returns a collection of defined outbound webhooks in the system.",
    "teams_teamid_memberships_for_signl4_critical_mobile_alerting": " ",
    "alerts_alertid_annotations_for_signl4_critical_mobile_alerting": "Get annotations of an alert by id.",
    "teams_teamid_schedules_scheduleid_for_signl4_critical_mobile_alerting": " ",
    "users_userid_for_signl4_critical_mobile_alerting": "Returns a user object with details such as his email address and duty information.",
    "group_get_for_zipwhip": "Retreive details about an existing group. This call can be used to review the members of the group."
}