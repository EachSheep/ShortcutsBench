{"URL": "62060", "query": "Can you provide me with the planetary overview for today? I'm curious to know which planet is dominant and what it signifies for my zodiac sign. Additionally, could you also give a brief description of the planetary alignment?", "api_names": ["Finish", "planetaryoverview_for_horostory", "hoscoscope_for_horostory", "games_by_platform_for_mmo_games", "straddle_for_stock_and_options", "getpdf_for_reword_pdf", "au_decode_for_vin_decoder_v4", "hesab_yarat_for_hesab", "reverse_search_by_image_for_webit_image_search", "jokes_categories_for__jokester", "user_story_highlight_metadata_for_instagram_data", "company_details_for_indeed", "pl_decode_for_vin_decoder_v4", "crypto_convert_for_currencies_and_countries", "getalltransactions_for_virtual_accounts_api", "realtoragentlist_for_realtor_api_for_real_estate_data", "fetch_restaurant_information_for_foodiefetch", "getuser_for_endpoint_monitor_tool"], "api_descs": {"Finish": "No description available.", "au_decode_for_vin_decoder_v4": "AU Decode", "company_details_for_indeed": "Crawl information for Indeed's Companies.", "crypto_convert_for_currencies_and_countries": "You can convert crypto currencies.", "fetch_restaurant_information_for_foodiefetch": "This endpoint allows users to retrieve menu location and ratings data for a specific restaurant. The user can send the name of the restaurant, preferably the full name with the city, to fetch data from the API.", "games_by_platform_for_mmo_games": "Insert platform, eg: pc, browser or all", "getalltransactions_for_virtual_accounts_api": "To get all transactions in organisation.", "getpdf_for_reword_pdf": " ", "getuser_for_endpoint_monitor_tool": "Gets and returns the current user data from the associated userId.", "hesab_yarat_for_hesab": "Yoxdur", "hoscoscope_for_horostory": "retrieve the horoscope for a specific sign and date", "jokes_categories_for__jokester": " ", "pl_decode_for_vin_decoder_v4": "PL Decode", "planetaryoverview_for_horostory": "get the Planetary Overview of the day", "realtoragentlist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`", "reverse_search_by_image_for_webit_image_search": "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint.", "straddle_for_stock_and_options": "Return options data in straddle format", "user_story_highlight_metadata_for_instagram_data": "Get user story highlight metadata from a direct url to a story"}, "aseqs": [{"api_name": "planetaryoverview_for_horostory", "api_action": "\nAction: planetaryoverview_for_horostory\nAction Input: {}", "api_reaction": null}, {"api_name": "planetaryoverview_for_horostory", "api_action": "\nAction: planetaryoverview_for_horostory\nAction Input: {}", "api_reaction": null}, {"api_name": "hoscoscope_for_horostory", "api_action": "\nAction: hoscoscope_for_horostory\nAction Input: {\n  \"date\": \"today\",\n  \"sign\": \"my_zodiac_sign\"\n}", "api_reaction": null}, {"api_name": "hoscoscope_for_horostory", "api_action": "\nAction: hoscoscope_for_horostory\nAction Input: {\n  \"date\": \"today\",\n  \"sign\": \"Aries\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"action": "Query planetary overview for today and provide information about the dominant planet, its significance for the user's zodiac sign, as well as brief planetary alignment details."}}, {"state": "generated_by_agent", "aseq": {"api_name": "planetaryoverview_for_horostory", "api_action": "\nAction: planetaryoverview_for_horostory\nAction Input: {}"}}, {"state": "generated_by_agent", "aseq": {"api_action": "\nAction: planetaryoverview_for_horostory\nAction Input: {}"}}, {"state": "generated_by_agent", "aseq": [{"api_name": "planetaryoverview_for_horostory", "api_action": "\nAction: planetaryoverview_for_horostory\nAction Input: {}"}, {"api_name": "hoscoscope_for_horostory", "api_action": "\nAction: hoscoscope_for_horostory\nAction Input: {\n  \"date\": \"today\",\n  \"sign\": \"my_zodiac_sign\"\n}"}]}, {"state": "generated_by_agent", "aseq": [{"api_name": "planetaryoverview_for_horostory", "api_action": "\nAction: planetaryoverview_for_horostory\nAction Input: {}"}, {"api_name": "hoscoscope_for_horostory", "api_action": "\nAction: hoscoscope_for_horostory\nAction Input: {\n  \"date\": \"today\",\n  \"sign\": \"my_zodiac_sign\"\n}"}]}]}
{"URL": "54737", "query": "I am developing a mobile app that requires unit conversion functionality. Can you suggest an API that can handle unit conversion for different categories like speed, temperature, and time? Additionally, it would be helpful if the API provides information about the available units for each category. Please let me know.", "api_names": ["info_for_unit_converter", "transform_units_using_the_get_method_for_unit_converter", "Finish", "get_products_in_category_for_my_store", "get_devices_by_brand_for_mobile_phones", "villains_for_superhero_search", "endpoint_1_for_my_api1", "caiso_for_caiso", "set_address_for_catalogapi", "list_by_equipment_for_exercisedb", "autocomplete_zipcodes_zip4_for_autocomplete_usa", "get_posts_2504660f_8ad6_4815_86e0_312cc593fe26_for_the_south_asian_express", "wnba_box_score_for_wnba_api", "word_of_the_day_for_urban_dictionary", "get_random_word_for_dicolink", "price_for_apfelpreise", "earnings_trend_for_stock_analysis", "listofallconstructorswithinaraceinayear_for_formula_1_fixed"], "api_descs": {"Finish": "No description available.", "autocomplete_zipcodes_zip4_for_autocomplete_usa": "Autocomplete USA Zipcodes-Zip4", "caiso_for_caiso": "Gets standard CAISO data", "earnings_trend_for_stock_analysis": "Get earnings trend.", "endpoint_1_for_my_api1": " ", "get_devices_by_brand_for_mobile_phones": "Params\n\n1. brand_id (required)\n2. page\n3. limit", "get_posts_2504660f_8ad6_4815_86e0_312cc593fe26_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.", "get_products_in_category_for_my_store": " ", "get_random_word_for_dicolink": "Get random word", "info_for_unit_converter": "info", "list_by_equipment_for_exercisedb": "Fetch exercises by type of equipment", "listofallconstructorswithinaraceinayear_for_formula_1_fixed": "This endpoint is to obtain a list of all constructors in a particular race(round) of a season(year)", "price_for_apfelpreise": "Get latest average price for manufacturer number", "set_address_for_catalogapi": "Adds a shipping address to the cart", "transform_units_using_the_get_method_for_unit_converter": "Transform Units Using The Get Method", "villains_for_superhero_search": "Return 20 random Villains", "wnba_box_score_for_wnba_api": "This endpoint returns the WNBA game box score data for a specified game.", "word_of_the_day_for_urban_dictionary": "Gets the Word of the Day for the past 10 days, including today."}, "aseqs": [{"api_name": "info_for_unit_converter", "api_action": "\nAction: info_for_unit_converter\nAction Input: {}", "api_reaction": null}, {"api_name": "transform_units_using_the_get_method_for_unit_converter", "api_action": "\nAction: transform_units_using_the_get_method_for_unit_converter\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "info_for_unit_converter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "transform_units_using_the_get_method_for_unit_converter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "info_for_unit_converter"}}]}
{"URL": "62764", "query": "I want to create a report on the performance of YouTube channels in a specific category. Can you give me an overview of the top 10 channels in terms of view count, like count, comment count, and subscriber count? Also, provide the average polarity score for the channels' videos.", "api_names": ["overview_of_channels_for_youtube_classification_api", "Finish", "measure_distance_for_tanzania_api", "track_list_album_for_spotify_downloader", "event_throw_throw_darts_for_flashlive_sports", "get_city_by_id_for_geography_v2", "player_info_for_transfermarkt_db", "latest_outcome_for_immersiverouletteapi", "generate_basic_direct_image_for_qr_code_generator", "national_team_statistics_for_sofascores", "raceresult_for_formula_1_fixed", "manage_alerts_for_cheapshark_game_deals"], "api_descs": {"Finish": "No description available.", "event_throw_throw_darts_for_flashlive_sports": "Get throw by throw (darts) by event ID", "generate_basic_direct_image_for_qr_code_generator": "Generates a QR code as a direct image with limited settings. (NOTE: doesn't show correctly in RapidAPI)", "get_city_by_id_for_geography_v2": "get city by id", "latest_outcome_for_immersiverouletteapi": "Last Spin data", "manage_alerts_for_cheapshark_game_deals": "Send an email containing a link to manage your alerts.", "measure_distance_for_tanzania_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Arusha to Dar es Salaam**", "national_team_statistics_for_sofascores": "Get player's stats by national teams", "overview_of_channels_for_youtube_classification_api": "GET Overview of channels", "player_info_for_transfermarkt_db": "Get player info. Name, image, shirt number, nationalities, market value, club", "raceresult_for_formula_1_fixed": "This endpoint gives the result for a specific race (round) in a season(year).\n\n\nIf the results for the specified race are not yet available the RaceTable element in the response will be empty.\n\n", "track_list_album_for_spotify_downloader": "Get track list from album"}, "aseqs": [{"api_name": "overview_of_channels_for_youtube_classification_api", "api_action": "\nAction: overview_of_channels_for_youtube_classification_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "overview_of_channels_for_youtube_classification_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "overview_of_channels_for_youtube_classification_api", "api_action": "{\"category\": \"specific\", \"limit\": 10}", "api_reaction": null}}]}
{"URL": "72506", "query": "I'm a journalist writing an article about the media industry in Cameroon. Can you provide me with the latest news articles related to media from the Instant Cameroon News API? I need the article title, publication time, description, category, source, and a link to the full article.", "api_names": ["Finish", "retrieve_data_for_instant_cameroon_news", "home_page_for_instant_cameroon_news", "matches_for_betway", "title_get_popular_movies_by_genre_deprecated_for_imdb", "wrestling_news_for_wrestling_api", "search_by_latitude_longitude_and_radius_for_usa_zip_codes_inside_radius", "status_for_jobtitle", "story_by_id_for_instagram_api", "v1_folderid_participants_for_sertifi_esignature_and_epayment", "supported_currencies_for_currency_converter_v2", "most_visited_for_cryptocurrency_markets", "6_daily_for_stockyapiexchange", "get_categories_for_asdfadsf", "getslots_for_mybooky_demo"], "api_descs": {"6_daily_for_stockyapiexchange": "This feature provides up-to-date information about a stock's performance during a trading day. It includes the stock's opening and closing prices, as well as its high, low, and trading volume for the day.", "Finish": "No description available.", "get_categories_for_asdfadsf": " ", "getslots_for_mybooky_demo": " ", "home_page_for_instant_cameroon_news": "Home and Welcome page that introduces the API", "matches_for_betway": "Latest Matches for Betway", "most_visited_for_cryptocurrency_markets": "Most visited cryptocurrencies today.", "retrieve_data_for_instant_cameroon_news": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range", "search_by_latitude_longitude_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude.", "status_for_jobtitle": "", "story_by_id_for_instagram_api": "Gets a story by Id", "supported_currencies_for_currency_converter_v2": "get a list of currencies we support", "title_get_popular_movies_by_genre_deprecated_for_imdb": "Get popular movies by genre\n* This endpoints is deprecated, use .../title/v2/get-popular-movies-by-genre instead", "v1_folderid_participants_for_sertifi_esignature_and_epayment": " ", "wrestling_news_for_wrestling_api": "This will give you the most up to date results for wrestling matches."}, "aseqs": [{"api_name": "home_page_for_instant_cameroon_news", "api_action": "\nAction: home_page_for_instant_cameroon_news\nAction Input: {}", "api_reaction": null}, {"api_name": "retrieve_data_for_instant_cameroon_news", "api_action": "\nAction: retrieve_data_for_instant_cameroon_news\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "retrieve_data_for_instant_cameroon_news"}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieve_data_for_instant_cameroon_news", "api_action": "{\"page\": 1, \"search_key\": \"media\", \"data_range\": \"recent\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieve_data_for_instant_cameroon_news", "api_action": "\nAction: retrieve_data_for_instant_cameroon_news\nAction Input: {}", "api_reaction": null}}]}
{"URL": "20820", "query": "I'm looking for house plants for a wedding decoration project. Can you suggest some flowering plants that are suitable for indoor environments? It would be great to know their temperature requirements, ideal light conditions, and watering needs.", "api_names": ["get_by_category_for_house_plants", "Finish", "get_all_verse_of_chapter_by_chapter_id_for_bhagavad_gita_v3", "social_media_news_in_spanish_for_onelike", "search_term_for_trw_news", "getforecastweather_for_openweather", "headphones_for_amazon_api_v2", "countries_list_for_city_and_state_search_api", "authorfinder_for_tomba", "get_the_continents_for_location", "get_all_news_on_pollution_for_pollution_news_api", "categories_list_for_asos"], "api_descs": {"Finish": "No description available.", "authorfinder_for_tomba": "This API endpoint generates or retrieves the most likely email address from a blog post url.", "categories_list_for_asos": "List categories from Asos", "countries_list_for_city_and_state_search_api": "This endpoint returns a list of countries.", "get_all_news_on_pollution_for_pollution_news_api": "This endpoint would return all news on pollution in african countries available in our database.", "get_all_verse_of_chapter_by_chapter_id_for_bhagavad_gita_v3": "Get all verse of chapter by chapter id", "get_by_category_for_house_plants": "Get plants by their category.", "get_the_continents_for_location": "Get the continents.", "getforecastweather_for_openweather": " ", "headphones_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required", "search_term_for_trw_news": "search term", "social_media_news_in_spanish_for_onelike": "Get social media news in Spanish"}, "aseqs": [{"api_name": "get_by_category_for_house_plants", "api_action": "\nAction: get_by_category_for_house_plants\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_category_for_house_plants"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_category_for_house_plants"}}]}
{"URL": "55829", "query": "Hey there! I've been playing Wordle and I'm stuck on today's puzzle. Can you help me out by giving me the solution for today's Wordle game? Also, I'm curious about all the past solutions. Can you provide me with the historical answers? Thanks a bunch!", "api_names": ["all_solutions_for_wordle_answers_solutions", "today_for_wordle_answers_solutions", "Finish", "custom_for_seeding_data", "list_of_nominated_books_for_a_genre_in_a_year_for_hapi_books", "historical_rates_for_commodity_rates_api", "canvas_episodes_list_for_webtoon", "schedule_for_baseball", "get_balance_for_pancakeswap_api", "lastest_drawing_for_cash4life", "password_generation_for_explorarc_s_password_generation_api", "web_chain_details_for_open_defi"], "api_descs": {"Finish": "No description available.", "all_solutions_for_wordle_answers_solutions": "Calling this endpoint you will get all the historical solutions of the Wordle game", "canvas_episodes_list_for_webtoon": "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "custom_for_seeding_data": "Get 100 rows with first name, last name, country, birthday, email and vat", "get_balance_for_pancakeswap_api": "Get token balance of specific address.", "historical_rates_for_commodity_rates_api": "Historical rates are available for most symbols all the way back to the year 2021. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.\n\nNote: All the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD", "lastest_drawing_for_cash4life": "Get the latest, and last winning Cash4Life winning number set.", "list_of_nominated_books_for_a_genre_in_a_year_for_hapi_books": "For a certain year and a genre, get the list of all nominated books to win an award.", "password_generation_for_explorarc_s_password_generation_api": "The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords", "schedule_for_baseball": "Baseball schedule", "today_for_wordle_answers_solutions": "Calling this endpoint you will todays solution.", "web_chain_details_for_open_defi": " "}, "aseqs": [{"api_name": "today_for_wordle_answers_solutions", "api_action": "\nAction: today_for_wordle_answers_solutions\nAction Input: {}", "api_reaction": null}, {"api_name": "all_solutions_for_wordle_answers_solutions", "api_action": "\nAction: all_solutions_for_wordle_answers_solutions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "today_for_wordle_answers_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_solutions_for_wordle_answers_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "today_for_wordle_answers_solutions"}}]}
{"URL": "42474", "query": "I'm organizing a company event in Thailand and I need to gather data about the districts and subdistricts in the country. Can you give me a detailed list of all the districts and subdistricts, along with their respective codes? It would be helpful for our event planning.", "api_names": ["province_for_provinces_of_thailand", "district_for_provinces_of_thailand", "subdistrict_for_provinces_of_thailand", "Finish", "general_info_for_covid_italy_statistics", "prematchform_for_cricketapi2", "gettopics_for_a_i_smartable", "see_about_the_prices_of_the_cryptos_for_crypto_currency_scraper_api", "gettopsportmenu_for_sport_odds", "business_email_compromise_bec_api_for_business_email_compromise_bec_api\t", "validatetest_for_phonenumbervalidate", "get_user_s_diet_for_bespoke_diet_generator", "get_coupons_for_get_promo_codes", "auto_complete_for_wayfair", "liste_des_pays_villes_quartiers_secteurs_et_localit_s_for_digixpress", "store_location_for_walmart_v2", "api_getvisits_for_similarweb_historical_data_", "v2_auto_complete_for_sephora", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api", "volume_weighted_average_price_vwap_for_qvantana"], "api_descs": {"Finish": "No description available.", "api_getvisits_for_similarweb_historical_data_": "Return visits data", "auto_complete_for_wayfair": "Get auto suggestions by term or phrase", "business_email_compromise_bec_api_for_business_email_compromise_bec_api\t": "This API protect your business from Business email compromise (BEC), \nit takes email and returns  keys risk indicators such as : email\nvalidation, blacklisted, phishing, dmarc seurity,  spoofing risk, malicious activity.", "district_for_provinces_of_thailand": "อำเภอ : districts", "general_info_for_covid_italy_statistics": "General information of service", "get_coupons_for_get_promo_codes": "Get Coupons", "get_user_s_diet_for_bespoke_diet_generator": "Return the diet configuration and the diet plan for each day.", "gettopics_for_a_i_smartable": "Get artificial intelligence topics.", "gettopsportmenu_for_sport_odds": "GetTopSportMenu data api", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api": "Get list of available telephone numbers for a country and given prefix", "liste_des_pays_villes_quartiers_secteurs_et_localit_s_for_digixpress": "Base de localisation.", "prematchform_for_cricketapi2": "Get pre-match form information for a specific cricket match.", "province_for_provinces_of_thailand": "จังหวัด", "see_about_the_prices_of_the_cryptos_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top crypto currencies including names and prices even rank and more!", "store_location_for_walmart_v2": "Get detailed Walmart store locations (phone number and address) by specifying the zip code.", "subdistrict_for_provinces_of_thailand": "ตำบล : subdistricts", "v2_auto_complete_for_sephora": "Get suggestions by term or phrase", "validatetest_for_phonenumbervalidate": "Validate any phone number from any country. For testing purposes only.", "volume_weighted_average_price_vwap_for_qvantana": "Volume Weighted Average Price (VWAP) indicator"}, "aseqs": [{"api_name": "district_for_provinces_of_thailand", "api_action": "\nAction: district_for_provinces_of_thailand\nAction Input: {}", "api_reaction": null}, {"api_name": "subdistrict_for_provinces_of_thailand", "api_action": "\nAction: subdistrict_for_provinces_of_thailand\nAction Input: {}", "api_reaction": null}, {"api_name": "province_for_provinces_of_thailand", "api_action": "\nAction: province_for_provinces_of_thailand\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "The user needs information about districts and subdistricts in Thailand along with their codes. The district_for_provinces_of_thailand API can provide us the name of districts, but we need the subdistricts too.", "api_name": "district_for_provinces_of_thailand"}}, {"state": "generated_by_agent", "aseq": {"api_name": "subdistrict_for_provinces_of_thailand"}}, {"state": "generated_by_agent", "aseq": {"api_name": "province_for_provinces_of_thailand"}}, {"state": "generated_by_agent", "aseq": {"api_name": "district_for_provinces_of_thailand"}}]}
{"URL": "83729", "query": "I'm doing a research project on the music industry and I need some comprehensive data. Can you fetch the greatest of all time songs of the summer chart? I would like to know the top 10 songs and their rankings. Additionally, could you provide the greatest of all time artists chart? It would be great to analyze the artists who have consistently dominated the summer charts.", "api_names": ["greatest_of_all_time_songs_of_the_summer_for_billboard_v2", "greatest_of_all_time_artists_for_billboard_v2", "Finish", "test_for_test_v3", "user_followers_for_twitter_data", "listopened_for_ordering", "get_ontology_balance_for_cryptocurrency_balance", "searchplayer_for_player_data", "tweet_user_favoriters_continuation_for_twitter", "view_request_headers_and_body_for_pe_demo", "daily_forecast_5_days_for_easy_weather", "getbydate_for_earningsdata", "scrape_for_amazon_product_scraper_api_full_page_scraping", "getchannelvideos_for_vimeo", "search_for_webit_image_search", "year_end_top_artists_for_billboard_v2", "gen_image_for_thai_lottery_result_image", "review_for_worldwide_recipes"], "api_descs": {"Finish": "No description available.", "daily_forecast_5_days_for_easy_weather": "Get a 5-day daily forecast for the given latitude and longitude.", "gen_image_for_thai_lottery_result_image": "Gen Image", "get_ontology_balance_for_cryptocurrency_balance": "This endpoint will return back the Ontology balance of an address", "getbydate_for_earningsdata": "Get earnings data by date.", "getchannelvideos_for_vimeo": "Get a list of the videos in a channel.", "greatest_of_all_time_artists_for_billboard_v2": "Get the Greatest of All Time Artists chart.", "greatest_of_all_time_songs_of_the_summer_for_billboard_v2": "Get the Greatest of All Time Songs of the Summer chart.", "listopened_for_ordering": "Get opened orders for user.", "review_for_worldwide_recipes": "Get reviews", "scrape_for_amazon_product_scraper_api_full_page_scraping": "Data scrape for an amazon product listing page", "search_for_webit_image_search": "Webit Image Search API provides you a powerful endpoint to search billions of images from the world wide web featuring rating, reverse search by image and multi-lingual capabilities.", "searchplayer_for_player_data": "<br /><br />\n<b>Authentication:</b> not required", "test_for_test_v3": "this is test", "tweet_user_favoriters_continuation_for_twitter": "This endpoint returns the next list of user who favorited the tweet", "user_followers_for_twitter_data": "user-followers", "view_request_headers_and_body_for_pe_demo": "View the request headers and body in JSON format.", "year_end_top_artists_for_billboard_v2": "Get the Year-End Top Artists chart."}, "aseqs": [{"api_name": "greatest_of_all_time_songs_of_the_summer_for_billboard_v2", "api_action": "\nAction: greatest_of_all_time_songs_of_the_summer_for_billboard_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "greatest_of_all_time_artists_for_billboard_v2", "api_action": "\nAction: greatest_of_all_time_artists_for_billboard_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "greatest_of_all_time_songs_of_the_summer_for_billboard_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "greatest_of_all_time_artists_for_billboard_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "greatest_of_all_time_songs_of_the_summer_for_billboard_v2"}}]}
{"URL": "21342", "query": "I'm a food blogger and I'm looking for trending recipes. Can you provide me with the most popular recipe articles? Additionally, I would like to extract the content from a specific URL that features a unique recipe for a chocolate cake.", "api_names": ["get_trending_for_url_content_extractor", "search_content_for_url_content_extractor", "Finish", "get_raids_for_lost_ark", "get_brandlist_by_siteid_zappos_1_6pm_2_for_zappos_2022", "get_all_restaurants_locations_by_state_for_restaurants_near_me_usa", "webchain_for_webchain", "retrieve_bundles_for_opensea_v2", "jokes_search_for_chuck_norris", "get_all_state_names_for_fast_food_restaurants_usa_top_50_chains", "channel_channels_for_youtube_data", "pools_for__all_in_one_crypto_swiss_knife_"], "api_descs": {"Finish": "No description available.", "channel_channels_for_youtube_data": "channel-channels", "get_all_restaurants_locations_by_state_for_restaurants_near_me_usa": "GET all Restaurants locations by state", "get_all_state_names_for_fast_food_restaurants_usa_top_50_chains": "GET all {State} names", "get_brandlist_by_siteid_zappos_1_6pm_2_for_zappos_2022": "GET BrandList by siteId (zappos =1, 6pm=2)", "get_raids_for_lost_ark": "Endpoint to get all guardian raids", "get_trending_for_url_content_extractor": "This will return a list of news articles that are trending.", "jokes_search_for_chuck_norris": "Free text search", "pools_for__all_in_one_crypto_swiss_knife_": "Get DeFi pools\nYou can get id from /protocols endpoint.", "retrieve_bundles_for_opensea_v2": "Bundles are groups of NFTs for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the NFTs inside.", "search_content_for_url_content_extractor": "Allows you to search content for content based on a query.", "webchain_for_webchain": "WEBCHAIN: A Blockchain for DApps, Secured via Websites"}, "aseqs": [{"api_name": "get_trending_for_url_content_extractor", "api_action": "\nAction: get_trending_for_url_content_extractor\nAction Input: {}", "api_reaction": null}, {"api_name": "search_content_for_url_content_extractor", "api_action": "\nAction: search_content_for_url_content_extractor\nAction Input: {\n  \"query\": \"chocolate cake recipe\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}]}
{"URL": "47214", "query": "I'm organizing a virtual conference on COVID-19 and I need the latest news articles related to the topic. Can you fetch the most recent articles? Additionally, I would like to know the total confirmed cases, deaths, and recovered cases worldwide.", "api_names": ["getnews_for_coronavirus_smartable", "getstats_for_coronavirus_smartable", "Finish", "9p_for_dxjewof", "airports_for_database_of_airports_api", "rising_popular_posts_for_reddit", "auto_complete_for_idealista_v2", "osay_for_us_presidential_election", "titles_with_changed_details_for_watchmode", "text_qr_code_for_scanova_qr_code", "getproducts_for_cartify", "domain_for_mailcheck", "fetch_events_for_calendars", "list_project_s_assets_for_walletapi_cloud", "title_get_most_popular_tv_shows_for_imdb"], "api_descs": {"9p_for_dxjewof": "0o", "Finish": "No description available.", "airports_for_database_of_airports_api": "Get data about global airports by providing the IATA code.", "auto_complete_for_idealista_v2": "Get auto complete suggestion by term or phrase", "domain_for_mailcheck": "Check if a domain is disposable", "fetch_events_for_calendars": "Fetches a list of events in either JSON or iCalendar format for the selected calendar", "getnews_for_coronavirus_smartable": "Get the latest coronavirus news for the globe or your selected country or state.", "getproducts_for_cartify": "This endpoint gets all products in the database.\n\nA list of products in the store, with the following attributes:\n\nid (integer): The unique identifier for the product.\ntitle (string): The name of the product.\ncategory (string): A description of the product.\nprice (number): The price of the product.\nimage_url (string): A URL to an image of the product.", "getstats_for_coronavirus_smartable": "Get the latest and historic coronavirus stats data (confirmed cases, deaths and recovered cases) for the globe or your selected country or state.", "list_project_s_assets_for_walletapi_cloud": "Obtain a list of assets for a project.", "osay_for_us_presidential_election": "Returns JSON block of results for One State, All Years (OSAY), for the specified US Presidential Election year (i.e., Illinois).", "rising_popular_posts_for_reddit": "Rising Popular Posts", "text_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with specified text. When scanned, the QR Code prompts the scanning device to display the text.", "title_get_most_popular_tv_shows_for_imdb": "Get most popular TV shows", "titles_with_changed_details_for_watchmode": "Get a listing of titles that have had a change to their basic details (overview, cast, genres, ratings, etc) within the date range."}, "aseqs": [{"api_name": "getnews_for_coronavirus_smartable", "api_action": "\nAction: getnews_for_coronavirus_smartable\nAction Input: {\n  \"location\": \"global\"\n}", "api_reaction": null}, {"api_name": "getstats_for_coronavirus_smartable", "api_action": "\nAction: getstats_for_coronavirus_smartable\nAction Input: {\n  \"location\": \"global\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getnews_for_coronavirus_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getstats_for_coronavirus_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnews_for_coronavirus_smartable"}}]}
{"URL": "6851", "query": "My friend wants to know if a particular file 'image.jpg' exists in his cloud storage. Can you check if the file exists? Also, verify if the storage exists.", "api_names": ["Finish", "storageexists_for_groupdocs_merger_cloud", "objectexists_for_groupdocs_merger_cloud", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car", "marks_men_points_for_scoring_tables_api", "game_details_for_allscores", "tone_for_typography", "loginuser_for_petstoreapi2_0", "title_cast_crew_for_watchmode", "anime_img_for_any_anime", "ss_for_beeg", "query_joke_using_id_for_anime_jokes", "liked_posts_for_kwai", "extract_sitemap_xml_as_json_for_seo_automations", "product_offers_for_real_time_amazon_data", "fetchschemecategoriesbyschemetype_for_latest_mutual_fund_nav", "codes_for_postali", "storageexists_for_groupdocs_watermark_cloud"], "api_descs": {"Finish": "No description available.", "anime_img_for_any_anime": "Show only the image from the api on your browser .", "codes_for_postali": "Search by code ej. 66446", "extract_sitemap_xml_as_json_for_seo_automations": "Are you looking for an API that can quickly and easily download and parse sitemap.xml files into JSON format? Look no further! Our API allows you to make a simple GET request, passing in the URL of a sitemap.xml file as a parameter. The API will handle the rest, downloading the file, parsing it into a JSON object, and returning the result in the response. And if you need a little extra information to help organize and navigate the URLs in the sitemap, we've got you covered there too. By adding a query parameter to the GET request, you can also include category and breadcrumb information for each URL in the parsed sitemap. Give it a try and see how much easier working with sitemaps can be!", "fetchschemecategoriesbyschemetype_for_latest_mutual_fund_nav": "Fetch Scheme Categories By Scheme Type", "game_details_for_allscores": "Get game details.", "liked_posts_for_kwai": "Liked Posts API", "loginuser_for_petstoreapi2_0": "", "marks_men_points_for_scoring_tables_api": "This retrieves the men's marks for the point value given as a parameter (0-1400).", "objectexists_for_groupdocs_merger_cloud": " ", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car": "Pluses and minuses of the car", "product_offers_for_real_time_amazon_data": "Get top 10 offers of a specific product on Amazon by its asin, the first offer in the list is the pinned offer returned by the **Search** endpoint. Supports filtering by product condition.", "query_joke_using_id_for_anime_jokes": "Search anime joke using joke ID", "ss_for_beeg": "ss", "storageexists_for_groupdocs_merger_cloud": " ", "storageexists_for_groupdocs_watermark_cloud": " ", "title_cast_crew_for_watchmode": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.", "tone_for_typography": " "}, "aseqs": [{"api_name": "objectexists_for_groupdocs_merger_cloud", "api_action": "\nAction: objectexists_for_groupdocs_merger_cloud\nAction Input: {\n  \"path\": \"/image.jpg\"\n}", "api_reaction": null}, {"api_name": "objectexists_for_groupdocs_merger_cloud", "api_action": "\nAction: objectexists_for_groupdocs_merger_cloud\nAction Input: {\n  \"path\": \"/image.jpg\",\n  \"storagename\": \"cloud_storage\"\n}", "api_reaction": null}, {"api_name": "storageexists_for_groupdocs_merger_cloud", "api_action": "\nAction: storageexists_for_groupdocs_merger_cloud\nAction Input: {\n  \"storagename\": \"cloud_storage\"\n}", "api_reaction": null}, {"api_name": "storageexists_for_groupdocs_merger_cloud", "api_action": "\nAction: storageexists_for_groupdocs_merger_cloud\nAction Input: {\n  \"storagename\": \"cloud_storage\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_groupdocs_merger_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_groupdocs_watermark_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_groupdocs_merger_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "objectexists_for_groupdocs_merger_cloud", "api_action": "\nAction: objectexists_for_groupdocs_merger_cloud\nAction Input: {\n  \"path\": \"/image.jpg\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "objectexists_for_groupdocs_merger_cloud", "api_action": "\nAction: objectexists_for_groupdocs_merger_cloud\nAction Input: {\n  \"path\": \"/image.jpg\"\n}", "api_reaction": null}}]}
{"URL": "22728", "query": "I'm a researcher studying global time zones. Can you provide me with a list of time zones, including their zone names, time zone names, GMT offsets, and abbreviations? Also, include the countries associated with each time zone.", "api_names": ["Finish", "get_time_zones_for_world_country", "get_holidays_for_location_and_time", "bearish_harami_for_barpatterns", "text_for_ai_writer", "get_countries_by_sport_for_viperscore", "matches_v2_get_statistics_for_livescore_v2", "json_rpc_boolean_format_for_test_v2"], "api_descs": {"Finish": "No description available.", "bearish_harami_for_barpatterns": "List of stocks having Bearish Harami signal.", "get_countries_by_sport_for_viperscore": "With \"Get countries by sport\" you'll receive all countries with specific sport ids which ever supports the sport you've searched.", "get_holidays_for_location_and_time": "List holidays for the specified country and year.", "get_time_zones_for_world_country": "Get Time Zone list", "json_rpc_boolean_format_for_test_v2": "JSON RPC response format with single field of type boolean", "matches_v2_get_statistics_for_livescore_v2": "Get statistics of a match", "text_for_ai_writer": "Generate content"}, "aseqs": [{"api_name": "get_time_zones_for_world_country", "api_action": "\nAction: get_time_zones_for_world_country\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_time_zones_for_world_country"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_time_zones_for_world_country"}}]}
{"URL": "21995", "query": "I'm an activist advocating for LGBTQ+ rights and need to gather news articles related to LGBTQ+ from various sources. Can you provide me with the most recent articles, including the titles, URLs, and sources? It would be great to have news articles specifically from Gay Times as well.", "api_names": ["get_all_lgbtq_news_for_lgbtq_world_news_live", "get_individual_news_from_source_for_lgbtq_world_news_live", "Finish", "get_imbuements_for_precision_distance_skillboost_for_tibia_items", "article_page_for_climate_news_feed", "regions_for_streamlinewatch_streaming_guide", "get_user_for_hello_world", "measure_distance_for_egypt_api", "markets_global_indices_for_seeking_alpha_finance", "channel_for_youtube_v3_alternative", "get_currency_for_countries", "history_for_currencyapi_net", "femalefighterimageplaceholder_for_mmaapi", "list_of_properties_by_url_for_zillow", "get_user_orders_for__demo_project_v13"], "api_descs": {"Finish": "No description available.", "article_page_for_climate_news_feed": "Get articles in pages", "channel_for_youtube_v3_alternative": "Get Channel details and videos", "femalefighterimageplaceholder_for_mmaapi": "Get female fighter placeholder image", "get_all_lgbtq_news_for_lgbtq_world_news_live": "This endpoint will return back all news about LGBTQ+ from all over the world.", "get_currency_for_countries": "This gets currency data on a country. Use ISO2 for country_code.", "get_imbuements_for_precision_distance_skillboost_for_tibia_items": "This enpoint will get all imbuement for type Precision\n\nPrecision (Distance Skillboost)\nElven Scouting Glass \nElven Hoof \nMetal Spike", "get_individual_news_from_source_for_lgbtq_world_news_live": "Get News about LGBTQ+ from a specific news resource.", "get_user_for_hello_world": "get user by id", "get_user_orders_for__demo_project_v13": " ", "history_for_currencyapi_net": "Display the currency conversions historical rates for a particular day", "list_of_properties_by_url_for_zillow": "Get a list of properties by providing the zillow search results URL", "markets_global_indices_for_seeking_alpha_finance": "Get global indices", "measure_distance_for_egypt_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Alexandria and Cairo**", "regions_for_streamlinewatch_streaming_guide": "Retrieve the list of regions covered by the API"}, "aseqs": [{"api_name": "get_all_lgbtq_news_for_lgbtq_world_news_live", "api_action": "\nAction: get_all_lgbtq_news_for_lgbtq_world_news_live\nAction Input: {}", "api_reaction": null}, {"api_name": "get_individual_news_from_source_for_lgbtq_world_news_live", "api_action": "\nAction: get_individual_news_from_source_for_lgbtq_world_news_live\nAction Input: {\n  \"newspaperid\": \"thetimes-gaytimes\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_from_source_for_lgbtq_world_news_live", "api_action": "\nAction: get_individual_news_from_source_for_lgbtq_world_news_live\nAction Input: {\n  \"newspaperid\": \"gaytimes\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_from_source_for_lgbtq_world_news_live", "api_action": "\nAction: get_individual_news_from_source_for_lgbtq_world_news_live\nAction Input: {\n  \"newspaperid\": \"gaytimes\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_from_source_for_lgbtq_world_news_live", "api_action": "\nAction: get_individual_news_from_source_for_lgbtq_world_news_live\nAction Input: {\n  \"newspaperid\": \"gaytimes\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": Based on the user query, I need to fetch recent news articles related to LGBTQ+ rights from various sources including Gay Times. I will use the 'get_all_lgbtq_news_for_lgbtq_world_news_live' API to fulfill this request as it covers multiple sources and the user's requirements.\n\t\"api_name\": \"get_all_lgbtq_news_for_lgbtq_world_news_live\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_lgbtq_news_for_lgbtq_world_news_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_lgbtq_news_for_lgbtq_world_news_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_lgbtq_news_for_lgbtq_world_news_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_lgbtq_news_for_lgbtq_world_news_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_lgbtq_news_for_lgbtq_world_news_live"}}]}
{"URL": "34576", "query": "I need some inspiration for my next blog post. Can you fetch a random quote and provide me with the author's name? Additionally, I would like to know the quote of the day to include in my post.", "api_names": ["random_quotes_for_quotes_v2", "get_available_authors_for_quotes_v2", "quote_of_the_day_for_quotes_v2", "Finish", "india_timeline_data_starting_from_30th_jan_2020_for_corona_virus_world_and_india_data", "search_by_engine_for_airplanesdb", "get_pokemon_data_by_name_for_pokemon_unite_pokemons", "players_at_position_for_national_football_players", "sizes_all_countries_for_africa_api_", "get_sender_id_for_rivet_sms", "1_3_get_info_day_for_working_days", "predictions_for_football_prediction", "get_the_news_in_swahili_for_kenyan_news_api", "generate_for_qr_generator_api", "api_auditores_roac_roac_sociedad_for_roac", "get_search_results_from_amazon_for_h30_e_commerce_data_scraper", "auto_complete_for_twitter", "get_sku_for_taobao_tmall_product_detail", "rtrt_for_hello_v2", "airports_direct_routes_for_an_airport_for_timetable_lookup_"], "api_descs": {"1_3_get_info_day_for_working_days": "Get detailed information about a specific day.", "Finish": "No description available.", "airports_direct_routes_for_an_airport_for_timetable_lookup_": "Returns a list of direct routes for an airport", "api_auditores_roac_roac_sociedad_for_roac": "asd", "auto_complete_for_twitter": "this returns  auto complete result in twitter search.", "generate_for_qr_generator_api": "Generate HTML image-tag with base64-image-string as QR code of input text (Query Parameter)", "get_available_authors_for_quotes_v2": "Returns list of available authors", "get_pokemon_data_by_name_for_pokemon_unite_pokemons": "Get Pokemon data sing the pokemon name", "get_search_results_from_amazon_for_h30_e_commerce_data_scraper": "Get Search Results from Amazon", "get_sender_id_for_rivet_sms": "Get the list of all Sender ID that are registered for your account to send SMS.", "get_sku_for_taobao_tmall_product_detail": "Get SKU, Price, Propperties Image", "get_the_news_in_swahili_for_kenyan_news_api": "This request will return the news articles in swahili language", "india_timeline_data_starting_from_30th_jan_2020_for_corona_virus_world_and_india_data": "India timeline data", "players_at_position_for_national_football_players": "Returns all of the players at specified position. Only use abbreviated position names for position (i.e. QB, RB, WR, etc). See list of current positions @ /position", "predictions_for_football_prediction": "This endpoint returns a list of the football predictions scheduled to start in the next 48hours. URL parameters can be specified to show past predictions or to filter by federation and prediction market.", "quote_of_the_day_for_quotes_v2": "Returns Quote of the Day", "random_quotes_for_quotes_v2": "Get a Random Quote on Each Request", "rtrt_for_hello_v2": "uuyu", "search_by_engine_for_airplanesdb": "Get all airplanes by engine keyword.", "sizes_all_countries_for_africa_api_": "Gets the sizes of all countries in Africa\nTakes parameter: <country_name> with value <all>\nResponse example:\n[54 items\n0:{3 items\n\"size\":2381741\n\"unit\":\"km2\"\n\"country\":\"Algeria\"\n}\n]"}, "aseqs": [{"api_name": "random_quotes_for_quotes_v2", "api_action": "\nAction: random_quotes_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "quote_of_the_day_for_quotes_v2", "api_action": "\nAction: quote_of_the_day_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "get_available_authors_for_quotes_v2", "api_action": "\nAction: get_available_authors_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "random_quotes_for_quotes_v2", "api_action": "\nAction: random_quotes_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "quote_of_the_day_for_quotes_v2", "api_action": "\nAction: quote_of_the_day_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_quotes_for_quotes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "quote_of_the_day_for_quotes_v2", "api_action": "\nAction: quote_of_the_day_for_quotes_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_available_authors_for_quotes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_available_authors_for_quotes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_available_authors_for_quotes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_available_authors_for_quotes_v2"}}]}
{"URL": "8462", "query": "Is it possible to search for Reddit posts related to fitness? I'm interested in posts from the subreddit 'fitness' that mention the term 'workout' and have a score higher than 300. Additionally, I want to find comments from the subreddit 'exercise' that have a score higher than 50. Please provide me with the URLs of the posts and the bodies of the comments.", "api_names": ["post_search_for_socialgrep", "comment_search_for_socialgrep", "Finish", "teamraces_for_motorsportapi", "auto_complete_for_idealista_v2", "matchdetails_for_icehockeyapi", "getlist_for_ordering", "properties_get_hotel_photos_deprecated_for_hotels", "search_by_coordinates_for_zillow_data_v2", "list_artist_concerts_for_theclique", "flightslogic_flight_api_for_flightslogic_flight", "all_countries_names_for_countries_population", "get_all_feed_for_all_crypto_news_feed", "list_employers_for_adzuna", "get_company_quarterly_income_statement_for_finance_data"], "api_descs": {"Finish": "No description available.", "all_countries_names_for_countries_population": "Returns all countries english full names. Useful when need to know wich country names to search for.", "auto_complete_for_idealista_v2": "Get auto complete suggestion by term or phrase", "comment_search_for_socialgrep": "Searches Reddit comments.", "flightslogic_flight_api_for_flightslogic_flight": "FlightsLogic provides Flight API integration within your new or existing online travel website. Flight API integration connects travel agents and customers across the globe, extensively broadening your market reach. We deliver Flight API Integration Solution- one of the most reliable and most trusted Global Distribution Systems (GDS), that helps the travel portals get the best service suppliers by their side to broadcast their effective services at the portal and that successively can bring vast website traffic as well.", "get_all_feed_for_all_crypto_news_feed": "Returns all feed.\nTweets\nBlogs\nBinance\nUsGov", "get_company_quarterly_income_statement_for_finance_data": "Get Company Income Statement", "getlist_for_ordering": "Get paginated list of orders. This endpoint is compatible with React AdminOnRest framework to provide DataSource.", "list_artist_concerts_for_theclique": "Enter Artist ID", "list_employers_for_adzuna": "List the employers with most jobs advertised.", "matchdetails_for_icehockeyapi": "Get detailed information for a specific ice hockey match by providing the match ID.", "post_search_for_socialgrep": "Searches Reddit posts.", "properties_get_hotel_photos_deprecated_for_hotels": "Get all available photos of property", "search_by_coordinates_for_zillow_data_v2": "Search by coordinates", "teamraces_for_motorsportapi": "Get races for a specific Motorsport team during a stage season."}, "aseqs": [{"api_name": "post_search_for_socialgrep", "api_action": "\nAction: post_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/fitness workout\"\n}", "api_reaction": null}, {"api_name": "comment_search_for_socialgrep", "api_action": "\nAction: comment_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/exercise\",\n  \"after\": 50\n}", "api_reaction": null}, {"api_name": "post_search_for_socialgrep", "api_action": "\nAction: post_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/fitness workout\"\n}", "api_reaction": null}, {"api_name": "comment_search_for_socialgrep", "api_action": "\nAction: comment_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/exercise\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "post_search_for_socialgrep"}}, {"state": "generated_by_agent", "aseq": {"api_name": "post_search_for_socialgrep", "api_action": "\nAction: post_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/fitness workout score:>300\",\n  \"limit\": 10,\n  \"subreddit\": \"fitness\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "post_search_for_socialgrep", "api_action": "\nAction: post_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/fitness workout\",\n  \"after\": 300\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "post_search_for_socialgrep", "api_action": "\nAction: post_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/fitness workout\",\n  \"min_score\": 300\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "post_search_for_socialgrep", "api_action": "\nAction: post_search_for_socialgrep\nAction Input: {\n  \"query\": \"/r/fitness workout\",\n  \"sinceSeconds\": 2592000,\n  \"minScore\": 300,\n  \"limit\": 10\n}", "api_reaction": null}}]}
{"URL": "52277", "query": "I'm a student conducting market research for a project. Can you suggest categories on Amazon and the marketplaces that cater to a specific target audience?", "api_names": ["categories_list_for_amazon_data_v2", "marketplace_list_for_amazon_data_v2", "Finish", "generaterandomidentity_for_fake_identity_generator", "search_for_news_api_v2", "gettopics_for_a_i_smartable", "retrieve_response_for__paraphrasing_api", "user_feed_for_tiktok_bulletproof", "all_earthquakes_past_day_for_everyearthquake", "search_fighter_stats_for_mma_stats", "getfileslist_for_groupdocs_metadata_cloud", "event_commentary_alt_cricket_for_flashlive_sports", "quote_for_quotes", "3_fluctuation_endpoint_for_currenciesexchangerateapi", "credit_score_by_name_city_and_or_state_for_business_credit_scores"], "api_descs": {"3_fluctuation_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'start_date': \n'end_date': \n'base': \n'symbols': \nResponse: This endpoint returns the percentage change in the exchange rates of the specified currencies over the specified time period in JSON format.", "Finish": "No description available.", "all_earthquakes_past_day_for_everyearthquake": "All Earthquakes, Past Day", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "credit_score_by_name_city_and_or_state_for_business_credit_scores": "Look up credit scores for private companies that do not have a ticker symbol. Almost 8 million companies available. Try searching by city and state first, then look for a name match.", "event_commentary_alt_cricket_for_flashlive_sports": "Get a comment on an event (cricket) by event ID", "generaterandomidentity_for_fake_identity_generator": "Use this endpoint to generate a random fake identity, click the test button and enjoy the informations generated!", "getfileslist_for_groupdocs_metadata_cloud": " ", "gettopics_for_a_i_smartable": "Get artificial intelligence topics.", "marketplace_list_for_amazon_data_v2": "This endpoint lists down the market places we use to fetch data!", "quote_for_quotes": "Get a random Quote", "retrieve_response_for__paraphrasing_api": "With the JOB ID generated on the \"Paraphrase\" endpoint, you will be able to get the response from that rewrite.", "search_fighter_stats_for_mma_stats": "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their names. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more.", "search_for_news_api_v2": "Endpoint to search news by specific keywords.", "user_feed_for_tiktok_bulletproof": "Retrieves 30 latest feed items from TikTok account, by username"}, "aseqs": [{"api_name": "categories_list_for_amazon_data_v2", "api_action": "\nAction: categories_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "marketplace_list_for_amazon_data_v2", "api_action": "\nAction: marketplace_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "categories_list_for_amazon_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marketplace_list_for_amazon_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "categories_list_for_amazon_data_v2", "api_action": "\nAction: categories_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}}]}
{"URL": "9655", "query": "My friend is a big fan of Hatsune Miku and I want to surprise her with a collection of images. Can you provide me with a random image of Hatsune Miku using the getRandomImage API? Additionally, I would like to get more information about the artist and the source of the image using the getImage API with the fileId parameter.", "api_names": ["getrandomimage_for_mikuapi", "getimage_for_mikuapi", "Finish", "billboard_global_200_year_end_for_billboard_api", "geocding_for_goapis_geocoding_api", "get_airport_details_by_code_for_airports_finder", "interior_colors_for_car_api", "get_all_highlights_for_instagram_api_media_downloader", "continent_by_id_for_referential", "imtired_for_resumeapi", "fetch_information_for_asn_lookup", "generate_shield_for_shields"], "api_descs": {"Finish": "No description available.", "billboard_global_200_year_end_for_billboard_api": "Provide the YEAR-END Billboard Global 200 chart information\n\nIf `year` is not supplied, will default to last year.", "continent_by_id_for_referential": "Lookup a continent by id", "fetch_information_for_asn_lookup": "Retrieve information based on AS number, CIDR (IPV4 & IPV6) or organization name.", "generate_shield_for_shields": "Generate shield.", "geocding_for_goapis_geocoding_api": "Geocoding is the process of converting a physical address into geographic coordinates, such as latitude and longitude. It allows for the identification of a specific location on the Earth's surface, making it possible to map and analyze data spatially", "get_airport_details_by_code_for_airports_finder": "The \"Get Airport Details By Code\" API allows you to quickly retrieve comprehensive information about airports based on their IATA codes. Obtain precise details such as airport names, locations, time zones, and more with this efficient and reliable API.", "get_all_highlights_for_instagram_api_media_downloader": "Receive a list of all highlights, including the cover image.", "getimage_for_mikuapi": " ", "getrandomimage_for_mikuapi": " ", "imtired_for_resumeapi": "imtiredss sada sd asdas", "interior_colors_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n[{\"field\": \"name\", \"op\": \"in\", \"val\": [\"red\", \"blue\"]}]\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, name, rgb, make_id, make_model_id, and make_model_trim_i"}, "aseqs": [{"api_name": "getrandomimage_for_mikuapi", "api_action": "\nAction: getrandomimage_for_mikuapi\nAction Input: {}", "api_reaction": null}, {"api_name": "getimage_for_mikuapi", "api_action": "\nAction: getimage_for_mikuapi\nAction Input: {\n  \"fileid\": \"54d9a4ac-e52f-4d46-9a42-eb85c1208a9c\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to first fetch a random image of Hatsune Miku using the getRandomImage API, and then use the retrieved fileId parameter to get more information about the artist and the source of the image using the getImage API.\n\t\"api_name\": \"getrandomimage_for_mikuapi\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getimage_for_mikuapi", "api_action": "{\"fileId\": \"$(resultOf getrandomimage_for_mikuapi api_reaction)\", \"fields\": []}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getimage_for_mikuapi", "api_action": "\nAction: getimage_for_mikuapi\nAction Input: {\n  \"fileid\": \"54d9a4ac-e52f-4d46-9a42-eb85c1208a9c\"\n}", "api_reaction": null}}]}
{"URL": "7830", "query": "My family is planning to move to France, and we are considering different cities. Can you help us by listing the properties available for rent in Paris and Lyon within a specific boundary?", "api_names": ["locations_search_for_seloger", "properties_list_in_boundary_for_seloger", "properties_list_for_seloger", "Finish", "locations_list_deprecated_for_the_fork_the_spoon", "getallvideos_for_heywatch_video_encoding", "away_team_last_10_matches_for_football_prediction", "getdiscusage_for_groupdocs_merger_cloud", "get_all_tags_for_churchapp", "logoutuser_for_thisisapublicapi_v2", "24_hours_tickers_for_quantaex_market_data", "query_horses_for_horse_racing", "info_for_hearthstone", "translate_for_google_translate_v2", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas", "latest_drawing_for_lotto_america"], "api_descs": {"24_hours_tickers_for_quantaex_market_data": "24 hours trading data", "Finish": "No description available.", "away_team_last_10_matches_for_football_prediction": "Grab the statistics and list of the last 10 matches played by the away team for a certain ID", "get_all_tags_for_churchapp": "This will return tags ordered alphabetically", "getallvideos_for_heywatch_video_encoding": "List of all videos", "getdiscusage_for_groupdocs_merger_cloud": " ", "info_for_hearthstone": "Returns a list of current patch, classes, sets, types, factions, qualities, races and locales.", "latest_drawing_for_lotto_america": "Get the latest, and last winning Lotto America winning number set.", "locations_list_deprecated_for_the_fork_the_spoon": "List relating locations by Google place id", "locations_search_for_seloger": "Search location by term or phrase", "logoutuser_for_thisisapublicapi_v2": "", "properties_list_for_seloger": "List properties with options and filters", "properties_list_in_boundary_for_seloger": "List properties in a bounding box with options and filters", "query_horses_for_horse_racing": "Search horses by name. \nOnce you get \"*id_horse*\" from this query, you can get horses stats from \"**Horse stats**\" endpoint.", "translate_for_google_translate_v2": "https://cloud.google.com/translate/docs/languages", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas": "API Ninjas Mortgage Calculator API endpoint. Either **loan_amount** or (**home_value** + **downpayment**) parameters must be set."}, "aseqs": [{"api_name": "properties_list_in_boundary_for_seloger", "api_action": "\nAction: properties_list_in_boundary_for_seloger\nAction Input: {\n  \"southeastlatitude\": 48.859,\n  \"southeastlongitude\": 2.244,\n  \"zipcodes\": \"75000\",\n  \"northwestlatitude\": 45.759,\n  \"northwestlongitude\": 4.890,\n  \"transactiontype\": 1,\n  \"pagesize\": 10\n}", "api_reaction": null}, {"api_name": "properties_list_in_boundary_for_seloger", "api_action": "\nAction: properties_list_in_boundary_for_seloger\nAction Input: {\n  \"southeastlatitude\": 48.859,\n  \"southeastlongitude\": 2.244,\n  \"zipcodes\": \"75000\",\n  \"northwestlatitude\": 45.759,\n  \"northwestlongitude\": 4.890,\n  \"transactiontype\": 1\n}", "api_reaction": null}, {"api_name": "locations_search_for_seloger", "api_action": "\nAction: locations_search_for_seloger\nAction Input: {\n  \"searchterm\": \"Paris\"\n}", "api_reaction": null}, {"api_name": "properties_list_for_seloger", "api_action": "\nAction: properties_list_for_seloger\nAction Input: {\n  \"zipcodes\": \"75000,69000\",\n  \"transactiontype\": 1,\n  \"pagesize\": 10\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "properties_list_in_boundary_for_seloger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_in_boundary_for_seloger", "api_action": "\nAction: properties_list_in_boundary_for_seloger\nAction Input: {\n  \"southeastlatitude\": 48.859,\n  \"southeastlongitude\": 2.244,\n  \"zipcodes\": \"67000,69000\",\n  \"northwestlatitude\": 45.759,\n  \"northwestlongitude\": 4.890,\n  \"transactiontype\": 1,\n  \"pagesize\": 10\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_in_boundary_for_seloger", "api_action": "\nAction: properties_list_in_boundary_for_seloger\nAction Input: {\n  \"southeastlatitude\": 48.859,\n  \"southeastlongitude\": 2.244,\n  \"zipcodes\": \"75000,69000\",\n  \"northwestlatitude\": 45.759,\n  \"northwestlongitude\": 4.890,\n  \"transactiontype\": 1\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_in_boundary_for_seloger", "api_action": "\nAction: properties_list_in_boundary_for_seloger\nAction Input: {\n  \"southeastlatitude\": 48.859,\n  \"southeastlongitude\": 2.244,\n  \"zipcodes\": \"75000\",\n  \"northwestlatitude\": 45.759,\n  \"northwestlongitude\": 4.890,\n  \"transactiontype\": 3,\n  \"pagesize\": 10\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_in_boundary_for_seloger", "api_action": "\nAction: properties_list_in_boundary_for_seloger\nAction Input: {\n  \"southeastlatitude\": 48.859,\n  \"southeastlongitude\": 2.360,\n  \"northwestlatitude\": 45.759,\n  \"northwestlongitude\": 7.540,\n  \"transactiontype\": 1,\n  \"pagesize\": 10\n}", "api_reaction": null}}]}
{"URL": "79761", "query": "I'm writing an article about the benefits of house plants. Can you suggest some house plants that can improve air quality and reduce stress? It would be helpful if you could provide their ideal temperature, light requirements, and watering needs.", "api_names": ["get_by_category_for_house_plants", "Finish", "findstate_for_india_pincode_api", "balance_for_locationiq", "artist_appears_on_for_spotify_v3", "get_all_climate_news_for_new_climate", "getlearningresources_topic_for_power_bi_smartable", "tennis_match_statistics_for_sports_live_scores", "medias_for_instagram_v6", "locations_list_deprecated_for_the_fork_the_spoon"], "api_descs": {"Finish": "No description available.", "artist_appears_on_for_spotify_v3": "Get artist appears on albums (max 50)", "balance_for_locationiq": "The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC).", "findstate_for_india_pincode_api": "findstate", "get_all_climate_news_for_new_climate": "News from all publications", "get_by_category_for_house_plants": "Get plants by their category.", "getlearningresources_topic_for_power_bi_smartable": "Get Power BI learning resources by topic.", "locations_list_deprecated_for_the_fork_the_spoon": "List relating locations by Google place id", "medias_for_instagram_v6": "Get someone's medias, batch_size range from 1 to 50", "tennis_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Tennis Live Matches endpoint."}, "aseqs": [{"api_name": "get_by_category_for_house_plants", "api_action": "\nAction: get_by_category_for_house_plants\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_category_for_house_plants"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_category_for_house_plants"}}]}
{"URL": "27249", "query": "I'm a web developer working on a project for a client who has a Shopify store. I need to scrape the complete data of a single product from their store. The product I'm interested in has the handle 'gymshark-studio-leggings-black-ss22'. Can you fetch the data for me? The store's URL is 'https://row.gymshark.com'.", "api_names": ["shopify_store_products_for_shopify_store_scraper", "Finish", "get_the_timezones_for_location", "get_device_asset_by_identifier_for_basic_info_vikkon_assets", "ok_ru_emb_link_for_football_highlight", "users_userid_dutystatus_for_signl4_critical_mobile_alerting", "doi_for_crossref", "us_de_for_us_gas_prices", "news_v2_list_trending_for_cnbc", "user_media_for_twttrapi"], "api_descs": {"Finish": "No description available.", "doi_for_crossref": "Information of a article with specified doi.", "get_device_asset_by_identifier_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier", "get_the_timezones_for_location": "Get the timezones.", "news_v2_list_trending_for_cnbc": "List trending news", "ok_ru_emb_link_for_football_highlight": "Ok.RU Emb Link", "shopify_store_products_for_shopify_store_scraper": "Get all the products of shopify store.", "us_de_for_us_gas_prices": "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.", "user_media_for_twttrapi": "Get user's images", "users_userid_dutystatus_for_signl4_critical_mobile_alerting": "Returns a object with duty information."}, "aseqs": [{"api_name": "shopify_store_products_for_shopify_store_scraper", "api_action": "\nAction: shopify_store_products_for_shopify_store_scraper\nAction Input: {\n  \"page\": 1,\n  \"url\": \"https://row.gymshark.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "shopify_store_products_for_shopify_store_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "shopify_store_products_for_shopify_store_scraper"}}]}
{"URL": "4967", "query": "I want to stay updated with the latest news from India. Fetch the title, content, and link for each news article.", "api_names": ["get_news_for_india_today_unofficial", "Finish", "get_comments_from_product_id_for_trendyol_data", "health_for_candlestick_chart", "block_for_optimism", "getfutureeventsbytopic_for_azure", "prematch_event_for_sports_betting_api", "home_for_qrcodegenerator", "get_item_by_id_for_rpg_items", "user_reviews_for_steam_store_api"], "api_descs": {"Finish": "No description available.", "block_for_optimism": "Get full data from a specific block on the Optimism blockchain.", "get_comments_from_product_id_for_trendyol_data": "Retrieve comments based on a product id.", "get_item_by_id_for_rpg_items": "Get all RPG items", "get_news_for_india_today_unofficial": "All Latest news from India Today Platform", "getfutureeventsbytopic_for_azure": "Get future Azure events by topic.", "health_for_candlestick_chart": "Health check", "home_for_qrcodegenerator": "Home endtpoint", "prematch_event_for_sports_betting_api": "All Odds  Markets", "user_reviews_for_steam_store_api": "💡 The endpoint returns a complete list of user reviews. Use filters to narrow down the results as desired. If you want to get reviews from page 2, you must first grab data from page 1 and save the **cursor** value from response. Then set in the new call  **page=2** and **cursor** from page 1."}, "aseqs": [{"api_name": "get_news_for_india_today_unofficial", "api_action": "\nAction: get_news_for_india_today_unofficial\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_india_today_unofficial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_india_today_unofficial"}}]}
{"URL": "63230", "query": "I'm a moderator on a Discord server and I need to gather information about a specific user. Please provide me with the user data for a user with the ID 25458687581618176, including their username, discriminator, avatar, and creation date.", "api_names": ["get_user_data_for_discord_lookup", "Finish", "products_v3_detail_for_asos", "stock_key_statistics_stock_for_mboum_finance", "detailed_cocktail_recipe_by_id_for_the_cocktail_db", "footballers_by_id_for_premier_league_stats", "get_download_url_mp3_mp4_for_youtube_mp3_converter", "transfermarkt_search_for_theclique", "plane_for_unicode_codepoints", "check_balance_for_d7_viber"], "api_descs": {"Finish": "No description available.", "check_balance_for_d7_viber": "Retrieve details about your D7API account's current balance.", "detailed_cocktail_recipe_by_id_for_the_cocktail_db": "Get Cocktail by ID", "footballers_by_id_for_premier_league_stats": "Get a players stats by their ID. Choose from all 597 registered premier league players.", "get_download_url_mp3_mp4_for_youtube_mp3_converter": "Get Download URL", "get_user_data_for_discord_lookup": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically", "plane_for_unicode_codepoints": "Information about a Unicode plane", "products_v3_detail_for_asos": "Get detail information of product by id", "stock_key_statistics_stock_for_mboum_finance": "Get stock key statistics data.", "transfermarkt_search_for_theclique": "Search by name"}, "aseqs": [{"api_name": "get_user_data_for_discord_lookup", "api_action": "\nAction: get_user_data_for_discord_lookup\nAction Input: {\n  \"is_id\": \"25458687581618176\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_user_data_for_discord_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_data_for_discord_lookup"}}]}
{"URL": "25923", "query": "Retrieve the commands run by the logins in the SSH honeypot. Also, provide me with the login data and the proxy requests made. Make sure to include the information from page 4.", "api_names": ["proxy_requests_for_ssh_honeypot", "commands_run_for_ssh_honeypot", "login_data_for_ssh_honeypot", "Finish", "calculate_mortgage_for_real_estate_usa", "top_100_movies_list_for_imdb_top_100_movies", "printerlist_for_13", "get_profile_recent_activity_time_for_fresh_linkedin_profile_data", "get_questions_by_category_for_ase_s_quiz_api", "get_exchange_rate_for_currency_ex", "query_mark_price_kline_for_bybit", "job_details_for_indeed", "m2_5_earthquakes_past_hour_for_everyearthquake", "searchjobs_for_indeed_jobs_api_finland", "get_all_players_for_shescoresapi", "subdomains_lookup_for_subdomains_lookup", "by_city_id_for_rapidweather", "one_michellin_restaurant_for_restaurant", "get_order_for_rushtranslate", "artist_details_for_genius_song_lyrics"], "api_descs": {"Finish": "No description available.", "artist_details_for_genius_song_lyrics": "An artist is how Genius represents the creator of one or more songs (or other documents hosted on Genius). It's usually a musician or group of musicians.", "by_city_id_for_rapidweather": "You can make an API call by city ID.\nWe recommend to call API by city ID to get unambiguous result for your city.", "calculate_mortgage_for_real_estate_usa": "calculate mortgage", "commands_run_for_ssh_honeypot": "Commands being run by honey pot logins", "get_all_players_for_shescoresapi": "Gets all the players from all the teams", "get_exchange_rate_for_currency_ex": "Return excahnge rate of two currency codes.", "get_order_for_rushtranslate": "Get detailed information about a specific order.", "get_profile_recent_activity_time_for_fresh_linkedin_profile_data": "Get the time of the latest activity. **2 credits per call.**", "get_questions_by_category_for_ase_s_quiz_api": "Get questions by category", "job_details_for_indeed": "Crawl information for Indeed's Job.", "login_data_for_ssh_honeypot": "", "m2_5_earthquakes_past_hour_for_everyearthquake": "Magnitude 2.5+ Earthquakes, Past Hour", "one_michellin_restaurant_for_restaurant": "Only one restaurant.", "printerlist_for_13": "Retrieves all the printers", "proxy_requests_for_ssh_honeypot": "", "query_mark_price_kline_for_bybit": "Query mark price kline.", "searchjobs_for_indeed_jobs_api_finland": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Helsinki (For now this API gets data for Finland Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'", "subdomains_lookup_for_subdomains_lookup": "Query API with root domain to retrieve all known subdomains", "top_100_movies_list_for_imdb_top_100_movies": "The Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and IMDb ID of The Top 100 Movies of All Time."}, "aseqs": [{"api_name": "login_data_for_ssh_honeypot", "api_action": "\nAction: login_data_for_ssh_honeypot\nAction Input: {}", "api_reaction": null}, {"api_name": "proxy_requests_for_ssh_honeypot", "api_action": "\nAction: proxy_requests_for_ssh_honeypot\nAction Input: {}", "api_reaction": null}, {"api_name": "commands_run_for_ssh_honeypot", "api_action": "\nAction: commands_run_for_ssh_honeypot\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the commands run by logins from the SSH honeypot. Then, provide me with login data and proxy requests made. Additionally, as per the query, we need page 4's information.\n\t\"api_name\": \"commands_run_for_ssh_honeypot\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "proxy_requests_for_ssh_honeypot"}}, {"state": "generated_by_agent", "aseq": {"api_name": "commands_run_for_ssh_honeypot"}}, {"state": "generated_by_agent", "aseq": {"api_name": "commands_run_for_ssh_honeypot", "api_action": "\nAction: commands_run_for_ssh_honeypot\nAction Input: {}", "api_reaction": null}}]}
{"URL": "54561", "query": "Translate this article from Portuguese to English and detect the language used. Additionally, provide me with a list of supported languages for translation.", "api_names": ["Finish", "languages_for_translate_all_languages", "translate_for_translate_all_languages", "detect_for_translate_all_languages", "actors_detail_for_flixster", "get_ip_information_for_all_information_about_ip", "getcompanies_for_women_in_tech", "getpeople_for_azure", "list_all_profiles_for_is_this_coin_a_scam", "v1getfundhistoricalprices_for_funds", "time_series_for_twelve_data", "get_all_the_latest_articles_for_dev_to_api", "canvas_episodes_list_for_webtoon", "symbols_for_currency_v2", "allanswersforms_for_acopaer", "event_highlights_video_for_flashlive_sports"], "api_descs": {"Finish": "No description available.", "actors_detail_for_flixster": "Get detailed information of an actor/actress", "allanswersforms_for_acopaer": "# Description GET All Answers Forms\r\n\r\nThis url is to get all Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "canvas_episodes_list_for_webtoon": "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "detect_for_translate_all_languages": "Detects the language of text within a request.", "event_highlights_video_for_flashlive_sports": "Get highlights video by event ID", "get_all_the_latest_articles_for_dev_to_api": "It returns all the latest articles present in the dev.to website.", "get_ip_information_for_all_information_about_ip": "Get IP information", "getcompanies_for_women_in_tech": "For valid response try base URL", "getpeople_for_azure": "Get Azure influencers.", "languages_for_translate_all_languages": "Returns a list of supported languages for translation.", "list_all_profiles_for_is_this_coin_a_scam": "Get a list of profiles. You can search slug, name and symbol", "symbols_for_currency_v2": "Service that brings the names and symbols of exchange rates.", "time_series_for_twelve_data": "This API call returns meta and time series for equities. Meta object consists of general information about the requested symbol. Time series is the array of objects ordered by time descending with Open, High, Low, Close prices + Volume.", "translate_for_translate_all_languages": "Translates input text, returning translated text", "v1getfundhistoricalprices_for_funds": "Get fund's historical prices"}, "aseqs": [{"api_name": "languages_for_translate_all_languages", "api_action": "\nAction: languages_for_translate_all_languages\nAction Input: {}", "api_reaction": null}, {"api_name": "translate_for_translate_all_languages", "api_action": "\nAction: translate_for_translate_all_languages\nAction Input: {\n  \"text\": \"Translate this article from Portuguese to English and detect the language used.\",\n  \"tolang\": \"en\"\n}", "api_reaction": null}, {"api_name": "detect_for_translate_all_languages", "api_action": "\nAction: detect_for_translate_all_languages\nAction Input: {\n  \"text\": \"Translate this article from Portuguese to English and detect the language used.\"\n}", "api_reaction": null}, {"api_name": "translate_for_translate_all_languages", "api_action": "\nAction: translate_for_translate_all_languages\nAction Input: {\n  \"text\": \"Translate this article from Portuguese to English and detect the language used.\",\n  \"fromlang\": \"pt\",\n  \"tolang\": \"en\"\n}", "api_reaction": null}, {"api_name": "languages_for_translate_all_languages", "api_action": "\nAction: languages_for_translate_all_languages\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_all_languages"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detect_for_translate_all_languages", "api_action": "\nAction: detect_for_translate_all_languages\nAction Input: {\r\n\"text\": \"The quick brown fox jumps over the lazy dog.\"\r}\n", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "detect_for_translate_all_languages", "api_action": "\nAction: detect_for_translate_all_languages\nAction Input: {\n  \"text\": \"Translate this article from Portuguese to English and detect the language used.\",\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "detect_for_translate_all_languages", "api_action": "\nAction: detect_for_translate_all_languages\nAction Input: {\n  \"text\": \"Translate this article from Portuguese to English and detect the language used.\""}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_all_languages", "api_action": "\nAction: translate_for_translate_all_languages\nAction Input: {\n  \"text\": \"Translate this article from Portuguese to English and detect the language used.\",\n  \"fromlang\": \"pt\",\n  \"tolang\": \"en\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_all_languages", "api_action": "\nAction: translate_for_translate_all_languages\nAction Input: {\n  \"text\": \"Translate this article from Portuguese to English and detect the language used.\",\n  \"fromlang\": \"pt\",\n  \"tolang\": \"en\"\n}", "api_reaction": null}}]}
{"URL": "42737", "query": "I'm writing a blog post about popular tourist attractions in New York City. Can you help me find reviews and images of famous landmarks like the Statue of Liberty using the Google Maps Reviews and Google Images APIs?", "api_names": ["Finish", "google_maps_reviews_for_google_search_2", "google_maps_data_id_for_google_search_2", "google_images_for_google_search_2", "getvideo_for_tiktok_info", "10_year_historical_monthly_prices_for_stock_prices", "getinfo_for_indian_mobile_info", "lista_de_provincias_for_organizaci_n_territorial_de_espa_a", "search_for__cheap_youtube_api_", "pools_get_pool_by_blockchain_for_defi_watch", "prueba_for_practicauipath", "v1_airquality_for_air_quality_by_api_ninjas", "products_search_for_wayfair", "newssearch_for_web_search", "get_quotes_by_character_name_for_anime_quotes", "search_express_multi_contract_for_priceline_com_provider"], "api_descs": {"10_year_historical_monthly_prices_for_stock_prices": "10 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "get_quotes_by_character_name_for_anime_quotes": "Get quotes by character name", "getinfo_for_indian_mobile_info": "getInfo", "getvideo_for_tiktok_info": "Get all the video information like Play URL, Cover, Stats, Codec along with Author and Music details", "google_images_for_google_search_2": "Using this API you can get the JSON data of the image results.", "google_maps_data_id_for_google_search_2": "Using this API you can get the JSON results of the data ID of a particular place.", "google_maps_reviews_for_google_search_2": "Using this API you can get the JSON data of the review results.", "lista_de_provincias_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las provincias de España", "newssearch_for_web_search": "Get news articles relevant for a given query.", "pools_get_pool_by_blockchain_for_defi_watch": "Get full data about pool by blockchain", "products_search_for_wayfair": "Search for products by term or phrase", "prueba_for_practicauipath": "prueba", "search_express_multi_contract_for_priceline_com_provider": "Provides hotel and multiple rates information per hotel using the getExpress.MultiContract endpoint.", "search_for__cheap_youtube_api_": "Get search results\n\nexample:\n/search?q=crypto", "v1_airquality_for_air_quality_by_api_ninjas": "API Ninjas Air Quality API endpoint."}, "aseqs": [{"api_name": "google_maps_data_id_for_google_search_2", "api_action": "\nAction: google_maps_data_id_for_google_search_2\nAction Input: {\n  \"query\": \"Statue of Liberty\"\n}", "api_reaction": null}, {"api_name": "google_images_for_google_search_2", "api_action": "\nAction: google_images_for_google_search_2\nAction Input: {\n  \"query\": \"Statue of Liberty\"\n}", "api_reaction": null}, {"api_name": "google_maps_reviews_for_google_search_2", "api_action": "\nAction: google_maps_reviews_for_google_search_2\nAction Input: {\n  \"data_id\": \"0x89c25090129c363d:0x40c6a5770d25022b\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get Google Maps Reviews for famous landmarks like the Statue of Liberty in New York City and also get images related to these landmarks using Google Images API.\n\t\"api_name\": \"google_maps_reviews_for_google_search_2\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "google_maps_reviews_for_google_search_2", "api_action": "\nAction: google_maps_reviews_for_google_search_2\nAction Input: {\n  \"query\": \"Statue of Liberty\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "google_maps_data_id_for_google_search_2", "api_action": "\nAction: google_maps_data_id_for_google_search_2\nAction Input: {\n  \"query\": \"New York City\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "google_maps_reviews_for_google_search_2", "api_action": "\nAction: google_maps_reviews_for_google_search_2\nAction Input: {\n  \"data_id\": \"0x89c25090129c363d:0x40c6a5770d25022b\"\n}", "api_reaction": null}}]}
{"URL": "46461", "query": "I'm working on a research paper and need to ensure there is no profanity in the text. Can you filter the paper for any offensive words and replace them with asterisks? Also, please let me know if any profanity is detected.", "api_names": ["Finish", "check_if_text_contains_profanity_for_purgomalum", "remove_profanity_for_purgomalum", "users_favorite_get_for_songmeanings", "user_post_videos_for_tiktok_download_video_", "team_squad_statistics_for_soccerway_feed", "search_emails_for_email_search", "post_metadata_for_instagram_data", "local_headlines_geo_for_real_time_news_data", "get_scrabble_score_for_dicolink", "1_shoot_thumbnail_for_pagepeeker", "hls_for_twitter_v3"], "api_descs": {"1_shoot_thumbnail_for_pagepeeker": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)", "Finish": "No description available.", "check_if_text_contains_profanity_for_purgomalum": "", "get_scrabble_score_for_dicolink": "Get Scrabble score for a word", "hls_for_twitter_v3": "hls => mp4 converter", "local_headlines_geo_for_real_time_news_data": "Get local, geo based headlines", "post_metadata_for_instagram_data": "Get post metadata\n\n**NOTE:** Profile should be public(not private)", "remove_profanity_for_purgomalum": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request", "search_emails_for_email_search": "Search the web for emails using a query and email domain and get up to 5,000 email addresses.", "team_squad_statistics_for_soccerway_feed": "Get Team Squad statistics", "user_post_videos_for_tiktok_download_video_": "get user post videos for latest\nget user feed\nunique_id or user_id is not empty", "users_favorite_get_for_songmeanings": "Get a user’s favorites by specified type."}, "aseqs": [{"api_name": "check_if_text_contains_profanity_for_purgomalum", "api_action": "\nAction: check_if_text_contains_profanity_for_purgomalum\nAction Input: {\n  \"text\": \"I'm working on a research paper and need to ensure there is no profanity in the text. Can you filter the paper for any offensive words and replace them with asterisks? Also, please let me know if any profanity is detected.\"\n}", "api_reaction": null}, {"api_name": "remove_profanity_for_purgomalum", "api_action": "\nAction: remove_profanity_for_purgomalum\nAction Input: {\n  \"text\": \"I'm working on a research paper and need to ensure there is no profanity in the text. Can you filter the paper for any offensive words and replace them with asterisks? Also, please let me know if any profanity is detected.\",\n  \"fill_char\": \"*\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "check_if_text_contains_profanity_for_purgomalum"}}, {"state": "generated_by_agent", "aseq": {"api_name": "remove_profanity_for_purgomalum"}}, {"state": "generated_by_agent", "aseq": {"api_name": "check_if_text_contains_profanity_for_purgomalum"}}]}
{"URL": "82662", "query": "Please give me the health status and date-time of the response, as well as the list of ongoing contests with their start and end times.", "api_names": ["health_for_demo1", "contests_for_demo1", "Finish", "random_post_by_id_for_fake_data_generator", "get_details_for_truecaller_v2", "convert_planet_degree_to_planet_angle_for_yawin_indian_astrology", "artist_for_deezer", "getsupportedfileformats_for_groupdocs_merger_cloud", "billboard_global_200_for_billboard_v2", "matches_for_betway", "venue_search_for_wiman_the_social_wi_fi_network", "getfunctionsbytopic_for_powerbi"], "api_descs": {"Finish": "No description available.", "artist_for_deezer": "An artist object", "billboard_global_200_for_billboard_v2": "Get the Billboard Global 200 chart.", "contests_for_demo1": "Get list of contests", "convert_planet_degree_to_planet_angle_for_yawin_indian_astrology": "Convert a Planet Degree to  Angle Format . (Degree is 67.5666666667, converted to Angle as 67.34.0)", "get_details_for_truecaller_v2": "This end point will display the search details for the number you are looking for.", "getfunctionsbytopic_for_powerbi": "Get Power BI DAX functions by topic.", "getsupportedfileformats_for_groupdocs_merger_cloud": " ", "health_for_demo1": "Get health info", "matches_for_betway": "Latest Matches for Betway", "random_post_by_id_for_fake_data_generator": "Retrieve fake post by id.", "venue_search_for_wiman_the_social_wi_fi_network": ""}, "aseqs": [{"api_name": "health_for_demo1", "api_action": "\nAction: health_for_demo1\nAction Input: {}", "api_reaction": null}, {"api_name": "contests_for_demo1", "api_action": "\nAction: contests_for_demo1\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "health_for_demo1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_demo1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_demo1"}}]}
{"URL": "51439", "query": "I'm a fitness enthusiast and I want to stay updated on the latest trends and workouts. Can you find tweets from fitness influencers sharing their workout routines and nutrition tips? Additionally, fetch tweets from fitness experts discussing the benefits of different exercise techniques.", "api_names": ["search_for_twitter_data", "Finish", "v1_feedid_for_awesome_rss", "getnewsletters_for_a_i_smartable", "flight_api_for_flight_v2", "spain_scheduled_flights_growth_for_global_flight_data", "indices_for_global_market_indices_data", "fetchallmatches_for_cleardil", "get_weak_certs_for_iotvas", "get_campaign_lead_from_id_for_fomoapi", "tours_for_golf_leaderboard_data", "search_for_flixster"], "api_descs": {"Finish": "No description available.", "fetchallmatches_for_cleardil": " ", "flight_api_for_flight_v2": "FlightsLogic Global Airfare APIs connect you to the finest information in the travel industry. You can now build, innovate and launch your web and Mobile applications with our Flight API. Inspirational search features combine our Global Airfare APIs with your existing travel offering to complement your product range.", "get_campaign_lead_from_id_for_fomoapi": "Get ALL Lead From Your Campaign Social Proof", "get_weak_certs_for_iotvas": " ", "getnewsletters_for_a_i_smartable": "Get newsletters", "indices_for_global_market_indices_data": "Get Listed Indices", "search_for_flixster": "Search for movies, actors, theaters by term and phrase", "search_for_twitter_data": "search", "spain_scheduled_flights_growth_for_global_flight_data": "Get weekly Spain scheduled departing flights growth.", "tours_for_golf_leaderboard_data": "Lists available tours and seasons", "v1_feedid_for_awesome_rss": "Get RSS content\n\n**If you use an RSS reader**\n\nIf you use RapidAPI, you will need to include two header parameters, *X-RapidAPI-Key* and *X-RapidAPI-Host*.\n\nI know this may not be friendly to RSS readers, so I suggest you use `https://awesome-rss.cys.fyi/api/v1/{feedId}` instead to get your content. Then add the link to your reader.\n"}, "aseqs": [{"api_name": "search_for_twitter_data", "api_action": "\nAction: search_for_twitter_data\nAction Input: {\n  \"q\": \"benefits of exercise techniques from:fitness influencers\",\n  \"tweet_search_mode\": \"latest\",\n  \"count\": 10\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_twitter_data"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_for_twitter_data\",\n\t\"api_action\": \"\\nAction: search_for_twitter_data\\nAction Input: {\\n  \\\"q\\\": \\\"workout routines nutrition tips from:fitness fitness influencers\\\",\\n  \\\"tweet_search_mode\\\": \\\"latest\\\",\\n  \\\"count\\\": 10\\n}\",\n}"}]}
{"URL": "2301", "query": "I'm planning to bet on football matches and I need the daily football predictions for a specific date and league. Can you provide me with the predictions, including the scores and average goal stats? Thanks!", "api_names": ["Finish", "daily_predictions_for_today_football_prediction", "prediction_details_for_today_football_prediction", "get_user_for_tiktok_private", "get_specific_user_for_node_express_api_tutorial", "province_list_for_canadian_gas_prices", "2_thumbnail_ready_for_pagepeeker", "group_profile_for_steam_community", "get_brands_for_cigars", "tags_for_mcapi", "get_year_fact_for_numbers", "get_all_api_docs_for_aaaa", "artist_100_for_billboard_v2", "sources_for_jailbase", "test_for_test_opta"], "api_descs": {"2_thumbnail_ready_for_pagepeeker": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds", "Finish": "No description available.", "artist_100_for_billboard_v2": "Get the Artist 100 chart.", "daily_predictions_for_today_football_prediction": "Returns **Daily Football Predictions** with pagination support. \nSearch/filter can be used by **date**, **league**, **market-type**.\n\n* Use **predictions/{matchId}/details** endpoint to see more information about any particular match prediction.\n* Use **predictions/scores** endpoint to get score prediction and average goals.", "get_all_api_docs_for_aaaa": "Get information about all of the docs associated with an API, including the docId.", "get_brands_for_cigars": "Get Cigar brands, paginated and searchable.", "get_specific_user_for_node_express_api_tutorial": "This endpoint will return back the user with the specified ID.", "get_user_for_tiktok_private": "Get User", "get_year_fact_for_numbers": "Get a fact about a year", "group_profile_for_steam_community": "An overview of a steamcommunity group.", "prediction_details_for_today_football_prediction": "Shows all details about the match, its prediction and the prediction results.", "province_list_for_canadian_gas_prices": "Returns list of valid provinces for this API.", "sources_for_jailbase": "All the organizations we collect information for", "tags_for_mcapi": "Retrieve blocks and items tags", "test_for_test_opta": "test"}, "aseqs": [{"api_name": "daily_predictions_for_today_football_prediction", "api_action": "\nAction: daily_predictions_for_today_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "prediction_details_for_today_football_prediction", "api_action": "\nAction: prediction_details_for_today_football_prediction\nAction Input: {\n  \"match_id\": \"64955768ed962f78a829ab2c\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction"}}]}
{"URL": "22372", "query": "I'm a racing enthusiast and I want to plan a trip to Belgium to attend some races. Can you give me the date and time of the last update and also provide me with a list of all the upcoming Belgian races? It would be great if you could include the race organizers as well.", "api_names": ["date_and_time_of_last_update_for_wonderboyapi", "all_belgian_races_for_wonderboyapi", "Finish", "search_for_twitter_scraper", "get_video_for_api_video", "backorders_for_domain_backorder", "memre_api_v1_users_user_id_learning_stats_for_learning_engine", "endpoint_for_01", "video_search_for_bing_video_search", "get_a_product_offers_for_amazon_scrapper_v4", "properties_detail_for_idealista_v2", "business_units_get_reviews_for_unofficial_trust_pilot", "end1_for_matinapi", "get_litecoin_transactions_by_address_for_litecoin_wallet", "get_size_for_test_v2", "getcities_for_florida_realty_api", "retrieve_listing_events_for_openblur", "paidaccess_for_ai_powered_wishscraper_api"], "api_descs": {"Finish": "No description available.", "all_belgian_races_for_wonderboyapi": "At this endpoint nothing happens for now", "backorders_for_domain_backorder": "Get the latest expiring domain names in our pool", "business_units_get_reviews_for_unofficial_trust_pilot": "Get reviews related to a business unit", "date_and_time_of_last_update_for_wonderboyapi": "With this endpoint you can retrieve the Date and Time of the last update", "end1_for_matinapi": "none", "endpoint_for_01": "01", "get_a_product_offers_for_amazon_scrapper_v4": "GET a product offers", "get_litecoin_transactions_by_address_for_litecoin_wallet": "Get Litecoin Transaction by address.", "get_size_for_test_v2": "get size", "get_video_for_api_video": "This call provides the same JSON information provided on video creation. For private videos, it will generate a unique token url.", "getcities_for_florida_realty_api": "Get a list of supported cities with some data about those cities like the number of residents, the latitude, longitude, altitude  and a description and image of the city.", "memre_api_v1_users_user_id_learning_stats_for_learning_engine": "Get the most effective times of day for a user to study.\n", "paidaccess_for_ai_powered_wishscraper_api": "This endpoint provides access to the full suite of features available to premium or paid users. It allows you to retrieve data with fewer restrictions and higher limits than the free access endpoint.", "properties_detail_for_idealista_v2": "Get property detail", "retrieve_listing_events_for_openblur": "Retrieve Blur Listing Events", "search_for_twitter_scraper": "Search Twitter by keyword, hashtag or URL", "video_search_for_bing_video_search": "Get videos relevant for a given query."}, "aseqs": [{"api_name": "date_and_time_of_last_update_for_wonderboyapi", "api_action": "\nAction: date_and_time_of_last_update_for_wonderboyapi\nAction Input: {}", "api_reaction": null}, {"api_name": "all_belgian_races_for_wonderboyapi", "api_action": "\nAction: all_belgian_races_for_wonderboyapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_belgian_races_for_wonderboyapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_belgian_races_for_wonderboyapi", "api_action": "\nAction: all_belgian_races_for_wonderboyapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "date_and_time_of_last_update_for_wonderboyapi"}}]}
{"URL": "14616", "query": "I need information about a specific user on Geeklist. Can you fetch the contributions and micros of the user with the username 'johnsmith'? Additionally, I'd like to see their profile data. Please provide me with the specified user's contributions, micros, and data.", "api_names": ["specified_users_data_for_geeklist", "get_specified_users_contributions_for_geeklist", "get_specified_users_micros_for_geeklist", "Finish", "authenticated_users_data_for_geeklist", "custom_dice_for_dice_roll_simulator", "get_products_in_category_for_my_store", "validate_for_phonenumbervalidate", "alerts_parameters_for_national_weather_service", "get_stats_for_exerra_phishing_check", "copy_of_endpoint_google_for_tutorial", "example_for_veriphone", "get_product_for__demo_project_v13", "usable_time_zones_for_age_calculator", "covid_19_world_data_country_wise_for_corona_virus_world_and_india_data", "browserobject_api_for_browserobject", "game_odds_basic_lines_schedule_for_sportsbook_odds", "see_results_for_nordigen", "verify_email_for_email_verifier", "sendsms_for_bitly_example"], "api_descs": {"Finish": "No description available.", "alerts_parameters_for_national_weather_service": "A list of alerts that can be filtered by parameters. If no parameters are provided, then all alerts are returned. The ATOM format returns items in CAP-ATOM.", "authenticated_users_data_for_geeklist": "", "browserobject_api_for_browserobject": "Browser Detection API", "copy_of_endpoint_google_for_tutorial": "google", "covid_19_world_data_country_wise_for_corona_virus_world_and_india_data": "COVID-19 World data country wise", "custom_dice_for_dice_roll_simulator": "Roll any number of dice with any number of sides.", "example_for_veriphone": "Get an example phone number for any country", "game_odds_basic_lines_schedule_for_sportsbook_odds": "This is a schedule that shows moneylines, spreads, and over under offerings by all bookmakers.", "get_product_for__demo_project_v13": " ", "get_products_in_category_for_my_store": " ", "get_specified_users_contributions_for_geeklist": "", "get_specified_users_micros_for_geeklist": "", "get_stats_for_exerra_phishing_check": "Get statistics about the Exerra Phishing API", "see_results_for_nordigen": "Get results for the requested analysis on the bank statement. Use the request_id from the operations request.", "sendsms_for_bitly_example": "", "specified_users_data_for_geeklist": "", "usable_time_zones_for_age_calculator": "Call this endpoint to view the current endpoint. Find the appreciate time zone for your location. \nExample: US/Eastern, US/Pacific, Europe/London ...", "validate_for_phonenumbervalidate": "Validate any phone number from any country.", "verify_email_for_email_verifier": "To verify a single email address"}, "aseqs": [{"api_name": "get_specified_users_contributions_for_geeklist", "api_action": "\nAction: get_specified_users_contributions_for_geeklist\nAction Input: {\n  \"user\": \"johnsmith\"\n}", "api_reaction": null}, {"api_name": "specified_users_data_for_geeklist", "api_action": "\nAction: specified_users_data_for_geeklist\nAction Input: {\n  \"user\": \"johnsmith\"\n}", "api_reaction": null}, {"api_name": "get_specified_users_micros_for_geeklist", "api_action": "\nAction: get_specified_users_micros_for_geeklist\nAction Input: {\n  \"user\": \"johnsmith\"\n}", "api_reaction": null}, {"api_name": "authenticated_users_data_for_geeklist", "api_action": "\nAction: authenticated_users_data_for_geeklist\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_specified_users_contributions_for_geeklist"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specified_users_micros_for_geeklist"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specified_users_micros_for_geeklist"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specified_users_contributions_for_geeklist", "api_action": "\nAction: get_specified_users_contributions_for_geeklist\nAction Input: {\n  \"user\": \"johnsmith\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specified_users_micros_for_geeklist", "api_action": "\nAction: get_specified_users_micros_for_geeklist\nAction Input: {\n  \"user\": \"johnsmith\"\n}", "api_reaction": null}}]}
{"URL": "38794", "query": "I'm looking for inspiration for my next blog post. Can you fetch the titles and URLs of the year's top articles and the latest articles from the dev.to website? It would also be helpful to include the month's top articles and the top articles of the week.", "api_names": ["get_all_the_latest_articles_for_dev_to_api", "get_all_the_year_s_top_articles_for_dev_to_api", "get_the_month_s_top_articles_for_dev_to_api", "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api", "Finish", "get_weather_tile_for_weather_forecast_map_tiles", "historical_weather_for_ai_weather_by_meteosource", "whois_for_domain_checker", "is_registered_on_whatsapp_for_whatsapp_data", "album_details_for_genius_song_lyrics", "get_web_detection_for_web_detection", "get_user_following_list_for_tiktok_video_feature_summary", "get_rentals_for_deal_catcher", "get_administrative_divisions_for_airbnb_listings", "v1_riddles_for_riddles_by_api_ninjas", "getallformats_for_heywatch_video_encoding", "stopwords_for_free_stopwords", "get_app_by_id_for_google_play", "get_product_offers_for_basic_amazon_scraper", "hotel_photos_for_priceline_com_provider"], "api_descs": {"Finish": "No description available.", "album_details_for_genius_song_lyrics": "Album Details", "get_administrative_divisions_for_airbnb_listings": "Retrieve geographical admin names to be used in Listing by georef endpoint. admin* parameters are optional but to use admin2, admin1 is required, to use admin 3, admin2 and admin1 are required and so on. Not respecting this requirement could give you unwanted results (ie cities with the same name but in different countries). Returns 50 results", "get_all_the_latest_articles_for_dev_to_api": "It returns all the latest articles present in the dev.to website.", "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api": "It returns all the week's top articles", "get_all_the_year_s_top_articles_for_dev_to_api": "It return year's top articles from dev.to website", "get_app_by_id_for_google_play": "Returns a single application by its ID", "get_product_offers_for_basic_amazon_scraper": "GET Product Offers: Get all offers available for a product.", "get_rentals_for_deal_catcher": "Get rentals", "get_the_month_s_top_articles_for_dev_to_api": "It returns the month's top articles from dev.to website.", "get_user_following_list_for_tiktok_video_feature_summary": "get user following list", "get_weather_tile_for_weather_forecast_map_tiles": "Get a transparent weather tile according to the [Web Tile Standard(https://en.wikipedia.org/wiki/Tiled_web_map).", "get_web_detection_for_web_detection": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=“image_url”)", "getallformats_for_heywatch_video_encoding": "Retrieve all the formats", "historical_weather_for_ai_weather_by_meteosource": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "hotel_photos_for_priceline_com_provider": "This API returns a list of photos per hotel", "is_registered_on_whatsapp_for_whatsapp_data": "This endpoint returns `true` if the phone is registered on whatsapp.", "stopwords_for_free_stopwords": "Will return the exact extract words to use in your data analysis or application", "v1_riddles_for_riddles_by_api_ninjas": "API Ninjas Riddles API endpoint. Returns one or more random riddles.", "whois_for_domain_checker": "Checks the domain Whois Details"}, "aseqs": [{"api_name": "get_all_the_year_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_year_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_the_latest_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_latest_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_the_month_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_the_month_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api", "api_action": "\nAction: get_all_the_top_articles_of_the_week_by_default_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_year_s_top_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_latest_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_latest_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_month_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_the_month_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api", "api_action": "\nAction: get_all_the_top_articles_of_the_week_by_default_for_dev_to_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_month_s_top_articles_for_dev_to_api"}}]}
{"URL": "7038", "query": "I'm a writer working on a new web novel, and I need inspiration for chapter titles. Can you give me a list of chapter titles from a specific novel? It would be helpful to have the chapters' content and publication dates too.", "api_names": ["novel_novel_id_for_web_novel_api", "novels_for_web_novel_api", "Finish", "popular_events_for_os_sports_perform", "us_de_for_us_gas_prices", "get_event_logs_filtered_by_topic_for_uniblock", "evaluate_for_mathematical_symbolic_expression_manipulator", "links_finder_for_explorarc_s_link_finder", "api_about_version_for_prague_stock_exchange", "dynamic_qr_codes_for_custom_qr_code", "under_over_analysis_for_basketball_data", "minimal_exchange_amount_for_changenow_crypto_exchange"], "api_descs": {"Finish": "No description available.", "api_about_version_for_prague_stock_exchange": " ", "dynamic_qr_codes_for_custom_qr_code": "Generate dynamic QR Codes with custom colors for Qr Code Background, Qr Code Body, eyes and eyeballs.  Choose designs for QR Body, QR eyes and eyeballs. Encode URL, TEXT, EMAIL, PHONE, SMS, VCARD, LOCATION, FACEBOOK, TWITTER, YOUTUBE, WIFI, EVENT, BITCOIN  in your QR Code.", "evaluate_for_mathematical_symbolic_expression_manipulator": " ", "get_event_logs_filtered_by_topic_for_uniblock": "Gets the event logs by address filtered by topics.", "links_finder_for_explorarc_s_link_finder": "ExplorArc's Link Finder API simplifies the process of finding relevant links by returning results based on a given query. With this powerful tool, users can easily access the information they need to streamline their workflow and achieve their goals", "minimal_exchange_amount_for_changenow_crypto_exchange": "The API endpoint returns minimal payment amount required to make an exchange. If you try to exchange less, the transaction will most likely fail.\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>", "novel_novel_id_for_web_novel_api": "Returns the full Details Page for the Requested Novel ID.", "novels_for_web_novel_api": "Returns the amount of pages in the Novel Catalog.", "popular_events_for_os_sports_perform": "Get today's popular events", "under_over_analysis_for_basketball_data": "Provides the under/over score analysis and statistics with the home/away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**\n\nP.S.\nFull data is available at Under / Over Analysis endpoint but can not be shown in mock response.", "us_de_for_us_gas_prices": "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."}, "aseqs": [{"api_name": "novel_novel_id_for_web_novel_api", "api_action": "\nAction: novel_novel_id_for_web_novel_api\nAction Input: {\n  \"novel_id\": \"12345\"\n}", "api_reaction": null}, {"api_name": "novels_for_web_novel_api", "api_action": "\nAction: novels_for_web_novel_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "novel_novel_id_for_web_novel_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "novel_novel_id_for_web_novel_api", "api_action": "{\"novel_id\": \"67890\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_novel_chapter_titles_for_web_novel_api", "api_action": "\nAction: web_novel_chapter_titles_for_web_novel_api\nAction Input: {\n  \"novel_id\": \"12345\",\n  \"chapter_count\": \"all\"\n}", "api_reaction": null}}]}
{"URL": "33326", "query": "I'm working on a video project and I need to check the ingest job status for the video with the ID '98765' in my account. Also, generate temporary upload URLs for the video from the source 'original' in my account.", "api_names": ["Finish", "temp_upload_urls_for_fake_brightcove", "ingest_status_for_fake_brightcove", "video_post_comments_for_tiktok_data", "get_user_id_for_twitch_api", "product_details_for_ebay", "address_reverse_geocoding_for_navitime_geocoding", "osay_for_us_presidential_election", "list_of_available_currencies_for_a_specific_currency_for_changenow_crypto_exchange", "categories_v2_list_root_deprecated_for_sephora", "search_product_details_for_barcodes", "directions_between_2_locations_for_senegal_api", "title_details_for_ott_details", "title_similars_for_netflix_data", "get_user_favorite_list_for_tiktok_video_no_watermark_v2", "random_mlem_for_mlemapi", "get_movie_reviews_by_id_for_cinema_api", "getpetbyid_for_teste"], "api_descs": {"Finish": "No description available.", "address_reverse_geocoding_for_navitime_geocoding": "逆ジオコーディング\n緯度経度を指定して住所情報を取得します。", "categories_v2_list_root_deprecated_for_sephora": "List top root categories", "directions_between_2_locations_for_senegal_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**", "get_movie_reviews_by_id_for_cinema_api": "This Endpoint returns a complete list of reviews associated to the ID. You can obtain the ID from the Get Movie By ID endpoint.", "get_user_favorite_list_for_tiktok_video_no_watermark_v2": "get user favorite list id", "get_user_id_for_twitch_api": "Returns user id.", "getpetbyid_for_teste": "Returns a single pet", "ingest_status_for_fake_brightcove": "Ingest Job Status", "list_of_available_currencies_for_a_specific_currency_for_changenow_crypto_exchange": "This API endpoint returns the array of markets available for the specified currency be default. The availability of a particular pair is determined by the 'isAvailable' field. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an array of objects with currencies information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>featured</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is popular</td>\n    </tr>\n    <tr>\n        <td><b><i>isStable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is stable</td>\n    </tr>\n    <tr>\n        <td><b><i>supportsFixedRate</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available on a fixed-rate flow</td>\n    </tr>\n    <tr>\n        <td><b><i>isAvailable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates whether the pair is currently supported by our service</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>", "osay_for_us_presidential_election": "Returns JSON block of results for One State, All Years (OSAY), for the specified US Presidential Election year (i.e., Illinois).", "product_details_for_ebay": "Get the product details for a given product id and a specific country.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)", "random_mlem_for_mlemapi": "Returns one random mlem image in JSON", "search_product_details_for_barcodes": "It returns product results if you enter a search term, and returns product details if you enter a barcode number.", "temp_upload_urls_for_fake_brightcove": "Generate Temp Upload URLs", "title_details_for_ott_details": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc.", "title_similars_for_netflix_data": "title-similars", "video_post_comments_for_tiktok_data": "Get video post comments."}, "aseqs": [{"api_name": "ingest_status_for_fake_brightcove", "api_action": "\nAction: ingest_status_for_fake_brightcove\nAction Input: {\n  \"account_id\": \"my_account_id\",\n  \"video_id\": \"98765\",\n  \"job_id\": \"ingest_job_id\"\n}", "api_reaction": null}, {"api_name": "temp_upload_urls_for_fake_brightcove", "api_action": "\nAction: temp_upload_urls_for_fake_brightcove\nAction Input: {\n  \"source_name\": \"original\",\n  \"video_id\": \"98765\",\n  \"account_id\": \"my_account_id\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "temp_upload_urls_for_fake_brightcove"}}, {"state": "generated_by_agent", "aseq": {"api_name": "temp_upload_urls_for_fake_brightcove"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ingest_status_for_fake_brightcove"}}]}
{"URL": "39016", "query": "My company is organizing an event in Belo Horizonte next year. Can you give me the holidays for the city and state of Minas Gerais in 2023? It will help us avoid scheduling conflicts.", "api_names": ["feriados_das_cidades_for_feriados_brasileiros", "feriados_dos_estados_for_feriados_brasileiros", "Finish", "app_reviews_for_steam", "vin_decode_for_vin_decoder_v4", "geteventexternalinfo_for_sport_odds", "test_api_for_truecaller_v2", "search_for_blogsapi", "list_finance_rates_for_real_estate_usa", "get_cruises_details_for_tripadvisor", "songs_for_k_pop", "test_app_deepfry_get_for_image"], "api_descs": {"Finish": "No description available.", "app_reviews_for_steam": "Get last n reviews of an app", "feriados_das_cidades_for_feriados_brasileiros": "Retorna os feriados de certa cidade brasileira. Os parâmetros necessários são: 1. Cidade - Nome da cidade sem acentos ou símbolos especiais, com exceção do hífen (\"-\") que deve ser mantido. 2. Estado - Unidade Federativa correspondente à cidade. Usar a sigla e em letra maíuscula. 3. Ano", "feriados_dos_estados_for_feriados_brasileiros": "Retorna os feriados de certo estado. Os parâmetros necessários são: 1. Estado - Sigla da Unidade Federativa em letra maíuscula. 2. Ano", "get_cruises_details_for_tripadvisor": "-", "geteventexternalinfo_for_sport_odds": "GetEventExternalInfo data api", "list_finance_rates_for_real_estate_usa": "list finance rates", "search_for_blogsapi": "Search blogs by keyword.", "songs_for_k_pop": "Get K-POP songs info", "test_api_for_truecaller_v2": "This API is to test if server is up and running", "test_app_deepfry_get_for_image": " ", "vin_decode_for_vin_decoder_v4": "Vin Decode"}, "aseqs": [{"api_name": "feriados_das_cidades_for_feriados_brasileiros", "api_action": "\nAction: feriados_das_cidades_for_feriados_brasileiros\nAction Input: {\n  \"cidade\": \"Belo Horizonte\",\n  \"estado\": \"MG\",\n  \"ano\": \"2023\"\n}", "api_reaction": null}, {"api_name": "feriados_dos_estados_for_feriados_brasileiros", "api_action": "\nAction: feriados_dos_estados_for_feriados_brasileiros\nAction Input: {\n  \"estado\": \"MG\",\n  \"ano\": \"2023\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "feriados_das_cidades_for_feriados_brasileiros"}}, {"state": "generated_by_agent", "aseq": {"api_name": "feriados_dos_estados_for_feriados_brasileiros"}}, {"state": "generated_by_agent", "aseq": {"api_name": "feriados_das_cidades_for_feriados_brasileiros"}}]}
{"URL": "25601", "query": "Please provide me with the definition of CCI 000001. Additionally, I would like to know the title and description of all controls related to this CCI.", "api_names": ["get_all_controls_for_risk_management_framework", "get_all_ccis_aps_for_risk_management_framework", "get_subcontrol_by_control_for_risk_management_framework", "Finish", "get_cci_by_number_for_risk_management_framework", "get_all_subcontrols_for_risk_management_framework", "view_api_affirmation_for_pe_demo", "get_recurring_characters_for_new_girl", "news_v2_list_trending_for_cnbc", "products_search_for_wayfair", "matchdetails_for_americanfootballapi", "get_one_set_by_id_for_pokemon_tcg_card_prices", "vehicle_ownership_cost_by_vins_for_vehicle_ownership_cost", "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator", "query_for_ldu_boundary_by_location_and_resolution_for_ca_boundaries_io", "read_all_templates_surveys_for_nps_net_promoter_score", "services_for_fiverr_pro_services", "get_all_favorite_food_for_favoritefoodapi", "app_detail_for_steam", "get_latest_price_for_oil_thai_price"], "api_descs": {"Finish": "No description available.", "app_detail_for_steam": "Get detailed info of the app", "get_all_ccis_aps_for_risk_management_framework": "Returns all Control Correlation Identifiers (CCIs)  AKA Assessment Procedures (APs).", "get_all_controls_for_risk_management_framework": "Returns a complete list of all Risk Management Framework (RMF) controls.", "get_all_favorite_food_for_favoritefoodapi": "This endpoint will return all my favorite Cameroonian dishes", "get_all_subcontrols_for_risk_management_framework": "Returns all the subcontrols of all main controls. \n\nEx/ AC-1 is a main control while AC-1.1 is a subcontrol.", "get_cci_by_number_for_risk_management_framework": "This endpoint will return a single CCI and it's definition based on the 6-digit CCI identification number.", "get_latest_price_for_oil_thai_price": "Get latest thai oil price", "get_one_set_by_id_for_pokemon_tcg_card_prices": "Returns information about a single set, retrieved using the ID for that set.", "get_recurring_characters_for_new_girl": "This endpoint gets the recurring characters within the show.", "get_subcontrol_by_control_for_risk_management_framework": "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc.", "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator": "Get the current diet plan for the specified user for a specific day.", "matchdetails_for_americanfootballapi": "Get detailed information for a specific American Football match by providing the match ID.", "news_v2_list_trending_for_cnbc": "List trending news", "products_search_for_wayfair": "Search for products by term or phrase", "query_for_ldu_boundary_by_location_and_resolution_for_ca_boundaries_io": "Query for LDU H3 Boundary by Location and Resolution", "read_all_templates_surveys_for_nps_net_promoter_score": "Get a list of all customer surveys answers related to a given template of questions (tid). In this method, you can see how each customer answered a given template of questions", "services_for_fiverr_pro_services": "List of pro sellers for a service category", "vehicle_ownership_cost_by_vins_for_vehicle_ownership_cost": "Vehicle Ownership Cost by VINs", "view_api_affirmation_for_pe_demo": "View API affirmation in HTML format."}, "aseqs": [{"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "\nAction: get_cci_by_number_for_risk_management_framework\nAction Input: {\n  \"cci\": \"000001\"\n}", "api_reaction": null}, {"api_name": "get_subcontrol_by_control_for_risk_management_framework", "api_action": "\nAction: get_subcontrol_by_control_for_risk_management_framework\nAction Input: {\n  \"control\": \"AC-1\"\n}", "api_reaction": null}, {"api_name": "get_all_controls_for_risk_management_framework", "api_action": "\nAction: get_all_controls_for_risk_management_framework\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_subcontrols_for_risk_management_framework", "api_action": "\nAction: get_all_subcontrols_for_risk_management_framework\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_ccis_aps_for_risk_management_framework", "api_action": "\nAction: get_all_ccis_aps_for_risk_management_framework\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "\nAction: get_cci_by_number_for_risk_management_framework\nAction Input: {\n  \"cci\": \"000001\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "\nAction: get_cci_by_number_for_risk_management_framework\nAction Input: {\n  \"cci\": \"000001\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "{\"cci\": \"000001\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "\nAction: get_cci_by_number_for_risk_management_framework\nAction Input: {\n  \"cci\": \"000001\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "\nAction: get_cci_by_number_for_risk_management_framework\nAction Input: {\n  \"cci\": \"000001\"\n}", "api_reaction": null}}]}
{"URL": "82906", "query": "Could you please give me the count and percentage of the wheel results for the past 3 hours? Additionally, I would like to know the latest spin data and the history of the last 20 spins. Please include all the details about the game in the history.", "api_names": ["Finish", "latest_outcome_for_immersiverouletteapi", "history_for_immersiverouletteapi", "statistics_for_immersiverouletteapi", "match_team_statistics_for_football_data", "posts_for_instagram_reels_and_post_downloader", "recommended_channels_for_fastytapi", "post_comments_for_instagram_data", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment", "geocode_for_egypt_api", "index_get_for_cors_proxy_v2", "get_status_for_indian_names", "getbreadcrumbnavitem_for_betsports", "bcaa_for_amazon_api_v2", "shazam_songs_list_similarities_for_shazam", "rental_search_for_tripadvisor", "get_item_by_id_for_rpg_items", "list_all_tasks_for_odesk_apis", "search_for_properties_for_zillow", "hls_for_twitter_v3"], "api_descs": {"Finish": "No description available.", "bcaa_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required", "geocode_for_egypt_api": "This endpoint allows you to lookup locations in Egypt by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_item_by_id_for_rpg_items": "Get all RPG items", "get_status_for_indian_names": "API to check if the service is up", "getbreadcrumbnavitem_for_betsports": "GetBreadCrumbNavItem api data", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get disasters which have address falling into a specific radius for a specific date range", "history_for_immersiverouletteapi": "the last 20 spins histories includes all details about the game", "hls_for_twitter_v3": "hls => mp4 converter", "index_get_for_cors_proxy_v2": "Welcome to CORS Proxy", "latest_outcome_for_immersiverouletteapi": "Last Spin data", "list_all_tasks_for_odesk_apis": "pull all tasks assigned within a company, team or to a specific user", "match_team_statistics_for_football_data": "Provides the team statistics of the match.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**", "post_comments_for_instagram_data": "Get post comments\n\n**NOTE:** Profile should be public(not private)", "posts_for_instagram_reels_and_post_downloader": "Download post using instagram url", "recommended_channels_for_fastytapi": "Returns a list of recommended channels for the provided channel.\n\nNote: this endpoint requires some heavier computations, response time might take ~5 seconds.", "rental_search_for_tripadvisor": "-", "search_for_properties_for_zillow": "Search for properties", "shazam_songs_list_similarities_for_shazam": "Get similar (You may also like) songs", "statistics_for_immersiverouletteapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect"}, "aseqs": [{"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_outcome_for_immersiverouletteapi", "api_action": "\nAction: latest_outcome_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_immersiverouletteapi", "api_action": "\nAction: history_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the count and percentage of wheel results for the past 3 hours, latest spin data, and history of the last 20 spins from the Immersive Roulette API.\n\t\"api_name\": \"statistics_for_immersiverouletteapi\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "statistics_for_immersiverouletteapi", "api_action": "{\"duration\": \"3\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}}]}
{"URL": "42346", "query": "I'm interested in watching live YouTube videos of music concerts. Can you suggest some upcoming live events that I can tune into? I prefer concerts by popular artists and bands.", "api_names": ["search_for_simple_youtube_search", "Finish", "get_categories_for__demo_project_v13", "simple_pv_power_forecast_for_solcast", "start_end_date_to_time_for_epoch_converter", "get_vessels_by_ship_name_for_vessel_data", "rapidapigethourlyforecastbylocationname_for_forecast", "laravel_jobs_for_usa_jobs_for_it", "get_zipcode_by_county_for_redfin_base", "rgb_to_hsl_for_convexity"], "api_descs": {"Finish": "No description available.", "get_categories_for__demo_project_v13": " ", "get_vessels_by_ship_name_for_vessel_data": "Return vessels by its name.\nVisit our [demo site](https://core-api.net/vessel/map.html)", "get_zipcode_by_county_for_redfin_base": "Get zipcode by county", "laravel_jobs_for_usa_jobs_for_it": "Laravel Jobs Api", "rapidapigethourlyforecastbylocationname_for_forecast": " ", "rgb_to_hsl_for_convexity": "Converts  rgb color code to hsl color code", "search_for_simple_youtube_search": "Make youtube search", "simple_pv_power_forecast_for_solcast": "The simple PV power request returns a first-guess PV power output forecast, based on your specified latitude and longitude plus some basic PV system characteristics.", "start_end_date_to_time_for_epoch_converter": "Convert datetime to get start timestamp and end timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674864000.0, 1674950399.0"}, "aseqs": [{"api_name": "search_for_simple_youtube_search", "api_action": "\nAction: search_for_simple_youtube_search\nAction Input: {\n  \"query\": \"upcoming music concerts\",\n  \"type\": \"live\"\n}", "api_reaction": null}, {"api_name": "search_for_simple_youtube_search", "api_action": "\nAction: search_for_simple_youtube_search\nAction Input: {\n  \"query\": \"upcoming music concerts by popular artists and bands\",\n  \"type\": \"live\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_simple_youtube_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_simple_youtube_search", "api_action": "\nAction: search_for_simple_youtube_search\nAction Input: {\n  \"query\": \"upcoming music concerts live popular artists bands\",\n  \"type\": \"live\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_simple_youtube_search", "api_action": "{\"query\": \"upcoming live music concerts by popular artists and bands\", \"type\": \"live\"}"}}]}
{"URL": "76988", "query": "I am organizing a family reunion and need to verify the validity of the CPF numbers of all family members. Can you help me by validating the CPF numbers in the 'family_members.csv' file? Also, generate random valid CPF numbers for any new family members.", "api_names": ["generate_cpf_for_cpf_validator", "Finish", "midknightt_for_midknightt", "product_id_for_flance_aliexpress", "matchdetails_for_icehockeyapi", "specificplayer_185_225_233_110_30015_billy_for_vrising_server_query_api", "get_version_for_cars_image_background_removal", "au_car_averages_for_car_averages", "tsv4_for_odam", "get_video_status_for_api_video", "user_media_for_twttrapi", "getorderbyid_for_freeplanwithhardlimit"], "api_descs": {"Finish": "No description available.", "au_car_averages_for_car_averages": "AU Car averages", "generate_cpf_for_cpf_validator": "Generate a random valid CPF number.", "get_version_for_cars_image_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "get_video_status_for_api_video": "This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.\n\nOnce encoding is completed, the response also lists the available stream qualities.", "getorderbyid_for_freeplanwithhardlimit": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "matchdetails_for_icehockeyapi": "Get detailed information for a specific ice hockey match by providing the match ID.", "midknightt_for_midknightt": "Receives data", "product_id_for_flance_aliexpress": "Get Aliexpress Data by Product Id", "specificplayer_185_225_233_110_30015_billy_for_vrising_server_query_api": "Get the details of a specific player currently online on server - change `/IP/PORT`", "tsv4_for_odam": "Get the entry list  of a merged data subsets\n", "user_media_for_twttrapi": "Get user's images"}, "aseqs": [{"api_name": "generate_cpf_for_cpf_validator", "api_action": "\nAction: generate_cpf_for_cpf_validator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "generate_cpf_for_cpf_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getorderbyid_for_freeplanwithhardlimit"}}]}
{"URL": "48040", "query": "I am a tourist visiting Nouvelle Calédonie. Could you provide me with the list of postal codes for all the communes in the region? Also, I need the details of a specific commune with the code '98810'. Lastly, I would like to know the postal codes for a particular location.", "api_names": ["all_communes_for_bps", "code_postal_par_code_for_bps", "Finish", "all_codes_postaux_for_bps", "commune_par_nom_for_bps", "get_one_card_by_id_for_pokemon_tcg_card_prices", "clubs_get_header_info_for_transfermarket", "get_positions_for_body_for_astronomy", "v1_city_for_city_by_api_ninjas", "summary_for_real_estate_records", "searchentries_for_lexicala", "searchbusiness_for_google_reviews_scraper", "objectexists_for_groupdocs_signature_cloud", "market_data_for_stock_sentiment_api", "headtoheadmatches_for_baseballapi", "single_name_long_for_nameforge", "new_backlinks_for_best_backlink_checker_api", "get_general_game_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "tournaments_for_rocket_league", "get_all_plants_for_house_plants"], "api_descs": {"Finish": "No description available.", "all_codes_postaux_for_bps": "Tous les codes postaux.", "all_communes_for_bps": "La liste des communes", "clubs_get_header_info_for_transfermarket": "Get header info of club", "code_postal_par_code_for_bps": "Fournit les informations à partir d'un code postal connu en Nouvelle Calédonie.", "commune_par_nom_for_bps": "Récupérer une ou plusieurs communes grâce à son nom. Perfect match ou partiel.", "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.", "get_general_game_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNFLGamesForDate\" call or the \"getNFLTeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNFLGameInfo?gameID=20221212_NE@ARI", "get_one_card_by_id_for_pokemon_tcg_card_prices": "Gets details about a single card by it's ID.", "get_positions_for_body_for_astronomy": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"", "headtoheadmatches_for_baseballapi": "Get head-to-head match data for a specific baseball match using its custom ID.", "market_data_for_stock_sentiment_api": "Returns a list of daily stock metrics such as opening, closing, highest and lowest prices.", "new_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "objectexists_for_groupdocs_signature_cloud": " ", "searchbusiness_for_google_reviews_scraper": "with this endpoint you can search the business you want to get their reviews and ratings", "searchentries_for_lexicala": "search for entries with filters in query", "single_name_long_for_nameforge": "Create single names.\nMax query length is 200 characters.", "summary_for_real_estate_records": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index", "tournaments_for_rocket_league": "Check the scheduled tournaments:\n`rocket-league1.p.rapidapi.com/tournaments/:region`", "v1_city_for_city_by_api_ninjas": "API Ninjas City API endpoint."}, "aseqs": [{"api_name": "all_communes_for_bps", "api_action": "\nAction: all_communes_for_bps\nAction Input: {}", "api_reaction": null}, {"api_name": "all_codes_postaux_for_bps", "api_action": "\nAction: all_codes_postaux_for_bps\nAction Input: {}", "api_reaction": null}, {"api_name": "commune_par_nom_for_bps", "api_action": "\nAction: commune_par_nom_for_bps\nAction Input: {}", "api_reaction": null}, {"api_name": "code_postal_par_code_for_bps", "api_action": "\nAction: code_postal_par_code_for_bps\nAction Input: {\n\"code\": \"98826\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_codes_postaux_for_bps"}}, {"state": "generated_by_agent", "aseq": {"api_name": "code_postal_par_code_for_bps"}}, {"state": "generated_by_agent", "aseq": {"api_name": "code_postal_par_code_for_bps"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_codes_postaux_for_bps"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_codes_postaux_for_bps"}}]}
{"URL": "29218", "query": "I need detailed information about alternatives to the Dropbox application. Could you please provide me with the names, descriptions, and categories of these alternatives? Additionally, I would like to search for alternatives to Dropbox with a specific query and retrieve the search results, including the names and descriptions of the applications. Please limit the search results to 10.", "api_names": ["search_application_for_suggestuse", "detail_info_for_suggestuse", "Finish", "get_archive_for_smile", "search_for_soundcloud", "beta_calendar_for_thai_lotto_new_api", "infos_for_deezer", "latest_exchange_rates_for_exchangeratespro", "nslookup_for_dns_lookup", "companies_cash_flow_statements_for_financial_modeling_prep", "api_currenciesavailable_for_magic_aliexpress", "series_get_points_table_for_unofficial_cricbuzz", "cities_for_canadian_gas_prices", "view_song_for_view_song", "past_1_day_for_the_sandbox_sand"], "api_descs": {"Finish": "No description available.", "api_currenciesavailable_for_magic_aliexpress": "This resource represents a currency in the system. Each currency is composed of Code and Name Attributes. This service can be used to communicate with product service with the target currency attribute.", "beta_calendar_for_thai_lotto_new_api": "2019 မှ ယနေ့လက်ရှိအချိန်အထိ ထွက်ရှိခဲ့သော 2D History များကို စုစည်းပေးထားခြင်းဖြစ်ပါသည်။", "cities_for_canadian_gas_prices": "Returns the average price of gas of major cities in a specific province in Canada.", "companies_cash_flow_statements_for_financial_modeling_prep": "Returns companies cash flow statements", "detail_info_for_suggestuse": "Get detail info by application name", "get_archive_for_smile": "Get a user's archive by ID.", "infos_for_deezer": "Get the infos about the api in the current country", "latest_exchange_rates_for_exchangeratespro": "Get up-to-date exchange rate data with the /latest endpoint. Choose from daily, hourly, or minute updates, based on your plan. Stay on top of the markets with real-time data, delivered with one simple request.", "nslookup_for_dns_lookup": "NsLookup queries the specified DNS server and retrieves the requested records that are associated with the domain name you provided. These records contain information like the domain name’s IP addresses.\n\nThe following types of DNS records are especially useful:\n\n- **A**: the IPv4 address of the domain.\n- **AAAA**: the domain’s IPv6 address.\n- **CNAME**: the canonical name — allowing one domain name to map on to another. This allows more than one website to refer to a single web server.\n- **MX**: the server that handles email for the domain.\n- **NS**: one or more authoritative name server records for the domain.\n- **TXT**: a record containing information for use outside the DNS server. The content takes the form name=value. This information is used for many things including authentication schemes such as SPF and DKIM.", "past_1_day_for_the_sandbox_sand": "Get price data for the past 24 hours.\n\n~5 minutes data points.", "search_application_for_suggestuse": "Search Application", "search_for_soundcloud": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "series_get_points_table_for_unofficial_cricbuzz": "Get points table by series", "view_song_for_view_song": "View song"}, "aseqs": [{"api_name": "search_application_for_suggestuse", "api_action": "\nAction: search_application_for_suggestuse\nAction Input: {\n  \"query\": \"Dropbox\",\n  \"limit\": 10\n}", "api_reaction": null}, {"api_name": "detail_info_for_suggestuse", "api_action": "\nAction: detail_info_for_suggestuse\nAction Input: {\n  \"slug\": \"dropbox\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_application_for_suggestuse"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_application_for_suggestuse", "api_action": "{\"query\": \"Dropbox alternative\", \"limit\": 10, \"filter\": {\"category\": \"Storage\"}}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_application_for_suggestuse", "api_action": "{\"query\": \"Dropbox alternative\", \"limit\": 10, \"type\": \"application\"}", "api_reaction": null}}]}
{"URL": "4474", "query": "Please convert the hex color code 'ffffff' to RGB. After obtaining the RGB value, I would like to know the corresponding HSL and CMYK color codes.", "api_names": ["rgb_to_cmyk_for_convexity", "convert_hex_for_convexity", "rgb_to_hsl_for_convexity", "Finish", "single_country_for_pageantdb", "generating_agency_specific_reports_for_odesk_apis", "api_pricetosales_for_finanzoo_api_fundamentals", "search_for_youtube_data", "get_adverse_event_info_by_reaction_sex_age_group_for_konviere_drugsapi", "list_system_wallets_for_walletapi_cloud", "get_annonce_for_fluximmo", "get_current_weather_for_cloud_cast", "teamtournaments_for_icehockeyapi", "get_all_characters_for_new_girl", "getgamedetail_for_evosis_s_game_database", "coins_get_analysis_for_investing_cryptocurrency_markets", "getmytasks_free_of_use_for_yandex_serp", "api_bestsales_product_productid_saleshistory_for_magic_aliexpress", "getukrail_for_ukrail", "get_the_status_of_a_batch_for_blaze_verify"], "api_descs": {"Finish": "No description available.", "api_bestsales_product_productid_saleshistory_for_magic_aliexpress": "This resource returns the historic of sales", "api_pricetosales_for_finanzoo_api_fundamentals": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0", "coins_get_analysis_for_investing_cryptocurrency_markets": "Get analysis opinion from expert for specific cryptocurrency", "convert_hex_for_convexity": "Endpoint to converts hex color code to other color code like RGB , HSL, CMYK", "generating_agency_specific_reports_for_odesk_apis": "Time reports can be generated for an agency, in order to use this API the authorized user needs staffing manager permissions to the agency.", "get_adverse_event_info_by_reaction_sex_age_group_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the “reaction” the reaction, “sex” the patient sex (0: unknown, 1: male, 2: female) and “ageGrp” age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly), these input parameters are required.  All web method requires the \"api_key\" as query parameter.", "get_all_characters_for_new_girl": "This will provide the show's characters with a tiny bit of data", "get_annonce_for_fluximmo": " ", "get_current_weather_for_cloud_cast": "Gets the current weather for the inputted city name", "get_the_status_of_a_batch_for_blaze_verify": "GET requests to the batch endpoint will get the current status of the batch verification job specified in the \"id\" parameter.<br><br>When a credit card transaction is necessary to obtain enough credits to verify a batch, billing related messages will be returned if there is an error. These will be sent with a 402 response code.<br><br>", "getgamedetail_for_evosis_s_game_database": "Returns the game's information as Json", "getmytasks_free_of_use_for_yandex_serp": "Retrieves your all tasks. Use this endpoint when lost your **task_id** . Use this endpoint how much you want. **It's free of charge**!", "getukrail_for_ukrail": "Query the API to get rail data.", "list_system_wallets_for_walletapi_cloud": "Obtain a list of system wallets for this project.", "rgb_to_cmyk_for_convexity": "Converts  rgb color code to cmyk color code", "rgb_to_hsl_for_convexity": "Converts  rgb color code to hsl color code", "search_for_youtube_data": "search", "single_country_for_pageantdb": "Get all details of a country by its ID.", "teamtournaments_for_icehockeyapi": "This operation returns the unique tournaments in which an Ice Hockey team has participated."}, "aseqs": [{"api_name": "convert_hex_for_convexity", "api_action": "\nAction: convert_hex_for_convexity\nAction Input: {\n  \"hex\": \"ffffff\"\n}", "api_reaction": null}, {"api_name": "rgb_to_hsl_for_convexity", "api_action": "\nAction: rgb_to_hsl_for_convexity\nAction Input: {\n  \"r\": 255,\n  \"g\": 255,\n  \"b\": 255\n}", "api_reaction": null}, {"api_name": "rgb_to_cmyk_for_convexity", "api_action": "\nAction: rgb_to_cmyk_for_convexity\nAction Input: {\n  \"r\": 255,\n  \"g\": 255,\n  \"b\": 255\n}", "api_reaction": null}, {"api_name": "rgb_to_hsl_for_convexity", "api_action": "\nAction: rgb_to_hsl_for_convexity\nAction Input: {\n  \"r\": 255,\n  \"g\": 255,\n  \"b\": 255\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "convert_hex_for_convexity"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rgb_to_hsl_for_convexity", "api_action": "\nAction: rgb_to_hsl_for_convexity\nAction Input: {\n  \"rgb\": \"255, 255, 255\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "rgb_to_cmyk_for_convexity", "api_action": "\nAction: rgb_to_cmyk_for_convexity\nAction Input: {\n  \"r\": 255,\n  \"g\": 255,\n  \"b\": 255\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_hex_for_convexity", "api_action": "\nAction: convert_hex_for_convexity\nAction Input: {\n  \"hex\": \"ffffff\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "rgb_to_hsl_for_convexity", "api_action": "\nAction: rgb_to_hsl_for_convexity\nAction Input: {\n  \"r\": 255,\n  \"g\": 255,\n  \"b\": 255\n}", "api_reaction": null}}]}
{"URL": "45042", "query": "Can you please provide me with the total balance of my wallets? My user ID is 6492f433139a79cae6a3149e. Additionally, I would like to know the details of my user account by using the Get User By Id API.", "api_names": ["total_user_balance_for_wallet", "get_user_by_id_for_wallet", "Finish", "downloadfile_for_groupdocs_translation_cloud", "daily_match_list_all_for_football_data", "rapidapigetobservationhistorybycoordinates_for_forecast", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations", "sparkline_for_wayback_machine", "extract_download_links_for_instagram_downloader_reels_and_videos_downloader", "account_balance_for_binance_smart_chain", "categories_for_gearbest", "get_other_leaderboard_base_info_for_binance_futures_leaderboard"], "api_descs": {"Finish": "No description available.", "account_balance_for_binance_smart_chain": "Get the BNB balance for an address on the Binance Smart Chain.", "categories_for_gearbest": " ", "daily_match_list_all_for_football_data": "Daily match list including scheduled, live and finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**", "downloadfile_for_groupdocs_translation_cloud": " ", "extract_download_links_for_instagram_downloader_reels_and_videos_downloader": "Add url parameter to get download links.", "get_other_leaderboard_base_info_for_binance_futures_leaderboard": "Get the trader information", "get_user_by_id_for_wallet": "Get user information by Id", "rapidapigetobservationhistorybycoordinates_for_forecast": "Get an Observation object with historical information.", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get recent anime wallpapers without any categorization:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "sparkline_for_wayback_machine": "Sparkline", "total_user_balance_for_wallet": "returns all user balance getting all walets balances"}, "aseqs": [{"api_name": "total_user_balance_for_wallet", "api_action": "\nAction: total_user_balance_for_wallet\nAction Input: {\n  \"userid\": \"6492f433139a79cae6a3149e\"\n}", "api_reaction": null}, {"api_name": "get_user_by_id_for_wallet", "api_action": "\nAction: get_user_by_id_for_wallet\nAction Input: {\n  \"is_id\": \"6492f433139a79cae6a3149e\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_id_for_wallet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_id_for_wallet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "total_user_balance_for_wallet"}}]}
{"URL": "1266", "query": "Help me find videos related to 'cooking tutorials' and provide the trending videos. Additionally, give me insights about a specific video.", "api_names": ["video_search_for_bing_video_search", "video_details_for_bing_video_search", "trending_for_bing_video_search", "Finish", "search_for_simple_youtube_search", "overview_for_dummydata", "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation", "home_team_league_stats_for_football_prediction", "get_trip_plan_for_ai_trip_planner", "leagues_list_deprecated_for_livescore_v2", "statusforexcelemissionanalysis_for_carbon_management", "company_balance_sheet_for_real_time_finance_data", "business_name_generator_for_business_name_generator", "random_username_generator_for_unique_username_generator_by_pizza_api", "isbehindcdn_for_isbehindcdn", "get_linkedin_profile_data_for_fresh_linkedin_profile_data", "items_for_hacker_news", "target_heart_rate_for_health_calculator_api", "newaddress_for_chaingateway_io", "youtube_toplikes_for_musicdata_api"], "api_descs": {"Finish": "No description available.", "business_name_generator_for_business_name_generator": "Business Name Generator", "company_balance_sheet_for_real_time_finance_data": "Get public company's **quarterly** or **annual** balance sheet. Supports the *stock* type only.", "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation": "Provide async prompt and threadid to fetch content.\nThis endpoint is Free and you are allowed to pull it once every 2 seconds to fetch your content.", "get_linkedin_profile_data_for_fresh_linkedin_profile_data": "Get full profile data, including experience & education history, skillset and company related details. Accept all type of profile urls. **1 credit per call.**", "get_trip_plan_for_ai_trip_planner": "This endpoint is used to generate trip plan based on no. of days and destination.", "home_team_league_stats_for_football_prediction": "Shows the league table and stats for the home team of an upcoming match.", "isbehindcdn_for_isbehindcdn": "Check if domain is fronted by CDN provider.", "items_for_hacker_news": "Stories, comments, Ask HNs and polls are considered items identified by ids (unique integers)", "leagues_list_deprecated_for_livescore_v2": "List all leagues by category (football, cricket, basketball, tennis, hockey)", "newaddress_for_chaingateway_io": "Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.", "overview_for_dummydata": "Overview of all entry points and usage", "random_username_generator_for_unique_username_generator_by_pizza_api": "Returns a Random and unique username everytime", "search_for_simple_youtube_search": "Make youtube search", "statusforexcelemissionanalysis_for_carbon_management": "Get results in details from the task id.", "target_heart_rate_for_health_calculator_api": "This endpoint calculates the target heart rate range for cardiovascular exercise based on the user's age and fitness level. It uses the Karvonen method to determine the target heart rate zone.", "trending_for_bing_video_search": "Get currently trending videos.", "video_details_for_bing_video_search": "Get insights about a video, such as related videos.", "video_search_for_bing_video_search": "Get videos relevant for a given query.", "youtube_toplikes_for_musicdata_api": "Top Youtube liked videos of all time"}, "aseqs": [{"api_name": "video_search_for_bing_video_search", "api_action": "\nAction: video_search_for_bing_video_search\nAction Input: {\n  \"q\": \"cooking tutorials\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "trending_for_bing_video_search", "api_action": "\nAction: trending_for_bing_video_search\nAction Input: {}", "api_reaction": null}, {"api_name": "video_details_for_bing_video_search", "api_action": "\nAction: video_details_for_bing_video_search\nAction Input: {\n  \"modules\": \"RelatedVideos\",\n  \"is_id\": \"F1FC523EA4CDE0484BBBF1FC523EA4CDE0484BBB\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "video_search_for_bing_video_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "video_search_for_bing_video_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "video_details_for_bing_video_search", "api_action": "\nAction: video_details_for_bing_video_search\nAction Input: {\n  \"q\": \"{video_ids from previous search result with count 5}\",\n  \"count\": 1\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "video_search_for_bing_video_search", "api_action": "\nAction: video_search_for_bing_video_search\nAction Input: {\n  \"q\": \"cooking tutorials\",\n  \"count\": 50\n}", "api_reaction": null}}]}
{"URL": "87196", "query": "I'm planning a trip and need to know more about the location of an IP address. Could you provide me with metadata for the IP address 92.223.89.73? It would be helpful to have information such as the country name, region name, city, zip code, latitude, and longitude.", "api_names": ["ip_locator_for_ip_geolocation_metadata", "Finish", "search_for_ott_details", "body_fat_percentage_for_fitness_calculator", "feed_hot_for_kwai", "scrape_for_amazon_product_scraper_api_full_page_scraping", "echo_for_oauthecho", "vin_decoder_extended_for_vin_decoder", "get_test_api_method_for_testapi_v2", "madlibs_wordlist_for_mad_libs_diceware", "stock_balance_sheet_stock_for_mboum_finance", "search_by_common_name_for_plants"], "api_descs": {"Finish": "No description available.", "body_fat_percentage_for_fitness_calculator": "Knowing body fat percentage would be helpful to decide on a well-programmed fitness plan. You can use this endpoint with 7 parameters.", "echo_for_oauthecho": " ", "feed_hot_for_kwai": "Feed Hot API", "get_test_api_method_for_testapi_v2": "Get Test Api Method!", "ip_locator_for_ip_geolocation_metadata": "The API supports .csv, .xml and .json as output formats.", "madlibs_wordlist_for_mad_libs_diceware": "**Get the wordlist used by madlibs diceware in JSON format**", "scrape_for_amazon_product_scraper_api_full_page_scraping": "Data scrape for an amazon product listing page", "search_by_common_name_for_plants": "returns a list of plants by their common name", "search_for_ott_details": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.", "stock_balance_sheet_stock_for_mboum_finance": "Get stock balance sheet data.", "vin_decoder_extended_for_vin_decoder": "Get 168 items"}, "aseqs": [{"api_name": "ip_locator_for_ip_geolocation_metadata", "api_action": "\nAction: ip_locator_for_ip_geolocation_metadata\nAction Input: {\n  \"ip_address\": \"92.223.89.73\",\n  \"format\": \"json\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use the ip_locator_for_ip_geolocation_metadata API to get the metadata for the given IP address 92.223.89.73, including country name, region name, city, zip code, latitude, and longitude.\n\t\"api_name\": \"ip_locator_for_ip_geolocation_metadata\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "ip_locator_for_ip_geolocation_metadata"}}]}
{"URL": "368", "query": "I need to retrieve the gas fee funding wallets for my company's token forwarding transactions. Can you provide me with the list of gas fee funding wallets along with their details such as wallet ID, offset, limit, total count, and the number of gas fee funding wallets available?", "api_names": ["get_gas_fee_funding_wallets_for_token_forwarding", "Finish", "webcams_list_modifier_modifier_for_webcams_travel", "track_list_album_for_spotify_downloader", "activities_for_youtube_v3_v3", "search_results_for_youtube_search_unlimited_", "collection_for_rijksmuseum", "get_stronghold_item_recipes_for_lost_ark_simple"], "api_descs": {"Finish": "No description available.", "activities_for_youtube_v3_v3": "Returns a list of channel activity events that match the request criteria. For example, you can retrieve events associated with a particular channel or with the user's own channel.", "collection_for_rijksmuseum": "GET /api/[culture]/collection gives the full collection with brief information about each work. This results are split up in result pages. By using the p and ps parameters you can fetch more results. All of the other parameters are identical to the search page on the Rijksmuseum website. You can use that to find out what's the best query to use", "get_gas_fee_funding_wallets_for_token_forwarding": "Get gas fee funding wallets", "get_stronghold_item_recipes_for_lost_ark_simple": "Get List of Lost Ark Stronghold Item Recipes", "search_results_for_youtube_search_unlimited_": "Get Top 22 YouTube Search Results with Video ID, URL, Thumbnail, Title & Duration. No API Key/No Quota Limits", "track_list_album_for_spotify_downloader": "Get track list from album", "webcams_list_modifier_modifier_for_webcams_travel": "Returns a list of webcams according to the applied {modifier}s. Initially, the list contains all webcams. The resulting list of webcams from applying a modifer will be used as input for the following modifier. modifiers are processed from left to right. With every applied modifier, the list of webcams will be narrowed down. Possible values for {modifier} are: \"webcam\" (initial list of webcams), \"nearby\" (list of webcams around a position), \"bbox\" (list of webcams in an area), \"category\" (list of webcams in a category), \"continent\" (list of webcams in a continent), \"country\" (list of webcams in a country), \"region\" (list of webcams in a region of a country), \"exclude\" (exclude webcams from a list of webcams), \"orderby\" (order the list of webcams), \"limit\" (slice the list of webcams). \"webcam\", if given, is always applied first. \"exclude\", \"orderby\", and \"limit\" are always applied (even if not explicitly given) in this order and always after \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" have been applied.  If none of \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" are applied, then all webcams are in the list before applying \"exclude\", \"orderby\", and \"limit\".  Please refer to the description of the various {modifier}s to learn more about their parameter and defaults.  A {modifier} may be applied only once. If a {modifier} is listed multiple times, it may only applied once."}, "aseqs": [{"api_name": "get_gas_fee_funding_wallets_for_token_forwarding", "api_action": "\nAction: get_gas_fee_funding_wallets_for_token_forwarding\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_gas_fee_funding_wallets_for_token_forwarding"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_gas_fee_funding_wallets_for_token_forwarding"}}]}
{"URL": "78086", "query": "My company is organizing a corporate retreat in Hawaii and we want to include a surfing activity. Can you provide us with the surf forecast for today at the popular surf breaks in Hawaii? We need the forecast for spots with IDs 1234, 5678, and 9876. Additionally, we would like to know the surf forecast for these spots for the next few days.", "api_names": ["getsurfbreaksbycountry_for_simple_surf_forecast_api", "getforecastbyid_for_simple_surf_forecast_api", "Finish", "searchoffers_for_google_jobs", "all_districts_for_bdapi", "cointelegraph_for_cryptocurrency_news", "getqrcode_for_qr_code_generator_with_multiple_datatypes_", "cities_for_flixbus", "leaderboards_for_live_golf_data", "flag_for_phone", "search_for_instagram_statistics_api", "general_statistics_for_cash4life", "getfaqsbytopic_for_election2020_smartable", "new_ios_apps_for_app_store", "stock_get_asset_allocation_for_webull", "single_multiple_video_for_aol_on_network", "providers_list_all_for_manga_scrapper", "emailverifier_for_tomba"], "api_descs": {"Finish": "No description available.", "all_districts_for_bdapi": "`/v1.0/districts`\nGet all Districts of Bangladesh in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string\n]\n```", "cities_for_flixbus": "Get a list of cities", "cointelegraph_for_cryptocurrency_news": "Get the top latest news from Cointelegraph.", "emailverifier_for_tomba": "verify the deliverability of an email address.", "flag_for_phone": "Get the Flag Image from a given Country", "general_statistics_for_cash4life": "This endpoint pulls basic statistics of the Cash4Life numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, and cashBall) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.", "getfaqsbytopic_for_election2020_smartable": "Get FAQs by topic.", "getforecastbyid_for_simple_surf_forecast_api": " ", "getqrcode_for_qr_code_generator_with_multiple_datatypes_": "This API will return you an URL of the QR Code image that you can easily embed on to website or download it for your other needs.", "getsurfbreaksbycountry_for_simple_surf_forecast_api": " ", "leaderboards_for_live_golf_data": "Fetch the most recent leaderboard for a given `tournId`, `year`,  and `roundId`. Query the `schedule` endpoint for the desired `tournId` and `year`.\n\nLeaderboards are available 1-2 days before the event begins.", "new_ios_apps_for_app_store": "Get list of new ios apps", "providers_list_all_for_manga_scrapper": "Make request to fetch webtoon providers list.", "search_for_instagram_statistics_api": "Search in the database of brands and influencers by parameters:\n- Keywords in the title, description, account link\n- Filtering by categories, account types, interests and other tags\n- Demographics of subscribers (country, city, gender, age)\n- Social network\n- Number of subscribers\n- Average Engagement per post\n- Average number of post views\n- Sort by relevance, percentage of selected audience or number of selected audience", "searchoffers_for_google_jobs": "get all offers url", "single_multiple_video_for_aol_on_network": "To access the data for a specific video, you simply request a URL from Aol On Network's API with the specific video ID you want.", "stock_get_asset_allocation_for_webull": "Get stock fund asset allocation"}, "aseqs": [{"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "\nAction: getforecastbyid_for_simple_surf_forecast_api\nAction Input: {\n  \"spotid\": \"5678\"\n}", "api_reaction": null}, {"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "\nAction: getforecastbyid_for_simple_surf_forecast_api\nAction Input: {\n  \"spotid\": \"9876\"\n}", "api_reaction": null}, {"api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api", "api_action": "\nAction: getsurfbreaksbycountry_for_simple_surf_forecast_api\nAction Input: {\n  \"countryid\": \"Hawaii\"\n}", "api_reaction": null}, {"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "\nAction: getforecastbyid_for_simple_surf_forecast_api\nAction Input: {\n  \"spotid\": \"1234\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "\nAction: getforecastbyid_for_simple_surf_forecast_api\nAction Input: {\n  \"spotid\": \"1234\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "\nAction: getforecastbyid_for_simple_surf_forecast_api\nAction Input: {\n  \"spotid\": \"1234\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "{\n  \"spotid\": \"1234\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api", "api_action": "\nAction: getsurfbreaksbycountry_for_simple_surf_forecast_api\nAction Input: {\n  \"countryid\": \"Hawaii\"\n}", "api_reaction": null}}]}
{"URL": "65600", "query": "My company is hosting a literary event and we need information about the most popular authors. Can you provide us with a list of the top authors along with their relevant information like their books, published dates, and synopsis? Additionally, it would be great to know more about their backgrounds and achievements.", "api_names": ["Finish", "get_the_most_popular_authors_for_hapi_books", "get_author_information_by_id_for_hapi_books", "getuserbyid_for_user_demo", "store_for_rainforest", "wcag_en_json_for_daily_knowledge", "get_all_cat_breeds_for_cat_breeds", "airport_arrivals_for_flight_fare_search", "test_for_ginger", "read_user_usage_sum_for_ironwifi", "live_aircraft_by_squawk_for_fachaapi", "logoutuser_for_teste"], "api_descs": {"Finish": "No description available.", "airport_arrivals_for_flight_fare_search": "An Endpoint to fetch Arrivals on a given date", "get_all_cat_breeds_for_cat_breeds": "This endpoint will return back all available cat breeds that are available", "get_author_information_by_id_for_hapi_books": "Get a large variety of information of an Author such as the name, a brief biography, the list of books, and more.", "get_the_most_popular_authors_for_hapi_books": "Get the list of the most popular authors right now with a set of other relevant information.", "getuserbyid_for_user_demo": " ", "live_aircraft_by_squawk_for_fachaapi": "Get live positioning for all aircraft with a specific Squawk", "logoutuser_for_teste": "", "read_user_usage_sum_for_ironwifi": "READ - USER USAGE SUM", "store_for_rainforest": "The Store parameters are applicable when making a request with type=store to retrieve Brand Store results for a Brand Store. The Brand Store can be specified either by the url parameter, or by a combination of the store_id and amazon_domain parameters. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.", "test_for_ginger": "-", "wcag_en_json_for_daily_knowledge": "Success criteria to fulfill WCAG."}, "aseqs": [{"api_name": "get_the_most_popular_authors_for_hapi_books", "api_action": "\nAction: get_the_most_popular_authors_for_hapi_books\nAction Input: {}", "api_reaction": null}, {"api_name": "get_author_information_by_id_for_hapi_books", "api_action": "\nAction: get_author_information_by_id_for_hapi_books\nAction Input: {\n  \"author_id\": \"3389\"\n}", "api_reaction": null}, {"api_name": "get_author_information_by_id_for_hapi_books", "api_action": "\nAction: get_author_information_by_id_for_hapi_books\nAction Input: {\n  \"author_id\": \"5430144\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_the_most_popular_authors_for_hapi_books"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_the_most_popular_authors_for_hapi_books\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_most_popular_authors_for_hapi_books"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_most_popular_authors_for_hapi_books"}}]}
{"URL": "2433", "query": "I'm looking for suggestions for a new domain for my personal blog. Can you check if the domain 'myblog.com' is disposable and suggest an alternative domain if it is? Additionally, I would like to verify the SMTP of the domain 'myblog.com'. Please provide the results.", "api_names": ["email_check_smtp_for_fast_email_verifier", "disposable_domain_and_suggest_domain_for_fast_email_verifier", "Finish", "search_v2_for_twitter", "spellout_for_spellout", "get_company_quarterly_balance_sheet_for_finance_data", "years_for_car_data", "matches_for_bildbet", "query_races_for_horse_racing", "current_air_quality_for_air_quality", "users_for_reqres_dont_change_", "playerdetails_for_sportifyapi", "artist_songs_for_genius_song_lyrics", "album_metadata_for_spotify_data", "ip_geolocation_lookup_for_ip_geolocation_lookup", "get_list_of_available_modes_for_image_anonymization", "property_details_for_zillow_data_v2", "constructors_standings_for_fia_formula_1_championship_statistics"], "api_descs": {"Finish": "No description available.", "album_metadata_for_spotify_data": "album-metadata", "artist_songs_for_genius_song_lyrics": "Documents (songs) for the artist specified.", "constructors_standings_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve constructor standings data about a specific F1 championship by specifying a year. If you ommit the ***year *** query parameter, a default value will be set to current year.", "current_air_quality_for_air_quality": "Retrieves current air quality conditions for any location in the world, given a lat/lon.", "disposable_domain_and_suggest_domain_for_fast_email_verifier": "Find out if the domain is disposable and get a suggested domain.", "email_check_smtp_for_fast_email_verifier": "An easy way of checking your domain's SMTP.", "get_company_quarterly_balance_sheet_for_finance_data": "Get Company Quarterly Balance Sheet", "get_list_of_available_modes_for_image_anonymization": "Service provides server modes that may be used to choose which kind of objects to hide. This endpoint returns list of modes that may be used as query parameters for requests to the `results` endpoint.\n\nThe following modes are supported:\n\n* `hide-clp` – to hide car license plates\n* `hide-face` – to hide faces", "ip_geolocation_lookup_for_ip_geolocation_lookup": "API returns location data such as country, region, city, zip, timezone, isp, asn and org and more", "matches_for_bildbet": "Latest Matches for Bildbet", "playerdetails_for_sportifyapi": "Player Details", "property_details_for_zillow_data_v2": "Property details", "query_races_for_horse_racing": "The best way to search races.", "search_v2_for_twitter": "-", "spellout_for_spellout": "Spell out number in given language using provided rule set", "users_for_reqres_dont_change_": "Users", "years_for_car_data": "get a list of supported years"}, "aseqs": [{"api_name": "disposable_domain_and_suggest_domain_for_fast_email_verifier", "api_action": "\nAction: disposable_domain_and_suggest_domain_for_fast_email_verifier\nAction Input: {\n  \"domain\": \"myblog.com\"\n}", "api_reaction": null}, {"api_name": "email_check_smtp_for_fast_email_verifier", "api_action": "\nAction: email_check_smtp_for_fast_email_verifier\nAction Input: {\n  \"username\": \"test\",\n  \"domain\": \"myblog.com\"\n}", "api_reaction": null}, {"api_name": "disposable_domain_and_suggest_domain_for_fast_email_verifier", "api_action": "\nAction: disposable_domain_and_suggest_domain_for_fast_email_verifier\nAction Input: {\n  \"domain\": \"newblog.com\"\n}", "api_reaction": null}, {"api_name": "email_check_smtp_for_fast_email_verifier", "api_action": "\nAction: email_check_smtp_for_fast_email_verifier\nAction Input: {\n  \"username\": \"test\",\n  \"domain\": \"newblog.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "disposable_domain_and_suggest_domain_for_fast_email_verifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "email_check_smtp_for_fast_email_verifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "disposable_domain_and_suggest_domain_for_fast_email_verifier", "api_action": "\nAction: disposable_domain_and_suggest_domain_for_fast_email_verifier\nAction Input: {\n  \"domain\": \"myblog.com\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "disposable_domain_and_suggest_domain_for_fast_email_verifier"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"disposable_domain_and_suggest_domain_for_fast_email_verifier\",\n\t\"api_action\": \"\\nAction: disposable_domain_and_suggest_domain_for_fast_email_verifier\\nAction Input: {\\n  \\\"domain\\\": \\\"myblog.com\\\"\\n}\",\n}"}]}
{"URL": "78425", "query": "I just received an email with the subject 'Important Document'. Can you provide me with the details of this email, including the sender, date, and time? Also, mark it as read so that I can keep track of my unread emails.", "api_names": ["getnewemail10_for_apimail10", "Finish", "readmail_for_apimail10", "artist_singles_for_spotify_data", "provider1_live_match_id_for_football_betting_odds", "remove_profanity_for_purgomalum", "get_planet_position_angles_for_yawin_indian_astrology", "get_game_details_for_viperscore", "facilities_lookup_for_tanzania_api", "exportaddress_for_chaingateway_io", "list_numbers_for_calltrackingmetrics", "topscorersintheplayoffsbyseasontotalpoints_for_nba_statistics_api", "check_user_exists_for_waifu", "artist_discovered_on_for_spotify", "auto_complete_for_shazam"], "api_descs": {"Finish": "No description available.", "artist_discovered_on_for_spotify": "Artist discovered on playlists (max 50)", "artist_singles_for_spotify_data": "artist-singles", "auto_complete_for_shazam": "Get suggestions by word or phrase", "check_user_exists_for_waifu": "Check user exists", "exportaddress_for_chaingateway_io": "Returns all ethereum addresses created with an account.", "facilities_lookup_for_tanzania_api": "This endpoint allows you to get facilities in Tanzania like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "get_game_details_for_viperscore": "With \"Get game details\" you'll get the basic information about the game you were looking for.", "get_planet_position_angles_for_yawin_indian_astrology": "Find the Planet position angles on a birth date and time", "getnewemail10_for_apimail10": "get New Email 10", "list_numbers_for_calltrackingmetrics": "The numbers API allows you to search, purchase, and manage settings on each tracking number.", "provider1_live_match_id_for_football_betting_odds": "get match", "readmail_for_apimail10": "ReadMail", "remove_profanity_for_purgomalum": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request", "topscorersintheplayoffsbyseasontotalpoints_for_nba_statistics_api": "## Return top players (playoffs) by total points in descending order.\n\n_Playoffs season is specified in the URL._"}, "aseqs": [{"api_name": "getnewemail10_for_apimail10", "api_action": "\nAction: getnewemail10_for_apimail10\nAction Input: {}", "api_reaction": null}, {"api_name": "readmail_for_apimail10", "api_action": "\nAction: readmail_for_apimail10\nAction Input: {\n  \"mailid\": \"welcome\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "readmail_for_apimail10"}}, {"state": "generated_by_agent", "aseq": {"api_name": "readmail_for_apimail10", "api_action": "\nAction: readmail_for_apimail10\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "readmail_for_apimail10", "api_action": "\nAction: readmail_for_apimail10\nAction Input: {\n  \"mailid\": \"welcome\"\n}", "api_reaction": null}}]}
{"URL": "79067", "query": "Retrieve the trades made on COINBASE for BTC/USDT from October 11th, 2022, to October 15th, 2022. Also, include the OHLCV metrics for the same period.", "api_names": ["metrics_ohlcv_trial_for_cryptocurrency_financial_data", "trades_for_cryptocurrency_financial_data", "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "Finish", "password_generation_for_explorarc_s_password_generation_api", "keyword_search_at_coordinate_point_for_local_rank_tracker", "stock_index_trend_for_yahoo_finance_v2", "healthcheck_for_zumata", "hourlyweatherzip_for_history", "tournament_standings_for_football_data", "transfermarkt_details_for_theclique", "recent_100_for_moka_news", "get_tags_for_pizzaallapala", "get_all_recipes_2_for_comfyfood", "listlast_for_ordering", "tag_tag_for_tronald_dump", "search_videos_channels_playlists_for_youtube_search_and_download", "search_countries_by_name_for_geography", "18_1_app_config_for_hog", "findbyactiveingredientcrop_for_agrofitdata"], "api_descs": {"18_1_app_config_for_hog": "取得系統參數", "Finish": "No description available.", "findbyactiveingredientcrop_for_agrofitdata": " ", "get_all_recipes_2_for_comfyfood": "return more recipes", "get_tags_for_pizzaallapala": "Adss", "healthcheck_for_zumata": "", "hourlyweatherzip_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (country and zip-code)", "keyword_search_at_coordinate_point_for_local_rank_tracker": "Get search results at the specified coordinate point without any rank comparison data.", "listlast_for_ordering": "Get last orders for user (all states included).", "metrics_ohlcv_pro_for_cryptocurrency_financial_data": "Price and volume metrics for spot markets", "metrics_ohlcv_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests", "password_generation_for_explorarc_s_password_generation_api": "The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords", "recent_100_for_moka_news": "GET the recent  100 news", "search_countries_by_name_for_geography": "Search Countries by Name. Both official and common names are searched", "search_videos_channels_playlists_for_youtube_search_and_download": "Search any youtube content with all available filters", "stock_index_trend_for_yahoo_finance_v2": "Get index trend earnings history information for a particular stock", "tag_tag_for_tronald_dump": "Retrieve a quotes by a given tag.", "tournament_standings_for_football_data": "Team Rankings for a specific competition.", "trades_for_cryptocurrency_financial_data": "Trades endpoint available upon request", "transfermarkt_details_for_theclique": "Enter **SLUG ** from Transfermarkt search API.\n\nIt os working for all types (players, clubs, managers, referees, etc)"}, "aseqs": [{"api_name": "trades_for_cryptocurrency_financial_data", "api_action": "\nAction: trades_for_cryptocurrency_financial_data\nAction Input: {\n  \"start\": \"2022-10-11T00:00:00\",\n  \"end\": \"2022-10-15T23:59:59\",\n  \"base\": \"BTC\",\n  \"market_venue\": \"COINBASE\",\n  \"symbol\": \"USDT\"\n}", "api_reaction": null}, {"api_name": "metrics_ohlcv_trial_for_cryptocurrency_financial_data", "api_action": "\nAction: metrics_ohlcv_trial_for_cryptocurrency_financial_data\nAction Input: {\n  \"start\": \"2022-10-11T00:00:00\",\n  \"end\": \"2022-10-15T23:59:59\",\n  \"base\": \"USDT\",\n  \"market_venue\": \"COINBASE\",\n  \"symbol\": \"BTC\"\n}", "api_reaction": null}, {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "api_action": "\nAction: metrics_ohlcv_pro_for_cryptocurrency_financial_data\nAction Input: {\n  \"start\": \"2022-10-11T00:00:00\",\n  \"end\": \"2022-10-15T23:59:59\",\n  \"base\": \"USDT\",\n  \"market_venue\": \"COINBASE\",\n  \"symbol\": \"BTC\",\n  \"gran\": \"1d\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "api_action": "\nAction: metrics_ohlcv_pro_for_cryptocurrency_financial_data\nAction Input: {\n  \"start\": \"2022-10-11T00:00:00\",\n  \"end\": \"2022-10-15T23:59:59\",\n  \"base\": \"BTC\",\n  \"market_venue\": \"COINBASE\",\n  \"symbol\": \"USDT\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "trades_for_cryptocurrency_financial_data", "api_action": "\nAction: trades_for_cryptocurrency_financial_data\nAction Input: {\n  \"start\": \"2022-10-11T00:00:00\",\n  \"end\": \"2022-10-15T23:59:59\",\n  \"base\": \"BTC\",\n  \"market_venue\": \"COINBASE\",\n  \"symbol\": \"USDT\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"trades_for_cryptocurrency_financial_data\",\n\t\"api_action\": \"\\nAction: trades_for_cryptocurrency_financial_data\\nAction Input: {\\n  \\\"start\\\": \\\"2022-10-11T00:00:00\\\",\\n  \\\"end\\\": \\\"2022-10-15T23:59:59\\\",\\n  \\\"base\\\": \\\"BTC\\\",\\n  \\\"market_venue\\\": \\\"COINBASE\\\",\\n  \\\"symbol\\\": \\\"USDT\\\"\\n}\",\n}"}]}
{"URL": "73901", "query": "I'm a data analyst and I need to analyze customer reviews and ratings for IBM Morocco. Can you provide me with the reviews and ratings? I need all the reviews with pagination, sorted by relevance. Additionally, include the average rating, total number of reviews, and the next page link.", "api_names": ["Finish", "searchbusiness_for_google_reviews_scraper", "getreviews_for_google_reviews_scraper", "sports_list_for_global_data", "v1_list_banks_for_hryvna_today", "capital_by_country_for_geosource_api", "properties_list_for_idealista_v2", "get_pin_info_for_pinterest_scraper", "osoy_for_us_presidential_election", "test_api_for_airbnb_v2", "iplocation_for_ip_geo_location_find_ip_location_and_details", "get_sign_hexagram_for_sign_hexagram"], "api_descs": {"Finish": "No description available.", "capital_by_country_for_geosource_api": "Retrives a value of the capital of the country.", "get_pin_info_for_pinterest_scraper": "Get Pin Info", "get_sign_hexagram_for_sign_hexagram": "Return one of the sign with full info by given category.", "getreviews_for_google_reviews_scraper": "with this endpoint you can all reviews for any business searched  with pagination", "iplocation_for_ip_geo_location_find_ip_location_and_details": "Provides Geo information for the given IP.", "osoy_for_us_presidential_election": "Returns JSON block of results for One State, One Year (OSOY), for the specified US Presidential Election year (i.e., Illinois/2008).", "properties_list_for_idealista_v2": "List properties for sale or rent in Italy, Spain, Portugal with options and filters", "searchbusiness_for_google_reviews_scraper": "with this endpoint you can search the business you want to get their reviews and ratings", "sports_list_for_global_data": "Provides the list of the sports which are supported in the global coverage.", "test_api_for_airbnb_v2": "This API is to test if server is up and running", "v1_list_banks_for_hryvna_today": ""}, "aseqs": [{"api_name": "searchbusiness_for_google_reviews_scraper", "api_action": "\nAction: searchbusiness_for_google_reviews_scraper\nAction Input: {\n  \"keyword\": \"IBM\"\n}", "api_reaction": null}, {"api_name": "getreviews_for_google_reviews_scraper", "api_action": "\nAction: getreviews_for_google_reviews_scraper\nAction Input: {\n  \"sort\": \"relevance\",\n  \"nextpage\": \"\",\n  \"is_id\": \"U2FsdGVkX18sW3WS6mAfJsmShm3dFygWgLCZkeE7e9RlIb99kNGu27AgcYlIYtH0kuTcSgwZzEaYgxZ9gbu43w%3D%3D\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "searchbusiness_for_google_reviews_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getreviews_for_google_reviews_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getreviews_for_google_reviews_scraper"}}]}
{"URL": "87226", "query": "My company is creating an application that requires accurate information about municipalities in Spain. Can you help me retrieve the municipality for the postal code 08001? It would be helpful if the API response includes the postal code and the corresponding municipality.", "api_names": ["municipio_por_c_digo_postal_for_c_digos_postales_de_espa_a", "Finish", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "find_feed_find_get_for_facebook_user_info", "photos_for_zillow_data_v2", "provider2_live_list_for_football_betting_odds", "getuserbyname_for_my_api_12345", "airplanes_ordered_by_ascending_for_airplanesdb", "groundhogs_for_groundhog_day_api", "countries_en_json_for_daily_knowledge"], "api_descs": {"Finish": "No description available.", "airplanes_ordered_by_ascending_for_airplanesdb": "Get all airplanes ordered by name in ascending order.", "countries_en_json_for_daily_knowledge": "Capitals, currencies, flags and more.", "find_feed_find_get_for_facebook_user_info": "Find Feed by UID or by_object_id(PageID, GroupID) ", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "getuserbyname_for_my_api_12345": "", "groundhogs_for_groundhog_day_api": "Returns all prognosticating animals with their known predictions.", "municipio_por_c_digo_postal_for_c_digos_postales_de_espa_a": "Obtiene el municipio al que pertenece un código postal", "photos_for_zillow_data_v2": "Photos", "provider2_live_list_for_football_betting_odds": "get all matches"}, "aseqs": [{"api_name": "municipio_por_c_digo_postal_for_c_digos_postales_de_espa_a", "api_action": "\nAction: municipio_por_c_digo_postal_for_c_digos_postales_de_espa_a\nAction Input: {\n  \"codigo_postal\": \"08001\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "municipio_por_c_digo_postal_for_c_digos_postales_de_espa_a"}}, {"state": "generated_by_agent", "aseq": {"api_name": "municipio_por_c_digo_postal_for_c_digos_postales_de_espa_a"}}]}
{"URL": "77977", "query": "I am interested in today's greyhound races. Could you show me the racecards for the current day? Also, I would like to know the race details for race ID 53128.", "api_names": ["racecards_for_greyhound_racing_uk", "race_detail_info_for_greyhound_racing_uk", "Finish", "geo_ping_global_ip_lookup_for_global_webserver_or_ip_response_time_and_location", "ocr_for_ocr_separate_text_from_images", "getprices_for_crypto_and_forex_rates", "announcement_for_bybit", "anime_details_for_hummingbird_v2", "prueb_for_deepsound", "get_general_game_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "by_city_for_ambee_air_quality", "etf_expand_list_for_palmy_investing_api"], "api_descs": {"Finish": "No description available.", "anime_details_for_hummingbird_v2": "", "announcement_for_bybit": "Get Bybit OpenAPI announcements in the last 30 days in reverse order.", "by_city_for_ambee_air_quality": "Get the latest air quality data for your city", "etf_expand_list_for_palmy_investing_api": "Premium: A list of ETFs with expanded functionality. Here you can view Sectors& Countries.", "geo_ping_global_ip_lookup_for_global_webserver_or_ip_response_time_and_location": "Connects to 12 global servers and determines the local ip at that location for a given domain name or ip address, reports back location and response time of servers.", "get_general_game_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call pulls back the most general information for a game: away team, home team, game date, and game start time.  All times are in Eastern (ET) time zone.  \ngameID is needed.  You can retrieve gameID from a few different calls.  The \"getNFLGamesForDate\" call or the \"getNFLTeamSchedule\" call will be the best ways to get the gameID's.   \n\nCall should look like this: \n/getNFLGameInfo?gameID=20221212_NE@ARI", "getprices_for_crypto_and_forex_rates": "Get list of prices for all assets", "ocr_for_ocr_separate_text_from_images": "This is the main endpoint for using ocr API.\n\nThe \"url\" parameter requires an image or PDF file url. The PDF file must not be long.\n\nThe \"language\" parameter requires some specific language codes:\n\n- Arabic - ara\n- Bulgarian- bul\n- ChineseSimplified- chs\n- ChineseTraditional- cht\n- Croatian- hrv\n- Czech- cze\n- Danish- dan\n- Dutch- dut\n- English- eng\n- Finnish- fin\n- French- fre\n- German- ger\n- Greek- gre\n- Hungarian- hun\n- Italian- ita\n- Japanese- jpn\n- Korean- kor\n- Polish- pol\n- Portuguese- por\n- Russian- rus\n- Slovenian- slv\n- Spanish- spa\n- Swedish- swe\n- Turkish- tur", "prueb_for_deepsound": "Prueb", "race_detail_info_for_greyhound_racing_uk": "**Get race detailed info by ID {id_race}.**\n\nYou can get the \"id_race\" from Results or Racecards endpoints", "racecards_for_greyhound_racing_uk": "**Get races list.**\n\n- By default current day.\n- Or by date, setting it by parameter"}, "aseqs": [{"api_name": "racecards_for_greyhound_racing_uk", "api_action": "\nAction: racecards_for_greyhound_racing_uk\nAction Input: {}", "api_reaction": null}, {"api_name": "race_detail_info_for_greyhound_racing_uk", "api_action": "\nAction: race_detail_info_for_greyhound_racing_uk\nAction Input: {\n  \"id_race\": \"53128\"\n}", "api_reaction": null}, {"api_name": "racecards_for_greyhound_racing_uk", "api_action": "\nAction: racecards_for_greyhound_racing_uk\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "racecards_for_greyhound_racing_uk"}}, {"state": "generated_by_agent", "aseq": {"api_name": "race_detail_info_for_greyhound_racing_uk", "api_action": "{\"id_race\": \"53128\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "racecards_for_greyhound_racing_uk", "api_action": "\nAction: racecards_for_greyhound_racing_uk\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "race_detail_info_for_greyhound_racing_uk", "api_action": "\nAction: race_detail_info_for_greyhound_racing_uk\nAction Input: {\n  \"id_race\": \"53128\"\n}", "api_reaction": null}}]}
{"URL": "26690", "query": "I'm creating a social media post and I need a cute animal picture. Can you provide me with a random mlem image that is tagged as 'adorable' and has a minimum width of 300 pixels? Additionally, I would like to know the brightness, width, height, and orientation of the image.", "api_names": ["random_mlem_for_mlemapi", "tags_for_mlemapi", "Finish", "balance_for_locationiq", "song_download_convert_for_miza", "driverstandingsbyspecifyingthedriver_for_formula_1_fixed", "getsupportedfileformats_for_groupdocs_classification_cloud", "ip2currency_api_for_ip2currency", "similar_for_market_intelligence_by_automata", "api_version_for_adzuna", "listoforders_for_sandbox_mktplace_eu_04_orders", "fetch_birthday_groups_for_zigatext_global_bulk_sms_otp"], "api_descs": {"Finish": "No description available.", "api_version_for_adzuna": "Returns the current version of this API", "balance_for_locationiq": "The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC).", "driverstandingsbyspecifyingthedriver_for_formula_1_fixed": "Driver standings by giving in the driverid(name of the driver).", "fetch_birthday_groups_for_zigatext_global_bulk_sms_otp": "Fetch Birthday Groups", "getsupportedfileformats_for_groupdocs_classification_cloud": " ", "ip2currency_api_for_ip2currency": "Currency by IP Geolocation API", "listoforders_for_sandbox_mktplace_eu_04_orders": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html", "random_mlem_for_mlemapi": "Returns one random mlem image in JSON", "similar_for_market_intelligence_by_automata": " ", "song_download_convert_for_miza": "Searches, downloads, converts, and uploads the song URL simultaneously, streaming the file with very little delay. Song URL may be from any platform supported by Youtube-DL/FFmpeg, which are used as part of the backend.\nThis endpoint is the fastest to respond out of all the available ones for song downloading, but will only support *mp3*, *opus*, *ogg*, and *wav* as output formats (no video downloading). Quality will be maximum by default, or 224kbps if conversion is required. For those wishing to use this API as a backend for their own Discord bot, the opus format output is compatible with direct playback through Discord's voice websocket.\nFor testing purposes, the *download* query key may be changed to *view*, which will stream the same file, but without the attachment disposition, allowing it to play as audio in a browser while being downloaded.", "tags_for_mlemapi": "Returns all tags in JSON"}, "aseqs": [{"api_name": "tags_for_mlemapi", "api_action": "\nAction: tags_for_mlemapi\nAction Input: {}", "api_reaction": null}, {"api_name": "random_mlem_for_mlemapi", "api_action": "\nAction: random_mlem_for_mlemapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tags_for_mlemapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "similar_for_market_intelligence_by_automata", "api_action": "{\"tags\": \"adorable\", \"min_width\": 300}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "similar_for_market_intelligence_by_automata", "api_action": "\nAction: similar_for_market_intelligence_by_automata\nAction Input: {\r\n\t\"tags\": [\r\n\t\t\"adorable\"\r\n\t],\r\n\t\"imageDimensionsMinimumWidth\": 300\r\n}", "api_reaction": null}}]}
{"URL": "73656", "query": "I'm planning a road trip with my friends and we need a playlist. Can you recommend some popular songs from YouTooSound that would be perfect for a long drive? It would be great if you could provide the song details and a preview of each song.", "api_names": ["youtoosound_for_youtoosound", "https_www_youtoosound_com_sound_for_youtoosound", "Finish", "list_histories_for_crypto_grana", "22_getsendbirduser_for_category_list", "njajal_for_new_client", "get_index_price_kline_for_bybit", "getthelistofcountriesregistered_for_sandbox_mktplace_eu_04_orders", "newspaper_company_filter_for_news_for_east_china_news", "getlearningresourcesbytopic_for_azure", "get_city_for_wgd_places", "get_user_orders_for__demo_project_v3", "search_music_for_kwai", "market_get_movers_for_schwab", "telegram_group_info_for_telegram_v2", "crypto_quotes_for_real_time_quotes", "tournaments_for_live_golf_data", "get_all_crypto_news_for_crypto_news_live_v2"], "api_descs": {"22_getsendbirduser_for_category_list": " ", "Finish": "No description available.", "crypto_quotes_for_real_time_quotes": "Returns the real time price of a crypto currency pair", "get_all_crypto_news_for_crypto_news_live_v2": "Gets all crypto news from the currently configured websites", "get_city_for_wgd_places": "Gets city information from a country id", "get_index_price_kline_for_bybit": "Query Index Price Kline", "get_user_orders_for__demo_project_v3": " ", "getlearningresourcesbytopic_for_azure": "Get Azure learning resources by topic.", "getthelistofcountriesregistered_for_sandbox_mktplace_eu_04_orders": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html", "https_www_youtoosound_com_sound_for_youtoosound": "https://www.youtoosound.com/sound", "list_histories_for_crypto_grana": "List of your histories", "market_get_movers_for_schwab": "List recent movers in the market", "newspaper_company_filter_for_news_for_east_china_news": "filters based on newspaper company", "njajal_for_new_client": "show nearby place from current location", "search_music_for_kwai": "Search Music API", "telegram_group_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Group\n\n- Title\n- Photo\n- Description\n- Members\n- On line Memebers", "tournaments_for_live_golf_data": "Fetch tournament information, such as metadata, players, courses, and earnings. Query the `schedule` endpoint to retrieve the necessary `tournId` and `year` parameters. This info will be updated with a players entry list the Friday before the tournament.", "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome"}, "aseqs": [{"api_name": "https_www_youtoosound_com_sound_for_youtoosound", "api_action": "\nAction: https_www_youtoosound_com_sound_for_youtoosound\nAction Input: {}", "api_reaction": null}, {"api_name": "youtoosound_for_youtoosound", "api_action": "\nAction: youtoosound_for_youtoosound\nAction Input: {}", "api_reaction": null}, {"api_name": "youtoosound_for_youtoosound", "api_action": "\nAction: youtoosound_for_youtoosound\nAction Input: {}", "api_reaction": null}, {"api_name": "https_www_youtoosound_com_sound_for_youtoosound", "api_action": "\nAction: https_www_youtoosound_com_sound_for_youtoosound\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_music_for_kwai"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_music_for_kwai", "api_action": "\nAction: search_music_for_kwai\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_music_for_kwai", "api_action": "\nAction: search_music_for_kwai\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_music_for_kwai", "api_action": "\nAction: search_music_for_kwai\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_music_for_kwai", "api_action": "\nAction: search_music_for_kwai\nAction Input: {}\ndebug_data: {'previous_search_results': []}", "api_reaction": null}}]}
{"URL": "70457", "query": "I'm planning to invest in The Sandbox - SAND and I need to analyze its price performance. Can you fetch the price data for the past 1 month, 1 year, and 3 months? It would also be helpful to get the latest news from Medium.", "api_names": ["past_1_month_for_the_sandbox_sand", "medium_for_the_sandbox_sand", "past_1_year_for_the_sandbox_sand", "past_3_months_for_the_sandbox_sand", "Finish", "get_all_apis_for_aaaa", "bulk_geocoding_for_arcgis_platform_geocoding", "get_humidty_for_cloud_cast", "top_popular_posts_for_reddit", "auto_complete_for_zoopla_v2", "audit_for_entity_risk", "verify_single_number_for_phone_verification", "get_countries_for_50k_radio_stations", "home_page_for_instant_cameroon_news", "charts_chain_for_defi_data", "read_a_survey_for_nps_net_promoter_score", "logo_api_for_logo", "properties_v2_get_rooms_for_booking", "team_season_statistics_for_hockey_datafeeds_by_rolling_insights", "business_idea_for_business_starter_api"], "api_descs": {"Finish": "No description available.", "audit_for_entity_risk": "This endpoint retrieves individual audit records. An audit record represents the request and response that was submitted using Sigma's API and it is used for traceability.", "auto_complete_for_zoopla_v2": "Get auto complete suggestion by term or phrase", "bulk_geocoding_for_arcgis_platform_geocoding": "Geocode an entire list of addresses in one request using the geocodeAddresses operation. Geocoding many addresses at once is also known as batch or bulk geocoding.\n\n![bulk geocoding](https://developers.arcgis.com/rest/geocode/api-reference/GUID-FD609701-B9B5-49DB-BFD9-A936280A09C6-web.png)\n\n[API reference `geocodeAddresses` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-geocode-addresses.htm)", "business_idea_for_business_starter_api": "Generate a business idea", "charts_chain_for_defi_data": "Get historical TVL of a chain", "get_all_apis_for_aaaa": "Get information for all APIs, including the `id`, `name`, and `status`.", "get_countries_for_50k_radio_stations": "Get country list", "get_humidty_for_cloud_cast": "Get the humidity for the current city", "home_page_for_instant_cameroon_news": "Home and Welcome page that introduces the API", "logo_api_for_logo": "Using our logo finder service is entirely free with attribution. \n<img src=\"https://api.companyurlfinder.com/logo/amazon.com\" />", "medium_for_the_sandbox_sand": "Get official news from Medium.", "past_1_month_for_the_sandbox_sand": "Get price data for the past month. (~30 days)\n\n~hourly data points.", "past_1_year_for_the_sandbox_sand": "Get price data for the past 1 year.\n\n~ daily (00:00 UTC) data points.", "past_3_months_for_the_sandbox_sand": "Get price data for the past 3 months.\n\n~hourly data points.", "properties_v2_get_rooms_for_booking": "Get full details of rooms in the hotel", "read_a_survey_for_nps_net_promoter_score": "Get the details of a given customer survey by its survey id (sid)", "team_season_statistics_for_hockey_datafeeds_by_rolling_insights": "Returns statistics for teams", "top_popular_posts_for_reddit": "Top Popular Posts", "verify_single_number_for_phone_verification": "Get the details of phone number supplied in the query param. Do not forget to pass Authorization header with your access_token. \n\nHint - access_token are returned as part of login api call."}, "aseqs": [{"api_name": "past_1_month_for_the_sandbox_sand", "api_action": "\nAction: past_1_month_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}, {"api_name": "past_1_year_for_the_sandbox_sand", "api_action": "\nAction: past_1_year_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}, {"api_name": "past_3_months_for_the_sandbox_sand", "api_action": "\nAction: past_3_months_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}, {"api_name": "medium_for_the_sandbox_sand", "api_action": "\nAction: medium_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"api_name\": \"past_1_month_for_the_sandbox_sand\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "past_1_year_for_the_sandbox_sand", "api_action": "\nAction: past_1_year_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "past_3_months_for_the_sandbox_sand", "api_action": "\nAction: past_3_months_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "medium_for_the_sandbox_sand", "api_action": "\nAction: medium_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "past_1_month_for_the_sandbox_sand"}}]}
{"URL": "76563", "query": "I work for a law firm and need to gather recent arrest records for a specific organization. Can you provide me with the most recent arrests? I would also like to search for individuals by name and retrieve their arrest information. Please include the organization source ID in the search.", "api_names": ["Finish", "recent_for_jailbase", "sources_for_jailbase", "search_for_jailbase", "trader_details_for_bybit_leaderboard", "script_for_unicode_codepoints", "artist_singles_for_spotify", "create_user_for_suggestic", "memre_api_v1_study_for_learning_engine", "getallquotes_for_radio_world_75_000_worldwide_fm_radio_stations_", "list_playlist_videos_for_youtube_media_downloader", "eventlist_for_31events_send_native_calendar_invites", "flights_get_more_info_for_flight_radar", "weather_cities_in_indonesia_filtered_by_province_code_for_indonesia_latest_weather_and_earthquake", "get_all_collections_by_user_for_pulsar", "oceania_for_nomad_list_cities"], "api_descs": {"Finish": "No description available.", "artist_singles_for_spotify": "Get artist singles", "create_user_for_suggestic": "Each Suggestic partner/client has the ability to create their own set of users.", "eventlist_for_31events_send_native_calendar_invites": "", "flights_get_more_info_for_flight_radar": "Get more information of specific aircraft, flight, airline, etc...", "get_all_collections_by_user_for_pulsar": "Get all collections by user", "getallquotes_for_radio_world_75_000_worldwide_fm_radio_stations_": "You will get all the quotes here based on.\n- limit\n- page", "list_playlist_videos_for_youtube_media_downloader": "This endpoint lists **available** videos of a YouTube playlist (unavailable ones won't be listed by YouTube). Pagination scraping is supported. Thumbnails won't be blurred by age safety.", "memre_api_v1_study_for_learning_engine": "Get items a specific user should study.\n", "oceania_for_nomad_list_cities": "Get Oceania cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "recent_for_jailbase": "Get recent arrests", "script_for_unicode_codepoints": "Information about a Script", "search_for_jailbase": "Search for individuals by name", "sources_for_jailbase": "All the organizations we collect information for", "trader_details_for_bybit_leaderboard": "Returns full trader info.", "weather_cities_in_indonesia_filtered_by_province_code_for_indonesia_latest_weather_and_earthquake": "Weather Cities in Indonesia filtered by Province (Code)\n\nHere is the list of Povince Code (kode_bps)\n- 11\tProvinsi Aceh\n- 51\tProvinsi Bali\n- 19\tProvinsi Bangka Belitung\n- 36\tProvinsi Banten\n- 17\tProvinsi Bengkulu\n- 34\tProvinsi DI Yogyakarta\n- 31\tProvinsi DKI Jakarta\n- 75\tProvinsi Gorontalo\n- 15\tProvinsi Jambi\n- 32\tProvinsi Jawa Barat\n- 33\tProvinsi Jawa Tengah\n- 35\tProvinsi Jawa Timur\n- 61\tProvinsi Kalimantan Barat\n- 63\tProvinsi Kalimantan Selatan\n- 62\tProvinsi Kalimantan Tengah\n- 64\tProvinsi Kalimantan Timur\n- 65\tProvinsi Kalimantan Utara\n- 21\tProvinsi Kepulauan Riau\n- 18\tProvinsi Lampung\n- 81\tProvinsi Maluku\n- 82\tProvinsi Maluku Utara\n- 52\tProvinsi Nusa Tenggara Barat\n- 53\tProvinsi Nusa Tenggara Timur\n- 94\tProvinsi Papua\n- 91\tProvinsi Papua Barat\n- 14\tProvinsi Riau\n- 76\tProvinsi Sulawesi Barat\n- 73\tProvinsi Sulawesi Selatan\n- 72\tProvinsi Sulawesi Tengah\n- 74\tProvinsi Sulawesi Tenggara\n- 71\tProvinsi Sulawesi Utara\n- 13\tProvinsi Sumatera Barat\n- 16\tProvinsi Sumatera Selatan\n- 12\tProvinsi Sumatera Utara"}, "aseqs": [{"api_name": "sources_for_jailbase", "api_action": "\nAction: sources_for_jailbase\nAction Input: {}", "api_reaction": null}, {"api_name": "recent_for_jailbase", "api_action": "\nAction: recent_for_jailbase\nAction Input: {\n\"source_id\": \"al-bcso\"\n}", "api_reaction": null}, {"api_name": "search_for_jailbase", "api_action": "\nAction: search_for_jailbase\nAction Input: {\n\"source_id\": \"al-bcso\",\n\"last_name\": \"Smith\"\n}", "api_reaction": null}, {"api_name": "recent_for_jailbase", "api_action": "\nAction: recent_for_jailbase\nAction Input: {\n\"source_id\": \"al-bcso\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_jailbase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_jailbase", "api_action": "{\"organization_source_id\": null, \"search_term\":\"specific_organization\", \"sort_by\":\"date_arrested\",\"desc\":\"desc\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_jailbase", "api_action": "\nAction: search_for_jailbase\nAction Input: {\n\"name\": \"John Doe\",\n\"source_id\": \"al-bcso\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "recent_for_jailbase", "api_action": "\nAction: recent_for_jailbase\nAction Input: {\n\"source_id\": \"al-bcso\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_jailbase", "api_action": "\nAction: search_for_jailbase\nAction Input: {\n\"source_id\": \"al-bcso\",\n\"last_name\": \"Smith\"\n}", "api_reaction": null}}]}
{"URL": "42384", "query": "I am writing an article on the Chilean government and need information on the Ministry of Education. Can you provide me with the name and position of the minister, their photo, and whether they are currently serving as a substitute? Additionally, give me a list of all ministries and subsecretaries.", "api_names": ["listar_todos_for_dataestado", "Finish", "ministerio_espec_fico_for_dataestado", "data_events_for_sports_odds_betapi", "getclimatescorebygps_for_rankiteo_climate_risk_assessment", "get_artist_albums_for_spotify_data_api", "exchange_for_currency_exchange", "anime_for_hummingbird_v1", "feriados_dos_estados_for_feriados_brasileiros", "get_media_for_getmedia", "get_all_match_play_today_by_competitions_for_match_api", "checkdisposableemail_for_whois_lookup_v4", "daily_phrase_for_horoscope_astrology", "getquestionsbyexam_for_tech_exams", "airport_departues_for_flight_fare_search"], "api_descs": {"Finish": "No description available.", "airport_departues_for_flight_fare_search": "An endpoint to get Departues in an airport", "anime_for_hummingbird_v1": "", "checkdisposableemail_for_whois_lookup_v4": "REST API to lookup disposable email", "daily_phrase_for_horoscope_astrology": "Get a daily phrase", "data_events_for_sports_odds_betapi": "Data Events api", "exchange_for_currency_exchange": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.", "feriados_dos_estados_for_feriados_brasileiros": "Retorna os feriados de certo estado. Os parâmetros necessários são: 1. Estado - Sigla da Unidade Federativa em letra maíuscula. 2. Ano", "get_all_match_play_today_by_competitions_for_match_api": "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id.", "get_artist_albums_for_spotify_data_api": "Get artist albums request from one of the groups : album, single, appears_on, compilation", "get_media_for_getmedia": "Get Media", "getclimatescorebygps_for_rankiteo_climate_risk_assessment": "Get climate score for a specific location mapped to some industries/disasters with a given gps position.", "getquestionsbyexam_for_tech_exams": "Get exam questions by exam", "listar_todos_for_dataestado": "Obtener listado de todos los ministerios y subsecretarías.", "ministerio_espec_fico_for_dataestado": "Obtiene el listado de un sólo ministerio"}, "aseqs": [{"api_name": "ministerio_espec_fico_for_dataestado", "api_action": "\nAction: ministerio_espec_fico_for_dataestado\nAction Input: {\n  \"nombre\": \"Ministerio de Educación\"\n}", "api_reaction": null}, {"api_name": "listar_todos_for_dataestado", "api_action": "\nAction: listar_todos_for_dataestado\nAction Input: {\n  \"todos\": \"ministerios\"\n}", "api_reaction": null}, {"api_name": "listar_todos_for_dataestado", "api_action": "\nAction: listar_todos_for_dataestado\nAction Input: {\n  \"todos\": \"subsecretarias\"\n}", "api_reaction": null}, {"api_name": "ministerio_espec_fico_for_dataestado", "api_action": "\nAction: ministerio_espec_fico_for_dataestado\nAction Input: {\n  \"nombre\": \"Ministerio de Educación\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ministerio_espec_fico_for_dataestado"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ministerio_espec_fico_for_dataestado"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ministerio_espec_fico_for_dataestado"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ministerio_espec_fico_for_dataestado", "api_action": "\nAction: ministerio_espec_fico_for_dataestado\nAction Input: {\n  \"nombre\": \"Ministerio de Educación\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "ministerio_espec_fico_for_dataestado", "api_action": "\nAction: ministerio_espec_fico_for_dataestado\nAction Input: {\n  \"nombre\": \"Ministerio de Educación\"\n}", "api_reaction": null}}]}
{"URL": "24429", "query": "I'm planning a family gathering and I need some cocktail ideas. Could you suggest a cocktail with a difficulty level of 'easy' and provide me with its detailed recipe? It would be great if I could see an image of the cocktail as well.", "api_names": ["Finish", "detailed_cocktail_recipe_by_id_for_the_cocktail_db", "list_of_cocktails_for_the_cocktail_db", "scraper_for_aliexpress_product", "endpoint1_for_chattydata", "search_quote_based_on_quote_id_for_10000_anime_quotes_with_pagination_support", "search_by_url_for_zillow_base", "get_platform_by_slug_for_is_this_coin_a_scam", "billboard_global_excl_us_for_billboard", "bus_detours_for_septa", "max_item_for_yc_hacker_news_official", "url_analysis_for_url_analysis", "tickets_for_an_event_for_ticketbud", "getpeople_for_power_bi_smartable", "market_status_for_currency_quake"], "api_descs": {"Finish": "No description available.", "billboard_global_excl_us_for_billboard": "Billboard Global Excl. US. Available from SEPTEMBER 19, 2020", "bus_detours_for_septa": "", "detailed_cocktail_recipe_by_id_for_the_cocktail_db": "Get Cocktail by ID", "endpoint1_for_chattydata": "indpoint", "get_platform_by_slug_for_is_this_coin_a_scam": "Get a specific platform by slug", "getpeople_for_power_bi_smartable": "Get Power BI influencers.", "list_of_cocktails_for_the_cocktail_db": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.", "market_status_for_currency_quake": "Is the market open?", "max_item_for_yc_hacker_news_official": "Get the current largest item id", "scraper_for_aliexpress_product": "/scraper", "search_by_url_for_zillow_base": "Search by URL", "search_quote_based_on_quote_id_for_10000_anime_quotes_with_pagination_support": "Get full quote info based on quote_id.\n\nRequired GET parameter\n**quote_id**:  3702\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`", "tickets_for_an_event_for_ticketbud": "All tickets for an event that you have access to", "url_analysis_for_url_analysis": "url-analysis"}, "aseqs": [{"api_name": "list_of_cocktails_for_the_cocktail_db", "api_action": "\nAction: list_of_cocktails_for_the_cocktail_db\nAction Input: {}", "api_reaction": null}, {"api_name": "detailed_cocktail_recipe_by_id_for_the_cocktail_db", "api_action": "\nAction: detailed_cocktail_recipe_by_id_for_the_cocktail_db\nAction Input: {\n  \"is_id\": \"1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "detailed_cocktail_recipe_by_id_for_the_cocktail_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detailed_cocktail_recipe_by_id_for_the_cocktail_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detailed_cocktail_recipe_by_id_for_the_cocktail_db", "api_action": "\nAction: detailed_cocktail_recipe_by_id_for_the_cocktail_db\nAction Input: {\n  \"id\": \"1\"\n}", "api_reaction": null}}]}
{"URL": "1089", "query": "I am building a language analysis tool and require a list of stopwords. Can you fetch the exact words to use, including details about each word? Filter the stopwords based on specific languages and categories.", "api_names": ["stopwords_for_free_stopwords", "categories_for_free_stopwords", "languages_for_free_stopwords", "Finish", "list_all_conversations_for_lemurbot", "trending_tags_from_country_for_hashtag", "languages_for_google_translator", "heroes_for_superhero_search", "send_message_for_discord_webhook_api", "copy_of_endpoint_google_for_tutorial", "get_airline_data_for_brazilian_airlines_real_flights_data", "info_for_unitconversion", "weather_for_monitoring_syatem", "search_for_linkedin_profiles", "properties_get_policies_for_booking", "getorderbyid_for_petstore", "exclusiveness_callerid_for_most_exclusive_api", "some_for_mail_temple", "apostaganha_aviator_latest_for_aposta_ganha_aviator_api", "listlast_for_ordering"], "api_descs": {"Finish": "No description available.", "apostaganha_aviator_latest_for_aposta_ganha_aviator_api": "Will retrieve the latest results from Aviator at Aposta Ganha.\n\n- The first result is the most recent\n- The last result is the oldest", "categories_for_free_stopwords": "Will list all available word categories. Check this before calling /stopwords", "copy_of_endpoint_google_for_tutorial": "google", "exclusiveness_callerid_for_most_exclusive_api": "Check Exclusiveness. See if you are already exclusive, not yet or you get the exclusivity now.", "get_airline_data_for_brazilian_airlines_real_flights_data": "In this endpoint you get all data about real flights of airline. Including detailed information like flight plan routes and remarks", "getorderbyid_for_petstore": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "heroes_for_superhero_search": "Return a list of 20 random heroes", "info_for_unitconversion": "List all supported units", "languages_for_free_stopwords": "Will list all available stopword languages including how many words each language contains.", "languages_for_google_translator": "Returns a list of supported languages for translation.", "list_all_conversations_for_lemurbot": "Conversations are created between clients and bots.\nUsers can only view conversations between their clients and bots.", "listlast_for_ordering": "Get last orders for user (all states included).", "properties_get_policies_for_booking": "Get policies of property by id", "search_for_linkedin_profiles": "Search company or profile", "send_message_for_discord_webhook_api": "Allows you to send a message with a webhook. More information in the docs.", "some_for_mail_temple": "nothing", "stopwords_for_free_stopwords": "Will return the exact extract words to use in your data analysis or application", "trending_tags_from_country_for_hashtag": "Gets trending tags from a specific country", "weather_for_monitoring_syatem": "Weather details Monitoring and Update in mobile"}, "aseqs": [{"api_name": "categories_for_free_stopwords", "api_action": "\nAction: categories_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "languages_for_free_stopwords", "api_action": "\nAction: languages_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "stopwords_for_free_stopwords", "api_action": "\nAction: stopwords_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "stopwords_for_free_stopwords", "api_action": "\nAction: stopwords_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "languages_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "languages_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stopwords_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "languages_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "languages_for_free_stopwords"}}]}
{"URL": "14418", "query": "I want to find out if the Pharmacies de garde NC application is currently up and running. Can you provide me with the health status? Additionally, I need the list of pharmacies de garde in Nouvelle-Calédonie.", "api_names": ["Finish", "all_for_pharmacies_de_garde_nc", "health_for_pharmacies_de_garde_nc", "1_shoot_thumbnail_for_pagepeeker", "runner_up_for_ncaa_final_four", "followers_by_username_for_instagram_pro", "ar_by_city_state_for_ap_sample", "sec_filings_for_sec_filings", "get_the_status_of_your_movie_renders_for_json2video", "get_producto_promo_for_pizzaallapala", "get_news_for_ai_news_global", "text_to_speech_for_text_to_speech_v2", "get_individual_quotes_by_quote_id_for_movie_and_tv_shows_quotes", "teams_teamid_dutyreports_for_signl4_critical_mobile_alerting", "season_schedule_for_hockey_datafeeds_by_rolling_insights"], "api_descs": {"1_shoot_thumbnail_for_pagepeeker": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)", "Finish": "No description available.", "all_for_pharmacies_de_garde_nc": "Renvoie les pharmacies de garde de Nouvelle-Calédonie", "ar_by_city_state_for_ap_sample": "AR by state", "followers_by_username_for_instagram_pro": "Followers list by username, Up to 1000 records", "get_individual_quotes_by_quote_id_for_movie_and_tv_shows_quotes": "This endpoint will return back individual quotes based on the given ID", "get_news_for_ai_news_global": "Get News by region.", "get_producto_promo_for_pizzaallapala": "Adsa", "get_the_status_of_your_movie_renders_for_json2video": "Get a list of your movie renders, in what step of the rendering process they are and a link to the resulting video once they finish.", "health_for_pharmacies_de_garde_nc": "Renvoie le statut de l'application : up ou down", "runner_up_for_ncaa_final_four": "Get runner-up team data for the given year.", "season_schedule_for_hockey_datafeeds_by_rolling_insights": "Returns season schedule for the specified season. If omitted, returns the schedule for current season.", "sec_filings_for_sec_filings": "Returns a list of SEC Filings for the requested company.", "teams_teamid_dutyreports_for_signl4_critical_mobile_alerting": " ", "text_to_speech_for_text_to_speech_v2": "Text to Speech Voice Reader"}, "aseqs": [{"api_name": "health_for_pharmacies_de_garde_nc", "api_action": "\nAction: health_for_pharmacies_de_garde_nc\nAction Input: {}", "api_reaction": null}, {"api_name": "all_for_pharmacies_de_garde_nc", "api_action": "\nAction: all_for_pharmacies_de_garde_nc\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "health_for_pharmacies_de_garde_nc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_for_pharmacies_de_garde_nc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_pharmacies_de_garde_nc"}}]}
{"URL": "70476", "query": "I am a financial analyst and I need the details of the trades that occurred on the Prague Stock Exchange on 25th September 2022. Please provide me with the trade information, including the ISIN, name, date, close price, and volume of each trade. Additionally, give me the stock details such as the ID, BIC, name, and ISIN.", "api_names": ["api_stocks_for_prague_stock_exchange", "Finish", "api_days_for_prague_stock_exchange", "api_trades_day_day_for_prague_stock_exchange", "allusaprice_for_gas_price", "gstin_for_gst_return_status", "2_mensagens_do_chat_chat_message_for_compras_net_api", "end_point_for_story", "suggestqueries_for_auto_suggest_queries", "webcams_list_webcam_webcamid_webcamid_for_webcams_travel", "get_user_orders_for__demo_project_v12", "leaguetotalteamevents_for_basketapi", "skills_search_for_iys_skill_api_", "search_jobs_for_job_search", "get_joke_for_dark_humor_jokes", "get_all_domaines_for_domaine_nc", "user_search_for_100_success_instagram_api_scalable_robust", "get_types_id_523e7700_867d_45a5_8362_f7d4818f6bc9_for_the_south_asian_express", "author_with_his_photo_for_f1_drivers_quotes", "top_cities_weather_in_indonesia_for_indonesia_latest_weather_and_earthquake"], "api_descs": {"2_mensagens_do_chat_chat_message_for_compras_net_api": "Chat", "Finish": "No description available.", "allusaprice_for_gas_price": "Service that brings the average current gasoline prices of states in America.", "api_days_for_prague_stock_exchange": " ", "api_stocks_for_prague_stock_exchange": " ", "api_trades_day_day_for_prague_stock_exchange": " ", "author_with_his_photo_for_f1_drivers_quotes": "Shows the author who have quotes saved in this API  with his photo and ID.", "end_point_for_story": "end point", "get_all_domaines_for_domaine_nc": "Get all domain names", "get_joke_for_dark_humor_jokes": "Fetch a joke.", "get_types_id_523e7700_867d_45a5_8362_f7d4818f6bc9_for_the_south_asian_express": "Get Single Type", "get_user_orders_for__demo_project_v12": " ", "gstin_for_gst_return_status": "Get Details about GSTIN (GST number) and following \n1. Latest Return filing list\n2. GST Compliance Classification\n3. HSN/SAC", "leaguetotalteamevents_for_basketapi": "Get the both home and away last 5 matches for a specific basketball league in a given tournament and season.", "search_jobs_for_job_search": "Search jobs by input value", "skills_search_for_iys_skill_api_": "Skills Search", "suggestqueries_for_auto_suggest_queries": "Use this endpoint to fetch Suggestions", "top_cities_weather_in_indonesia_for_indonesia_latest_weather_and_earthquake": "Top Cities Weather in Indonesia", "user_search_for_100_success_instagram_api_scalable_robust": "Get user search results of keyword", "webcams_list_webcam_webcamid_webcamid_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed {webcamid}s. Multiple {webcamid}s must be separated by comma. Required: at least one {webcamid}."}, "aseqs": [{"api_name": "api_trades_day_day_for_prague_stock_exchange", "api_action": "\nAction: api_trades_day_day_for_prague_stock_exchange\nAction Input: {\n  \"day\": \"2022-09-25\"\n}", "api_reaction": null}, {"api_name": "api_days_for_prague_stock_exchange", "api_action": "\nAction: api_days_for_prague_stock_exchange\nAction Input: {}", "api_reaction": null}, {"api_name": "api_trades_day_day_for_prague_stock_exchange", "api_action": "\nAction: api_trades_day_day_for_prague_stock_exchange\nAction Input: {\n  \"day\": \"2020-04-01\"\n}", "api_reaction": null}, {"api_name": "api_stocks_for_prague_stock_exchange", "api_action": "\nAction: api_stocks_for_prague_stock_exchange\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "api_trades_day_day_for_prague_stock_exchange"}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_trades_day_day_for_prague_stock_exchange"}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_trades_day_day_for_prague_stock_exchange"}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_trades_day_day_for_prague_stock_exchange", "api_action": "\nAction: api_trades_day_day_for_prague_stock_exchange\nAction Input: {\n  \"day\": \"2022-09-25\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_trades_day_day_for_prague_stock_exchange", "api_action": "\nAction: api_trades_day_day_for_prague_stock_exchange\nAction Input: {\n  \"day\": \"2022-09-25\"\n}", "api_reaction": null}}]}
{"URL": "67753", "query": "I'm a developer and I need to test the Reqres tool for my project. Fetch the list of unknown resources and the user data. Please ensure to include the optional parameter 'page' set to 2 for the user data retrieval.", "api_names": ["users_for_reqres", "unknown_for_reqres", "Finish", "ticker_for_g_finance", "getpages_for_aspose_diagram_cloud", "search_for_serp_api", "v1_folders_folderid_summary_documentid_for_sertifi_esignature_and_epayment", "paragraph_for_jibber_jabber", "wrt_transformer_for_walnut_topic", "amir_for_amir1", "market_status_for_currency_quake", "kline_candlestick_data_for_crypto_markets", "getorderbyid_for_my_api_12345", "title_get_popular_movies_by_genre_deprecated_for_imdb", "un_block_number_voice_service_for_2factor_authentication_india", "latest_posts_for_blogsapi", "search_flights_for_skyscanner_v2", "autocomplete_for_local_business_data"], "api_descs": {"Finish": "No description available.", "amir_for_amir1": "pet", "autocomplete_for_local_business_data": "Returns place/address, business and query predictions for text-based geographic queries.", "getorderbyid_for_my_api_12345": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "getpages_for_aspose_diagram_cloud": " ", "kline_candlestick_data_for_crypto_markets": "Kline/Candlestick Data", "latest_posts_for_blogsapi": "Get all blogs ordered by latest first.", "market_status_for_currency_quake": "Is the market open?", "paragraph_for_jibber_jabber": "Returns a **paragraph** with random sentences", "search_flights_for_skyscanner_v2": "Get and poll all flights, search between origin and destination with prices, filter, sorting.", "search_for_serp_api": "Perform Google search and get results", "ticker_for_g_finance": "ticker", "title_get_popular_movies_by_genre_deprecated_for_imdb": "Get popular movies by genre\n* This endpoints is deprecated, use .../title/v2/get-popular-movies-by-genre instead", "un_block_number_voice_service_for_2factor_authentication_india": "This endpoint is used to remove number from VOICE Blocklist", "unknown_for_reqres": "List of unknown resources", "users_for_reqres": "Users", "v1_folders_folderid_summary_documentid_for_sertifi_esignature_and_epayment": " ", "wrt_transformer_for_walnut_topic": "Gets the text and set of possible topics separated by a comma.\n\nReturns the ranking of topics from most relevant to least relevant."}, "aseqs": [{"api_name": "unknown_for_reqres", "api_action": "\nAction: unknown_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "users_for_reqres", "api_action": "\nAction: users_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "unknown_for_reqres", "api_action": "\nAction: unknown_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "users_for_reqres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "users_for_reqres", "api_action": "{\"page\": 2}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "users_for_reqres", "api_action": "\nAction: users_for_reqres\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_for_reqres", "api_action": "\nAction: users_for_reqres\nAction Input: {\"page\": 2}", "api_reaction": null}}]}
{"URL": "2077", "query": "I need the results for races on March 13, 2020. Please provide me with the race details, including the course, date, title, distance, age, going, finished, canceled, finish time, prize, and class.", "api_names": ["results_for_horse_racing", "Finish", "property_to_rent_detail_for_uk_real_estate_rightmove", "recitations_for_quran_com", "cinemas_cinemaid_films_filmid_showtimes_for_argentina_movie_theatres", "getmusiclenses_for_snapchat", "user_id_by_username_for_twitter", "price_for_yahoo_finance", "ocean_conditions_closest_to_latitude_longitude_for_wavebase", "get_individual_micro_for_geeklist"], "api_descs": {"Finish": "No description available.", "cinemas_cinemaid_films_filmid_showtimes_for_argentina_movie_theatres": " ", "get_individual_micro_for_geeklist": "", "getmusiclenses_for_snapchat": "getMusicLenses", "ocean_conditions_closest_to_latitude_longitude_for_wavebase": "​https://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location.", "price_for_yahoo_finance": "Returns the Stock Price Information for the symbol passed as parameter\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd\nfor eth try : eth-usd\nfor dogecoin try : doge-usd", "property_to_rent_detail_for_uk_real_estate_rightmove": "Property to rent for detail", "recitations_for_quran_com": "Get list of available Recitations.", "results_for_horse_racing": "Get results by date.", "user_id_by_username_for_twitter": "this returns twitter user id based on twitter username."}, "aseqs": [{"api_name": "results_for_horse_racing", "api_action": "\nAction: results_for_horse_racing\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "results_for_horse_racing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "results_for_horse_racing", "api_action": "{\"date\": \"2020-03-13\"}", "api_reaction": null}}]}
{"URL": "1800", "query": "I am a racing enthusiast and I want to plan a trip to watch an F1 race. Please provide me with the race details for the race with the ID 6141c76615d27e0de553b9d7. Additionally, I would like to know the race details based on the race number 5.", "api_names": ["select_race_based_on_race_number_for_f1_race_schedule", "select_race_based_on_id_for_f1_race_schedule", "Finish", "details_all_organization_surveys_for_nps_net_promoter_score", "get_predictions_performance_statistics_for_daily_betting_tips", "whois_history_v1_for_whois_history", "tsv6_for_odam", "photo_from_given_number_for_dimondevosint", "bd_division_for_bd", "get_a_random_wisdom_quote_for_wisdom_quotes", "get_a_maison_by_id_for_hautecouture_api", "paidaccess_for_ai_powered_wishscraper_api"], "api_descs": {"Finish": "No description available.", "bd_division_for_bd": " ", "details_all_organization_surveys_for_nps_net_promoter_score": "Get a full list of all customer survey responses for a given organization, by identifying its organization id (oid)", "get_a_maison_by_id_for_hautecouture_api": "Renders a maison by its id", "get_a_random_wisdom_quote_for_wisdom_quotes": "Returns a JSON object which includes a random wisdom quote and its related id.", "get_predictions_performance_statistics_for_daily_betting_tips": "This Endpoint is used to check the predictions performance for a given date.\nThe date format for a given date should be \"dd.MM.yyyy\", else response from API will be empty.", "paidaccess_for_ai_powered_wishscraper_api": "This endpoint provides access to the full suite of features available to premium or paid users. It allows you to retrieve data with fewer restrictions and higher limits than the free access endpoint.", "photo_from_given_number_for_dimondevosint": "It searches for a photo in the internet about the phone number, if it matches, it returns the photo in bytes.", "select_race_based_on_id_for_f1_race_schedule": "Returns the race using the ID used in the database for each individual race.", "select_race_based_on_race_number_for_f1_race_schedule": "Returns the details for the race based on the race number for the track in the F1 season.", "tsv6_for_odam": "Get the variable list within the specified category of a merged data subsets along with the metadata\n", "whois_history_v1_for_whois_history": "Check Whois  record's history"}, "aseqs": [{"api_name": "select_race_based_on_id_for_f1_race_schedule", "api_action": "\nAction: select_race_based_on_id_for_f1_race_schedule\nAction Input: {\n  \"is_id\": \"6141c76615d27e0de553b9d7\"\n}", "api_reaction": null}, {"api_name": "select_race_based_on_race_number_for_f1_race_schedule", "api_action": "\nAction: select_race_based_on_race_number_for_f1_race_schedule\nAction Input: {\n  \"race_no\": \"5\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "select_race_based_on_id_for_f1_race_schedule"}}, {"state": "generated_by_agent", "aseq": {"api_name": "select_race_based_on_race_number_for_f1_race_schedule"}}, {"state": "generated_by_agent", "aseq": {"api_name": "select_race_based_on_race_number_for_f1_race_schedule"}}]}
{"URL": "47945", "query": "I am planning a trip to South America and I need information about the continents, countries, and cities in the region. Can you provide me with a list of all the continents, countries, and cities, along with their respective details such as population, capital, and currency?", "api_names": ["Finish", "countries_for_geography_v2", "cities_for_geography_v2", "continents_for_geography_v2", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "get_favorite_video_by_id_for_tiktok_video_no_watermark_v2", "retrieve_objectives_for_drillster_2_0", "tanggal_for_masehi_ke_hijriyah", "general_for_serpstat", "supported_countries_for_sales_tax_calculator", "md5_text_hash_for_hashing_api", "matchlist_by_seriesid_for_fantasy_cricket", "symbol_price_ticker_for_crypto_markets", "get_version_for_nsfw", "get_resolutions_for_lambdatest_screenshot", "albums_get_related_artist_for_shazam", "news_list_top_for_webull", "list_all_api_for_testing_for_my_use", "get_user_for_youtube_music_api_detailed_", "get_life_skill_tool_recipes_for_lost_ark_simple"], "api_descs": {"Finish": "No description available.", "albums_get_related_artist_for_shazam": "Get artist related to an album", "cities_for_geography_v2": "get a list of all the cities filtering by name", "continents_for_geography_v2": "get a list of all the continents filtering by name", "countries_for_geography_v2": "get a list of all the countries filtering by name", "general_for_serpstat": "Basic request", "get_favorite_video_by_id_for_tiktok_video_no_watermark_v2": "get favorite video by id\n**url doesn't seem to work please use get video details to get download link**", "get_life_skill_tool_recipes_for_lost_ark_simple": "Get List of Lost Ark Life Skill Tool Recipes", "get_resolutions_for_lambdatest_screenshot": "Fetch all available resolution on different OS", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "get_user_for_youtube_music_api_detailed_": "Retrieve a user’s page. A user may own videos or playlists.", "get_version_for_nsfw": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "list_all_api_for_testing_for_my_use": "list all api", "matchlist_by_seriesid_for_fantasy_cricket": "Using Series ID get the name, participating teams, start date, end date and match keys for the matches of a specified Series. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com", "md5_text_hash_for_hashing_api": "Hash text (as query-string-parameter) using MD5 algorithm.", "news_list_top_for_webull": "List top news", "retrieve_objectives_for_drillster_2_0": "Retrieves the objectives that have been defined for the calling user.", "supported_countries_for_sales_tax_calculator": "Returns a list of supported countries.", "symbol_price_ticker_for_crypto_markets": "Symbol Price Ticker", "tanggal_for_masehi_ke_hijriyah": "isi tanggal"}, "aseqs": [{"api_name": "continents_for_geography_v2", "api_action": "\nAction: continents_for_geography_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "countries_for_geography_v2", "api_action": "\nAction: countries_for_geography_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "cities_for_geography_v2", "api_action": "\nAction: cities_for_geography_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "continents_for_geography_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "countries_for_geography_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "continents_for_geography_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "continents_for_geography_v2"}}]}
{"URL": "63732", "query": "Could you please provide me with the latest coronavirus news for the United States? Additionally, I would like to know the total confirmed cases, deaths, and recovered cases for the United States.", "api_names": ["getnews_for_coronavirus_smartable", "getstats_for_coronavirus_smartable", "Finish", "direct_post_url_for_social_media_data_tt", "hashtag_metadata_information_for_tiktok_data", "getwebsite_for_convert_company_name_to_website_url", "download_lyrics_on_spotify_2_quotas_for_soundcloud_scraper", "snap_to_road_for_mymappi", "categories_for_rugbyapi2", "property_detail_for_zoopla", "get_all_verse_of_chapter_by_chapter_id_for_bhagavad_gita_v3", "fetch_distance_between_two_pincodes_for_pincode_distance_measurement_", "get_timetable_for_flixbus_v2", "get_class_for_dungeons_and_dragon_5e", "search_for_revdl", "searchentries_for_lexicala", "search_b_for_seo_api", "replies_for_axesso_facebook_data_service"], "api_descs": {"Finish": "No description available.", "categories_for_rugbyapi2": "Get the list of available rugby categories, including their names and IDs.", "direct_post_url_for_social_media_data_tt": "Get direct post url", "download_lyrics_on_spotify_2_quotas_for_soundcloud_scraper": "This endpoint provides a solution to download a track's lyrics on Spotify. (Powered by [Spotify Scraper](https://rapidapi.com/DataFanatic/api/spotify-scraper/))", "fetch_distance_between_two_pincodes_for_pincode_distance_measurement_": "Enter two valid pincodes.", "get_all_verse_of_chapter_by_chapter_id_for_bhagavad_gita_v3": "Get all verse of chapter by chapter id", "get_class_for_dungeons_and_dragon_5e": "Get info about a D&D class such as the proficiencies or abilities.", "get_timetable_for_flixbus_v2": "Returns timetable for a given station id and date", "getnews_for_coronavirus_smartable": "Get the latest coronavirus news for the globe or your selected country or state.", "getstats_for_coronavirus_smartable": "Get the latest and historic coronavirus stats data (confirmed cases, deaths and recovered cases) for the globe or your selected country or state.", "getwebsite_for_convert_company_name_to_website_url": "Get Company Website from Company Name", "hashtag_metadata_information_for_tiktok_data": "Get hashtag metadata", "property_detail_for_zoopla": "property/detail", "replies_for_axesso_facebook_data_service": "Fetch comments for for given feedbackId which is located in \"data.feedback.display_comments.edges.node.feedback.id\" in the post or comments endpoint. For pagination the optional query parameter \"after\" can be used by including \"comments.data.feedback.page_info.end_cursor\" from the revious response.", "search_b_for_seo_api": "Perform SEO search for secondary search engine", "search_for_revdl": "Eto no mirecherche", "searchentries_for_lexicala": "search for entries with filters in query", "snap_to_road_for_mymappi": "Given a geographical coordinate, it retrieves the another coordinate which is snapped to the nearest road. This means that the snapped coordinate is found by calculating the intersection between the longitudinal axis of the nearest road segment and the perpendicular line between the provided coordinate and this longitudinal axis."}, "aseqs": [{"api_name": "getnews_for_coronavirus_smartable", "api_action": "\nAction: getnews_for_coronavirus_smartable\nAction Input: {\n  \"location\": \"US\"\n}", "api_reaction": null}, {"api_name": "getstats_for_coronavirus_smartable", "api_action": "\nAction: getstats_for_coronavirus_smartable\nAction Input: {\n  \"location\": \"US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getstats_for_coronavirus_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getstats_for_coronavirus_smartable", "api_action": "\nAction: getstats_for_coronavirus_smartable\nAction Input: {\n  \"location\": \"US\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnews_for_coronavirus_smartable", "api_action": "\nAction: getnews_for_coronavirus_smartable\nAction Input: {\n  \"location\": \"US\"\n}", "api_reaction": null}}]}
{"URL": "29732", "query": "As a journalist, I need to stay updated on the latest news. Can you provide me with the trending news articles? Additionally, I would like to search for content related to international affairs. Please assist me with this.", "api_names": ["get_trending_for_url_content_extractor", "search_content_for_url_content_extractor", "Finish", "search_for_hadiths_with_key_words_for_hadiths_api", "fetchhistoricalnav_for_latest_mutual_fund_nav", "pagesblanches_for_les_pagesjaunes_les_pagesblanche_france", "media_by_url_for_instagram_api", "api_about_version_for_prague_stock_exchange", "tours_for_golf_leaderboard_data", "ec_for_arespass", "logoutuser_for_platformbil", "live_recent_v3_for_chartbeat", "crypto_exchanges_for_twelve_data", "findbypincode_for_india_pincode_api", "get_case_by_id_for_yardillo", "getstandardmaptile_for_maptiles", "languages_for_speech_recognition", "getsongs_for_musiczone"], "api_descs": {"Finish": "No description available.", "api_about_version_for_prague_stock_exchange": " ", "crypto_exchanges_for_twelve_data": "This API call return array of cryptocurrency exchanges available at Twelve Data API. This list is daily updated.", "ec_for_arespass": " ", "fetchhistoricalnav_for_latest_mutual_fund_nav": "Fetch Historical NAV", "findbypincode_for_india_pincode_api": "“Find By PinCode” API is JSON API to query India Pincode.", "get_case_by_id_for_yardillo": "Get the case payload by its Id", "get_trending_for_url_content_extractor": "This will return a list of news articles that are trending.", "getsongs_for_musiczone": "get song details", "getstandardmaptile_for_maptiles": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap", "languages_for_speech_recognition": "Get list of supported languages", "live_recent_v3_for_chartbeat": "Returns information about the most recent visitors to a given host. This call returns real-time data.", "logoutuser_for_platformbil": "", "media_by_url_for_instagram_api": "Get a media by URL", "pagesblanches_for_les_pagesjaunes_les_pagesblanche_france": "Extraire les données du Pages Blanches scraping email et téléphone", "search_content_for_url_content_extractor": "Allows you to search content for content based on a query.", "search_for_hadiths_with_key_words_for_hadiths_api": "Searching for hadiths. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database.", "tours_for_golf_leaderboard_data": "Lists available tours and seasons"}, "aseqs": [{"api_name": "get_trending_for_url_content_extractor", "api_action": "\nAction: get_trending_for_url_content_extractor\nAction Input: {}", "api_reaction": null}, {"api_name": "search_content_for_url_content_extractor", "api_action": "\nAction: search_content_for_url_content_extractor\nAction Input: {\n  \"query\": \"international affairs\"\n}", "api_reaction": null}, {"api_name": "search_content_for_url_content_extractor", "api_action": "\nAction: search_content_for_url_content_extractor\nAction Input: {\n  \"query\": \"site:bbc.co.uk OR site:cnn.com OR site:aljazeera.com international affairs\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_content_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_content_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}]}
{"URL": "65406", "query": "Could you please fetch the current Ethereum price in Uniswap V2? Additionally, I need the total liquidity, trade volume, and transaction count of the token with the address 0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce. Thank you!", "api_names": ["ethprice_for_uniswap_v2_api", "token_id_for_uniswap_v2_api", "Finish", "song_by_id_for_halsey_lyric_snippets", "777_for_aug13", "places_list_by_radius_nearby_search_for_places", "charts_get_top_songs_in_country_by_genre_for_shazam_api", "products_list_for_hm_hennes_mauritz", "get_list_of_publicly_traded_companies_for_stoxx", "get_per_game_post_season_for_nba_stats_v2", "get_quotes_by_character_name_for_anime_quotes", "player_statistics_seasons_for_sofascores", "cards_by_race_for_hearthstone", "getalllite_for_house_plants", "mmaoctogonimage_for_mmaapi", "resources_per_country_for_africa_api_", "get_all_the_beverages_for_beverages_and_desserts", "leaguemedia_for_rugbyapi2"], "api_descs": {"777_for_aug13": "7", "Finish": "No description available.", "cards_by_race_for_hearthstone": "Returns all the cards of a certain race. Example values: Mech, Murloc.", "charts_get_top_songs_in_country_by_genre_for_shazam_api": "get top songs in country by genre", "ethprice_for_uniswap_v2_api": "Return the current eth price in uniswap v2", "get_all_the_beverages_for_beverages_and_desserts": "This endpoint will returns all the **Beverages**", "get_list_of_publicly_traded_companies_for_stoxx": "Provides a list of all publicly traded companies", "get_per_game_post_season_for_nba_stats_v2": "Api to query per game post season", "get_quotes_by_character_name_for_anime_quotes": "Get quotes by character name", "getalllite_for_house_plants": "Gets all items but only identifying data. All additional data can be grabbed from the GetById route or the GetAll route which return all item with all its keys, no restriction", "leaguemedia_for_rugbyapi2": "Get media for a specific Rugby league.", "mmaoctogonimage_for_mmaapi": "Get MMA octagon image", "places_list_by_radius_nearby_search_for_places": "Method returns objects closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.", "player_statistics_seasons_for_sofascores": "Get seasons of the player", "products_list_for_hm_hennes_mauritz": "List products from H&M with options to sort, filter, or search for products by name", "resources_per_country_for_africa_api_": "Gives you a list of the most important resources that an African country relies on to keep their economy running.\nTakes parameter <country_name>", "song_by_id_for_halsey_lyric_snippets": "returns song when searched by id", "token_id_for_uniswap_v2_api": "Return the info of the Token by the address"}, "aseqs": [{"api_name": "ethprice_for_uniswap_v2_api", "api_action": "\nAction: ethprice_for_uniswap_v2_api\nAction Input: {}", "api_reaction": null}, {"api_name": "token_id_for_uniswap_v2_api", "api_action": "\nAction: token_id_for_uniswap_v2_api\nAction Input: {\n  \"is_id\": \"0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ethprice_for_uniswap_v2_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "token_id_for_uniswap_v2_api", "api_action": "\nAction: token_id_for_uniswap_v2_api\nAction Input: {\n\t\"address\": \"0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "token_id_for_uniswap_v2_api", "api_action": "\nAction: token_id_for_uniswap_v2_api\nAction Input: {\n  \"is_id\": \"0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce\"\n}", "api_reaction": null}}]}
{"URL": "30744", "query": "I want to extract the lead data for the campaign with the ID 'Lead'. Please display the lead name, email, country, region, and city.", "api_names": ["get_campaign_from_url_for_fomoapi", "Finish", "marine_history_weather_api_for_world_weather_online_api", "media_id_to_shortcode_for_instagram_api_v2", "photos_for_zillow_data_v2", "similarqueries_for_keyword_analysis", "allscenarios_for_acopaer", "single_name_short_for_nameforge"], "api_descs": {"Finish": "No description available.", "allscenarios_for_acopaer": "# Description GET All Scenarios\r\n\r\nThis url provides all Scenarios created, method type `GET`.\r\n\r\n `BASE_URL/scenarios`\r\n \r\n returns an array of objects or only an object depends on how many are there.\r\n\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "get_campaign_from_url_for_fomoapi": "Get lead from Specific website  Campaign", "marine_history_weather_api_for_world_weather_online_api": "The Historical Marine Weather API method allows you to access marine data since 1st Jan, 2015 for a given longitude and latitude, as well as tide data. The Historical Marine Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, Tide data, significant wave height, swell height, swell direction and swell period.", "media_id_to_shortcode_for_instagram_api_v2": "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts 2931558439012794055 to Ciu_N9Qpm5d", "photos_for_zillow_data_v2": "Photos", "similarqueries_for_keyword_analysis": "Get **similar queries** for a given search query.", "single_name_short_for_nameforge": "Create single name.\nMax query length is 25 characters."}, "aseqs": [{"api_name": "get_campaign_from_url_for_fomoapi", "api_action": "\nAction: get_campaign_from_url_for_fomoapi\nAction Input: {\n  \"is_id\": \"Lead\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_campaign_from_url_for_fomoapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_campaign_from_url_for_fomoapi"}}]}
{"URL": "52182", "query": "I'm planning a family vacation and need some travel essentials. Can you search for travel accessories on Amazon and provide me with the product details for ASIN B08BHXG144? Additionally, I would like to see the top 10 offers for this product and read the reviews for ASIN B07ZPKN6YR. Furthermore, please give me the list of product categories available in the US marketplace.", "api_names": ["product_details_experimental_for_real_time_amazon_data", "search_for_real_time_amazon_data", "Finish", "product_category_list_for_real_time_amazon_data", "product_reviews_for_real_time_amazon_data", "product_offers_for_real_time_amazon_data", "popular_airline_routes_for_flight_data_v2", "stores_list_for_target", "search_items_for_steam_store_api", "getwbsdefinition_for_aspose_tasks_cloud", "searchoffers_for_google_jobs", "canvas_episodes_list_for_webtoon", "getlearningresourcesbytopic_for_powerbi", "get_all_m1lhao_results_for_euro_millions", "streams_home_for_stocktwits", "get_wagons_mrt_train_no_wagons_get_for_aqls_b2c_system", "get_multiple_random_words_for_random_words", "preview_getdownloadpath_for_landr_mastering_v1", "walk_score_for_walk_score", "scrape_links_for_scrapey_link_scraper"], "api_descs": {"Finish": "No description available.", "canvas_episodes_list_for_webtoon": "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "get_all_m1lhao_results_for_euro_millions": "Get the whole history of M1lhao result draws", "get_multiple_random_words_for_random_words": "Get multiple random words (i.e. min 2 and max 20) from a list of 5500+ words\n\nImportant Notes:\n1. *count* must be a valid number between 2 and 20 (both 2 and 20 included)\n2. *wordLength* must not be used with minLength and/or maxLength", "get_wagons_mrt_train_no_wagons_get_for_aqls_b2c_system": " ", "getlearningresourcesbytopic_for_powerbi": "Get Power BI learning resources by topic.", "getwbsdefinition_for_aspose_tasks_cloud": " ", "popular_airline_routes_for_flight_data_v2": "Returns routes for which an airline operates flights, sorted by popularity.", "preview_getdownloadpath_for_landr_mastering_v1": "Rate Limits: 100 requests per minute\n            ", "product_category_list_for_real_time_amazon_data": "Get Amazon product categories (per country / marketplace).", "product_details_experimental_for_real_time_amazon_data": "Get product details. Currently returns the Product Information table data, as seen on specific product pages on Amazon.com (e.g. https://www.amazon.com/dp/B09TBLBFXC).", "product_offers_for_real_time_amazon_data": "Get top 10 offers of a specific product on Amazon by its asin, the first offer in the list is the pinned offer returned by the **Search** endpoint. Supports filtering by product condition.", "product_reviews_for_real_time_amazon_data": "Get and paginate through all product reviews on Amazon.", "scrape_links_for_scrapey_link_scraper": "Scrape all links from URL", "search_for_real_time_amazon_data": "Search for products offers on Amazon.", "search_items_for_steam_store_api": "👉 This is one of the most important endpoints. Retrieve data from the Steam search engine. The filters here have a powerful impact. With their use you can find anything that interests you. If you want to limit the games to a certain amount, read the description of maxPrice parameter below.\n\nMaximum number of results served from one call is 50. But very often the number of results is lower because we skip game packs (bundles) in the search engine. If you're interested in this, let us know.", "searchoffers_for_google_jobs": "get all offers url", "stores_list_for_target": "List available nearby store by zipcode, GEO location, or city name. One at a time, do NOT use them together at once.", "streams_home_for_stocktwits": "Returns the most recent 30 messages posted to the authenticating user's home stream, which is made up of the users and stocks they follow.", "walk_score_for_walk_score": "Get Walk Score"}, "aseqs": [{"api_name": "search_for_real_time_amazon_data", "api_action": "\nAction: search_for_real_time_amazon_data\nAction Input: {\n  \"query\": \"travel accessories\",\n  \"country\": \"US\"\n}", "api_reaction": null}, {"api_name": "product_details_experimental_for_real_time_amazon_data", "api_action": "\nAction: product_details_experimental_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B08BHXG144\",\n  \"country\": \"US\"\n}", "api_reaction": null}, {"api_name": "product_offers_for_real_time_amazon_data", "api_action": "\nAction: product_offers_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B08BHXG144\",\n  \"country\": \"US\"\n}", "api_reaction": null}, {"api_name": "product_reviews_for_real_time_amazon_data", "api_action": "\nAction: product_reviews_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B07ZPKN6YR\",\n  \"country\": \"US\",\n  \"page_size\": 10\n}", "api_reaction": null}, {"api_name": "product_category_list_for_real_time_amazon_data", "api_action": "\nAction: product_category_list_for_real_time_amazon_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "product_details_experimental_for_real_time_amazon_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_details_experimental_for_real_time_amazon_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_offers_for_real_time_amazon_data", "api_action": "\nAction: product_offers_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B08BHXG144\",\n  \"country\": \"US\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_reviews_for_real_time_amazon_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_category_list_for_real_time_amazon_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_real_time_amazon_data"}}]}
{"URL": "27858", "query": "My family and I are planning to attend a sports event organized by Chillybets. Can you provide us with the latest matches and odds? It would help us decide which games to watch.", "api_names": ["matches_for_chillybets", "odds_for_chillybets", "Finish", "coins_get_markets_for_investing_cryptocurrency_markets", "air_quality_measurements_for_air_quality_api", "get_session_info_for_gigopost", "bmr_index_for_bmr_and_tmr", "v1_music_music_id_for_tokapi_mobile_version", "info_for_unit_converter", "quote_for_the_sandbox_sand", "check_for_bank_card_bin_num_check", "laliga_standings_for_laliga_standings", "get_version_for_people_photo_background_removal", "club_series_for_mbar", "gettag_for_sms_receive", "get_specific_country_for_europe_fuel_prices", "all_markets_for_crypto_exchanges", "geocode_for_cameroon"], "api_descs": {"Finish": "No description available.", "air_quality_measurements_for_air_quality_api": "Gives current air quality measurements per hour for a given city!", "all_markets_for_crypto_exchanges": "Get all markets", "bmr_index_for_bmr_and_tmr": "Endpoint allows you to calculate the Basal Metabolic Rate", "check_for_bank_card_bin_num_check": " ", "club_series_for_mbar": "", "coins_get_markets_for_investing_cryptocurrency_markets": "Get market information of specific cryptocurrency in specified currency", "geocode_for_cameroon": "This endpoint allows you to lookup locations in Cameroon by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_session_info_for_gigopost": "Returns session information 1685369452715x643061726475037300", "get_specific_country_for_europe_fuel_prices": "Get fuel prices for a specific country", "get_version_for_people_photo_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "gettag_for_sms_receive": "Get the current tag.", "info_for_unit_converter": "info", "laliga_standings_for_laliga_standings": "LaLiga Standings", "matches_for_chillybets": "Latest Matches for Chillybets", "odds_for_chillybets": "Latest Odds for Chillybets", "quote_for_the_sandbox_sand": "Get the latest price.", "v1_music_music_id_for_tokapi_mobile_version": "Music information by ID"}, "aseqs": [{"api_name": "matches_for_chillybets", "api_action": "\nAction: matches_for_chillybets\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_chillybets", "api_action": "\nAction: odds_for_chillybets\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_chillybets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_chillybets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_chillybets"}}]}
{"URL": "36799", "query": "I want to convert 2000 USD to EUR. Can you assist me with this conversion? It would be helpful if you could also provide the conversion result.", "api_names": ["Finish", "convert_for_currency_conversion_and_exchange_rates", "send_message_to_multiple_numbers_for_branded_sms_pakistan", "get_event_detail_for_league_of_legends_esports", "artists_for_jet_set_radio_api", "trending_tags_from_country_for_hashtag", "get_railway_period_for_utc_date_for_railway_periods", "findplacebytext_for_trueway_places"], "api_descs": {"Finish": "No description available.", "artists_for_jet_set_radio_api": "Returns a list of all music Artists who contributed to JSR/JSRF", "convert_for_currency_conversion_and_exchange_rates": "In addition to providing converstion rates, our API provides a dedicated endpoint to easily do conversion on a specific amount of the currency.", "findplacebytext_for_trueway_places": "Search for places by text string", "get_event_detail_for_league_of_legends_esports": "In this api method you can get all of the event detail from the match or event id (exactly same those ids.) you can get this id from the Get Vods or Get Match api methods.", "get_railway_period_for_utc_date_for_railway_periods": "This endpoint will return railway period between:\n{\"millis\":\"0\",\"railwayPeriod\":\"1969-1970 P10\"} (01/01/1970 00:00:00)\nAnd\n{\"millis\":\"8640000000000\",\"railwayPeriod\":\"2243-2244 P8\"} (17/10/2243 00:00:00)", "send_message_to_multiple_numbers_for_branded_sms_pakistan": "This API is useful to send a branded sms to multiple numbers", "trending_tags_from_country_for_hashtag": "Gets trending tags from a specific country"}, "aseqs": [{"api_name": "convert_for_currency_conversion_and_exchange_rates", "api_action": "\nAction: convert_for_currency_conversion_and_exchange_rates\nAction Input: {\n  \"to\": \"EUR\",\n  \"amount\": \"2000\",\n  \"is_from\": \"USD\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "convert_for_currency_conversion_and_exchange_rates"}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_for_currency_conversion_and_exchange_rates"}}]}
{"URL": "19191", "query": "I'm a sports enthusiast and I want to stay updated on the FDJ games. Can you give me the latest information, including the odds and match details? It would be great to know the teams playing and when the games will take place.", "api_names": ["matches_for_fdj", "odds_for_fdj", "Finish", "proxy_list_for_proxy_port", "getinfo_for_indian_mobile_info", "search_restaurants_by_town_for_wyre_data", "getrandomtvshow_for_random_chunk_api", "get_jokes_for_jokes_", "verify_email_for_verify_email", "getalltemplates_for_nexweave", "leaguehometeamevents_for_baseballapi", "agencies_list_for_bayut", "user_highlights_list_for_instagram_v5", "user_videos_for_tiktok_scraper_v2", "getfolder_for_sertifi_esignature_and_epayment"], "api_descs": {"Finish": "No description available.", "agencies_list_for_bayut": "List agencies or search for agencies by name", "get_jokes_for_jokes_": "Get the jokes", "getalltemplates_for_nexweave": "This API will return all the templates associated with the user's account, including Images & Video.", "getfolder_for_sertifi_esignature_and_epayment": " ", "getinfo_for_indian_mobile_info": "getInfo", "getrandomtvshow_for_random_chunk_api": "Returns random TVshows.", "leaguehometeamevents_for_baseballapi": "This endpoint retrieves the last 5 matches for a specific league in a given season for home events.", "matches_for_fdj": "Latest Matches for FDJ", "odds_for_fdj": "Latest Odds for FDJ", "proxy_list_for_proxy_port": "List of proxy", "search_restaurants_by_town_for_wyre_data": "Find all Restaurants within a Town/City", "user_highlights_list_for_instagram_v5": "Get Instagram user highlights list by Instagram user id.", "user_videos_for_tiktok_scraper_v2": "Get user videos.", "verify_email_for_verify_email": "Verify Email Address"}, "aseqs": [{"api_name": "matches_for_fdj", "api_action": "\nAction: matches_for_fdj\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_fdj", "api_action": "\nAction: odds_for_fdj\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_fdj"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_fdj"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_fdj"}}]}
{"URL": "39870", "query": "Find the user details for the user with ID 155659213. Additionally, fetch the details of the users who have retweeted and favorited a specific tweet with ID 1485953263040188416. Provide the details of the users found.", "api_names": ["user_by_rest_id_for_twitter_v2_v2", "tweet_favoriters_for_twitter_v2_v2", "tweet_retweeters_for_twitter_v2_v2", "Finish", "users_by_rest_ids_for_twitter_v2_v2", "get_media_for_instagram_downloader_v2", "get_extra_character_details_for_new_girl", "midknightt_for_midknightt", "get_capital_for_countries", "categorytournaments_for_esportapi", "dark_cloud_cover_for_barpatterns", "view_request_headers_and_body_for_pe_demo", "premium_anime_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations", "chains_for_defi_data", "check_for_odam", "search_by_weight_for_player_data", "web_search_for_bing_web_search_v2", "recipes_get_more_info_for_tasty", "elvar_endpoint_for_elvar", "model_detection_for_tesla_vin_identifier"], "api_descs": {"Finish": "No description available.", "categorytournaments_for_esportapi": "Get all leagues from a specific E-Sports category using the category ID.", "chains_for_defi_data": "Get current TVL of all chains", "check_for_odam": "Made automatically many test checks and return a list several status about the dataset implementation\n", "dark_cloud_cover_for_barpatterns": "List of stocks having Dark Cloud Cover signal.", "elvar_endpoint_for_elvar": "elvar endpoint", "get_capital_for_countries": "This gets capital data on a country. Use ISO2 for country_code.", "get_extra_character_details_for_new_girl": "Get extra details about a character. (Currently being updated with more data)", "get_media_for_instagram_downloader_v2": "Post, Photo, Video, Igtv, Reel, Profile Picture", "midknightt_for_midknightt": "Receives data", "model_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to a model type", "premium_anime_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Premium anime arts are wallpapers that look best of the best on a mobile device or contain high-quality digital art:\nRequired GET parameter\n**page**:  0\n**sensitivity**: 1\nOn the above **page**, 0 means it will fetch the latest 10 wallpaper if the page value is 1 then It will bring the next 10 latest wallpaper \npage 0 : 0-10 \npage 1: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "recipes_get_more_info_for_tasty": "Get  more information of recipe if available, such as : ingredients, nutrition info, preparation, etc... This endpoint returns 404 status code, it means there is no more information to obtain.\n* .../recipes/list already returns ingredients, nutrition info, preparation, etc...", "search_by_weight_for_player_data": "<br /><br />\n<b>Authentication:</b> not required", "tweet_favoriters_for_twitter_v2_v2": "Tweet Favoriters", "tweet_retweeters_for_twitter_v2_v2": "Tweet Retweeters", "user_by_rest_id_for_twitter_v2_v2": "User By Rest ID", "users_by_rest_ids_for_twitter_v2_v2": "Users By Rest IDs", "view_request_headers_and_body_for_pe_demo": "View the request headers and body in JSON format.", "web_search_for_bing_web_search_v2": "The Bing Web Search API enables you to integrate Bing's search capabilities in your applications. By sending search queries with the API, you can get relevant webpages, images, videos, news and more."}, "aseqs": [{"api_name": "user_by_rest_id_for_twitter_v2_v2", "api_action": "\nAction: user_by_rest_id_for_twitter_v2_v2\nAction Input: {\n  \"is_id\": \"155659213\"\n}", "api_reaction": null}, {"api_name": "tweet_retweeters_for_twitter_v2_v2", "api_action": "\nAction: tweet_retweeters_for_twitter_v2_v2\nAction Input: {\n  \"is_id\": \"1485953263040188416\"\n}", "api_reaction": null}, {"api_name": "tweet_favoriters_for_twitter_v2_v2", "api_action": "\nAction: tweet_favoriters_for_twitter_v2_v2\nAction Input: {\n  \"is_id\": \"1485953263040188416\"\n}", "api_reaction": null}, {"api_name": "users_by_rest_ids_for_twitter_v2_v2", "api_action": "\nAction: users_by_rest_ids_for_twitter_v2_v2\nAction Input: {\n  \"ids\": \"1586553439110168576,1347393619804659715\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tweet_retweeters_for_twitter_v2_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_retweeters_for_twitter_v2_v2", "api_action": "{\"id\": \"1485953263040188416\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_retweeters_for_twitter_v2_v2", "api_action": "\nAction: tweet_retweeters_for_twitter_v2_v2\nAction Input: {\n  \"is_id\": \"1485953263040188416\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_retweeters_for_twitter_v2_v2", "api_action": "\nAction: tweet_retweeters_for_twitter_v2_v2\nAction Input: {\n  \"is_id\": \"1485953263040188416\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_by_rest_id_for_twitter_v2_v2", "api_action": "\nAction: user_by_rest_id_for_twitter_v2_v2\nAction Input: {\n  \"is_id\": \"1586553439110168576\"\n}", "api_reaction": null}}]}
{"URL": "11609", "query": "I'm an avid collector of NFTs and I'm curious to know which collections have been trending in the past week. Could you provide me with the top collections this week, including the collection URL, volume, and number of trades? Additionally, I'd like to explore the top-selling NFTs today. Please share the details of the NFTs, such as the collection URL, date, name, collection, price, and NFT URL.", "api_names": ["top_collections_this_week_for_top_nft_sales", "top_nfts_today_for_top_nft_sales", "Finish", "squadname_for_football_v2", "get_gas_fee_funding_wallets_for_token_forwarding", "companies_id_events_for_german_company_data_v2", "search_countries_by_population_for_geography", "stock_get_press_releases_for_webull", "getfileversions_for_aspose_ocr_cloud", "charts_track_for_shazam", "billboard_200_for_billboard_v2", "search_for_rakutensupportdefaultteam"], "api_descs": {"Finish": "No description available.", "billboard_200_for_billboard_v2": "Get the Billboard 200 chart.", "charts_track_for_shazam": "Get all popular songs in specific chart", "companies_id_events_for_german_company_data_v2": "This endpoint returns the latest events about the company with the given identifier since the given timestamp. This timestamp is optional and is specified via a query parameter. Events come with a type (companies' register event, blog article, press release, etc.), a category (change in management, finances, merger/acquisition, etc.), a text (the content of the event), a source, and a timestamp.", "get_gas_fee_funding_wallets_for_token_forwarding": "Get gas fee funding wallets", "getfileversions_for_aspose_ocr_cloud": " ", "search_countries_by_population_for_geography": "Search countries by minimum population or maximum population or between minimum and maximum population. Search operation will include both upper and lower limit.", "search_for_rakutensupportdefaultteam": "Search Items", "squadname_for_football_v2": "Search a squad in a table by its name. You don't need to search for the full name, you can also use some letters or a part of it.", "stock_get_press_releases_for_webull": "Get press releases", "top_collections_this_week_for_top_nft_sales": "Top trending collections this week", "top_nfts_today_for_top_nft_sales": "Top selling NFTs today"}, "aseqs": [{"api_name": "top_collections_this_week_for_top_nft_sales", "api_action": "\nAction: top_collections_this_week_for_top_nft_sales\nAction Input: {}", "api_reaction": null}, {"api_name": "top_nfts_today_for_top_nft_sales", "api_action": "\nAction: top_nfts_today_for_top_nft_sales\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_collections_this_week_for_top_nft_sales"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_nfts_today_for_top_nft_sales"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_collections_this_week_for_top_nft_sales"}}]}
{"URL": "56599", "query": "I'm a content creator on TikTok and I'm looking for popular videos that feature a specific music track with the ID '6928004115846924290'. Can you help me find 20 videos that have used this music track?", "api_names": ["v1_music_posts_music_id_for_tokapi_mobile_version", "v1_music_music_id_for_tokapi_mobile_version", "Finish", "search_by_keyword_for_ikea_api", "translate_for_google_translate_v2", "searchverificationsdone_for_cleardil", "solve_for_captcha", "provider2_live_match_id_for_football_betting_odds", "list_available_currencies_for_exchangeratespro", "currency_info_for_changenow_crypto_exchange", "hashtagmedias_for_instagram_v6", "run_cgi_for_random_word"], "api_descs": {"Finish": "No description available.", "currency_info_for_changenow_crypto_exchange": "This method returns the name of the coin, the coin's main features (such as anonymity, the need for Extra ID, and logo), and the coin's supported wallets.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an object with currency information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>warnings</i></b></td>\n        <td><i>String</i></td>\n        <td>Some warnings like warnings that transactions on this network take longer or that the currency has moved to another network. Field “from” for warnings in case of exchange of this currency and field “to” for warnings in case of exchange for this currency, respectively</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>isAnonymous</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has the ability to hide their transactions. This means that even if you know someone’s address, you won’t be able to recognize the balance and receive information about transactions without additional information (e.g. XMR)</td>\n    </tr>\n    <tr>\n        <td><b><i>wallets</i></b></td>\n        <td><i>Object</i></td>\n        <td>This field contains a list of primary and secondary wallets. For each wallet, this endpoint returns the name, url, logo url, supported platforms, degree of anonymity, degree of security, application weight and indicates if the wallet supports different currencies</td>\n    </tr>\n    <tr>\n        <td><b><i>addressExplorerMask</i></b></td>\n        <td><i>String</i></td>\n        <td>This field helps to create a link for the wallet address. Wallet address url = this field.replace('$$', payinAddress or payoutAddress from the <a href=\"#fa12244b-f879-4675-a6f7-553cc59435dc\">Transaction status API endpoint</a>)</td>\n    </tr>\n    <tr>\n        <td><b><i>transactionExplorerMask</i></b></td>\n        <td><i>String</i></td>\n        <td>This field helps to create a link for the transaction hash. Transaction hash url = this field.replace('$$', payinHash or payoutHash from the <a href=\"#fa12244b-f879-4675-a6f7-553cc59435dc\">Transaction status API endpoint</a>) </td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>", "hashtagmedias_for_instagram_v6": "Get hashtag medias", "list_available_currencies_for_exchangeratespro": "Returns a list of all currencies that are available through the API.", "provider2_live_match_id_for_football_betting_odds": "get match", "run_cgi_for_random_word": "", "search_by_keyword_for_ikea_api": "Obtain a list of Ikea products information based on a keyword.", "searchverificationsdone_for_cleardil": " ", "solve_for_captcha": "Solve a Captcha given an image URL", "translate_for_google_translate_v2": "https://cloud.google.com/translate/docs/languages", "v1_music_music_id_for_tokapi_mobile_version": "Music information by ID", "v1_music_posts_music_id_for_tokapi_mobile_version": "Search videos by music ID"}, "aseqs": [{"api_name": "v1_music_posts_music_id_for_tokapi_mobile_version", "api_action": "\nAction: v1_music_posts_music_id_for_tokapi_mobile_version\nAction Input: {\n  \"music_id\": \"6928004115846924290\",\n  \"count\": 20\n}", "api_reaction": null}, {"api_name": "v1_music_music_id_for_tokapi_mobile_version", "api_action": "\nAction: v1_music_music_id_for_tokapi_mobile_version\nAction Input: {\n  \"music_id\": \"6928004115846924290\"\n}", "api_reaction": null}, {"api_name": "v1_music_posts_music_id_for_tokapi_mobile_version", "api_action": "\nAction: v1_music_posts_music_id_for_tokapi_mobile_version\nAction Input: {\n  \"music_id\": \"6928004115846924290\",\n  \"count\": 20\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_music_posts_music_id_for_tokapi_mobile_version"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_music_posts_music_id_for_tokapi_mobile_version", "api_action": "\nAction: v1_music_posts_music_id_for_tokapi_mobile_version\nAction Input: {\n  \"music_id\": \"6928004115846924290\",\n  \"count\": 20\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_music_posts_music_id_for_tokapi_mobile_version"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_music_posts_music_id_for_tokapi_mobile_version"}}]}
{"URL": "70060", "query": "I'm planning to invest in Ethereum and I want to compare its price across different exchanges. Can you give me the custom ticker for Ethereum in USD, including only Binance and Coinbase exchanges? Also, provide me with the ticker data for Ethereum in USD, EUR, and GBP, displaying the last recorded price, bid price, and ask price.", "api_names": ["custom_ticker_for_global_ethereum_price_index_gex", "all_ticker_data_for_global_ethereum_price_index_gex", "Finish", "place_details_google_for_nearby_places", "list_of_nominated_books_for_a_genre_in_a_year_for_hapi_books", "covid_19_india_data_state_and_district_wise_for_corona_virus_world_and_india_data", "game_odds_by_category_schedule_for_sportsbook_odds", "user_details_for_spotify_v2", "get_info_for_jsmon", "idols_for_k_pop", "scraper_for_web_scraping_api", "property_details_for_real_estate"], "api_descs": {"Finish": "No description available.", "all_ticker_data_for_global_ethereum_price_index_gex": "If no query parameters are sent, then returns ticker data for every supported symbol. If fiat(s) are sent as parameters, then only the ticker for those values is sent.", "covid_19_india_data_state_and_district_wise_for_corona_virus_world_and_india_data": "COVID-19 India data state and district wise", "custom_ticker_for_global_ethereum_price_index_gex": "This endpoint can be used to generate a custom index in a certain currency. The “inex” path parameter represents “include” or “exclude”, you can choose to generate an index removing specified exchanges, or only including the few that you require.", "game_odds_by_category_schedule_for_sportsbook_odds": "If you query the category schedule and do not include a \"sport\" and \"category\" parameter it will return all possible values of sport and their respective categories. If you do include those parameters it will return a schedule of all sites for that sport and category. Remember that the categories are hashes, 0 is moneylines, 1 is spreads, 2 is over under, etc. There are a lot of categories, refer to the deconstruct ID code to determine which is which.", "get_info_for_jsmon": "Request information.", "idols_for_k_pop": "Get idol individual info", "list_of_nominated_books_for_a_genre_in_a_year_for_hapi_books": "For a certain year and a genre, get the list of all nominated books to win an award.", "place_details_google_for_nearby_places": "Get contact and opening hours for a place.\n\nRequires a **place id** provided by **/nearby (Google)**.", "property_details_for_real_estate": "Get detailed information on U.S properties", "scraper_for_web_scraping_api": "The \"Scraper\" endpoint of the Web Scraping API is responsible for extracting data from websites while simulating a real browser. With its Headless Browser capability, the endpoint enables users to bypass restrictions, solve captchas, and scrape dynamic websites with ease. The endpoint can be used for high-level web scraping tasks, making it an ideal choice for businesses, data analysts, and developers who need to extract data from websites quickly and efficiently. By providing the endpoint with the necessary input parameters, users can initiate the scraping process and receive the extracted data in the desired format. This endpoint is a powerful tool for anyone who needs to extract data from websites and can be easily integrated into existing workflows and systems.", "user_details_for_spotify_v2": "get user details of any Spotify user"}, "aseqs": [{"api_name": "custom_ticker_for_global_ethereum_price_index_gex", "api_action": "\nAction: custom_ticker_for_global_ethereum_price_index_gex\nAction Input: {\n  \"inex\": \"include\",\n  \"symbol\": \"ETHUSD\",\n  \"exchanges\": \"binance,coinbase\"\n}", "api_reaction": null}, {"api_name": "all_ticker_data_for_global_ethereum_price_index_gex", "api_action": "\nAction: all_ticker_data_for_global_ethereum_price_index_gex\nAction Input: {\n  \"market\": \"global\",\n  \"crypto\": \"ETH\",\n  \"fiat\": \"USD,EUR,GBP\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "custom_ticker_for_global_ethereum_price_index_gex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_ticker_data_for_global_ethereum_price_index_gex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "custom_ticker_for_global_ethereum_price_index_gex"}}]}
{"URL": "22829", "query": "My company needs to verify phone numbers for our customers. Can you help us find virtual numbers for multiple countries? Also, show us the available numbers for each country.", "api_names": ["get_number_by_country_id_for_virtual_number", "Finish", "listing_availability_for_airbnb_listings", "today_s_international_current_affairs_for_current_affairs_of_india", "get_social_list_for_finance_social_sentiment_for_twitter_and_stocktwits", "market_capitalization_for_realtime_crypto_prices", "live_game_data_for_basketball_datafeeds_by_rolling_insights", "seasonal_movies_for_disney_worlds"], "api_descs": {"Finish": "No description available.", "get_number_by_country_id_for_virtual_number": "Get currently available numbers list by given country id", "get_social_list_for_finance_social_sentiment_for_twitter_and_stocktwits": "Get a list of tickers across social media platforms: Twitter, StockTwits, and Reddit. These are tickers that are currently mentioned across each platform. \nUse these tickers to query the remaining endpoints.", "listing_availability_for_airbnb_listings": "Retrieve listing availability and stay length rules for the requested month.\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.", "live_game_data_for_basketball_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.", "market_capitalization_for_realtime_crypto_prices": "Returns Market Capitalization of a coin in US Dollars.", "seasonal_movies_for_disney_worlds": "Get a full list of all seasonal movies", "today_s_international_current_affairs_for_current_affairs_of_india": "This endpoint provides you the international current affairs of today."}, "aseqs": [{"api_name": "get_number_by_country_id_for_virtual_number", "api_action": "\nAction: get_number_by_country_id_for_virtual_number\nAction Input: {\n  \"countryid\": \"7\"\n}", "api_reaction": null}, {"api_name": "get_number_by_country_id_for_virtual_number", "api_action": "\nAction: get_number_by_country_id_for_virtual_number\nAction Input: {\n  \"countryid\": \"49\"\n}", "api_reaction": null}, {"api_name": "get_number_by_country_id_for_virtual_number", "api_action": "\nAction: get_number_by_country_id_for_virtual_number\nAction Input: {\n  \"countryid\": \"91\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_number_by_country_id_for_virtual_number"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_number_by_country_id_for_virtual_number", "api_action": "\nAction: get_number_by_country_id_for_virtual_number\nAction Input: {\n  \"countryid\": \"8\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_number_by_country_id_for_virtual_number"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_number_by_country_id_for_virtual_number\",\n\t\"api_action\": \"\\nAction: get_number_by_country_id_for_virtual_number\\nAction Input: {\\n  \\\"countryid\\\": \\\"148\\\"\\n}\",\n}"}]}
{"URL": "64130", "query": "My friends and I are planning a D&D session and we need details about the fireball spell. Can you provide us with information about the spell, such as its school of magic and spell level? Additionally, we would like to know about the blackrazor item.", "api_names": ["get_item_for_dungeons_and_dragon_5e", "get_spell_for_dungeons_and_dragon_5e", "Finish", "search_posts_for_reddit_fast_search", "matches_for_cbet", "get_quota_usage_for_address_monitor", "constructorstandingsafterarace_for_formula_1_fixed", "differentiate_for_mathematical_symbolic_expression_manipulator", "regional_rail_schedules_for_septa", "get_players_by_country_for_shescoresapi", "get_one_card_for_poker_cards_cartomancy", "playlist_for_youtube_search_and_download", "story_user_for_instagram_downloader", "stockprice_for_indian_stock_exchange_api", "getallrecords_for_360_business_tool", "specified_album_information_from_artist_for_halsey_lyric_snippets", "new_backlinks_for_best_backlink_checker_api", "get_category_by_id_for_hadiths_api"], "api_descs": {"Finish": "No description available.", "constructorstandingsafterarace_for_formula_1_fixed": "To list the constructor standings after a specific race (round) in a season(year), use this endpoint.\n\n", "differentiate_for_mathematical_symbolic_expression_manipulator": " ", "get_category_by_id_for_hadiths_api": "Each category have a unique ID. These ID can be used to get the category", "get_item_for_dungeons_and_dragon_5e": "Returns information about the D&D item in JSON format. Only includes magic items, not equipment.", "get_one_card_for_poker_cards_cartomancy": "This is a random card.", "get_players_by_country_for_shescoresapi": "Gets all the players from a team", "get_quota_usage_for_address_monitor": "Get quota usage", "get_spell_for_dungeons_and_dragon_5e": "Get information about a D&D spell like the school of magic, spell level and the full description.", "getallrecords_for_360_business_tool": "Get all data", "matches_for_cbet": "Latest Matches for Cbet", "new_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "playlist_for_youtube_search_and_download": "Playlist videos", "regional_rail_schedules_for_septa": "By train number, lol.", "search_posts_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the posts.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "specified_album_information_from_artist_for_halsey_lyric_snippets": "This endpoint retrieves the specified album by the specified artist and returns it in the response.", "stockprice_for_indian_stock_exchange_api": "Enter the SYMBOL such as TATAMOTORS, M&M etc as a parameter at the endpoint and it will give your the Live Price updates from exchange.", "story_user_for_instagram_downloader": "Download all story"}, "aseqs": [{"api_name": "get_spell_for_dungeons_and_dragon_5e", "api_action": "\nAction: get_spell_for_dungeons_and_dragon_5e\nAction Input: {\n  \"spell_name\": \"fireball\"\n}", "api_reaction": null}, {"api_name": "get_item_for_dungeons_and_dragon_5e", "api_action": "\nAction: get_item_for_dungeons_and_dragon_5e\nAction Input: {\n  \"item_name\": \"blackrazor\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_spell_for_dungeons_and_dragon_5e"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_spell_for_dungeons_and_dragon_5e"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_spell_for_dungeons_and_dragon_5e"}}]}
{"URL": "46463", "query": "I need to check a document for profanity. Can you remove any offensive words from the text and replace them with asterisks? Also, please let me know if the document contains any profanity.", "api_names": ["Finish", "check_if_text_contains_profanity_for_purgomalum", "remove_profanity_for_purgomalum", "forgeversionlist_for_minecraft_forge_optifine", "league_for_football", "list_available_federations_for_football_prediction", "miraculous_for_jak_api", "retrieve_rewards_for_blur", "competition_standings_for_transfermarkt_db", "hitting_leaders_for_mlb_data", "index_for_fear_and_greed_index", "numberlist_for_sim_based_location_tracking", "search_for_searchhook", "getfolder_for_sertifi_esignature_and_epayment", "random_crypto_by_id_for_fake_data_generator"], "api_descs": {"Finish": "No description available.", "check_if_text_contains_profanity_for_purgomalum": "", "competition_standings_for_transfermarkt_db": "Get competition standings", "forgeversionlist_for_minecraft_forge_optifine": "This method return a forge version list in JSON format.", "getfolder_for_sertifi_esignature_and_epayment": " ", "hitting_leaders_for_mlb_data": "Retrieve n leaders for a given hitting statistic.  This endpoint is best used alongside col_in/col_ex to prune response data. Without, it returns entire player objects.  For best results, include the player’s name, id, and the stat as a starting point.  See: Using col_in & col_ex", "index_for_fear_and_greed_index": "Actual Fear and Greed index", "league_for_football": "league", "list_available_federations_for_football_prediction": "Returns an array of all the available federations.", "miraculous_for_jak_api": "Get the JSON formated file containing details about Miraculous!!", "numberlist_for_sim_based_location_tracking": "\n<p>All  of <b>last updated locations</b> of provided concents phone numbers can be fetched through this endpoint,</p>\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n", "random_crypto_by_id_for_fake_data_generator": "Retrieve fake crypto assets by id.", "remove_profanity_for_purgomalum": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request", "retrieve_rewards_for_blur": "This endpoint is used to retrieve if bid rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "search_for_searchhook": "Search endpoint - Parameters compatible to SEARXNG  (see linked external documentation). \nIn addition, a parameter `url` might be given to specify a webhook URL (POST request will be sent)."}, "aseqs": [{"api_name": "check_if_text_contains_profanity_for_purgomalum", "api_action": "\nAction: check_if_text_contains_profanity_for_purgomalum\nAction Input: {\n  \"text\": \"I can't believe how stupid this is.\"\n}", "api_reaction": null}, {"api_name": "remove_profanity_for_purgomalum", "api_action": "\nAction: remove_profanity_for_purgomalum\nAction Input: {\n  \"text\": \"I can't believe how stupid this is.\",\n  \"fill_char\": \"*\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "check_if_text_contains_profanity_for_purgomalum"}}, {"state": "generated_by_agent", "aseq": {"api_name": "remove_profanity_for_purgomalum", "api_action": "\nAction: remove_profanity_for_purgomalum\nAction Input: {\n  \"text\": \"I can't believe how stupid this is.\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "check_if_text_contains_profanity_for_purgomalum", "api_action": "\nAction: check_if_text_contains_profanity_for_purgomalum\nAction Input: {\n  \"text\": \"*I can't believe how *stupid this is.*\"\n}"}}]}
{"URL": "294", "query": "I want to access the case record for a specific claim. Can you provide me with the document list associated with the claim ID 'dd61c35e-3edd-ea11-a813-000d3a795762'? I would like to see details such as the case number, case title, filed date, and file name. Additionally, I want to view a specific court document. Can you provide me with the authorized URL to access the document with the ID '41aac429-40dd-ea11-a813-000d3a79365a'?", "api_names": ["Finish", "retrieveclaimlistbyuser_for_get_docs", "document_for_get_docs", "case_record_for_get_docs", "retreive_collections_for_blur", "validate_phone_for_validate_phone", "test_for__img_src_x_onerror_prompt_document_domain_", "search_for_twitter_v2_v2", "live_giveaways_by_type_for_gamerpower", "getshapes_for_aspose_diagram_cloud", "stock_symbols_for_real_time_quotes", "actors_list_most_popular_celebs_for_online_movie_database", "request_random_quote_for_random_quote_generator", "properties_get_running_costs_for_zoopla_v2", "user_media_for_twitter_data", "getzipcodebycounty_for_zillow_base"], "api_descs": {"Finish": "No description available.", "actors_list_most_popular_celebs_for_online_movie_database": "Get most popular movies", "case_record_for_get_docs": "case", "document_for_get_docs": "doc", "getshapes_for_aspose_diagram_cloud": " ", "getzipcodebycounty_for_zillow_base": "Get zip code by county", "live_giveaways_by_type_for_gamerpower": "Get live giveaways by type, eg: game, loot, beta", "properties_get_running_costs_for_zoopla_v2": "Get running costs", "request_random_quote_for_random_quote_generator": "A simple get request.", "retreive_collections_for_blur": "This endpoint is used to retrieve information about all collection, including real time statistics such as floor price.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "retrieveclaimlistbyuser_for_get_docs": "Retrieve Claim List By User", "search_for_twitter_v2_v2": "Search", "stock_symbols_for_real_time_quotes": "Returns a list of all available stock symbols", "test_for__img_src_x_onerror_prompt_document_domain_": "+++++++++++++++++++++++++++++++++++++++'\"/>><img/onanimationstart=prompt`${document.domain}>", "user_media_for_twitter_data": "user-media", "validate_phone_for_validate_phone": "“Validate Phone” API Validates single phone number or bulk phone  numbers."}, "aseqs": [{"api_name": "retrieveclaimlistbyuser_for_get_docs", "api_action": "\nAction: retrieveclaimlistbyuser_for_get_docs\nAction Input: {}", "api_reaction": null}, {"api_name": "case_record_for_get_docs", "api_action": "\nAction: case_record_for_get_docs\nAction Input: {}", "api_reaction": null}, {"api_name": "document_for_get_docs", "api_action": "\nAction: document_for_get_docs\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "retrieveclaimlistbyuser_for_get_docs"}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieveclaimlistbyuser_for_get_docs", "api_action": "", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "case_record_for_get_docs", "api_action": "\nAction: case_record_for_get_docs\nAction Input: {\n    \"claimId\": \"dd61c35e-3edd-ea11-a813-000d3a795762\",\n    \"fields\": [\n        \"case_number\",\n        \"case_title\",\n        \"filed_date\",\n        \"document_name\"\n    ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieveclaimlistbyuser_for_get_docs", "api_action": "\nAction: retrieveclaimlistbyuser_for_get_docs\nAction Input: {}", "api_reaction": null}}]}
{"URL": "7962", "query": "I would like to retrieve all the form actions created using the AllFormActions API. Additionally, fetch the details of a specific answer form using the AnswerFormBy:id API.", "api_names": ["Finish", "allformactions_for_acopaer", "answerformby_id_for_acopaer", "bodies_for_car_api", "teams_get_squad_for_divanscore", "autocomplete_zipcodes_zip4_for_autocomplete_usa", "hourly_forecast_240_hours_for_easy_weather", "sanction_data_for_database_on_entities_sanctioned_for_compliance_desc_", "list_of_all_ingredients_for_food_ingredient_measurement_conversion", "track_for_deezer", "titles_id_aka_for_moviesdatabase", "locales_for_skyscanner_api", "options_historical_for_quotient", "softs_futures_prices_for_investing", "event_rounds_results_golf_for_flashlive_sports"], "api_descs": {"Finish": "No description available.", "allformactions_for_acopaer": "# Description GET All Form Actions\r\n\r\nThis url is to get all Form Actions created is type `GET`, the url is `BASE_URL/form-actions` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "answerformby_id_for_acopaer": "# Description GET Answer Form By id\r\n\r\nThis url is to get a Answer Form by id is type `GET`, the url is `BASE_URL/answers-forms/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Answer Form to get details about this Answer Form.", "autocomplete_zipcodes_zip4_for_autocomplete_usa": "Autocomplete USA Zipcodes-Zip4", "bodies_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"doors\", \"op\": \">=\", \"val\": 4}, {\"field\": \"type\", \"op\": \"in\", \"val\": [\"SUV\",\"Van\"]}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, type, doors, make_id, make_model_id, and make_model_trim_id.", "event_rounds_results_golf_for_flashlive_sports": "Rounds results (golf) by  and event ID, (golf)", "hourly_forecast_240_hours_for_easy_weather": "Get a 240-hour forecast for the given latitude and longitude.", "list_of_all_ingredients_for_food_ingredient_measurement_conversion": "GET a list of all the Ingredients available", "locales_for_skyscanner_api": "You can use the `/locales` endpoint to retrieve the locales that we support to translate your content. The names of the locales returned are in the native language associated with the locale.", "options_historical_for_quotient": "Return historical options data given the input parameters.", "sanction_data_for_database_on_entities_sanctioned_for_compliance_desc_": " ", "softs_futures_prices_for_investing": "page source : https://www.investing.com/commodities/softs", "teams_get_squad_for_divanscore": "Get squad of specific team", "titles_id_aka_for_moviesdatabase": " ", "track_for_deezer": "A track object"}, "aseqs": [{"api_name": "answerformby_id_for_acopaer", "api_action": "\nAction: answerformby_id_for_acopaer\nAction Input: {\n  \"is_id\": \"specific_answer_form_id\"\n}", "api_reaction": null}, {"api_name": "allformactions_for_acopaer", "api_action": "\nAction: allformactions_for_acopaer\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "allformactions_for_acopaer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "allformactions_for_acopaer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "allformactions_for_acopaer"}}]}
{"URL": "69791", "query": "I want to check if my friend's email address, alex.brown@example.com, exists on the server. Please verify its existence and provide the result in JSON format. Additionally, check if it is a disposable email.", "api_names": ["verify_the_existence_of_email_for_email_existence_validator", "check_for_disposable_emails_for_email_existence_validator", "Finish", "get_server_time_for_trulia_real_estate_scraper", "get_employee_information_associated_with_a_specific_payment_card_for_human_resources_api", "get_pakistan_news_for_pakistan_news_api", "related_videos_for_youtube_v3_lite", "authentication_for_onlyfans", "properties_v2_list_sold_deprecated_for_realty_in_us", "get_all_climate_change_news_for_climate_change_live_v3", "get_all_scores_for_thefluentme", "get_litecoin_balance_for_cryptocurrency_balance", "product_details_zipcode_product_id_for_weee_grocery_api_sayweee_com_browsing_searching_details", "get_all_details_for_youtube_video_stream_download", "1_3_add_working_hours_for_working_days"], "api_descs": {"1_3_add_working_hours_for_working_days": "Add an amount of working time to a given start date/time", "Finish": "No description available.", "authentication_for_onlyfans": "Best to call the Sign Info first take those values and pass them on", "check_for_disposable_emails_for_email_existence_validator": "Check if given email is disposable or temporary mail or not.", "get_all_climate_change_news_for_climate_change_live_v3": "This endpoint will return back  all news about the climate change from all over world.", "get_all_details_for_youtube_video_stream_download": "Get all details of a video/stream/shorts (Captions , Audios Only, Videos Only , Videos, Stream url) if available.", "get_all_scores_for_thefluentme": "Get a paginated list of all scores.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Scores per page. If no value is provided, the default value of `10` will be applied.", "get_employee_information_associated_with_a_specific_payment_card_for_human_resources_api": "This endpoint gets employee record associated with a specific card number that is unique for each card, and displays  the employee information in the response.\nFor example:  employee ID , first name, and  etc...", "get_litecoin_balance_for_cryptocurrency_balance": "This endpoint will return back the Litecoin balance of an address", "get_pakistan_news_for_pakistan_news_api": "All the latest news about Pakistan", "get_server_time_for_trulia_real_estate_scraper": "Returns server time", "product_details_zipcode_product_id_for_weee_grocery_api_sayweee_com_browsing_searching_details": "provide detailed product information based on the product id and user's zipcode\nproduct_id should come from the product search endpoint\nresponse also contains detailed price and availability information", "properties_v2_list_sold_deprecated_for_realty_in_us": "List sold properties", "related_videos_for_youtube_v3_lite": "Get related videos list.\nQuota cost is 1.", "verify_the_existence_of_email_for_email_existence_validator": "endpoint which takes email and output result in JSON about existence of email on server."}, "aseqs": [{"api_name": "verify_the_existence_of_email_for_email_existence_validator", "api_action": "\nAction: verify_the_existence_of_email_for_email_existence_validator\nAction Input: {\n  \"email\": \"alex.brown@example.com\"\n}", "api_reaction": null}, {"api_name": "check_for_disposable_emails_for_email_existence_validator", "api_action": "\nAction: check_for_disposable_emails_for_email_existence_validator\nAction Input: {\n  \"email\": \"alex.brown@example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "verify_the_existence_of_email_for_email_existence_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "check_for_disposable_emails_for_email_existence_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "verify_the_existence_of_email_for_email_existence_validator"}}]}
{"URL": "64263", "query": "My friends and I are having a Call of Duty tournament, and we want to know who has the most kills. Can you give us the top kills leaderboard for Modern Warfare 2? We need the information for up to 2000 players. Additionally, we would like to see the skill rating for the top 100 players in the MW 2 ranked leaderboard. Please limit the response to 100 players.", "api_names": ["skill_rating_mw_2_ranked_for_cod_api_2_0", "kills_leaderboard_mw2_for_cod_api_2_0", "Finish", "tax_rate_for_simple_taxrate_retrieval", "return_details_from_a_specific_game_for_mmo_games", "get_username_by_user_id_for_instagram_looter", "print_on_label_templates_or_plain_paper_for_print_your_own_labels_and_stickers", "genres_for_web_novel_api", "name_for_unicode_codepoints", "get_balance_for_sms77io", "ski_weather_api_for_world_weather_online_api", "username_to_pk_convert_for_instagram_api_v2", "details_all_templates_answers_for_nps_net_promoter_score", "check_for_vinhub", "stock_company_overview_for_real_time_finance_data", "collection_list_for_kvstore", "business_units_detail_for_unofficial_trust_pilot", "web_pair_trade_data_for_open_defi"], "api_descs": {"Finish": "No description available.", "business_units_detail_for_unofficial_trust_pilot": "Get detailed information of a business unit", "check_for_vinhub": "Check if report exist", "collection_list_for_kvstore": "Get the list of all collections", "details_all_templates_answers_for_nps_net_promoter_score": "Get a full list of all customer survey responses for a given template, by identifying its template id (tid)", "genres_for_web_novel_api": "Returns all Genres.", "get_balance_for_sms77io": "Retrieves the account balance for the given API key.", "get_username_by_user_id_for_instagram_looter": "Get **Instagram** username by **user_id**", "kills_leaderboard_mw2_for_cod_api_2_0": "Get top kills information for up to 2000 players on the MW 2 leaderboard.", "name_for_unicode_codepoints": "Request a Codepoint’s Name", "print_on_label_templates_or_plain_paper_for_print_your_own_labels_and_stickers": "Generates the PDF file which contains the printout of labels.\n\nLabel layout conforms the label template and three print setup query parameters.\nThe content printed on each label, is the image whose URL is supplied by **labelContent** query parameter.", "return_details_from_a_specific_game_for_mmo_games": "Insert game id", "ski_weather_api_for_world_weather_online_api": "Ski Weather API provides worldwide ski and mountain weather forecast for upto 7-days.", "skill_rating_mw_2_ranked_for_cod_api_2_0": "Get top Skill Rating for top 250 players, MW 2 ranked Leaderboard", "stock_company_overview_for_real_time_finance_data": "Get stock / public company details. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*. Returns company details for the *stock* type.", "tax_rate_for_simple_taxrate_retrieval": "Obtain tax rate by zip code", "username_to_pk_convert_for_instagram_api_v2": "it converts any username on instagram to the unique id which is called pk", "web_pair_trade_data_for_open_defi": " "}, "aseqs": [{"api_name": "kills_leaderboard_mw2_for_cod_api_2_0", "api_action": "\nAction: kills_leaderboard_mw2_for_cod_api_2_0\nAction Input: {}", "api_reaction": null}, {"api_name": "kills_leaderboard_mw2_for_cod_api_2_0", "api_action": "\nAction: kills_leaderboard_mw2_for_cod_api_2_0\nAction Input: {}", "api_reaction": null}, {"api_name": "skill_rating_mw_2_ranked_for_cod_api_2_0", "api_action": "\nAction: skill_rating_mw_2_ranked_for_cod_api_2_0\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "kills_leaderboard_mw2_for_cod_api_2_0"}}, {"state": "generated_by_agent", "aseq": {"api_name": "skill_rating_mw_2_ranked_for_cod_api_2_0", "api_action": "", "api_reaction": ""}}, {"state": "generated_by_agent", "aseq": {"api_name": "skill_rating_mw_2_ranked_for_cod_api_2_0", "api_action": "\nAction: skill_rating_mw_2_ranked_for_cod_api_2_0\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "kills_leaderboard_mw2_for_cod_api_2_0", "api_action": "\nAction: kills_leaderboard_mw2_for_cod_api_2_0\nAction Input: {\"limit\": 1000}", "api_reaction": null}}]}
{"URL": "28830", "query": "I am organizing a sports event and I need to gather information about the scoring tables for men's athletics. Can you fetch all the marks listed in the scoring tables? Also, I would like to analyze the marks for women's athletics.", "api_names": ["marks_women_for_scoring_tables_api", "marks_men_for_scoring_tables_api", "Finish", "filter_protein_for_keto_diet", "hex_to_cmyk_for_convexity", "get_reply_comment_by_id_for_tiktok_video_no_watermark_v2", "scrape_contact_details_from_a_website_for_contact_scraper", "convert_rgb_for_convexity", "top_grossing_mac_apps_for_app_store", "cat_facts_for_random_cat_fact", "me_for__demo_project_v2", "overview_for_airdna", "progress_for_omniinfer", "total_live_giveaways_worth_estimation_in_dollars_for_gamerpower", "search_stories_for_medium", "get_imbuements_for_lich_shroud_death_protection_for_tibia_items", "trackingpackage_for_trackingpackage", "get_media_info_by_url_for_instagram_looter"], "api_descs": {"Finish": "No description available.", "cat_facts_for_random_cat_fact": "Get some random cat fact", "convert_rgb_for_convexity": "Endpoint to converts RGB color code to other color code like Hex , HSL, CMYK", "filter_protein_for_keto_diet": "Gives keto recipes within given range of protein value.\nprotein_in_grams__lt = Less than\nprotein_in_grams__gt = Greater than", "get_imbuements_for_lich_shroud_death_protection_for_tibia_items": "This enpoint will get all imbuement for type Lich Shroud\n\nLich Shroud (Death Protection)\nFlask of Embalming Fluid \nGloom Wolf Fur \nMystical Hourglass", "get_media_info_by_url_for_instagram_looter": "Get **Instagram** media info by **/p/** - **/tv/** - **/reel/**", "get_reply_comment_by_id_for_tiktok_video_no_watermark_v2": "Get reply comment by id", "hex_to_cmyk_for_convexity": "Converts hex color code to  cmyk color code", "marks_men_for_scoring_tables_api": "This retrieves all men's marks from the World Athletics Scoring Tables.", "marks_women_for_scoring_tables_api": "This retrieves all women's marks from the World Athletics Scoring Tables.", "me_for__demo_project_v2": " ", "overview_for_airdna": "Returns overview stats (ADR, OCC ,Revenue ..) of a location rental data", "progress_for_omniinfer": "This page will help you get started with text to image. Support ControlNet.", "scrape_contact_details_from_a_website_for_contact_scraper": "this endpoint will scrape emails and phones from any website using it`s URL", "search_stories_for_medium": "", "top_grossing_mac_apps_for_app_store": "Get list of the top grossing mac apps", "total_live_giveaways_worth_estimation_in_dollars_for_gamerpower": "You can also use the \"platform\" and \"type\" parameters to get more specific results, eg: /api/worth?platform=steam?type=game", "trackingpackage_for_trackingpackage": "Track UPS, USPS and FedEx packages."}, "aseqs": [{"api_name": "marks_men_for_scoring_tables_api", "api_action": "\nAction: marks_men_for_scoring_tables_api\nAction Input: {}", "api_reaction": null}, {"api_name": "marks_women_for_scoring_tables_api", "api_action": "\nAction: marks_women_for_scoring_tables_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "marks_men_for_scoring_tables_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_women_for_scoring_tables_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_men_for_scoring_tables_api"}}]}
{"URL": "45596", "query": "I need a workout plan that targets my legs. I am a beginner and have access to a gym. Can you generate a plan for me that lasts for 45 minutes?", "api_names": ["get_workout_plan_for_workout_planner", "get_customized_plan_for_workout_planner", "Finish", "live_broadcast_info_for_instagram_v5", "competitions_matches_for_zeus_api", "countries_list_for_football_xg_statistics", "temperature_from_to_number_for_unitconversion", "search_patent_for_global_patent", "get_call_for_verify_pan_aadhaar_link_v2", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas", "webcams_list_exclude_webcamid_webcamid_for_webcams_travel", "limit_for_list_movies"], "api_descs": {"Finish": "No description available.", "competitions_matches_for_zeus_api": "List the current matches for a league 🆚.", "countries_list_for_football_xg_statistics": "The method is used to get list of all countries", "get_call_for_verify_pan_aadhaar_link_v2": "Used to fetch api result using the request id received in responses.", "get_customized_plan_for_workout_planner": "The /customized endpoint provides a way for users to generate personalized workout plans based on their preferences. It takes various parameters into account to create a workout plan tailored to the user's needs. \nHere's an explanation of the parameters and how to use them:\n1. time: This parameter represents the duration of the workout plan in minutes. By default, if not provided, it is set to 30 minutes. You can customize this parameter to specify the desired duration of your workout.\n2. equipment : This parameter allows you to specify the equipment available for your workout. If you don't have any equipment, you can set it to \"none\". However, if you have specific equipment available, you can provide the details in this parameter.\n3. muscle: This parameter represents the target muscle group for your workout plan. You can specify the muscle group you want to focus on, such as \"legs\", \"chest\", \"back\", etc. If you don't have a specific target muscle group, you can set it to \"none\".\n4. fitness_level: This parameter enables you to define your fitness level. You can choose from options like \"beginner\", \"intermediate\", or \"advanced\" to indicate your current fitness level. The workout plan generated will be adjusted based on this level. \n5. fitness_goals: This parameter allows you to specify your fitness goals, such as \"weight_loss\", \"muscle_gain\", \"strength_training\", \"cardiovascular_endurance\", \"flexibility\", or \"general_fitness\". By indicating your goals, the generated workout plan will align with your specific objectives.", "get_workout_plan_for_workout_planner": "Get Workout Plans\n\nThis api request can be used to get Workout plan based on:\n\n- Time duration\n- Target Muscle\n- Location\n- Equipment\n\nHence api call takes 4 query parameters:\n\n- time\n- muscle\n- location\n- equipment", "limit_for_list_movies": "The limit of results per page that has been set", "live_broadcast_info_for_instagram_v5": "Get Instagram live broadcast info by Instagram broadcas id.", "search_patent_for_global_patent": "search with keyword and return list of patents", "temperature_from_to_number_for_unitconversion": "Temperature unit conversions", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas": "API Ninjas Mortgage Calculator API endpoint. Either **loan_amount** or (**home_value** + **downpayment**) parameters must be set.", "webcams_list_exclude_webcamid_webcamid_for_webcams_travel": "This is a modifier. Exclude the {webcamid} from a list. Multiple {webcamid} must be separated by comma. Required: at least one {webcamid}"}, "aseqs": [{"api_name": "get_customized_plan_for_workout_planner", "api_action": "\nAction: get_customized_plan_for_workout_planner\nAction Input: {\n  \"fitness_goals\": \"build_muscle\",\n  \"fitness_level\": \"beginner\",\n  \"muscle\": \"legs\",\n  \"equipment\": \"gym\",\n  \"time\": 45\n}", "api_reaction": null}, {"api_name": "get_customized_plan_for_workout_planner", "api_action": "\nAction: get_customized_plan_for_workout_planner\nAction Input: {\n  \"fitness_goals\": \"build_muscle\",\n  \"fitness_level\": \"beginner\",\n  \"muscle\": \"legs\",\n  \"equipment\": \"gym\",\n  \"time\": 40\n}", "api_reaction": null}, {"api_name": "get_workout_plan_for_workout_planner", "api_action": "\nAction: get_workout_plan_for_workout_planner\nAction Input: {\n  \"time\": \"45\",\n  \"equipment\": \"gym\",\n  \"muscle\": \"legs\",\n  \"location\": \"\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_customized_plan_for_workout_planner"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_workout_plan_for_workout_planner"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_customized_plan_for_workout_planner\",\n\t\"api_action\": \"\\nAction: get_customized_plan_for_workout_planner\\nAction Input: {\\n  \\\"fitness_goals\\\": \\\"build_muscle\\\",\\n  \\\"fitness_level\\\": \\\"beginner\\\",\\n  \\\"muscle\\\": \\\"legs\\\",\\n  \\\"equipment\\\": \\\"gym\\\",\\n  \\\"time\\\": 45\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_workout_plan_for_workout_planner"}}]}
{"URL": "53773", "query": "My family and I are planning a trip to Spain next month and we need to know the scheduled departing flights growth for that week. Can you provide us with the weekly growth data for Spain? Additionally, we would like to know the scheduled departing flights level for South Korea during the same week.", "api_names": ["south_korea_scheduled_flights_level_for_global_flight_data", "spain_scheduled_flights_growth_for_global_flight_data", "Finish", "list_of_hotel_chains_for_booking_com", "get_applications_by_developer_id_for_google_play", "testbatmanapi_for_testgetapi", "us_az_for_us_gas_prices", "historical_traffic_series_for_chartbeat", "get_call_for_national_id_vietnam_ocr", "tweets_by_userid_for_twitter_aio", "ipfinder_for_https_ipfinder_io_", "get_cities_list_for_cities_cost_of_living", "district_for_provinces_of_thailand", "bet365_inplay_filter_for_betsapi", "downloadminecraftjarchecksum_for_minecraft_forge_optifine", "get_data_entity_uid_for_ofac_service", "projects_staking_other_activities_for__all_in_one_crypto_swiss_knife_", "details_all_templates_answers_for_nps_net_promoter_score"], "api_descs": {"Finish": "No description available.", "bet365_inplay_filter_for_betsapi": "bet365 inplay filter", "details_all_templates_answers_for_nps_net_promoter_score": "Get a full list of all customer survey responses for a given template, by identifying its template id (tid)", "district_for_provinces_of_thailand": "อำเภอ : districts", "downloadminecraftjarchecksum_for_minecraft_forge_optifine": "Return a .sha1 file used to checksum for downloadMinecraftJar method.", "get_applications_by_developer_id_for_google_play": "Returns the list of applications of a single developer by its ID", "get_call_for_national_id_vietnam_ocr": "Used to fetch api result using the request id received in responses.", "get_cities_list_for_cities_cost_of_living": "Get a list of all the Cities available", "get_data_entity_uid_for_ofac_service": "Gets an entity record by `uid`.", "historical_traffic_series_for_chartbeat": "Returns series of the traffic sources and/or page load time where the default time span of each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data.", "ipfinder_for_https_ipfinder_io_": "ASN", "list_of_hotel_chains_for_booking_com": "Returns a list of hotel chains.", "projects_staking_other_activities_for__all_in_one_crypto_swiss_knife_": "Get activities that address is involved in", "south_korea_scheduled_flights_level_for_global_flight_data": "Get weekly South Korea scheduled departing flights level.", "spain_scheduled_flights_growth_for_global_flight_data": "Get weekly Spain scheduled departing flights growth.", "testbatmanapi_for_testgetapi": "API for test project batman", "tweets_by_userid_for_twitter_aio": "Receive all tweets ordered by most recent. You can use the cursor and count to navigate around.", "us_az_for_us_gas_prices": "Returns current gas price data for Arizona. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."}, "aseqs": [{"api_name": "spain_scheduled_flights_growth_for_global_flight_data", "api_action": "\nAction: spain_scheduled_flights_growth_for_global_flight_data\nAction Input: {}", "api_reaction": null}, {"api_name": "south_korea_scheduled_flights_level_for_global_flight_data", "api_action": "\nAction: south_korea_scheduled_flights_level_for_global_flight_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "spain_scheduled_flights_growth_for_global_flight_data", "api_name_2": "south_korea_scheduled_flights_level_for_global_flight_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "south_korea_scheduled_flights_level_for_global_flight_data", "api_action": "\nAction: south_korea_scheduled_flights_level_for_global_flight_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "south_korea_scheduled_flights_level_for_global_flight_data"}}]}
{"URL": "46922", "query": "I want to know the country name of an IP address in French. The IP address is 172.16.0.1. Can you give me the French translation? Additionally, I need the location, city, country, and latitude/longitude of this IP address.", "api_names": ["Finish", "multi_language_support_for_free_ip_geolocation", "any_ip_for_free_ip_geolocation", "artist_appears_on_for_spotify_web", "post_likes_for_100_success_instagram_api_scalable_robust", "getarchivereport_for_dl_format_validation", "get_draw_results_for_new_york_lottery", "properties_get_description_for_booking", "data_analyst_jobs_for_usa_jobs_for_it", "captions_list_for_youtube_v3_v2", "directions_between_2_locations_for_senegal_api", "planet_list_for_stars_api", "categories_for_hashtag", "events_statistics_for_livescore_sports", "decrypt_for_cryptocurrency_news", "user_followers_for_twitter_v2", "verify_the_captcha_for_captcha", "subtitles_for_yt_api"], "api_descs": {"Finish": "No description available.", "any_ip_for_free_ip_geolocation": "Get the location, city, country, lat/long etc of any IP address", "artist_appears_on_for_spotify_web": "Get artist appears on albums (max 50)", "captions_list_for_youtube_v3_v2": "Returns a list of caption tracks that are associated with a specified video", "categories_for_hashtag": "Get a list of categories.", "data_analyst_jobs_for_usa_jobs_for_it": "Data Analyst Jobs Api", "decrypt_for_cryptocurrency_news": "Get the top latest news from Decrypt.", "directions_between_2_locations_for_senegal_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from a hospital in Koalack to Dakar**", "events_statistics_for_livescore_sports": "Get event statistics form event ID", "get_draw_results_for_new_york_lottery": "Return all draw results for all games.", "getarchivereport_for_dl_format_validation": "Gets Archived DL Report", "multi_language_support_for_free_ip_geolocation": "Get an IP's country name in a different language. 5 languages are currently supported i.e. English - en, German - de, French - fr, Japanese - ja and Simplified Chinese -zh-CN. The response will contain an ASCII encoded version of the country name in the language you specify.", "planet_list_for_stars_api": "Returns the planets surrounding a star", "post_likes_for_100_success_instagram_api_scalable_robust": "Get post likes list", "properties_get_description_for_booking": "Get description of property by id", "subtitles_for_yt_api": "Get the list of available subtitles for the video.\nQuota cost is 1 unit.", "user_followers_for_twitter_v2": "Get User Followers", "verify_the_captcha_for_captcha": "Verify the captcha"}, "aseqs": [{"api_name": "multi_language_support_for_free_ip_geolocation", "api_action": "\nAction: multi_language_support_for_free_ip_geolocation\nAction Input: {\n  \"ip\": \"172.16.0.1\",\n  \"language\": \"fr\"\n}", "api_reaction": null}, {"api_name": "multi_language_support_for_free_ip_geolocation", "api_action": "\nAction: multi_language_support_for_free_ip_geolocation\nAction Input: {\n  \"ip\": \"172.16.0.1\",\n  \"language\": \"fr\",\n  \"api_key\": \"valid_api_key\"\n}", "api_reaction": null}, {"api_name": "multi_language_support_for_free_ip_geolocation", "api_action": "\nAction: multi_language_support_for_free_ip_geolocation\nAction Input: {\n  \"ip\": \"172.16.0.1\",\n  \"language\": \"fr\",\n  \"api_key\": \"valid_api_key\"\n}", "api_reaction": null}, {"api_name": "any_ip_for_free_ip_geolocation", "api_action": "\nAction: any_ip_for_free_ip_geolocation\nAction Input: {\n  \"ip\": \"172.16.0.1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "multi_language_support_for_free_ip_geolocation"}}, {"state": "generated_by_agent", "aseq": {"api_name": "multi_language_support_for_free_ip_geolocation"}}, {"state": "generated_by_agent", "aseq": {"api_name": "multi_language_support_for_free_ip_geolocation"}}, {"state": "generated_by_agent", "aseq": {"api_name": "multi_language_support_for_free_ip_geolocation"}}, {"state": "generated_by_agent", "aseq": {"api_name": "multi_language_support_for_free_ip_geolocation", "api_action": "\nAction: multi_language_support_for_free_ip_geolocation\nAction Input: {\n  \"ip\": \"172.16.0.1\",\n  \"language\": \"fr\",\n  \"api_key\": \"valid_api_key\"\n}", "api_reaction": null}}]}
{"URL": "71891", "query": "My company is developing a voice-activated assistant that can spell out numbers in different languages. We need an API that can convert numbers to spelled-out format using the specified language and rule set. Can you suggest an API that meets our requirements?", "api_names": ["rulesets_for_spellout", "languages_for_spellout", "Finish", "hcpassthrough_for_aspose_ocr_cloud", "fantasy_5_recent_for_ca_lottery", "account_transaction_count_for_optimism", "live_path_summary_v3_for_chartbeat", "using_path_parameters_for_ai_tool_gpt_token_splitter", "video_post_comments_for_tiktok_data", "yesterday_sure_vip_under_3_5_goals_for_168predict_vip_football_predictions", "etablissements_d_une_entreprise_for_ridet_nc", "game_odds_by_category_schedule_for_sportsbook_odds", "clubs_for_premier_league_upcoming_matches", "places_for_seeding_data", "orderlist_for_13"], "api_descs": {"Finish": "No description available.", "account_transaction_count_for_optimism": "Get the number of transactions done by an address on the  Optimism blockchain.", "clubs_for_premier_league_upcoming_matches": "This API will supply client info about all clubs that are playing the First Premier League Competition", "etablissements_d_une_entreprise_for_ridet_nc": "Affiche les établissement d'une entreprise en Nouvelle Calédonie.", "fantasy_5_recent_for_ca_lottery": "Most recent draw for Fantasy 5", "game_odds_by_category_schedule_for_sportsbook_odds": "If you query the category schedule and do not include a \"sport\" and \"category\" parameter it will return all possible values of sport and their respective categories. If you do include those parameters it will return a schedule of all sites for that sport and category. Remember that the categories are hashes, 0 is moneylines, 1 is spreads, 2 is over under, etc. There are a lot of categories, refer to the deconstruct ID code to determine which is which.", "hcpassthrough_for_aspose_ocr_cloud": " ", "languages_for_spellout": "List ISO 639 languages", "live_path_summary_v3_for_chartbeat": "Returns summary data (refer to the summary API call), but for top paths of given a host. This call returns real-time data.", "orderlist_for_13": "Retrieves up to 50 orders", "places_for_seeding_data": "Get 100 places", "rulesets_for_spellout": "List of availible rule sets for given language", "using_path_parameters_for_ai_tool_gpt_token_splitter": "limited input text size, limited delimiter quantity.", "video_post_comments_for_tiktok_data": "Get video post comments.", "yesterday_sure_vip_under_3_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers yesterday under 3.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."}, "aseqs": [{"api_name": "languages_for_spellout", "api_action": "\nAction: languages_for_spellout\nAction Input: {}", "api_reaction": null}, {"api_name": "rulesets_for_spellout", "api_action": "\nAction: rulesets_for_spellout\nAction Input: {\n  \"lang\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "languages_for_spellout"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rulesets_for_spellout"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rulesets_for_spellout", "api_action": "\nAction: rulesets_for_spellout\nAction Input: {}", "api_reaction": null}}]}
{"URL": "69752", "query": "I am a sports blogger and I want to provide my readers with the latest matches and odds for Bildbet. Can you assist me in obtaining this information? I would like to cover a variety of sports such as soccer, basketball, and hockey.", "api_names": ["matches_for_bildbet", "odds_for_bildbet", "Finish", "united_states_parks_mobility_for_covid_19_economic_impact", "reverse_geocode_for_cameroon", "channels_for_youtube_v3_lite", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "getcompetitions_for_wosti_futbol_tv_peru", "get_post_likes_for_twitter_v5", "symbols_get_chart_deprecating_for_cnbc", "tunefind_for_details_for_theclique", "search_for_epic_games_store", "bet365_inplay_for_betsapi", "topic_headlines_for_real_time_news_data"], "api_descs": {"Finish": "No description available.", "bet365_inplay_for_betsapi": "bet365 inplay data", "channels_for_youtube_v3_lite": "Get channel details.\nQuota cost is 1.", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days": "get forecast for 14 days for the location Lat/Lon", "get_post_likes_for_twitter_v5": "Get Post Likes By Post ID", "getcompetitions_for_wosti_futbol_tv_peru": "Obtener el listado de competiciones de partidos de fútbol televisados en Perú.\n\n> Este endpoints no requiere de ningún parámetro.", "matches_for_bildbet": "Latest Matches for Bildbet", "odds_for_bildbet": "Latest Odds for Bildbet", "reverse_geocode_for_cameroon": "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude.", "search_for_epic_games_store": "Find games in simple search API endpoint.", "symbols_get_chart_deprecating_for_cnbc": "Get raw data to draw price line chart of stock quote, index, exchange, etc...", "topic_headlines_for_real_time_news_data": "Get the latest news headlines for a topic.", "tunefind_for_details_for_theclique": "Please, enter the slug of artist. For example, taylor-swift or acdc.\nYou can get a slug  by using the TuneFind Search API", "united_states_parks_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at parks."}, "aseqs": [{"api_name": "matches_for_bildbet", "api_action": "\nAction: matches_for_bildbet\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_bildbet", "api_action": "\nAction: odds_for_bildbet\nAction Input: {}", "api_reaction": null}, {"api_name": "matches_for_bildbet", "api_action": "\nAction: matches_for_bildbet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_bildbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_bildbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_bildbet", "api_action": "\nAction: matches_for_bildbet\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_bildbet"}}]}
{"URL": "9484", "query": "I'm organizing a charity event and I need to validate the CPF numbers of the participants. Can you validate the CPF numbers of the following participants: 123.456.789-09, 987.654.321-00, 456.789.123-45? Additionally, please generate a random valid CPF number for a new participant.", "api_names": ["generate_cpf_for_cpf_validator", "validate_cpf_number_for_cpf_validator", "Finish", "video_comment_replies_for_tiktok_v3", "list_of_mops_for_ncaa_final_four", "currency_get_exchange_rates_for_booking", "get_quote_by_character_for_movie_and_tv_shows_quotes", "backorders_for_domain_backorder", "fixtures_and_results_by_team_for_rugby_live_data", "highway_type_for_mymappi", "download_chains_for_priceline_com_provider", "querykeywords_for_keyword_analysis", "retrieve_events_for_opensea_v2", "search_for_sale_for_trulia_real_estate_scraper", "practice_session_results_for_fia_formula_1_championship_statistics", "fetchoneassociationbelongingtoamatch_for_cleardil", "languages_for_lexicala", "v1_airlines_for_airlines_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "backorders_for_domain_backorder": "Get the latest expiring domain names in our pool", "currency_get_exchange_rates_for_booking": "Get currency exchange rates between different countries", "download_chains_for_priceline_com_provider": "Downloads a list of Hotel chains", "fetchoneassociationbelongingtoamatch_for_cleardil": " ", "fixtures_and_results_by_team_for_rugby_live_data": "All fixtures and results for a given team", "generate_cpf_for_cpf_validator": "Generate a random valid CPF number.", "get_quote_by_character_for_movie_and_tv_shows_quotes": "This end point will return back quotes delivered by the given character", "highway_type_for_mymappi": "Given a coordinate, finds the nearest road and determines what type of road it is (motorway, path, primary... etc.)", "languages_for_lexicala": "all supported languages and codes", "list_of_mops_for_ncaa_final_four": "Get a list of every Final Four Most Outstanding Player sorted alphabetically.", "practice_session_results_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about a specific practice session by passing path parameters for **session number**, **year** &  **location**.", "querykeywords_for_keyword_analysis": "Get the **main keywords** for a given search query.", "retrieve_events_for_opensea_v2": "This endpoint provides a list of events that occur on the NFTs that are tracked by OpenSea. The event_type field indicates the type of event (transfer, successful auction, etc) and the results are sorted by event timestamp.\n\nNote that due to block reorganizations, recent events (less than 10 minutes old) may not reflect the final state of the blockchain.", "search_for_sale_for_trulia_real_estate_scraper": "To download data from SALE, you must first generate a Token with Get search token and set search_type=ForSale. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there.", "v1_airlines_for_airlines_by_api_ninjas": "API Ninjas Airlines API endpoint. At least one of the optional parameters must be provided.", "validate_cpf_number_for_cpf_validator": "Checks if a CPF number is valid.", "video_comment_replies_for_tiktok_v3": "get video comment replies"}, "aseqs": [{"api_name": "validate_cpf_number_for_cpf_validator", "api_action": "\nAction: validate_cpf_number_for_cpf_validator\nAction Input: {\n  \"n\": \"12345678909\"\n}", "api_reaction": null}, {"api_name": "validate_cpf_number_for_cpf_validator", "api_action": "\nAction: validate_cpf_number_for_cpf_validator\nAction Input: {\n  \"n\": \"98765432100\"\n}", "api_reaction": null}, {"api_name": "validate_cpf_number_for_cpf_validator", "api_action": "\nAction: validate_cpf_number_for_cpf_validator\nAction Input: {\n  \"n\": \"45678912345\"\n}", "api_reaction": null}, {"api_name": "generate_cpf_for_cpf_validator", "api_action": "\nAction: generate_cpf_for_cpf_validator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "validate_cpf_number_for_cpf_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "validate_cpf_number_for_cpf_validator", "api_action": "\nAction: validate_cpf_number_for_cpf_validator\nAction Input: {\n  \"n\": \"98765432100\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "validate_cpf_number_for_cpf_validator", "api_action": "\nAction: validate_cpf_number_for_cpf_validator\nAction Input: {\n  \"n\": \"45678912345\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"validate_cpf_number_for_cpf_validator\",\n\t\"api_action\": \"\\nAction: validate_cpf_number_for_cpf_validator\\nAction Input: {\\n  \\\"n\\\": \\\"12345678909\\\"\\n}\",\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"validate_cpf_number_for_cpf_validator\",\n\t\"api_action\": \"\\nAction: validate_cpf_number_for_cpf_validator\\nAction Input: {\\n  \\\"n\\\": \\\"12345678909\\\"\\n}\",\n}"}]}
{"URL": "81828", "query": "I want to check the SMS history for my phone number 79034134722 in country 7. Fetch the received messages and include details like the text, service name, my number, and the creation timestamp.", "api_names": ["view_sms_history_for_virtual_number", "Finish", "lists_list_for_verticalresponse", "recent_changes_for_supersaas_online_bookings_and_appointment_scheduling", "live_emergency_aircraft_for_fachaapi", "sanction_data_for_database_on_entities_sanctioned_for_compliance_desc_", "feriados_das_cidades_for_feriados_brasileiros", "getbooksbytitlesearch_for_reading_home_apis", "get_definitions_for_dicolink", "get_relatedproducts_by_productid_siteid_zappos_1_6pm_2_for_zappos_2022", "teamraces_for_motorsportapi", "get_all_available_tags_for_self_help_quotes_for_self_help_quotes"], "api_descs": {"Finish": "No description available.", "feriados_das_cidades_for_feriados_brasileiros": "Retorna os feriados de certa cidade brasileira. Os parâmetros necessários são: 1. Cidade - Nome da cidade sem acentos ou símbolos especiais, com exceção do hífen (\"-\") que deve ser mantido. 2. Estado - Unidade Federativa correspondente à cidade. Usar a sigla e em letra maíuscula. 3. Ano", "get_all_available_tags_for_self_help_quotes_for_self_help_quotes": "List all available tags for the hand-picked self-help quotes", "get_definitions_for_dicolink": "Get definition of a word", "get_relatedproducts_by_productid_siteid_zappos_1_6pm_2_for_zappos_2022": "Get relatedProducts by siteId & productId", "getbooksbytitlesearch_for_reading_home_apis": "Get Paginated List of Books on Title Searched", "lists_list_for_verticalresponse": "", "live_emergency_aircraft_for_fachaapi": "Get live emergency aircraft (Squawk 7500/7600/7700)", "recent_changes_for_supersaas_online_bookings_and_appointment_scheduling": "", "sanction_data_for_database_on_entities_sanctioned_for_compliance_desc_": " ", "teamraces_for_motorsportapi": "Get races for a specific Motorsport team during a stage season.", "view_sms_history_for_virtual_number": "View All received SMS for the given number and country id"}, "aseqs": [{"api_name": "view_sms_history_for_virtual_number", "api_action": "\nAction: view_sms_history_for_virtual_number\nAction Input: {\n  \"number\": \"79034134722\",\n  \"countryid\": \"7\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "view_sms_history_for_virtual_number"}}, {"state": "generated_by_agent", "aseq": {"api_name": "view_sms_history_for_virtual_number", "api_action": "\nAction: view_sms_history_for_virtual_number\nAction Input: {\n  \"number\": \"79034134722\",\n  \"countryid\": \"7\"\n}", "api_reaction": null}}]}
{"URL": "6012", "query": "I want to find tweets that contain the hashtag 'love' and were posted by the user with the username 'justinbieber'. Can you give me these tweets? I'm only interested in tweets that have at least 500 retweets and 200 likes. Please make sure the tweets are in English.", "api_names": ["search_v2_for_twitter", "tweets_by_hashtag_for_twitter", "search_for_twitter", "Finish", "download_track_for_latest_spotify_downloader", "uniquestageimage_for_motorsportapi", "search_products_for_yiwugo_product_data", "v1_verify_for_quick_email_verification", "list_appointments_for_supersaas_online_bookings_and_appointment_scheduling", "v1_rates_today_for_hryvna_today", "get_book_by_name_for_bible_search", "data_sport_for_sports_odds_betapi", "top_match_metrics_for_metrx_factory", "followings_by_username_for_instagram_bulk_profile_scrapper", "competitions_for_zeus_api", "all_for_inventory_and_ecommerce_hosted_and_self_hosted_solution", "authorfinder_for_tomba", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau", "trending_for_top_nft_collections", "year_month_json_for_ny_times_archive_"], "api_descs": {"Finish": "No description available.", "all_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "", "authorfinder_for_tomba": "This API endpoint generates or retrieves the most likely email address from a blog post url.", "competitions_for_zeus_api": "List all available competitions 🏆.", "data_sport_for_sports_odds_betapi": "Data Sport params", "download_track_for_latest_spotify_downloader": "Download a track by passing the details from the fetch track API", "followings_by_username_for_instagram_bulk_profile_scrapper": "Fetch following list\n\nCarry forward nextMaxId to retrieve next batch", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau": "Returns a geocode and a geolookup for a specified address", "get_book_by_name_for_bible_search": "Returns a book of the Bible.", "list_appointments_for_supersaas_online_bookings_and_appointment_scheduling": "it fetches list of appointments between given time range", "search_for_twitter": "-", "search_products_for_yiwugo_product_data": "search products\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "search_v2_for_twitter": "-", "top_match_metrics_for_metrx_factory": "Returns the metrics of matches with top values regarding a certain metric.\n\nThis is the premium endpoint for goal-oriented search of match related figures and is available only for the *Mega* subscription. It allows custom logic for match selection and supports functions used to join metrics. Finding the teams with highest conversion rates or market lines with the highest discrepancies to statistical odds are simple tasks by means of this operation.\n\nFurthermore, it may save you credits in comparison to the *Match Metrics* operation as only a filtered subset will be fetched. By default, the Top-10 upcoming matches are returned. Historical top searches are supported for specific teams and competition stages as well.\n\nNote that testing this endpoint with the *Basic* subscription will result in a 403 HTTP error (Forbidden). Instead, refer to the [docs](https://docs.metrxfactory.io/#get-/match-metrics/top) to learn about the features offered by the endpoint.", "trending_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings/trending", "tweets_by_hashtag_for_twitter": "this returns tweets based on twitter hashtag.\nyou can use cursor input for pagination.", "uniquestageimage_for_motorsportapi": "Get image for a specific Motorsport unique stage.", "v1_rates_today_for_hryvna_today": "Average rates for today", "v1_verify_for_quick_email_verification": "", "year_month_json_for_ny_times_archive_": "Pass in year and month and get back JSON with all articles for that month. The response can be big (~20 megabytes) and contain thousands of articles, depending on the year and month.\n"}, "aseqs": [{"api_name": "tweets_by_hashtag_for_twitter", "api_action": "\nAction: tweets_by_hashtag_for_twitter\nAction Input: {\n  \"hashtag\": \"love\"\n}", "api_reaction": null}, {"api_name": "search_v2_for_twitter", "api_action": "\nAction: search_v2_for_twitter\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_twitter", "api_action": "\nAction: search_for_twitter\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter", "api_action": "{\"hashtag\": \"love\", \"cursor\": \"nextCursor\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter", "api_action": "\nAction: tweets_by_hashtag_for_twitter\nAction Input: {\n  \"hashtag\": \"love\",\n  \"user_query\": \"{\\\"username:\\\\u0022justinbieber\\u0022, \\\"count:\\\\u00225\\u0022\\}\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"tweets_by_hashtag_for_twitter\",\n\t\"api_action\": \"\\nAction: tweets_by_hashtag_for_twitter\\nAction Input: {\\n  \\\"hashtag\\\": \\\"love\\\",\\n  \\\"usernames\\\": [\\n    \\\"justinbieber\\\"\\n  ],\\n  \\\"min_tweet_length\\\": 30,\\n  \\\"max_retweets\\\": 500,\\n  \\\"likes_min_value\\\": 200\\n}\",\n}"}]}
{"URL": "54268", "query": "My company is developing a car comparison website and we require the insurance classes, vehicle name, year of manufacture, power, engine displacement, fuel, HSN, and TSN for the Audi A6. Can you assist us in obtaining this information? Additionally, we would like to know the available models for the manufacturer Audi.", "api_names": ["get_hsn_tsn_for_hsn_tsn", "get_models_for_hsn_tsn", "Finish", "company_search_for_indeed", "content_for_daily_sec_financial_statement_dataset", "news_get_market_update_details_for_schwab", "competitor_small_image_for_allscores", "loginuser_for_erictestpet", "get_username_arena_of_valor_for_id_game_checker", "getinventory_for_team_petstore", "getvideofromuser_for_vimeo", "relatedtopic_for_gtrend", "odds_for_bildbet", "footballersbyclub_for_premier_league_stats", "resorts_for_ski_resorts_and_conditions", "genres_for_web_novel_api", "querykeywords_for_keyword_analysis", "get_collections_for_google_play_api"], "api_descs": {"Finish": "No description available.", "company_search_for_indeed": "Search companies by name.", "competitor_small_image_for_allscores": "Get competitor small image. It generates image/png.", "content_for_daily_sec_financial_statement_dataset": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan", "footballersbyclub_for_premier_league_stats": "Get list of footballers for a given club.", "genres_for_web_novel_api": "Returns all Genres.", "get_collections_for_google_play_api": "Get Collections", "get_hsn_tsn_for_hsn_tsn": "Search for dedicated car. Year is optional. Records are limited by 100 rows.", "get_models_for_hsn_tsn": "Returns all models based on manufacturer.", "get_username_arena_of_valor_for_id_game_checker": "Enter your Arena of Valor ID  in the required parameters", "getinventory_for_team_petstore": "Returns a map of status codes to quantities", "getvideofromuser_for_vimeo": "Get all videos credited to a user (both uploaded and appears).", "loginuser_for_erictestpet": "", "news_get_market_update_details_for_schwab": "Read market update news in details", "odds_for_bildbet": "Latest Odds for Bildbet", "querykeywords_for_keyword_analysis": "Get the **main keywords** for a given search query.", "relatedtopic_for_gtrend": "Get related topic from given query", "resorts_for_ski_resorts_and_conditions": "Paginated list of all resorts"}, "aseqs": [{"api_name": "get_hsn_tsn_for_hsn_tsn", "api_action": "\nAction: get_hsn_tsn_for_hsn_tsn\nAction Input: {\n  \"query\": \"Audi A6\"\n}", "api_reaction": null}, {"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"Audi\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_hsn_tsn_for_hsn_tsn"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_hsn_tsn_for_hsn_tsn"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_hsn_tsn_for_hsn_tsn", "api_action": "\nAction: get_hsn_tsn_for_hsn_tsn\nAction Input: {\n  \"query\": \"Audi A6\"\n}", "api_reaction": null}}]}
{"URL": "56750", "query": "Please retrieve the details of the 'domaine-nc-api' image from the OPT-NC public docker images tool. We're specifically looking for the status, description, star count, pull count, and last updated date. Additionally, provide us with the list of all public Docker images available, including their names, namespaces, repository types, and descriptions.", "api_names": ["Finish", "get_d_tails_image_for_opt_nc_public_docker_images", "get_all_images_for_opt_nc_public_docker_images", "help_page_for_email_existence_validator", "get_app_datasafety_for_google_play_api", "angular_jobs_for_usa_jobs_for_it", "community_post_comments_for_youtube_data", "is_registered_on_whatsapp_for_whatsapp_scraper", "categories_for_moka_news", "get_taboo_words_from_word_for_taboo_api", "constructor_standings_for_formula_1_standings", "get_rich_menu_for_line_messaging"], "api_descs": {"Finish": "No description available.", "angular_jobs_for_usa_jobs_for_it": "Angular Jobs API", "categories_for_moka_news": "get the list of Moka News categories ( important if you want later to get data related to a specific category).", "community_post_comments_for_youtube_data": "community-post-comments", "constructor_standings_for_formula_1_standings": "Get the current season constructor standings.", "get_all_images_for_opt_nc_public_docker_images": "Récupère la liste de toutes les images Docker publiques", "get_app_datasafety_for_google_play_api": "Returns datasafety.", "get_d_tails_image_for_opt_nc_public_docker_images": "Récupérer tous les détails d'une image spécifique.", "get_rich_menu_for_line_messaging": "Gets a rich menu via a rich menu ID.", "get_taboo_words_from_word_for_taboo_api": "Provide your own word and get the taboo words back.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "help_page_for_email_existence_validator": "Provides a simple help to the User", "is_registered_on_whatsapp_for_whatsapp_scraper": "This endpoint returns `true` if the phone is registered on whatsapp."}, "aseqs": [{"api_name": "get_d_tails_image_for_opt_nc_public_docker_images", "api_action": "\nAction: get_d_tails_image_for_opt_nc_public_docker_images\nAction Input: {\n  \"image\": \"domaine-nc-api\"\n}", "api_reaction": null}, {"api_name": "get_all_images_for_opt_nc_public_docker_images", "api_action": "\nAction: get_all_images_for_opt_nc_public_docker_images\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_d_tails_image_for_opt_nc_public_docker_images"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_images_for_opt_nc_public_docker_images"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_d_tails_image_for_opt_nc_public_docker_images"}}]}
{"URL": "17220", "query": "I am planning to move to New York and I need information about the schools in the area. Can you give me the Realtor School List for New York? Moreover, I would like to know the available properties for sale in New York. Please fetch the Realtor Property List for the city.", "api_names": ["realtorschoollist_for_realtor_api_for_real_estate_data", "realtorpropertylist_for_realtor_api_for_real_estate_data", "Finish", "getdocumentmetadata_for_groupdocs_conversion_cloud", "success_quote_for_olato_quotes", "getfileversions_for_groupdocs_translation_cloud", "get_products_for__demo_project", "domain_analysis_for_domain_analysis", "ip_for_ip_geo_location_and_ip_reputation", "drawing_by_date_for_lotto_america", "getstockitem_for_appibase", "label_template_brands_for_print_your_own_labels_and_stickers", "top_posts_by_username_for_reddit", "teams_affiliates_teamids_for_baseball", "list_by_body_part_for_exercisedb"], "api_descs": {"Finish": "No description available.", "domain_analysis_for_domain_analysis": "For a given domain, get analysis ranging from domain length all the way to past sales and number of mentions.", "drawing_by_date_for_lotto_america": "Get the winning Lotto America number set from a specific drawing date.", "get_products_for__demo_project": " ", "getdocumentmetadata_for_groupdocs_conversion_cloud": " ", "getfileversions_for_groupdocs_translation_cloud": " ", "getstockitem_for_appibase": "Get a stock item", "ip_for_ip_geo_location_and_ip_reputation": "Returns all data for the provided IP", "label_template_brands_for_print_your_own_labels_and_stickers": "Returns the list of blank label sheet brands that Ecardify supports to date. If your preferred brand is missing, please let us know.", "list_by_body_part_for_exercisedb": "Fetch exercises by body part", "realtorpropertylist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`", "realtorschoollist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`", "success_quote_for_olato_quotes": "It shows random quotes", "teams_affiliates_teamids_for_baseball": "Query baseball team affiliates by ID", "top_posts_by_username_for_reddit": "Top Posts By Username"}, "aseqs": [{"api_name": "realtorschoollist_for_realtor_api_for_real_estate_data", "api_action": "\nAction: realtorschoollist_for_realtor_api_for_real_estate_data\nAction Input: {\n  \"page\": \"1\",\n  \"city\": \"New York\",\n  \"school_level\": \"\",\n  \"state_code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "realtorpropertylist_for_realtor_api_for_real_estate_data", "api_action": "\nAction: realtorpropertylist_for_realtor_api_for_real_estate_data\nAction Input: {\n  \"offset\": \"0\",\n  \"city\": \"New York\",\n  \"state_code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": [{"action": "Search for Realtor School List for New York"}, {"action": "Request Realtor Property List for New York"}]}, {"state": "generated_by_agent", "aseq": {"api_name": "realtorschoollist_for_realtor_api_for_real_estate_data", "api_action": "\nAction: realtorschoollist_for_realtor_api_for_real_estate_data\nAction Input: {\n  \"page\": \"1\",\n  \"city\": \"New York\",\n  \"school_level\": \"\",\n  \"state_code\": \"NY\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "realtorschoollist_for_realtor_api_for_real_estate_data", "api_action": "\nAction: realtorschoollist_for_realtor_api_for_real_estate_data\nAction Input: {\n  \"page\": \"1\",\n  \"city\": \"New York\",\n  \"school_level\": \"\",\n  \"state_code\": \"NY\"\n}"}}]}
{"URL": "18475", "query": "I am a commodities trader and want to explore different futures contracts available for trading. Can you provide me with a list of all supported assets? Additionally, I would like to see the latest contracts for a specific symbol and month.", "api_names": ["Finish", "latest_contracts_for_symbol_for_futures", "supported_assets_for_futures", "retrieve_user_s_food_preferences_for_bespoke_diet_generator", "user_tweets_for_twitter_v2_v2", "sendethereum_for_chaingateway_io", "getorderbyid_for_erictestpet", "get_by_state_for_cancer_rates_by_usa_state", "teams_list_for_unofficial_cricbuzz", "packages_v2_track_for_trackingmore_v2", "billboard_global_200_year_end_for_billboard_api", "options_chain_for_fancyoptions", "ping_for_viewdns", "recent_exchange_rates_for_currency_conversion_and_exchange_rates", "get_list_for_jobs_from_remoteok", "endpoint_for_get_mood", "custom_dice_for_dice_roll_simulator", "private_endpoint_for_sapling_intelligence"], "api_descs": {"Finish": "No description available.", "billboard_global_200_year_end_for_billboard_api": "Provide the YEAR-END Billboard Global 200 chart information\n\nIf `year` is not supplied, will default to last year.", "custom_dice_for_dice_roll_simulator": "Roll any number of dice with any number of sides.", "endpoint_for_get_mood": "endpoint", "get_by_state_for_cancer_rates_by_usa_state": "Get by state", "get_list_for_jobs_from_remoteok": "Will show you all job posts. Also you can filter it by adding in the end of endpoint ?tags=digital+nomad", "getorderbyid_for_erictestpet": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions", "latest_contracts_for_symbol_for_futures": "This endpoint returns each of the latest futures contracts for a given symbol for the next twelve months.\n\nUse the optional *<month>* parameter to return the latest contract for a given month.", "options_chain_for_fancyoptions": "This endpoint returns the an options chain for a given ticker and expiration date.\n\nDate format.  YYYY-MM-DD", "packages_v2_track_for_trackingmore_v2": "Get tracking information of specific package", "ping_for_viewdns": "Test how long a response from remote system takes to reach the ViewDNS server. Useful for detecting latency issues on network connections.", "private_endpoint_for_sapling_intelligence": "https://api.sapling.ai/", "recent_exchange_rates_for_currency_conversion_and_exchange_rates": "Retrieve the latest exchange rate data. Refresh rate will depend on your subscription: updated every 60 minutes, every 10 minutes or every 60 seconds.", "retrieve_user_s_food_preferences_for_bespoke_diet_generator": "Retrieve the list of all ingredients that will be excluded from user's diets.", "sendethereum_for_chaingateway_io": "Sends ethereum from an address controlled by the account to a specified receiver address.", "supported_assets_for_futures": "This endpoint returns all symbols supported by the * last *and* time-series *endpoint.", "teams_list_for_unofficial_cricbuzz": "List teams", "user_tweets_for_twitter_v2_v2": "User Tweets"}, "aseqs": [{"api_name": "supported_assets_for_futures", "api_action": "\nAction: supported_assets_for_futures\nAction Input: {}", "api_reaction": null}, {"api_name": "supported_assets_for_futures", "api_action": "\nAction: supported_assets_for_futures\nAction Input: {}", "api_reaction": null}, {"api_name": "supported_assets_for_futures", "api_action": "\nAction: supported_assets_for_futures\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_contracts_for_symbol_for_futures", "api_action": "\nAction: latest_contracts_for_symbol_for_futures\nAction Input: {\n  \"symbol\": \"GC\",\n  \"month\": 10\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "supported_assets_for_futures"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_contracts_for_symbol_for_futures"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_contracts_for_symbol_for_futures"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_contracts_for_symbol_for_futures", "api_action": "\nAction: latest_contracts_for_symbol_for_futures\nAction Input: {\"symbol\": \"WTI\", \"month\": \"2023-12\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "supported_assets_for_futures"}}]}
{"URL": "66821", "query": "I need to analyze articles related to artificial intelligence for my research project. Can you assist by extracting the article body and providing a summary for the article available at 'https://time.com/6266679/musk-ai-open-letter/'? If possible, translate the summary into Russian. Please include the article title, author, and publication date as well.", "api_names": ["summarize_for_article_extractor_and_summarizer", "extract_for_article_extractor_and_summarizer", "Finish", "da_laforce_for_giay_tay_nam", "get_movie_images_by_id_for_movies_tv_shows_database", "products_detail_deprecated_for_forever21", "competitor_small_image_for_allscores", "api_assetinfo_for_crypto_and_forex_rates", "price_history_for_drug_info_and_price_history", "udprn_udprn_for_uk_postcode_api", "query_for_all_province_territory_names_for_ca_boundaries_io", "get_transaction_v2_for_chain49"], "api_descs": {"Finish": "No description available.", "api_assetinfo_for_crypto_and_forex_rates": "Information about single asset", "competitor_small_image_for_allscores": "Get competitor small image. It generates image/png.", "da_laforce_for_giay_tay_nam": "Đồ da Laforce là thương hiệu uy tín tại Hà Nội cũng như trên toàn quốc về sản phẩm đồ da như giày, túi, ví, thắt lưng, găng tay.", "extract_for_article_extractor_and_summarizer": "Extract an article body and markdown version of the body.", "get_movie_images_by_id_for_movies_tv_shows_database": "A valid Movie ID (e.g. tt1375666)\nreturn title, id, poster, fanart", "get_transaction_v2_for_chain49": "Get transaction returns \"normalized\" data about transaction, which has the same general structure for all supported coins. It does not return coin specific fields (for example information about Zcash shielded addresses).\n\nA note about the blockTime field:\nfor already mined transaction (confirmations > 0), the field blockTime contains time of the block\nfor transactions in mempool (confirmations == 0), the field contains time when the running instance of Blockbook was first time notified about the transaction. This time may be different in different instances of Blockbook.", "price_history_for_drug_info_and_price_history": "Returns an array of price histories when given a valid drug ID.", "products_detail_deprecated_for_forever21": "Get detail information of product by id", "query_for_all_province_territory_names_for_ca_boundaries_io": "Query for All Province / Territory names", "summarize_for_article_extractor_and_summarizer": "Summarizes the article after extracting it from the specified url.", "udprn_udprn_for_uk_postcode_api": "Gets addresses for given search term."}, "aseqs": [{"api_name": "summarize_for_article_extractor_and_summarizer", "api_action": "\nAction: summarize_for_article_extractor_and_summarizer\nAction Input: {\n  \"url\": \"https://time.com/6266679/musk-ai-open-letter/\",\n  \"lang\": \"ru\",\n  \"length\": 1\n}", "api_reaction": null}, {"api_name": "summarize_for_article_extractor_and_summarizer", "api_action": "\nAction: summarize_for_article_extractor_and_summarizer\nAction Input: {\n  \"url\": \"https://time.com/6266679/musk-ai-open-letter/\",\n  \"length\": 1\n}", "api_reaction": null}, {"api_name": "extract_for_article_extractor_and_summarizer", "api_action": "\nAction: extract_for_article_extractor_and_summarizer\nAction Input: {\n  \"url\": \"https://time.com/6266679/musk-ai-open-letter/\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "summarize_for_article_extractor_and_summarizer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "extract_for_article_extractor_and_summarizer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "extract_for_article_extractor_and_summarizer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "summarize_for_article_extractor_and_summarizer", "api_action": "\nAction: summarize_for_article_extractor_and_summarizer\nAction Input: {\n  \"url\": \"https://time.com/6266679/musk-ai-open-letter/\",\n  \"lang\": \"ru\"\n}", "api_reaction": null}}]}
{"URL": "41892", "query": "My company is looking to analyze the performance of our campaign calls in Upcall. Can you assist us in fetching all the calls made, including their status and time of the call? Furthermore, we would like to retrieve the questions and answers associated with these calls. Please provide us with the necessary API calls to accomplish these tasks.", "api_names": ["Finish", "fetchcalls_for_upcall", "fetchcampaignquestions_for_upcall", "live_histogram_v3_for_chartbeat", "get_monthly_top_100_tv_shows_torrents_for_movie_tv_music_search_and_download", "label_shapes_for_print_your_own_labels_and_stickers", "cards_by_race_for_hearthstone", "protocols_for_defi_data", "user_profile_picture_for_instagram_v13", "get_user_metadata_for_waifu", "gettransactionbyid_for_virtual_accounts_api", "bestbuyproductdata_for_bestbuy_product_data_api", "get_shipping_for_gearbest", "price_for_yahoo_finance", "summery_copy_for_summery", "get_invite_data_for_discord_lookup", "api_v1_for_reverse_ip", "echo_for_simpleecho"], "api_descs": {"Finish": "No description available.", "api_v1_for_reverse_ip": "Reverse IP API", "bestbuyproductdata_for_bestbuy_product_data_api": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)", "cards_by_race_for_hearthstone": "Returns all the cards of a certain race. Example values: Mech, Murloc.", "echo_for_simpleecho": "Send a GET request to the Echo", "fetchcalls_for_upcall": "Get all calls", "fetchcampaignquestions_for_upcall": "Get campaign's questions", "get_invite_data_for_discord_lookup": "Fetches detailed data, including hidden data of invites or vanities", "get_monthly_top_100_tv_shows_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 TV-shows Torrents", "get_shipping_for_gearbest": " ", "get_user_metadata_for_waifu": "Get user metadata", "gettransactionbyid_for_virtual_accounts_api": "To get transaction by unique id.", "label_shapes_for_print_your_own_labels_and_stickers": "List of available label shapes.", "live_histogram_v3_for_chartbeat": "Returns a histogram where field values are summarized within ranges, as specified by breaks. The resulting histogram is returned as a list with one more element than the number of breaks. This call returns real-time data.", "price_for_yahoo_finance": "Returns the Stock Price Information for the symbol passed as parameter\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd\nfor eth try : eth-usd\nfor dogecoin try : doge-usd", "protocols_for_defi_data": "List of protocols along with their tvl", "summery_copy_for_summery": "dahsboard summery", "user_profile_picture_for_instagram_v13": "Get instagram user profile picture by username."}, "aseqs": [{"api_name": "fetchcalls_for_upcall", "api_action": "\nAction: fetchcalls_for_upcall\nAction Input: {}", "api_reaction": null}, {"api_name": "fetchcalls_for_upcall", "api_action": "\nAction: fetchcalls_for_upcall\nAction Input: {}", "api_reaction": null}, {"api_name": "fetchcampaignquestions_for_upcall", "api_action": "\nAction: fetchcampaignquestions_for_upcall\nAction Input: {\n  \"is_id\": 12345\n}", "api_reaction": null}, {"api_name": "fetchcampaignquestions_for_upcall", "api_action": "\nAction: fetchcampaignquestions_for_upcall\nAction Input: {\n  \"is_id\": 12345\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "fetchcalls_for_upcall"}}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to call the fetchcalls_for_upcall API again to get all calls made and their status and time along with another API call to fetch campaign questions using fetchcampaignquestions_for_upcall API,\n\t\"api_name\": \"fetchcalls_for_upcall\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "fetchcalls_for_upcall"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fetchcalls_for_upcall"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fetchcalls_for_upcall"}}]}
{"URL": "11572", "query": "I need the balance sheet, income statement, and cash flow statement for Apple Inc. for the past five years. Can you provide me with this financial information?", "api_names": ["Finish", "cash_flow_statement_for_financial_statements", "income_statement_for_financial_statements", "balance_sheet_statement_for_financial_statements", "get_vessel_photo_for_vessel_data", "get_chain_id_for_token_scanner_multichain_honeypot_checker_multichain", "get_a_language_for_judge0_ce", "skills_search_for_iys_skill_api_", "single_guid_for_guid_generator_tool", "ideapin_download_pinterest_reels_for_pinterest_downloader_download_image_video_and_pinterest_ideapin", "get_product_detail_for_yiwugo_product_data", "availability_for_kayuloweather", "objectexists_for_groupdocs_metadata_cloud", "fun_fact_for_fun_facts", "airports_list_of_airports_for_timetable_lookup_", "get_username_arena_of_valor_for_id_game_checker"], "api_descs": {"Finish": "No description available.", "airports_list_of_airports_for_timetable_lookup_": "Return a list of the airports worldwide", "availability_for_kayuloweather": "Determine the data sets available for the specified location.", "balance_sheet_statement_for_financial_statements": "Get company balance sheet statement by year.\n\nAll numbers in thousands.", "cash_flow_statement_for_financial_statements": "Get company cash flow statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.", "fun_fact_for_fun_facts": "returns radomly generated facts on each all", "get_a_language_for_judge0_ce": "Get a language.", "get_chain_id_for_token_scanner_multichain_honeypot_checker_multichain": "Returns chainId from chain name.", "get_product_detail_for_yiwugo_product_data": "get product detail by item_id,\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "get_username_arena_of_valor_for_id_game_checker": "Enter your Arena of Valor ID  in the required parameters", "get_vessel_photo_for_vessel_data": "Image of vessel based on given ship id.\n*Image might not be display correctly here due to base64 issue of Test Endpoint, but it work indeed.*", "ideapin_download_pinterest_reels_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the ideapins in original hd quality by passing pinterest ideapin address", "income_statement_for_financial_statements": "Get company income statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.", "objectexists_for_groupdocs_metadata_cloud": " ", "single_guid_for_guid_generator_tool": "Endpoint to retrieve a single GUID, returned as a simple string.\nNo parameters required.\nGET only query.\nReturn content-type is text/plain.", "skills_search_for_iys_skill_api_": "Skills Search"}, "aseqs": [{"api_name": "balance_sheet_statement_for_financial_statements", "api_action": "\nAction: balance_sheet_statement_for_financial_statements\nAction Input: {\n  \"ticker\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "income_statement_for_financial_statements", "api_action": "\nAction: income_statement_for_financial_statements\nAction Input: {}", "api_reaction": null}, {"api_name": "cash_flow_statement_for_financial_statements", "api_action": "\nAction: cash_flow_statement_for_financial_statements\nAction Input: {\n  \"ticker\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "balance_sheet_statement_for_financial_statements"}}, {"state": "generated_by_agent", "aseq": {"api_name": "income_statement_for_financial_statements"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cash_flow_statement_for_financial_statements"}}, {"state": "generated_by_agent", "aseq": {"api_name": "income_statement_for_financial_statements"}}]}
{"URL": "58266", "query": "I'm a currency trader and I need to monitor the exchange rates for multiple currencies. Can you provide me with the exchange rates for all currencies? It would be great if the exchange rates are organized by base currency for easier tracking.", "api_names": ["all_exchange_rates_for_ziff", "Finish", "tournament_list_for_handball_data", "user_videos_for_tiktok_scraper_v2", "get_coin_issuance_blockchains_for_coinranking", "career_aptitude_personality_test_questionnaire_for_personality_quest", "v1_sources_for_newscatcher", "currency_converter_with_forecast_and_historical_data_for_forecast_crypto_and_fiat_currency_exchange_rates", "superoffer_for_betsports", "accoungget_for_31events_send_native_calendar_invites"], "api_descs": {"Finish": "No description available.", "accoungget_for_31events_send_native_calendar_invites": "", "all_exchange_rates_for_ziff": "Get all Exchange Rates in alphabetical order; organised by Base Currency (also in alphabetical order).", "career_aptitude_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for Career Aptitude Personality Test.", "currency_converter_with_forecast_and_historical_data_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nAllows to convert currency and shows prediction of exchange rate for currency pairs.\n\n`country_code` - is now optional. API will try first to get cross rate from European Central Bank. If API will found both currencies in another central bank, you will see from which central bank it was taken.\n\nExample: To get CNY to GBP provided by European Central Bank\n`/api/get_cross?currency=cny&currency_cross=gbp`\nor \n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp`\nor from Kazakhstan's CB:\n`/api/get_cross?country_code=kz&currency=cny&currency_cross=gbp`\nOf course cross rates from KZ and EU will be slightly different.\n\nExample 2: If you want to get historical data, add `&history_yyyy_mm_dd=2022-06-21`\n`/api/get_cross?country_code=eu&currency=cny&currency_cross=gbp&history_yyyy_mm_dd=2022-06-21`\n\nExotic example: To get CNY to MDL (Yuan to Moldavian Lei) provided by Kazakhstan CB\n`/api/get_cross?currency=cny&currency_cross=mdl`\n\nParameters:\n1) country_code; 2) currency; 3) currency_cross; 4) optional parameter is `history_yyyy_mm_dd` (example:2022-06-27)' .\nTo get available `country_code` - access `/api/info/countries`\nTo get all currency abbreviations - access `/api/info/currencies` - there you need `code` value which is having  3 capital letters, like USD or CHF\n\nExample 3: If you want get price of Bitcoin in USD use:\n`/api/get_cross?currency=btc&currency_cross=usd`\n...same in GBP with specified `country_code`:\n`/api/get_cross?country_code=bitcoin&currency=btc&currency_cross=gbp`\n\nExample 4: If you want get price of Bitcoin in USD for a day in the past use:\n`/api/get_cross?country_code=bitcoin&history_yyyy_mm_dd=2022-06-27&currency=btc&currency_cross=usd`", "get_coin_issuance_blockchains_for_coinranking": "Get the issuance blockchains on which the coin is issued.\nThis endpoint requires the **ultra** plan or higher.", "superoffer_for_betsports": "superOffer data", "tournament_list_for_handball_data": "List of tournaments in your data coverage.", "user_videos_for_tiktok_scraper_v2": "Get user videos.", "v1_sources_for_newscatcher": "Returns a list of supported news websites for any topic, country, language, or any of those combined"}, "aseqs": [{"api_name": "all_exchange_rates_for_ziff", "api_action": "\nAction: all_exchange_rates_for_ziff\nAction Input: {}", "api_reaction": null}, {"api_name": "all_exchange_rates_for_ziff", "api_action": "\nAction: all_exchange_rates_for_ziff\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_exchange_rates_for_ziff"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_exchange_rates_for_ziff"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_exchange_rates_for_ziff"}}]}
{"URL": "25072", "query": "I'm working on a project that requires voiceover artists who can speak multiple languages. Can you provide me with a list of speakers and their respective languages? It would be great if you could include information about their gender as well.", "api_names": ["list_languages_for_ttskraken", "list_speakers_for_ttskraken", "Finish", "getbreadcrumbnavitem_for_betsports", "indices_for_crypto_market_data_from_token_metrics", "teamplaceholderimage_for_americanfootballapi", "hotel_slug_convert_for_hotels_com_provider", "getbrocoins_for_4bro_1337x", "get_cigar_average_length_for_cigars", "google_news_for_google_search_2", "getrelatedtags_for_vimeo", "search_users_for_tiktok_apis"], "api_descs": {"Finish": "No description available.", "get_cigar_average_length_for_cigars": "Get the average length of cigars, filter supported", "getbreadcrumbnavitem_for_betsports": "GetBreadCrumbNavItem api data", "getbrocoins_for_4bro_1337x": "GetBroCoins", "getrelatedtags_for_vimeo": "Get a list of related tags for a category.", "google_news_for_google_search_2": "Using this API you can get the JSON data of the news results.", "hotel_slug_convert_for_hotels_com_provider": "Get Hotel ID from Hotel Site slug, (https://hotels.com/ho219115) `ho219115` -> `1105156`", "indices_for_crypto_market_data_from_token_metrics": "Get indices data powered by Token Metrics", "list_languages_for_ttskraken": "Get a list of currently supported languages. We are constantly adding more every few weeks.", "list_speakers_for_ttskraken": "List the speakers available and some more information such as the languages they can speak.", "search_users_for_tiktok_apis": "Search user by keyword", "teamplaceholderimage_for_americanfootballapi": "Get the team placeholder image in SVG format."}, "aseqs": [{"api_name": "list_speakers_for_ttskraken", "api_action": "\nAction: list_speakers_for_ttskraken\nAction Input: {}", "api_reaction": null}, {"api_name": "list_languages_for_ttskraken", "api_action": "\nAction: list_languages_for_ttskraken\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_speakers_for_ttskraken"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_speakers_for_ttskraken"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_speakers_for_ttskraken"}}]}
{"URL": "69410", "query": "Hey there! I'm organizing a friendly betting competition among my friends. Can you give me the latest matches and odds for Betway? We want to make our predictions based on the odds. Thanks a lot!", "api_names": ["Finish", "odds_for_betway", "matches_for_betway", "get_bnb_balance_from_specific_network_for_cryptocurrency_balance", "search_results_for_youtube_search_unlimited_", "getstatsbyyear_for_trinidad_covid_19_statistics", "event_summary_for_flashlive_sports", "explore_popular_for_soccerway_feed", "getdiscusage_for_groupdocs_translation_cloud", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson", "direct_geocoding_for_mymappi", "get_amenities_filters_for_airbnb_v2"], "api_descs": {"Finish": "No description available.", "direct_geocoding_for_mymappi": "Translates an address as input into geographic coordinates. If there are multiple possible results, it retrieves the list of possible results ordered by the distance to the provided source coordinate (if any), in ascending order.", "event_summary_for_flashlive_sports": "Get summary of the event by event ID. Incidents of the match", "explore_popular_for_soccerway_feed": "Get popular list", "get_amenities_filters_for_airbnb_v2": "-", "get_bnb_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the BNB balance of an address in a specific network.", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get Postal areas of specific US state in GeoJSON format", "getdiscusage_for_groupdocs_translation_cloud": " ", "getstatsbyyear_for_trinidad_covid_19_statistics": "This endpoint delivers Trinidad & Tobago Covid 19 statistics by year. For a valid response, the beginning year is 2020 and the latest year is the current year.", "matches_for_betway": "Latest Matches for Betway", "odds_for_betway": "Latest Odds for Betway", "search_results_for_youtube_search_unlimited_": "Get Top 22 YouTube Search Results with Video ID, URL, Thumbnail, Title & Duration. No API Key/No Quota Limits"}, "aseqs": [{"api_name": "matches_for_betway", "api_action": "\nAction: matches_for_betway\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_betway", "api_action": "\nAction: odds_for_betway\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betway"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_betway"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betway"}}]}
{"URL": "30730", "query": "I have a case with ID '611c0765e9308692195b8538' and I need to retrieve its details. Additionally, I want to know the details of the tenant with ID '611c02f8ca76ca8550e7ccde'. Can you fetch these details for me?", "api_names": ["get_tenant_for_yardillo", "get_case_by_id_for_yardillo", "Finish", "paginated_for_catbreeddb", "carbonfootprintfromflight_for_carbonfootprint", "marketplace_list_for_amazon_data_v2", "get_billionaires_for_forbes_worlds_billionaires_list", "search_hotel_for_skyscanner_v2", "trending_feed_video_posts_for_social_media_data_tt", "market_get_chart_for_bb_finance", "param1_for_test_v4", "get_all_artistic_directors_for_a_specific_country_for_hautecouture_api", "originals_genres_list_for_webtoon", "filter_prep_time_in_minutes_for_keto_diet", "getall_for_reword_pdf"], "api_descs": {"Finish": "No description available.", "carbonfootprintfromflight_for_carbonfootprint": "Calculate CO2e in Kg from a travel by air.", "filter_prep_time_in_minutes_for_keto_diet": "Gives keto recipes within given range of preparation time.\nprep_time_in_minutes__lt = Less than\nprep_time_in_minutes__gt = Greater than", "get_all_artistic_directors_for_a_specific_country_for_hautecouture_api": "Renders  all artistic directors for a specific country", "get_billionaires_for_forbes_worlds_billionaires_list": "This method can get you full list of Forbes billionaires by year.If you want you can search by name or filtered by country or country of citizenship. This api can get list of people page by page and you can search max 100 limit per one request.", "get_case_by_id_for_yardillo": "Get the case payload by its Id", "get_tenant_for_yardillo": "This API allows you to push data into your own MongoDB Database", "getall_for_reword_pdf": " ", "market_get_chart_for_bb_finance": "Get related data for drawing chart", "marketplace_list_for_amazon_data_v2": "This endpoint lists down the market places we use to fetch data!", "originals_genres_list_for_webtoon": "List genres in originals category", "paginated_for_catbreeddb": "Get all cat breed results in a set of 10 per page.", "param1_for_test_v4": "Param1", "search_hotel_for_skyscanner_v2": "Get and poll hotel room search with prices, filter etc.", "trending_feed_video_posts_for_social_media_data_tt": "Get current trending feed. \n\n- Due to nature of this endpoint the **max_cursor** is not required. Each request can return different data by default\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."}, "aseqs": [{"api_name": "get_case_by_id_for_yardillo", "api_action": "\nAction: get_case_by_id_for_yardillo\nAction Input: {\n  \"is_id\": \"611c0765e9308692195b8538\"\n}", "api_reaction": null}, {"api_name": "get_tenant_for_yardillo", "api_action": "\nAction: get_tenant_for_yardillo\nAction Input: {\n  \"is_id\": \"611c02f8ca76ca8550e7ccde\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_case_by_id_for_yardillo"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_tenant_for_yardillo"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_case_by_id_for_yardillo", "api_action": "\nAction: get_case_by_id_for_yardillo\nAction Input: {\n  \"is_id\": \"611c0765e9308692195b8538\"\n}", "api_reaction": null}}]}
{"URL": "74731", "query": "I'm a content creator and I'm looking for unique ideas to make my videos more interesting. Can you fetch the top shower thought from all frames of time and provide me with a random shower thought from the latest 100 posted on the subreddit? I need some fresh perspectives to captivate my viewers.", "api_names": ["Finish", "random_for_stapi_showerthoughts", "latest_for_stapi_showerthoughts", "top_for_stapi_showerthoughts", "get_individual_source_news_for_german_police_and_crime_news_live", "drawing_by_date_for_cash4life", "marketdata_for_marktdaten_deutschland", "search_products_for_shopeeapi", "get_payment_cards_information_associated_with_a_specific_employee_for_human_resources_api", "chapters_info_for_quran_com", "schools_list_nearby_deprecated_for_realty_in_us", "addressautocomplete_for_woosmap", "datedif_for_date_calculator", "feeds_list_similarities_for_yummly", "get_users_count_for_waifu", "statusforemissionreductiontargetbyurl_for_carbon_management"], "api_descs": {"Finish": "No description available.", "addressautocomplete_for_woosmap": "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings.\n", "chapters_info_for_quran_com": "Get list of chaper info we've in different languages.", "datedif_for_date_calculator": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).", "drawing_by_date_for_cash4life": "Get the winning Cash4Life number set from a specific drawing date.", "feeds_list_similarities_for_yummly": "List similar recipes by name and author", "get_individual_source_news_for_german_police_and_crime_news_live": "This endpoint will return back all news about police, crime, accidents and more like this from germany from a specific news source.", "get_payment_cards_information_associated_with_a_specific_employee_for_human_resources_api": "This endpoint gets all bank payment cards records associated with a specific employee ID that is unique for each employee and displays all cards information in the response.\nFor example:  card number, expiry date, and etc...", "get_users_count_for_waifu": "Get users count", "latest_for_stapi_showerthoughts": "chose a number between 1 to 500 and based on that all the latest showerthoughts on the subReddit will be fetched.\n\nif the number is not specified a total of 100 showerthougts are returned by default.", "marketdata_for_marktdaten_deutschland": "Abruf einer regionalen Prognose des Strompreises.", "random_for_stapi_showerthoughts": "Fetches a random shower thought out of latest 100 posted on the subReddit.", "schools_list_nearby_deprecated_for_realty_in_us": "List schools that are near the property", "search_products_for_shopeeapi": "Search product & Paginate", "statusforemissionreductiontargetbyurl_for_carbon_management": "Get results in details from the task id.", "top_for_stapi_showerthoughts": "this end point will fetch the top shower thought from all frames of time. \n(i.e. now, today,week,month,year,alltime)"}, "aseqs": [{"api_name": "top_for_stapi_showerthoughts", "api_action": "\nAction: top_for_stapi_showerthoughts\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_for_stapi_showerthoughts", "api_action": "\nAction: latest_for_stapi_showerthoughts\nAction Input: {}", "api_reaction": null}, {"api_name": "random_for_stapi_showerthoughts", "api_action": "\nAction: random_for_stapi_showerthoughts\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_for_stapi_showerthoughts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_for_stapi_showerthoughts", "api_action": "\nAction: random_for_stapi_showerthoughts\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_for_stapi_showerthoughts", "api_action": "\nAction: random_for_stapi_showerthoughts\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_for_stapi_showerthoughts"}}]}
{"URL": "30177", "query": "I am planning a road trip across Europe. Can you give me the weather forecasts for different cities in Europe for the next two weeks? I need to know the temperature, wind speed, and precipitation for each city.", "api_names": ["Finish", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "list_of_all_countries_for_weather_forecast_14_days", "list_of_cities_in_one_country_for_weather_forecast_14_days", "pitching_leaders_for_mlb_data", "reverse_geocode_for_ghana_api", "get_all_collections_by_user_for_pulsar", "getrandomword_for_random_chunk_api", "user_tweets_for_twitter_data", "faucets_for_felina_api", "manga_for_anime_manga_and_novels_api", "current_air_quality_for_air_quality", "website_url_qr_code_for_scanova_qr_code", "get_cities_by_country_for_cities_cost_of_living_and_average_prices_api", "get_product_for_my_store", "spac_calendar_for_spachero_spac_database"], "api_descs": {"Finish": "No description available.", "current_air_quality_for_air_quality": "Retrieves current air quality conditions for any location in the world, given a lat/lon.", "faucets_for_felina_api": "Fetchs the balances of tokens in the faucet.", "get_all_collections_by_user_for_pulsar": "Get all collections by user", "get_cities_by_country_for_cities_cost_of_living_and_average_prices_api": "This endpoint will retrieve all the supported cities in a given country.", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days": "get forecast for 14 days for the location Lat/Lon", "get_product_for_my_store": " ", "getrandomword_for_random_chunk_api": "Get random words.", "list_of_all_countries_for_weather_forecast_14_days": "List of all Countries", "list_of_cities_in_one_country_for_weather_forecast_14_days": "List of cities in one Country", "manga_for_anime_manga_and_novels_api": "get manga information", "pitching_leaders_for_mlb_data": "Retrieve n leaders for a given hitting statistic.  This endpoint is best used alongside col_in/col_ex to prune response data. Without, it returns entire player objects.  For best results, include the player’s name, id, and the stat as a starting point.  See: Using col_in & col_ex", "reverse_geocode_for_ghana_api": "This endpoint allows you to perform reverse geocoding in Ghana by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "spac_calendar_for_spachero_spac_database": "Get important SPAC dates such as merger meetings dates, warrant redemption deadlines, definitive agreement dates, unit split (estimate), SPAC deadline (estimate).\n\nAvailable options: merger, split, deadline, redemption", "user_tweets_for_twitter_data": "user-tweets", "website_url_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with a specified URL"}, "aseqs": [{"api_name": "list_of_all_countries_for_weather_forecast_14_days", "api_action": "\nAction: list_of_all_countries_for_weather_forecast_14_days\nAction Input: {}", "api_reaction": null}, {"api_name": "list_of_cities_in_one_country_for_weather_forecast_14_days", "api_action": "\nAction: list_of_cities_in_one_country_for_weather_forecast_14_days\nAction Input: {}", "api_reaction": null}, {"api_name": "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "api_action": "\nAction: get_forecastdata_by_lat_lon_for_weather_forecast_14_days\nAction Input: {\n  \"lat\": 51.5074,\n  \"lon\": -0.1278,\n  \"lang\": \"en\"\n}", "api_reaction": null}, {"api_name": "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "api_action": "\nAction: get_forecastdata_by_lat_lon_for_weather_forecast_14_days\nAction Input: {\n  \"lat\": 48.8566,\n  \"lon\": 2.3522,\n  \"lang\": \"en\"\n}", "api_reaction": null}, {"api_name": "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "api_action": "\nAction: get_forecastdata_by_lat_lon_for_weather_forecast_14_days\nAction Input: {\n  \"lat\": 41.9028,\n  \"lon\": 12.4964,\n  \"lang\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_of_countries_for_weather_forecast_14_days"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_of_cities_in_one_country_for_weather_forecast_14_days"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_forecastdata_by_lat_lon_for_weather_forecast_14_days"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_of_all_countries_for_weather_forecast_14_days"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "api_action": "\nAction: get_forecastdata_by_lat_lon_for_weather_forecast_14_days\nAction Input: {\n  \"lat\": 52.5200,\n  \"lon\": -13.4050,\n  \"lang\": \"en\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_forecastdata_by_lat_lon_for_weather_forecast_14_days"}}]}
{"URL": "64476", "query": "I'm planning a dinner date and I want to find a restaurant in the Wyre area with a good hygiene rating. Can you suggest some options and provide their contact information? Additionally, I would like to know the hygiene rating and address of the Shovels Inn.", "api_names": ["search_restaurants_by_local_authority_for_wyre_data", "get_all_data_on_an_establishment_by_restaurant_for_wyre_data", "Finish", "following_by_pk_for_instagram_pro", "football_season_statistics_for_football_dolphin", "m4_5_earthquakes_past_hour_for_everyearthquake", "home_for_qrcodegenerator", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling", "iso3_for_countries", "get_all_teams_for_aaaa", "get_all_motivational_pictures_for_motivational_content", "endpoint1_for_13f918yf19o1t1f1of1t9", "getchanneldetails_for_youtube_search_v3", "product_details_for_axesso_kaufland_data_service", "get_prices_for_used_gpu_pricing", "us_de_for_us_gas_prices", "similar_to_property_detail_for_uk_real_estate_rightmove", "currencies_for_yoonit"], "api_descs": {"Finish": "No description available.", "currencies_for_yoonit": "Returns a list of all supported currencies", "endpoint1_for_13f918yf19o1t1f1of1t9": "endpoint1", "following_by_pk_for_instagram_pro": "Instagram Following List by PK, Up to 1000 records", "football_season_statistics_for_football_dolphin": "Football season statistics", "get_all_data_on_an_establishment_by_restaurant_for_wyre_data": "Find a Restaurant", "get_all_motivational_pictures_for_motivational_content": "This endpoint fetches all the pictures. However, you can use 'skip' and 'limit' parameters to do pagination.", "get_all_teams_for_aaaa": "Get information about all of the Teams in a specific Organization, including the `name`, `status`, and `description` for each Team. ", "get_prices_for_used_gpu_pricing": "Retrieves used prices of all GPUs, the following prices are in USD.", "getchanneldetails_for_youtube_search_v3": "Fetch detailed information and insights about a specific YouTube channel", "home_for_qrcodegenerator": "Home endtpoint", "iso3_for_countries": "This gets country name on a country. Use ISO3 for country_code.", "m4_5_earthquakes_past_hour_for_everyearthquake": "Magnitude 4.5+ Earthquakes, Past Hour", "product_details_for_axesso_kaufland_data_service": "Query product details information.", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling": "", "search_restaurants_by_local_authority_for_wyre_data": "Find all Restaurants within a Local Authority", "similar_to_property_detail_for_uk_real_estate_rightmove": "Similar to this property for detail", "us_de_for_us_gas_prices": "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."}, "aseqs": [{"api_name": "search_restaurants_by_local_authority_for_wyre_data", "api_action": "\nAction: search_restaurants_by_local_authority_for_wyre_data\nAction Input: {\n  \"localauthority\": \"Wyre\"\n}", "api_reaction": null}, {"api_name": "get_all_data_on_an_establishment_by_restaurant_for_wyre_data", "api_action": "\nAction: get_all_data_on_an_establishment_by_restaurant_for_wyre_data\nAction Input: {\n  \"restaurant\": \"Shovels Inn\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I first need to find restaurants within the Wyre local authority and then determine their hygiene ratings. After that, I will fetch the address of Shovels Inn,\n\t\"api_name\": \"search_restaurants_by_local_authority_for_wyre_data\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_restaurants_by_local_authority_for_wyre_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_restaurants_by_local_authority_for_wyre_data", "api_action": "\nAction: search_restaurants_by_local_authority_for_wyre_data\nAction Input: {\n  \"localauthority\": \"Wyre\"\n}", "api_reaction": null}}]}
{"URL": "79387", "query": "I'm writing an article on athletics scoring tables and I need the complete lists of marks for men and women. Can you provide me with the marks for both genders? Additionally, I'd like to know the marks for 1000 points and 1200 points for women.", "api_names": ["marks_women_for_scoring_tables_api", "marks_men_for_scoring_tables_api", "marks_women_points_for_scoring_tables_api", "Finish", "top_headlines_for_news_api_v2", "get_mempool_transactions_for_litecoin_wallet", "single_strain_for_weed_strain", "membersofateam_for_ishan", "find_places_for_ai_weather_by_meteosource", "video_post_comments_for_tiktok_data", "calendar_for_wayback_machine", "comments_get_for_songmeanings", "get_clips_for_twitch_channel_clips", "get_ip_data_for_ip_to_location_apiip", "get_download_link_for_terabox_downloader", "bearish_harami_for_barpatterns", "get_coins_data_for_mineable_coins", "alerts_alertid_notifications_for_signl4_critical_mobile_alerting", "originals_genres_list_for_webtoon", "getsamples_for_power_bi_smartable"], "api_descs": {"Finish": "No description available.", "alerts_alertid_notifications_for_signl4_critical_mobile_alerting": "Get notifications of all users by alert id.", "bearish_harami_for_barpatterns": "List of stocks having Bearish Harami signal.", "calendar_for_wayback_machine": "Calendar", "comments_get_for_songmeanings": "Get comments from our database for a specific song.", "find_places_for_ai_weather_by_meteosource": "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc.", "get_clips_for_twitch_channel_clips": "Get the latest 50 clips of a channel.", "get_coins_data_for_mineable_coins": "With this endpoint you can get a collection of all coins.\n\n**API alterations**\n- **Get one coin:** https://api.minerstat.com/v2/coins?list=BTC\n- **Get list of coins:** https://api.minerstat.com/v2/coins?list=BTC,BCH,BSV\n- **Get all coins from one algorithm:** https://api.minerstat.com/v2/coins?algo=SHA-256\n- **Get all coins from multiple algorithms:** https://api.minerstat.com/v2/coins?algo=SHA-256,Scrypt,Ethash", "get_download_link_for_terabox_downloader": "Get Download Link", "get_ip_data_for_ip_to_location_apiip": "Detailed information on our website: https://apiip.net/", "get_mempool_transactions_for_litecoin_wallet": "Get Litecoin Transaction ids in the mempool.", "getsamples_for_power_bi_smartable": "Get Power BI samples", "marks_men_for_scoring_tables_api": "This retrieves all men's marks from the World Athletics Scoring Tables.", "marks_women_for_scoring_tables_api": "This retrieves all women's marks from the World Athletics Scoring Tables.", "marks_women_points_for_scoring_tables_api": "This retrieves the women's marks for the point value given as a parameter (0-1400).", "membersofateam_for_ishan": " ", "originals_genres_list_for_webtoon": "List genres in originals category", "single_strain_for_weed_strain": "Provides all details for a single strain by its ID.", "top_headlines_for_news_api_v2": "Endpoint to find top headlines news.", "video_post_comments_for_tiktok_data": "Get video post comments."}, "aseqs": [{"api_name": "marks_women_for_scoring_tables_api", "api_action": "\nAction: marks_women_for_scoring_tables_api\nAction Input: {}", "api_reaction": null}, {"api_name": "marks_men_for_scoring_tables_api", "api_action": "\nAction: marks_men_for_scoring_tables_api\nAction Input: {}", "api_reaction": null}, {"api_name": "marks_women_points_for_scoring_tables_api", "api_action": "\nAction: marks_women_points_for_scoring_tables_api\nAction Input: {\n  \"points\": 1000\n}", "api_reaction": null}, {"api_name": "marks_women_points_for_scoring_tables_api", "api_action": "\nAction: marks_women_points_for_scoring_tables_api\nAction Input: {\n  \"points\": 1200\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"thought\": 'I need to fetch the marks for men and women from scoring tables API.',\n\t\"api_name\": \"marks_men_for_scoring_tables_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_women_points_for_scoring_tables_api", "description": "Get marks for women with specific points (1000, 1200) from the scoring tables API"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_women_points_for_scoring_tables_api", "api_action": "\nAction: marks_women_points_for_scoring_tables_api\nAction Input: {\"points\": 1000}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_women_points_for_scoring_tables_api", "api_action": "\nAction: marks_women_points_for_scoring_tables_api\nAction Input: {\n  \"points\": 1200\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_women_for_scoring_tables_api"}}]}
{"URL": "77979", "query": "I want to know the race details for race ID 53128. Additionally, can you fetch the racecards for today's greyhound races? Please provide me with this information.", "api_names": ["racecards_for_greyhound_racing_uk", "race_detail_info_for_greyhound_racing_uk", "Finish", "get_coverage_for_us_cell_coverage_by_zip_code", "countries_list_for_similar_web", "getpetbyid_for_apfd", "valorant_players_for_valorant", "validate_vat_for_validate_vat", "list_for_flowers", "author_profile_recipes_for_bbc_good_food_api", "getinventory_for_my_api_12345", "global_email_v4_for_global_email_v4"], "api_descs": {"Finish": "No description available.", "author_profile_recipes_for_bbc_good_food_api": "Get author recipes and profile info", "countries_list_for_similar_web": "List countries with meta data", "get_coverage_for_us_cell_coverage_by_zip_code": "Get cell coverage for AT&T, T-Mobile, U.S. Cellular and Verizon by zip code", "getinventory_for_my_api_12345": "Returns a map of status codes to quantities", "getpetbyid_for_apfd": "Returns a single pet", "global_email_v4_for_global_email_v4": "Define Input Fields", "list_for_flowers": "List all flowers", "race_detail_info_for_greyhound_racing_uk": "**Get race detailed info by ID {id_race}.**\n\nYou can get the \"id_race\" from Results or Racecards endpoints", "racecards_for_greyhound_racing_uk": "**Get races list.**\n\n- By default current day.\n- Or by date, setting it by parameter", "validate_vat_for_validate_vat": "“Validate VAT” validates VAT numbers, get company information, including address, returned for each VAT number.", "valorant_players_for_valorant": "This API gets all valorant players"}, "aseqs": [{"api_name": "race_detail_info_for_greyhound_racing_uk", "api_action": "\nAction: race_detail_info_for_greyhound_racing_uk\nAction Input: {\n  \"id_race\": \"53128\"\n}", "api_reaction": null}, {"api_name": "racecards_for_greyhound_racing_uk", "api_action": "\nAction: racecards_for_greyhound_racing_uk\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"api_name\": \"race_detail_info_for_greyhound_racing_uk\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "racecards_for_greyhound_racing_uk"}}, {"state": "generated_by_agent", "aseq": {"api_name": "race_detail_info_for_greyhound_racing_uk", "api_action": "\nAction: race_detail_info_for_greyhound_racing_uk\nAction Input: {\n  \"id_race\": \"53128\"\n}", "api_reaction": null}}]}
{"URL": "38320", "query": "I want to surprise my sister with a gift. Can you search for perfumes on recash and retrieve all available products? Please include the names, prices, discounts, and start dates of the offers. Also, fetch the images of the perfumes to help me choose the best one.", "api_names": ["all_products_for_recash", "Finish", "protocols_for_defi_data", "songs_get_track_listening_count_for_shazam_api", "live_top_pages_v3_for_chartbeat", "etf_expand_list_for_palmy_investing_api", "top_track_by_city_for_shazam", "healthcare_mailing_for_healthcaremailing", "get_detailed_data_for_all_u_s_counties_for_us_counties", "get_show_episodes_for_burning_series_api"], "api_descs": {"Finish": "No description available.", "all_products_for_recash": "This will gives you all the products with codes on the data base", "etf_expand_list_for_palmy_investing_api": "Premium: A list of ETFs with expanded functionality. Here you can view Sectors& Countries.", "get_detailed_data_for_all_u_s_counties_for_us_counties": "counties", "get_show_episodes_for_burning_series_api": "- page url\n- stream urls\n- episode title", "healthcare_mailing_for_healthcaremailing": "Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list.", "live_top_pages_v3_for_chartbeat": "Returns a list of pages, ordered by which ones have most visitors right now. This call returns real-time data.", "protocols_for_defi_data": "List of protocols along with their tvl", "songs_get_track_listening_count_for_shazam_api": "Returns the number of times a particular song has been played", "top_track_by_city_for_shazam": "This endpoint will give the top song in specific city"}, "aseqs": [{"api_name": "all_products_for_recash", "api_action": "\nAction: all_products_for_recash\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_products_for_recash"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"all_products_for_recash\",\n}"}]}
{"URL": "13636", "query": "I want to stay updated on the latest news in the cryptocurrency market. Fetch articles from the 'Crypto News_v2' tool that discuss Bitcoin. Additionally, search for articles containing the keyword 'blockchain'.", "api_names": ["specific_article_keyword_search_for_crypto_news_v2", "get_all_crypto_news_for_crypto_news_v2", "get_individual_news_source_for_crypto_news_v2", "Finish", "prematchform_for_cricketapi2", "get_todo_list_detail_infomation_for_todo_lsit", "view_food_items_by_core_for_ind_nutrient_api", "download_pass_for_passbook", "gbgb_for_fffvfv", "user_timeline_for_twitter_pack_v2", "brands_list_for_zappos", "full_grid_search_for_local_rank_tracker", "provinces_for_canadian_gas_prices", "searchcontent_for_youtube_search_v3", "properties_get_featured_reviews_for_booking", "get_the_awarded_books_of_a_year_for_hapi_books", "fetch_profile_picture_get_free_token_for_whatsapp_scraper", "get_author_information_by_id_for_hapi_books", "retorna_dados_do_endere_o_atrav_s_do_cep_for_cep_brazil", "job_stories_for_yc_hacker_news_official"], "api_descs": {"Finish": "No description available.", "brands_list_for_zappos": "List all brands from Zappos", "download_pass_for_passbook": "", "fetch_profile_picture_get_free_token_for_whatsapp_scraper": "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.\nLearn how to use this endpoint on this [video](https://youtu.be/65eJN7S8sBw).", "full_grid_search_for_local_rank_tracker": "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-down.", "gbgb_for_fffvfv": "bgb", "get_all_crypto_news_for_crypto_news_v2": "This endpoint will return all news with crypto and bitcoin from many different websites across the internet.", "get_author_information_by_id_for_hapi_books": "Get a large variety of information of an Author such as the name, a brief biography, the list of books, and more.", "get_individual_news_source_for_crypto_news_v2": "Get news about crypto from a specific news source. There are 18 news sources to choose from cryptonews, coindesk, crypto.news, yahoo, fxstreet, cointelegraph, businessinsider, cryptopotato, ambcrypto, cryptonewsline, cryptoglobe, coingecko, cryptoslate, bitcoinist, forbes, nulltx, blockonomi, and coinspeaker.", "get_the_awarded_books_of_a_year_for_hapi_books": "Returns the list of the best books of a year by its winning category.\nEach returned book has its Name, Winning Category, Cover Image and more.", "get_todo_list_detail_infomation_for_todo_lsit": "get my todo list detail infomation,include title,content,due", "job_stories_for_yc_hacker_news_official": "Up to 200 of the latest Job HN Stories!", "prematchform_for_cricketapi2": "Get pre-match form information for a specific cricket match.", "properties_get_featured_reviews_for_booking": "Get featured reviews of stayed guests", "provinces_for_canadian_gas_prices": "Returns the average price of gas in all Canadian provinces.", "retorna_dados_do_endere_o_atrav_s_do_cep_for_cep_brazil": "Retorna dados endereço", "searchcontent_for_youtube_search_v3": "The search endpoint allows you to search for videos, playlists, and channels on YouTube.", "specific_article_keyword_search_for_crypto_news_v2": "Takes a title and keyword that will then return any articles from a specific news source.", "user_timeline_for_twitter_pack_v2": "Get tweet timeline by user ID", "view_food_items_by_core_for_ind_nutrient_api": "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)"}, "aseqs": [{"api_name": "get_all_crypto_news_for_crypto_news_v2", "api_action": "\nAction: get_all_crypto_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"crypto.news\",\n  \"searchid\": \"bitcoin\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_source_for_crypto_news_v2", "api_action": "\nAction: get_individual_news_source_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"crypto.news\"\n}", "api_reaction": null}, {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"crypto.news\",\n  \"searchid\": \"blockchain\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n\"title\": \"crypto\",\n\"keyword\": \"blockchain\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"crypto.news\",\n  \"searchid\": \"blockchain\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"crypto.news\",\n  \"searchstr\": \"blockchain\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"crypto.news\",\n  \"searchid\": \"blockchain\"\n}", "api_reaction": null}}]}
{"URL": "17392", "query": "I am developing a website and I need to implement a captcha feature to prevent automated requests. Can you provide me with a calculation captcha, a number captcha with a length of 6, and a string captcha with a length of 4?", "api_names": ["Finish", "number_captcha_for_captcha_v2", "calculation_captcha_for_captcha_v2", "string_captcha_for_captcha_v2", "hijos_for_colegiosantaana", "matchhighlights_for_icehockeyapi", "extend_for_searchhook", "tomorrow_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions", "search_searchterm_for_uncovered_treasure", "get_reservation_by_id_for_limoucloud", "fixture_tree_inplay_sport_sport_id_for_betbro_sportbook", "get_playlist_metadata_for_spotify_scraper", "search_properties_for_adzuna", "is_a_business_free_for_bulk_whatsapp_validator", "news_get_details_for_seeking_alpha", "fetchlatestnav_for_latest_mutual_fund_nav", "upc_api_for_dietagram", "getcompetitions_for_wosti_futbol_tv_peru", "indicator_categories_for_entity_risk", "emailvalidation_for_whois_lookup_v4"], "api_descs": {"Finish": "No description available.", "calculation_captcha_for_captcha_v2": "- Provide info captcha for website to prevent auto request.", "emailvalidation_for_whois_lookup_v4": "Clean your email list database with our free email checker and verifier", "extend_for_searchhook": "Extend expiry of query identified with parameter `queryId` .", "fetchlatestnav_for_latest_mutual_fund_nav": "Fetch Latest NAV", "fixture_tree_inplay_sport_sport_id_for_betbro_sportbook": "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures.\n", "get_playlist_metadata_for_spotify_scraper": "This endpoint fetches full details of a playlist.", "get_reservation_by_id_for_limoucloud": "Get Reservation by ID", "getcompetitions_for_wosti_futbol_tv_peru": "Obtener el listado de competiciones de partidos de fútbol televisados en Perú.\n\n> Este endpoints no requiere de ningún parámetro.", "hijos_for_colegiosantaana": "Listar hijos", "indicator_categories_for_entity_risk": "List the available Sigma indicator categories to filter by.", "is_a_business_free_for_bulk_whatsapp_validator": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nRequests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.", "matchhighlights_for_icehockeyapi": "Get the highlights for a specific Ice Hockey match using the match id.", "news_get_details_for_seeking_alpha": "Get analysis detail by id", "number_captcha_for_captcha_v2": "Captcha code is number format.\n\n- params: length is number (from 1 to  8, default is 6)", "search_properties_for_adzuna": "Search Adzuna properties", "search_searchterm_for_uncovered_treasure": "Search for treasure by term, e.g. \"wisdom\"", "string_captcha_for_captcha_v2": "captcha code is string format.\n\n- params: length is number (from 1 to 8, default is 6)", "tomorrow_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow sure and precise over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.", "upc_api_for_dietagram": "Find food info by UPC (barcode)"}, "aseqs": [{"api_name": "calculation_captcha_for_captcha_v2", "api_action": "\nAction: calculation_captcha_for_captcha_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "number_captcha_for_captcha_v2", "api_action": "\nAction: number_captcha_for_captcha_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "string_captcha_for_captcha_v2", "api_action": "\nAction: string_captcha_for_captcha_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to provide three captchas with the requested parameters, so I will call the calculation_captcha_for_captcha_v2 and two string captcha functions with lengths of 4 and 6 respectively,\n\t\"api_name\": \"calculation_captcha_for_captcha_v2\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "number_captcha_for_captcha_v2", "api_action": "{\"length\": 6}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "string_captcha_for_captcha_v2", "api_action": "\nAction: string_captcha_for_captcha_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "calculation_captcha_for_captcha_v2", "api_action": "\nAction: calculation_captcha_for_captcha_v2\nAction Input: {}", "api_reaction": null}}]}
{"URL": "2729", "query": "I'm a lottery enthusiast and I want to know the most recent draw results for Powerball, Mega Millions, and Fantasy 5. Can you fetch the winning numbers, the jackpot amounts, and the draw dates for each game?", "api_names": ["Finish", "mega_millions_for_ca_lottery", "fantasy_5_recent_for_ca_lottery", "powerball_for_ca_lottery", "get_order_for__onboarding_project", "login_copy_for_mocktwitter", "get_status_cat_image_for_http_status_cats", "get_rentals_for_deal_catcher", "short_code_check_for_instagram_v13", "recipe_by_name_id_for_bbc_good_food_api", "stock_get_financials_for_bb_finance", "top_news_for_google_search_results_scraper", "getassetslist_pro_for_the_apophis", "dashboard_for_miraisoft_training", "get_live_games_for_viperscore", "get_lottery_list_by_date_for_lottery", "user_highlight_detail_for_instagram_v13", "get_channel_livestream_info_for_kick_com_api_kick_api", "gettopsportmenu_for_sport_odds", "get_videos_videoid_chapters_language_for_api_video"], "api_descs": {"Finish": "No description available.", "dashboard_for_miraisoft_training": "dashboard", "fantasy_5_recent_for_ca_lottery": "Most recent draw for Fantasy 5", "get_channel_livestream_info_for_kick_com_api_kick_api": "Get Channel Livestream Info", "get_live_games_for_viperscore": "With \"Get live games\" you'll receive a full list of all live games with their current status and score.", "get_lottery_list_by_date_for_lottery": "Get Lottery List By Date", "get_order_for__onboarding_project": " ", "get_rentals_for_deal_catcher": "Get rentals", "get_status_cat_image_for_http_status_cats": "", "get_videos_videoid_chapters_language_for_api_video": " ", "getassetslist_pro_for_the_apophis": "Retrieve a list of available assets for forecasting", "gettopsportmenu_for_sport_odds": "GetTopSportMenu data api", "login_copy_for_mocktwitter": "login to the user profile", "mega_millions_for_ca_lottery": "Mega Millions History", "powerball_for_ca_lottery": "Powerball History", "recipe_by_name_id_for_bbc_good_food_api": "Get recipe information by recipe name id", "short_code_check_for_instagram_v13": "Instagram shortcode check endpoint", "stock_get_financials_for_bb_finance": "Get financial information of stocks", "top_news_for_google_search_results_scraper": "Returns current top news by region and language as a clean json object.", "user_highlight_detail_for_instagram_v13": "Get instagram user highlight detail by highlight id."}, "aseqs": [{"api_name": "powerball_for_ca_lottery", "api_action": "\nAction: powerball_for_ca_lottery\nAction Input: {}", "api_reaction": null}, {"api_name": "mega_millions_for_ca_lottery", "api_action": "\nAction: mega_millions_for_ca_lottery\nAction Input: {}", "api_reaction": null}, {"api_name": "fantasy_5_recent_for_ca_lottery", "api_action": "\nAction: fantasy_5_recent_for_ca_lottery\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to fetch the most recent draw results for Powerball and Mega Millions using their respective APIs.", "api_name": "powerball_for_ca_lottery"}}, {"state": "generated_by_agent", "aseq": {"api_name": "mega_millions_for_ca_lottery", "api_action": "\nAction: mega_millions_for_ca_lottery\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "fantasy_5_recent_for_ca_lottery", "api_action": "\nAction: fantasy_5_recent_for_ca_lottery\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "powerball_for_ca_lottery"}}]}
{"URL": "81448", "query": "My family and I are huge fans of CS:GO and we want to attend the next tournament in our city. Can you give us information about the upcoming matches, including the teams, location, and date and time? It would be fantastic if you could also provide us with the results of the last 10 matches.", "api_names": ["upcoming_for_csgo_matches_and_tournaments", "played_for_csgo_matches_and_tournaments", "Finish", "geteventexternalinfo_for_sport_odds", "get_addresses_for_address_monitor", "get_nft_transfers_for_user_for_uniblock", "locate_schools_for_real_estate_usa", "get_campaign_lead_from_id_for_fomoapi", "fourth_place_for_ncaa_final_four", "instagram_user_info_for_instagram_v9", "vin_decoder_basic_for_vin_decoder", "embedded_signing_get_role_ids_for_signnow", "summary_detail_for_yh_finance_complete", "full_data_for_question_explorer", "getteams_for_nhl_stats_and_live_data"], "api_descs": {"Finish": "No description available.", "embedded_signing_get_role_ids_for_signnow": "This endpoint returns details of specific document\n\nThe Document object contains:\n\n- Metadata: file name, size, extension, ID;\n- Fields, elements (texts, checks and signatures),\n- Invites, status of the invites,\n- Roles,\n- Timestamps (date created, date updated)\n\nDocument is a fundamental object of every e-signature operation. It’s impossible to send an invite without selecting or [uploading a document](https://docs.signnow.com/docs/signnow/reference/operations/create-a-document) first. In signNow you can add other objects to the document called [fillable fields](https://docs.signnow.com/docs/signnow/branches/v1.2/reference/operations/update-a-document-document-id-adds-fields-to-a-document). When the document is signed, it can be [downloaded in PDF file format](https://docs.signnow.com/docs/signnow/reference/operations/get-a-document-download). Documents in signNow can be [turned into a template](https://docs.signnow.com/docs/signnow/reference/operations/create-a-template). API also allows you to create [event subscriptions](https://docs.signnow.com/docs/signnow/reference/operations/create-a-api-v-2-event) triggered by a specific document.", "fourth_place_for_ncaa_final_four": "Get fourth place team data (only available between 1946 and 1981) for the given year.", "full_data_for_question_explorer": "full data", "get_addresses_for_address_monitor": "Get addresses", "get_campaign_lead_from_id_for_fomoapi": "Get ALL Lead From Your Campaign Social Proof", "get_nft_transfers_for_user_for_uniblock": "Gets NFT transfer records for a specified user.", "geteventexternalinfo_for_sport_odds": "GetEventExternalInfo data api", "getteams_for_nhl_stats_and_live_data": " ", "instagram_user_info_for_instagram_v9": "Get Instagram account information", "locate_schools_for_real_estate_usa": "locate schools", "played_for_csgo_matches_and_tournaments": "Last of played cs:go matches", "summary_detail_for_yh_finance_complete": "This endpoint returns full detail of any public stock", "upcoming_for_csgo_matches_and_tournaments": "Last of upcoming cs:go matches", "vin_decoder_basic_for_vin_decoder": "Get 22 items"}, "aseqs": [{"api_name": "upcoming_for_csgo_matches_and_tournaments", "api_action": "\nAction: upcoming_for_csgo_matches_and_tournaments\nAction Input: {}", "api_reaction": null}, {"api_name": "played_for_csgo_matches_and_tournaments", "api_action": "\nAction: played_for_csgo_matches_and_tournaments\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "upcoming_for_csgo_matches_and_tournaments"}}, {"state": "generated_by_agent", "aseq": {"api_name": "upcoming_for_csgo_matches_and_tournaments"}}, {"state": "generated_by_agent", "aseq": {"api_name": "upcoming_for_csgo_matches_and_tournaments"}}]}
{"URL": "17711", "query": "I'm planning a trip to New York City and I want to explore the top attractions there. Can you provide me with the Google Maps reviews for the Statue of Liberty? Additionally, can you fetch some images and news articles related to the Statue of Liberty?", "api_names": ["google_maps_data_id_for_google_search_2", "google_news_for_google_search_2", "google_maps_reviews_for_google_search_2", "Finish", "google_images_for_google_search_2", "get_category_by_id_for_hadiths_api", "search_accounts_for_tiktok_api", "web_search_for_google_search_results_scraper", "search_text_for_bible_search", "get_rich_menu_for_line_messaging", "get_user_tweets_for_twitter_v5", "fixtures_for_msport", "squadname_for_football_v2", "get_host_language_filters_for_airbnb_v2", "profile_for_rocket_league", "webhooks_for_timedb", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api", "convert_username_to_userid_for_twitter_aio", "convert_for_currencyapi_net", "getbyregistrationnumber_for_agrofitdata"], "api_descs": {"Finish": "No description available.", "convert_for_currencyapi_net": "Convert a custom amount value from one currency to another", "convert_username_to_userid_for_twitter_aio": "You'll need the userId to receive tweets, media and replies.", "fixtures_for_msport": "*  list of future match up to next 7 days\n*  you can retrieve full list of soccer matches up to next 7 days", "get_category_by_id_for_hadiths_api": "Each category have a unique ID. These ID can be used to get the category", "get_host_language_filters_for_airbnb_v2": "-", "get_rich_menu_for_line_messaging": "Gets a rich menu via a rich menu ID.", "get_user_tweets_for_twitter_v5": "Get User Tweets By ID\n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint", "getbyregistrationnumber_for_agrofitdata": " ", "google_images_for_google_search_2": "Using this API you can get the JSON data of the image results.", "google_maps_data_id_for_google_search_2": "Using this API you can get the JSON results of the data ID of a particular place.", "google_maps_reviews_for_google_search_2": "Using this API you can get the JSON data of the review results.", "google_news_for_google_search_2": "Using this API you can get the JSON data of the news results.", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api": "Get list of available telephone numbers for a country and given prefix", "profile_for_rocket_league": "Check a player's profile:\n`rocket-league1.p.rapidapi.com/profile/:player`", "search_accounts_for_tiktok_api": "Return Search Result", "search_text_for_bible_search": "Return all verses from the bible by text parameter.", "squadname_for_football_v2": "Search a squad in a table by its name. You don't need to search for the full name, you can also use some letters or a part of it.", "web_search_for_google_search_results_scraper": "Runs a standard google web search and parses the results returning a clean json object", "webhooks_for_timedb": "Retrieve a list of existing webhooks."}, "aseqs": [{"api_name": "google_maps_data_id_for_google_search_2", "api_action": "\nAction: google_maps_data_id_for_google_search_2\nAction Input: {\n  \"query\": \"Statue of Liberty\"\n}", "api_reaction": null}, {"api_name": "google_maps_reviews_for_google_search_2", "api_action": "\nAction: google_maps_reviews_for_google_search_2\nAction Input: {\n  \"data_id\": \"0x89c25090129c363d:0x40c6a5770d25022b\"\n}", "api_reaction": null}, {"api_name": "google_images_for_google_search_2", "api_action": "\nAction: google_images_for_google_search_2\nAction Input: {\n  \"query\": \"Statue of Liberty\"\n}", "api_reaction": null}, {"api_name": "google_news_for_google_search_2", "api_action": "\nAction: google_news_for_google_search_2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "google_maps_reviews_for_google_search_2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "google_maps_reviews_for_google_search_2", "api_action": "\nAction: google_maps_reviews_for_google_search_2\nAction Input: {\n  \"query\": \"Statue of Liberty\",\n  \"location\": \"New York City\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "google_images_for_google_search_2", "api_action": "\nAction: google_images_for_google_search_2\nAction Input: {\n  \"query\": \"Statue of Liberty\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "google_news_for_google_search_2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "google_maps_reviews_for_google_search_2"}}]}
{"URL": "60618", "query": "I am planning a family trip to watch a football match. Can you provide a list of bookmakers who support sports betting? Additionally, can you give me information about available surebets for the upcoming match? It would be helpful to know the profit and odds offered by different bookmakers. Thank you!", "api_names": ["Finish", "list_for_surebets", "get_bookmakers_for_surebets", "loginuser_for_erictestpet", "tomorrow_for_show_air_dates", "time_series_for_commodity_rates_api", "drawings_between_dates_for_cash4life", "validate_username_for_instagram_v2", "get_fare_for_irctc", "sweden_scheduled_flights_level_for_global_flight_data", "check_index_block_pages_for_advanced_serp_operators", "radical_stroke_number_for_learn_to_read_and_write_japanese_kanji", "subject_for_dcps_project", "get_amazon_product_details_for_basic_amazon_scraper", "getmentions_for_get_twitter_mentions", "simplifybasic_for_mathematical_symbolic_expression_manipulator", "get_a_specific_task_record_for_odesk_apis", "search_b_for_seo_api"], "api_descs": {"Finish": "No description available.", "check_index_block_pages_for_advanced_serp_operators": "Check if Indexed Pages You Thought Were Blocked, are indeed not blocked.", "drawings_between_dates_for_cash4life": "Get all Cash4Life winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date.", "get_a_specific_task_record_for_odesk_apis": "return details on a specific oTask or set of oTasks, this format can be used within a company (:companyid), team (:teamid) or user (:userid)", "get_amazon_product_details_for_basic_amazon_scraper": "GET Product Details: Get all details pertaining to a product ID (ASIN)", "get_bookmakers_for_surebets": "Get a list of all supported bookmakers", "get_fare_for_irctc": "-", "getmentions_for_get_twitter_mentions": "Find your brand, competitor, or any other query mentions across Twitter", "list_for_surebets": "Get all available Surebets", "loginuser_for_erictestpet": "", "radical_stroke_number_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "search_b_for_seo_api": "Perform SEO search for secondary search engine", "simplifybasic_for_mathematical_symbolic_expression_manipulator": " ", "subject_for_dcps_project": "filters data by subject input", "sweden_scheduled_flights_level_for_global_flight_data": "Get weekly Sweden scheduled departing flights level.", "time_series_for_commodity_rates_api": "With this endpoint, you will be provided with daily historical rates between two dates of your choice. \n\nNote: This endpoint has a limitation of 365 days per range, and only can provide one symbol information per request.\n\nAll the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD", "tomorrow_for_show_air_dates": "Shows airing tomorrow", "validate_username_for_instagram_v2": "Instagram Username validation"}, "aseqs": [{"api_name": "get_bookmakers_for_surebets", "api_action": "\nAction: get_bookmakers_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "list_for_surebets", "api_action": "\nAction: list_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "list_for_surebets", "api_action": "\nAction: list_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "list_for_surebets", "api_action": "\nAction: list_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_bookmakers_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_for_surebets", "api_action": "\nAction: list_for_surebets\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_bookmakers_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_bookmakers_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_bookmakers_for_surebets"}}]}
{"URL": "37801", "query": "I am planning a road trip and I need to convert different units for my calculations. Can you provide me with a list of supported units for length, mass, and volume? Additionally, I need to convert the angle from radians to turns for the directions. Please convert 5 radians to turns.", "api_names": ["angle_from_to_number_for_unitconversion", "info_for_unitconversion", "Finish", "all_for_emplois_opt_nc", "registration_fee_for_soti_sync", "fight_for_spectation_sports_events_api", "statusforemissiontable_for_carbon_management", "rental_search_for_tripadvisor", "api_v1_addresses_for_address_validation_nl", "hot_100_for_billboard", "historical_prices_for_finshorts", "youtubesearchresults_for_youtube_search_results"], "api_descs": {"Finish": "No description available.", "all_for_emplois_opt_nc": "L'intégralité des [offres d'emploi](https://office.opt.nc/fr/emploi-et-carriere/postuler-lopt-nc/offres-emploi), sans pagination.", "angle_from_to_number_for_unitconversion": "Angle unit conversions", "api_v1_addresses_for_address_validation_nl": "Get Address", "fight_for_spectation_sports_events_api": "Get a single fight by ID", "historical_prices_for_finshorts": "Finshorts provide companies historical prices in realtime", "hot_100_for_billboard": "Provide the Hot 100 chart information", "info_for_unitconversion": "List all supported units", "registration_fee_for_soti_sync": "Registration Fee", "rental_search_for_tripadvisor": "-", "statusforemissiontable_for_carbon_management": "Get results in details from the task id.", "youtubesearchresults_for_youtube_search_results": "Get all the YouTube Search Results Items and their Information! No limits and no Google API Key needed!"}, "aseqs": [{"api_name": "info_for_unitconversion", "api_action": "\nAction: info_for_unitconversion\nAction Input: {}", "api_reaction": null}, {"api_name": "info_for_unitconversion", "api_action": "\nAction: info_for_unitconversion\nAction Input: {}", "api_reaction": null}, {"api_name": "angle_from_to_number_for_unitconversion", "api_action": "\nAction: angle_from_to_number_for_unitconversion\nAction Input: {\n  \"number\": 5,\n  \"is_from\": \"radian\",\n  \"to\": \"turn\"\n}", "api_reaction": null}, {"api_name": "info_for_unitconversion", "api_action": "\nAction: info_for_unitconversion\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "info_for_unitconversion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "info_for_unitconversion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "info_for_unitconversion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "info_for_unitconversion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "info_for_unitconversion"}}]}
{"URL": "20755", "query": "I am working on a web development project and I need some inspiration. Can you fetch the details of various web projects from the Portfolio tool's 'web' API? I am particularly interested in projects built using React or Angular.", "api_names": ["Finish", "web_for_portfolio", "tweet_retweeters_for_twitter_v2_v2", "bulk_geocoding_for_arcgis_platform_geocoding", "hls_for_twitter", "get_gst_info_filing_data_for_gst_details_filing_data", "webhooklist_for_13", "get_latest_laptop_deals_for_latest_laptop_deals", "global_search_by_query_for_instagram_looter", "consulta_pessoa_for_consulta_cnpj_tempo_real", "send_embed_for_discord_webhook_api", "live_emergency_aircraft_for_fachaapi"], "api_descs": {"Finish": "No description available.", "bulk_geocoding_for_arcgis_platform_geocoding": "Geocode an entire list of addresses in one request using the geocodeAddresses operation. Geocoding many addresses at once is also known as batch or bulk geocoding.\n\n![bulk geocoding](https://developers.arcgis.com/rest/geocode/api-reference/GUID-FD609701-B9B5-49DB-BFD9-A936280A09C6-web.png)\n\n[API reference `geocodeAddresses` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-geocode-addresses.htm)", "consulta_pessoa_for_consulta_cnpj_tempo_real": "Consulta Pessoa", "get_gst_info_filing_data_for_gst_details_filing_data": "Just punch in the GSTIN & get company info & filing data.", "get_latest_laptop_deals_for_latest_laptop_deals": "Get Latest Laptop Deals available right now.", "global_search_by_query_for_instagram_looter": "Global search in **Instagram** by **query**", "hls_for_twitter": "hls => mp4 converter", "live_emergency_aircraft_for_fachaapi": "Get live emergency aircraft (Squawk 7500/7600/7700)", "send_embed_for_discord_webhook_api": "Allows you to send an embed via a webhook. Read the documentation to get this to work.", "tweet_retweeters_for_twitter_v2_v2": "Tweet Retweeters", "web_for_portfolio": "dsada", "webhooklist_for_13": "Retrieves all webhooks"}, "aseqs": [{"api_name": "web_for_portfolio", "api_action": "\nAction: web_for_portfolio\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "web_for_portfolio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_latest_laptop_deals_for_latest_laptop_deals"}}]}
{"URL": "40703", "query": "I'm planning a family gathering and I want to entertain everyone with fascinating Guinness World Records related to push-ups. Can you fetch the record details for the most impressive push-up records, including who achieved them, where and when they took place, and any fun facts or anecdotes about these records?", "api_names": ["get_record_details_for_guinness_world_records_api", "get_records_for_guinness_world_records_api", "Finish", "search_burger_by_there_name_for_burgers_hub", "user_feed_video_posts_for_social_media_data_tt", "search_top_for_twttrapi", "endpoint_a_for_putreq", "posts_for_patreon", "fetch_business_info_for_whatsapp_scraper", "weather_forecast_data_for_visual_crossing_weather", "get_multiple_random_words_for_random_words", "get_campaign_lead_from_id_for_fomoapi"], "api_descs": {"Finish": "No description available.", "endpoint_a_for_putreq": "end", "fetch_business_info_for_whatsapp_scraper": "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account.", "get_campaign_lead_from_id_for_fomoapi": "Get ALL Lead From Your Campaign Social Proof", "get_multiple_random_words_for_random_words": "Get multiple random words (i.e. min 2 and max 20) from a list of 5500+ words\n\nImportant Notes:\n1. *count* must be a valid number between 2 and 20 (both 2 and 20 included)\n2. *wordLength* must not be used with minLength and/or maxLength", "get_record_details_for_guinness_world_records_api": "Get the record details for a given href which will be returned from the \"Get Records\" request\n\n\nReturns details like who/what/where/when and an array of strings indicating the different paragraphs as displayed in guinnessworldrecords.com", "get_records_for_guinness_world_records_api": "Get Guinness World Records for a given term", "posts_for_patreon": "Get posts of a Creator with the `creator_id`. The `cursor` to the next page will be returned with this request.", "search_burger_by_there_name_for_burgers_hub": "Get **Bugers** by searching there **Name**", "search_top_for_twttrapi": "Search top results", "user_feed_video_posts_for_social_media_data_tt": "Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "weather_forecast_data_for_visual_crossing_weather": "Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level."}, "aseqs": [{"api_name": "get_records_for_guinness_world_records_api", "api_action": "\nAction: get_records_for_guinness_world_records_api\nAction Input: {\n  \"term\": \"push-ups\",\n  \"maxresults\": 5\n}", "api_reaction": null}, {"api_name": "get_record_details_for_guinness_world_records_api", "api_action": "\nAction: get_record_details_for_guinness_world_records_api\nAction Input: {\n  \"href\": \"/world-records/82145-most-consecutive-vertical-push-ups\"\n}", "api_reaction": null}, {"api_name": "get_record_details_for_guinness_world_records_api", "api_action": "\nAction: get_record_details_for_guinness_world_records_api\nAction Input: {\n  \"href\": \"/world-records/most-people-performing-push-ups\"\n}", "api_reaction": null}, {"api_name": "get_record_details_for_guinness_world_records_api", "api_action": "\nAction: get_record_details_for_guinness_world_records_api\nAction Input: {\n  \"href\": \"/world-records/670422-most-push-ups-to-planks-in-one-minute\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_record_details_for_guinness_world_records_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_record_details_for_guinness_world_records_api", "Thought": "After fetching the top records for push-ups, the next step is to get the details of each record including who achieved it, where and when they took place, and any fun facts or anecdotes."}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_records_for_guinness_world_records_api", "api_action": "\nAction: get_records_for_guinness_world_records_api\nAction Input: {\n  \"term\": \"push-ups\",\n  \"maxresults\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_record_details_for_guinness_world_records_api", "api_action": "\nAction: get_record_details_for_guinness_world_records_api\nAction Input: {\n  \"href\": \"/world-records/most-consecutive-vertical-push-ups\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_record_details_for_guinness_world_records_api", "api_action": "\nAction: get_record_details_for_guinness_world_records_api\nAction Input: {\n  \"href\": \"/world-records/handstand-push-ups\"\n}", "api_reaction": null}}]}
{"URL": "42903", "query": "My friend is interested in working at Ubisoft. Can you search for job openings at Ubisoft and provide a list of available positions? Also, find the company details for Ubisoft, including their description, sectors, and average rating.", "api_names": ["Finish", "company_jobs_for_indeed", "company_search_for_indeed", "company_details_for_indeed", "yurna_for_yurna", "image_stable_diffusion_for_image_diffusion", "reverse_search_by_image_for_webit_image_search", "v2_get_meta_data_for_hotels", "v1_inflation_for_inflation_by_api_ninjas", "get_colors_for_cigars", "get_car_models_for_infocarsapi", "inside_on_description_for_youtube_classification_api", "user_information_for_opensea_v2", "list_by_body_part_for_exercisedb", "filter_for_conflict_for_east_china_news", "ad_generator_20_head_and_10_desc_1_min_for_adcopy_ai_google_ads_ai_text_generation"], "api_descs": {"Finish": "No description available.", "ad_generator_20_head_and_10_desc_1_min_for_adcopy_ai_google_ads_ai_text_generation": "Get a relevant & Compliant Google Ad, for SEM and PPC marketers, created by SEM Experts. Result includes 10+ ad descriptions &  20+ headlines, and  is based on user inputs as well as A.I. Intelligence based on OpenAI's engine. \n\n**Detailed description:**\nThe Full Ad generator endpoint combines the power of the headlines AI generator with the descriptions AI generator to generator a full set of Google Ad Dynamic Search Ad consisting of 4 descriptions and 15 headlines ( though we provide more so you could pick and choose the best ones ). \n\nThis API endpoint uses advanced prompt engineering to analyze user inputs in the form of URL, subject, and important keywords to create high-quality ad descriptions that are tailored to the product or service being advertised. By leveraging the advanced capabilities of OpenAI's ChatGPT engine, the endpoint is able to deliver top-of-the-line ad descriptions that are optimized for relevance, clarity, and engagement.\n\n**Detailed Technical Documentation:**\nCombined the Descriptions & Headlines generator endpoint of AdCopy AI into a single GET request, with the following query parameters:\n\n**subject:** Required. A string of between 10 and 60 characters, which represents the \"value proposition\" of the product or service being advertised. The user is advised to provide keywords in a comma-delimited format.\n\n**url:** Required. A string that represents the URL of a page that describes the product or service being advertised. The API will fetch the content from the page and extract relevant keywords to help generate quality ads.\n\n**mostImportantKeywords:** Optional. A string of up to 100 characters, representing the most important keywords about the ad group being advertised. The presence of these keywords in the resulting content is not guaranteed.\n\n**language:** Optional. A string that represents the target audience's language in ISO-2 format (e.g. EN, IT, ES, etc.). The field is currently in alpha testing and may not provide results in the requested language.\n\n**country:** Optional. A string that represents the target audience's country in ISO-2 format (e.g. US, CA, IT, etc.). The field is currently in alpha testing and may not provide country-specific content.\n\n**exampleDescriptions:** Optional. A string of at most 200 characters, representing example descriptions that the user may provide to fine-tune the results.\n\n**exampleHeadlines:** Optional. A string of at most 200 characters, representing example headlines that the user may provide to fine-tune the results.\n\nThe endpoint will return at least 10 ad descriptions and at least 20 headlines that are tailored to the product or service being advertised. \n\nThe Headlines & Descriptions will be optimized for relevance, clarity, and engagement, leveraging the advanced capabilities of OpenAI's ChatGPT engine and Significat Prompt Optimization for your specific ad and product  or service requirement.\n\nTry it now, for free.", "company_details_for_indeed": "Crawl information for Indeed's Companies.", "company_jobs_for_indeed": "Search jobs by company.", "company_search_for_indeed": "Search companies by name.", "filter_for_conflict_for_east_china_news": "Filters for conflict in all three regions", "get_car_models_for_infocarsapi": "This endpoint will return back all the models of a respective car maker", "get_colors_for_cigars": "Get Enum of Cigar colors", "image_stable_diffusion_for_image_diffusion": "Most stable and fast diffusion to generate safe image `stuff.`", "inside_on_description_for_youtube_classification_api": "GET Inside on description", "list_by_body_part_for_exercisedb": "Fetch exercises by body part", "reverse_search_by_image_for_webit_image_search": "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint.", "user_information_for_opensea_v2": "Scrape all the HTML information from the NFT asset page without having to use chrome , scrape 10,000  NFTs images, & metadata in under 11min (*using top plan)", "v1_inflation_for_inflation_by_api_ninjas": "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages.", "v2_get_meta_data_for_hotels": "Get locale meta data", "yurna_for_yurna": "Discord bot"}, "aseqs": [{"api_name": "company_search_for_indeed", "api_action": "\nAction: company_search_for_indeed\nAction Input: {\n  \"company_name\": \"Ubisoft\"\n}", "api_reaction": null}, {"api_name": "company_jobs_for_indeed", "api_action": "\nAction: company_jobs_for_indeed\nAction Input: {\n  \"company_id\": \"Ubisoft\"\n}", "api_reaction": null}, {"api_name": "company_details_for_indeed", "api_action": "\nAction: company_details_for_indeed\nAction Input: {\n  \"company_id\": \"Ubisoft\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "company_jobs_for_indeed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "company_jobs_for_indeed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "company_details_for_indeed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "company_jobs_for_indeed"}}]}
{"URL": "32432", "query": "I'm a Cash4Life enthusiast and I want to analyze the winning numbers. Can you provide me with the general statistics and the latest drawing? Additionally, fetch the winning number set from January 5, 2023.", "api_names": ["general_statistics_for_cash4life", "lastest_drawing_for_cash4life", "drawing_by_date_for_cash4life", "Finish", "generate_password_for_password_generator", "hclocal_for_aspose_cells_cloud", "language_list_for_sitedomain", "daily_caloric_needs_for_health_calculator_api", "get_stations_within_1_km_for_ev_charging_stations", "download_verification_results_for_phone_verification", "orgcode_cards_for_test2", "get_list_of_currency_exchanges_copy_copy_for_currencygenie", "get_watches_by_brand_family_model_for_watch_database", "retrieve_uk_postal_district_outline_boundaries_for_uk_boundaries_io", "gettaxratebyzip_for_retrieveustaxrate", "music_info_for_tiktok_scraper_v2", "storageexists_for_aspose_ocr_cloud", "generate_advance_direct_image_for_qr_code_generator", "rental_settings_for_airdna", "independence_per_country_for_africa_api_"], "api_descs": {"Finish": "No description available.", "daily_caloric_needs_for_health_calculator_api": "This endpoint provides a simple and efficient way to calculate daily caloric needs based on various factors such as age, weight, height, activity level, and goal. It offers different formulas or approaches for caloric needs estimation, including the popular Harris-Benedict equation and Mifflin-St. Jeor equation.", "download_verification_results_for_phone_verification": "This endpoint returns the result file to be downloaded.\n\nPass name of file to be downloaded as path param. Result file name is always in format {filename}_output.xlsx Replace {filename} with the name returned from upload file call.\n\nTo download the file with angular follow sample code here\n\nhttps://stackoverflow.com/questions/40240796/angular-2-best-approach-to-use-filesaver-js", "drawing_by_date_for_cash4life": "Get the winning Cash4Life number set from a specific drawing date.", "general_statistics_for_cash4life": "This endpoint pulls basic statistics of the Cash4Life numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, and cashBall) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.", "generate_advance_direct_image_for_qr_code_generator": "Generates a QR code as a direct image with additional settings. (NOTE: doesn't show correctly in RapidAPI)", "generate_password_for_password_generator": "Generate Password", "get_list_of_currency_exchanges_copy_copy_for_currencygenie": "Performs GET request for getting list of currencies", "get_stations_within_1_km_for_ev_charging_stations": "Return nearest charging stations within 1 km radius.", "get_watches_by_brand_family_model_for_watch_database": "Get Watches By Brand Family Model", "gettaxratebyzip_for_retrieveustaxrate": "Retrieve the US tax rate by zip code", "hclocal_for_aspose_cells_cloud": " ", "independence_per_country_for_africa_api_": "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name>", "language_list_for_sitedomain": "系統語系列表", "lastest_drawing_for_cash4life": "Get the latest, and last winning Cash4Life winning number set.", "music_info_for_tiktok_scraper_v2": "Get music info.", "orgcode_cards_for_test2": "Returns a list of cards for the given session. User authentication is required.", "rental_settings_for_airdna": "Returns rental settings.", "retrieve_uk_postal_district_outline_boundaries_for_uk_boundaries_io": "example: Query by \"TW12\" district", "storageexists_for_aspose_ocr_cloud": " "}, "aseqs": [{"api_name": "general_statistics_for_cash4life", "api_action": "\nAction: general_statistics_for_cash4life\nAction Input: {}", "api_reaction": null}, {"api_name": "lastest_drawing_for_cash4life", "api_action": "\nAction: lastest_drawing_for_cash4life\nAction Input: {}", "api_reaction": null}, {"api_name": "drawing_by_date_for_cash4life", "api_action": "\nAction: drawing_by_date_for_cash4life\nAction Input: {\n  \"date\": \"2023-01-05\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "general_statistics_for_cash4life"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_drawing_for_cash4life", "api_action": "\nAction: latest_drawing_for_cash4life\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "drawing_by_date_for_cash4life"}}, {"state": "generated_by_agent", "aseq": {"api_name": "general_statistics_for_cash4life"}}]}
{"URL": "70134", "query": "My friend is interested in investing in cryptocurrencies and wants to check the gas price for sending transactions on the Polygon blockchain. Can you estimate the gas required for a transaction to the wallet address '0xab5801a7d398351b8be11c439e05c5b3259aec9b' on the Polygon blockchain? Also, provide the current gas price on the Ethereum blockchain.", "api_names": ["gas_price_for_webit_blockchain", "estimate_gas_for_webit_blockchain", "Finish", "ohlc_for_investors_exchange_iex_trading", "un_block_number_voice_service_for_2factor_authentication_india", "book_list_and_chapter_counts_api_for_complete_study_bible", "random_usr_copy_for_test", "get_ip_information_for_all_information_about_ip", "sport_leagues_for_pinaculo", "searchcities_for_world_cities_and_countries", "watchlists_index_for_stocktwits", "salvagecheck_for_simple_salvage_vin_check"], "api_descs": {"Finish": "No description available.", "book_list_and_chapter_counts_api_for_complete_study_bible": "Lists all books of the Bible, abbreviations, and chapter counts. Can be used as a reference for a chapter selection screen", "estimate_gas_for_webit_blockchain": "Estimate gas required by send transaction and smart contract method call on multiple blockchains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.", "gas_price_for_webit_blockchain": "Get current gas price with a single API call on multiple chains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.", "get_ip_information_for_all_information_about_ip": "Get IP information", "ohlc_for_investors_exchange_iex_trading": "Returns the official open and close for a give symbol.", "random_usr_copy_for_test": "api/users/random_user", "salvagecheck_for_simple_salvage_vin_check": "Returns true if the VIN was in a salvage database in the past. False otherwise. Must be a valid 17 digit vin from North America.", "searchcities_for_world_cities_and_countries": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.", "sport_leagues_for_pinaculo": "Get sport leagues.", "un_block_number_voice_service_for_2factor_authentication_india": "This endpoint is used to remove number from VOICE Blocklist", "watchlists_index_for_stocktwits": "Returns a list of private watch lists for the authenticating user."}, "aseqs": [{"api_name": "estimate_gas_for_webit_blockchain", "api_action": "\nAction: estimate_gas_for_webit_blockchain\nAction Input: {\n  \"to\": \"0xab5801a7d398351b8be11c439e05c5b3259aec9b\",\n  \"chain\": \"polygon\"\n}", "api_reaction": null}, {"api_name": "gas_price_for_webit_blockchain", "api_action": "\nAction: gas_price_for_webit_blockchain\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gas_price_for_webit_blockchain"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gas_price_for_webit_blockchain"}}, {"state": "generated_by_agent", "aseq": {"api_name": "estimate_gas_for_webit_blockchain", "api_action": "\nAction: estimate_gas_for_webit_blockchain\nAction Input: {\n  \"to\": \"0xab5801a7d398351b8be11c439e05c5b3259aec9b\",\n  \"chain\": \"polygon\"\n}", "api_reaction": null}}]}
{"URL": "26464", "query": "I want to explore the world of sign hexagrams and learn more about their categories. Can you provide me with the list of available categories along with their descriptions and image links? Also, I would like to know the full information of a sign from the 'daojiao' category.", "api_names": ["Finish", "get_categories_for_sign_hexagram", "get_sign_hexagram_for_sign_hexagram", "get_random_user_for_ai_random_user_generator", "team_roster_for_national_football_players", "get_album_metadata_for_spotify_scraper", "categorieslist_onlyforthoseservicekeythatincludethisoption_for_afterbanks_psd2_payments_and_bank_reader", "game_for_game", "getpoints_for_raastaapi", "tips_list_for_tasty", "get_countrywise_city_data_for_mocking_rock_", "events_lineups_for_livescore_sports", "list_available_markets_for_football_prediction", "getarchivereport_for_dl_format_validation", "transform_for_unicode_codepoints", "get_emoji_category_list_for_funny_emojis", "exchange_currency_and_show_thier_countries_for_currency_converter_v5", "team_season_statistics_for_baseball_datafeeds_by_rolling_insights"], "api_descs": {"Finish": "No description available.", "categorieslist_onlyforthoseservicekeythatincludethisoption_for_afterbanks_psd2_payments_and_bank_reader": "Returns a list with all the categories retrieved by Afterbanks own categorizer.", "events_lineups_for_livescore_sports": "Get event lineups form event ID", "exchange_currency_and_show_thier_countries_for_currency_converter_v5": "A simple API that allows you to exchange a specific currency to another, and see in which countries you can use this currency", "game_for_game": "get game", "get_album_metadata_for_spotify_scraper": "This endpoint fetches full details of an album.", "get_categories_for_sign_hexagram": "Return a list of category of sign with description and image link.", "get_countrywise_city_data_for_mocking_rock_": "Use this API to get city list of country. You need to send country name or ISO3 or ISO2 code \nas query to get it. Which you can get it from other API \"Country Codes\"", "get_emoji_category_list_for_funny_emojis": "get emoji category list", "get_random_user_for_ai_random_user_generator": "Get random user", "get_sign_hexagram_for_sign_hexagram": "Return one of the sign with full info by given category.", "getarchivereport_for_dl_format_validation": "Gets Archived DL Report", "getpoints_for_raastaapi": "This will retrieve specific points from the database and return it.", "list_available_markets_for_football_prediction": "List all available markets and the ones that are enabled for your subscription plan", "team_roster_for_national_football_players": "Returns roster of football team. Use team abbreviation when specifying team (i.e. BUF, NE, MIA, etc.). See /teams to get team names and abbreviations", "team_season_statistics_for_baseball_datafeeds_by_rolling_insights": "Returns statistics for teams", "tips_list_for_tasty": "This endpoint is used to load tips (reviews)", "transform_for_unicode_codepoints": "Transform a String, e.g. , to upper-case, NFC, NFD, …"}, "aseqs": [{"api_name": "get_categories_for_sign_hexagram", "api_action": "\nAction: get_categories_for_sign_hexagram\nAction Input: {}", "api_reaction": null}, {"api_name": "get_sign_hexagram_for_sign_hexagram", "api_action": "\nAction: get_sign_hexagram_for_sign_hexagram\nAction Input: {\n  \"category\": \"daojiao\"\n}", "api_reaction": null}, {"api_name": "get_sign_hexagram_for_sign_hexagram", "api_action": "\nAction: get_sign_hexagram_for_sign_hexagram\nAction Input: {\n  \"category\": \"daojiao\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_categories_for_sign_hexagram"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_categories_for_sign_hexagram"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_categories_for_sign_hexagram"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_categories_for_sign_hexagram"}}]}
{"URL": "43286", "query": "I want to know the details of the TV show with the ID 80057281. Can you also provide me with its trailers, seasons, and similar titles?", "api_names": ["title_seasons_for_netflix_v2", "title_similars_for_netflix_v2", "Finish", "title_details_for_netflix_v2", "title_trailers_for_netflix_v2", "getproducts_for_etsy_products_api_allows_you_to_scrape_the_products_from_etsy", "avatar_for_initials_avatar", "webcams_list_webcam_webcamid_webcamid_for_webcams_travel", "timezone_by_id_for_referential", "tourism_allcountries_for_africa_api_", "exchangecurrencies_for_crypto_and_forex_rates", "player_season_statistics_for_baseball_datafeeds_by_rolling_insights", "get_a_product_reviews_for_amazon_scrapper_v4", "stock_balance_sheet_stock_for_mboum_finance", "free_job_postings_api_for_arbeitnow_free_job_board", "get_album_details_for_bandamp_downloader_api", "aeropuerto_for_vuelos", "get_version_for_nsfw", "general_trending_for_tiktok_solutions", "sub_table_names_for_fitness_calculator"], "api_descs": {"Finish": "No description available.", "aeropuerto_for_vuelos": "Location search", "avatar_for_initials_avatar": "Generates initials avatar", "exchangecurrencies_for_crypto_and_forex_rates": "Exchange between two currency ( USD is base ) \nUser can define Buy and Sell Fees also can define withdraw fee in percentage", "free_job_postings_api_for_arbeitnow_free_job_board": "Built in Berlin, Arbeitnow helps companies hire candidates with visa sponsorship / four day work week / remote opportunities.\n\nFour day work weeks - Companies offering better work life balance with a shorter work week results in improved productivity and helps retain candidates. Get your company listed on the [4 day work week jobs](https://arbeitnow.com/4-day-work-week-jobs) page\n\nHiring without Whiteboard - No trivia questions or stress inducing whiteboard interviews? We will include you in our popular section among tech & software developers - [hiring without whiteboard.](https://arbeitnow.com/hiring-without-whiteboard)\n\n[Jobs with Salary / Compensation](https://arbeitnow.com/jobs-with-salary) information helps bring transparency to candidates on what they can expect from an offer.", "general_trending_for_tiktok_solutions": "**Trending videos** General", "get_a_product_reviews_for_amazon_scrapper_v4": "GET a product reviews", "get_album_details_for_bandamp_downloader_api": "Fetch:\n- Album Name\n- 2. Album Description\n- 3. Album Thumbnail URL\n- 4. Artist Name\n- 3. Total Tracks Count\n- 4. Each Track URLs\n- 5. Each Track Names\n- 6. Each Track Durations", "get_version_for_nsfw": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getproducts_for_etsy_products_api_allows_you_to_scrape_the_products_from_etsy": "Get Etsy products", "player_season_statistics_for_baseball_datafeeds_by_rolling_insights": "Returns Player Season Statistics", "stock_balance_sheet_stock_for_mboum_finance": "Get stock balance sheet data.", "sub_table_names_for_fitness_calculator": "Find sub-table names of a table name in the food database.", "timezone_by_id_for_referential": "Lookup a time zone", "title_details_for_netflix_v2": "Title Details", "title_seasons_for_netflix_v2": "Title Seasons", "title_similars_for_netflix_v2": "Title Similars", "title_trailers_for_netflix_v2": "Title Trailers", "tourism_allcountries_for_africa_api_": "Returns best tourism locations and categories you can explore in each country in Africa", "webcams_list_webcam_webcamid_webcamid_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed {webcamid}s. Multiple {webcamid}s must be separated by comma. Required: at least one {webcamid}."}, "aseqs": [{"api_name": "title_details_for_netflix_v2", "api_action": "\nAction: title_details_for_netflix_v2\nAction Input: {\n  \"ids\": \"80057281\"\n}", "api_reaction": null}, {"api_name": "title_trailers_for_netflix_v2", "api_action": "\nAction: title_trailers_for_netflix_v2\nAction Input: {\n  \"is_id\": \"80057281\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "title_seasons_for_netflix_v2", "api_action": "\nAction: title_seasons_for_netflix_v2\nAction Input: {\n  \"ids\": \"80057281\"\n}", "api_reaction": null}, {"api_name": "title_similars_for_netflix_v2", "api_action": "\nAction: title_similars_for_netflix_v2\nAction Input: {\n  \"is_id\": \"80057281\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "title_details_for_netflix_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "title_trailers_for_netflix_v2", "api_action": "\nAction: title_trailers_for_netflix_v2\nAction Input: {\n  \"ids\": \"80057281\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "title_seasons_for_netflix_v2", "api_action": "\nAction: title_seasons_for_netflix_v2\nAction Input: {\n  \"is_id\": \"80057281\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "title_similars_for_netflix_v2", "api_action": "\nAction: title_similars_for_netflix_v2\nAction Input: {\n  \"is_id\": \"80057281\",\n  \"limit\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "title_details_for_netflix_v2", "api_action": "\nAction: title_details_for_netflix_v2\nAction Input: {\n  \"ids\": \"80057281\"\n}", "api_reaction": null}}]}
{"URL": "16370", "query": "I'm organizing a music event and I need to book artists from different labels. Can you give me a list of the top labels from last year? It would be helpful if I could also get the top artists and their songs from the same year. Furthermore, can you suggest some popular songs from the Hot 100 Songs chart?", "api_names": ["top_artists_for_billboard_api", "Finish", "list_by_name_for_exercisedb", "get_airport_details_for_travel_hacking_tool", "trending_for_youtube_v3_alternative", "downloadfile_for_aspose_tasks_cloud", "random_quickpick_for_play_for_cash4life", "genre_for_deezer", "resetpassword_for_mybooky_demo", "get_distance_in_km_for_great_circle_math_api"], "api_descs": {"Finish": "No description available.", "downloadfile_for_aspose_tasks_cloud": " ", "genre_for_deezer": "A genre object", "get_airport_details_for_travel_hacking_tool": "This endpoint returns the details such as name and location for a specified IATA airport.", "get_distance_in_km_for_great_circle_math_api": "Returns circle math distance in kilometers.", "list_by_name_for_exercisedb": "Fetch exercise by name", "random_quickpick_for_play_for_cash4life": "Get a quickpick number for the Cash4Life drawing.", "resetpassword_for_mybooky_demo": " ", "top_artists_for_billboard_api": "Provide the YEAR-END Top Artists chart information\n\nIf `year` is not supplied, will default to last year.", "trending_for_youtube_v3_alternative": "Get trending videos of the particular geo"}, "aseqs": [{"api_name": "top_artists_for_billboard_api", "api_action": "\nAction: top_artists_for_billboard_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_artists_for_billboard_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_artists_for_billboard_api", "api_action": "{\"year\": \"last\"}", "api_reaction": null}}]}
{"URL": "82179", "query": "I'm a social media manager and need to analyze the Instagram profiles of our competitors. Can you help me gather information about their follower count, media count, and following count? Additionally, I would like to see their info, publications, and stories to understand their content strategy and engagement.", "api_names": ["search_for_ig_private_api", "Finish", "highlights_for_ig_private_api", "info_for_ig_private_api", "stories_for_ig_private_api", "publications_for_ig_private_api", "get_employees_for_hris", "tournament_list_for_ice_hockey_data", "cards_by_faction_for_hearthstone", "get_date_and_time_by_city_for_location_and_time", "place_detail_api_for_complete_study_bible", "get_all_lotto_america_drawings_for_lotto_america", "news_get_details_for_seeking_alpha", "languages_for_geodb_cities", "stays_properties_detail_policies_for_booking_com_v2", "trends_for_youtube_music_api_detailed_", "i18nlanguages_for_youtube_v3_v3", "get_cities_for_gis_engine", "getalltech_for_runs_tech", "hourlyweather_for_history"], "api_descs": {"Finish": "No description available.", "cards_by_faction_for_hearthstone": "Returns all the cards of a certain faction. Example values: Horde, Neutral.", "get_all_lotto_america_drawings_for_lotto_america": "Get all winning drawings from Lotto America.", "get_cities_for_gis_engine": "Get cities by providing the country code and region code\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint", "get_date_and_time_by_city_for_location_and_time": "Get current date and time for specified city, fuzzy search is supported. **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/datetime/bylocation` endpoint instead.", "get_employees_for_hris": "Get Employees for a specific customer", "getalltech_for_runs_tech": "returns a list of all of the technology that runs.tech can find", "highlights_for_ig_private_api": "Highlights", "hourlyweather_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (latitude and longitude)", "i18nlanguages_for_youtube_v3_v3": "Returns a list of application languages that the YouTube website supports.", "info_for_ig_private_api": "Info", "languages_for_geodb_cities": "Get all supported languages", "news_get_details_for_seeking_alpha": "Get analysis detail by id", "place_detail_api_for_complete_study_bible": "Used in conjunction with Chapter and Verse API. Whenever a city/region/location is mentioned in a verse, the Chapter and Verse API provides a unique ID for the location that is mentioned. This unique ID is more reliable than searching for a place \"name\", because place names and spellings can change, especially from OT to NT. By using the Place ID's provided with the Chapter and Verse API, you can call the Place API to fetch more detail on each place, which returns a name, location, and data from the Encyclopedia of the Bible (when available).\n\nLat / Longs are included with each place as well, so if you want to use a mapping API (leafletJS, MapBox, etc), you can display real-world locations for every place.\n\nEncyclopedia of the Bible data is provided in html form, display as raw html and apply CSS as desired", "publications_for_ig_private_api": "Publications", "search_for_ig_private_api": "Search", "stays_properties_detail_policies_for_booking_com_v2": "Get detail policies", "stories_for_ig_private_api": "Stories", "tournament_list_for_ice_hockey_data": "List of tournaments in your data coverage.", "trends_for_youtube_music_api_detailed_": "Get latest charts data from YouTube Music: Top songs, top videos, top artists and top trending videos. Global charts have no Trending section, US charts have an extra Genres section with some Genre charts."}, "aseqs": [{"api_name": "search_for_ig_private_api", "api_action": "\nAction: search_for_ig_private_api\nAction Input: {}", "api_reaction": null}, {"api_name": "info_for_ig_private_api", "api_action": "\nAction: info_for_ig_private_api\nAction Input: {}", "api_reaction": null}, {"api_name": "publications_for_ig_private_api", "api_action": "\nAction: publications_for_ig_private_api\nAction Input: {}", "api_reaction": null}, {"api_name": "stories_for_ig_private_api", "api_action": "\nAction: stories_for_ig_private_api\nAction Input: {}", "api_reaction": null}, {"api_name": "highlights_for_ig_private_api", "api_action": "\nAction: highlights_for_ig_private_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_ig_private_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_ig_private_api", "api_action": "\nAction: search_for_ig_private_api\nAction Input: {\n  \"query\": \"latest posts from competitors\",\n  \"tool_ids\": []\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_ig_private_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_ig_private_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_ig_private_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_ig_private_api"}}]}
{"URL": "41668", "query": "My friend is developing a phone number validation tool for their project. They need an API that can verify if a given phone number is valid and provide its country ISO code. Additionally, they require the phone number type and format for further processing. Can you recommend an API that fulfills these requirements?", "api_names": ["Finish", "type_analysis_get_comparables_for_morning_star", "united_states_away_from_home_mobility_for_covid_19_economic_impact", "departures_for_irail", "2_mensagens_do_chat_chat_message_for_compras_net_api", "get_major_global_indices_by_technical_for_global_stock_market_api_data"], "api_descs": {"2_mensagens_do_chat_chat_message_for_compras_net_api": "Chat", "Finish": "No description available.", "departures_for_irail": "Departures of trains in Belgium", "get_major_global_indices_by_technical_for_global_stock_market_api_data": "World financial market to get major global Indices with respect to technical", "type_analysis_get_comparables_for_morning_star": "Get Morningstar's analysis comparables related to an ETF or FUND", "united_states_away_from_home_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent away from home."}, "aseqs": [{"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "2_mensagens_do_chat_chat_message_for_compras_net_api"}}]}
{"URL": "74671", "query": "I'm an art collector and I want to stay updated with the latest art events. Can you provide me with a daily summary of ongoing art events in my city? Additionally, include information about any new art gallery openings or exhibitions.", "api_names": ["pixelstix_meta_for_pixelstix", "Finish", "market_undervalued_large_caps_for_mboum_finance", "offers_for_price_comparison", "qrdecoder_for_qr_decoder", "matches_for_bet_at_home", "get_equations_for_physical_quantities_constants_and_equations_", "search_express_multi_contract_for_priceline_com_provider", "best_stories_for_yc_hacker_news_official", "get_book_information_by_book_id_for_hapi_books", "categories_for_ikea_api", "extend_for_searchhook"], "api_descs": {"Finish": "No description available.", "best_stories_for_yc_hacker_news_official": "Returns up to the current best 500 stories.", "categories_for_ikea_api": "Obtain a list of all categories available in a specified country.", "extend_for_searchhook": "Extend expiry of query identified with parameter `queryId` .", "get_book_information_by_book_id_for_hapi_books": "Giving its Id, this endpoint returns a lot of information about that book, such as Name, Published Date, Authors, Synopsis, and many more.", "get_equations_for_physical_quantities_constants_and_equations_": "This endpoint return back data of equations formatted as JSON", "market_undervalued_large_caps_for_mboum_finance": "Large cap stocks that are potentially undervalued.", "matches_for_bet_at_home": "Latest matches by Bet-at-Home", "offers_for_price_comparison": "list offers for the product", "pixelstix_meta_for_pixelstix": "This endpoint will retrieve the meta information for a given PixelStix code and any Maps/Galleries it may be associated with if the PixelStix is of type 'PREMIUM'", "qrdecoder_for_qr_decoder": "Returns the QRCode message from an image or PDF file with embeded QR codes.\n\nFiles must be publicly accessible via the web and the src input parm expects a direct link to the file.  Html pages with embeded images or pdfs are not valid and will return empty.", "search_express_multi_contract_for_priceline_com_provider": "Provides hotel and multiple rates information per hotel using the getExpress.MultiContract endpoint."}, "aseqs": [{"api_name": "pixelstix_meta_for_pixelstix", "api_action": "\nAction: pixelstix_meta_for_pixelstix\nAction Input: {\n  \"pixelstix_code\": \"latest_art_events_in_my_city\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "best_stories_for_yc_hacker_news_official"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pixelstix_meta_for_pixelstix"}}]}
{"URL": "76017", "query": "As a researcher, I'm studying the phone number formats and area codes for different countries. Can you provide me with the international country calling code and local area code information for Brazil? Additionally, fetch the flag image for Japan to include in my presentation. Thanks!", "api_names": ["directory_for_phone", "flag_for_phone", "Finish", "area_code_for_phone", "iso_for_phone", "flights_get_more_info_for_flight_radar", "leagues_for_soccer_app", "getusersreservation_for_mybooky_demo", "category_for_asin_data", "quotes_city_correo_argentino_weight_stateisocodesrc_normalizecitynamesrc_stateisocodedst_normalizecitynamedst_for_transportistas_de_argentina", "get_battle_item_recipes_for_lost_ark_simple", "api_ns_domain_for_dns_lookup", "get_districts_for_gis_engine", "list_speakers_for_ttskraken", "seasonal_statistics_quarter_analysis_for_basketball_data", "tokens_for_tokenlist", "v1_reversegeocoding_for_geocoding_by_api_ninjas", "query_divesites_by_a_country_or_a_region_for_world_scuba_diving_sites_api", "get_order_book_for_bybit", "list_position_for_each_crypto_for_crypto_grana"], "api_descs": {"Finish": "No description available.", "api_ns_domain_for_dns_lookup": "Sample request:\r\nGET /api/ns/oxog.net", "area_code_for_phone": "Get the International Country Calling Code and the Local Area Code information", "category_for_asin_data": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results for an Amazon category. Categories can be specified either via passing an Amazon category URL in to the url parameter, or by passing a Category ID in the `category_id` and an Amazon domain in the `amazon_domain` parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nCategory results are retrieved from the category listing page on Amazon.", "directory_for_phone": "Get all the Local Area Codes from a given Country", "flag_for_phone": "Get the Flag Image from a given Country", "flights_get_more_info_for_flight_radar": "Get more information of specific aircraft, flight, airline, etc...", "get_battle_item_recipes_for_lost_ark_simple": "Get List of Lost Ark Battle Item Recipes", "get_districts_for_gis_engine": "Get districts by providing the country code, region code and city number\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint\n- city_num can be fetch from the Get Cities endpoint", "get_order_book_for_bybit": "Get the orderbook. Each side has a depth of 25.\nEnable 500 orders for orderbook API.", "getusersreservation_for_mybooky_demo": " ", "iso_for_phone": "Get the ISO codes from a given Country", "leagues_for_soccer_app": "League Matches 2020", "list_position_for_each_crypto_for_crypto_grana": "List your current position for each crypto", "list_speakers_for_ttskraken": "List the speakers available and some more information such as the languages they can speak.", "query_divesites_by_a_country_or_a_region_for_world_scuba_diving_sites_api": "The endpoint returns a json list of dive sites which match the region or country entered as the query. The range of results depend but there is usually around 100-500 sites for each country. There are around 15'000 dive sites listed in the database.", "quotes_city_correo_argentino_weight_stateisocodesrc_normalizecitynamesrc_stateisocodedst_normalizecitynamedst_for_transportistas_de_argentina": "List of quote for iso state and city keyword name in Correo Argentino.", "seasonal_statistics_quarter_analysis_for_basketball_data": "Provides the seasonal quater analysis and statistics of the team in the tournament.", "tokens_for_tokenlist": "tokens list and contract based on network parameter.", "v1_reversegeocoding_for_geocoding_by_api_ninjas": "API Ninjas Reverse Geocoding API endpoint."}, "aseqs": [{"api_name": "area_code_for_phone", "api_action": "\nAction: area_code_for_phone\nAction Input: {\n  \"country\": \"Brazil\",\n  \"region\": \"\"\n}", "api_reaction": null}, {"api_name": "flag_for_phone", "api_action": "\nAction: flag_for_phone\nAction Input: {\n  \"country\": \"Japan\"\n}", "api_reaction": null}, {"api_name": "iso_for_phone", "api_action": "\nAction: iso_for_phone\nAction Input: {\n  \"country\": \"Brazil\"\n}", "api_reaction": null}, {"api_name": "directory_for_phone", "api_action": "\nAction: directory_for_phone\nAction Input: {\n  \"country\": \"Brazil\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get the international country calling code and local area code information for Brazil using the area_code_for_phone API, and then fetch the flag image for Japan using the flag_for_phone API.\n\t\"api_name\": \"area_code_for_phone\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "flag_for_phone", "api_action": "\nAction: flag_for_phone\nAction Input: {\n  \"country\": \"Japan\",\n  \"region\": \"\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "area_code_for_phone", "api_action": "\nAction: area_code_for_phone\nAction Input: {\n  \"country\": \"Brazil\",\n  \"region\": \"\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "area_code_for_phone", "api_action": "\nAction: area_code_for_phone\nAction Input: {\n  \"country\": \"Brazil\",\n  \"region\": \"\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "area_code_for_phone", "api_action": "\nAction: area_code_for_phone\nAction Input: {\n  \"country\": \"Brazil\",\n  \"region\": \"\"\n}", "api_reaction": null}}]}
{"URL": "72178", "query": "I'm a teacher planning an astronomy lesson for my students. Can you provide me with the predict feature forecast for the next 7 days? I also need the 3-day forecast for seeing value and transparency every 3 hours. Please use the latitude '34.0522' and longitude '-118.2437' for the forecasts.", "api_names": ["predict_feature_forecast_7_day_for_ouranos", "7_day_forecast_for_ouranos", "Finish", "48_hour_forecast_for_ouranos", "planet_currently_visible_for_ouranos", "movie_details_for_list_movies_v3", "get_entire_surah_chapter_for_al_quran", "retrieve_rewards_for_blur", "details_for_price_comparison", "products_list_deprecated_for_target", "stock_getoverview_for_stock_api", "primeira_liga_standings_for_primeira_liga_standings", "properties_list_by_map_for_booking", "get_definitions_for_dicolink", "tanggal_for_masehi_ke_hijriyah", "nearest_place_for_ai_weather_by_meteosource", "uuidv3_generator_for_uuid_generator", "get_categories_by_collection_for_hadiths_api", "tweet_user_favoriters_continuation_for_twitter", "full_grid_search_for_local_rank_tracker"], "api_descs": {"48_hour_forecast_for_ouranos": "Hourly Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 48 hours.", "7_day_forecast_for_ouranos": "7 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 7 day every 3 hours", "Finish": "No description available.", "details_for_price_comparison": "get details on the product", "full_grid_search_for_local_rank_tracker": "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-down.", "get_categories_by_collection_for_hadiths_api": "Each collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the categories by their specific collections.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste.", "get_definitions_for_dicolink": "Get definition of a word", "get_entire_surah_chapter_for_al_quran": "Possible values: ***1-114*** \nResponds with entire Surah/Chapter of the Koran including all verses in the Surah and some additional information.", "movie_details_for_list_movies_v3": "Returns the information about a specific movie", "nearest_place_for_ai_weather_by_meteosource": "Use this endpoint to search for the **nearest named place** (village/town/city) from a given GPS coordinates. You will get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information**.\n\n*Note: If you specify coordinates of a secluded place (e.g. middle of the ocean), the nearest point can be very far from the coordinates.*", "planet_currently_visible_for_ouranos": "Planet currently visible", "predict_feature_forecast_7_day_for_ouranos": "Predict Forecast returns \n- Binary predict value, 1 if it’s a good night to observe and 0 if it’s not. This value is calculated according to the forecast for the night.\n- Rating, score out of 5.\n- Tips for astronomers based on the forecast.", "primeira_liga_standings_for_primeira_liga_standings": "Primeira Liga Standings", "products_list_deprecated_for_target": "List products in specific store with options and filters", "properties_list_by_map_for_booking": "List properties by coordinate of bounding box", "retrieve_rewards_for_blur": "This endpoint is used to retrieve if bid rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "stock_getoverview_for_stock_api": "Get the Stock Overview information.", "tanggal_for_masehi_ke_hijriyah": "isi tanggal", "tweet_user_favoriters_continuation_for_twitter": "This endpoint returns the next list of user who favorited the tweet", "uuidv3_generator_for_uuid_generator": "UUIDv3 generator"}, "aseqs": [{"api_name": "predict_feature_forecast_7_day_for_ouranos", "api_action": "\nAction: predict_feature_forecast_7_day_for_ouranos\nAction Input: {}", "api_reaction": null}, {"api_name": "7_day_forecast_for_ouranos", "api_action": "\nAction: 7_day_forecast_for_ouranos\nAction Input: {\n  \"lat\": \"34.0522\",\n  \"long\": \"-118.2437\"\n}", "api_reaction": null}, {"api_name": "planet_currently_visible_for_ouranos", "api_action": "\nAction: planet_currently_visible_for_ouranos\nAction Input: {\n  \"lat\": \"34.0522\",\n  \"long\": \"-118.2437\"\n}", "api_reaction": null}, {"api_name": "48_hour_forecast_for_ouranos", "api_action": "\nAction: 48_hour_forecast_for_ouranos\nAction Input: {\n  \"lat\": \"34.0522\",\n  \"long\": \"-118.2437\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "predict_feature_forecast_7_day_for_ouranos"}}, {"state": "generated_by_agent", "aseq": {"api_name": "predict_feature_forecast_7_day_for_ouranos", "api_action": "\nAction: predict_feature_forecast_7_day_for_ouranos\nAction Input: {\n  \"latitude\": 34.0522,\n  \"longitude\": -118.2437\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "predict_feature_forecast_7_day_for_ouranos"}}, {"state": "generated_by_agent", "aseq": {"api_name": "predict_feature_forecast_7_day_for_ouranos"}}, {"state": "generated_by_agent", "aseq": {"api_name": "predict_feature_forecast_7_day_for_ouranos"}}]}
{"URL": "86784", "query": "I'm looking for a reliable advertising tool to help me optimize my ad campaigns. I want to achieve better results and increase my ROI. Can you recommend any features or APIs that can assist me in achieving my goals? Your expertise would be greatly appreciated.", "api_names": ["Finish", "get_post_for_kwai", "latest_rates_for_currency_converter_pro", "get_airline_data_for_brazilian_airlines_real_flights_data", "catalog_albums_for_billboard_api_v2"], "api_descs": {"Finish": "No description available.", "catalog_albums_for_billboard_api_v2": "Billboard U.S. Afrobeats Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week", "get_airline_data_for_brazilian_airlines_real_flights_data": "In this endpoint you get all data about real flights of airline. Including detailed information like flight plan routes and remarks", "get_post_for_kwai": "Get Post API", "latest_rates_for_currency_converter_pro": "Real-time exchange rate data of 170 world currencies. Updated every 10min."}, "aseqs": [{"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "GetAdvertisingToolsApi"}}]}
{"URL": "6161", "query": "Get all stories of an Instagram account using the unique id 18428658 and convert the media id 2931558439012794055 to its corresponding shortcode.", "api_names": ["Finish", "media_id_to_shortcode_for_instagram_api_v2", "user_stories_by_pk_for_instagram_api_v2", "search_for_netflix_v2", "products_locations_locationid_types_for_national_weather_service", "validate_email_address_for_mailboxlayer", "java_jobs_for_usa_jobs_for_it", "query_divesites_by_gps_boundaries_for_use_with_maps_for_world_scuba_diving_sites_api", "validate_card_number_for_credit_card_number_validator", "detailed_food_recipe_by_id_for_the_mexican_food_db", "twitter_hashtag_emojis_for_twitter_aio", "v1_ownersearch_for_uspto_trademark"], "api_descs": {"Finish": "No description available.", "detailed_food_recipe_by_id_for_the_mexican_food_db": "Mexican Food Recipe by ID", "java_jobs_for_usa_jobs_for_it": "Java Jobs Api", "media_id_to_shortcode_for_instagram_api_v2": "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts 2931558439012794055 to Ciu_N9Qpm5d", "products_locations_locationid_types_for_national_weather_service": "Metadata about a Weather Office. Example /offices/EAX", "query_divesites_by_gps_boundaries_for_use_with_maps_for_world_scuba_diving_sites_api": "The API endpoint that queries dive sites by GPS boundaries allows developers to search for dive sites within a specified geographical region, defined by a set of latitude and longitude coordinates. This endpoint can be particularly useful for creating interactive maps or applications that require displaying dive sites within a specific area. To use it add the four map bounds as query params", "search_for_netflix_v2": "Search", "twitter_hashtag_emojis_for_twitter_aio": "Receive a full list of all twitter custom emojis with the hashtag, image and more.", "user_stories_by_pk_for_instagram_api_v2": "Get all stories via pk", "v1_ownersearch_for_uspto_trademark": "Does a search on **owner name** or **postcode** and returns details about the trademarks found for that owner. Duplicate owner results can be returned by this endpoint, especially when an owner had an address change.\n\nYou can use literal 'null' if you don't want to use a param. So you can either search just for a keyword or just for a postcode or together if you want to filter by both.", "validate_card_number_for_credit_card_number_validator": "Validate Credit Card Number and get the card type", "validate_email_address_for_mailboxlayer": "The main API endpoint for validating email addresses"}, "aseqs": [{"api_name": "user_stories_by_pk_for_instagram_api_v2", "api_action": "\nAction: user_stories_by_pk_for_instagram_api_v2\nAction Input: {\n  \"pk\": 18428658\n}", "api_reaction": null}, {"api_name": "media_id_to_shortcode_for_instagram_api_v2", "api_action": "\nAction: media_id_to_shortcode_for_instagram_api_v2\nAction Input: {\n  \"mediaid\": 2931558439012794055\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_stories_by_pk_for_instagram_api_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "media_id_to_shortcode_for_instagram_api_v2", "api_action": "\nAction: media_id_to_shortcode_for_instagram_api_v2\nAction Input: {\n  \"media_id\": 2931558439012794055\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_stories_by_pk_for_instagram_api_v2", "api_action": "\nAction: user_stories_by_pk_for_instagram_api_v2\nAction Input: {\n  \"pk\": 18428658,\n  \"count\": 100\n}", "api_reaction": null}}]}
{"URL": "57310", "query": "I'm a Jet Set Radio enthusiast and I want to know everything about the game. Can you provide me with a comprehensive list of all the graffiti tags, songs, artists, characters, locations, and levels in Jet Set Radio? It would be great if you could also provide some trivia about the game.", "api_names": ["levels_for_jet_set_radio_api", "graffiti_tags_for_jet_set_radio_api", "Finish", "songs_for_jet_set_radio_api", "characters_for_jet_set_radio_api", "titles_for_moviesdatabase", "iso3_for_countries", "directions_between_2_locations_for_tunisia_api", "search_req_for_hanime_python_api", "exchanges_for_tardis_dev", "download_pass_for_passbook", "random_skin_from_weapon_for_cs_skin_api", "list_of_language_codes_for_search_for_twitter", "allanswersforms_for_acopaer", "get_user_playlists_for_spotify_v2", "get_individual_news_source_news_for_climate_change_api_tutorial", "constructorstandingsafterarace_for_formula_1_fixed", "getmailboxsettings_for_ishan", "tor_get_for_scraper_s_proxy", "rdates_for_date_calculator"], "api_descs": {"Finish": "No description available.", "allanswersforms_for_acopaer": "# Description GET All Answers Forms\r\n\r\nThis url is to get all Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "characters_for_jet_set_radio_api": "Returns a list of all Characters", "constructorstandingsafterarace_for_formula_1_fixed": "To list the constructor standings after a specific race (round) in a season(year), use this endpoint.\n\n", "directions_between_2_locations_for_tunisia_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Sfax to Tunis**", "download_pass_for_passbook": "", "exchanges_for_tardis_dev": "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc.", "get_individual_news_source_news_for_climate_change_api_tutorial": "Get News about Climate Change from a specific news resource.", "get_user_playlists_for_spotify_v2": "Fetch all public playlists of a specific user.", "getmailboxsettings_for_ishan": " ", "graffiti_tags_for_jet_set_radio_api": "Returns a list of all Graffiti-Tags", "iso3_for_countries": "This gets country name on a country. Use ISO3 for country_code.", "levels_for_jet_set_radio_api": "Returns a list of all Levels", "list_of_language_codes_for_search_for_twitter": "this endpoint gives a list of language codes required for \"getSearch\" endpoint", "random_skin_from_weapon_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a random counterstrike skin from a specific weapon\n(prices for field tested condition in USD)\n\n(replace weapon_name)\n\nExample: /api/random/AWP", "rdates_for_date_calculator": "Computes and returns recurring dates based on very flexible recurrence rules as defined and specified in the [iCalendar RFC 5545](https://tools.ietf.org/html/rfc5545 \"ICalendar\"). It's possible to specify more than one recurrence rule.", "search_req_for_hanime_python_api": "Search API with Query\n\n**This request is limited, Please Refer to /search for more stuff**", "songs_for_jet_set_radio_api": "Returns a list of all Songs from JSR/JSRF", "titles_for_moviesdatabase": " ", "tor_get_for_scraper_s_proxy": "Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints."}, "aseqs": [{"api_name": "graffiti_tags_for_jet_set_radio_api", "api_action": "\nAction: graffiti_tags_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "songs_for_jet_set_radio_api", "api_action": "\nAction: songs_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "characters_for_jet_set_radio_api", "api_action": "\nAction: characters_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "levels_for_jet_set_radio_api", "api_action": "\nAction: levels_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "graffiti_tags_for_jet_set_radio_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_news_for_climate_change_api_tutorial", "api_action": "{\"newsSource\": \"jet_set_radio\", \"category\": \"trivia\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "graffiti_tags_for_jet_set_radio_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "graffiti_tags_for_jet_set_radio_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "graffiti_tags_for_jet_set_radio_api"}}]}
{"URL": "39491", "query": "I am a travel blogger and I want to include address information in my blog posts. Can you help me generate address details for the following coordinates: latitude 35.246, longitude 139.687 and latitude 35.987, longitude 139.543? Additionally, I would like to know the postal codes for these addresses.", "api_names": ["address_postal_code_for_navitime_geocoding", "address_reverse_geocoding_for_navitime_geocoding", "Finish", "arbitrage_bets_for_sportsbook_odds", "get_language_for_text_to_speech", "printerlist_for_13", "local_weather_api_for_world_weather_online_api", "teamnextevents_for_mmaapi", "get_authenticated_users_micros_for_geeklist", "domain_reputation_for_domain_reputation", "v1getfundhistoricalprices_for_funds", "weight_category_for_body_mass_index_bmi_calculator", "china_filter_for_all_news_for_east_china_news", "cities_in_circle_for_rapidweather", "crimes_at_location_for_data_police_uk"], "api_descs": {"Finish": "No description available.", "address_postal_code_for_navitime_geocoding": "Return address information from postal code of request parameters.", "address_reverse_geocoding_for_navitime_geocoding": "逆ジオコーディング\n緯度経度を指定して住所情報を取得します。", "arbitrage_bets_for_sportsbook_odds": "This returns the bets that have arbitrage. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.", "china_filter_for_all_news_for_east_china_news": "Filters all Chinese news from all sources", "cities_in_circle_for_rapidweather": "API returns data from cities laid within definite circle that is specified by center point", "crimes_at_location_for_data_police_uk": "Returns just the crimes which occurred at the specified location, rather than those within a radius. If given latitude and longitude, finds the nearest pre-defined location and returns the crimes which occurred there.", "domain_reputation_for_domain_reputation": "Evaluate reputation of a domain or IP (v1)", "get_authenticated_users_micros_for_geeklist": "", "get_language_for_text_to_speech": "get list of available language for text to speech", "local_weather_api_for_world_weather_online_api": "The Local Weather REST API (also called City and Town Weather API) method allows you to access current weather conditions, the next 14 days of accurate and reliable weather forecast, Air Quality Data, Weather Alerts and Monthly Climate Averages for over 4 million cities and towns worldwide. The Local Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, etc.", "printerlist_for_13": "Retrieves all the printers", "teamnextevents_for_mmaapi": "Get information about the next events for a specific team.", "v1getfundhistoricalprices_for_funds": "Get fund's historical prices", "weight_category_for_body_mass_index_bmi_calculator": "Retrieve the weight category of an individual based on their BMI"}, "aseqs": [{"api_name": "address_reverse_geocoding_for_navitime_geocoding", "api_action": "\nAction: address_reverse_geocoding_for_navitime_geocoding\nAction Input: {\n  \"coord\": \"35.246,139.687\"\n}", "api_reaction": null}, {"api_name": "address_reverse_geocoding_for_navitime_geocoding", "api_action": "\nAction: address_reverse_geocoding_for_navitime_geocoding\nAction Input: {\n  \"coord\": \"35.987,139.543\"\n}", "api_reaction": null}, {"api_name": "address_postal_code_for_navitime_geocoding", "api_action": "\nAction: address_postal_code_for_navitime_geocoding\nAction Input: {\n  \"postal_code\": \"2390806\"\n}", "api_reaction": null}, {"api_name": "address_postal_code_for_navitime_geocoding", "api_action": "\nAction: address_postal_code_for_navitime_geocoding\nAction Input: {\n  \"postal_code\": \"3620061\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "address_reverse_geocoding_for_navitime_geocoding"}}, {"state": "generated_by_agent", "aseq": {"api_name": "address_postal_code_for_navitime_geocoding"}}, {"state": "generated_by_agent", "aseq": {"api_name": "address_postal_code_for_navitime_geocoding"}}, {"state": "generated_by_agent", "aseq": {"api_name": "address_reverse_geocoding_for_navitime_geocoding", "api_action": "\nAction: address_reverse_geocoding_for_navitime_geocoding\nAction Input: {\n  \"coord\": \"35.987,139.543\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "address_reverse_geocoding_for_navitime_geocoding", "api_action": "\nAction: address_reverse_geocoding_for_navitime_geocoding\nAction Input: {\n  \"coord\": \"35.987,139.543\"\n}", "api_reaction": null}}]}
{"URL": "49074", "query": "I want to check the version history of a specific file named 'document.docx'. Could you please provide me with the file versions and their details?", "api_names": ["getfileversions_for_aspose_cells_cloud", "downloadfile_for_aspose_cells_cloud", "Finish", "getuserbyname_for_pet_store", "facilities_lookup_for_uganda_api", "get_specific_dog_breed_for_dogbreeds", "venue_search_for_wiman_the_social_wi_fi_network", "getpoints_for_raastaapi", "v1_caloriesburned_for_calories_burned_by_api_ninjas", "get_digibyte_balance_for_cryptocurrency_balance", "historic_event_by_year_for_world_history_timeline", "getfileversions_for_groupdocs_annotation_cloud"], "api_descs": {"Finish": "No description available.", "downloadfile_for_aspose_cells_cloud": " ", "facilities_lookup_for_uganda_api": "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "get_digibyte_balance_for_cryptocurrency_balance": "This endpoint will return back the DigiByte balance of an address", "get_specific_dog_breed_for_dogbreeds": "Get all info from specific dog breed", "getfileversions_for_aspose_cells_cloud": " ", "getfileversions_for_groupdocs_annotation_cloud": " ", "getpoints_for_raastaapi": "This will retrieve specific points from the database and return it.", "getuserbyname_for_pet_store": "", "historic_event_by_year_for_world_history_timeline": "Give an year in the query and it returns all the available events from that year", "v1_caloriesburned_for_calories_burned_by_api_ninjas": "API Ninjas Calories Burned API endpoint.", "venue_search_for_wiman_the_social_wi_fi_network": ""}, "aseqs": [{"api_name": "getfileversions_for_aspose_cells_cloud", "api_action": "\nAction: getfileversions_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"/document.docx\"\n}", "api_reaction": null}, {"api_name": "getfileversions_for_aspose_cells_cloud", "api_action": "\nAction: getfileversions_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"/files/document.docx\"\n}", "api_reaction": null}, {"api_name": "getfileversions_for_aspose_cells_cloud", "api_action": "\nAction: getfileversions_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"document.docx\"\n}", "api_reaction": null}, {"api_name": "downloadfile_for_aspose_cells_cloud", "api_action": "\nAction: downloadfile_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"document.docx\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getfileversions_for_aspose_cells_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfileversions_for_aspose_cells_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfileversions_for_aspose_cells_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfileversions_for_aspose_cells_cloud", "api_action": "\nAction: getfileversions_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"/document.docx\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfileversions_for_aspose_cells_cloud", "api_action": "\nAction: getfileversions_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"/document.docx\"\n}", "api_reaction": null}}]}
{"URL": "34368", "query": "I'm developing a mobile app that requires a comprehensive list of places. Can you assist me in obtaining 100 places with their latitude and longitude using the Places API? Moreover, I also need 100 persons with their addresses, including street names, cities, zip codes, countries, and coordinates. Can you provide this data using the Persons API and Addresses API?", "api_names": ["places_for_seeding_data", "persons_for_seeding_data", "Finish", "get_abyssal_dungeons_for_lost_ark", "get_names_for_indian_names", "shared_service_for_lootero", "chevereto_for_chevereto", "tournaments_for_rocket_league", "getvideofromuser_for_vimeo", "crimes_at_location_for_data_police_uk", "get_categories_for_my_store", "similar_hashtags_for_hashtag", "get_news_for_india_today_unofficial", "owner_info_for_web_push_notifications_server", "consumer_name_search_for_data_axle_consumer_search"], "api_descs": {"Finish": "No description available.", "chevereto_for_chevereto": "chevereto", "consumer_name_search_for_data_axle_consumer_search": "Find relevant People in the Data Axle database", "crimes_at_location_for_data_police_uk": "Returns just the crimes which occurred at the specified location, rather than those within a radius. If given latitude and longitude, finds the nearest pre-defined location and returns the crimes which occurred there.", "get_abyssal_dungeons_for_lost_ark": "endpoint to get all abyssal dungeons", "get_categories_for_my_store": " ", "get_names_for_indian_names": "Fetch a random list of indian names", "get_news_for_india_today_unofficial": "All Latest news from India Today Platform", "getvideofromuser_for_vimeo": "Get all videos credited to a user (both uploaded and appears).", "owner_info_for_web_push_notifications_server": "Fetch owner's details", "persons_for_seeding_data": "Get 100 persons with en_US locale and gender female", "places_for_seeding_data": "Get 100 places", "shared_service_for_lootero": "This endpoint returns the items related to a share code", "similar_hashtags_for_hashtag": "Generated related hashtags to a text input provided", "tournaments_for_rocket_league": "Check the scheduled tournaments:\n`rocket-league1.p.rapidapi.com/tournaments/:region`"}, "aseqs": [{"api_name": "places_for_seeding_data", "api_action": "\nAction: places_for_seeding_data\nAction Input: {\n  \"quantity\": 100\n}", "api_reaction": null}, {"api_name": "persons_for_seeding_data", "api_action": "\nAction: persons_for_seeding_data\nAction Input: {\n  \"locale\": \"en_US\",\n  \"quantity\": 100,\n  \"gender\": \"male\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "places_for_seeding_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "places_for_seeding_data", "api_action": "\nAction: places_for_seeding_data\nAction Input: {\n  \"quantity\": 100,\n  \"includeAddress\": true,\n  \"includeCoordinates\": true\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "places_for_seeding_data", "api_action": "\nAction: places_for_seeding_data\nAction Input: {\n  \"quantity\": 100\n}", "api_reaction": null}}]}
{"URL": "40018", "query": "I am a marketing analyst and I need to gather reviews and ratings for a specific business. Can you help me search for reviews and ratings for the business 'IBM Morocco'? Once found, I would like to retrieve all the reviews in one request and sort them based on the rating.", "api_names": ["searchbusiness_for_google_reviews_scraper", "getfullreviews_for_google_reviews_scraper", "Finish", "getallbeerslist_for_beers_list", "tournament_teams_for_ice_hockey_data", "products_detail_deprecated_for_forever21", "hot_100_songs_for_billboard_api", "me_for_ticketbud", "all_coins_ticker_for_coinlore_cryptocurrency", "getlargestcities_for_reverse_geocoding_and_geolocation_service", "matches_for_fdj", "get_channel_broadcaster_type_for_gwyo_twitch", "history_for_crazytimeapi", "v1_caloriesburned_for_calories_burned_by_api_ninjas", "google_fake_autocomplete_for_memeados"], "api_descs": {"Finish": "No description available.", "all_coins_ticker_for_coinlore_cryptocurrency": "Get tickers for coins", "get_channel_broadcaster_type_for_gwyo_twitch": "Get Channel Broadcaster Type (using username or id)", "getallbeerslist_for_beers_list": "List of all beers", "getfullreviews_for_google_reviews_scraper": "this endpoint get all the reviews in one request", "getlargestcities_for_reverse_geocoding_and_geolocation_service": "Returns 5 largest cities within a given radial range with name, population, country and distance.", "google_fake_autocomplete_for_memeados": "Generate Fake google autocomplete", "history_for_crazytimeapi": "Get the last 10 spins Histories and details", "hot_100_songs_for_billboard_api": "Provide the YEAR-END Hot 100 Songs chart information\n\nIf `year` is not supplied, will default to last year.", "matches_for_fdj": "Latest Matches for FDJ", "me_for_ticketbud": "Information about the current token holder", "products_detail_deprecated_for_forever21": "Get detail information of product by id", "searchbusiness_for_google_reviews_scraper": "with this endpoint you can search the business you want to get their reviews and ratings", "tournament_teams_for_ice_hockey_data": "List of teams participating in a specific tournament.", "v1_caloriesburned_for_calories_burned_by_api_ninjas": "API Ninjas Calories Burned API endpoint."}, "aseqs": [{"api_name": "searchbusiness_for_google_reviews_scraper", "api_action": "\nAction: searchbusiness_for_google_reviews_scraper\nAction Input: {\n  \"keyword\": \"IBM Morocco\"\n}", "api_reaction": null}, {"api_name": "getfullreviews_for_google_reviews_scraper", "api_action": "\nAction: getfullreviews_for_google_reviews_scraper\nAction Input: {\n  \"fullsort\": \"rating\",\n  \"fullid\": \"U2FsdGVkX18CfvtYLzcE02RXHutaDm698KsZUd3j3oVihWzfw2ksR44h%2BnjqyX%2BGnnXgPV9bGhxlS70gyyZmPQ%3D%3D\"\n}", "api_reaction": null}, {"api_name": "getfullreviews_for_google_reviews_scraper", "api_action": "\nAction: getfullreviews_for_google_reviews_scraper\nAction Input: {\n  \"fullsort\": \"rating\",\n  \"fullid\": \"U2FsdGVkX18ujKB4rdVR%2FKWr1L1vpn1QAbNQDcws6wGIdxrHg6J8YIlP7f5H4XZki0ofOhG83htHbH2q0E9%2B8g%3D%3D\"\n}", "api_reaction": null}, {"api_name": "getfullreviews_for_google_reviews_scraper", "api_action": "\nAction: getfullreviews_for_google_reviews_scraper\nAction Input: {\n  \"fullsort\": \"rating\",\n  \"fullid\": \"U2FsdGVkX1%2Fqo%2BWHqvDyL%2BrrRn4Ic42vUD7FN55Ok2gxFE7YB0MBD9FymTiFr%2BIGKf6LyJQy5kYbCCh3g0y0mQ%3D%3D\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use the searchbusiness_for_google_reviews_scraper API to get reviews and ratings for IBM Morocco, then use the getfullreviews_for_google_reviews_scraper API to retrieve all reviews in one request based on the business.\n\t\"api_name\": \"searchbusiness_for_google_reviews_scraper\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getfullreviews_for_google_reviews_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfullreviews_for_google_reviews_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfullreviews_for_google_reviews_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfullreviews_for_google_reviews_scraper", "api_action": "\nAction: getfullreviews_for_google_reviews_scraper\nAction Input: {\n  \"fullsort\": \"rating\",\n  \"fullid\": \"U2FsdGVkX18CfvtYLzcE02RXHutaDm698KsZUd3j3oVihWzfw2ksR44h%2BnjqyX%2BGnnXgPV9bGhxlS70gyyZmPQ%3D%3D\"\n}"}}]}
{"URL": "74860", "query": "I'm a content creator and I'm looking for meme templates related to food. Please fetch me meme templates that contain the word 'food'. Additionally, let me know the fonts I can use to add captions and text to the memes.", "api_names": ["templates_for_meme_generator_and_template_database", "fonts_for_meme_generator_and_template_database", "search_for_meme_generator_and_template_database", "Finish", "getcustomeraddresses_for_appibase", "show_for_vizor_ads", "api_tripdetails_mfref_for_asr_hub", "searchairports_for_world_airports_directory", "get_svg_pattern_for_pattern_monster", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius", "playerseasonstatsbyname_for_nba_statistics_api", "getproducts_for_cartify", "accountinfo_for_axesso_instagram_data_service", "today_for_wordle_answers_solutions", "scrape_legacy_for_scrapeninja", "artist_discography_overview_for_spotify_web"], "api_descs": {"Finish": "No description available.", "accountinfo_for_axesso_instagram_data_service": "Fetch data for a give account. The response includes the field \"id which is required for further requests e.g. posts, comments and replies and needs to be passed to query param userId. This endpoint needs the sessionid to work.", "api_tripdetails_mfref_for_asr_hub": "Retrives the TripDetails based on the  MFRef Number\r\n- MFRef", "artist_discography_overview_for_spotify_web": "Get artist discography overview", "fonts_for_meme_generator_and_template_database": "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins", "get_svg_pattern_for_pattern_monster": "Get SVG Pattern", "getcustomeraddresses_for_appibase": "Get all customer addresses", "getproducts_for_cartify": "This endpoint gets all products in the database.\n\nA list of products in the store, with the following attributes:\n\nid (integer): The unique identifier for the product.\ntitle (string): The name of the product.\ncategory (string): A description of the product.\nprice (number): The price of the product.\nimage_url (string): A URL to an image of the product.", "playerseasonstatsbyname_for_nba_statistics_api": "_player name is specified in the url._", "scrape_legacy_for_scrapeninja": "Scrape via GET method. Not recommended for production, you'd better use POST requests.", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude.", "search_for_meme_generator_and_template_database": "Returns meme templates that contain a specific string. **searchString is case sensitive**", "searchairports_for_world_airports_directory": "Primary API to  get all the matching airports based on the keyword you pass in the params. API runs best matching algorithm to find most relevant airports matching with either city, city code or airport code and so on.\n**BONUS**: It returns complete `Airport Name, Lat, Long, Timezone, Country, Country Code, Airport Code and City Code.`\n\nNOTE: This API is case insensitive.\n\nFor e.g.\n1. When user trying with city `/v1/airports/dubai`\n2. When user trying with Airport Code `/v1/airports/dxb`\n3. When user trying with city code `/v1/airports/omdb`", "show_for_vizor_ads": "Get details of your existing embed records using it's unique slug", "templates_for_meme_generator_and_template_database": "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**.", "today_for_wordle_answers_solutions": "Calling this endpoint you will todays solution."}, "aseqs": [{"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"food\"\n}", "api_reaction": null}, {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"eat\"\n}", "api_reaction": null}, {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"hungry\"\n}", "api_reaction": null}, {"api_name": "templates_for_meme_generator_and_template_database", "api_action": "\nAction: templates_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "fonts_for_meme_generator_and_template_database", "api_action": "\nAction: fonts_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"food\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_for_meme_generator_and_template_database\",\n\t\"api_action\": \"\\nAction: search_for_meme_generator_and_template_database\\nAction Input: {\\n  \\\"searchstring\\\": \\\"food\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "fonts_for_meme_generator_and_template_database"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_for_meme_generator_and_template_database\",\n\t\"api_action\": \"\\nAction: search_for_meme_generator_and_template_database\\nAction Input: {\\n  \\\"searchstring\\\": \\\"food\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"food\"\n}", "api_reaction": null}}]}
{"URL": "318", "query": "I need to validate a CNPJ number for my company's registration. Can you please check if the CNPJ number '12.345.678/0001-90' is valid? Also, generate a random valid CNPJ number for testing purposes.", "api_names": ["Finish", "validate_cnpj_for_cnpj_validator", "generate_cnpj_for_cnpj_validator", "gettopsportmenu_for_sportapi", "th_network_for_syamsul_bachri", "getsongs_for_musiczone", "getmoviestatus_for_helioviewer_v1", "define_for_wordnet_search", "retrieve_active_loans_offers_for_blur", "getnetworks_for_electric_vehicle_charging_stations", "sponsor_players_for_trackmania", "salary_estimate_for_adzuna", "version_metadata_for_hapihub", "matchschedules_for_icehockeyapi", "languages_for_lexicala"], "api_descs": {"Finish": "No description available.", "define_for_wordnet_search": "Defines the word", "generate_cnpj_for_cnpj_validator": "Generates a valid CNPJ number.", "getmoviestatus_for_helioviewer_v1": "", "getnetworks_for_electric_vehicle_charging_stations": "Return only electric charging stations that belong to the given network. A single network, or a comma separated list of multiple networks, may be given.", "getsongs_for_musiczone": "get song details", "gettopsportmenu_for_sportapi": "GetTopSportMenu Api Data", "languages_for_lexicala": "all supported languages and codes", "matchschedules_for_icehockeyapi": "Get the schedules of ice hockey matches for a given date, including match timings, teams, and other relevant information.", "retrieve_active_loans_offers_for_blur": "This endpoint is used to retrieve the active loan offer levels for a collection.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "salary_estimate_for_adzuna": "Returns an estimate of the salary of a job.", "sponsor_players_for_trackmania": "Get Players that are sponsors.", "th_network_for_syamsul_bachri": "IONPREMIER", "validate_cnpj_for_cnpj_validator": "Check if a CNPJ number is valid. Ignores the following characters: .-/", "version_metadata_for_hapihub": "Retrieve the server's version metadata"}, "aseqs": [{"api_name": "validate_cnpj_for_cnpj_validator", "api_action": "\nAction: validate_cnpj_for_cnpj_validator\nAction Input: {\n  \"n\": \"12.345.678/0001-90\"\n}", "api_reaction": null}, {"api_name": "generate_cnpj_for_cnpj_validator", "api_action": "\nAction: generate_cnpj_for_cnpj_validator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "validate_cnpj_for_cnpj_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_cnpj_for_cnpj_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "validate_cnpj_for_cnpj_validator", "api_action": "\nAction: validate_cnpj_for_cnpj_validator\nAction Input: {\n  \"n\": \"12.345.678/0001-90\"\n}", "api_reaction": null}}]}
{"URL": "73641", "query": "I'm a travel enthusiast and I want to find Instagram profiles that share stunning travel photography. Can you suggest some profiles in the travel niche? It would be great if I could see their recent publications, stories, and highlights.", "api_names": ["profile_info_for_instagram_scraper_2023_v2", "profile_publications_for_instagram_scraper_2023_v2", "search_for_instagram_scraper_2023_v2", "Finish", "competitions_id_for_zeus_api", "retrospective_for_instagram_statistics_api", "pesquisa_por_campo_for_lista_de_empresas_por_segmento", "list_file_types_for_smile", "most_recent_tafs_for_aviation_weather_center", "list_of_equipment_for_exercisedb", "get_daily_schedule_for_tank01_fantasy_stats", "fetch_restaurant_information_for_foodiefetch", "commonports_for_commonportnumbers", "getgamelevel_for_music_trivia", "cities_v2_get_information_for_airvisual", "get_invite_data_for_discord_lookup", "getsupportedfileformats_for_groupdocs_signature_cloud", "getorderbyid_for_13", "read_usage_per_ip_for_ironwifi", "get_coupons_for_get_promo_codes"], "api_descs": {"Finish": "No description available.", "cities_v2_get_information_for_airvisual": "Get information in specific city by its id", "commonports_for_commonportnumbers": "Get registered service names and transport protocols port numbers.", "competitions_id_for_zeus_api": "List one competition given by id 🔍.", "fetch_restaurant_information_for_foodiefetch": "This endpoint allows users to retrieve menu location and ratings data for a specific restaurant. The user can send the name of the restaurant, preferably the full name with the city, to fetch data from the API.", "get_coupons_for_get_promo_codes": "Get Coupons", "get_daily_schedule_for_tank01_fantasy_stats": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNBAGamesForDate?gameDate=20220310\nThe above call will return all of the games from March 10th, 2022.  Date must be in that format.  \nFor March 10th, there were two games. They come back in a list format within the body of the response.", "get_invite_data_for_discord_lookup": "Fetches detailed data, including hidden data of invites or vanities", "getgamelevel_for_music_trivia": "get a game level with a level parameter. The level this does not imply difficulty", "getorderbyid_for_13": "Retrieves an order", "getsupportedfileformats_for_groupdocs_signature_cloud": " ", "list_file_types_for_smile": "Get the available file types for uploads.", "list_of_equipment_for_exercisedb": "Fetch a list of available equipment", "most_recent_tafs_for_aviation_weather_center": "Obtain the most recent TAFs from the past X hours. If you use the `mostRecent` flag only one TAF is returned. Otherwise, all TAFs from the specified time window will be returned.", "pesquisa_por_campo_for_lista_de_empresas_por_segmento": "Busque uma lista de empresas utilizando outros campos, como:  **nome, email, telefone, socio, cep**.\nCampos retornados: CNPJ, localização, UF, Cidade, bairro, nome fantasia e razão social.", "profile_info_for_instagram_scraper_2023_v2": "Profile Info", "profile_publications_for_instagram_scraper_2023_v2": "Profile Publications", "read_usage_per_ip_for_ironwifi": "READ - USAGE PER IP", "retrospective_for_instagram_statistics_api": "Returns the history of the number of subscribers, posts, interactions, likes, comments, reposts, engagement for the selected period by day and in total for the period\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_1f14d181-31f7-40ea-b957-fac40f8eee6f_f.png?time=1666779218)", "search_for_instagram_scraper_2023_v2": "Search"}, "aseqs": [{"api_name": "search_for_instagram_scraper_2023_v2", "api_action": "\nAction: search_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_instagram_scraper_2023_v2", "api_action": "\nAction: search_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "profile_publications_for_instagram_scraper_2023_v2", "api_action": "\nAction: profile_publications_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "profile_info_for_instagram_scraper_2023_v2", "api_action": "\nAction: profile_info_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_instagram_scraper_2023_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_instagram_scraper_2023_v2", "api_action": "{\"query\":\"travel#\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_instagram_scraper_2023_v2", "api_action": "\nAction: search_for_instagram_scraper_2023_v2\nAction Input: {\"keyword\":\"travel photography\",\"category\":\"travel\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_instagram_scraper_2023_v2", "api_action": "\nAction: search_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_instagram_scraper_2023_v2", "api_action": "\nAction: search_for_instagram_scraper_2023_v2\nAction Input: {\n  \"query\": \"travel photography\"}", "api_reaction": null}}]}
{"URL": "601", "query": "I'm planning a surprise party for my best friend and want to create a unique theme. Can you suggest a random word that I can use as the party theme? It would be great if you could also provide a random sentence to include in the party invitations.", "api_names": ["generate_a_random_word_for_random_word_generator", "generate_a_random_sentence_for_random_word_generator", "Finish", "products_get_reviews_for_unofficial_shein", "epl_for_test_opta", "get_new_releases_for_spotify_data_api", "get_information_of_a_particular_post_for_leetcode_compensation", "double_name_medium_for_nameforge", "media_for_sportifyapi", "playlist_posts_for_tiktok_private", "getassessment_for_getassessments", "cities_for_geography_v2", "user_followers_list_for_tiktok_data", "getgeneration_for_dream_diffusion", "v1_post_post_id_comments_for_tokapi_mobile_version"], "api_descs": {"Finish": "No description available.", "cities_for_geography_v2": "get a list of all the cities filtering by name", "double_name_medium_for_nameforge": "Create double name.\nMax query length is 50 characters.", "epl_for_test_opta": "EPL Key", "generate_a_random_sentence_for_random_word_generator": "Generate a random sentence", "generate_a_random_word_for_random_word_generator": "Scour through thousands of words from the RandomWordGenerator.com database", "get_information_of_a_particular_post_for_leetcode_compensation": "This API Endpoint will return information of a particular post with specific postID.", "get_new_releases_for_spotify_data_api": "Get new releases albums from one of the countrys :\nAD, AE, AG, AL, AM, AO, AR, AT, AU, AZ, \nBA, BB, BD, BE, BF, BG, BH, BI, BJ, BN, \nBO, BR, BS, BT, BW, BZ, CA, CD, CG, CH, \nCI, CL, CM, CO, CR, CV, CW, CY, CZ, DE, \nDJ, DK, DM, DO, DZ, EC, EE, EG, ES, ET, \nFI, FJ, FM, FR, GA, GB, GD, GE, GH, GM, \nGN, GQ, GR, GT, GW, GY, HK, HN, HR, HT, \nHU, ID, IE, IL, IN, IQ, IS, IT, JM, JO, \nJP, KE, KG, KH, KI, KM, KN, KR, KW, KZ, \nLA, LB, LC, LI, LK, LR, LS, LT, LU, LV, \nLY, MA, MC, MD, ME, MG, MH, MK, ML, MN, \nMO, MR, MT, MU, MV, MW, MX, MY, MZ, NA, \nNE, NG, NI, NL, NO, NP, NR, NZ, OM, PA, \nPE, PG, PH, PK, PL, PS, PT, PW, PY, QA, \nRO, RS, RW, SA, SB, SC, SE, SG, SI, SK, \nSL, SM, SN, SR, ST, SV, SZ, TD, TG, TH, \nTJ, TL, TN, TO, TR, TT, TV, TW, TZ, UA, \nUG, US, UY, UZ, VC, VE, VN, VU, WS, XK,\nZA, ZM, ZW", "getassessment_for_getassessments": "getAssessment", "getgeneration_for_dream_diffusion": "Gets the generation status and generated images", "media_for_sportifyapi": "Media", "playlist_posts_for_tiktok_private": "Get posts by User and Playlist", "products_get_reviews_for_unofficial_shein": "Get brief reviews of a product", "user_followers_list_for_tiktok_data": "Get user followers:\n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs", "v1_post_post_id_comments_for_tokapi_mobile_version": "Comments by video ID"}, "aseqs": [{"api_name": "generate_a_random_word_for_random_word_generator", "api_action": "\nAction: generate_a_random_word_for_random_word_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "generate_a_random_sentence_for_random_word_generator", "api_action": "\nAction: generate_a_random_sentence_for_random_word_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_word_for_random_word_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_word_for_random_word_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_word_for_random_word_generator"}}]}
{"URL": "68400", "query": "I'm organizing a family movie night and I need some anime recommendations. Can you provide me with a list of anime titles, sorted by ranking, with fantasy and drama genres? Also, please include the alternative titles and synopsis for each anime.", "api_names": ["get_all_for_anime_db", "get_genres_for_anime_db", "Finish", "transfers_for_football_v2", "united_states_residential_mobility_for_covid_19_economic_impact", "search_zip_codes_for_mexico_zip_codes", "video_recommendation_for_youtube_search", "v1_textlanguage_for_text_language_by_api_ninjas", "get_equations_for_physical_quantities_constants_and_equations_", "get_variables_variable_id_for_ubidots", "dad_jokes_joke_of_the_day_for_dad_jokes_v2", "location_info_for_foreca_weather", "user_media_for_twitter", "login_for_mocktwitter", "all_solutions_for_wordle_answers_solutions"], "api_descs": {"Finish": "No description available.", "all_solutions_for_wordle_answers_solutions": "Calling this endpoint you will get all the historical solutions of the Wordle game", "dad_jokes_joke_of_the_day_for_dad_jokes_v2": "Return joke of the day. Each new UTC day API will return a new joke. During the UTC day, API returns the same joke.", "get_all_for_anime_db": "Get List of anime. You can search, sort an specify genre", "get_equations_for_physical_quantities_constants_and_equations_": "This endpoint return back data of equations formatted as JSON", "get_genres_for_anime_db": "Get Genres", "get_variables_variable_id_for_ubidots": "This resource returns a variable and its details. It shows additional fields than the ones required during the creation of the variable:  last_value: Shows the last value written to the variable.", "location_info_for_foreca_weather": "Metadata for location.", "login_for_mocktwitter": "login to the user profile", "search_zip_codes_for_mexico_zip_codes": "Search for valid zip codes with starting digits", "transfers_for_football_v2": "Get a list of transfers for the current season", "united_states_residential_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at residential.", "user_media_for_twitter": "User Media", "v1_textlanguage_for_text_language_by_api_ninjas": "API Ninjas Text Language API endpoint", "video_recommendation_for_youtube_search": "This endpoint returns a list of recommended videos based on a given a video ID"}, "aseqs": [{"api_name": "get_genres_for_anime_db", "api_action": "\nAction: get_genres_for_anime_db\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_for_anime_db", "api_action": "\nAction: get_all_for_anime_db\nAction Input: {\n  \"page\": \"1\",\n  \"size\": \"10\",\n  \"sortby\": \"ranking\",\n  \"sortorder\": \"asc\",\n  \"genres\": \"fantasy,drama\"\n}", "api_reaction": null}, {"api_name": "get_all_for_anime_db", "api_action": "\nAction: get_all_for_anime_db\nAction Input: {\n  \"page\": \"1\",\n  \"size\": \"10\",\n  \"sortby\": \"ranking\",\n  \"sortorder\": \"asc\",\n  \"genres\": \"fantasy\"\n}", "api_reaction": null}, {"api_name": "get_all_for_anime_db", "api_action": "\nAction: get_all_for_anime_db\nAction Input: {\n  \"page\": \"1\",\n  \"size\": \"10\",\n  \"sortby\": \"ranking\",\n  \"sortorder\": \"asc\",\n  \"genres\": \"drama\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_for_anime_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_for_anime_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_for_anime_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_for_anime_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_for_anime_db"}}]}
{"URL": "39267", "query": "I'm organizing a gaming event for my company's employees. I want to surprise them with some new games that are currently on special discount offers. Could you please share a list of game titles, original prices, discounts, and discounted prices? Additionally, I need detailed information about a specific game. Can you provide me with the game data for the game with the app ID 1581770? I'm interested in knowing the discount, original price, current price, and the URL to purchase the game.", "api_names": ["gameslist_for_steamgames_special_offers", "gamesdata_for_steamgames_special_offers", "Finish", "youtube_topviews_artist_nationality_for_musicdata_api", "crawler_for_explorarc_s_internel_links_crawler", "acceso_al_chat_for_quierochat", "agen_mega_singapore_for_ten_secrets_about_mega888_ios_download_that_has_never_been_revealed_for_the_past_years", "regionlist_for_gtrend", "request_random_quote_for_random_quote_generator", "indisciplina_1_for_csa_v2", "webhooklist_for_13", "service_status_for_luhn_algorithm", "get_pictionary_word_for_pictionary_charades_word_generator", "ranking_list_for_j2acoin", "cat_for_kitten_placeholder"], "api_descs": {"Finish": "No description available.", "acceso_al_chat_for_quierochat": "Conecta al usuario con el chat", "agen_mega_singapore_for_ten_secrets_about_mega888_ios_download_that_has_never_been_revealed_for_the_past_years": "ingapore Mega888 we bring you all the latest slot games including 5 Fortune, 7 Crazy, Aladdin Wishes, Sea World, Roulette, God of Wealth, Enchanted Garden, Highway Kings, Boyking’s Treasure, Captains Treasure, Panther Moon, Mystery Dragon etc. With wide range of promotions and bonuses players get a chance to spin the reel for free and win big jackpots.", "cat_for_kitten_placeholder": "Fetches a random cat picture.", "crawler_for_explorarc_s_internel_links_crawler": "The Best API t Fetch all the Internel Links from an given URL", "gamesdata_for_steamgames_special_offers": "This endpoint will give you the Games Data if you provide the APP_ID.\nYou can use the GamesList endpoint to get the list of APP_IDs and Feed it to this Endpoint to get the Games Data. Sample Details are given below:\n`{\n    \"discount\": \"-40%\",\n    \"original_price\": \"$49.99\",\n    \"price\": \"$29.99\",\n    \"title\": \"God of War\",\n    \"url\": \"https://store.steampowered.com/app/1593500/\"\n}`", "gameslist_for_steamgames_special_offers": "This Endpoint will List all the Games which are on Special Discount Offers.", "get_pictionary_word_for_pictionary_charades_word_generator": "Get a random pictionary word with the specified difficulty. If not difficulty is supplied, a random difficulty will be used.", "indisciplina_1_for_csa_v2": "Indisciplina alumno 1", "ranking_list_for_j2acoin": "Example test", "regionlist_for_gtrend": "List support region / Country", "request_random_quote_for_random_quote_generator": "A simple get request.", "service_status_for_luhn_algorithm": "Returns service status", "webhooklist_for_13": "Retrieves all webhooks", "youtube_topviews_artist_nationality_for_musicdata_api": "Youtube top viewed music video by X artist. (X: nationality of the artist). For example: \"/youtube/topviews/vietnamese\""}, "aseqs": [{"api_name": "gameslist_for_steamgames_special_offers", "api_action": "\nAction: gameslist_for_steamgames_special_offers\nAction Input: {\n  \"region\": \"us\",\n  \"start\": 0,\n  \"count\": 10\n}", "api_reaction": null}, {"api_name": "gameslist_for_steamgames_special_offers", "api_action": "\nAction: gameslist_for_steamgames_special_offers\nAction Input: {\n  \"region\": \"us\",\n  \"start\": 0,\n  \"count\": 20\n}", "api_reaction": null}, {"api_name": "gameslist_for_steamgames_special_offers", "api_action": "\nAction: gameslist_for_steamgames_special_offers\nAction Input: {\n  \"region\": \"us\",\n  \"start\": 0,\n  \"count\": 10\n}", "api_reaction": null}, {"api_name": "gamesdata_for_steamgames_special_offers", "api_action": "\nAction: gamesdata_for_steamgames_special_offers\nAction Input: {\n  \"app_id\": 1581770\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gameslist_for_steamgames_special_offers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gamesdata_for_steamgames_special_offers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gamesdata_for_steamgames_special_offers", "api_action": "\nAction: gamesdata_for_steamgames_special_offers\nAction Input: {\n  \"APP_ID\": 1581770,\n  \"region\": \"us\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"gamesdata_for_steamgames_special_offers\",\n\t\"api_action\": \"\\nAction: gamesdata_for_steamgames_special_offers\\nAction Input: {\\n  \\\"APP_ID\\\": \\\"1581770\\\",\\n  \\\"region\\\": \\\"us\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "gameslist_for_steamgames_special_offers", "api_action": "\nAction: gameslist_for_steamgames_special_offers\nAction Input: {\n  \"region\": \"us\",\n  \"start\": 10,\n  \"count\": 20\n}", "api_reaction": null}}]}
{"URL": "11211", "query": "I'm a cryptocurrency enthusiast and I'm interested in exploring the latest whale transactions across different blockchains. Can you provide me with the recent huge transactions for Ethereum, Bitcoin, and Litecoin? I would like to know the transaction details, including the sender, recipient, and transaction amount in USD.", "api_names": ["blockchains_for_crypto_whale_transactions", "transactions_feed_for_crypto_whale_transactions", "Finish", "isochrone_for_mymappi", "geocode_for_tunisia_api", "team_depth_charts_for_basketball_datafeeds_by_rolling_insights", "search_for_joj_web_search", "artist_overview_for_spotify_web", "smile_for_5970b9b3dcc757e61e53daec3e720974", "api_trades_isin_isin_for_prague_stock_exchange", "getallstation_for_radio_world_75_000_worldwide_fm_radio_stations_", "abuse_contact_lookup_for_viewdns", "options_for_stock_and_options", "getchats_for_green_api", "historical_weather_for_ai_weather_by_meteosource", "short_code_check_for_instagram_v13", "movies_get_upcoming_for_flixster", "code_postal_par_code_for_bps"], "api_descs": {"Finish": "No description available.", "abuse_contact_lookup_for_viewdns": "Used to find the abuse contact address for a domain name. This is where you would send complaints about spam originating from that domain.", "api_trades_isin_isin_for_prague_stock_exchange": " ", "artist_overview_for_spotify_web": "Get artist overview", "blockchains_for_crypto_whale_transactions": "Get list of all supported blockchains", "code_postal_par_code_for_bps": "Fournit les informations à partir d'un code postal connu en Nouvelle Calédonie.", "geocode_for_tunisia_api": "This endpoint allows you to lookup locations in Tunisia by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "getallstation_for_radio_world_75_000_worldwide_fm_radio_stations_": "You will get all recent stations  here, based on.\n- limit (integer)\n- order (string)\n- page (integer)\n- random (boolean)", "getchats_for_green_api": "Документация [GetContacts](https://green-api.com/docs/api/service/GetContacts/)", "historical_weather_for_ai_weather_by_meteosource": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "isochrone_for_mymappi": "The Isochrone API allows you to request polygon or line features that show areas that are reachable within a few specified amounts of time from a certain location in different routing profiles (car, on foot and soon bike and public transport).", "movies_get_upcoming_for_flixster": "Get upcoming movies", "options_for_stock_and_options": "Return Stock and Options Data for given ticker", "search_for_joj_web_search": "Web Search", "short_code_check_for_instagram_v13": "Instagram shortcode check endpoint", "smile_for_5970b9b3dcc757e61e53daec3e720974": "smile", "team_depth_charts_for_basketball_datafeeds_by_rolling_insights": "Returns player depth charts for a team", "transactions_feed_for_crypto_whale_transactions": "Get latest huge whale transactions for most popular blockchains.\n\n**Filter by txn value. Add parameters as below:**\n<_amount_usd=10000 \nOR\n>amount_usd=10000\n\n**Filter by blockchain:**\n t_blockchain=bitcoin\n\nAvailable blockchains: bitcoin, bitcoin-cash, ethereum, bitcoin-sv, litecoin, tron, ripple, zcash, dogecoin, neo, eos, dash, ethereum-classic, tezos, binancechain, stellar, groestlcoin, icon, steem, cosmos, decred, verge, hypercash, siacoin\n\n\n**Pagination:**\nAdd parameter: size=100"}, "aseqs": [{"api_name": "blockchains_for_crypto_whale_transactions", "api_action": "\nAction: blockchains_for_crypto_whale_transactions\nAction Input: {}", "api_reaction": null}, {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {\n  \"t_blockchain\": \"ethereum\"\n}", "api_reaction": null}, {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {}", "api_reaction": null}, {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "transactions_feed_for_crypto_whale_transactions", "amount_usd": ">amount_usd=10000", "time_range": "all_time", "blockchain_ethereum": true, "blockchain_bitcoin": true, "blockchain_litecoin": true}}, {"state": "generated_by_agent", "aseq": {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "{\"blockchain\": \"ethereum\", \">amount_usd\": 10000, \"size\": 100}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {\n  \"t_blockchain\": \"ethereum\",\n  \"_amount_usd\": \"10000\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {\n  \"t_blockchain\": \"ethereum\",\n  \"size\": 100\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {\n  \"t_blockchain\": \"ethereum\",\n  \"_amount_usd\": \"10000\"\n}", "api_reaction": null}}]}
{"URL": "45256", "query": "I want to analyze my transaction histories in the Crypto grana app. Please provide the list of transactions for the first page with 15 transactions per page. Additionally, give me the current positions for Bitcoin, Ethereum, and Litecoin.", "api_names": ["list_histories_for_crypto_grana", "list_position_for_each_crypto_for_crypto_grana", "Finish", "get_quote_by_character_for_movie_and_tv_shows_quotes", "findplacebytext_for_trueway_places", "ttt_for_hellorold", "send_message_for_discord_webhook_api", "get_track_details_single_for_spotify_v2", "availability_for_kayuloweather", "charts_get_top_songs_in_world_by_genre_for_shazam_api", "estimated_salary_for_jsearch", "tournament_list_for_football_data", "keywords_for_papercliff", "community_post_details_for_youtube", "au_car_averages_for_car_averages", "recent_match_list_for_handball_data", "api_test_for_scott", "detect_for_translate_all_languages"], "api_descs": {"Finish": "No description available.", "api_test_for_scott": "test", "au_car_averages_for_car_averages": "AU Car averages", "availability_for_kayuloweather": "Determine the data sets available for the specified location.", "charts_get_top_songs_in_world_by_genre_for_shazam_api": "get top songs in world by gener", "community_post_details_for_youtube": "Community Post Details", "detect_for_translate_all_languages": "Detects the language of text within a request.", "estimated_salary_for_jsearch": "Get estimated salaries for a jobs around a location", "findplacebytext_for_trueway_places": "Search for places by text string", "get_quote_by_character_for_movie_and_tv_shows_quotes": "This end point will return back quotes delivered by the given character", "get_track_details_single_for_spotify_v2": "Get track_name, thumbnail, duration & artist_name of any Spotify Track. Album/Podcast/Show not supported.", "keywords_for_papercliff": "Returns the 100 most popular keywords with the corresponding number of news agencies and articles from which they have been cited", "list_histories_for_crypto_grana": "List of your histories", "list_position_for_each_crypto_for_crypto_grana": "List your current position for each crypto", "recent_match_list_for_handball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handball Match List or Fixture endpoints.**", "send_message_for_discord_webhook_api": "Allows you to send a message with a webhook. More information in the docs.", "tournament_list_for_football_data": "List of tournaments in your data coverage.", "ttt_for_hellorold": "tt"}, "aseqs": [{"api_name": "list_histories_for_crypto_grana", "api_action": "\nAction: list_histories_for_crypto_grana\nAction Input: {}", "api_reaction": null}, {"api_name": "list_histories_for_crypto_grana", "api_action": "\nAction: list_histories_for_crypto_grana\nAction Input: {}", "api_reaction": null}, {"api_name": "list_position_for_each_crypto_for_crypto_grana", "api_action": "\nAction: list_position_for_each_crypto_for_crypto_grana\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_histories_for_crypto_grana"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_histories_for_crypto_grana", "api_action": "\nAction: list_histories_for_crypto_grana\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_histories_for_crypto_grana", "api_action": "\nAction: list_histories_for_crypto_grana\nAction Input: {\"page\": 1, \"transactionsPerPage\": 15}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_histories_for_crypto_grana", "api_action": "\nAction: list_histories_for_crypto_grana\nAction Input: {}", "api_reaction": null}}]}
{"URL": "39640", "query": "I want to explore the Twitter data of a specific user. Can you fetch the details, media, followers, and tweets & replies for the user with the ID '44196397'? Additionally, provide the retweeters and favoriters for a specific tweet with the ID '1485953263040188416'.", "api_names": ["user_followers_for_twitter_v4", "tweet_retweeters_for_twitter_v4", "user_by_rest_id_for_twitter_v4", "Finish", "user_media_for_twitter_v4", "tweet_favoriters_for_twitter_v4", "get_job_for_textking_translation", "countries_allcontries_for_africa_api_", "slot_and_betting_games_for_slot_and_betting_games", "find_favicon_for_favicon_finder", "get_airline_alliance_list_for_travel_hacking_tool", "getdisastertypebydate_for_rankiteo_climate_risk_assessment", "proxy_for_proxy", "get_40_man_roster_for_mlb_data", "consumers_get_web_links_for_unofficial_trust_pilot", "hello_for_quick_qr_code_generator", "get_digibyte_balance_for_cryptocurrency_balance", "api_auditores_roac_roac_sociedad_for_roac", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats", "performer_model_info_for_onlyfans"], "api_descs": {"Finish": "No description available.", "api_auditores_roac_roac_sociedad_for_roac": "asd", "consumers_get_web_links_for_unofficial_trust_pilot": "Get web links to a consumer", "countries_allcontries_for_africa_api_": "Returns a json of all countries in Africa. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\"", "find_favicon_for_favicon_finder": "Find favicons for a URL", "get_40_man_roster_for_mlb_data": "Retrieve a team’s 40 man roster.", "get_airline_alliance_list_for_travel_hacking_tool": "This endpoint returns a list of airline alliances.", "get_digibyte_balance_for_cryptocurrency_balance": "This endpoint will return back the DigiByte balance of an address", "get_job_for_textking_translation": "Returns a single job with the given ID.", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats": "This call will grab a map of all of the games a player has played in the season.     \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\nExample:\nCorrect way to get the stats for Nikola Vucevic for his game against the Heat on 10/19/2022 would be this:\n/getNBAGamesForPlayer?playerID=28268405032&gameID=20221019_CHI@MIA\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nIf you want his games from last season, do this..\n/getNBAGamesForPlayer?playerID=28268405032&season=2022\n\nBut if you wanted to get all of his games this season, you don't have to include the season. Simply make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNBABoxScore call with that specific gameID.", "getdisastertypebydate_for_rankiteo_climate_risk_assessment": "Get disaster by type within a time range", "hello_for_quick_qr_code_generator": "test hello endpoint", "performer_model_info_for_onlyfans": "Get detail info about a performer / model", "proxy_for_proxy": "Proxy your request anywhere.", "slot_and_betting_games_for_slot_and_betting_games": "Games for your online casino.", "tweet_favoriters_for_twitter_v4": "Tweet Favoriters", "tweet_retweeters_for_twitter_v4": "Tweet Retweeters", "user_by_rest_id_for_twitter_v4": "User By Rest ID", "user_followers_for_twitter_v4": "User Followers", "user_media_for_twitter_v4": "User Media"}, "aseqs": [{"api_name": "user_by_rest_id_for_twitter_v4", "api_action": "\nAction: user_by_rest_id_for_twitter_v4\nAction Input: {\n  \"is_id\": \"44196397\"\n}", "api_reaction": null}, {"api_name": "user_media_for_twitter_v4", "api_action": "\nAction: user_media_for_twitter_v4\nAction Input: {\n  \"is_id\": \"44196397\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "user_followers_for_twitter_v4", "api_action": "\nAction: user_followers_for_twitter_v4\nAction Input: {\n  \"is_id\": \"44196397\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "tweet_retweeters_for_twitter_v4", "api_action": "\nAction: tweet_retweeters_for_twitter_v4\nAction Input: {\n  \"is_id\": \"1485953263040188416\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "tweet_favoriters_for_twitter_v4", "api_action": "\nAction: tweet_favoriters_for_twitter_v4\nAction Input: {\n  \"is_id\": \"1485953263040188416\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_by_rest_id_for_twitter_v4"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_followers_for_twitter_v4", "api_action": "{\"rest_id\": \"44196397\", \"count\": 10}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_followers_for_twitter_v4", "api_action": "\nAction: user_followers_for_twitter_v4\nAction Input: {\n  \"is_id\": \"44196397\",\n  \"count\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_media_and_replies_for_tweet_id_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_media_for_twitter_v4", "api_action": "\nAction: user_media_for_twitter_v4\nAction Input: {\n  \"is_id\": \"44196397\",\n  \"count\": 5\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_tweet_details_and_tweets_for_twitter_v4\",\n\t\"api_action\": \"\\nAction: get_tweet_details_and_tweets_for_twitter_v4\\nAction Input: {\\n  \\\"is_id\\\": \\\"1485953263040188416\\\",\\n  \\\"count\\\": 5,\\n  \\\"user_id\\\": \"44196397\"\\n}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "82022", "query": "I need to gather information about a particular Instagram profile. Retrieve the profile info, publications, and highlight items for the username 'cristiano'.", "api_names": ["profile_publications_for_instagram_scraper_2023_v2", "profile_highlights_for_instagram_scraper_2023_v2", "profile_info_for_instagram_scraper_2023_v2", "Finish", "retrieve_a_collection_for_opensea_v2", "headphones_for_amazon_api_v2", "series_list_archives_for_cricbuzz_cricket", "getallorders_for_ecartapi", "ip_for_ip_geo_location_and_ip_reputation", "infos_for_deezer", "reverse_for__forward_reverse_geocoding_by_googlemap_api", "get_airplane_details_for_travel_hacking_tool", "historical_exchange_rates_for_exchangeratespro", "is_weekday_for_daysapi", "get_weather_for_weather_with_ai", "get_all_product_for_product", "get_desserts_by_there_id_for_beverages_and_desserts", "get_user_orders_for__onboarding_project_v3", "coins_get_brief_chart_for_investing_cryptocurrency_markets", "get_recurring_characters_for_new_girl"], "api_descs": {"Finish": "No description available.", "coins_get_brief_chart_for_investing_cryptocurrency_markets": "Get brief information chart of specific cryptocurrency", "get_airplane_details_for_travel_hacking_tool": "This endpoint returns a list of airplanes and other means of transportation to match GDS responses.", "get_all_product_for_product": "get all products", "get_desserts_by_there_id_for_beverages_and_desserts": "Get Desserts by there Id", "get_recurring_characters_for_new_girl": "This endpoint gets the recurring characters within the show.", "get_user_orders_for__onboarding_project_v3": " ", "get_weather_for_weather_with_ai": "Return weather in current, hourly and daily info.", "getallorders_for_ecartapi": "<p><b>Note:</b><br>\nFilters are available depending of the ecommerce\n</p>", "headphones_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required", "historical_exchange_rates_for_exchangeratespro": "Access over two decades of historical exchange rate data with the /historical endpoint. Exchange rates are provided as daily end of day exchange rates dating back all the way to 1999. Choose the day with the 'date' parameter.", "infos_for_deezer": "Get the infos about the api in the current country", "ip_for_ip_geo_location_and_ip_reputation": "Returns all data for the provided IP", "is_weekday_for_daysapi": "Endpoint will return True or False of date entered is a weekday.\n\nIf date is a Saturday or Sunday, then `false` will be returned.", "profile_highlights_for_instagram_scraper_2023_v2": "Profile Highlights", "profile_info_for_instagram_scraper_2023_v2": "Profile Info", "profile_publications_for_instagram_scraper_2023_v2": "Profile Publications", "retrieve_a_collection_for_opensea_v2": "This endpoint is used to retrieve more in-depth information about an individual collection, including real time statistics such as floor price.", "reverse_for__forward_reverse_geocoding_by_googlemap_api": " ", "series_list_archives_for_cricbuzz_cricket": "List archived series"}, "aseqs": [{"api_name": "profile_info_for_instagram_scraper_2023_v2", "api_action": "\nAction: profile_info_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "profile_publications_for_instagram_scraper_2023_v2", "api_action": "\nAction: profile_publications_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "profile_highlights_for_instagram_scraper_2023_v2", "api_action": "\nAction: profile_highlights_for_instagram_scraper_2023_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "profile_info_for_instagram_scraper_2023_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "profile_publications_for_instagram_scraper_2023_v2", "api_action": "\nAction: profile_publications_for_instagram_scraper_2023_v2\nAction Input: {\"username\": \"cristiano\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "profile_highlights_for_instagram_scraper_2023_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "profile_info_for_instagram_scraper_2023_v2", "api_action": "\nAction: profile_info_for_instagram_scraper_2023_v2\nAction Input: { 'username': 'cristiano' }", "api_reaction": null}}]}
{"URL": "44782", "query": "I'm organizing a hiking trip and I need to find the coordinates for the starting point. Can you help me by providing the latitude and longitude for the address '321 Mountain View Drive'? Additionally, I would like to get the address for the coordinates (37.9838, 23.7275).", "api_names": ["Finish", "reverse_geocode_for_geocode_forward_and_reverse", "forward_geocode_for_geocode_forward_and_reverse", "change_for_global_market_indices_data", "get_channels_for_60k_radio_stations", "helloworld_for_mydailyinspiration", "get_all_district_capital_for_district_capitals_in_ghana", "define_for_wordnet_search", "getpetbyid_for_my_api_12345", "vehicle_information_for_vehicle_rc_information_v2", "authentication_status_for_sagenda_v3", "player_heatmap_for_sofascores", "best_of_the_day_for_morpheus_predictions_", "get_monthly_top_100_movies_torrents_for_movie_tv_music_search_and_download", "reviews_list_for_yummly"], "api_descs": {"Finish": "No description available.", "authentication_status_for_sagenda_v3": "You can use this endpoint to check whether your authentication token is valid. Responds with HTTP 200, API version and list of available claims for a token (for reference)", "best_of_the_day_for_morpheus_predictions_": "Bet prediction for day", "change_for_global_market_indices_data": "Get the symbol change over the period of time(1DAY, 7DAYS, 1MONTH, 3MONTHS, 6MONTHS, 1YEAR )", "define_for_wordnet_search": "Defines the word", "forward_geocode_for_geocode_forward_and_reverse": "Get lat,lng coordinates from an address.", "get_all_district_capital_for_district_capitals_in_ghana": "The endpoint retrieves all the district capitals", "get_channels_for_60k_radio_stations": "Get channel list", "get_monthly_top_100_movies_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Movies Torrents", "getpetbyid_for_my_api_12345": "Returns a single pet", "helloworld_for_mydailyinspiration": "Test the API", "player_heatmap_for_sofascores": "Get a player's heatmap", "reverse_geocode_for_geocode_forward_and_reverse": "Get an address from a lat,lng coordinate.", "reviews_list_for_yummly": "List reviews, feedback from other users", "vehicle_information_for_vehicle_rc_information_v2": "Fetch Vehicle Information using Registration Number."}, "aseqs": [{"api_name": "forward_geocode_for_geocode_forward_and_reverse", "api_action": "\nAction: forward_geocode_for_geocode_forward_and_reverse\nAction Input: {\n  \"address\": \"321 Mountain View Drive\"\n}", "api_reaction": null}, {"api_name": "reverse_geocode_for_geocode_forward_and_reverse", "api_action": "\nAction: reverse_geocode_for_geocode_forward_and_reverse\nAction Input: {\n  \"lat\": 37.9838,\n  \"lng\": 23.7275\n}", "api_reaction": null}, {"api_name": "forward_geocode_for_geocode_forward_and_reverse", "api_action": "\nAction: forward_geocode_for_geocode_forward_and_reverse\nAction Input: {\n  \"address\": \"Pl. Omonias 20, Athina 105 52, Greece\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "forward_geocode_for_geocode_forward_and_reverse"}}, {"state": "generated_by_agent", "aseq": {"api_name": "forward_geocode_for_geocode_forward_and_reverse"}}, {"state": "generated_by_agent", "aseq": {"api_name": "forward_geocode_for_geocode_forward_and_reverse"}}, {"state": "generated_by_agent", "aseq": {"api_name": "forward_geocode_for_geocode_forward_and_reverse"}}]}
{"URL": "30713", "query": "I want to integrate Vizor Ads into my website. Can you provide me with the details of my existing embed record with the slug '7dW8zGbP'? Additionally, inform me if the Vizor Ads API server is currently running.", "api_names": ["api_status_for_vizor_ads", "show_for_vizor_ads", "Finish", "zipcode_by_city_for_geosource_api", "transfers_for_football_v2", "hitting_leaders_for_mlb_data", "auto_complete_for_divanscore", "tips_list_for_tasty", "get_tag_for_churchapp", "fetchalltrips_for_sim_based_location_tracking", "hashtag_feed_by_id_for_tiktok_solutions", "stagesubstages_for_motorsportapi"], "api_descs": {"Finish": "No description available.", "api_status_for_vizor_ads": "Check API server is running or not", "auto_complete_for_divanscore": "Get suggestions by term or phrase", "fetchalltrips_for_sim_based_location_tracking": "This endpoint is for fetching all trips ", "get_tag_for_churchapp": "This will return data for a specific tag with the defined ID", "hashtag_feed_by_id_for_tiktok_solutions": "Get **Hashtag Feed **by **ID**", "hitting_leaders_for_mlb_data": "Retrieve n leaders for a given hitting statistic.  This endpoint is best used alongside col_in/col_ex to prune response data. Without, it returns entire player objects.  For best results, include the player’s name, id, and the stat as a starting point.  See: Using col_in & col_ex", "show_for_vizor_ads": "Get details of your existing embed records using it's unique slug", "stagesubstages_for_motorsportapi": "Get all substages of a specific Motorsport stage.", "tips_list_for_tasty": "This endpoint is used to load tips (reviews)", "transfers_for_football_v2": "Get a list of transfers for the current season", "zipcode_by_city_for_geosource_api": "Retrives the zip code/codes of the city ( must be in the supported countries list [ 44 countries ])."}, "aseqs": [{"api_name": "show_for_vizor_ads", "api_action": "\nAction: show_for_vizor_ads\nAction Input: {\n  \"slug\": \"7dW8zGbP\"\n}", "api_reaction": null}, {"api_name": "api_status_for_vizor_ads", "api_action": "\nAction: api_status_for_vizor_ads\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "show_for_vizor_ads"}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_status_for_vizor_ads"}}, {"state": "generated_by_agent", "aseq": {"api_name": "show_for_vizor_ads"}}]}
{"URL": "64875", "query": "I am a fashion blogger and I need some inspiration for outfit ideas and styling tips. Can you search for pins related to fashion trends and outfit inspirations? Additionally, I would like to get the profile information of my favorite fashion influencer's Pinterest account to see their saved pins and boards.", "api_names": ["search_pins_for_pinterest_scraper", "get_profile_info_for_pinterest_scraper", "get_pin_info_for_pinterest_scraper", "Finish", "helloworld_for_mydailyinspiration", "products_v2_get_filters_for_sephora", "trending_testnets_for_top_nft_collections", "getuserbyname_for_team_petstore", "categorize_job_title_for_job_title_categorization", "user_by_id_for_reqres_dont_change_", "state_by_id_for_referential", "matchhighlights_for_icehockeyapi", "retrieve_rewards_for_blur", "fetchlatestnav_for_latest_mutual_fund_nav", "list_previously_used_emails_for_coinbase", "burgers_for_burgers_hub", "shipping_id_for_aliexpress_unofficial", "productos_for_capacitacionangular", "locations_v2_auto_complete_for_the_fork_the_spoon", "query_for_city_boundary_by_city_name_for_ca_boundaries_io"], "api_descs": {"Finish": "No description available.", "burgers_for_burgers_hub": "This endpoint returns all the burgers", "categorize_job_title_for_job_title_categorization": "Easily categorize any job title", "fetchlatestnav_for_latest_mutual_fund_nav": "Fetch Latest NAV", "get_pin_info_for_pinterest_scraper": "Get Pin Info", "get_profile_info_for_pinterest_scraper": "Get Profile Info", "getuserbyname_for_team_petstore": "Get user by user name", "helloworld_for_mydailyinspiration": "Test the API", "list_previously_used_emails_for_coinbase": "List emails the user has previously used for autocompletion.", "locations_v2_auto_complete_for_the_fork_the_spoon": "Get suggestion for locations by term or phrase", "matchhighlights_for_icehockeyapi": "Get the highlights for a specific Ice Hockey match using the match id.", "productos_for_capacitacionangular": "Productos prueba", "products_v2_get_filters_for_sephora": "Generate the filter panel dynamically", "query_for_city_boundary_by_city_name_for_ca_boundaries_io": "Query for City Boundary by City name", "retrieve_rewards_for_blur": "This endpoint is used to retrieve if bid rewards\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "search_pins_for_pinterest_scraper": "Search Pins", "shipping_id_for_aliexpress_unofficial": " ", "state_by_id_for_referential": "Lookup sub-regions/states/provinces/departments by iso 3166-2 code", "trending_testnets_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings/trending", "user_by_id_for_reqres_dont_change_": "User by id"}, "aseqs": [{"api_name": "search_pins_for_pinterest_scraper", "api_action": "\nAction: search_pins_for_pinterest_scraper\nAction Input: {\n  \"keyword\": \"fashion trends outfit inspirations\"\n}", "api_reaction": null}, {"api_name": "get_profile_info_for_pinterest_scraper", "api_action": "\nAction: get_profile_info_for_pinterest_scraper\nAction Input: {\n  \"username\": \"fashion_influencer\"\n}", "api_reaction": null}, {"api_name": "search_pins_for_pinterest_scraper", "api_action": "\nAction: search_pins_for_pinterest_scraper\nAction Input: {\n  \"keyword\": \"fashion influencer\"\n}", "api_reaction": null}, {"api_name": "get_pin_info_for_pinterest_scraper", "api_action": "\nAction: get_pin_info_for_pinterest_scraper\nAction Input: {\n  \"shortcode\": \"pin12345\"\n}", "api_reaction": null}, {"api_name": "get_pin_info_for_pinterest_scraper", "api_action": "\nAction: get_pin_info_for_pinterest_scraper\nAction Input: {\n  \"shortcode\": \"pin56789\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_pins_for_pinterest_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profile_info_for_pinterest_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_pins_for_pinterest_scraper", "api_action": "\nAction: search_pins_for_pinterest_scraper\nAction Input: {\n  \"keyword\": \"fashion trends outfit inspirations\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_pins_for_pinterest_scraper", "api_action": "\nAction: search_pins_for_pinterest_scraper\nAction Input: {\n  \"keyword\": \"fashion blogger outfit inspiration\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_pins_for_pinterest_scraper", "api_action": "\nAction: search_pins_for_pinterest_scraper\nAction Input: {\n  \"keyword\": \"fashion influencer\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_pins_for_pinterest_scraper", "api_action": "\nAction: search_pins_for_pinterest_scraper\nAction Input: {\n  \"keyword\": \"fashion trends outfit inspirations\"\n}", "api_reaction": null}}]}
{"URL": "49621", "query": "My company is organizing a Mexican food festival and we need a variety of recipes. Can you give me a list of Mexican foods with their images and IDs? Additionally, provide the detailed recipe for a dish that is suitable for a large gathering.", "api_names": ["list_of_foods_for_the_mexican_food_db", "detailed_food_recipe_by_id_for_the_mexican_food_db", "Finish", "latest_10_drawings_for_cash4life", "get_news_for_india_today_unofficial", "mediterranean_ingredient_for_recipe_finder", "get_a_list_of_suburbs_for_australian_postcode_to_suburb", "artist_discography_overview_for_spotify_web", "availability_for_kayuloweather", "handball_predictions_by_day_for_betigolo_predictions", "get_life_skill_tool_recipes_for_lost_ark_simple", "tokens_for_crypto_market_data_from_token_metrics"], "api_descs": {"Finish": "No description available.", "artist_discography_overview_for_spotify_web": "Get artist discography overview", "availability_for_kayuloweather": "Determine the data sets available for the specified location.", "detailed_food_recipe_by_id_for_the_mexican_food_db": "Mexican Food Recipe by ID", "get_a_list_of_suburbs_for_australian_postcode_to_suburb": "This endpoint will return all matching suburbs for the passed postcode. The response also includes the state for each suburb and, if available, latitude and longitude for the suburb.", "get_life_skill_tool_recipes_for_lost_ark_simple": "Get List of Lost Ark Life Skill Tool Recipes", "get_news_for_india_today_unofficial": "All Latest news from India Today Platform", "handball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.", "latest_10_drawings_for_cash4life": "Latest 10 Cash4Life drawings", "list_of_foods_for_the_mexican_food_db": "This endpoint responds with a list of mexican foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe.", "mediterranean_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random mediterranean  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "tokens_for_crypto_market_data_from_token_metrics": "Get tokens"}, "aseqs": [{"api_name": "list_of_foods_for_the_mexican_food_db", "api_action": "\nAction: list_of_foods_for_the_mexican_food_db\nAction Input: {}", "api_reaction": null}, {"api_name": "detailed_food_recipe_by_id_for_the_mexican_food_db", "api_action": "\nAction: detailed_food_recipe_by_id_for_the_mexican_food_db\nAction Input: {\n  \"is_id\": \"4\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_of_foods_for_the_mexican_food_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detailed_food_recipe_by_id_for_the_mexican_food_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_of_foods_for_the_mexican_food_db"}}]}
{"URL": "7392", "query": "I'm organizing a dinner event for my family and I need the menu details. Please provide me with the menu details in Chinese. The menu ID is 5a76c927bb5d660001e09731. Additionally, I would like to know the details of the venue where the event will be held. The venue ID is 56c467cb7b0d464811a42017 and I need the details in Chinese.", "api_names": ["venuedetails_for_testing_v2", "menudetails_for_testing_v2", "Finish", "get_all_food_typen_for_food_price_inflation", "csw21_for_word_tree", "sponge_bob_for_memeados", "get_brands_for_top_brand_names_valuation_api", "get_random_100_questions_for_ase_s_quiz_api", "get_global_indices_by_price_for_global_stock_market_api_data", "get_default_rich_menu_id_for_line_messaging", "geteventsid_for_wosti_futbol_tv_peru", "dailyweatherseries_for_history", "suggested_videos_for_youtube_v3_v2", "get_per_game_post_season_for_nba_stats_v2", "years_for_car_api"], "api_descs": {"Finish": "No description available.", "csw21_for_word_tree": "Search for words using Collins Scrabble Words 2021 lexicon.", "dailyweatherseries_for_history": "This endpoint returns the historical weather for a given series of days for a given location (latitude and longitude)", "get_all_food_typen_for_food_price_inflation": "Get all the food typen from our Data.", "get_brands_for_top_brand_names_valuation_api": "Get the brand data", "get_default_rich_menu_id_for_line_messaging": "Gets the ID of the default rich menu set with the Messaging API.", "get_global_indices_by_price_for_global_stock_market_api_data": "World financial market to get global Indices with respect to price", "get_per_game_post_season_for_nba_stats_v2": "Api to query per game post season", "get_random_100_questions_for_ase_s_quiz_api": "Get random 100 questions", "geteventsid_for_wosti_futbol_tv_peru": "Obtener el evento por identificador único  del listado de eventos de partidos de fútbol televisados en Perú.\n\n> Este endpoints requiere de un parámetro denominado Id.", "menudetails_for_testing_v2": "Menu API", "sponge_bob_for_memeados": "Generate Sponge Bob meme", "suggested_videos_for_youtube_v3_v2": "Get Similar videos", "venuedetails_for_testing_v2": "Venue Details", "years_for_car_api": "For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Scion\", \"Tesla\"]}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed search fields are: `year`, `make`, `model`, `trim`, `make_id`, and `make_model_id`."}, "aseqs": [{"api_name": "menudetails_for_testing_v2", "api_action": "\nAction: menudetails_for_testing_v2\nAction Input: {\n  \"lang\": \"Chinese\",\n  \"is_id\": \"5a76c927bb5d660001e09731\"\n}", "api_reaction": null}, {"api_name": "venuedetails_for_testing_v2", "api_action": "\nAction: venuedetails_for_testing_v2\nAction Input: {\n  \"is_id\": \"56c467cb7b0d464811a42017\",\n  \"lang\": \"Chinese\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "menudetails_for_testing_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "venuedetails_for_testing_v2", "api_action": "\nAction: venuedetails_for_testing_v2\nAction Input: {\n  \"lang\": \"Chinese\",\n  \"is_id\": \"56c467cb7b0d464811a42017\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "menudetails_for_testing_v2", "api_action": "\nAction: menudetails_for_testing_v2\nAction Input: {\n  \"lang\": \"Chinese\",\n  \"is_id\": \"5a76c927bb5d660001e09731\"\n}", "api_reaction": null}}]}
{"URL": "56973", "query": "I'm organizing a cat-themed event and I want to include some fun cat facts in the program. Can you give me a random cat fact? Also, it would be helpful if you could share all the available cat facts in your database.", "api_names": ["get_all_facts_about_cat_for_cat_facts", "get_a_random_fact_about_cats_for_cat_facts", "Finish", "get_detailed_data_for_all_county_equivalents_for_us_counties", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits", "video_info_for_tiktok_v3", "comments_list_deprecated_for_seeking_alpha", "getportfoliosettlements_for_kalshi_trading_api", "alliance_data_in_json_format_for_flight_data_v2", "restaurants_for_halal_korean_restaurants_api", "max_historical_daily_prices_for_stock_prices", "get_random_joke_for_retrieve_info", "random_girl_group_for_k_pop", "charts_get_top_songs_in_world_for_shazam_api", "location_search_for_instagram_v5", "aliexpress_store_info_for_aliexpress_datahub", "tsv6_for_odam", "exchanges_list_for_trading_view"], "api_descs": {"Finish": "No description available.", "aliexpress_store_info_for_aliexpress_datahub": "All details of a single item.", "alliance_data_in_json_format_for_flight_data_v2": "API returns a file with a list of alliances from the database", "charts_get_top_songs_in_world_for_shazam_api": "get top songs in world", "comments_list_deprecated_for_seeking_alpha": "List all comments relating to a post or article or news", "exchanges_list_for_trading_view": "List all available and supported exchanges", "get_a_random_fact_about_cats_for_cat_facts": "This endpoint returns a random fact about cats", "get_all_facts_about_cat_for_cat_facts": "This endpoint returns all available fact about cats in our database.", "get_detailed_data_for_all_county_equivalents_for_us_counties": "county", "get_random_joke_for_retrieve_info": "to get random joke", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 1 week intervals.", "getportfoliosettlements_for_kalshi_trading_api": "Endpoint for getting the logged-in member's settlements historical track.", "location_search_for_instagram_v5": "Get Instagram locations by keyword.", "max_historical_daily_prices_for_stock_prices": "Max historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "random_girl_group_for_k_pop": "Get random girl-group", "restaurants_for_halal_korean_restaurants_api": "Lists of halal restaurants in korea", "tsv6_for_odam": "Get the variable list within the specified category of a merged data subsets along with the metadata\n", "video_info_for_tiktok_v3": "get video information by video_id"}, "aseqs": [{"api_name": "get_a_random_fact_about_cats_for_cat_facts", "api_action": "\nAction: get_a_random_fact_about_cats_for_cat_facts\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_facts_about_cat_for_cat_facts", "api_action": "\nAction: get_all_facts_about_cat_for_cat_facts\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_a_random_fact_about_cats_for_cat_facts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_facts_about_cat_for_cat_facts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_facts_about_cat_for_cat_facts"}}]}
{"URL": "2064", "query": "I want to explore different surf destinations around the world. Could you provide me with a list of countries with surf breaks and their corresponding surf forecasts? It would be great to have detailed forecasts for specific surf breaks as well.", "api_names": ["getsurfbreaksbycountry_for_simple_surf_forecast_api", "getcountries_for_simple_surf_forecast_api", "getforecastbyid_for_simple_surf_forecast_api", "Finish", "progress_for_omniinfer", "getbycords_for_electric_vehicle_charging_stations", "categories_list_for_amazon_data_v2", "delete_for_tripit", "v1_folderid_payments_for_sertifi_esignature_and_epayment", "daily_derby_recent_for_ca_lottery", "swift_codes_by_country_for_bank_swift_codes", "noname_for_bing_translate", "property_for_unicode_codepoints", "stock_cashflow_statement_for_yahoo_finance_v2", "getchannelvideos_for_youtube_search_v3", "getinventory_for_my_api_12345"], "api_descs": {"Finish": "No description available.", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "daily_derby_recent_for_ca_lottery": "Most recent draw for Daily Derby", "delete_for_tripit": "A delete request is used to delete existing objects", "getbycords_for_electric_vehicle_charging_stations": "Uses Latitude & Longitude to get near by electric charging stations", "getchannelvideos_for_youtube_search_v3": "Retrieve a comprehensive list of videos associated with a specific channel", "getcountries_for_simple_surf_forecast_api": " ", "getforecastbyid_for_simple_surf_forecast_api": " ", "getinventory_for_my_api_12345": "Returns a map of status codes to quantities", "getsurfbreaksbycountry_for_simple_surf_forecast_api": " ", "noname_for_bing_translate": "Không có gì", "progress_for_omniinfer": "This page will help you get started with text to image. Support ControlNet.", "property_for_unicode_codepoints": "Show one Property for All Codepoints", "stock_cashflow_statement_for_yahoo_finance_v2": "Get stock cash flow statements.", "swift_codes_by_country_for_bank_swift_codes": "Returns list of SWIFT codes for a country (use two letter ISO country code)", "v1_folderid_payments_for_sertifi_esignature_and_epayment": " "}, "aseqs": [{"api_name": "getcountries_for_simple_surf_forecast_api", "api_action": "\nAction: getcountries_for_simple_surf_forecast_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getcountries_for_simple_surf_forecast_api", "api_action": "\nAction: getcountries_for_simple_surf_forecast_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api", "api_action": "\nAction: getsurfbreaksbycountry_for_simple_surf_forecast_api\nAction Input: {\n  \"countryid\": \"f2086a77-07a1-491a-bac3-0084cf6b0d4d\"\n}", "api_reaction": null}, {"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "\nAction: getforecastbyid_for_simple_surf_forecast_api\nAction Input: {\n  \"spotid\": \"00d1a2e7-e13f-4250-83fd-cc6c380b8af0\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to fetch a list of countries with surf breaks and their corresponding surf forecasts.", "api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getsurfbreaksbycountry_for_simple_surf_forecast_api\",\n\t\"api_action\": \"\\nAction: getsurfbreaksbycountry_for_simple_surf_forecast_api\\nAction Input: {\"countries\": [\"US\", \"FR\"]}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getforecastbyid_for_simple_surf_forecast_api", "api_action": "\nAction: getforecastbyid_for_simple_surf_forecast_api\nAction Input: {\n  \"countryid\": \"f2086a77-07a1-491a-bac3-0084cf6b0d4d\",\n  \"surfbreakid\": \"ff0751c5-6109-4a4b-9c4e-fdbf6ae428af\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountries_for_simple_surf_forecast_api"}}]}
{"URL": "62347", "query": "I'm planning a vacation with my family and we need help finding flights and vacation rentals. Can you search for flights from New York to Paris with a stopover in London on December 18th, and then return from Paris to New York on December 26th? Also, find vacation rentals in Paris for the same dates.", "api_names": ["search_flights_multicity_for_tripadvisor", "rental_search_for_tripadvisor", "Finish", "data_by_id_for_mongodb_wix", "list_projects_for_textking_translation", "hashtag_feed_by_name_for_tiktok_solutions", "by_coordinates_for_ambee_air_quality", "api_roe_for_finanzoo_api_fundamentals", "allforms_for_acopaer", "get_users_id_3449a5e3_22f0_4216_bb83_c737b2cef1b0_for_the_south_asian_express", "latest_news_for_philippine_news", "auto_complete_for_realty_in_au", "search_for_geo_coder_dev", "get_all_recipes_3_for_comfyfood", "blogs_for_spaceflight_news", "get_categories_for__demo_project_v13", "get_best_player_for_viperscore", "fights_for_spectation_sports_events_api"], "api_descs": {"Finish": "No description available.", "allforms_for_acopaer": "# Description GET All Forms\r\n\r\nThis url is to get all Forms created is type `GET`, the url is `BASE_URL/forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "api_roe_for_finanzoo_api_fundamentals": "Contains the equity ratio (ROE ratio) for the financial year.\n\nAPI_Roe\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0", "auto_complete_for_realty_in_au": "Get suggestions by term or phrase. The returned data will be used with .../properties/list endpoint", "blogs_for_spaceflight_news": " ", "by_coordinates_for_ambee_air_quality": "Get nearest places readings based around the given latitude and longitude", "data_by_id_for_mongodb_wix": "Returns data (case) by id", "fights_for_spectation_sports_events_api": "Fetch fights for upcoming/previous events", "get_all_recipes_3_for_comfyfood": "return more recipes", "get_best_player_for_viperscore": "\"Get best player\" will return the best player of each team with their rating.", "get_categories_for__demo_project_v13": " ", "get_users_id_3449a5e3_22f0_4216_bb83_c737b2cef1b0_for_the_south_asian_express": "Get Single User", "hashtag_feed_by_name_for_tiktok_solutions": "Get **Hashtag Feed **by **Name**", "latest_news_for_philippine_news": "Get the latest news and stories from different sources", "list_projects_for_textking_translation": "Returns a collection of projects of the authorized customer.", "rental_search_for_tripadvisor": "-", "search_flights_multicity_for_tripadvisor": "-", "search_for_geo_coder_dev": "Search addresses"}, "aseqs": [{"api_name": "search_flights_multicity_for_tripadvisor", "api_action": "\nAction: search_flights_multicity_for_tripadvisor\nAction Input: {\n  \"sortorder\": \"asc\",\n  \"classofservice\": \"economy\",\n  \"legs\": \"[{\\\"sourceAirportCode\\\":\\\"JFK\\\",\\\"destinationAirportCode\\\":\\\"LHR\\\",\\\"date\\\":\\\"2022-12-18\\\"},{\\\"sourceAirportCode\\\":\\\"LHR\\\",\\\"destinationAirportCode\\\":\\\"CDG\\\",\\\"date\\\":\\\"2022-12-26\\\"},{\\\"sourceAirportCode\\\":\\\"CDG\\\",\\\"destinationAirportCode\\\":\\\"JFK\\\",\\\"date\\\":\\\"2022-12-26\\\"}]\"\n}", "api_reaction": null}, {"api_name": "search_flights_multicity_for_tripadvisor", "api_action": "\nAction: search_flights_multicity_for_tripadvisor\nAction Input: {\n  \"sortorder\": \"asc\",\n  \"classofservice\": \"economy\",\n  \"legs\": \"[{\\\"sourceAirportCode\\\":\\\"JFK\\\",\\\"destinationAirportCode\\\":\\\"LHR\\\",\\\"date\\\":\\\"2022-12-18\\\"},{\\\"sourceAirportCode\\\":\\\"LHR\\\",\\\"destinationAirportCode\\\":\\\"CDG\\\",\\\"date\\\":\\\"2022-12-26\\\"},{\\\"sourceAirportCode\\\":\\\"CDG\\\",\\\"destinationAirportCode\\\":\\\"JFK\\\",\\\"date\\\":\\\"2022-12-26\\\"}]\"\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"arrival\": \"2022-12-18\",\n  \"sortorder\": \"asc\",\n  \"geoid\": \"187147\",\n  \"departure\": \"2022-12-26\"\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"arrival\": \"2022-12-18\",\n  \"sortorder\": \"POPULARITY\",\n  \"geoid\": \"187147\",\n  \"departure\": \"2022-12-26\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_flights_multicity_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_flights_multicity_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_flights_multicity_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_flights_multicity_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_flights_multicity_for_tripadvisor"}}]}
{"URL": "26106", "query": "I'm a teacher and I'm looking for educational ebooks for my students. Can you help me find ebooks with the 'pdf' extension and sort them by date in ascending order? Also, discover any file links related to the domain 'www.educationresources.com'.", "api_names": ["Finish", "pursuit_for_filepursuit", "discover_for_filepursuit", "get_english_alt_text_for_alt_bichinhos", "stochastic_for_qvantana", "newly_listed_for_cryptocurrency_markets", "getlatestfeedversion_for_transitfeeds", "get_binary_image_set_for_midjourney", "get_token_forwarding_wallets_for_token_forwarding", "covid_19_india_data_state_and_district_wise_for_corona_virus_world_and_india_data", "quotes_city_correo_argentino_weight_stateisocodesrc_normalizecitynamesrc_stateisocodedst_normalizecitynamedst_for_transportistas_de_argentina", "hashtag_feed_for_100_success_instagram_api_scalable_robust"], "api_descs": {"Finish": "No description available.", "covid_19_india_data_state_and_district_wise_for_corona_virus_world_and_india_data": "COVID-19 India data state and district wise", "discover_for_filepursuit": "Discover every file crawled by FilePursuit using links and domains", "get_binary_image_set_for_midjourney": "returns requested binary image (\"image/png\"). Full image set", "get_english_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **English.**", "get_token_forwarding_wallets_for_token_forwarding": "Get token forwarding wallets", "getlatestfeedversion_for_transitfeeds": "", "hashtag_feed_for_100_success_instagram_api_scalable_robust": "Get hashtag feed", "newly_listed_for_cryptocurrency_markets": "Recently listed cryptocurrencies.", "pursuit_for_filepursuit": "Search for a query in file names and path", "quotes_city_correo_argentino_weight_stateisocodesrc_normalizecitynamesrc_stateisocodedst_normalizecitynamedst_for_transportistas_de_argentina": "List of quote for iso state and city keyword name in Correo Argentino.", "stochastic_for_qvantana": "Stochastic indicator"}, "aseqs": [{"api_name": "pursuit_for_filepursuit", "api_action": "\nAction: pursuit_for_filepursuit\nAction Input: {\n  \"q\": \"educational ebooks\",\n  \"filetype\": \"pdf\",\n  \"sort\": \"dateasc\"\n}", "api_reaction": null}, {"api_name": "discover_for_filepursuit", "api_action": "\nAction: discover_for_filepursuit\nAction Input: {}", "api_reaction": null}, {"api_name": "discover_for_filepursuit", "api_action": "\nAction: discover_for_filepursuit\nAction Input: {}", "api_reaction": null}, {"api_name": "pursuit_for_filepursuit", "api_action": "\nAction: pursuit_for_filepursuit\nAction Input: {\n  \"q\": \"educational ebooks\",\n  \"filetype\": \"pdf\",\n  \"sort\": \"dateasc\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_binary_image_set_for_midjourney"}}, {"state": "generated_by_agent", "aseq": {"api_name": "discover_for_filepursuit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_pdf_files_and_sort_by_date"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_binary_image_set_for_midjourney", "api_action": "\nAction: get_binary_image_set_for_midjourney\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "pursuit_for_filepursuit"}}]}
{"URL": "18989", "query": "I'm a fantasy sports player and I need to stay updated on the latest scores and odds. Can you give me a list of live and upcoming games for the NFL? I want to know the scores and bookmaker odds for each game.", "api_names": ["Finish", "v4_sports_for_live_sports_odds", "v4_sports_sport_odds_for_live_sports_odds", "v4_sports_sport_scores_for_live_sports_odds", "get_intervals_for_tradingview_ta_api_technical_analysis_", "subject_for_dcps_project", "playerimage_for_americanfootballapi", "docs_for_quality_porn", "v1_category_for_tokapi_mobile_version", "lookup_for_ip_directory", "get_historical_nft_balances_for_uniblock", "get_all_food_for_ghana_food_recipe_api", "qrcodepro_for_qrcodeutils", "getpeople_for_powerbi", "best_sign_1_for_morpheus_predictions_", "flights_get_more_info_for_flight_radar", "solat_list_for_waktu_solat", "ymm_for_autoymm", "product_reviews_for_real_time_amazon_data", "praise_for_humor_jokes_and_memes"], "api_descs": {"Finish": "No description available.", "best_sign_1_for_morpheus_predictions_": "Today's best 1 sign", "docs_for_quality_porn": "Get available routs and parameters as json.", "flights_get_more_info_for_flight_radar": "Get more information of specific aircraft, flight, airline, etc...", "get_all_food_for_ghana_food_recipe_api": "This endpoint gets all Ghanaian food along with ingredients and a short description. Each page supplies 5 payload, use the parameter ?page=(page number) to access other pages. Example. url?page=2", "get_historical_nft_balances_for_uniblock": "Gets the user's historical NFT balance records.", "get_intervals_for_tradingview_ta_api_technical_analysis_": "Get valid intervals.", "getpeople_for_powerbi": "Get Power BI influencers.", "lookup_for_ip_directory": "This is the only endpoint available to this API. It accepts an IP Address and returns all available associated data.", "playerimage_for_americanfootballapi": "Get the PNG image of an American Football player using their ID.", "praise_for_humor_jokes_and_memes": "Praise somebody for doing something.\nSee https://humorapi.com/docs/#Praise for more.", "product_reviews_for_real_time_amazon_data": "Get and paginate through all product reviews on Amazon.", "qrcodepro_for_qrcodeutils": "Pro QR Code Barcode Generator", "solat_list_for_waktu_solat": "List of zones in each state along with the zone code.\nData in json format.", "subject_for_dcps_project": "filters data by subject input", "v1_category_for_tokapi_mobile_version": "Trending categories list", "v4_sports_for_live_sports_odds": "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints.", "v4_sports_sport_odds_for_live_sports_odds": "Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html).", "v4_sports_sport_scores_for_live_sports_odds": "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)", "ymm_for_autoymm": "Year Make Model"}, "aseqs": [{"api_name": "v4_sports_sport_scores_for_live_sports_odds", "api_action": "\nAction: v4_sports_sport_scores_for_live_sports_odds\nAction Input: {\n\"sport\": \"nfl\"\n}", "api_reaction": null}, {"api_name": "v4_sports_for_live_sports_odds", "api_action": "\nAction: v4_sports_for_live_sports_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "v4_sports_sport_odds_for_live_sports_odds", "api_action": "\nAction: v4_sports_sport_odds_for_live_sports_odds\nAction Input: {\n\"sport\": \"americanfootball_nfl\",\n\"regions\": \"us,uk,eu,aus\",\n\"markets\": \"h2h\"\n}", "api_reaction": null}, {"api_name": "v4_sports_sport_odds_for_live_sports_odds", "api_action": "\nAction: v4_sports_sport_odds_for_live_sports_odds\nAction Input: {\n\"sport\": \"americanfootball_nfl\",\n\"regions\": \"us\",\n\"markets\": \"h2h\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_odds_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_odds_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_odds_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_scores_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_scores_for_live_sports_odds"}}]}
{"URL": "76034", "query": "My friends and I are participating in a language competition, and we need to find entries in the Lexicala dictionary that have multiple meanings. Can you assist us by searching for polysemous entries? Please include the language code and grammatical gender for each entry.", "api_names": ["Finish", "searchentries_for_lexicala", "timeseries_id_retrieve_for_palmy_investing_api", "top_hashtags_for_hashtag", "trending_creators_for_tiktok_private", "crimes_at_location_for_data_police_uk", "getpercentage_for_text_similarity_calculator", "get_all_draws_for_euro_millions", "recent_quotes_by_pagination_for_10000_anime_quotes_with_pagination_support", "get_coin_price_for_coinranking"], "api_descs": {"Finish": "No description available.", "crimes_at_location_for_data_police_uk": "Returns just the crimes which occurred at the specified location, rather than those within a radius. If given latitude and longitude, finds the nearest pre-defined location and returns the crimes which occurred there.", "get_all_draws_for_euro_millions": "Get a list of all draws dates available in the API", "get_coin_price_for_coinranking": "With the price endpoint the price can be requested for a specific coin on a specific time. The response is just a single price nearest to the requested time, including its timestamp.", "getpercentage_for_text_similarity_calculator": "Calculate the percentage of match between two texts.", "recent_quotes_by_pagination_for_10000_anime_quotes_with_pagination_support": "Get recent anime quotes without any categorization:\nRequired GET parameter\n**page**:  1\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`", "searchentries_for_lexicala": "search for entries with filters in query", "timeseries_id_retrieve_for_palmy_investing_api": "Retrieve all important daily price information about a stock", "top_hashtags_for_hashtag": "Gets a list of all the top hashtags", "trending_creators_for_tiktok_private": "Get Trending By Creators"}, "aseqs": [{"api_name": "searchentries_for_lexicala", "api_action": "\nAction: searchentries_for_lexicala\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"api_name\": \"searchentries_for_lexicala\",\n\t\"Thought\": I need to search for polysemous entries in the Lexicala dictionary using the searchentries_for_lexicala API, and include the language code and grammatical gender parameters. Since these are not mentioned, I will assume they want English (en) and all genders.\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "searchentries_for_lexicala", "api_action": "{\"language\": \"multi\", \"filter\": \"polysemous\"}", "api_reaction": null}}]}
{"URL": "19312", "query": "My company is organizing an ice hockey event and we need the schedules of the matches for November 28, 2022. Can you provide us with this information? Additionally, we are interested in the league details for tournament ID 234.", "api_names": ["matchschedules_for_icehockeyapi", "leaguedetails_for_icehockeyapi", "Finish", "work_for_portfolio", "explore_competitions_for_soccerway_feed", "query_for_postal_code_boundary_by_postal_code_for_de_boundaries_io", "lookup_for_people_lookup", "check_balance_for_zigatext_global_bulk_sms_otp", "allforms_for_acopaer", "get_campaign_lead_from_id_for_fomoapi", "resources_per_country_for_africa_api_", "get_individual_bitcoin_news_sources_for_bitcoin_news"], "api_descs": {"Finish": "No description available.", "allforms_for_acopaer": "# Description GET All Forms\r\n\r\nThis url is to get all Forms created is type `GET`, the url is `BASE_URL/forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "check_balance_for_zigatext_global_bulk_sms_otp": "Check Balance", "explore_competitions_for_soccerway_feed": "Get a list of competitions by area_id", "get_campaign_lead_from_id_for_fomoapi": "Get ALL Lead From Your Campaign Social Proof", "get_individual_bitcoin_news_sources_for_bitcoin_news": "In this endpoint you can get informations for a specific News resource.", "leaguedetails_for_icehockeyapi": "Get the details of a specific Ice Hockey league by providing the tournament ID.", "lookup_for_people_lookup": "Lookup people by name and US state (optional)", "matchschedules_for_icehockeyapi": "Get the schedules of ice hockey matches for a given date, including match timings, teams, and other relevant information.", "query_for_postal_code_boundary_by_postal_code_for_de_boundaries_io": "Query For Postal Code Boundary by postal code.", "resources_per_country_for_africa_api_": "Gives you a list of the most important resources that an African country relies on to keep their economy running.\nTakes parameter <country_name>", "work_for_portfolio": "sdad"}, "aseqs": [{"api_name": "matchschedules_for_icehockeyapi", "api_action": "\nAction: matchschedules_for_icehockeyapi\nAction Input: {\n  \"day\": 28,\n  \"month\": 11,\n  \"year\": 2022\n}", "api_reaction": null}, {"api_name": "leaguedetails_for_icehockeyapi", "api_action": "\nAction: leaguedetails_for_icehockeyapi\nAction Input: {\n  \"tournamentid\": 234\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matchschedules_for_icehockeyapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "leaguedetails_for_icehockeyapi", "api_action": "{\"tournamentId\": 234}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "matchschedules_for_icehockeyapi", "api_action": "{\"day\": 28, \"month\": 11, \"year\": 2022}", "api_reaction": null}}]}
{"URL": "46765", "query": "I am a filmmaker and I want to download movie torrents for research purposes. Can you help me find torrents of critically acclaimed movies from different countries? Please provide the movie titles, release dates, genres, ratings, and the URLs where I can find the torrents.", "api_names": ["get_from_1337_x_for_torrent_search", "get_from_piratebay_for_torrent_search", "get_from_yts_for_torrent_search", "Finish", "downloadfile_for_groupdocs_annotation_cloud", "haber_for_kolektifapi", "og_for_explorarc_s_opengraph_crawling_api", "walk_transit_and_bike_score_for_zillow_v2", "get_all_favorite_food_for_favoritefoodapi", "get_verses_for_bible_memory_verse_flashcard", "getpetbyid_for_erictestpet", "get_currency_by_name_for_cion_prices_api", "get_all_data_from_api_for_androidapi", "groups_associated_to_a_tag_for_clickmeter", "stock_get_financial_data_for_yh_finance_v2", "get_home_details_for_trulia_real_estate_scraper", "records_for_goverlytics", "search_in_area_for_local_business_data", "trending_for_crypto_gem_finder", "get_a_hundreds_of_all_kind_of_articles_from_pluralsight_com_for_pluralsight_articles"], "api_descs": {"Finish": "No description available.", "downloadfile_for_groupdocs_annotation_cloud": " ", "get_a_hundreds_of_all_kind_of_articles_from_pluralsight_com_for_pluralsight_articles": "This endpoint will return back a data with hundreds of articles from Pluralsight.com", "get_all_data_from_api_for_androidapi": "read all data from api to show on detail screen", "get_all_favorite_food_for_favoritefoodapi": "This endpoint will return all my favorite Cameroonian dishes", "get_currency_by_name_for_cion_prices_api": "get several states of one currency prices", "get_from_1337_x_for_torrent_search": "scrape data from various torrent websites such as 1337x", "get_from_piratebay_for_torrent_search": "for piratebay", "get_from_yts_for_torrent_search": "You can use this for moive search", "get_home_details_for_trulia_real_estate_scraper": "Returns full details of home. Call **Get listing by url** or get items from *Search*. In response you'll get **url** of home. Take this url and pass it here into query. You can also go to https://www.trulia.com/AZ/Scottsdale/ and take urls e.g. https://www.trulia.com/p/az/fountain-hills/14834-e-valley-vista-dr-fountain-hills-az-85268--2113652369", "get_verses_for_bible_memory_verse_flashcard": "Takes parameters and returns requested verses", "getpetbyid_for_erictestpet": "Returns a single pet", "groups_associated_to_a_tag_for_clickmeter": "List of all the groups associated to the user and to the selected tag", "haber_for_kolektifapi": "«ntv.com.tr» Son Dakika Haberleri Verileri", "og_for_explorarc_s_opengraph_crawling_api": "The Best API to Fetch all the OpenGraph and Meta tags from an given website URL", "records_for_goverlytics": "Fetches records data", "search_in_area_for_local_business_data": "Search businesses in a specific geographic area defined by a center coordinate point and zoom level. To see it in action, make a query on Google Maps, wait for the results to show, move the map or change the zoom and click \"Search this area\" at the top.", "stock_get_financial_data_for_yh_finance_v2": "return stock financial information", "trending_for_crypto_gem_finder": "get trending coins", "walk_transit_and_bike_score_for_zillow_v2": "Get Walk, Transit and Bike Score of a property by zpid"}, "aseqs": [{"api_name": "get_from_yts_for_torrent_search", "api_action": "\nAction: get_from_yts_for_torrent_search\nAction Input: {\n  \"searchtopic\": \"critically acclaimed movies\"\n}", "api_reaction": null}, {"api_name": "get_from_piratebay_for_torrent_search", "api_action": "\nAction: get_from_piratebay_for_torrent_search\nAction Input: {\n  \"searchtopic\": \"critically acclaimed movies\"\n}", "api_reaction": null}, {"api_name": "get_from_1337_x_for_torrent_search", "api_action": "\nAction: get_from_1337_x_for_torrent_search\nAction Input: {\n  \"searchtopic\": \"critically acclaimed movies\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_from_yts_for_torrent_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_from_yts_for_torrent_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_from_yts_for_torrent_search", "api_action": "\nAction: get_from_yts_for_torrent_search\nAction Input: {\n  \"searchtopic\": \"critically acclaimed movies\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_from_yts_for_torrent_search", "api_action": "\nAction: get_from_yts_for_torrent_search\nAction Input: {\n  \"searchtopic\": \"critically acclaimed movies\"\n}", "api_reaction": null}}]}
{"URL": "86238", "query": "I want to surprise my friends with personalized invitations for my birthday party. Can you help me create custom QR codes with their names and a link to the party details? The link is 'https://www.partydetails.com/'. It would be great if each QR code color could be customized based on their favorite colors. Thank you!", "api_names": ["simple_qr_code_for_custom_qr_code_with_logo_v2", "Finish", "get_stream_url_for_youtube_video_stream_download", "ttt_for_funtrip", "get_revision_for_rushtranslate", "get_regions_for_geography", "topic_for_quotes_diffusion", "getsponsorships_for_diablo4_smartable", "akaryak_t_for_kolektifapi", "repost_for_telegrapher", "translation_info_by_id_for_quran_com", "tours_for_golf_leaderboard_data"], "api_descs": {"Finish": "No description available.", "akaryak_t_for_kolektifapi": "«haberler.com» Güncel Akaryakıt Verileri", "get_regions_for_geography": "Get list of regions in the world", "get_revision_for_rushtranslate": "Get detailed information about a specific revision.", "get_stream_url_for_youtube_video_stream_download": "Get Stream Url", "getsponsorships_for_diablo4_smartable": "Get Diablo 4 sponsorships.", "repost_for_telegrapher": " ", "simple_qr_code_for_custom_qr_code_with_logo_v2": "This endpoin returns simple qr code with the possiblity to customize the color.", "topic_for_quotes_diffusion": " ", "tours_for_golf_leaderboard_data": "Lists available tours and seasons", "translation_info_by_id_for_quran_com": "Get information of a specific translation. Could include detail about the author, publishing date and publisher etc.", "ttt_for_funtrip": "ttt"}, "aseqs": [{"api_name": "simple_qr_code_for_custom_qr_code_with_logo_v2", "api_action": "\nAction: simple_qr_code_for_custom_qr_code_with_logo_v2\nAction Input: {\n  \"link\": \"https://www.partydetails.com/\",\n  \"color\": \"#FF0000\"\n}", "api_reaction": null}, {"api_name": "simple_qr_code_for_custom_qr_code_with_logo_v2", "api_action": "\nAction: simple_qr_code_for_custom_qr_code_with_logo_v2\nAction Input: {\n  \"link\": \"https://www.partydetails.com/\",\n  \"color\": \"#00FF00\"\n}", "api_reaction": null}, {"api_name": "simple_qr_code_for_custom_qr_code_with_logo_v2", "api_action": "\nAction: simple_qr_code_for_custom_qr_code_with_logo_v2\nAction Input: {\n  \"link\": \"https://www.partydetails.com/\",\n  \"color\": \"#0000FF\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "simple_qr_code_for_custom_qr_code_with_logo_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "simple_qr_code_for_custom_qr_code_with_logo_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "simple_qr_code_for_custom_qr_code_with_logo_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "simple_qr_code_for_custom_qr_code_with_logo_v2", "api_action": "\nAction: simple_qr_code_for_custom_qr_code_with_logo_v2\nAction Input: {\n  \"link\": \"https://www.partydetails.com/\",\n  \"color\": \"#FFFFFF\"\n}", "api_reaction": null}}]}
{"URL": "42561", "query": "I'm writing an article about gun control and need information on gun laws in California, New York, and Florida. Can you provide me with the links to the gun law documentation for these three states? Thank you in advance!", "api_names": ["get_laws_for_one_state_for_us_gun_laws", "Finish", "v1_randomword_for_random_word_by_api_ninjas", "product_search_for_target_com_shopping_api", "get_all_employees_payment_cards_for_human_resources_api", "options_prices_for_quotient", "get_zodiac_for_chinese_zodiacs_ai", "hashtag_feed_for_100_success_instagram_api_scalable_robust"], "api_descs": {"Finish": "No description available.", "get_all_employees_payment_cards_for_human_resources_api": "This endpoint gets all the available records in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...", "get_laws_for_one_state_for_us_gun_laws": "This endpoint provides links to gun law documentation for any particular state.", "get_zodiac_for_chinese_zodiacs_ai": "return specific zodiac fortune by sign, period and language.", "hashtag_feed_for_100_success_instagram_api_scalable_robust": "Get hashtag feed", "options_prices_for_quotient": "Return current options data given the input parameters.", "product_search_for_target_com_shopping_api": "Returns the list of products based on keyword.", "v1_randomword_for_random_word_by_api_ninjas": "API Ninjas Random Word API endpoint. Returns a random word."}, "aseqs": [{"api_name": "get_laws_for_one_state_for_us_gun_laws", "api_action": "\nAction: get_laws_for_one_state_for_us_gun_laws\nAction Input: {\n  \"statename\": \"California\"\n}", "api_reaction": null}, {"api_name": "get_laws_for_one_state_for_us_gun_laws", "api_action": "\nAction: get_laws_for_one_state_for_us_gun_laws\nAction Input: {\n  \"statename\": \"New York\"\n}", "api_reaction": null}, {"api_name": "get_laws_for_one_state_for_us_gun_laws", "api_action": "\nAction: get_laws_for_one_state_for_us_gun_laws\nAction Input: {\n  \"statename\": \"Florida\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_laws_for_one_state_for_us_gun_laws"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_laws_for_one_state_for_us_gun_laws\",\n\t\"api_action\": \"\\nAction: get_laws_for_one_state_for_us_gun_laws\\nAction Input: {\\n  \\\"statename\\\": \\\"New York\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_laws_for_one_state_for_us_gun_laws", "api_action": "\nAction: get_laws_for_one_state_for_us_gun_laws\nAction Input: {\n  \"statename\": \"Florida\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_laws_for_one_state_for_us_gun_laws", "api_action": "\nAction: get_laws_for_one_state_for_us_gun_laws\nAction Input: {\n  \"statename\": \"Florida\"\n}", "api_reaction": null}}]}
{"URL": "56275", "query": "I'm a social media marketer and I need to find trending videos related to a specific hashtag. Can you give me the hashtag feed for a specific hashtag, including the video URLs, statistics, and descriptions? Additionally, provide me with the current user feed for a specific influencer, including the video URLs, statistics, and descriptions.", "api_names": ["hashtag_feed_video_posts_v2_for_social_media_data_tt", "Finish", "user_feed_video_posts_for_social_media_data_tt", "user_feed_video_posts_v2_for_social_media_data_tt", "real_time_hashtag_search_for_social_media_data_tt", "strain_type_for_weed_strain", "recipes_list_similarities_for_tasty", "send_embed_for_discord_webhook_api", "get_show_facts_rotten_tomato_scores_for_new_girl", "list_of_available_languages_for_neuro_high_quality_translation", "more_from_author_for_worldwide_recipes", "list_all_categories_for_lemurbot", "apis_for_all_data", "video_post_metadata_for_tiktok_data", "user_stories_for_instagram_v13", "list_accounts_for_calltrackingmetrics", "picture_of_the_day_for_astronomy_picture_of_the_day", "languages_allcountries_for_africa_api_", "get_english_alt_text_for_alt_bichinhos", "actors_list_born_today_for_imdb"], "api_descs": {"Finish": "No description available.", "actors_list_born_today_for_imdb": "List all actors and actresses by day and month", "apis_for_all_data": "Return data", "get_english_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **English.**", "get_show_facts_rotten_tomato_scores_for_new_girl": "You can find show data including season by season rotten tomato scores by hitting the home route.", "hashtag_feed_video_posts_v2_for_social_media_data_tt": "Get hashtag feed V2. \n\nV2 - returns more data then older version of the endpoint, video without watermark and etc\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "languages_allcountries_for_africa_api_": "Returns a json of all languages spoken in each country in Africa\nTakes parameter <country_name> with value <all>\nResponse example:\n{54 items\n\"Chad\":{2 items\n\"other_languages\":[11 items\n0:\n\"Sara\"\n1:\n\"Maba\"\n2:\n\"Kanembu\"\n3:\n\"Kotoko\"\n4:\n\"Bagirmi\"\n5:\n\"Boulala\"\n6:\n\"Gorane\"\n7:\n\"Marba\"\n8:\n\"Masalit\"\n9:\n\"Tama\"\n10:\n\"Teda\"\n]\n\"national_language\":[2 items\n0:\n\"French\"\n1:\n\"Arabic\"\n]\n}\n]", "list_accounts_for_calltrackingmetrics": "The accounts API allows you to create and manage accounts.", "list_all_categories_for_lemurbot": "Categories are pieces of knowledge used by the bots to respond to the user.\nCreate and update categories inorder to teach and train your bot.", "list_of_available_languages_for_neuro_high_quality_translation": "Language list for translation into both directions", "more_from_author_for_worldwide_recipes": "Get more recipe from author", "picture_of_the_day_for_astronomy_picture_of_the_day": "This Endpoint returns an astronomy image of the univers with caption and explanation from professionals.", "real_time_hashtag_search_for_social_media_data_tt": "Search for hashtags by keyword", "recipes_list_similarities_for_tasty": "List similar recipes by specific recipe id", "send_embed_for_discord_webhook_api": "Allows you to send an embed via a webhook. Read the documentation to get this to work.", "strain_type_for_weed_strain": "Provides a list of results by strain type such as Indica, Sativa, Hybrid, etc.", "user_feed_video_posts_for_social_media_data_tt": "Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "user_feed_video_posts_v2_for_social_media_data_tt": "Get user feed V2\n\nV2 - returns more data then older version of the endpoint", "user_stories_for_instagram_v13": "Get instagram user stories by user id.", "video_post_metadata_for_tiktok_data": "Get single post metadata"}, "aseqs": [{"api_name": "hashtag_feed_video_posts_v2_for_social_media_data_tt", "api_action": "\nAction: hashtag_feed_video_posts_v2_for_social_media_data_tt\nAction Input: {}", "api_reaction": null}, {"api_name": "real_time_hashtag_search_for_social_media_data_tt", "api_action": "\nAction: real_time_hashtag_search_for_social_media_data_tt\nAction Input: {\n  \"keyword\": \"specific_hashtag\"\n}", "api_reaction": null}, {"api_name": "hashtag_feed_video_posts_v2_for_social_media_data_tt", "api_action": "\nAction: hashtag_feed_video_posts_v2_for_social_media_data_tt\nAction Input: {}", "api_reaction": null}, {"api_name": "user_feed_video_posts_v2_for_social_media_data_tt", "api_action": "\nAction: user_feed_video_posts_v2_for_social_media_data_tt\nAction Input: {}", "api_reaction": null}, {"api_name": "user_feed_video_posts_for_social_media_data_tt", "api_action": "\nAction: user_feed_video_posts_for_social_media_data_tt\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "real_time_hashtag_search_for_social_media_data_tt"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_feed_video_posts_for_social_media_data_tt"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_feed_video_posts_for_social_media_data_tt", "api_action": "\nAction: user_feed_video_posts_for_social_media_data_tt\nAction Input: {\n  \"sec_uid\": \"specific_influencer\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "hashtag_feed_video_posts_v2_for_social_media_data_tt", "api_action": "\nAction: hashtag_feed_video_posts_v2_for_social_media_data_tt\nAction Input: {\n  \"keyword\": \"specific_hashtag\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "real_time_hashtag_search_for_social_media_data_tt", "api_action": "\nAction: real_time_hashtag_search_for_social_media_data_tt\nAction Input: {\n  \"keyword\": \"specific_hashtag\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "hashtag_feed_video_posts_v2_for_social_media_data_tt", "api_action": "\nAction: hashtag_feed_video_posts_v2_for_social_media_data_tt\nAction Input: {\n  \"keyword\": \"specific_hashtag\"\n}", "api_reaction": null}}]}
{"URL": "42370", "query": "As a small business owner, I need to improve my marketing strategies. Can you give me search results for articles, case studies, and expert advice on social media marketing, search engine optimization, and email marketing? Please also include any related questions people often ask about these topics.", "api_names": ["search_for_g_search", "Finish", "channel_for_fastytapi", "histogram_data_for_adzuna", "airports_nonstop_and_direct_routes_for_an_airport_for_timetable_lookup_", "get_company_quarterly_income_statement_for_finance_data", "solat_time_for_waktu_solat", "get_profile_data_for_linkedin_profile_data_api", "marks_women_points_for_scoring_tables_api", "api_1_0_programs_for_where_to_credit", "shorten_long_link_for_noly_url_shortener", "voices_endpoint_for_text_to_speech_v2"], "api_descs": {"Finish": "No description available.", "airports_nonstop_and_direct_routes_for_an_airport_for_timetable_lookup_": "Returns a list of nonstop and direct routes for an airport", "api_1_0_programs_for_where_to_credit": " ", "channel_for_fastytapi": "Returns channel-related information.", "get_company_quarterly_income_statement_for_finance_data": "Get Company Income Statement", "get_profile_data_for_linkedin_profile_data_api": "get profile data", "histogram_data_for_adzuna": "Provide histogram data of salary data", "marks_women_points_for_scoring_tables_api": "This retrieves the women's marks for the point value given as a parameter (0-1400).", "search_for_g_search": "Get Real-time Search Result Page", "shorten_long_link_for_noly_url_shortener": "Use this endpoint to shorten a URL. The response will be a JSON object with the following structure:\n\nOn success:\n{\n\"status\": 1,\n\"error\": \"\",\n\"data\": \"https://tombo.icu/57h80n\"\n}\n\nOn failure:\n{\n\"status\": 0,\n\"error\": \"This website is already shortened here.\",\n\"data\": \"https://tombo.icu/57h80n\"\n}\n\nThe \"data\" field contains the shortened URL.", "solat_time_for_waktu_solat": "Display the prayer time based on selected zone.\nData in json format.", "voices_endpoint_for_text_to_speech_v2": "Get List of all available speakers that can be used as voice in /tts Endpoint\n\n**Format of Voices** : Language-Accent-Speaker_Name"}, "aseqs": [{"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"articles on social media marketing, search engine optimization, email marketing\",\n  \"num\": \"10\"\n}", "api_reaction": null}, {"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"frequently asked questions about social media marketing\",\n  \"num\": \"5\"\n}", "api_reaction": null}, {"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"frequently asked questions about search engine optimization\",\n  \"num\": \"5\"\n}", "api_reaction": null}, {"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"frequently asked questions about email marketing\",\n  \"num\": \"5\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_g_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_g_search", "api_action": "{\"q\": \"search results for articles, case studies and expert advice on social media marketing, search engine optimization, email marketing\", \"num\": \"10\"}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"case studies social media marketing, search engine optimization, email marketing\",\n  \"num\": \"10\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"case studies on social media marketing, search engine optimization, email marketing\",\n  \"num\": \"10\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"case studies on social media marketing, search engine optimization, email marketing\",\n  \"num\": \"10\"\n}", "api_reaction": null}}]}
{"URL": "44174", "query": "I'm interested in finding low hold bets and arbitrage bets. Can you fetch the bets that fall under these categories?", "api_names": ["arbitrage_bets_for_sportsbook_odds", "low_hold_bets_for_sportsbook_odds", "Finish", "get_campaign_from_url_for_fomoapi", "getmaptilewithfrenchlabels_for_maptiles", "obtener_cp_for_codigos_postales_mx", "airports_nearest_airports_for_a_given_latitude_and_longitude_for_timetable_lookup_", "updates_for_yc_hacker_news_official", "property_for_unicode_codepoints", "api_exist_for_tiktok_private_api", "related_videos_or_playlists_for_yt_api", "v2_user_tweets_replies_for_twitter_v4", "bet365_upcoming_events_for_betsapi", "tournament_matches_by_date_for_tennis_live_data", "ip_locator_for_ip_geolocation_metadata"], "api_descs": {"Finish": "No description available.", "airports_nearest_airports_for_a_given_latitude_and_longitude_for_timetable_lookup_": "Returns the nearest airports for a given latitude and longitude", "api_exist_for_tiktok_private_api": "Get \"sec_id\" and \"id\" by username", "arbitrage_bets_for_sportsbook_odds": "This returns the bets that have arbitrage. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.", "bet365_upcoming_events_for_betsapi": "get bet365 fixtures", "get_campaign_from_url_for_fomoapi": "Get lead from Specific website  Campaign", "getmaptilewithfrenchlabels_for_maptiles": "Raster Map Tiles with French Labels", "ip_locator_for_ip_geolocation_metadata": "The API supports .csv, .xml and .json as output formats.", "low_hold_bets_for_sportsbook_odds": "This returns the bets that have low hold bets. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.", "obtener_cp_for_codigos_postales_mx": "Obtén la lista de códigos postales encontrados acorde al parámetro solicitado", "property_for_unicode_codepoints": "Show one Property for All Codepoints", "related_videos_or_playlists_for_yt_api": "Get related videos or playlists.\nQuota cost is 1 unit.", "tournament_matches_by_date_for_tennis_live_data": "Lists all matches for a given `tournament_id` on a given `date`. This is a quick summary view of matches on the given date without result or detailed player info.", "updates_for_yc_hacker_news_official": "Get the changed items and profiles", "v2_user_tweets_replies_for_twitter_v4": "v2 / User Tweets & Replies"}, "aseqs": [{"api_name": "low_hold_bets_for_sportsbook_odds", "api_action": "\nAction: low_hold_bets_for_sportsbook_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "arbitrage_bets_for_sportsbook_odds", "api_action": "\nAction: arbitrage_bets_for_sportsbook_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "low_hold_bets_for_sportsbook_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "arbitrage_bets_for_sportsbook_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "low_hold_bets_for_sportsbook_odds"}}]}
{"URL": "62675", "query": "I'm conducting a genetics experiment and I need assistance with DNA analysis. Can you convert the DNA sequence 'TACAAAGGCTAACGTCCTAGAGCTATT' to an mRNA sequence and then transform it into a sequence of Amino Acids? Please provide the Amino Acids in the order of appearance.", "api_names": ["mrna2aminoacid_for_dna2protein", "dna2mrna_for_dna2protein", "Finish", "top_headlines_for_news_api_v2", "detailed_cake_recipe_by_id_for_the_birthday_cake_db", "get_country_population_for_get_population", "download_track_for_latest_spotify_downloader", "get_trader_positions_for_binance_futures_leaderboard", "nhl_team_list_for_nhl_api", "get_the_top_articles_of_all_time_for_dev_to_api", "egfr_calculation_for_creatinine_value_in_mg_dl_for_egfr_calculator_glomerular_filtration_rate_calculator_", "search_departures_by_flight_for_british_airways_flight_info", "get_the_next_dividend_payout_date_for_sundayfinance", "product_data_for_ecommerce_product_api", "recommendations_for_direct_wines"], "api_descs": {"Finish": "No description available.", "detailed_cake_recipe_by_id_for_the_birthday_cake_db": "Get Cake Recipe by ID", "dna2mrna_for_dna2protein": "This end-point converts a DNA sequence into an mRNA sequence.", "download_track_for_latest_spotify_downloader": "Download a track by passing the details from the fetch track API", "egfr_calculation_for_creatinine_value_in_mg_dl_for_egfr_calculator_glomerular_filtration_rate_calculator_": "API documentation for eGFR1 (for Creatinine value in mg/dl)\n\n\nAPI Documentation: eGFR Calculator API\n\nIntroduction\n\n\nThis API provides a way to calculate the Estimated Glomerular Filtration Rate (eGFR) for assessing renal function using the 2021 CKD-EPI formula. The eGFR is a measure of the kidney's ability to filter waste from the blood, and is an important indicator of renal health.\nEndpoint\n\nThe API endpoint for the eGFR calculation is:\n\n\nhttps://api.algomed.in/egfr1\n\n\nInput\n\nThe API requires the following input parameters to be passed in the request body as a JSON object:\n* creatinine (float): The patient's creatinine level, in mg/dL. \n* age (integer): The patient's age, in years.\n* Female (boolean): Is the patient a female, True or false.\n\n\nInput example:\n\nHere is an example for an input request \n\nhttps://api.algomed.in/egfr1?creat=1.2&female=true&age=50\n\nHere the creatinine  is 1.2 mg/dl, The gender is female (Female = true) and age of the patient is 50 years. \n\ncurl -X 'GET' \n  'https://api.algomed.in/egfr1?creat=1.2&female=true&age=50' \n  -H 'accept: application/json'\n\n\nOutput\nThe API returns a JSON object with the following structure:\n\n{\n  \"egfr\": 55, ==>  The calculated eGFR value\n  \"units\": \"mL/min/1.73m2\",  ==> The units for the same\n  \"CKD category\": \"G3a\", ==> CKD category based on current guidelines \n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\" ==> Information about the CKD category\n}\n\n\n\nExample\nHere is an example of a request to the API endpoint:\n\nGET https://api.algomed.in/egfr1?creat=1.2&female=true&age=50\n\nAnd the corresponding response from the API:\n\n{\n  \"egfr\": 55,\n  \"units\": \"mL/min/1.73m2\",\n  \"CKD category\": \"G3a\",\n  \"details\": \"This falls in category of mildly to moderately decreased eGFR\"\n}\n\n\nError Codes\nIn case of any errors, the API returns a JSON object with the following structure:\n* error: A string indicating the error that occurred.\n* message: A detailed error message.\nNotes\n* The creatinine value must be entered in mg/dL.\n* The API only accepts requests with the 'application/json' content type.\n* The API returns a 500 Internal Server Error response in case of any internal errors.\nDisclaimer\nThis API is provided for informational purposes only and is not intended to be used for medical advice, diagnosis, or treatment. The results of the eGFR calculation should always be interpreted in the context of a comprehensive medical evaluation by a qualified healthcare professional.", "get_country_population_for_get_population": "Get country population.", "get_the_next_dividend_payout_date_for_sundayfinance": "Feed in the ticke and get the next dividend payout date.", "get_the_top_articles_of_all_time_for_dev_to_api": "It returns the top articles of all time from dev.to website.", "get_trader_positions_for_binance_futures_leaderboard": "Get trader open positions", "mrna2aminoacid_for_dna2protein": "Transform an mRNA sequence into a sequence of Amino Acids.", "nhl_team_list_for_nhl_api": "This API endpoint will return the list of all NHL teams", "product_data_for_ecommerce_product_api": "The /data endpoint is a part of the Ecommerce Product API that allows you to retrieve information about a specific product in your ecommerce store. By making a GET request to this endpoint and specifying the product name, you can access a wide range of information about the product, including its name, description, images, and more. The response to the request will be in JSON format and will include all relevant product data. This endpoint is an essential tool for retrieving information about products in your store, and is designed to be fast and efficient, ensuring that you receive the information you need quickly and easily.", "recommendations_for_direct_wines": "", "search_departures_by_flight_for_british_airways_flight_info": "", "top_headlines_for_news_api_v2": "Endpoint to find top headlines news."}, "aseqs": [{"api_name": "dna2mrna_for_dna2protein", "api_action": "\nAction: dna2mrna_for_dna2protein\nAction Input: {\n  \"dna\": \"TACAAAGGCTAACGTCCTAGAGCTATT\"\n}", "api_reaction": null}, {"api_name": "mrna2aminoacid_for_dna2protein", "api_action": "\nAction: mrna2aminoacid_for_dna2protein\nAction Input: {\n  \"mrna\": \"AUGUUUCCGAUUGCAGGAUCUCGAUAA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "dna2mrna_for_dna2protein"}}, {"state": "generated_by_agent", "aseq": {"api_name": "mrna2aminoacid_for_dna2protein"}}, {"state": "generated_by_agent", "aseq": {"api_name": "mrna2aminoacid_for_dna2protein"}}]}
{"URL": "5970", "query": "I'm a social media manager and I need to gather real-time data on user feeds. Please provide me with the current feed of videos from influencers. I would like to limit the output to 100 records and include the direct URLs to the videos and their statistics. Additionally, if possible, I would like to filter the feed by country and obtain the feed for influencers in Canada.", "api_names": ["user_feed_video_posts_for_social_media_data_tt", "user_feed_video_posts_v2_for_social_media_data_tt", "real_time_hashtag_search_for_social_media_data_tt", "Finish", "song_search_for_miza", "course_instructor_for_udemy_course_scrapper_api", "get_symbols_for_ohlc_history_forex", "book_for_investors_exchange_iex_trading", "get_all_employees_payment_cards_for_human_resources_api", "read_inbox_for_temp_mail", "get_reviews_for_gearbest", "query_mark_price_kline_for_bybit", "country_by_iso_code_for_referential", "search_for_superhero_search", "detect_for_languagelayer", "gettest_for_testapi_v4", "stars_get_string_for_unofficial_trust_pilot", "loginuser_for_pet_store", "specific_transactions_for_crypto_whale_transactions", "showtimes_for_argentina_movie_theatres"], "api_descs": {"Finish": "No description available.", "book_for_investors_exchange_iex_trading": "Response includes data from deep and quote. Refer to each endpoint for details.", "country_by_iso_code_for_referential": "Get country by 2 letter iso code localized to a given language", "course_instructor_for_udemy_course_scrapper_api": "Provide the course Instructor", "detect_for_languagelayer": "API endpoint used to perform standard (single) language detection", "get_all_employees_payment_cards_for_human_resources_api": "This endpoint gets all the available records in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...", "get_reviews_for_gearbest": " ", "get_symbols_for_ohlc_history_forex": "Get all available forex pairs", "gettest_for_testapi_v4": "get", "loginuser_for_pet_store": "", "query_mark_price_kline_for_bybit": "Query mark price kline.", "read_inbox_for_temp_mail": "Read inbox an email", "real_time_hashtag_search_for_social_media_data_tt": "Search for hashtags by keyword", "search_for_superhero_search": "This endpoint searches through our superhero database", "showtimes_for_argentina_movie_theatres": " ", "song_search_for_miza": "Searches for a song from popular song platforms.\nThe API will search YouTube for the item by default. Prepend *scsearch:* to the search term to specify a search from SoundCloud, *spsearch:* for Spotify, or *bcsearch:* for BandCamp.\nUnlike all other endpoints provided by this API, this endpoint can actually be used infinitely free of charge or quota. Simply direct your request directly to [http://i.mizabot.xyz/ytdl?search=](http://i.mizabot.xyz/ytdl?search=) instead of rapidapi's forwarded URL. This may be done for all other endpoints too, however there will be a rate limit in place.", "specific_transactions_for_crypto_whale_transactions": "get info about single transaction", "stars_get_string_for_unofficial_trust_pilot": "Get string describing the star-rate", "user_feed_video_posts_for_social_media_data_tt": "Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "user_feed_video_posts_v2_for_social_media_data_tt": "Get user feed V2\n\nV2 - returns more data then older version of the endpoint"}, "aseqs": [{"api_name": "user_feed_video_posts_v2_for_social_media_data_tt", "api_action": "\nAction: user_feed_video_posts_v2_for_social_media_data_tt\nAction Input: {}", "api_reaction": null}, {"api_name": "real_time_hashtag_search_for_social_media_data_tt", "api_action": "\nAction: real_time_hashtag_search_for_social_media_data_tt\nAction Input: {\n  \"keyword\": \"influencers Canada\"\n}", "api_reaction": null}, {"api_name": "user_feed_video_posts_for_social_media_data_tt", "api_action": "\nAction: user_feed_video_posts_for_social_media_data_tt\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_feed_video_posts_for_social_media_data_tt"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_feed_video_posts_v2_for_social_media_data_tt", "api_action": "{\"username\": \"\", \"sec_uid\": \"\", \"country\": \"CA\", \"limit\": 100}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_feed_video_posts_v2_for_social_media_data_tt", "api_action": "\nAction: user_feed_video_posts_v2_for_social_media_data_tt\nAction Input: {\n  \"limit\": 100,\n  \"fields\": [\n    \"video_url\",\n    \"statistics_count\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "real_time_hashtag_search_for_social_media_data_tt", "api_action": "\nAction: real_time_hashtag_search_for_social_media_data_tt\nAction Input: {\n  \"keyword\": \"influencers Canada\"\n}", "api_reaction": null}}]}
{"URL": "64097", "query": "I am working on a project that involves mapping art events in Italy. Can you provide me with a list of all the locations where art events take place in Italy? Additionally, I would like to know the cities associated with each location.", "api_names": ["get_all_locations_for_art_openings_italy", "get_all_cities_for_art_openings_italy", "get_all_genres_for_art_openings_italy", "Finish", "downloadscreenshot_for_helioviewer_v1", "addressautocomplete_for_woosmap", "get_pnr_status_v3_for_irctc", "series_for_vod_app", "location_for_ncaa_final_four", "searchinventory_for_fortnitecosmetics", "sweden_scheduled_flights_growth_for_global_flight_data", "market_get_indices_for_schwab", "app_news_for_steam", "vehicle_information_for_vehicle_rc_information_v2", "generate_qr_for_qr_code_wizard", "match_play_by_play_for_basketball_data", "lookup_for_satellite_api", "latest_news_for_philippine_news", "search_quotes_for_semantic_quotes", "jsr_character_by_id_for_jet_set_radio_api"], "api_descs": {"Finish": "No description available.", "addressautocomplete_for_woosmap": "Autocomplete on worldwide suggestions for a for text-based geographic searches. It can match on full words as well as substrings.\n", "app_news_for_steam": "Get last n news for App", "downloadscreenshot_for_helioviewer_v1": "Download a custom screenshot (that was generated using the `takeScreenshot` API endpoint).", "generate_qr_for_qr_code_wizard": "Generate QR codes with ease via API", "get_all_cities_for_art_openings_italy": "This service returns a list of all cities where art events take place.", "get_all_genres_for_art_openings_italy": "This service returns a list of all genres of the events.", "get_all_locations_for_art_openings_italy": "This service returns a list of all locations where art events take place.", "get_pnr_status_v3_for_irctc": "-", "jsr_character_by_id_for_jet_set_radio_api": "Returns a single Character by ID", "latest_news_for_philippine_news": "Get the latest news and stories from different sources", "location_for_ncaa_final_four": "Get the Final Four city and venue for the given year.", "lookup_for_satellite_api": "Lookup active Sleeper leagues for a given username.", "market_get_indices_for_schwab": "List all available market indices", "match_play_by_play_for_basketball_data": "Live match events with scores.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "search_quotes_for_semantic_quotes": "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity.", "searchinventory_for_fortnitecosmetics": "By passing in the appropriate options, you can search for\navailable inventory in the system\n", "series_for_vod_app": "Series Endpoint, will have details about series and it's episodes", "sweden_scheduled_flights_growth_for_global_flight_data": "Get weekly Sweden scheduled departing flights growth.", "vehicle_information_for_vehicle_rc_information_v2": "Fetch Vehicle Information using Registration Number."}, "aseqs": [{"api_name": "get_all_locations_for_art_openings_italy", "api_action": "\nAction: get_all_locations_for_art_openings_italy\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_cities_for_art_openings_italy", "api_action": "\nAction: get_all_cities_for_art_openings_italy\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_genres_for_art_openings_italy", "api_action": "\nAction: get_all_genres_for_art_openings_italy\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_locations_for_art_openings_italy"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_locations_for_art_openings_italy"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_cities_for_art_openings_italy"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_cities_for_art_openings_italy"}}]}
{"URL": "10903", "query": "I am interested in betting on football matches and I need some predictions to guide me. Can you fetch the scores and average goal stats for the matches happening today? Additionally, I would like to see the featured predictions with higher probabilities and better odds. It would be great if you could also provide me with the prediction details for a specific match with the ID '62fb54c82c9a2e8d643c7965'.", "api_names": ["Finish", "vip_featured_predictions_for_today_football_prediction", "vip_prediction_scores_for_today_football_prediction", "prediction_details_for_today_football_prediction", "get_realtime_rates_for_realtime_crypto_prices", "teams_affiliates_teamids_for_baseball", "getmostrecentday_for_trinidad_covid_19_statistics", "getdiscusage_for_groupdocs_merger_cloud", "getfileversions_for_aspose_ocr_cloud", "get_birthday_draws_for_euro_millions", "searching_for_videos_for_aol_on_network", "nhl_summary_for_nhl_api", "get_qoute_for_quotsy", "loginuser_for_apfd", "getting_full_details_for_tiktok_full_video_info_without_watermark_", "tor_get_for_scraper_s_proxy"], "api_descs": {"Finish": "No description available.", "get_birthday_draws_for_euro_millions": "Get all draws result occurred at a given birthday date (mm-dd) and check it out what's your lucky number and related statistics.", "get_qoute_for_quotsy": "get a quote by id", "get_realtime_rates_for_realtime_crypto_prices": "Returns Realtime price of a coin", "getdiscusage_for_groupdocs_merger_cloud": " ", "getfileversions_for_aspose_ocr_cloud": " ", "getmostrecentday_for_trinidad_covid_19_statistics": "This endpoint fetches the most recent Trinidad & Tobago Covid 19 statistics.  It returns data for that specific day alone.", "getting_full_details_for_tiktok_full_video_info_without_watermark_": "Tiktok videos with full info \n- video without watermark (HD)\n- cover / music\n- share / likes / comments\n- and more", "loginuser_for_apfd": " ", "nhl_summary_for_nhl_api": "With this endpoint you can get the game summary data for a specified game.", "prediction_details_for_today_football_prediction": "Shows all details about the match, its prediction and the prediction results.", "searching_for_videos_for_aol_on_network": "You can search our library using this request:", "teams_affiliates_teamids_for_baseball": "Query baseball team affiliates by ID", "tor_get_for_scraper_s_proxy": "Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints.", "vip_featured_predictions_for_today_football_prediction": "Returns **Daily  Featured Prediction** results which have higher probability and better odds than others. More efficient selections.\n\nCompare its performance from **stats/performance** endpoint.", "vip_prediction_scores_for_today_football_prediction": "This **VIP** endpoint returns match score predictions with average goal stats. Same query strings and pagination functionality is supported with **/predictions/list**\n\n* Use **/predictions/list** endpoint  to get  market bet predictions."}, "aseqs": [{"api_name": "vip_prediction_scores_for_today_football_prediction", "api_action": "\nAction: vip_prediction_scores_for_today_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "vip_featured_predictions_for_today_football_prediction", "api_action": "\nAction: vip_featured_predictions_for_today_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "prediction_details_for_today_football_prediction", "api_action": "\nAction: prediction_details_for_today_football_prediction\nAction Input: {\n  \"match_id\": \"62fb54c82c9a2e8d643c7965\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "vip_prediction_scores_for_today_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "vip_prediction_scores_for_today_football_prediction", "api_action": "\nAction: vip_prediction_scores_for_today_football_prediction\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "vip_prediction_scores_for_today_football_prediction", "api_action": "\nAction: vip_prediction_scores_for_today_football_prediction\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "vip_prediction_scores_for_today_football_prediction"}}]}
{"URL": "15089", "query": "I'm writing a superhero novel and I need some character ideas. Can you provide me with a list of random superheroes and villains, along with their biography and powerstats? It would be helpful to have their images for visualization.", "api_names": ["heroes_for_superhero_search", "villains_for_superhero_search", "Finish", "gives_the_bmi_when_you_input_values_in_metric_units_for_bmi_v2", "tweet_retweets_for_twitter_aio", "market_get_movers_for_schwab", "obtain_a_new_datacenter_proxy_for_ephemeral_proxies", "balansheet_financials_for_yh_finance_complete", "getsurfbreaksbycountry_for_simple_surf_forecast_api", "qrcodepro_for_qrcodeutils", "currencytoall_for_currency_v2", "search_for_a_word_in_quran_for_al_quran"], "api_descs": {"Finish": "No description available.", "balansheet_financials_for_yh_finance_complete": "This endpoint returns a company/ stock financials", "currencytoall_for_currency_v2": "Service that converts the entered exchange rate to other currencies.", "getsurfbreaksbycountry_for_simple_surf_forecast_api": " ", "gives_the_bmi_when_you_input_values_in_metric_units_for_bmi_v2": "Gives the BMI in kg/m2 when we input height in centimeters and weight in kilograms", "heroes_for_superhero_search": "Return a list of 20 random heroes", "market_get_movers_for_schwab": "List recent movers in the market", "obtain_a_new_datacenter_proxy_for_ephemeral_proxies": "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n", "qrcodepro_for_qrcodeutils": "Pro QR Code Barcode Generator", "search_for_a_word_in_quran_for_al_quran": "Looks for a given keyword (English) in ***translation_eng*** key in the entire Koran and responds with all the verses containing the given keyword and toal matches in JSON", "tweet_retweets_for_twitter_aio": "Receive all retweets for a tweet.", "villains_for_superhero_search": "Return 20 random Villains"}, "aseqs": [{"api_name": "heroes_for_superhero_search", "api_action": "\nAction: heroes_for_superhero_search\nAction Input: {}", "api_reaction": null}, {"api_name": "villains_for_superhero_search", "api_action": "\nAction: villains_for_superhero_search\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "heroes_for_superhero_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "villains_for_superhero_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "heroes_for_superhero_search"}}]}
{"URL": "47602", "query": "My family is planning a trip to New York. Can you check if there are any half-staff events in the state and provide me with the details? Also, let me know the current status of the flag in West Virginia.", "api_names": ["get_current_status_for_given_flag_for_flag_status", "get_half_staff_events_for_given_flag_for_flag_status", "Finish", "page_for_list_movies", "live_mmo_giveaways_for_mmo_games", "fetch_images_for_mangaverse_api", "music_lovers_for_69bd0c7193msh3c4abb39db3a82fp18c336jsn8470910ae9f0", "profile_for_rocket_league", "get_top_coins_by_followers_change_for_crowdsense", "enneagram_personality_test_questionnaire_for_personality_quest", "stats_for_tly_link_shortener", "check_server_status_for_waifu", "latest_sold_for_most_expensive_nft_artworks", "api_userinfo_for_tiktok_private_api", "house_prices_get_sales_history_for_zoopla_v2"], "api_descs": {"Finish": "No description available.", "api_userinfo_for_tiktok_private_api": "Get avatar and followers, likes and videos count of a user by \"id\"", "check_server_status_for_waifu": "Check server status", "enneagram_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for Enneagram Personality Test.", "fetch_images_for_mangaverse_api": "This will be get the image from the chapters, the image sort base on the index\nso make sure you sort base from index if you manipulate it,\nid should be chapter id", "get_current_status_for_given_flag_for_flag_status": "Get the current status for the provided flag", "get_half_staff_events_for_given_flag_for_flag_status": "Get all half-staff events for the provided flag", "get_top_coins_by_followers_change_for_crowdsense": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers change value\n\n**Definitions:**\n\n- FollowersChange: Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days\n\n\n**Details:**\n- All results are in real time", "house_prices_get_sales_history_for_zoopla_v2": "Get sales history", "latest_sold_for_most_expensive_nft_artworks": "Get recent sold artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare", "live_mmo_giveaways_for_mmo_games": "Live Giveaways list", "music_lovers_for_69bd0c7193msh3c4abb39db3a82fp18c336jsn8470910ae9f0": "recibe datos", "page_for_list_movies": "Used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30", "profile_for_rocket_league": "Check a player's profile:\n`rocket-league1.p.rapidapi.com/profile/:player`", "stats_for_tly_link_shortener": ""}, "aseqs": [{"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "get_current_status_for_given_flag_for_flag_status", "api_action": "\nAction: get_current_status_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"WV\"\n}", "api_reaction": null}, {"api_name": "get_current_status_for_given_flag_for_flag_status", "api_action": "\nAction: get_current_status_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_current_status_for_given_flag_for_flag_status"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_current_status_for_given_flag_for_flag_status", "api_action": "\nAction: get_current_status_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}}]}
{"URL": "63492", "query": "I am curious about the weather conditions in Sydney, Australia today. Can you provide me with the current basic weather conditions for the latitude -33.8651 and longitude 151.2099? Additionally, fetch the current detailed weather conditions for the same location.", "api_names": ["daily_forecast_5_days_for_easy_weather", "Finish", "current_conditions_detailed_for_easy_weather", "complete_weather_single_call_for_easy_weather", "current_conditions_basic_for_easy_weather", "uk_letting_agents_for_zoopla", "get_clips_for_twitch_channel_clips", "match_for_msport", "cashabck_for_free_cashback", "search_company_by_email_for_b2bhint", "profile_igtv_for_instagram_scraper_2023_v2", "trend_id_for_twitter_pack_v2", "gamerounds_for_esportapi", "evaluate_expression_for_evaluate_expression", "charts_get_top_songs_in_world_by_genre_for_shazam_api", "getbystock_for_earningsdata", "find_by_udprn_for_find_by_udprn", "get_user_posts_for_9gag_api_detailed_", "languages_for_spellout", "mass_from_to_number_for_unitconversion"], "api_descs": {"Finish": "No description available.", "cashabck_for_free_cashback": "Access this for cashback feed", "charts_get_top_songs_in_world_by_genre_for_shazam_api": "get top songs in world by gener", "complete_weather_single_call_for_easy_weather": "Get current conditions, hourly forecast, daily forecast, and alerts in a single response for the given latitude and longitude (you must supply ISO country code to receive weather alerts).", "current_conditions_basic_for_easy_weather": "Get (basic) current conditions for the given latitude and longitude.", "current_conditions_detailed_for_easy_weather": "Get (detailed) current conditions for the given latitude and longitude.", "daily_forecast_5_days_for_easy_weather": "Get a 5-day daily forecast for the given latitude and longitude.", "evaluate_expression_for_evaluate_expression": "Scans the given expression and returns the result of any calculation found, in plain text.", "find_by_udprn_for_find_by_udprn": "“Find By UDPRN” API gets address for the specified UDPRN.\n\nUDPRN stands for ‘Unique Delivery Point Reference Number. A UDPRN is a unique numeric code (e.g. 64983) for any premise on the Postcode Address File.\n\nThis API uses the latest PAF and Multiple Residence data from Royal Mail.UDPRN are unique identifiers for every address in the UK that Royal Mail has in its database.", "gamerounds_for_esportapi": "Get game rounds for a specific E-Sports game by providing the game ID.", "get_clips_for_twitch_channel_clips": "Get the latest 50 clips of a channel.", "get_user_posts_for_9gag_api_detailed_": "Returns user posts.", "getbystock_for_earningsdata": "Get earnings data by symbol.", "languages_for_spellout": "List ISO 639 languages", "mass_from_to_number_for_unitconversion": "Mass unit conversions", "match_for_msport": "get details of match with id\nleague ,home , away , events , substitute , stats and everything you need about the soccer match", "profile_igtv_for_instagram_scraper_2023_v2": "Profile IGTV", "search_company_by_email_for_b2bhint": "Search for a company by email will return a list of companies that match the selected email", "trend_id_for_twitter_pack_v2": " ", "uk_letting_agents_for_zoopla": "UK letting agents"}, "aseqs": [{"api_name": "current_conditions_basic_for_easy_weather", "api_action": "\nAction: current_conditions_basic_for_easy_weather\nAction Input: {\n  \"latitude\": \"-33.8651\",\n  \"longitude\": \"151.2099\"\n}", "api_reaction": null}, {"api_name": "current_conditions_detailed_for_easy_weather", "api_action": "\nAction: current_conditions_detailed_for_easy_weather\nAction Input: {\n  \"latitude\": \"-33.8651\",\n  \"longitude\": \"151.2099\"\n}", "api_reaction": null}, {"api_name": "complete_weather_single_call_for_easy_weather", "api_action": "\nAction: complete_weather_single_call_for_easy_weather\nAction Input: {\n  \"latitude\": \"-33.8651\",\n  \"longitude\": \"151.2099\"\n}", "api_reaction": null}, {"api_name": "daily_forecast_5_days_for_easy_weather", "api_action": "\nAction: daily_forecast_5_days_for_easy_weather\nAction Input: {\n  \"latitude\": \"-33.8651\",\n  \"longitude\": \"151.2099\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to get the current basic weather conditions for Sydney using the latitude and longitude provided. Then, I will fetch the detailed weather conditions.", "api_name": "current_conditions_basic_for_easy_weather"}}, {"state": "generated_by_agent", "aseq": {"api_name": "current_conditions_detailed_for_easy_weather"}}, {"state": "generated_by_agent", "aseq": {"api_name": "current_conditions_detailed_for_easy_weather"}}, {"state": "generated_by_agent", "aseq": {"api_name": "current_conditions_detailed_for_easy_weather"}}, {"state": "generated_by_agent", "aseq": {"api_name": "current_conditions_detailed_for_easy_weather"}}]}
{"URL": "66235", "query": "I'm organizing a charity event and we want to partner with fast food restaurants. Can you provide me with a list of all the fast food chains in our state?", "api_names": ["get_all_city_names_for_fast_food_restaurants_usa_top_50_chains", "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains", "Finish", "race_detail_info_for_horse_racing", "get_info_from_vin_for_vin_recognition_decoder", "get_all_the_desserts_for_beverages_and_desserts", "global_statistics_for_covid_19_live_data", "obtain_a_new_datacenter_proxy_for_ephemeral_proxies", "animerandom_for_dbu_api", "news_from_individual_source_for_f1_latest_news", "movies_link_and_name_for_porn_movies", "get_specific_fighter_for_ufc_fighters_v2"], "api_descs": {"Finish": "No description available.", "animerandom_for_dbu_api": "Поиск Рандомного Аниме", "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains": "Get all {Chain} names", "get_all_city_names_for_fast_food_restaurants_usa_top_50_chains": "GET all City names", "get_all_the_desserts_for_beverages_and_desserts": "This endpoint will returns all the** Desserts**", "get_info_from_vin_for_vin_recognition_decoder": "This endpoint returns the information of a vin such as country of origin, model, year, model, car seats, etc.", "get_specific_fighter_for_ufc_fighters_v2": "endpoint to get specific fighter stats\nFirstname_Lastname\nfirst letter of first name shoud be upper and same for last name\nfirstname and lastname seprated with underscore _", "global_statistics_for_covid_19_live_data": "The Global live data statistics", "movies_link_and_name_for_porn_movies": "Movies Link And Name", "news_from_individual_source_for_f1_latest_news": "With this endpoint you can specify the source of the articles you wish to get\n/news/f1 for example, or any of the other 4: skyf1, BBCF1, WTF1, autosport.", "obtain_a_new_datacenter_proxy_for_ephemeral_proxies": "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n", "race_detail_info_for_horse_racing": "**Get racecard detailed info** and **Odds comparator**\nHorses, Jockeys, Trainers, Form, OR, Owner, Sire, Dam, Age, Weight and more information."}, "aseqs": [{"api_name": "get_all_city_names_for_fast_food_restaurants_usa_top_50_chains", "api_action": "\nAction: get_all_city_names_for_fast_food_restaurants_usa_top_50_chains\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains", "api_action": "\nAction: get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains"}}]}
{"URL": "5581", "query": "I want to surprise my little brother with some free loot. Could you show me live giveaways for loot on PC? It would be awesome if you could sort them by popularity too.", "api_names": ["live_giveaways_by_type_for_gamerpower", "Finish", "sort_live_giveaways_for_gamerpower", "live_giveaways_by_platform_for_gamerpower", "filter_group_giveaways_for_gamerpower", "v1_quotes_for_quotes_by_api_ninjas", "text_sentiment_analysis_for_text_sentiment_analysis_", "stat_for_rocket_league", "get_response_for_automatic_custom_response_creator", "search_shows_q_query_for_tvmaze", "eventget_for_31events_send_native_calendar_invites", "query_horses_for_horse_racing", "social_media_news_in_italian_for_onelike", "get_all_images_of_an_collection_for_pulsar", "links_finder_for_explorarc_s_link_finder", "namebydomain_for_name_using_domain", "property_details_for_realtor", "search_all_words_api_for_complete_study_bible", "v1_render_renderid_pdf_for_inkit", "video_comments_for_youtube_v3_v2"], "api_descs": {"Finish": "No description available.", "eventget_for_31events_send_native_calendar_invites": "", "filter_group_giveaways_for_gamerpower": "Filter and group platforms and giveaway types to get personalized results.", "get_all_images_of_an_collection_for_pulsar": "Get all images of an collection.", "get_response_for_automatic_custom_response_creator": "There are 3 params necessary : \n\n- First - Add a review \"avis\" (ex. \"Merci pour votre accueil, c'était parfait\")\n- Then - Add a \"business_type\" (ex. \"Restaurant\")\n- Finaly - Add a \"business_brand\" (ex. \"Fuzi\")", "links_finder_for_explorarc_s_link_finder": "ExplorArc's Link Finder API simplifies the process of finding relevant links by returning results based on a given query. With this powerful tool, users can easily access the information they need to streamline their workflow and achieve their goals", "live_giveaways_by_platform_for_gamerpower": "Insert platform eg: pc, steam, epic-games-store, uplay, gog, icthio, ps4, xbox-one, switch, android, ios, vr, battlenet", "live_giveaways_by_type_for_gamerpower": "Get live giveaways by type, eg: game, loot, beta", "namebydomain_for_name_using_domain": "Get Domain or Organization Name using Domain.", "property_details_for_realtor": "Get property details by  property ID  or by Address", "query_horses_for_horse_racing": "Search horses by name. \nOnce you get \"*id_horse*\" from this query, you can get horses stats from \"**Horse stats**\" endpoint.", "search_all_words_api_for_complete_study_bible": "Returns KJV verses containing all of the supplied words, in any order. Words are separated by '%20' i.e., spaces. Words are not case-sensitive.", "search_shows_q_query_for_tvmaze": "Search for shows", "social_media_news_in_italian_for_onelike": "Get social media news in Italian", "sort_live_giveaways_for_gamerpower": "Insert sort by, eg: date, value, popularity", "stat_for_rocket_league": "Check a player's stat:\n`rocket-league1.p.rapidapi.com/stat/:player/:stat`", "text_sentiment_analysis_for_text_sentiment_analysis_": "Analyse the Sentiment of the given text context", "v1_quotes_for_quotes_by_api_ninjas": "Returns one (or more) random quotes.", "v1_render_renderid_pdf_for_inkit": " ", "video_comments_for_youtube_v3_v2": "Get YouTube video comments."}, "aseqs": [{"api_name": "live_giveaways_by_platform_for_gamerpower", "api_action": "\nAction: live_giveaways_by_platform_for_gamerpower\nAction Input: {\n  \"platform\": \"pc\"\n}", "api_reaction": null}, {"api_name": "live_giveaways_by_type_for_gamerpower", "api_action": "\nAction: live_giveaways_by_type_for_gamerpower\nAction Input: {\n  \"type\": \"loot\"\n}", "api_reaction": null}, {"api_name": "sort_live_giveaways_for_gamerpower", "api_action": "\nAction: sort_live_giveaways_for_gamerpower\nAction Input: {}", "api_reaction": null}, {"api_name": "filter_group_giveaways_for_gamerpower", "api_action": "\nAction: filter_group_giveaways_for_gamerpower\nAction Input: {\n  \"platform\": \"pc\",\n  \"type\": \"loot\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch live giveaways by type for PC and then sort them by popularity,\n\t\"api_name\": \"live_giveaways_by_type_for_gamerpower\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "live_giveaways_by_type_for_gamerpower"}}, {"state": "generated_by_agent", "aseq": {"api_name": "sort_live_giveaways_for_gamerpower", "api_action": "\nAction: sort_live_giveaways_for_gamerpower\nAction Input: {\n  \"sort_by\": \"popularity\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "sort_live_giveaways_for_gamerpower", "api_action": "\nAction: sort_live_giveaways_for_gamerpower\nAction Input: {\n  \"by\": \"popularity\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "sort_live_giveaways_for_gamerpower", "api_action": "\nAction: sort_live_giveaways_for_gamerpower\nAction Input: {\n  \"sort_by\": \"popularity\"\n}", "api_reaction": null}}]}
{"URL": "64896", "query": "As a researcher, I'm interested in studying Twitter user behavior. Can you retrieve all the tweets for a user with userId '44196397'? Also, provide me with the likes received by the user and the retweets for a specific tweet with tweetId '1668868113725550592'. Additionally, fetch the details of the tweet, including comments and replies.", "api_names": ["user_likes_by_userid_for_twitter_aio", "tweet_retweets_for_twitter_aio", "Finish", "tweets_by_userid_for_twitter_aio", "tweet_details_for_twitter_aio", "get_all_countries_for_gis_engine", "api_whois_for_retrieve_dns_entries", "compare_route_names_for_compare_route_names", "amberwaves_retrieve_paged_collection_for_usda", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats", "get_all_publications_for_climate_news_feed", "geocode_for_uganda_api", "free_json_endpoint_for_free_phone_number_lookup_and_validation_api", "price_forecasts_for_marketci_analytics", "get_life_skill_tool_recipes_for_lost_ark_simple", "climate_forecast_for_30_days_for_vision_weather_map", "get_a_list_of_latest_profiles_for_is_this_coin_a_scam", "download_song_for_spotify_downloader", "get_scan_status_for_weblasso", "aircraft_database_stats_for_fachaapi"], "api_descs": {"Finish": "No description available.", "aircraft_database_stats_for_fachaapi": "Get the total number of known aircraft", "amberwaves_retrieve_paged_collection_for_usda": "Retrieves a paged collection of amber waves content nodes filtered by a particular section alias, ordered by descending release date.", "api_whois_for_retrieve_dns_entries": " ", "climate_forecast_for_30_days_for_vision_weather_map": "With the climate forecast for 30 days you can request weather data for the next 30 days. This product is based on a statistical approach for our historical weather data and is updated every hour.", "compare_route_names_for_compare_route_names": "Calculates the coefficient of how similar are 2 strings containing the name (and type) of the route. With a value of 0.9 and higher, it is possible to do auto-matching,at 0.2-0.9 - visual matching.", "download_song_for_spotify_downloader": "Download a song by spotify's song ID", "free_json_endpoint_for_free_phone_number_lookup_and_validation_api": "Please see [https://phone-number-api.com/docs/json](url) for details", "geocode_for_uganda_api": "This endpoint allows you to lookup locations in Uganda by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_a_list_of_latest_profiles_for_is_this_coin_a_scam": "Get a list of the top 100 crypto projects added to on isthiscoinascam.com. Ordered by date added.", "get_all_countries_for_gis_engine": "Get all supported countries", "get_all_publications_for_climate_news_feed": "Get the name of all publications this API delivers news from.", "get_life_skill_tool_recipes_for_lost_ark_simple": "Get List of Lost Ark Life Skill Tool Recipes", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats": "This call will grab a map of all of the games a player has played in the season.     \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\nExample:\nCorrect way to get the stats for Nikola Vucevic for his game against the Heat on 10/19/2022 would be this:\n/getNBAGamesForPlayer?playerID=28268405032&gameID=20221019_CHI@MIA\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nIf you want his games from last season, do this..\n/getNBAGamesForPlayer?playerID=28268405032&season=2022\n\nBut if you wanted to get all of his games this season, you don't have to include the season. Simply make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNBABoxScore call with that specific gameID.", "get_scan_status_for_weblasso": "Check the status of a scan (ongoing/completed) using a scan ID.", "price_forecasts_for_marketci_analytics": "An AI-generated price forecast for the Stock over the next 3 months.", "tweet_details_for_twitter_aio": "Receive all tweet informations and comments by tweetId.", "tweet_retweets_for_twitter_aio": "Receive all retweets for a tweet.", "tweets_by_userid_for_twitter_aio": "Receive all tweets ordered by most recent. You can use the cursor and count to navigate around.", "user_likes_by_userid_for_twitter_aio": "Receive all likes of a user. You can use the cursor and count to navigate around."}, "aseqs": [{"api_name": "tweets_by_userid_for_twitter_aio", "api_action": "\nAction: tweets_by_userid_for_twitter_aio\nAction Input: {\n  \"userid\": \"44196397\"\n}", "api_reaction": null}, {"api_name": "user_likes_by_userid_for_twitter_aio", "api_action": "\nAction: user_likes_by_userid_for_twitter_aio\nAction Input: {\n  \"userid\": \"44196397\"\n}", "api_reaction": null}, {"api_name": "tweet_retweets_for_twitter_aio", "api_action": "\nAction: tweet_retweets_for_twitter_aio\nAction Input: {\n  \"tweetid\": \"1668868113725550592\"\n}", "api_reaction": null}, {"api_name": "tweet_details_for_twitter_aio", "api_action": "\nAction: tweet_details_for_twitter_aio\nAction Input: {\n  \"tweetid\": \"1668868113725550592\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_userid_for_twitter_aio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_likes_by_userid_for_twitter_aio", "api_action": "\nAction: user_likes_by_userid_for_twitter_aio\nAction Input: {\n  \"userid\": \"44196397\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_retweets_for_twitter_aio", "api_action": "\nAction: tweet_retweets_for_twitter_aio\nAction Input: {\n  \"tweetId\": \"1668868113725550592\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_details_for_twitter_aio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_userid_for_twitter_aio", "api_action": "\nAction: tweets_by_userid_for_twitter_aio\nAction Input: {\n  \"userid\": \"44196397\",\n  \"count\": 100,\n  \"cursor\": \"-1\"\n}", "api_reaction": null}}]}
{"URL": "25164", "query": "I'm managing a carbon management project for my company and need to check the status of various tasks. Can you provide the status and details for the tasks with the following IDs: 'f3094b2f-501a-4931-aa9c-f2ace5b455e1', '6a923457-c12c-4d7a-b7f5-d8882fc12ad0', and '6028d3ee-2b80-4f3b-8b46-fd69c7ee5b40'? Please include the current progress, state, and total count of the results.", "api_names": ["Finish", "statusforemissionreductiontarget_for_carbon_management", "status_for_getting_pdf_urls_for_carbon_management", "games_for_jet_set_radio_api", "volume_from_to_number_for_unitconversion", "get_crypto_for_test_crypto_api", "validate_email_for_easy_email_validation", "marks_men_for_scoring_tables_api", "categories_list_for_amazon_data_v2", "sending_sms_otp_auto_generated_otp_for_2factor_authentication_india", "united_states_away_from_home_mobility_for_covid_19_economic_impact", "block_for_unicode_codepoints"], "api_descs": {"Finish": "No description available.", "block_for_unicode_codepoints": "Information about a Unicode block", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "games_for_jet_set_radio_api": "Returns a list of all Games", "get_crypto_for_test_crypto_api": "Get_Crypto", "marks_men_for_scoring_tables_api": "This retrieves all men's marks from the World Athletics Scoring Tables.", "sending_sms_otp_auto_generated_otp_for_2factor_authentication_india": "This endpoint is used to send Auto Generated SMS OTP to India", "status_for_getting_pdf_urls_for_carbon_management": "Get results in details from the task id.", "statusforemissionreductiontarget_for_carbon_management": "Get results in details from the task id.", "united_states_away_from_home_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent away from home.", "validate_email_for_easy_email_validation": "Validate an email", "volume_from_to_number_for_unitconversion": "Volume unit conversions"}, "aseqs": [{"api_name": "status_for_getting_pdf_urls_for_carbon_management", "api_action": "\nAction: status_for_getting_pdf_urls_for_carbon_management\nAction Input: {\n  \"is_id\": \"f3094b2f-501a-4931-aa9c-f2ace5b455e1\"\n}", "api_reaction": null}, {"api_name": "status_for_getting_pdf_urls_for_carbon_management", "api_action": "\nAction: status_for_getting_pdf_urls_for_carbon_management\nAction Input: {\n  \"is_id\": \"6a923457-c12c-4d7a-b7f5-d8882fc12ad0\"\n}", "api_reaction": null}, {"api_name": "status_for_getting_pdf_urls_for_carbon_management", "api_action": "\nAction: status_for_getting_pdf_urls_for_carbon_management\nAction Input: {\n  \"is_id\": \"6028d3ee-2b80-4f3b-8b46-fd69c7ee5b40\"\n}", "api_reaction": null}, {"api_name": "statusforemissionreductiontarget_for_carbon_management", "api_action": "\nAction: statusforemissionreductiontarget_for_carbon_management\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "status_for_getting_pdf_urls_for_carbon_management"}}, {"state": "generated_by_agent", "aseq": {"api_name": "status_for_getting_pdf_urls_for_carbon_management", "api_action": "\nAction: status_for_getting_pdf_urls_for_carbon_management\nAction Input: {\n  \"is_id\": \"f3094b2f-501a-4931-aa9c-f2ace5b455e1\",\n  \"extra_ids\": [\n    \"6a923457-c12c-4d7a-b7f5-d8882fc12ad0\",\n    \"6028d3ee-2b80-4f3b-8b46-fd69c7ee5b40\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "status_for_getting_pdf_urls_for_carbon_management", "api_action": "\nAction: status_for_geting_pdf_urls_for_carbon_management\nAction Input: {\n  \"is_id\": \"6028d3ee-2b80-4f3b-8b46-fd69c7ee5b40\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "status_for_getting_pdf_urls_for_carbon_management", "api_action": "\nAction: status_for_getting_pdf_urls_for_carbon_management\nAction Input: {\n  \"is_id\": \"f3094b2f-501a-4931-aa9c-f2ace5b455e1\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "status_for_getting_pdf_urls_for_carbon_management"}}]}
{"URL": "72375", "query": "I want to stay updated with all the latest news about climate change. Can you provide me with the API that fetches all climate change-related news? Additionally, I'd like to view the news specifically from 'The Times' newspaper using the Get Individual News Source news API.", "api_names": ["get_all_climate_change_related_news_for_climate_news_api_v2", "get_individual_news_source_news_for_climate_news_api_v2", "Finish", "info_for_investing_financial_stocks", "test_for_test_opta", "auto_complete_for_redfin_base", "trending_for_youtube_trending", "zipcodesbyids_for_mapreflex", "playlist_details_for_youtube", "php_versions_for_php_code_compiler", "loginuser_for_multipleteamscallingtest", "calculate_expenses_for_expense_data", "genericname_for_drug_info_and_price_history", "getorder_for_appibase", "get_random_user_for_ai_random_user_generator", "select_race_based_on_id_for_f1_race_schedule", "playerdetails_for_sportifyapi", "getpastevents_for_azure"], "api_descs": {"Finish": "No description available.", "auto_complete_for_redfin_base": "You send a request and receive the following information:\n- `id`: The unique identifier for the city.\n- `type`: The type of the city.\n- `name`: The name of the city.\n- `subName`: The additional description of the city.\n- `url`: The direct URL to access the city's information page on Redfin.com.\n- `active`: The active status of the city.\n- `claimedHome`: The status of claimed home ownership.\n- `invalidMRS`: The invalid MRS (Market Revenue Share) status.\n- `businessMarketIds`: The list of relevant business market IDs.\n- `countryCode`: The country code.\n- `internalSearchVolume`: The internal search volume statistic.", "calculate_expenses_for_expense_data": "<br /><br />\n<b>Authentication:</b> not required", "genericname_for_drug_info_and_price_history": "Given a brand name, returns a generic name", "get_all_climate_change_related_news_for_climate_news_api_v2": "This endpoint will return all news about Climate change from all around the world.", "get_individual_news_source_news_for_climate_news_api_v2": "Get news about climate change from a specific newspaper.", "get_random_user_for_ai_random_user_generator": "Get random user", "getorder_for_appibase": "Get an order", "getpastevents_for_azure": "Get past Azure events.", "info_for_investing_financial_stocks": "get forex info", "loginuser_for_multipleteamscallingtest": "Logs user into the system", "php_versions_for_php_code_compiler": "PHP Versions", "playerdetails_for_sportifyapi": "Player Details", "playlist_details_for_youtube": "Playlist Details", "select_race_based_on_id_for_f1_race_schedule": "Returns the race using the ID used in the database for each individual race.", "test_for_test_opta": "test", "trending_for_youtube_trending": "Gather Trending Videos from Youtube", "zipcodesbyids_for_mapreflex": "Get boundaries of given ZIP Codes (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"}, "aseqs": [{"api_name": "get_all_climate_change_related_news_for_climate_news_api_v2", "api_action": "\nAction: get_all_climate_change_related_news_for_climate_news_api_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"timesofindia\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"The Times\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"thetimes\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_related_news_for_climate_news_api_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "{\"source\":\"The Times\",\"category\":\"climate change\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_related_news_for_climate_news_api_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_related_news_for_climate_news_api_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_related_news_for_climate_news_api_v2"}}]}
{"URL": "12239", "query": "I'm searching for a specific house plant called 'philodendron'. Can you provide me with details about this plant, such as its family, common names, origin, climate preference, and watering needs? It would be great if you could also mention any insects or diseases it is prone to.", "api_names": ["get_by_latin_name_for_house_plants", "get_by_common_name_for_house_plants", "Finish", "getorderbyid_for_publicapitestinginbox", "crawl_for_seo_api", "country_details_level_1_for_countries_population", "press_releases_v2_list_for_seeking_alpha", "get_from_yts_for_torrent_search", "api_v2_estimated_exchange_amount_for_changenow_crypto_exchange", "products_for_seo_api", "haskell_versions_for_haskell_code_compiler", "get_pnr_status_v3_for_irctc"], "api_descs": {"Finish": "No description available.", "api_v2_estimated_exchange_amount_for_changenow_crypto_exchange": "This API endpoint returns estimated exchange amount for the exchange and some additional fields. Accepts to and from currencies, currencies' networks, exchange flow, and RateID.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>fromNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>toNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>flow</i></b></td>\n        <td><i>String</i></td>\n        <td>Type of exchange flow. Enum: [\"standard\", \"fixed-rate\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>type</i></b></td>\n        <td><i>String</i></td>\n        <td>Direction of exchange flow. Use \"direct\" value to set amount for currencyFrom and get amount of currencyTo. Use \"reverse\" value to set amount for currencyTo and get amount of currencyFrom. Enum: [\"direct\", \"reverse\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>rateId</i></b></td>\n        <td><i>String || null</i></td>\n        <td>RateId is needed for fixed-rate flow. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Current estimated amount would be valid until time in field \"validUntil\"</td>\n    </tr>\n    <tr>\n        <td><b><i>validUntil</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Date and time before estimated amount would be freezed in case of using rateId. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Estimated amount would be valid until this date and time</td>\n    </tr>\n    <tr>\n        <td><b><i>transactionSpeedForecast</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Dash-separated min and max estimated time in minutes</td>\n    </tr>\n    <tr>\n        <td><b><i>warningMessage</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Some warnings like warnings that transactions on this network take longer or that the currency has moved to another network</td>\n    </tr>\n    <tr>\n        <td><b><i>fromAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of fromCurrency (in case when type=reverse it is an estimated value)</td>\n    </tr>\n    <tr>\n        <td><b><i>toAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of toCurrency (in case when type=direct it is an estimated value)</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>", "country_details_level_1_for_countries_population": "Specified one valid param and retrieve access level 1 information about a country:\n- english name\n- population (in millions)\n\n\nValid params are country english name, ISO code 2 or ISO code 3", "crawl_for_seo_api": "Perform Google Search\n\n Parameters\n----------\nquery : the string query to perform search. supports advance queries. Check out https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters guide for formating\n\nReturns\n-------\njson: a the html source of the results page", "get_by_common_name_for_house_plants": "Retrieves all plants that match a given common plant name.", "get_by_latin_name_for_house_plants": "Retrieves all plants that match the provided Latin plant name.", "get_from_yts_for_torrent_search": "You can use this for moive search", "get_pnr_status_v3_for_irctc": "-", "getorderbyid_for_publicapitestinginbox": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "haskell_versions_for_haskell_code_compiler": "Haskell Versions", "press_releases_v2_list_for_seeking_alpha": "List press releases of specific symbol", "products_for_seo_api": "Search for products rankings"}, "aseqs": [{"api_name": "get_by_common_name_for_house_plants", "api_action": "\nAction: get_by_common_name_for_house_plants\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_latin_name_for_house_plants", "api_action": "\nAction: get_by_latin_name_for_house_plants\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_common_name_for_house_plants"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_common_name_for_house_plants"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_common_name_for_house_plants"}}]}
{"URL": "72188", "query": "My sister is organizing a beach party this weekend. Can you give me the 10-day daily forecast for our location? We need to know the expected temperatures, precipitation chance, and any weather alerts for the next 10 days. Additionally, we would like to have the hourly forecast for tomorrow, including the temperature, humidity, and wind speed. It would be helpful if you could also provide us with the maximum UV index for each day.", "api_names": ["Finish", "daily_forecast_10_days_for_easy_weather", "get_hillshading_tile_for_mapilion_vector_and_raster_map_tiles", "fed_funds_overnight_rate_for_u_s_economic_indicators", "show_transaction_details_for_coinbase", "get_the_states_for_location", "get_store_info_for_shopify_stores_info", "get_feed_data_for_instagram_fast"], "api_descs": {"Finish": "No description available.", "daily_forecast_10_days_for_easy_weather": "Get a 10-day daily forecast for the given latitude and longitude.", "fed_funds_overnight_rate_for_u_s_economic_indicators": "Get daily federal funds overnight rate at which commercial banks borrow and lend their excess reserves to each other overnight.", "get_feed_data_for_instagram_fast": "Get instagram feed, last 12 posts from username", "get_hillshading_tile_for_mapilion_vector_and_raster_map_tiles": "Returns special hillshading Raster tiles as PNG. Hillshading can be used as an overlay to create the look and feel of mountains. The version can be either v1 or v2.", "get_store_info_for_shopify_stores_info": "This endpoint retrieves information on any store in Shopify.", "get_the_states_for_location": "Get the states.", "show_transaction_details_for_coinbase": "Show details for an individual transaction."}, "aseqs": [{"api_name": "daily_forecast_10_days_for_easy_weather", "api_action": "\nAction: daily_forecast_10_days_for_easy_weather\nAction Input: {\n  \"longitude\": \"your_longitude\",\n  \"latitude\": \"your_latitude\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "daily_forecast_10_days_for_easy_weather"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_forecast_10_days_for_easy_weather"}}]}
{"URL": "55778", "query": "Fetch the full listing of data from the user profile of 'sindex' and also provide me with a comprehensive list of their friends and groups. I'm interested in getting a complete picture of their Steam Community presence.", "api_names": ["Finish", "user_profile_for_steam_community", "user_groups_list_for_steam_community", "user_friends_list_for_steam_community", "get_riddle_of_the_day_for_riddlie_", "getcompanies_for_women_in_tech", "logoutuser_for_freeplanhardlimitexternal", "options_chain_for_fancyoptions", "route_calculation_for_mymappi", "weapon_for_valorant_weapons", "format_for_ip_geo_location_and_ip_reputation", "v1_reversegeocoding_for_geocoding_by_api_ninjas", "get_your_whois_batches_for_bulk_whois", "get_for_instagram_media_downloader_v2", "search_by_category_filters_for_ikea_api", "valorant_players_for_valorant", "projected_pga_rankings_for_golf_leaderboard_data", "fish_api_fish_name_for_fish_species", "search_videos_for_tiktok_api", "get_champion_details_for_league_of_legends_api"], "api_descs": {"Finish": "No description available.", "fish_api_fish_name_for_fish_species": "This endpoint will return information for a specific fish", "format_for_ip_geo_location_and_ip_reputation": "Format to display data\nCan be \"json\" or \"xml\"\nBy default will be select json", "get_champion_details_for_league_of_legends_api": "Getting detail from champion name you give, translate by the language you give", "get_for_instagram_media_downloader_v2": "lol world", "get_riddle_of_the_day_for_riddlie_": "With this endpoint, you can request a riddle of the day. Each day API will serve a different riddle with an answer and other details.", "get_your_whois_batches_for_bulk_whois": "Get a list of your batches.", "getcompanies_for_women_in_tech": "For valid response try base URL", "logoutuser_for_freeplanhardlimitexternal": "", "options_chain_for_fancyoptions": "This endpoint returns the an options chain for a given ticker and expiration date.\n\nDate format.  YYYY-MM-DD", "projected_pga_rankings_for_golf_leaderboard_data": "This endpoint allows you to see the projected PGA rankings throughout a PGA event", "route_calculation_for_mymappi": "Calculates a route between an origin and a destination, possibly passing through many waypoints. It takes into consideration several configuration options in order to customize the response.", "search_by_category_filters_for_ikea_api": "Complimentary to the \"Search By Category\" endpoint. Obtain a list of filters available to a specified category.", "search_videos_for_tiktok_api": "Return Search Result", "user_friends_list_for_steam_community": "Get a full listing of in-game, online, and offline friends of a user.", "user_groups_list_for_steam_community": "Get a listing of all the public and private groups a user is apart of.", "user_profile_for_steam_community": "Get a full listing of data from a user profile. Friends, Groups, Steam Profile Level, and so much more.", "v1_reversegeocoding_for_geocoding_by_api_ninjas": "API Ninjas Reverse Geocoding API endpoint.", "valorant_players_for_valorant": "This API gets all valorant players", "weapon_for_valorant_weapons": "Returns the desired weapon's stats."}, "aseqs": [{"api_name": "user_profile_for_steam_community", "api_action": "\nAction: user_profile_for_steam_community\nAction Input: {\n  \"is_id\": \"sindex\"\n}", "api_reaction": null}, {"api_name": "user_friends_list_for_steam_community", "api_action": "\nAction: user_friends_list_for_steam_community\nAction Input: {\n  \"is_id\": \"sindex\"\n}", "api_reaction": null}, {"api_name": "user_groups_list_for_steam_community", "api_action": "\nAction: user_groups_list_for_steam_community\nAction Input: {\n  \"is_id\": \"sindex\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_profile_for_steam_community"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_friends_list_for_steam_community", "api_action": "\nAction: user_friends_list_for_steam_community\nAction Input: {\n  \"is_id\": \"sindex\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_groups_list_for_steam_community", "api_action": "\nAction: user_groups_list_for_steam_community\nAction Input: {\n  \"is_id\": \"sindex\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_profile_for_steam_community", "api_action": "{\"is_id\": \"sindex\", \"include_friends\": true, \"include_groups\": true}", "api_reaction": null}}]}
{"URL": "36818", "query": "I'm a cryptocurrency enthusiast and I want to stay updated on the latest trends and market changes. Can you provide me with the most visited cryptocurrencies today, along with the newly listed coins? Also, I'm interested in the top gainers and top losers in the market. Thank you!", "api_names": ["most_visited_for_cryptocurrency_markets", "top_losers_for_cryptocurrency_markets", "Finish", "newly_listed_for_cryptocurrency_markets", "top_gainers_for_cryptocurrency_markets", "specified_song_for_halsey_lyric_snippets", "ott_providers_for_ott_details", "get_all_states_data_for_us_counties", "video_data_by_url_for_tiktok_solutions", "top_grossing_ios_apps_for_app_store", "estimated_salary_for_jsearch", "v2_auto_complete_for_trading_view", "info_for_ig_private_api", "get_matches_on_a_specific_date_for_fifa_2022_schedule_and_stats", "getdisasterbyradiusandgps_for_rankiteo_climate_risk_assessment", "stock_quote_for_finshorts", "get_all_fastingcenters_for_fastingcenters", "geocode_v1_json_for_opencage_geocoder", "getallsearches_for_youtube_influencer_search", "year_make_lookup_returns_json_for_hull_id_boat_hin_decoder"], "api_descs": {"Finish": "No description available.", "estimated_salary_for_jsearch": "Get estimated salaries for a jobs around a location", "geocode_v1_json_for_opencage_geocoder": "geocode an address", "get_all_fastingcenters_for_fastingcenters": "Get all", "get_all_states_data_for_us_counties": "states", "get_matches_on_a_specific_date_for_fifa_2022_schedule_and_stats": "Parameters:\n1.  date - Date to query the matches\n2. utc_offset - Change the utc offset of the date to suit your timezone.\n\nReturns the matches on the specified date and timezone.\nWorks for both historical, live, and future dates.\nMatch data consists of date, time, home team, away team, and many more, see the example response for an example.", "getallsearches_for_youtube_influencer_search": "Get all searches", "getdisasterbyradiusandgps_for_rankiteo_climate_risk_assessment": "Get disasters which have coordinate points falling into a specific radius for a specific date range", "info_for_ig_private_api": "Info", "most_visited_for_cryptocurrency_markets": "Most visited cryptocurrencies today.", "newly_listed_for_cryptocurrency_markets": "Recently listed cryptocurrencies.", "ott_providers_for_ott_details": "Get  information on OTT platforms we suuport .", "specified_song_for_halsey_lyric_snippets": "This endpoint retrieves the specified song by name and returns it in the response.", "stock_quote_for_finshorts": "Finshorts provide companies stock quote data in realtime", "top_gainers_for_cryptocurrency_markets": "Cryptocurrencies with the most gainers today.", "top_grossing_ios_apps_for_app_store": "Get list of the top grossing ios apps", "top_losers_for_cryptocurrency_markets": "Cryptocurrencies with the most losses today.", "v2_auto_complete_for_trading_view": "Get suggestion by term or phrase", "video_data_by_url_for_tiktok_solutions": "Get Video Data by U", "year_make_lookup_returns_json_for_hull_id_boat_hin_decoder": "Lookup the boat manufacturers (makes) for a given year. This API can be used to create selection drop down menu for year and make. It will return json results"}, "aseqs": [{"api_name": "most_visited_for_cryptocurrency_markets", "api_action": "\nAction: most_visited_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}, {"api_name": "newly_listed_for_cryptocurrency_markets", "api_action": "\nAction: newly_listed_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}, {"api_name": "top_gainers_for_cryptocurrency_markets", "api_action": "\nAction: top_gainers_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}, {"api_name": "top_losers_for_cryptocurrency_markets", "api_action": "\nAction: top_losers_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "most_visited_for_cryptocurrency_markets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "newly_listed_for_cryptocurrency_markets", "api_action": "\nAction: newly_listed_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_gainers_for_cryptocurrency_markets", "api_action": "\nAction: top_gainers_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_losers_for_cryptocurrency_markets", "api_action": "\nAction: top_losers_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_gainers_for_cryptocurrency_markets", "api_action": "\nAction: top_gainers_for_cryptocurrency_markets\nAction Input: {}", "api_reaction": null}}]}
{"URL": "68294", "query": "I'm a marketer planning an NFT campaign and I need to identify the most popular NFT collections. Can you provide me with the top-ranking collections based on volume, sales, floor price, and market cap? I would like to know the names, logos, floor prices, market caps, and the number of owners for each collection. Additionally, please include the collections from different networks such as Ethereum, BNB Chain, Polygon, Arbitrum, Optimism, and Solana.", "api_names": ["trending_for_top_nft_collections", "Finish", "top_ranking_for_top_nft_collections", "trending_with_pagination_for_top_nft_collections", "top_ranking_testnets_for_top_nft_collections", "list_of_room_facility_types_for_booking_com", "ethprice_for_uniswap_v2_api", "disposable_domain_and_suggest_domain_for_fast_email_verifier", "get_product_reviews_in_turkey_for_amazon_turkey_data_scrapeer", "ppp_for_000", "pornstar_search_for_quality_porn", "get_company_ratios_for_finance_data", "get_watches_by_brand_family_model_for_watch_database", "list_accounts_for_smile", "get_a_hundreds_of_all_kind_of_articles_from_pluralsight_com_for_pluralsight_articles", "dax_point_changes_for_each_month_january_august_2022_for_dax", "user_highlights_list_for_instagram_v13", "carat_for_metals_prices_rates_api", "theaters_detail_for_flixster", "schoolname_for_dcps_project"], "api_descs": {"Finish": "No description available.", "carat_for_metals_prices_rates_api": "Using the API karat endpoint, you will be able to retrieve latest information about gold rates per karat.", "dax_point_changes_for_each_month_january_august_2022_for_dax": "Gets the actual points, gains and losses for each individual month.", "disposable_domain_and_suggest_domain_for_fast_email_verifier": "Find out if the domain is disposable and get a suggested domain.", "ethprice_for_uniswap_v2_api": "Return the current eth price in uniswap v2", "get_a_hundreds_of_all_kind_of_articles_from_pluralsight_com_for_pluralsight_articles": "This endpoint will return back a data with hundreds of articles from Pluralsight.com", "get_company_ratios_for_finance_data": "Get Company ratios latest data", "get_product_reviews_in_turkey_for_amazon_turkey_data_scrapeer": "This endpoint can get you product reviews in amazon tr products. This method is required the product id in the amazon tr page if you don't know you can get search with my method to. And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/", "get_watches_by_brand_family_model_for_watch_database": "Get Watches By Brand Family Model", "list_accounts_for_smile": "Get a list of user accounts.", "list_of_room_facility_types_for_booking_com": "Returns room facility types names", "pornstar_search_for_quality_porn": "Search for a porn star using the \"Query\".\nA list of all stars found is returned, or a detail pornstar if only one is found.", "ppp_for_000": "Ppp", "schoolname_for_dcps_project": "gets all data from a specific school through input of its name", "theaters_detail_for_flixster": "Get theater and showtime information", "top_ranking_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings", "top_ranking_testnets_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings", "trending_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings/trending", "trending_with_pagination_for_top_nft_collections": "Trending with pagination provided by OpenSea", "user_highlights_list_for_instagram_v13": "Get instagram user highlights list by user id."}, "aseqs": [{"api_name": "top_ranking_for_top_nft_collections", "api_action": "\nAction: top_ranking_for_top_nft_collections\nAction Input: {}", "api_reaction": null}, {"api_name": "top_ranking_testnets_for_top_nft_collections", "api_action": "\nAction: top_ranking_testnets_for_top_nft_collections\nAction Input: {}", "api_reaction": null}, {"api_name": "trending_for_top_nft_collections", "api_action": "\nAction: trending_for_top_nft_collections\nAction Input: {}", "api_reaction": null}, {"api_name": "trending_with_pagination_for_top_nft_collections", "api_action": "\nAction: trending_with_pagination_for_top_nft_collections\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_ranking_for_top_nft_collections"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_with_pagination_for_top_nft_collections"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_ranking_for_top_nft_collections"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_ranking_for_top_nft_collections"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_ranking_for_top_nft_collections"}}]}
{"URL": "7325", "query": "I'm starting a new company and I want to create a meme to announce it on social media. Can you help me find meme templates related to business and entrepreneurship? Additionally, I need to know the number of text boxes supported by each template and the available fonts to use for the captions.", "api_names": ["templates_for_meme_generator_and_template_database", "fonts_for_meme_generator_and_template_database", "search_for_meme_generator_and_template_database", "Finish", "get_currencies_list_for_cities_cost_of_living", "ping_for_stock_api", "search_for_twitter_scraper", "get_revision_for_rushtranslate", "zipcodesbyids_for_mapreflex", "get_hsn_tsn_for_hsn_tsn", "stream_m3u8_format_for_terabox_downloader", "bestbuyproductdata_for_bestbuy_product_data", "list_of_champions_for_ncaa_final_four", "image_stable_diffusion_for_image_diffusion", "get_vault_by_name_for_mongodb_wix", "health_check_for_test_api_v2"], "api_descs": {"Finish": "No description available.", "bestbuyproductdata_for_bestbuy_product_data": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)", "fonts_for_meme_generator_and_template_database": "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins", "get_currencies_list_for_cities_cost_of_living": "Get a list of all the Currencies available", "get_hsn_tsn_for_hsn_tsn": "Search for dedicated car. Year is optional. Records are limited by 100 rows.", "get_revision_for_rushtranslate": "Get detailed information about a specific revision.", "get_vault_by_name_for_mongodb_wix": "Get Vault by name", "health_check_for_test_api_v2": "health check", "image_stable_diffusion_for_image_diffusion": "Most stable and fast diffusion to generate safe image `stuff.`", "list_of_champions_for_ncaa_final_four": "Get a list of every National Champion sorted alphabetically.", "ping_for_stock_api": "Ping API", "search_for_meme_generator_and_template_database": "Returns meme templates that contain a specific string. **searchString is case sensitive**", "search_for_twitter_scraper": "Search Twitter by keyword, hashtag or URL", "stream_m3u8_format_for_terabox_downloader": "Stream by url with m3u8 format", "templates_for_meme_generator_and_template_database": "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**.", "zipcodesbyids_for_mapreflex": "Get boundaries of given ZIP Codes (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"}, "aseqs": [{"api_name": "templates_for_meme_generator_and_template_database", "api_action": "\nAction: templates_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchString\": \"business\"\n}", "api_reaction": null}, {"api_name": "fonts_for_meme_generator_and_template_database", "api_action": "\nAction: fonts_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "templates_for_meme_generator_and_template_database", "api_action": "\nAction: templates_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "templates_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "templates_for_meme_generator_and_template_database", "api_action": "\nAction: templates_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "templates_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchString\": \"business\"\n}", "api_reaction": null}}]}
{"URL": "73788", "query": "I need to check if any users with the username 'John' are shadowbanned on Reddit. Can you also search for subreddits that contain the keyword 'programming'?", "api_names": ["Finish", "search_subreddits_for_reddit_fast_search", "shadowban_checker_for_reddit_fast_search", "search_comments_for_reddit_fast_search", "news_list_for_flixster", "heartbeat_for_daily_sec_financial_statement_dataset", "view_application_for_geolocation_simulation_for_mobile_apps", "getfileversions_for_groupdocs_watermark_cloud", "get_items_for_kvstore", "getfileversions_for_aspose_diagram_cloud", "consulta_cadastro_de_contribuintes_for_consulta_cnpj_tempo_real", "specific_skin_for_cs_skin_api", "profile_for_tiktok_v3", "storageexists_for_groupdocs_watermark_cloud", "us_de_for_us_gas_prices", "team_players_for_trackmania", "users_for_rttrt", "get_season_totals_regular_season_for_nba_stats_v2", "majors_price_for_investing_financial_stocks", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment"], "api_descs": {"Finish": "No description available.", "consulta_cadastro_de_contribuintes_for_consulta_cnpj_tempo_real": "Consulta as Inscrições Estaduais no Cadastro Centralizado de Contribuintes", "get_items_for_kvstore": "Get <key,value> pairs ordered by DESC creation time", "get_season_totals_regular_season_for_nba_stats_v2": "Api to query season totals regular season", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get disasters which have address falling into a specific radius for a specific date range", "getfileversions_for_aspose_diagram_cloud": " ", "getfileversions_for_groupdocs_watermark_cloud": " ", "heartbeat_for_daily_sec_financial_statement_dataset": "A simple heartbeat that returns the time of the server to check if the connection to the server is working.", "majors_price_for_investing_financial_stocks": "get all majors  currencies price", "news_list_for_flixster": "List latest news", "profile_for_tiktok_v3": "get profile information by username", "search_comments_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the comments.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "search_subreddits_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the Subreddits.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "shadowban_checker_for_reddit_fast_search": "This endpoint allows you to check if a Reddit user is shadowbanned. Shadowbanning is a practice where a user's actions and content are hidden from the public without their knowledge. This endpoint provides a way to detect if a user is affected by shadowbanning on Reddit.\n\nParameters:\n\nusername (string, optional): Specifies the username of the Reddit user to check for shadowbanning. The default value is set to \"John\".\nfull (boolean, optional): Determines whether additional user information should be returned in the response. If set to True, it includes details such as the user's join date, post karma, comment karma, and verified mail status. By default, it is set to False.\nproxy (string, optional): Specifies the proxy server to be used for the request. If required, you can provide the proxy server's details to route the request through a specific network or location. The default value is None, indicating no proxy is used.\ntimeout (integer, optional): Specifies the maximum time, in seconds, to wait for a response from the Reddit API. The default timeout is set to 5 seconds.\nReturns:\n\nThe endpoint returns a JSON response with the following fields:\n\nis_shadowbanned (boolean): Indicates whether the specified Reddit user is shadowbanned. If True, the user is shadowbanned. If False, the user is not shadowbanned.\nIf full is set to True, the response also includes the following additional fields:\nusername (string): The username of the Reddit user.\njoin_date (string): The date and time when the user joined Reddit.\npost_karma (string): The amount of karma the user has gained from posting.\ncomment_karma (string): The amount of karma the user has gained from commenting.\nverified_mail (string): Indicates whether the user has a verified email associated with their account.\nError Handling:\n\nThe endpoint handles potential errors during the process. If the provided username is invalid, a ValueError is raised with an HTTPException status code of 400 and an error message indicating the issue.\n\nPossible errors during the request process, such as proxy connection failures, request timeouts, or internal server errors, are handled as HTTPExceptions with status codes 500 and appropriate error details.\n\nNote:\n\nThe endpoint utilizes the Reddit API to fetch information about the user.\nProper validation and handling of the username parameter are performed to ensure the input is valid and avoid potential errors.\nThe endpoint supports the usage of proxy servers for the request if required.\nThe timeout parameter allows controlling the maximum waiting time for the response from the Reddit API.\nThe endpoint provides basic information about the user and helps identify if they are shadowbanned on Reddit.", "specific_skin_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a specific counterstrike skin \n(prices for field tested condition in USD)\n\n(replace skin_name, underscores instead of spaces)\n\nExample: /api/AK-47_Redline", "storageexists_for_groupdocs_watermark_cloud": " ", "team_players_for_trackmania": "Get Players that are in the Openplanet Team.", "us_de_for_us_gas_prices": "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.", "users_for_rttrt": "used to get all users", "view_application_for_geolocation_simulation_for_mobile_apps": "Enter your applicationID in the route"}, "aseqs": [{"api_name": "shadowban_checker_for_reddit_fast_search", "api_action": "\nAction: shadowban_checker_for_reddit_fast_search\nAction Input: {\n  \"shadowban\": \"John\"\n}", "api_reaction": null}, {"api_name": "search_subreddits_for_reddit_fast_search", "api_action": "\nAction: search_subreddits_for_reddit_fast_search\nAction Input: {\n  \"search_subreddits\": \"programming\"\n}", "api_reaction": null}, {"api_name": "search_comments_for_reddit_fast_search", "api_action": "\nAction: search_comments_for_reddit_fast_search\nAction Input: {\n  \"search_comments\": \"John\"\n}", "api_reaction": null}, {"api_name": "search_subreddits_for_reddit_fast_search", "api_action": "\nAction: search_subreddits_for_reddit_fast_search\nAction Input: {\n  \"search_subreddits\": \"coding\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "shadowban_checker_for_reddit_fast_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_subreddits_for_reddit_fast_search", "api_action": "\nAction: search_subreddits_for_reddit_fast_search\nAction Input: {\n  \"keyword\": \"programming\",\n  \"limit\": 250\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "shadowban_checker_for_reddit_fast_search", "api_action": "\nAction: shadowban_checker_for_reddit_fast_search\nAction Input: {\n  \"username\": \"John\",\n  \"full\": false,\n  \"proxy\": null,\n  \"timeout\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "shadowban_checker_for_reddit_fast_search", "api_action": "\nAction: shadowban_checker_for_reddit_fast_search\nAction Input: {\n  \"username\": \"John\",\n  \"full\": false\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "shadowban_checker_for_reddit_fast_search", "api_action": "\\nAction: shadowban_checker_for_reddit_fast_search\\nAction Input: {\\n  \"shadownban\": \"John\"\\n}", "api_reaction": null}}]}
{"URL": "16357", "query": "I'm planning a medical research project and I need access to cancer images. Can you provide me with the collection names, modalities, and body parts examined available in The Cancer Imaging Archive? Please format the output as a CSV file.", "api_names": ["getmodalityvalues_for_the_cancer_imaging_archive", "getbodypartvalues_for_the_cancer_imaging_archive", "getcollectionvalues_for_the_cancer_imaging_archive", "Finish", "send_sms_for_hqsms", "nadeo_players_for_trackmania", "getuserbyname_for_thisshouldbefree", "random_proxy_for_proxypage", "search_posts_for_reddit_fast_search", "get_data_for_backend", "get_artists_for_spotify_web", "get_movie_id_by_title_for_cinema_api", "get_game_for_league_of_legends_esports", "locations_v2_list_for_the_fork_the_spoon", "searchcontent_for_youtube_search_v3", "listaddresses_for_chaingateway_io", "responses_from_a_question_for_moodring", "get_the_clock_for_alpaca_trading", "dashboard_for_surveymethods", "artist_discography_overview_for_spotify_v3"], "api_descs": {"Finish": "No description available.", "artist_discography_overview_for_spotify_v3": "Get artist discography overview", "dashboard_for_surveymethods": "Get the deployment and response dashboard", "get_artists_for_spotify_web": "Get one or more artists", "get_data_for_backend": "Get all Data", "get_game_for_league_of_legends_esports": "In this api method you can search all of the game data with game id. You can get this id from the Get Vods api method.", "get_movie_id_by_title_for_cinema_api": "Use this endpoint to retrieve the ID of the movies you are interested in. You can search your movie or your preferite actor.", "get_the_clock_for_alpaca_trading": "Returns the market clock", "getbodypartvalues_for_the_cancer_imaging_archive": "Set of all body part names filtered by query keys", "getcollectionvalues_for_the_cancer_imaging_archive": "Set of all TCIA collection names", "getmodalityvalues_for_the_cancer_imaging_archive": "getModalityValues", "getuserbyname_for_thisshouldbefree": "", "listaddresses_for_chaingateway_io": "Returns all ethereum addresses created with an account.", "locations_v2_list_for_the_fork_the_spoon": "List relating locations by Google place id", "nadeo_players_for_trackmania": "Get Players from nadeo.", "random_proxy_for_proxypage": "Get random proxy,\n\nchoose type and country", "responses_from_a_question_for_moodring": "Get all responses to a question.", "search_posts_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the posts.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "searchcontent_for_youtube_search_v3": "The search endpoint allows you to search for videos, playlists, and channels on YouTube.", "send_sms_for_hqsms": ""}, "aseqs": [{"api_name": "getcollectionvalues_for_the_cancer_imaging_archive", "api_action": "\nAction: getcollectionvalues_for_the_cancer_imaging_archive\nAction Input: {}", "api_reaction": null}, {"api_name": "getmodalityvalues_for_the_cancer_imaging_archive", "api_action": "\nAction: getmodalityvalues_for_the_cancer_imaging_archive\nAction Input: {}", "api_reaction": null}, {"api_name": "getbodypartvalues_for_the_cancer_imaging_archive", "api_action": "\nAction: getbodypartvalues_for_the_cancer_imaging_archive\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getcollectionvalues_for_the_cancer_imaging_archive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getmodalityvalues_for_the_cancer_imaging_archive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbodypartvalues_for_the_cancer_imaging_archive", "api_action": "\nAction: getbodypartvalues_for_the_cancer_imaging_archive\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcollectionvalues_for_the_cancer_imaging_archive", "api_action": "\nAction: getcollectionvalues_for_the_cancer_imaging_archive\nAction Input: {}", "api_reaction": null}}]}
{"URL": "40959", "query": "My company is organizing a charity event, and we want to include a Fantasy 5 game. Can you provide us with the latest 10 drawings? Additionally, generate a randomized Quick Pick for each participant to make it more exciting.", "api_names": ["latest_10_drawings_for_fantasy_5", "random_quickpick_for_play_for_fantasy_5", "Finish", "username_to_pk_convert_for_instagram_api_v2", "live_whois_lookup_for_live_whois_lookup", "water_vapour_history_by_lat_lng_for_ambee_water_vapor_data", "similar_to_property_detail_for_uk_real_estate_rightmove", "crypto_symbol_for_holistic_finance_stock_data", "business_units_search_by_domain_for_unofficial_trust_pilot", "image_search_for_real_time_lens_data", "coindesk_for_crypto_news_v2", "unfurl_for_unfurl_api_written_in_go", "student_property_to_rent_for_uk_real_estate_rightmove", "getresult_for_html5tomp4", "get_historical_company_article_data_for_stoxx", "footballersbyclub_for_premier_league_stats", "get_many_sets_for_pokemon_tcg_card_prices", "live_game_data_for_basketball_datafeeds_by_rolling_insights"], "api_descs": {"Finish": "No description available.", "business_units_search_by_domain_for_unofficial_trust_pilot": "Search for exact business unit by domain name", "coindesk_for_crypto_news_v2": "Get the latest news from CoinDesk.", "crypto_symbol_for_holistic_finance_stock_data": "Returns a list of all available crypto symbols", "footballersbyclub_for_premier_league_stats": "Get list of footballers for a given club.", "get_historical_company_article_data_for_stoxx": "Provides historical data for a given company including news, polarity, sentiment, and more.\n\n`{10 items\n\"FeedUrl\":\"https://finance.yahoo.com/news/electronic-arts-shoots-higher-amazon-073805755.html?.tsrc=rss\"\n\"Polarity\":0\n\"PublishDate\":\"2022-08-26T07:38:05+00:00\"\n\"Subjectivity\":1.5\n\"Title\":\"Electronic Arts Shoots Higher on Amazon Bid Report\"\n\"VaderAggregate\":0.5\n\"VaderNegative\":0.2\n\"VaderNeutral\":0.5\n\"VaderPositive\":0.8\n\"id\":\"67988e33-4ded-3b46-b2c6-9f2d96580132\"\n}`", "get_many_sets_for_pokemon_tcg_card_prices": "Returns many sets based on query parameters.\n\nA set is a grouping of cards that are periodically released together. Every card has a set. Every set is part of a series.", "getresult_for_html5tomp4": "get result of previous requested rendering with job_id", "image_search_for_real_time_lens_data": "Search image by url and get visual matches, knowledge graph, products and prices, text and object detections. See it in on [Google Lens](https://lens.google.com/uploadbyurl?url=https%3A%2F%2Fi.imgur.com%2FHBrB8p0.png).", "latest_10_drawings_for_fantasy_5": "Get the latest, and last winning 10 Fantasy 5 number sets.", "live_game_data_for_basketball_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.", "live_whois_lookup_for_live_whois_lookup": "Get Complete Whois Detail With Domain Name", "random_quickpick_for_play_for_fantasy_5": "Get a randomized Quick Pick for the Fantasy 5. This is a random set of playable Fantasy 5 numbers.", "similar_to_property_detail_for_uk_real_estate_rightmove": "Similar to this property for detail", "student_property_to_rent_for_uk_real_estate_rightmove": "Student property to rent", "unfurl_for_unfurl_api_written_in_go": "Send a url as a url param to our API to preview it", "username_to_pk_convert_for_instagram_api_v2": "it converts any username on instagram to the unique id which is called pk", "water_vapour_history_by_lat_lng_for_ambee_water_vapor_data": "Water vapour History by lat lng"}, "aseqs": [{"api_name": "latest_10_drawings_for_fantasy_5", "api_action": "\nAction: latest_10_drawings_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "random_quickpick_for_play_for_fantasy_5", "api_action": "\nAction: random_quickpick_for_play_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_10_drawings_for_fantasy_5", "api_action": "\nAction: latest_10_drawings_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_quickpick_for_play_for_fantasy_5", "api_action": "\nAction: random_quickpick_for_play_for_fantasy_5\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_quickpick_for_play_for_fantasy_5"}}]}
{"URL": "47781", "query": "I need to set up a price alert for a specific game. The game ID is 12345 and I want to receive an email when the price drops below $20. Can you set up the price alert for me? Also, provide me with a link to manage my alerts.", "api_names": ["game_lookup_for_cheapshark_game_deals", "list_of_games_for_cheapshark_game_deals", "manage_alerts_for_cheapshark_game_deals", "Finish", "latest_information_for_symbol_for_bybit", "overview_for_papercliff", "search_b_for_seo_api", "getimage_for_background_remover", "getpatient_for_the_cancer_imaging_archive", "code_for_barcode_monster", "get_user_orders_for__demo_project_v13", "get_stream_language_for_gwyo_twitch", "united_states_small_businesses_revenue_for_covid_19_economic_impact", "venues_for_baseball", "real_time_price_for_twelve_data", "flight_for_flight_integration", "today_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions", "get_anime_by_id_for_anime_jokes", "6_timeseries_endpoint_for_currenciesexchangerateapi", "v2_user_tweets_and_replies_for_twitter_data"], "api_descs": {"6_timeseries_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'start_date': \n'end_date': \n'base': \n'symbols': \nResponse: This endpoint returns the exchange rates for the specified currencies over the specified time period in JSON format.", "Finish": "No description available.", "code_for_barcode_monster": "Returns code information", "flight_for_flight_integration": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "game_lookup_for_cheapshark_game_deals": "Gets info for a specific game. Response includes a list of all deals associated with the game.", "get_anime_by_id_for_anime_jokes": "Search anime using ID", "get_stream_language_for_gwyo_twitch": "Get Stream Language (using username or id)\n( return an empty JSON object if not currently LIVE )", "get_user_orders_for__demo_project_v13": " ", "getimage_for_background_remover": "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits).\n", "getpatient_for_the_cancer_imaging_archive": "Returns a set of patient objects filtered by query keys", "latest_information_for_symbol_for_bybit": "Get the latest information for symbol.", "list_of_games_for_cheapshark_game_deals": "Get a list of games that contain a given title or matches steamAppID. Response includes the cheapest current deal for each game.", "manage_alerts_for_cheapshark_game_deals": "Send an email containing a link to manage your alerts.", "overview_for_papercliff": "Returns summary statistics about how many keywords have been found and how many articles and agencies papercliff looked at", "real_time_price_for_twelve_data": "This endpoint is a lightweight method that allows retrieving only the real-time price of the selected instrument.", "search_b_for_seo_api": "Perform SEO search for secondary search engine", "today_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers daily sure and precise over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.", "united_states_small_businesses_revenue_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change of small businesses revenue seasonally adjusted relative to January 4 - 31, 2020.", "v2_user_tweets_and_replies_for_twitter_data": "v2/user-tweets-and-replies", "venues_for_baseball": "Baseball venues"}, "aseqs": [{"api_name": "manage_alerts_for_cheapshark_game_deals", "api_action": "\nAction: manage_alerts_for_cheapshark_game_deals\nAction Input: {\n  \"email\": \"example@example.com\",\n  \"action\": \"manage\"\n}", "api_reaction": null}, {"api_name": "game_lookup_for_cheapshark_game_deals", "api_action": "\nAction: game_lookup_for_cheapshark_game_deals\nAction Input: {\n  \"is_id\": 12345\n}", "api_reaction": null}, {"api_name": "list_of_games_for_cheapshark_game_deals", "api_action": "\nAction: list_of_games_for_cheapshark_game_deals\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "manage_alerts_for_cheapshark_game_deals"}}, {"state": "generated_by_agent", "aseq": {"api_name": "manage_alerts_for_cheapshark_game_deals", "api_action": "\nAction: manage_alerts_for_cheapshark_game_deals\nAction Input: {\n  \"gameId\": \"12345\",\n  \"email\": \"example@example.com\",\n  \"price\": 20,\n  \"action\": \"add\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "manage_alerts_for_cheapshark_game_deals", "api_action": "\nAction: manage_alerts_for_cheapshark_game_deals\nAction Input: {\n  \"email\": \"example@example.com\",\n  \"action\": \"create\",\n  \"game_id\": 12345,\n  \"alert_type\": \"price-dropped-under-", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "manage_alerts_for_cheapshark_game_deals", "api_action": "\nAction: manage_alerts_for_cheapshark_game_deals\nAction Input: {\n  \"email\": \"example@example.com\",\n  \"price_type\": \"below\",\n  \"threshold_price\": 20,\n  \"game_id\": 12345\n}", "api_reaction": null}}]}
{"URL": "1971", "query": "I'm planning to attend a cricket match. Can you provide me with the fixtures for the upcoming week, the results from the previous week, and the available cricket series? I need to know the venue, date, and teams playing in these fixtures and results.", "api_names": ["results_for_cricket_live_data", "fixtures_for_cricket_live_data", "series_for_cricket_live_data", "Finish", "details_for_patreon", "stations_v2_get_information_for_airvisual", "sports_api_for_weatherapi_com", "transform_for_unicode_codepoints", "status_200_for_daily_ovrll_0822202140642", "send_sms_for_hqsms", "shows_id_for_tvmaze", "channel_details_for_youtube", "all_climate_change_news_for_climate_change_news_v5", "fetch_by_type_and_region_for_magical_taske", "ublacklist_txt_for_stopmodreposts_blocklist", "singleoffer_for_lbc_shark", "getnews_for_diablo4_smartable", "top_paid_games_for_store_apps", "find_user_find_get_for_facebook_user_info", "get_user_pins_for_pinterest_apis"], "api_descs": {"Finish": "No description available.", "all_climate_change_news_for_climate_change_news_v5": "With this endpoint you can get all climate change news", "channel_details_for_youtube": "Channel Details", "details_for_patreon": "Get the details and general information of a Creator with the `creator_id`.", "fetch_by_type_and_region_for_magical_taske": "You can make a request finer by combining region and type. This endpoint will return the records requested. You have to provide a limit of the number of records you want.", "find_user_find_get_for_facebook_user_info": " ", "fixtures_for_cricket_live_data": "Lists next 50 fixtures across all series'", "get_user_pins_for_pinterest_apis": "Get User Pins by user name", "getnews_for_diablo4_smartable": "Get Diablo 4 news.", "results_for_cricket_live_data": "Lists last 50 Results across all series'", "send_sms_for_hqsms": "", "series_for_cricket_live_data": "Lists available cricket series' to query", "shows_id_for_tvmaze": "Get show information", "singleoffer_for_lbc_shark": "get single offer by ID", "sports_api_for_weatherapi_com": "Sports API method allows a user to get listing of all upcoming sports events for football, cricket and golf in json.", "stations_v2_get_information_for_airvisual": "Get information at specific station by its id", "status_200_for_daily_ovrll_0822202140642": "Testing", "top_paid_games_for_store_apps": "Top paid games chart.", "transform_for_unicode_codepoints": "Transform a String, e.g. , to upper-case, NFC, NFD, …", "ublacklist_txt_for_stopmodreposts_blocklist": "ublacklist.txt endpoint"}, "aseqs": [{"api_name": "fixtures_for_cricket_live_data", "api_action": "\nAction: fixtures_for_cricket_live_data\nAction Input: {}", "api_reaction": null}, {"api_name": "fixtures_for_cricket_live_data", "api_action": "\nAction: fixtures_for_cricket_live_data\nAction Input: {}", "api_reaction": null}, {"api_name": "results_for_cricket_live_data", "api_action": "\nAction: results_for_cricket_live_data\nAction Input: {}", "api_reaction": null}, {"api_name": "series_for_cricket_live_data", "api_action": "\nAction: series_for_cricket_live_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch fixtures for the upcoming week, results from the previous week, and available cricket series using the sports_api_for_weatherapi_com API,\n\t\"api_name\": \"sports_api_for_weatherapi_com\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "results_for_cricket_live_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "series_for_cricket_live_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "series_for_cricket_live_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fixtures_for_cricket_live_data"}}]}
{"URL": "54440", "query": "I'm writing a scientific article on blood and need your help. Can you provide me with information about an article with the DOI '10.1111/fima.12262'? Furthermore, I'm interested in the total number of records present in the Crossref database.", "api_names": ["search_for_crossref", "recordcount_for_crossref", "doi_for_crossref", "Finish", "get_all_ai_news_for_ai_news_v2", "9939c2c0_7fad_11e9_8019_f5bb8c5310ff_for_matinapi", "user_feed_by_name_for_tiktok_solutions", "fantasy_squad_api_for_fantasy_cricket", "cities_for_flixbus", "get_random_20_questions_by_difficulty_for_ase_s_quiz_api", "trending_creators_for_tiktok_private", "qanda_for_real_estate_exam", "shares_float_for_holistic_finance_stock_data", "tournament_info_for_ice_hockey_data", "hashtag_feed_video_posts_for_tiktok_data", "mrna2aminoacid_for_dna2protein", "get_cities_by_filter_for_biggestcities", "user_followers_for_twitter_v4", "community_post_comments_for_youtube", "getbookcoverimage_for_book_cover_api"], "api_descs": {"9939c2c0_7fad_11e9_8019_f5bb8c5310ff_for_matinapi": "a", "Finish": "No description available.", "cities_for_flixbus": "Get a list of cities", "community_post_comments_for_youtube": "Community Post Comments", "doi_for_crossref": "Information of a article with specified doi.", "fantasy_squad_api_for_fantasy_cricket": "Using match ID get the list of players in the squad for the match as announced by the teams. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com", "get_all_ai_news_for_ai_news_v2": "This endpoint will return back all news about artificial intelligence around the world", "get_cities_by_filter_for_biggestcities": "Get Cities by filter", "get_random_20_questions_by_difficulty_for_ase_s_quiz_api": "Get random 20 questions by difficulty", "getbookcoverimage_for_book_cover_api": "Get a book cover image by isbn and language code", "hashtag_feed_video_posts_for_tiktok_data": "Get hashtag feed\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "mrna2aminoacid_for_dna2protein": "Transform an mRNA sequence into a sequence of Amino Acids.", "qanda_for_real_estate_exam": "Returns all multiple choice and true or false questions with answers and feedback.", "recordcount_for_crossref": "How many records do we have?", "search_for_crossref": "Let’s look at some of the results", "shares_float_for_holistic_finance_stock_data": "Provides the amount of current shares float.", "tournament_info_for_ice_hockey_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.", "trending_creators_for_tiktok_private": "Get Trending By Creators", "user_feed_by_name_for_tiktok_solutions": "Get **User Feed** by **Name**", "user_followers_for_twitter_v4": "User Followers"}, "aseqs": [{"api_name": "doi_for_crossref", "api_action": "\nAction: doi_for_crossref\nAction Input: {\n  \"doi\": \"10.1111/fima.12262\"\n}", "api_reaction": null}, {"api_name": "search_for_crossref", "api_action": "\nAction: search_for_crossref\nAction Input: {\n  \"query\": \"blood\"\n}", "api_reaction": null}, {"api_name": "recordcount_for_crossref", "api_action": "\nAction: recordcount_for_crossref\nAction Input: {\n  \"rows\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "doi_for_crossref"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_crossref"}}, {"state": "generated_by_agent", "aseq": {"api_name": "doi_for_crossref", "api_action": "\nAction: doi_for_crossref\nAction Input: {\n  \"doi\": \"10.1111/fima.12262\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "doi_for_crossref", "api_action": "\nAction: doi_for_crossref\nAction Input: {\n  \"doi\": \"10.1111/fima.12262\"\n}", "api_reaction": null}}]}
{"URL": "28673", "query": "In order to enhance my financial application, I need to integrate the Wealth Reader API. Can you provide me with the list of entities supported by the API and their contact phone numbers? Also, give me the error codes and their descriptions.", "api_names": ["error_codes_for_wealth_reader_api", "entities_for_wealth_reader_api", "Finish", "get_all_stats_for_free_nba", "findplacebytext_for_trueway_places", "get_account_info_for_blaze_verify", "categories_for_free_stopwords", "v1_trademarksearch_for_uspto_trademark", "get_brands_for_top_brand_names_valuation_api", "greatest_of_all_time_artists_for_billboard_v2", "domain_detail_for_sitedomain", "odds_for_cbet"], "api_descs": {"Finish": "No description available.", "categories_for_free_stopwords": "Will list all available word categories. Check this before calling /stopwords", "domain_detail_for_sitedomain": "get detail by did", "entities_for_wealth_reader_api": "Obtiene el listado de entidades soportadas y la información necesaria para dibujar el formulario de login de la entidad.\n", "error_codes_for_wealth_reader_api": "Listado de códigos de error. Presta especial atención a que no todos los códigos de error deben recibir el mismo tratamiento por parte de tu aplicación. Ante un error de password incorrecto no debes reintentar la llamada con los mismos parámetros, pero ante un error que te indique que la entidad está en mantenimiento sí puedes reintentarlo. Pide una sesión técnica con nuestro equipo para resolver cualquier duda sobre la gestión de errores.\n", "findplacebytext_for_trueway_places": "Search for places by text string", "get_account_info_for_blaze_verify": "Get general account information like the email of the account owner and available credits.", "get_all_stats_for_free_nba": "Retrieves all stats", "get_brands_for_top_brand_names_valuation_api": "Get the brand data", "greatest_of_all_time_artists_for_billboard_v2": "Get the Greatest of All Time Artists chart.", "odds_for_cbet": "Latest Odds for Cbet", "v1_trademarksearch_for_uspto_trademark": "Does a keyword search and returns trademark name, serial number,services code, status, owner, address, filing date and registration date."}, "aseqs": [{"api_name": "entities_for_wealth_reader_api", "api_action": "\nAction: entities_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}, {"api_name": "error_codes_for_wealth_reader_api", "api_action": "\nAction: error_codes_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}, {"api_name": "entities_for_wealth_reader_api", "api_action": "\nAction: entities_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}, {"api_name": "error_codes_for_wealth_reader_api", "api_action": "\nAction: error_codes_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "entities_for_wealth_reader_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "error_codes_for_wealth_reader_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "entities_for_wealth_reader_api", "api_action": "\nAction: entities_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "entities_for_wealth_reader_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "entities_for_wealth_reader_api"}}]}
{"URL": "19423", "query": "I am planning a family trip and we want to attend a live sports event. Can you suggest a list of special markets and the corresponding event details? We are interested in prematch events.", "api_names": ["Finish", "event_details_for_pinnacle_odds", "list_of_sports_for_pinnacle_odds", "list_of_special_markets_for_pinnacle_odds", "get_search_for_fluximmo", "3_months_flight_info_for_flight_information_of_hong_kong_international_airport", "echo_for_pragmavantapi", "download_tiktok_video_for_tiktok_video_downloader", "fetch_manga_for_mangaverse_api", "provision_for_timedb", "user_story_highlight_metadata_for_instagram_data", "currencies_for_currencyapi_net", "playlist_details_for_youtube_v3_v2", "languages_for_translate_all_languages", "fixtures_for_msport", "stays_properties_detail_facilities_for_booking_com_v2", "match_for_rugbyapi2", "dailyweatherzip_for_history", "getspecialcompetitionview_for_betsports", "user_for_hummingbird_apiv1"], "api_descs": {"3_months_flight_info_for_flight_information_of_hong_kong_international_airport": "Today - 90D or Today + 14D", "Finish": "No description available.", "currencies_for_currencyapi_net": "Gets list of currencies we support", "dailyweatherzip_for_history": "This endpoint returns the historical weather for a given day for a given location (Country and zip code)", "download_tiktok_video_for_tiktok_video_downloader": "Provide Link of TikTok video in url parameter to get Download Links of TikTok Video.", "echo_for_pragmavantapi": "Echo request", "event_details_for_pinnacle_odds": "Get a event details and history odds. history:[time, value, max bet]. `Period_results - status`: 1 = Event period is settled, 2 = Event period is re-settled, 3 = Event period is cancelled, 4 = Event period is re-settled as cancelled, 5 = Event is deleted", "fetch_manga_for_mangaverse_api": "This will get the list of manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy", "fixtures_for_msport": "*  list of future match up to next 7 days\n*  you can retrieve full list of soccer matches up to next 7 days", "get_search_for_fluximmo": "get_search", "getspecialcompetitionview_for_betsports": "getSpecialCompetitionView data", "languages_for_translate_all_languages": "Returns a list of supported languages for translation.", "list_of_special_markets_for_pinnacle_odds": "Get a list of special markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value. You must always use the since parameter, after the first call. Please note that prematch and live events are different", "list_of_sports_for_pinnacle_odds": "Get a list of sports", "match_for_rugbyapi2": "Get information of a Rugby match by its ID.", "playlist_details_for_youtube_v3_v2": "Get playlist details", "provision_for_timedb": "**Runs provisioning on database(s) causing downsampling of data. Provides connection and retention information for account as a result**\n\nMust be run after new measurements or fields are added to datasets (e.q. if new sensor is providing data or additional fields should be stored for existing sensor/measurement).", "stays_properties_detail_facilities_for_booking_com_v2": "Get detail facilities", "user_for_hummingbird_apiv1": "Get informations about a single user", "user_story_highlight_metadata_for_instagram_data": "Get user story highlight metadata from a direct url to a story"}, "aseqs": [{"api_name": "list_of_sports_for_pinnacle_odds", "api_action": "\nAction: list_of_sports_for_pinnacle_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "list_of_special_markets_for_pinnacle_odds", "api_action": "\nAction: list_of_special_markets_for_pinnacle_odds\nAction Input: {\n  \"sport_id\": 1,\n  \"event_type\": \"prematch\"\n}", "api_reaction": null}, {"api_name": "event_details_for_pinnacle_odds", "api_action": "\nAction: event_details_for_pinnacle_odds\nAction Input: {\n  \"event_id\": 1575120642\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_of_special_markets_for_pinnacle_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_of_special_markets_for_pinnacle_odds", "api_action": "{\"since\": \"prematch\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_of_special_markets_for_pinnacle_odds", "api_action": "\nAction: list_of_special_markets_for_pinnacle_odds\nAction Input: {\n  \"sport_id\": 1,\n  \"event_type\": \"prematch\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_of_special_markets_for_pinnacle_odds", "api_action": "\nAction: list_of_special_markets_for_pinnacle_odds\nAction Input: {\n  \"sport_id\": 1,\n  \"event_type\": \"prematch\"\n}", "api_reaction": null}}]}
{"URL": "65424", "query": "My company is organizing a dog show and we're looking for a variety of dog breeds to participate. Can you provide us with a list of dog breeds along with their profiles, including information on their temperament, size, exercise needs, grooming requirements, and any special skills or traits associated with each breed? It would be great if you could also mention any specific training or handling requirements for each breed.", "api_names": ["get_specific_dog_breed_for_dogbreeds", "get_all_dog_breeds_for_dogbreeds", "Finish", "get_top_tier_stays_filter_for_airbnb_v2", "latest_retrieve_selected_160_symbols_for_live_metal_prices", "exchange_rates_for_currency_v2", "available_for_supersaas_online_bookings_and_appointment_scheduling", "locations_v2_search_deprecated_for_hotels", "v1_users_email_for_sertifi_esignature_and_epayment", "teams_get_rankings_for_divanscore", "get_stream_game_name_for_gwyo_twitch", "get_order_status_for_crypto_swap"], "api_descs": {"Finish": "No description available.", "available_for_supersaas_online_bookings_and_appointment_scheduling": "", "exchange_rates_for_currency_v2": "Convert Currency value from and to.", "get_all_dog_breeds_for_dogbreeds": "Get all info from dog breeds", "get_order_status_for_crypto_swap": "Get the data and status of a previously created order", "get_specific_dog_breed_for_dogbreeds": "Get all info from specific dog breed", "get_stream_game_name_for_gwyo_twitch": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )", "get_top_tier_stays_filter_for_airbnb_v2": "-", "latest_retrieve_selected_160_symbols_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, and Platinum provided in 160+ currencies including USD, GBP and EUR.", "locations_v2_search_deprecated_for_hotels": "Search for related locations and suggestions", "teams_get_rankings_for_divanscore": "Get rankings of specific team", "v1_users_email_for_sertifi_esignature_and_epayment": " "}, "aseqs": [{"api_name": "get_all_dog_breeds_for_dogbreeds", "api_action": "\nAction: get_all_dog_breeds_for_dogbreeds\nAction Input: {}", "api_reaction": null}, {"api_name": "get_specific_dog_breed_for_dogbreeds", "api_action": "\nAction: get_specific_dog_breed_for_dogbreeds\nAction Input: {\"slug\": \"afghan-hound\"}", "api_reaction": null}, {"api_name": "get_specific_dog_breed_for_dogbreeds", "api_action": "\nAction: get_specific_dog_breed_for_dogbreeds\nAction Input: {\"slug\": \"afghan-hound\"}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_dog_breeds_for_dogbreeds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_dog_breeds_for_dogbreeds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_dog_breeds_for_dogbreeds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_dog_breeds_for_dogbreeds"}}]}
{"URL": "74831", "query": "I want to introduce my friends to the Fantasy 5 game and would like to gather some information. Can you provide me with the latest winning number set and the general statistics of the Fantasy 5 numbers? Additionally, give me a random Quick Pick for the game and the winning number sets from the last ten drawings.", "api_names": ["general_statistics_for_fantasy_5", "latest_10_drawings_for_fantasy_5", "Finish", "latest_drawing_for_fantasy_5", "random_quickpick_for_play_for_fantasy_5", "teams_get_news_for_unofficial_cricbuzz", "query_divesites_by_a_country_or_a_region_for_world_scuba_diving_sites_api", "simplifybasic_for_mathematical_symbolic_expression_manipulator", "paginate_through_campany_employees_information_for_human_resources_api", "by_state_city_for_homeless_shelter", "get_all_campany_employees_information_for_human_resources_api", "tour_rankings_for_tennis_live_data", "models_for_car_api", "asset_markets_by_id_for_crypto_exchanges", "getallquotes_for_radio_world_75_000_worldwide_fm_radio_stations_", "get_gst_info_filing_data_for_gst_details_filing_data", "v1_bucketlist_for_bucket_list_by_api_ninjas", "get_post_likes_for_twitter_v5", "getstandardmaptile_for_maptiles", "carbonfootprintfromflight_for_carbonfootprint"], "api_descs": {"Finish": "No description available.", "asset_markets_by_id_for_crypto_exchanges": "Get Asset Markets by Asset ID", "by_state_city_for_homeless_shelter": "Search Homeless Shelters by State & City", "carbonfootprintfromflight_for_carbonfootprint": "Calculate CO2e in Kg from a travel by air.", "general_statistics_for_fantasy_5": "This endpoint pulls basic statistics of the Fantasy 5 numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.", "get_all_campany_employees_information_for_human_resources_api": "This endpoint gets all the available records in the employees table, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...", "get_gst_info_filing_data_for_gst_details_filing_data": "Just punch in the GSTIN & get company info & filing data.", "get_post_likes_for_twitter_v5": "Get Post Likes By Post ID", "getallquotes_for_radio_world_75_000_worldwide_fm_radio_stations_": "You will get all the quotes here based on.\n- limit\n- page", "getstandardmaptile_for_maptiles": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap", "latest_10_drawings_for_fantasy_5": "Get the latest, and last winning 10 Fantasy 5 number sets.", "latest_drawing_for_fantasy_5": "Get the latest, and last winning Fantasy 5 winning number set.", "models_for_car_api": "Search models by year, make, model, trim or make_id.\n\nTo include the models make in the description request with the query parameter as `verbose=yes`.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Ford\", \"Acura\"]}, {\"field\": \"year\", \"op\": \">=\", \"val\": 2010}]\n\nAllowed json operators are: =, !=, >, <, >=, <=, in, not in, like, not like, not null, and is null.\n\nAllowed json search fields are: year, make, model, make_id, created, and modified.", "paginate_through_campany_employees_information_for_human_resources_api": "This endpoint lets you paginate through all the available records in the employees' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...", "query_divesites_by_a_country_or_a_region_for_world_scuba_diving_sites_api": "The endpoint returns a json list of dive sites which match the region or country entered as the query. The range of results depend but there is usually around 100-500 sites for each country. There are around 15'000 dive sites listed in the database.", "random_quickpick_for_play_for_fantasy_5": "Get a randomized Quick Pick for the Fantasy 5. This is a random set of playable Fantasy 5 numbers.", "simplifybasic_for_mathematical_symbolic_expression_manipulator": " ", "teams_get_news_for_unofficial_cricbuzz": "Get news by team", "tour_rankings_for_tennis_live_data": "Lists the top 100 players in the relevant tour ranking with their position, movement, and ranking points.", "v1_bucketlist_for_bucket_list_by_api_ninjas": "Returns a random bucket list idea."}, "aseqs": [{"api_name": "latest_drawing_for_fantasy_5", "api_action": "\nAction: latest_drawing_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "general_statistics_for_fantasy_5", "api_action": "\nAction: general_statistics_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "random_quickpick_for_play_for_fantasy_5", "api_action": "\nAction: random_quickpick_for_play_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_10_drawings_for_fantasy_5", "api_action": "\nAction: latest_10_drawings_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_drawing_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}]}
{"URL": "83217", "query": "I am planning a dinner party and I need to find nutritional information for various foods. Can you help me search for foods using keywords like 'chicken', 'broccoli', and 'rice'? I would like the results to include the brand owner 'XYZ Foods' and display 10 foods per page. Additionally, please provide me with the nutritional information for the food with FDC ID 1497465.", "api_names": ["search_foods_using_keywords_for_food_nutrition_information", "Finish", "checkseatavailability_for_irctc", "apitest_for_myapi", "me_for_ocoya", "properties_v2_list_sold_deprecated_for_realty_in_us", "getfutureeventsbytopic_for_azure", "latest_movie_for_disney_worlds"], "api_descs": {"Finish": "No description available.", "apitest_for_myapi": "aaaaaaaaaaaaaaaa", "checkseatavailability_for_irctc": "-", "getfutureeventsbytopic_for_azure": "Get future Azure events by topic.", "latest_movie_for_disney_worlds": "Get the latest movies released from disney and other platforms", "me_for_ocoya": "Returns information about authenticated user.", "properties_v2_list_sold_deprecated_for_realty_in_us": "List sold properties", "search_foods_using_keywords_for_food_nutrition_information": "Search for foods using keywords."}, "aseqs": [{"api_name": "search_foods_using_keywords_for_food_nutrition_information", "api_action": "\nAction: search_foods_using_keywords_for_food_nutrition_information\nAction Input: {\n  \"query\": \"broccoli\",\n  \"brandowner\": \"XYZ Foods\",\n  \"pagesize\": \"10\",\n  \"pagenumber\": \"1\"\n}", "api_reaction": null}, {"api_name": "search_foods_using_keywords_for_food_nutrition_information", "api_action": "\nAction: search_foods_using_keywords_for_food_nutrition_information\nAction Input: {\n  \"query\": \"rice\",\n  \"brandowner\": \"XYZ Foods\",\n  \"pagesize\": \"10\",\n  \"pagenumber\": \"1\"\n}", "api_reaction": null}, {"api_name": "search_foods_using_keywords_for_food_nutrition_information", "api_action": "\nAction: search_foods_using_keywords_for_food_nutrition_information\nAction Input: {\n  \"query\": \"potato\",\n  \"brandowner\": \"XYZ Foods\",\n  \"pagesize\": \"10\",\n  \"pagenumber\": \"1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_foods_using_keywords_for_food_nutrition_information"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_foods_using_keywords_for_food_nutrition_information", "api_action": "\nAction: search_foods_using_keywords_for_food_nutrition_information\nAction Input: {\n  \"query\": \"chicken broccoli rice\",\n  \"brandowner\": \"XYZ Foods\",\n  \"pagesize\": \"10\",\n  \"pagenumber\": \"2\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_foods_using_keywords_for_food_nutrition_information", "api_action": "\nAction: search_foods_using_keywords_for_food_nutrition_information\nAction Input: {\n  \"query\": \"chicken\",\n  \"brandowner\": \"XYZ Foods\",\n  \"pagesize\": \"10\",\n  \"pagenumber\": \"1\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_foods_using_keywords_for_food_nutrition_information", "api_action": "{\"query\": \"chicken\", \"brandowner\": \"XYZ Foods\", \"pagesize\": \"10\", \"pagenumber\": \"1\"}", "api_reaction": null}}]}
{"URL": "28171", "query": "I want to know the special reports related to the finance industry. Can you list them along with the trending news and their summary information?", "api_names": ["news_v2_list_special_reports_for_cnbc", "news_v2_list_trending_for_cnbc", "symbols_get_profile_for_cnbc", "Finish", "tikapi_for_tiktok", "live_aircraft_by_icao_for_fachaapi", "get_channels_for_50k_radio_stations", "random_img_anime_for_random_anime_img", "bilingual_dictionary_for_webit_language", "get_cryptocurrency_details_for_crypto_update_live", "gettodousingget_for_todo", "get_field_and_field_invite_id_for_signnow", "matchmanagers_for_americanfootballapi", "hashtag_for_instagram_1", "sabr_hist_for_kiann_options_sabr", "status_200_for_daily_ovrll_0822202140642", "search_products_for_yiwugo_product_data", "get_a_translation_for_dictionary_translation_hablaa", "competitions_standings_for_zeus_api", "south_korea_scheduled_flights_level_for_global_flight_data"], "api_descs": {"Finish": "No description available.", "bilingual_dictionary_for_webit_language": "Powerful multi-language bilingual neural translation dictionary, supporting 80+ languages.", "competitions_standings_for_zeus_api": "List the current standings for a league 🔝.", "get_a_translation_for_dictionary_translation_hablaa": "Get a translation by defining source and destination languages as well as a word to translate.", "get_channels_for_50k_radio_stations": "Get channel list", "get_cryptocurrency_details_for_crypto_update_live": "This endpoint gives live detailed information about the current value of a particular cryptocurrency.", "get_field_and_field_invite_id_for_signnow": "The endpoint returns field and field invite ids.", "gettodousingget_for_todo": "Get todo from id", "hashtag_for_instagram_1": "Posts by hashtag", "live_aircraft_by_icao_for_fachaapi": "Get live positioning for an aircraft with a specific ICAO HEX Code", "matchmanagers_for_americanfootballapi": "Get managers for a specific American Football match by providing its ID.", "news_v2_list_special_reports_for_cnbc": "List special reports", "news_v2_list_trending_for_cnbc": "List trending news", "random_img_anime_for_random_anime_img": "Random link", "sabr_hist_for_kiann_options_sabr": "This function pulls out the latest 5 time-stamp snapshot of the SABR calibrated parameters.\nThere are choices of either 'btc' or 'eth'.\n\nThe data returns, amongst, the time-to-expiry, the error-in-calibration (where error = sum[abs(target_vol - sabr_vol)]", "search_products_for_yiwugo_product_data": "search products\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "south_korea_scheduled_flights_level_for_global_flight_data": "Get weekly South Korea scheduled departing flights level.", "status_200_for_daily_ovrll_0822202140642": "Testing", "symbols_get_profile_for_cnbc": "Get summary information of stock quote, index, exchange, etc...", "tikapi_for_tiktok": "test"}, "aseqs": [{"api_name": "news_v2_list_trending_for_cnbc", "api_action": "\nAction: news_v2_list_trending_for_cnbc\nAction Input: {\n  \"tag\": \"Articles\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "symbols_get_profile_for_cnbc", "api_action": "\nAction: symbols_get_profile_for_cnbc\nAction Input: {\n  \"issueid\": 107266315\n}", "api_reaction": null}, {"api_name": "news_v2_list_special_reports_for_cnbc", "api_action": "\nAction: news_v2_list_special_reports_for_cnbc\nAction Input: {}", "api_reaction": null}, {"api_name": "symbols_get_profile_for_cnbc", "api_action": "\nAction: symbols_get_profile_for_cnbc\nAction Input: {\n  \"issueid\": 107268502\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get the special reports and trending news from CNBC, as well as their summary information using the appropriate APIs.\n\t\"api_name\": \"news_v2_list_special_reports_for_cnbc\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "news_v2_list_special_reports_for_cnbc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_v2_list_special_reports_for_cnbc", "api_action": "\nAction: news_v2_list_special_reports_for_cnbc\nAction Input: {}\n", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_v2_list_special_reports_for_cnbc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_v2_list_special_reports_for_cnbc"}}]}
{"URL": "54534", "query": "Please translate the sentence 'I love coding' into French. If the source language is not specified, assume it is English. Additionally, detect the language of the sentence using the fast language detection API.", "api_names": ["translate_for_translate_v3", "Finish", "fast_language_detection_for_translate_v3", "memre_api_v1_users_user_id_learning_stats_for_learning_engine", "getstorestatuslist_for_evosis_s_game_database", "assetbyid_for_bravenewcoin", "sport_markets_live_straight_for_pinaculo", "get_the_channels_social_accounts_and_contacts_for_live_tv_api", "subusers_id_shares_sendernames_for_smsapi_com", "9939c2c0_7fad_11e9_8019_f5bb8c5310ff_for_matinapi", "get_search_for_fluximmo", "timeseries_for_hedonometer", "korean_baby_boy_names_for_korean_baby_name_ranking", "fee_payment_for_finhost", "house_prices_get_sales_history_for_zoopla_v2"], "api_descs": {"9939c2c0_7fad_11e9_8019_f5bb8c5310ff_for_matinapi": "a", "Finish": "No description available.", "assetbyid_for_bravenewcoin": "Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint.", "fast_language_detection_for_translate_v3": "This endpoint will return the Language of the Text", "fee_payment_for_finhost": "Calculates transfer payment according to the fee plan", "get_search_for_fluximmo": "get_search", "get_the_channels_social_accounts_and_contacts_for_live_tv_api": "It has links to different social platforms such as Facebook.....", "getstorestatuslist_for_evosis_s_game_database": "Returns as Json of store status list.", "house_prices_get_sales_history_for_zoopla_v2": "Get sales history", "korean_baby_boy_names_for_korean_baby_name_ranking": "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count.", "memre_api_v1_users_user_id_learning_stats_for_learning_engine": "Get the most effective times of day for a user to study.\n", "sport_markets_live_straight_for_pinaculo": "Get sport markets live straight.", "subusers_id_shares_sendernames_for_smsapi_com": " ", "timeseries_for_hedonometer": "Call the happiness timeseries", "translate_for_translate_v3": "Return Translated Text and the source language if it wasn't specified"}, "aseqs": [{"api_name": "fast_language_detection_for_translate_v3", "api_action": "\nAction: fast_language_detection_for_translate_v3\nAction Input: {\n  \"text\": \"I love coding\"\n}", "api_reaction": null}, {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n  \"text\": \"I love coding\",\n  \"dest\": \"fr\",\n  \"src\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fast_language_detection_for_translate_v3", "api_action": "\nAction: fast_language_detection_for_translate_v3\nAction Input: {\n  \"text\": \"I love coding\"\n}", "api_reaction": null}}]}
{"URL": "27359", "query": "I work for a sports magazine and I need to gather data for an article. Can you provide me with the breadcrumb navigation item and banners for the sports section of our website? Additionally, I would like to include any special offers related to sports betting. Thank you.", "api_names": ["get_banners_new_for_betsports", "superoffer_for_betsports", "getbreadcrumbnavitem_for_betsports", "Finish", "get_category_tree_category_tree_get_for_shopee_v2", "get_all_match_play_today_by_competitions_for_match_api", "competitor_small_image_for_allscores", "market_get_movers_for_fidelity_investments", "get_all_state_names_for_fast_food_restaurants_usa_top_50_chains", "team_stats_by_category_for_serie_a", "get_raster_tile_for_mapilion_vector_and_raster_map_tiles", "generating_provider_specific_reports_for_odesk_apis", "search_for_twitter_v2_v2", "categories_list_for_hm_hennes_mauritz", "season_schedule_for_baseball_datafeeds_by_rolling_insights", "getgroups_for_maytapi_whatsapp"], "api_descs": {"Finish": "No description available.", "categories_list_for_hm_hennes_mauritz": "List all categories from H&M", "competitor_small_image_for_allscores": "Get competitor small image. It generates image/png.", "generating_provider_specific_reports_for_odesk_apis": "This API allows callers to fetch data source of themselves. No monetary fields, such as charges or earnings, are supported. The caller of this API must be the provider himself.", "get_all_match_play_today_by_competitions_for_match_api": "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id.", "get_all_state_names_for_fast_food_restaurants_usa_top_50_chains": "GET all {State} names", "get_banners_new_for_betsports": "get-banners-new data", "get_category_tree_category_tree_get_for_shopee_v2": "Get shopee category tree", "get_raster_tile_for_mapilion_vector_and_raster_map_tiles": "Returns Raster tiles as PNG. These can be used in mapping libraries like Leaflet. The style-name can be one of:\n- `kurviger-liberty` a map style developed for Kurviger.de\n- `osm-bright` the default Osm Bright style", "getbreadcrumbnavitem_for_betsports": "GetBreadCrumbNavItem api data", "getgroups_for_maytapi_whatsapp": "Sets the option for getting the acknowledge messages from the webhook to true or false.", "market_get_movers_for_fidelity_investments": "Get market movers which are most actives, top gainers, top losers", "search_for_twitter_v2_v2": "Search", "season_schedule_for_baseball_datafeeds_by_rolling_insights": "Returns season schedule for the specified season. If omitted, returns the schedule for current season.", "superoffer_for_betsports": "superOffer data", "team_stats_by_category_for_serie_a": "This endpoints allows you to retrieve players statistics accross different categories. Possible categories are: goals, shots, assists, crosses, saves, avgkmtraveled, headshotgoals , offsides,  corners , playingtime, posts-crossbars ,ballpossession]"}, "aseqs": [{"api_name": "getbreadcrumbnavitem_for_betsports", "api_action": "\nAction: getbreadcrumbnavitem_for_betsports\nAction Input: {}", "api_reaction": null}, {"api_name": "get_banners_new_for_betsports", "api_action": "\nAction: get_banners_new_for_betsports\nAction Input: {}", "api_reaction": null}, {"api_name": "superoffer_for_betsports", "api_action": "\nAction: superoffer_for_betsports\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbreadcrumbnavitem_for_betsports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_raster_tile_for_mapilion_vector_and_raster_map_tiles"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbreadcrumbnavitem_for_betsports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbreadcrumbnavitem_for_betsports"}}]}
{"URL": "77378", "query": "I'm a trader and I want to analyze the prices of all world currencies. Can you fetch the prices of all world currencies for me? Also, provide me with the prices of the top 50 cryptocurrencies.", "api_names": ["git_all_world_currencies_prices_for_cion_prices_api", "Finish", "list_of_special_markets_for_pinnacle_odds", "v1_users_email_for_sertifi_esignature_and_epayment", "get_d_tails_image_for_opt_nc_public_docker_images", "get_jokes_for_world_of_jokes", "mpds_for_materials_platform_for_data_science", "get_screeners_for_tradingview_ta_api_technical_analysis_", "provinces_and_municipalities_for_58_provinces_of_algeria", "hesab_yarat_for_hesab"], "api_descs": {"Finish": "No description available.", "get_d_tails_image_for_opt_nc_public_docker_images": "Récupérer tous les détails d'une image spécifique.", "get_jokes_for_world_of_jokes": "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria.", "get_screeners_for_tradingview_ta_api_technical_analysis_": "Get list of screeners.", "git_all_world_currencies_prices_for_cion_prices_api": "This end point will return back prices of world currencies", "hesab_yarat_for_hesab": "Yoxdur", "list_of_special_markets_for_pinnacle_odds": "Get a list of special markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value. You must always use the since parameter, after the first call. Please note that prematch and live events are different", "mpds_for_materials_platform_for_data_science": "Retrieve materials data, see www.mpds.io", "provinces_and_municipalities_for_58_provinces_of_algeria": "All Algeria provinces and ther municipalities.", "v1_users_email_for_sertifi_esignature_and_epayment": " "}, "aseqs": [{"api_name": "git_all_world_currencies_prices_for_cion_prices_api", "api_action": "\nAction: git_all_world_currencies_prices_for_cion_prices_api\nAction Input: {}", "api_reaction": null}, {"api_name": "git_all_world_currencies_prices_for_cion_prices_api", "api_action": "\nAction: git_all_world_currencies_prices_for_cion_prices_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "git_all_world_currencies_prices_for_cion_prices_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "git_all_world_currencies_prices_for_cion_prices_api", "api_action": "\nAction: git_all_world_currencies_prices_for_cion_prices_api\nAction Input: {}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "git_all_world_currencies_prices_for_cion_prices_api"}}]}
{"URL": "63016", "query": "I'm working on an SEO project and I require information about the keyword 'social media marketing'. Can you fetch the search volume, CPC, competition level, and score for this keyword in India? Additionally, provide me with the global results for the same keyword.", "api_names": ["global_result_single_for_seo_keyword_research", "keyword_research_api_for_seo_keyword_research", "Finish", "weather_for_currencyconverter", "calculate_distance_between_cities_for_location_and_time", "areas_id_for_zeus_api", "create_joke_for_humor_jokes_and_memes", "consulta_pessoa_for_consulta_cnpj_tempo_real", "get_message_status_for_d7_viber", "get_distance_in_km_for_great_circle_math_api", "regions_for_streamlinewatch_streaming_guide", "account_details_account_for_finhost", "reddit_for_check_username", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb", "market_get_full_for_bb_finance", "get_all_restaurant_locations_by_zipcode_for_restaurants_near_me_usa", "getcrops_for_agrofitdata", "sourcingresume_for_screening_and_matching_resumes"], "api_descs": {"Finish": "No description available.", "account_details_account_for_finhost": "Account bank detailes", "areas_id_for_zeus_api": "List one area given by id 🔍.", "calculate_distance_between_cities_for_location_and_time": "Calculate distance between two cities. We return the [Geodesic distance](https://en.wikipedia.org/wiki/Geodesics_on_an_ellipsoid) and [Great-circle distance](https://en.wikipedia.org/wiki/Great-circle_distance) for different use cases. Note: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/distance/bylocation` endpoint instead.", "consulta_pessoa_for_consulta_cnpj_tempo_real": "Consulta Pessoa", "create_joke_for_humor_jokes_and_memes": "Create a joke using a large language model.", "get_all_restaurant_locations_by_zipcode_for_restaurants_near_me_usa": "GET all Restaurant locations by zipcode", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb": "This endpoint takes your epic centre latitude, longitude along with radius in KM and returns all postcodes and suburbs within it.", "get_distance_in_km_for_great_circle_math_api": "Returns circle math distance in kilometers.", "get_message_status_for_d7_viber": "Retrieve the delivery status of Viber messages that were sent earlier.", "getcrops_for_agrofitdata": " ", "global_result_single_for_seo_keyword_research": "Keyword Research API", "keyword_research_api_for_seo_keyword_research": "Keyword Research API", "market_get_full_for_bb_finance": "Get all field and information about tickers", "reddit_for_check_username": "Check username on Reddit", "regions_for_streamlinewatch_streaming_guide": "Retrieve the list of regions covered by the API", "sourcingresume_for_screening_and_matching_resumes": " ", "weather_for_currencyconverter": "aaaaaaaa"}, "aseqs": [{"api_name": "keyword_research_api_for_seo_keyword_research", "api_action": "\nAction: keyword_research_api_for_seo_keyword_research\nAction Input: {\n  \"keyword\": \"social media marketing\",\n  \"country\": \"India\"\n}", "api_reaction": null}, {"api_name": "global_result_single_for_seo_keyword_research", "api_action": "\nAction: global_result_single_for_seo_keyword_research\nAction Input: {\n  \"keyword\": \"social media marketing\"\n}", "api_reaction": null}, {"api_name": "keyword_research_api_for_seo_keyword_research", "api_action": "\nAction: keyword_research_api_for_seo_keyword_research\nAction Input: {\n  \"keyword\": \"social media marketing\",\n  \"country\": \"global\"\n}", "api_reaction": null}, {"api_name": "global_result_single_for_seo_keyword_research", "api_action": "\nAction: global_result_single_for_seo_keyword_research\nAction Input: {\n  \"keyword\": \"social media marketing\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "global_result_single_for_seo_keyword_research"}}, {"state": "generated_by_agent", "aseq": {"api_name": "global_result_single_for_seo_keyword_research"}}, {"state": "generated_by_agent", "aseq": {"api_name": "global_result_single_for_seo_keyword_research"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_global_overall_score_seo_keyword_research", "api_action": "\nAction: get_global_overall_score_seo_keyword_research\nAction Input: {\n  \"keyword\": \"social media marketing\",\n  \"country\": \"India\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "global_result_single_for_seo_keyword_research"}}]}
{"URL": "24943", "query": "I'm looking for trademarks related to the keyword 'apple'. Please provide me with the trademark name, serial number, services code, status, owner, address, filing date, and registration date for each trademark found.", "api_names": ["v1_trademarksearch_for_uspto_trademark", "Finish", "get_app_by_id_for_google_play", "get_for_real_love_calculator", "go_for_web_scrapper", "top_for_stapi_showerthoughts", "index_for_forecast", "filter_fats_for_keto_diet", "get_list_of_algorithms_for_general_detection", "get_default_rich_menu_id_for_line_messaging", "products_detail_for_consumer_reports", "get_reel_by_media_id_for_instagram_api_2023"], "api_descs": {"Finish": "No description available.", "filter_fats_for_keto_diet": "Gives keto recipes within given range of fat content.\nfat_in_grams__lt = Less than\nfat_in_grams__gt = Greater than", "get_app_by_id_for_google_play": "Returns a single application by its ID", "get_default_rich_menu_id_for_line_messaging": "Gets the ID of the default rich menu set with the Messaging API.", "get_for_real_love_calculator": "It is use to check if this API is working. Make sure that you use POST API and not the GET API.", "get_list_of_algorithms_for_general_detection": "Service provides alternative algorithms that may be used for image detection.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.", "get_reel_by_media_id_for_instagram_api_2023": "Get reel info by media_id", "go_for_web_scrapper": "Fetch & parse HTML page", "index_for_forecast": "See the current API version. Here is the link to the documentation", "products_detail_for_consumer_reports": "Get detailed information of a product", "top_for_stapi_showerthoughts": "this end point will fetch the top shower thought from all frames of time. \n(i.e. now, today,week,month,year,alltime)", "v1_trademarksearch_for_uspto_trademark": "Does a keyword search and returns trademark name, serial number,services code, status, owner, address, filing date and registration date."}, "aseqs": [{"api_name": "v1_trademarksearch_for_uspto_trademark", "api_action": "\nAction: v1_trademarksearch_for_uspto_trademark\nAction Input: {\n  \"keyword\": \"apple\",\n  \"searchtype\": \"active\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_trademarksearch_for_uspto_trademark"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_trademarksearch_for_uspto_trademark"}}]}
{"URL": "37387", "query": "I'm planning a vacation and I want to explore vacation rental options in Italy. Can you help me find vacation rentals in Rome? I need the results sorted by price and I want to see the first page of results.", "api_names": ["Finish", "rental_search_for_tripadvisor", "search_vacation_rental_location_for_tripadvisor", "global_statistics_for_covid_19_live_data", "read_case_type_by_name_for_yardillo", "artist_top_tracks_for_shazam", "search_for_unofficial_icons8_search", "get_all_the_year_s_top_articles_for_dev_to_api", "rr_for_agc", "get_life_skill_tool_recipes_for_lost_ark_simple", "getlistingsbygeo_valuation_for_remarketlite_apis", "listofattributeandvalueoptions_for_sandbox_mktplace_eu_01_products", "get_verse_details_by_verse_id_for_bhagavad_gita_v3", "search_images_for_twttrapi", "fetch_profile_picture_for_whatsapp_data", "consulta_receita_federal_for_consulta_cnpj_tempo_real", "similar_words_for_dictionary_translation_hablaa", "get_schema_by_name_for_mongodb_wix"], "api_descs": {"Finish": "No description available.", "artist_top_tracks_for_shazam": "This endpoint will return the top tracks of the artist", "consulta_receita_federal_for_consulta_cnpj_tempo_real": "Consulta Receita Federal", "fetch_profile_picture_for_whatsapp_data": "Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.", "get_all_the_year_s_top_articles_for_dev_to_api": "It return year's top articles from dev.to website", "get_life_skill_tool_recipes_for_lost_ark_simple": "Get List of Lost Ark Life Skill Tool Recipes", "get_schema_by_name_for_mongodb_wix": "Get schema details by name. e.g. car", "get_verse_details_by_verse_id_for_bhagavad_gita_v3": "Get verse details by verse id", "getlistingsbygeo_valuation_for_remarketlite_apis": "API returns property listings by accepting various filters like Zip code, Street, City and State", "global_statistics_for_covid_19_live_data": "The Global live data statistics", "listofattributeandvalueoptions_for_sandbox_mktplace_eu_01_products": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html", "read_case_type_by_name_for_yardillo": "Search a case type by its name. e.g. SensorX09", "rental_search_for_tripadvisor": "-", "rr_for_agc": "Test", "search_for_unofficial_icons8_search": "Search Icons8 repository", "search_images_for_twttrapi": "Search images", "search_vacation_rental_location_for_tripadvisor": "-", "similar_words_for_dictionary_translation_hablaa": "Get translations of similar words."}, "aseqs": [{"api_name": "search_vacation_rental_location_for_tripadvisor", "api_action": "\nAction: search_vacation_rental_location_for_tripadvisor\nAction Input: {\n  \"query\": \"Rome\"\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"geoid\": \"187791\",\n  \"sortorder\": \"price\",\n  \"arrival\": \"2022-10-01\",\n  \"departure\": \"2022-10-08\",\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"geoid\": \"187791\",\n  \"sortorder\": \"PRICELOW\",\n  \"arrival\": \"2022-10-01\",\n  \"departure\": \"2022-10-08\",\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_vacation_rental_location_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_vacation_rental_location_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rental_search_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"geoid\": \"187791\",\n  \"sortorder\": \"price\",\n  \"arrival\": \"2022-10-01\",\n  \"departure\": \"2022-10-08\",\n  \"page\": 1\n}", "api_reaction": null}}]}
{"URL": "61135", "query": "I am a sports enthusiast and I want to stay updated on the latest MMA events. Can you provide me with the detailed information about the next events for my favorite team? Also, I would like to get the team image in PNG format for team ID 469994.", "api_names": ["Finish", "teamdetails_for_mmaapi", "teamimage_for_mmaapi", "teamnextevents_for_mmaapi", "etf_expand_retrieve_for_palmy_investing_api", "logoutuser_for_swagger_petstore", "single_category_for_blogsapi", "get_balance_for_pancakeswap_api", "historical_daily_for_easy_weather", "get_litecoin_balance_for_cryptocurrency_balance", "canvas_episodes_get_info_for_webtoon", "top_comments_by_username_for_reddit", "find_places_for_ai_weather_by_meteosource", "list_movies_json_for_yts_am_torrent", "store_for_rainforest", "list_of_clubs_for_transfermarkt_db", "bodyfat_for_health_calculator_api", "user_media_for_twitter_v2", "get_nft_owner_for_uniblock", "major_league_soccer_standings_for_major_league_soccer_standings"], "api_descs": {"Finish": "No description available.", "bodyfat_for_health_calculator_api": "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters.", "canvas_episodes_get_info_for_webtoon": "Get episode and photo links.\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "etf_expand_retrieve_for_palmy_investing_api": "Premium: Retrieve price and compotion information for an ETF. Search by ID/Symbol", "find_places_for_ai_weather_by_meteosource": "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc.", "get_balance_for_pancakeswap_api": "Get token balance of specific address.", "get_litecoin_balance_for_cryptocurrency_balance": "This endpoint will return back the Litecoin balance of an address", "get_nft_owner_for_uniblock": "Gets the owner of a specific ERC-721 NFT.", "historical_daily_for_easy_weather": "Get a historical daily forecast for the given latitude, longitude, and start date/time.", "list_movies_json_for_yts_am_torrent": "Used to list and search through out all the available movies. Can sort, filter, search and order the results", "list_of_clubs_for_transfermarkt_db": "Get a list of clubs", "logoutuser_for_swagger_petstore": "Logs out current logged in user session", "major_league_soccer_standings_for_major_league_soccer_standings": "Major League Soccer Standings", "single_category_for_blogsapi": "Get single category details with its thumbnail and description.", "store_for_rainforest": "The Store parameters are applicable when making a request with type=store to retrieve Brand Store results for a Brand Store. The Brand Store can be specified either by the url parameter, or by a combination of the store_id and amazon_domain parameters. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.", "teamdetails_for_mmaapi": "Get detailed information about a specific team.", "teamimage_for_mmaapi": "Get player image in PNG format for a specific team.", "teamnextevents_for_mmaapi": "Get information about the next events for a specific team.", "top_comments_by_username_for_reddit": "Top Comments By Username", "user_media_for_twitter_v2": "Get User Media"}, "aseqs": [{"api_name": "teamnextevents_for_mmaapi", "api_action": "\nAction: teamnextevents_for_mmaapi\nAction Input: {\n  \"page\": 0,\n  \"is_id\": 469994\n}", "api_reaction": null}, {"api_name": "teamdetails_for_mmaapi", "api_action": "\nAction: teamdetails_for_mmaapi\nAction Input: {\n  \"is_id\": 469994\n}", "api_reaction": null}, {"api_name": "teamimage_for_mmaapi", "api_action": "\nAction: teamimage_for_mmaapi\nAction Input: {\n  \"is_id\": 469994\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "teamnextevents_for_mmaapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "teamimage_for_mmaapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "teamimage_for_mmaapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "teamnextevents_for_mmaapi", "api_action": "\nAction: teamnextevents_for_mmaapi\nAction Input: {\n  \"page\": 1,\n  \"is_id\": 469994\n}", "api_reaction": null}}]}
{"URL": "32127", "query": "My family is hosting a dog-themed event and we need a variety of dog images. Is there an API that offers a list of all dog breeds along with random dog images? It would be great if the API also provides a status message and error code in case of any issues. Thank you!", "api_names": ["getbreeds_for_dog_api", "getrandom_for_dog_api", "Finish", "getevents_for_wosti_futbol_tv_spain", "iso_for_phone", "r_cvr_virksomhed_for_cvr_dev", "retrieve_user_s_food_preferences_for_bespoke_diet_generator", "regions_for_google_trends", "search_subreddits_for_reddit_fast_search", "user_by_screen_name_for_twitter_v2", "sport_highlighted_markets_straight_for_pinaculo", "mytestendpoint_for_mynewtestapi", "list_datapoints_for_clickmeter", "get_player_info_for_valorant_esports_v2", "untools_en_json_for_daily_knowledge"], "api_descs": {"Finish": "No description available.", "get_player_info_for_valorant_esports_v2": "Get name, country, team and more about a player.", "getbreeds_for_dog_api": "LIST ALL BREEDS", "getevents_for_wosti_futbol_tv_spain": "Obtener el listado de eventos de partidos de fútbol televisados en España.\n\n> Este endpoints no requiere de ningún parámetro.", "getrandom_for_dog_api": "DISPLAY SINGLE RANDOM IMAGE FROM ALL DOGS COLLECTION", "iso_for_phone": "Get the ISO codes from a given Country", "list_datapoints_for_clickmeter": "List of all the datapoints associated to the user", "mytestendpoint_for_mynewtestapi": "My test end point", "r_cvr_virksomhed_for_cvr_dev": "Dette endpoint returnerer alt data om en virksomhed, som den er i CVR. Dette dataformat er bestemt af Virk, ikke af cvr.dev.", "regions_for_google_trends": "The endpoint to retrieve a list of supported regions", "retrieve_user_s_food_preferences_for_bespoke_diet_generator": "Retrieve the list of all ingredients that will be excluded from user's diets.", "search_subreddits_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the Subreddits.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "sport_highlighted_markets_straight_for_pinaculo": "Get sport highlighted market straight", "untools_en_json_for_daily_knowledge": "Thinking tools to help you solve problems, make decisions and understand systems.", "user_by_screen_name_for_twitter_v2": "Get User By Screen Name"}, "aseqs": [{"api_name": "getbreeds_for_dog_api", "api_action": "\nAction: getbreeds_for_dog_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandom_for_dog_api", "api_action": "\nAction: getrandom_for_dog_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandom_for_dog_api", "api_action": "\nAction: getrandom_for_dog_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbreeds_for_dog_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbreeds_for_dog_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbreeds_for_dog_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbreeds_for_dog_api"}}]}
{"URL": "30610", "query": "I'm creating a book recommendation app and need book cover images. Can you provide me with the book cover image and URL for the book with ISBN 9781526606198? It would be ideal if the language code is set to English.", "api_names": ["getbookcoverimage_for_book_cover_api", "getbookcoverurl_for_book_cover_api", "Finish", "trending_for_bing_image_search", "standings_for_rugby_live_data", "countries_for_geography_v2", "traits_for_collection_for_rich_nft_api_metadata", "stations_get_measurements_deprecated_for_airvisual", "radical_stroke_number_for_learn_to_read_and_write_japanese_kanji", "basic_search_for_slovenia_company_data", "get_news_for_india_today_unofficial", "getteams_for_wosti_futbol_tv_spain", "getwebhookresultsunseenerrorcount_for_mailslurp_email_testing", "api_endpoint_for_esignly", "latest_exchange_rates_for_exchangeratespro"], "api_descs": {"Finish": "No description available.", "api_endpoint_for_esignly": "main end point to access api", "basic_search_for_slovenia_company_data": "Basic text based search for company names registered in Slovenia", "countries_for_geography_v2": "get a list of all the countries filtering by name", "get_news_for_india_today_unofficial": "All Latest news from India Today Platform", "getbookcoverimage_for_book_cover_api": "Get a book cover image by isbn and language code", "getbookcoverurl_for_book_cover_api": "Get a book cover image url by isbn and language code", "getteams_for_wosti_futbol_tv_spain": "Obtener el listado de equipos de fútbol televisados en España.", "getwebhookresultsunseenerrorcount_for_mailslurp_email_testing": " ", "latest_exchange_rates_for_exchangeratespro": "Get up-to-date exchange rate data with the /latest endpoint. Choose from daily, hourly, or minute updates, based on your plan. Stay on top of the markets with real-time data, delivered with one simple request.", "radical_stroke_number_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "standings_for_rugby_live_data": "Lists season standings for a given comp_id and season_id combination.", "stations_get_measurements_deprecated_for_airvisual": "Get measurements at specific station by its id", "traits_for_collection_for_rich_nft_api_metadata": "Get all NFT traits attributes of a specific collection\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op", "trending_for_bing_image_search": "Get currently trending images."}, "aseqs": [{"api_name": "getbookcoverurl_for_book_cover_api", "api_action": "\nAction: getbookcoverurl_for_book_cover_api\nAction Input: {\n  \"languagecode\": \"en\",\n  \"isbn\": \"9781526606198\"\n}", "api_reaction": null}, {"api_name": "getbookcoverimage_for_book_cover_api", "api_action": "\nAction: getbookcoverimage_for_book_cover_api\nAction Input: {\n  \"isbn\": \"9781526606198\",\n  \"languagecode\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbookcoverimage_for_book_cover_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbookcoverimage_for_book_cover_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbookcoverurl_for_book_cover_api"}}]}
{"URL": "14963", "query": "I'm planning a vacation with my family and we want to explore the trending keywords in different regions. Can you give us the trending keywords for a specific date, let's say '2023-05-16'? Also, provide us with the geo map to help us choose our destination.", "api_names": ["Finish", "get_trend_keyword_for_trends_keywords_in_different_regions", "get_geo_map_for_regions_for_trends_keywords_in_different_regions", "get_call_for_india_ncvt_iti_cerificate_verification", "customer_name_for_soti_sync", "get_description_for_taobao_tmall_product_detail", "search_for_front_page_search_engine", "coins_get_historical_data_for_investing_cryptocurrency_markets", "mediainfo_for_instagram_v6", "user_s_videos_for_tiktok_api", "hashtag_by_name_for_instagram_api", "cash_flow_statement_for_financial_statements", "plants_de_json_for_daily_knowledge", "game_report_for_hockey_live_sk_data", "v1_folderid_invites_for_sertifi_esignature_and_epayment", "all_rates_for_crypto_exchanges", "getfacelenses_for_snapchat", "getdeeplinktolensid_for_snapchat"], "api_descs": {"Finish": "No description available.", "all_rates_for_crypto_exchanges": "Get all rates", "cash_flow_statement_for_financial_statements": "Get company cash flow statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.", "coins_get_historical_data_for_investing_cryptocurrency_markets": "Get historical data of specific cryptocurrency", "customer_name_for_soti_sync": "Fetch Customer Name", "game_report_for_hockey_live_sk_data": "Get game score, goals, penalties and team statistics for a certain game ID", "get_call_for_india_ncvt_iti_cerificate_verification": "Used to fetch api result using the request id received in responses.", "get_description_for_taobao_tmall_product_detail": "Get description", "get_geo_map_for_regions_for_trends_keywords_in_different_regions": "The \"Trending Keywords by Geo Regions\" API allows developers to access a list of 50 geographic regions and their corresponding trending keywords. With this API, developers can retrieve valuable insights into the most popular and trending search terms for specific locations.", "get_trend_keyword_for_trends_keywords_in_different_regions": "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications.", "getdeeplinktolensid_for_snapchat": "getDeeplinkToLensId", "getfacelenses_for_snapchat": "getFaceLenses", "hashtag_by_name_for_instagram_api": "Gets a Hashtag by Name", "mediainfo_for_instagram_v6": "get media info", "plants_de_json_for_daily_knowledge": "Häufige Pflanzenarten in Europa.", "search_for_front_page_search_engine": "takes any search string in any language.", "user_s_videos_for_tiktok_api": "Return User Videos", "v1_folderid_invites_for_sertifi_esignature_and_epayment": " "}, "aseqs": [{"api_name": "get_trend_keyword_for_trends_keywords_in_different_regions", "api_action": "\nAction: get_trend_keyword_for_trends_keywords_in_different_regions\nAction Input: {}", "api_reaction": null}, {"api_name": "get_geo_map_for_regions_for_trends_keywords_in_different_regions", "api_action": "\nAction: get_geo_map_for_regions_for_trends_keywords_in_different_regions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_trend_keyword_for_trends_keywords_in_different_regions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_geo_map_for_regions_for_trends_keywords_in_different_regions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trend_keyword_for_trends_keywords_in_different_regions", "api_action": "\nAction: get_trend_keyword_for_trends_keywords_in_different_regions\nAction Input: {\"date\": \"2023-05-16\"}", "api_reaction": null}}]}
{"URL": "68721", "query": "I'm organizing a virtual art exhibition and I need a variety of colors for the digital artworks. Can you give me five random named colors and five random colors in the sRGB color space? It would be helpful if you include the RGB, CMYK, HEX, HSL, and HSV values for each color.", "api_names": ["get_a_random_color_for_colorful", "get_random_named_color_for_colorful", "Finish", "get_4d_company_list_for_4d_results", "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains", "get_user_profile_for_9gag_api_detailed_", "get_a_specific_item_by_id_for_lost_ark", "usa_latest_odds_for_surebets_2", "reverse_geocode_for_cameroon", "production_years_by_model_id_for_motorcycle_specs_database", "employee_for_dd", "trending_music_gaming_news_movies_for__cheap_youtube_api_", "forex_quotes_for_real_time_quotes", "subdistrict_for_provinces_of_thailand", "all_bps_for_bps", "yes_or_no_for_random_yes_no", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "get_asset_details_for_walletapi_cloud"], "api_descs": {"Finish": "No description available.", "all_bps_for_bps": "Lister toutes les boîtes postales", "employee_for_dd": "get employee id", "forex_quotes_for_real_time_quotes": "Returns the real time price of a forex currency pair", "get_4d_company_list_for_4d_results": "Return available company code and name.\nCode can use as parameter to query the Get 4D Results method.", "get_a_random_color_for_colorful": "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Any quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the sRGB color space. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not. If the color has a name that can be used in CSS, the name(s) will also be included. The nearest color(s) will also be included.", "get_a_specific_item_by_id_for_lost_ark": "Enpoint to get a specific item by id", "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains": "Get all {Chain} names", "get_asset_details_for_walletapi_cloud": "Obtain the details of an asset with provided ID.", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days": "get forecast for 14 days for the location Lat/Lon", "get_random_named_color_for_colorful": "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the list of named color keywords that can be used in CSS according to the W3 standard. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not.", "get_user_profile_for_9gag_api_detailed_": "Returns user profie.", "production_years_by_model_id_for_motorcycle_specs_database": "Get makeName, modelName, years, by model Id", "reverse_geocode_for_cameroon": "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "subdistrict_for_provinces_of_thailand": "ตำบล : subdistricts", "trending_music_gaming_news_movies_for__cheap_youtube_api_": "Get trending videos.\n\nOptional parameters:\ntype: \"music\", \"gaming\", \"news\", \"movies\"\nregion: ISO 3166 country code (default: \"US\")", "usa_latest_odds_for_surebets_2": "Latest odds for matches in the USA - updated every 6 hours", "yes_or_no_for_random_yes_no": "Get some random Yes or No"}, "aseqs": [{"api_name": "get_random_named_color_for_colorful", "api_action": "\nAction: get_random_named_color_for_colorful\nAction Input: {}", "api_reaction": null}, {"api_name": "get_a_random_color_for_colorful", "api_action": "\nAction: get_a_random_color_for_colorful\nAction Input: {}", "api_reaction": null}, {"api_name": "get_random_named_color_for_colorful", "api_action": "\nAction: get_random_named_color_for_colorful\nAction Input: {}", "api_reaction": null}, {"api_name": "get_a_random_color_for_colorful", "api_action": "\nAction: get_a_random_color_for_colorful\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_random_named_color_for_colorful"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_random_color_for_colorful", "api_action": "\nAction: get_a_random_color_for_colorful\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_named_color_for_colorful", "api_action": "\nAction: get_random_named_color_for_colorful\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_named_color_for_colorful", "api_action": "\nAction: get_random_named_color_for_colorful\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_named_color_for_colorful", "api_action": "\nAction: get_random_named_color_for_colorful\nAction Input: {\"quantity\": 5}", "api_reaction": null}}]}
{"URL": "41102", "query": "I'm following a specific diet and I need some recipes that fit my dietary restrictions. Can you suggest recipes that are suitable for a lacto-vegetarian diet? It would be helpful if the recipes include ingredients that are rich in nutrients. I need at least 18 recipes to choose from.", "api_names": ["Finish", "feeds_search_for_yummly", "categories_list_for_yummly", "check_server_status_for_waifu", "getfeedversions_for_transitfeeds", "ultimateoscillator_for_qvantana", "get_a_hundreds_of_all_kind_of_articles_from_pluralsight_com_for_pluralsight_articles", "get_daily_schedule_for_tank01_fantasy_stats", "getgames_for_diablo4_smartable", "search_for_real_time_image_search", "getnumbers_for_sms_receive", "get_hadiths_based_on_the_category_for_hadiths_api"], "api_descs": {"Finish": "No description available.", "categories_list_for_yummly": "List all categories of recipes", "check_server_status_for_waifu": "Check server status", "feeds_search_for_yummly": "Search for recipes by name and option filters", "get_a_hundreds_of_all_kind_of_articles_from_pluralsight_com_for_pluralsight_articles": "This endpoint will return back a data with hundreds of articles from Pluralsight.com", "get_daily_schedule_for_tank01_fantasy_stats": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNBAGamesForDate?gameDate=20220310\nThe above call will return all of the games from March 10th, 2022.  Date must be in that format.  \nFor March 10th, there were two games. They come back in a list format within the body of the response.", "get_hadiths_based_on_the_category_for_hadiths_api": "Each h collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the hadiths by their specific categories.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste.", "getfeedversions_for_transitfeeds": "Retrieve a list of feed versions. This list can be filtered by a number of input parameters", "getgames_for_diablo4_smartable": "Get Diablo 4 gameplays.", "getnumbers_for_sms_receive": "Get a list of available numbers to receive messages from.", "search_for_real_time_image_search": "Get real-time image search results from across the web. Supports all Google Images search filters.", "ultimateoscillator_for_qvantana": "UltimateOscillator indicator"}, "aseqs": [{"api_name": "categories_list_for_yummly", "api_action": "\nAction: categories_list_for_yummly\nAction Input: {}", "api_reaction": null}, {"api_name": "feeds_search_for_yummly", "api_action": "\nAction: feeds_search_for_yummly\nAction Input: {\n  \"start\": 0,\n  \"maxresult\": 18,\n  \"q\": \"lacto-vegetarian\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "feeds_search_for_yummly"}}, {"state": "generated_by_agent", "aseq": {"api_name": "feeds_search_for_yummly"}}, {"state": "generated_by_agent", "aseq": {"api_name": "feeds_search_for_yummly", "api_action": "\nAction: feeds_search_for_yummly\nAction Input: {\n  \"start\": 18,\n  \"maxresult\": 18,\n  \"q\": \"lacto-vegetarian and nutrient-rich\"\n}", "api_reaction": null}}]}
{"URL": "6375", "query": "My friend is looking for job opportunities in Paris. Can you help him by extracting email and phone data from Pages Jaunes for companies in Paris? Additionally, please extract email and phone data from Pages Blanches for individuals named Patrick in Paris. This will assist him in reaching out to potential employers and expanding his professional network.", "api_names": ["Finish", "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france", "pagesblanches_for_les_pagesjaunes_les_pagesblanche_france", "get_playlist_metadata_for_spotify_scraper", "list_of_champions_for_ncaa_final_four", "getpeople_for_power_bi_smartable", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling", "sms_sendernames_for_smsapi_com", "hotels_search_for_booking_com", "active_listings_for_airdna", "products_list_for_unofficial_shein", "states_by_country_for_geosource_api", "teamtournaments_for_icehockeyapi", "search_properties_by_zip_for_real_estate_usa", "united_states_parks_mobility_for_covid_19_economic_impact"], "api_descs": {"Finish": "No description available.", "active_listings_for_airdna": "Returns active rentals", "get_playlist_metadata_for_spotify_scraper": "This endpoint fetches full details of a playlist.", "getpeople_for_power_bi_smartable": "Get Power BI influencers.", "hotels_search_for_booking_com": "Get available hotels by the filter. Indicate the `destination_id` and `dest_type` -> use **@Search locations** endpoint, check-in and check-out date, number of adults and children. For possible filters use **@Filters for search** endpoint. Use `page_number` to paginate and navigate through the result pages! <br/> Comparable to: ![Search locations](https://i.imgur.com/PCuK81r.png)", "list_of_champions_for_ncaa_final_four": "Get a list of every National Champion sorted alphabetically.", "pagesblanches_for_les_pagesjaunes_les_pagesblanche_france": "Extraire les données du Pages Blanches scraping email et téléphone", "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france": "Extraire les données du pages jaunes email et téléphone", "products_list_for_unofficial_shein": "List products by a category with options and filters", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling": "", "search_properties_by_zip_for_real_estate_usa": "search properties by zip code", "sms_sendernames_for_smsapi_com": " ", "states_by_country_for_geosource_api": "Retrives a list of all states of the country.", "teamtournaments_for_icehockeyapi": "This operation returns the unique tournaments in which an Ice Hockey team has participated.", "united_states_parks_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at parks."}, "aseqs": [{"api_name": "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france", "api_action": "\nAction: pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france\nAction Input: {\n  \"pjpage\": 1,\n  \"pjlocation\": \"Paris\",\n  \"pjkeyword\": \"companies\"\n}", "api_reaction": null}, {"api_name": "pagesblanches_for_les_pagesjaunes_les_pagesblanche_france", "api_action": "\nAction: pagesblanches_for_les_pagesjaunes_les_pagesblanche_france\nAction Input: {\n  \"pbpage\": 1,\n  \"pbkeyword\": \"Patrick\",\n  \"pblocation\": \"Paris\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to extract data from Pages Jaunes for companies in Paris and Pages Blanches for individuals named Patrick in Paris.\n\t\"api_name\": \"pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france", "api_action": "\nAction: pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france\nAction Input: {\n  \"pjpage\": 1,\n  \"pjlocation\": \"Paris\",\n  \"pjkeyword\": \"individuals Patrick\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france"}}]}
{"URL": "54222", "query": "My friend wants to grow cannabis indoors and is looking for a strain that is easy to grow. Can you recommend a strain that is suitable for indoor cultivation and has a high yield? It would be helpful if you could also provide information about its flowering weeks and height range.", "api_names": ["difficulty_for_weed_strain", "Finish", "get_cities_for_gis_engine", "getallfulfillmentservices_for_ecartapi", "get_trend_keyword_for_trends_keywords_in_different_regions", "eventlist_for_31events_send_native_calendar_invites", "keywords_for_papercliff", "trix_for_qvantana", "genderize_for_genderize_nationalize", "list_speakers_for_ttskraken", "epl_for_test_opta", "anime_wallpapers_related_to_the_christmas_with_pagination_for_premium_anime_mobile_wallpapers_illustrations"], "api_descs": {"Finish": "No description available.", "anime_wallpapers_related_to_the_christmas_with_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get  anime wallpapers related to the christmas:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "difficulty_for_weed_strain": "Provides results of all strains by its difficulty of growing such as easy, medium or difficult.", "epl_for_test_opta": "EPL Key", "eventlist_for_31events_send_native_calendar_invites": "", "genderize_for_genderize_nationalize": "Get gender of provided name", "get_cities_for_gis_engine": "Get cities by providing the country code and region code\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint", "get_trend_keyword_for_trends_keywords_in_different_regions": "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications.", "getallfulfillmentservices_for_ecartapi": " ", "keywords_for_papercliff": "Returns the 100 most popular keywords with the corresponding number of news agencies and articles from which they have been cited", "list_speakers_for_ttskraken": "List the speakers available and some more information such as the languages they can speak.", "trix_for_qvantana": "TRIX indicator"}, "aseqs": [{"api_name": "difficulty_for_weed_strain", "api_action": "\nAction: difficulty_for_weed_strain\nAction Input: {\n  \"difficulty\": \"easy\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "difficulty_for_weed_strain"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trend_keyword_for_trends_keywords_in_different_regions", "api_action": "{\"date\": \"2023-05-16\"}", "api_reaction": null}}]}
{"URL": "12312", "query": "I want to explore the watch models available for a specific brand and family. Can you provide me with a list of all the models under the brand Omega and the family Aqua Terra?", "api_names": ["get_all_models_by_brand_and_family_for_watch_database", "Finish", "pagination_for_remote_jobs_for_remote_jobs_api", "theaters_list_for_flixster", "lunch_ingredient_for_recipe_finder", "parser_get_for_scraper_s_proxy", "availability_for_kayuloweather", "get_individual_articles_for_new_climate", "events_for_item_by_date_range_for_sagenda_v3", "get_all_state_names_for_restaurants_near_me_usa", "get_wisdom_quote_by_id_for_wisdom_quotes", "get_score_by_id_for_thefluentme"], "api_descs": {"Finish": "No description available.", "availability_for_kayuloweather": "Determine the data sets available for the specified location.", "events_for_item_by_date_range_for_sagenda_v3": "Returns an array of events that start in the date range between startDate and endDate (inclusive) for given bookable item", "get_all_models_by_brand_and_family_for_watch_database": "Get All Models By Brand And Family", "get_all_state_names_for_restaurants_near_me_usa": "GET all State names", "get_individual_articles_for_new_climate": "Get individual articles from publications", "get_score_by_id_for_thefluentme": "Returns a score by `score_id`. You can get the `score_id` from the `Get all scores` endpoint. The scale parameter defines the maximum number of points for the recording, as well as each word. This parameter is not required. The default value of 100 will be applied if the parameter is not provided.", "get_wisdom_quote_by_id_for_wisdom_quotes": "Returns a single wisdom quote by a given ID. The highest is 27753.", "lunch_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random lunch  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "pagination_for_remote_jobs_for_remote_jobs_api": "Paginate over the remote jobs by using the pageId parameter", "parser_get_for_scraper_s_proxy": "Automatically parses html into an easily processable json format", "theaters_list_for_flixster": "List theaters around a postal code or GEO location"}, "aseqs": [{"api_name": "get_all_models_by_brand_and_family_for_watch_database", "api_action": "\nAction: get_all_models_by_brand_and_family_for_watch_database\nAction Input: {\"brandname\": \"Omega\", \"family\": \"Aqua Terra\"}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_models_by_brand_and_family_for_watch_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_models_by_brand_and_family_for_watch_database"}}]}
{"URL": "50678", "query": "I want to add some motivational content to my app. Can you provide me with a variety of quotes from different categories? Additionally, it would be great if I could get a quote from the 'Love' category to display on the user profile page. Thank you!", "api_names": ["getquote_for_motivational_quotes", "Finish", "search_books_by_name_for_hapi_books", "get_specific_event_information_for_sagenda_v3", "getcompanynames_for_gaialens_company_names", "sky_news_arabic_for_arabic_news_api", "price_by_symbol_for_get_live_stock_price_by_symbol", "index_for_forecast", "exchangecurrencies_for_crypto_and_forex_rates", "retrieves_the_account_s_open_position_for_given_symbol_for_alpaca_trading", "getfileslist_for_aspose_cells_cloud", "genotypes_for_23andme"], "api_descs": {"Finish": "No description available.", "exchangecurrencies_for_crypto_and_forex_rates": "Exchange between two currency ( USD is base ) \nUser can define Buy and Sell Fees also can define withdraw fee in percentage", "genotypes_for_23andme": "Returns the entire profile's genome as a packed string of base pairs \"AACTGA...\". This ~2MB request returns over a million SNP locations, so you must specify profile_id. If the profile has not yet unlocked certain SNPs, they'll be replaced with __. To know which SNP corresponds to which index in the string, see this key.  When our genotyping chip is upgraded, the packed string and corresponding key will grow, but the changes will be backwards-compatible additions.", "get_specific_event_information_for_sagenda_v3": "Returns a single event object containing all the booking information.", "getcompanynames_for_gaialens_company_names": "This API returns a list of all company names available to the user. It can be used as a pre-step before invoking other GaiaLens APIs such as GaiaLens ESG Scores, Gaialens Historical ESG Scores and GaiaLens ESG News.", "getfileslist_for_aspose_cells_cloud": " ", "getquote_for_motivational_quotes": " ", "index_for_forecast": "See the current API version. Here is the link to the documentation", "price_by_symbol_for_get_live_stock_price_by_symbol": "Get live price of stock by symbol", "retrieves_the_account_s_open_position_for_given_symbol_for_alpaca_trading": "", "search_books_by_name_for_hapi_books": "Giving a book name (where spaces must be replaced by '+') you will receive a list of corresponding books. This list can return up to 20 books related to the input.\nEach book has information such as Name, Authors, Cover image URL, Launched Year, and many more.", "sky_news_arabic_for_arabic_news_api": "مسار يسترجع اخر الاخبار من موقع سكاي نيوز عربي"}, "aseqs": [{"api_name": "getquote_for_motivational_quotes", "api_action": "\nAction: getquote_for_motivational_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getquote_for_motivational_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getquote_for_motivational_quotes"}}]}
{"URL": "84470", "query": "Could you assist me in verifying the authenticity of my company's employee's Indonesian national identity card? The ID is '3275071201980055'. I need to ensure its validity and collect the associated details, including the day, month, year, gender, district, city, province, and postcode.", "api_names": ["data_for_indonesian_national_identity_card_validator", "Finish", "ohlc_for_investors_exchange_iex_trading", "get_rentals_for_deal_catcher", "getuservideos_for_helioviewer_v1", "responses_for_moodring", "resistance_support_for_crypto_market_data_from_token_metrics", "getactivecurrencylist_for_crypto_asset_cold_wallet_create", "getorderbyid_for_freeplanhardlimitexternal", "page_info_for_axesso_facebook_data_service"], "api_descs": {"Finish": "No description available.", "data_for_indonesian_national_identity_card_validator": "Check validation and get details of indonesian national identity card such as day, month, year, gender and location", "get_rentals_for_deal_catcher": "Get rentals", "getactivecurrencylist_for_crypto_asset_cold_wallet_create": "The Current Active Currency List REST API allows clients to retrieve a list of currently active currencies by sending a GET request to the endpoint. The endpoint should be in the following format:", "getorderbyid_for_freeplanhardlimitexternal": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "getuservideos_for_helioviewer_v1": "Get a listing (in descending time order) of the most recently user-generated movies that have been publicly shared to YouTube.  Result set is limited to the value requested or default value of the `num` parameter (unless truncated when the date value of the `since` parameter is reached).", "ohlc_for_investors_exchange_iex_trading": "Returns the official open and close for a give symbol.", "page_info_for_axesso_facebook_data_service": "Fetch information for a page like followers and many more", "resistance_support_for_crypto_market_data_from_token_metrics": "Get automated Resistance and Support for tokens powered  by Token Metrics", "responses_for_moodring": "Get all responses to the quizzes"}, "aseqs": [{"api_name": "data_for_indonesian_national_identity_card_validator", "api_action": "\nAction: data_for_indonesian_national_identity_card_validator\nAction Input: {\n  \"is_id\": \"3275071201980055\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "data_for_indonesian_national_identity_card_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "data_for_indonesian_national_identity_card_validator"}}]}
{"URL": "87736", "query": "Hey there! My friends and I are starting an automotive blog and we need a comprehensive database of year, make, and model data. Could you please guide us on how to access the AutoYMM API and retrieve this information? We appreciate your assistance!", "api_names": ["ymm_for_autoymm", "Finish", "list_of_sources_for_energy_price_news", "hosts_txt_for_stopmodreposts_blocklist", "relatedtopic_for_gtrend", "clubs_get_header_info_for_transfermarket", "today_for_show_air_dates", "crawler_for_explorarc_s_internel_links_crawler", "getcountries_for_simple_surf_forecast_api", "draw_date_listing_for_thai_lottery_result", "retrieve_list_of_groups_for_drillster_2_0", "template_download_for_xlsx_template"], "api_descs": {"Finish": "No description available.", "clubs_get_header_info_for_transfermarket": "Get header info of club", "crawler_for_explorarc_s_internel_links_crawler": "The Best API t Fetch all the Internel Links from an given URL", "draw_date_listing_for_thai_lottery_result": "Draw Date Listing - รายการข้อมูลวันหวยออก", "getcountries_for_simple_surf_forecast_api": " ", "hosts_txt_for_stopmodreposts_blocklist": "Hosts file endpoint", "list_of_sources_for_energy_price_news": "See which regions we have news sources from.", "relatedtopic_for_gtrend": "Get related topic from given query", "retrieve_list_of_groups_for_drillster_2_0": "Retrieves a list of all groups the calling user has access to.", "template_download_for_xlsx_template": "Download template file from Cloud storage", "today_for_show_air_dates": "Shows airing today", "ymm_for_autoymm": "Year Make Model"}, "aseqs": [{"api_name": "ymm_for_autoymm", "api_action": "\nAction: ymm_for_autoymm\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ymm_for_autoymm"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ymm_for_autoymm"}}]}
{"URL": "56068", "query": "My friend is moving to Asia for work and needs to find a suitable city to live in. Can you suggest some cities in Asia along with their latitude and longitude coordinates? It would be great to know the time zone of each city as well.", "api_names": ["Finish", "get_cities_for_world_country", "get_regions_for_world_country", "get_time_zones_for_world_country", "get_result_by_date_for_euro_millions", "retrieve_response_for__paraphrasing_api", "search_books_by_name_for_hapi_books", "get_nba_franchise_s_specific_year_data_for_1977_2022_nba_team_rosters_and_schedules", "historical_for_fear_and_greed_index", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data", "stays_properties_detail_description_for_booking_com_v2", "healthcheck_for_fortune_cookie", "get_categories_for__onboarding_project_v3", "ad_for_constructioness", "list_album_tracks_for_spotify_scraper", "tag_for_tronald_dump", "match_for_tennis_live_data", "list_finance_rates_for_real_estate_usa", "generate_historys_for_xlsx_template", "number_of_schools_in_indonesian_city_district_kabupaten_kota_for_indonesia_school_list"], "api_descs": {"Finish": "No description available.", "ad_for_constructioness": "ad", "generate_historys_for_xlsx_template": "Generated files history", "get_categories_for__onboarding_project_v3": " ", "get_cities_for_world_country": "Get City list", "get_nba_franchise_s_specific_year_data_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's Roster and Schedule for a specific year", "get_regions_for_world_country": "Get region list", "get_result_by_date_for_euro_millions": "Get the draws result for an specific date", "get_time_zones_for_world_country": "Get Time Zone list", "healthcheck_for_fortune_cookie": "The health check endpoint will return a status of 200 if the api is up and ready to recieve connections. It will tell the uptime, and total requests served since last restart. It also has a field for version which corresponds to the versioned release from the github repo.  \n", "historical_for_fear_and_greed_index": "Get the index for the given date.", "list_album_tracks_for_spotify_scraper": "This endpoint lists tracks of an album. Pagination scraping is supported.", "list_finance_rates_for_real_estate_usa": "list finance rates", "match_for_tennis_live_data": "An individual match file for a given `match_id`", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests", "number_of_schools_in_indonesian_city_district_kabupaten_kota_for_indonesia_school_list": "Number of Schools in Indonesian City / District (Kabupaten / Kota), also return kode_wilayah that used in other endpoints (See Example response).", "retrieve_response_for__paraphrasing_api": "With the JOB ID generated on the \"Paraphrase\" endpoint, you will be able to get the response from that rewrite.", "search_books_by_name_for_hapi_books": "Giving a book name (where spaces must be replaced by '+') you will receive a list of corresponding books. This list can return up to 20 books related to the input.\nEach book has information such as Name, Authors, Cover image URL, Launched Year, and many more.", "stays_properties_detail_description_for_booking_com_v2": "Get detail description", "tag_for_tronald_dump": "Retrieve a list of available tags"}, "aseqs": [{"api_name": "get_regions_for_world_country", "api_action": "\nAction: get_regions_for_world_country\nAction Input: {}", "api_reaction": null}, {"api_name": "get_cities_for_world_country", "api_action": "\nAction: get_cities_for_world_country\nAction Input: {}", "api_reaction": null}, {"api_name": "get_time_zones_for_world_country", "api_action": "\nAction: get_time_zones_for_world_country\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I will first fetch the list of cities in Asia using the get_cities_for_world_country API, then filter out Asian cities and retrieve their latitude, longitude coordinates along with the corresponding time zones.\n\t\"api_name\": \"get_cities_for_world_country\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cities_for_world_country"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cities_for_world_country"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cities_for_world_country"}}]}
{"URL": "79735", "query": "I am building a portfolio website and I need to showcase my completed work projects. Can you provide me with the details of each project, including the title, image URL, framework used, and a link to the project?", "api_names": ["work_for_portfolio", "Finish", "crypto_symbol_for_holistic_finance_stock_data", "get_holo_balance_from_specific_network_for_cryptocurrency_balance", "tournamentsbycalender_for_sportifyapi", "daily_schedule_for_basketball_datafeeds_by_rolling_insights", "keyword_search_for_axesso_kaufland_data_service", "projected_pitching_stats_for_mlb_data", "top_headlines_for_real_time_news_data", "low_hold_bets_for_sportsbook_odds"], "api_descs": {"Finish": "No description available.", "crypto_symbol_for_holistic_finance_stock_data": "Returns a list of all available crypto symbols", "daily_schedule_for_basketball_datafeeds_by_rolling_insights": "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET.", "get_holo_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Holo balance of an address in a specific network.", "keyword_search_for_axesso_kaufland_data_service": "Retrieve keyword search results.", "low_hold_bets_for_sportsbook_odds": "This returns the bets that have low hold bets. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.", "projected_pitching_stats_for_mlb_data": "Retrieve a players projected pitching stats for a given season.  Omitting the season parameter will return the actual stats for the players earliest major league season.", "top_headlines_for_real_time_news_data": "Get the latest news headlines/top stories for a country.", "tournamentsbycalender_for_sportifyapi": "Tournaments By Calender", "work_for_portfolio": "sdad"}, "aseqs": [{"api_name": "work_for_portfolio", "api_action": "\nAction: work_for_portfolio\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "work_for_portfolio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "work_for_portfolio"}}]}
{"URL": "58420", "query": "I'm a beginner in the crypto market and I'm seeking your expertise. Please assist me by providing the forecast data for the next 10 periods of Bitcoin (BTC) in the 1-hour timeframe. Additionally, I'd like to know the forecast data for Ethereum (ETH) in the 6-hour timeframe.", "api_names": ["getforecast_mega_for_the_apophis", "getforecast_ultra_for_the_apophis", "Finish", "get_distance_by_city_state_country_in_km_for_great_circle_math_api", "webcams_list_exclude_webcamid_webcamid_for_webcams_travel", "rapid_api_of_dung_bui_end_point_for_dung_bui", "bundesliga_standings_for_bundesliga_standings", "get_all_climate_change_news_for_live_climate_change_news_v2", "realtorschoollist_for_realtor_api_for_real_estate_data", "webcams_list_limit_limit_offset_for_webcams_travel", "random_song_song_s_album_information_out_of_artist_for_halsey_lyric_snippets", "get_the_news_in_swahili_for_kenyan_news_api", "uefa_rankings_for_transfermarkt_db", "go_for_youtube", "abuse_contact_lookup_for_viewdns"], "api_descs": {"Finish": "No description available.", "abuse_contact_lookup_for_viewdns": "Used to find the abuse contact address for a domain name. This is where you would send complaints about spam originating from that domain.", "bundesliga_standings_for_bundesliga_standings": "Bundesliga Standings", "get_all_climate_change_news_for_live_climate_change_news_v2": "This endpoint will return all the news about Climate Change from all over the world.", "get_distance_by_city_state_country_in_km_for_great_circle_math_api": "Takes city, state, and country of both locations and returns latitude, longitude, and calculated miles in kilometers.", "get_the_news_in_swahili_for_kenyan_news_api": "This request will return the news articles in swahili language", "getforecast_mega_for_the_apophis": "This endpoint is part of Mega subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 30 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h", "getforecast_ultra_for_the_apophis": "This endpoint is part of Ultra subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 10 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h", "go_for_youtube": "Video converter", "random_song_song_s_album_information_out_of_artist_for_halsey_lyric_snippets": "Returns album information and random song information", "rapid_api_of_dung_bui_end_point_for_dung_bui": "lưu webhook call", "realtorschoollist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`", "uefa_rankings_for_transfermarkt_db": "Get countries within 5 years. Ex. https://www.transfermarkt.com/statistik/5jahreswertung", "webcams_list_exclude_webcamid_webcamid_for_webcams_travel": "This is a modifier. Exclude the {webcamid} from a list. Multiple {webcamid} must be separated by comma. Required: at least one {webcamid}", "webcams_list_limit_limit_offset_for_webcams_travel": "This is a modifier. Returns the list of webcams sliced by {limit}. The optional offset is given by {offset}. Required: {limit}. The maximum value for {limit} is 50. {offset} defaults to 0. If limit is not given, then a default of limit=10 is applied."}, "aseqs": [{"api_name": "getforecast_ultra_for_the_apophis", "api_action": "\nAction: getforecast_ultra_for_the_apophis\nAction Input: {\n  \"timeframe\": \"1h\",\n  \"currency\": \"BTC\"\n}", "api_reaction": null}, {"api_name": "getforecast_mega_for_the_apophis", "api_action": "\nAction: getforecast_mega_for_the_apophis\nAction Input: {\n  \"timeframe\": \"6h\",\n  \"currency\": \"ETH\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getforecast_ultra_for_the_apophis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getforecast_ultra_for_the_apophis", "api_action": "\nAction: getforecast_ultra_for_the_apophis\nAction Input: {\n  \"timeframe\": \"6h\",\n  \"currency\": \"ETH\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getforecast_ultra_for_the_apophis", "api_action": "\nAction: getforecast_ultra_for_the_apophis\nAction Input: {\n  \"timeframe\": \"1h\",\n  \"currency\": \"BTC\"\n}", "api_reaction": null}}]}
{"URL": "83020", "query": "I'm planning a surprise party for my best friend's birthday. Can you help me find the most compatible friends for her based on their birth details? I need a list of their names, birth dates, and their compatibility rankings. Additionally, it would be great to know their physical and intellectual compatibility.", "api_names": ["jennifer_aniston_for_starlovematch", "brad_pitt_for_starlovematch", "match_for_starlovematch", "Finish", "geocode_for_dargan", "http_newexch_com_for_a56219609685dd9033d060cdbb60093c", "us_ak_for_us_gas_prices", "video_recommendation_for_youtube_search", "allusaprice_for_gas_price", "letters_for_boggle", "categories_list_for_kohls", "get_bnb_balance_from_specific_network_for_cryptocurrency_balance", "get_app_permissions_for_google_play_api", "info_news_for_kast", "live_recent_v3_for_chartbeat", "time_zone_converter_for_date_calculator", "player_season_statistics_for_hockey_datafeeds_by_rolling_insights", "get_regions_for_geography", "convertir_cantidad_a_letra_moneda_mxn_ingles_for_numberstoletters", "banks_by_country_for_bank_swift_codes"], "api_descs": {"Finish": "No description available.", "allusaprice_for_gas_price": "Service that brings the average current gasoline prices of states in America.", "banks_by_country_for_bank_swift_codes": "Returns list of banks for a country (use two letter ISO country code)", "brad_pitt_for_starlovematch": "This is a demo endpoint showing how it processes a list of Jennifer Aniston's partners.\n\nHere are the input 'birthdetails' parameters :  name=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&sort=O&NC=C&ryr=2022&details=N&coupon=12345678\n\nYou will see that it calculates Nicole Poturalski as his best overall (sort='O')  general match.\n\nIf you change the input parameters and specify sort='P' (Physical), you will see that she is also currrently (20220 his best physical (sex) match.\n\nIf you wish to see how it sorts his Intellectual matches, change this to sort='I', and you will see that Jennifer Aniston is currently her best intellectual partner.\n\nFor interest, change the ryr parameter to '2004' using the sortorder = 'L'ove setting, you'll see how Jennifer was at the top of the love list, i.e.\n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=L&NC=C&ryr=2000&details=N&coupon=12345678\n\n\nTo have a look at what his compatibility ratings were in 2015, enter the following parameters : \n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=O&NC=C&ryr=2015&details=N&coupon=12345678\n\nYou'll see Angeline Jolie is second from the bottom, with a negative overall rating.\n\nNegative ratings indicate that there are bad aspects in operation and this person should be avoided. In 2015 Brad and Angelina divorced.\n\nBut there is some good news for him and his family. If you look ahead to the year 2030 by changing the ryr parameter to 2030, you will see he has a strong love relationship with Angelina Jolie again, and Jennifer Aniston has faded away in his life.\n\nname=Brad Pitt&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969&name3=Gwyneth Paltrow&dob3=9/27/1972&name4=Charlize Theron&dob4=8/07/1975&name5=Nicole Poturalski&dob5=01/02/1993&sort=O&NC=C&ryr=2030&details=N&coupon=12345678\n\nOf course, this is looking too far ahead to be generally useful at this point in time, so it is better to use the current year for the ryr parameter.", "categories_list_for_kohls": "List all available categories", "convertir_cantidad_a_letra_moneda_mxn_ingles_for_numberstoletters": "Convertir cantidad a letra Moneda MXN en Ingles", "geocode_for_dargan": "Returns the latitude and longitude for a given postcode", "get_app_permissions_for_google_play_api": "Returns app permissions.", "get_bnb_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the BNB balance of an address in a specific network.", "get_regions_for_geography": "Get list of regions in the world", "http_newexch_com_for_a56219609685dd9033d060cdbb60093c": "betting exchange", "info_news_for_kast": "official api", "jennifer_aniston_for_starlovematch": "This is a demo endpoint showing how it processes a list of Jennifer Aniston's partners.\n\nHere are the input 'birthdetails' parameters :  name=Jennifer Aniston&dob=2/11/1969&name1=Justin Theroux&dob1=8/10/1971&name2=Gerard Butler&dob2=11/13/1969&name3=John Mayer&dob3=10/16/1977&name4=Paul Sculfor&dob4=2/1/1971&name5=David Schwimmer&dob5=11/2/1969&name6=Vince Vaughn&dob6=3/28/1970&name7=Brad Pitt&dob7=12/18/1963&name8=Paul Rudd&dob8=4/6/1969&name9=Tate Donovan&dob9=9/25/1963&name10=Daniel McDonald&dob10=7/30/1960&sort=S&NC=C&ryr=2022&details=N&coupon=12345678\n\nYou will see that it calculates Paul Rudd to be her best overall (sort='O')  general match, followed by Justin Theroux and Brad Pitt.\n\nHowever, if you change the input parameters and specify sort='P' (Physical), you will see that John Mayer is her best physical (sex) match.\n\nLikewise, if you wish to see how it calculates her Intellection matches in order, change this to sort='I', and you will see that Paul Rudd is again her best intellectual partner.", "letters_for_boggle": "Solve Boggle board", "live_recent_v3_for_chartbeat": "Returns information about the most recent visitors to a given host. This call returns real-time data.", "match_for_starlovematch": "Accepts a string parameter containing the first person's name and birth date, followed by up to 10 other people and their birth dates  with which to apply the astrological matching algorithms and return them in order of most to least compatible.", "player_season_statistics_for_hockey_datafeeds_by_rolling_insights": "Returns Player Season Statistics", "time_zone_converter_for_date_calculator": "Converts time from time zone to another taking into account Daylight Saving Time (DST) and accepts present, past, or future dates.", "us_ak_for_us_gas_prices": "Returns current gas price data for Alaska. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.", "video_recommendation_for_youtube_search": "This endpoint returns a list of recommended videos based on a given a video ID"}, "aseqs": [{"api_name": "brad_pitt_for_starlovematch", "api_action": "\nAction: brad_pitt_for_starlovematch\nAction Input: {\n  \"birthdetails\": \"name=brad_pitt_for_starlovematch&dob=12/18/1963&name1=Angelina Jolie&dob1=06/04/1975&name2=Jennifer Aniston&dob2=02/11/1969\"\n}", "api_reaction": null}, {"api_name": "jennifer_aniston_for_starlovematch", "api_action": "\nAction: jennifer_aniston_for_starlovematch\nAction Input: {\n  \"birthdetails\": \"name=jennifer_aniston_for_starlovematch&dob=2/11/1969&name1=Justin Theroux&dob1=8/10/1971&name2=Gerar\"\n}", "api_reaction": null}, {"api_name": "match_for_starlovematch", "api_action": "\nAction: match_for_starlovematch\nAction Input: {\n  \"birthdetails\": \"name=best_friend&dob=03/15/1990&name1=friend1&dob1=05/20/1989&name2=friend2&dob2=11/10/1992\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"action": "Fetch birth details and compatibility rankings for compatible friends"}}, {"state": "generated_by_agent", "aseq": {"api_name": "find_compatible_friends", "api_action": "{\"birth_details\": [{\"name\":\"friend1\",\"dob\":\"03/24/1985\"},{\"name\":\"friend2\",\"dob\":\"07/12/1986\"},{\"name\":\"friend3\",\"dob\":\"09/22/1990\"}]}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "find_friends_compatibility", "api_action": "{\"birthdetails\":[\"name=name1&dob=dob1\",\"name=name2&dob=dob2\"]}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "fetch_compatibility_ratings"}}]}
{"URL": "64070", "query": "I need to check the inventory status from My API 12345. Can you also fetch the details of the pet with ID 1?", "api_names": ["getinventory_for_my_api_12345", "getpetbyid_for_my_api_12345", "Finish", "findbypestcommonname_for_agrofitdata", "home_for_amazon_products_api", "fixture_by_fixtureid_for_football_xg_statistics", "docs_for_contextoguess", "melodyn_for_melodyn", "downloadforgeinstaller_for_minecraft_forge_optifine", "qualifyingresults_for_formula_1_fixed", "login_for_appointment_system_api", "get_base_information_for_al_quran", "top_grossing_apps_for_store_apps", "zip_code_information_for_mexico_zip_codes", "ministerio_espec_fico_for_dataestado", "search_for_shopify_stores_info", "filter_for_unicode_codepoints", "news_list_for_morning_star"], "api_descs": {"Finish": "No description available.", "docs_for_contextoguess": "docs", "downloadforgeinstaller_for_minecraft_forge_optifine": "Redirect to download Forge Installer.", "filter_for_unicode_codepoints": "Filter a String, e.g. , by Unicode version or only uppercase letters", "findbypestcommonname_for_agrofitdata": " ", "fixture_by_fixtureid_for_football_xg_statistics": "The method is used to get info and events of fixtures by the fixture id.", "get_base_information_for_al_quran": "Responds with JSON including some properties of the Quran. *(deprecated)*", "getinventory_for_my_api_12345": "Returns a map of status codes to quantities", "getpetbyid_for_my_api_12345": "Returns a single pet", "home_for_amazon_products_api": "Home Route to show usage message", "login_for_appointment_system_api": "This Endpoint is use for login to the system and getting the Api Key for the clinic. It needs username and password as query parameters. \nParameter Descriptions:\nusername --> parameter for username in the system. It is the same with username while creating the account.\npassword --> password for the username. It is same with the password while creating the acoount.\n\nReturn Value\nThis Endpoint returns string value.\nIf you get a sting with 6+ long this means that you have successfully passed username and password check and you are getting the Accesskey fort he system.\nIf you get “W1” it means a warning that your username doesn’t exists\nIf you get “W2” it means a warning that your password is not correct.\nIt you get “E1” it means a programmatic internal error. If you get E1 in the next calls you can get help from us.", "melodyn_for_melodyn": "melodyn", "ministerio_espec_fico_for_dataestado": "Obtiene el listado de un sólo ministerio", "news_list_for_morning_star": "List latest news", "qualifyingresults_for_formula_1_fixed": " ", "search_for_shopify_stores_info": "In this endpoint you can search any particular Niche, or keyword for more narrowed results.", "top_grossing_apps_for_store_apps": "Top grossing apps chart.", "zip_code_information_for_mexico_zip_codes": "Retrieves the information of a particular zip code"}, "aseqs": [{"api_name": "getinventory_for_my_api_12345", "api_action": "\nAction: getinventory_for_my_api_12345\nAction Input: {}", "api_reaction": null}, {"api_name": "getpetbyid_for_my_api_12345", "api_action": "\nAction: getpetbyid_for_my_api_12345\nAction Input: {\"petid\": 1}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_my_api_12345"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_my_api_12345", "api_action": "\nAction: getpetbyid_for_my_api_12345\nAction Input: {\n\t\"petId\": 1\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_my_api_12345"}}]}
{"URL": "29731", "query": "I'm writing a report on current events. Can you retrieve the trending news articles for me? Additionally, I would like to search for content related to politics. Please provide me with the content from the trending articles and the content from a specific URL.", "api_names": ["get_trending_for_url_content_extractor", "search_content_for_url_content_extractor", "get_content_for_url_content_extractor", "Finish", "api_pricetosales_for_finanzoo_api_fundamentals", "assetticker_for_bravenewcoin", "stagesubstages_for_motorsportapi", "trending_for_bing_image_search", "get_hashtags_for_instagram_profile", "entry_list_for_golf_leaderboard_data", "ip_lookup_for_ip_whois_geolocation", "capture_for_giflayer", "get_fixtures_for_hapihub", "live_game_data_for_hockey_datafeeds_by_rolling_insights", "ethprice_for_uniswap_v2_api", "regions_for_google_trends"], "api_descs": {"Finish": "No description available.", "api_pricetosales_for_finanzoo_api_fundamentals": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0", "assetticker_for_bravenewcoin": "This free endpoint will return the latest details for an asset refreshed every 5 minutes with global USD spot price, 24 hour volume and supply.  The optional percentChange parameter provides the 1, 7 and 30 day percentage movements as additional payload.   \n\nSupply the unique identifier (UUID) for an asset.  The UUID for any asset may be found from the Assets endpoint in Lookups.\n\nA security token is required for the Authorization Header. Obtain a token valid for 24 hours from the GetToken endpoint.", "capture_for_giflayer": "Main API endpoint used to generate GIFs", "entry_list_for_golf_leaderboard_data": "Entry List for given tournament - query this to see who will be taking part.", "ethprice_for_uniswap_v2_api": "Return the current eth price in uniswap v2", "get_content_for_url_content_extractor": "Give a url and it will spit back the content of that url", "get_fixtures_for_hapihub": "Fetch a list of fixtures", "get_hashtags_for_instagram_profile": "Return hashtag media list medias", "get_trending_for_url_content_extractor": "This will return a list of news articles that are trending.", "ip_lookup_for_ip_whois_geolocation": "For IPv4 & IPv6", "live_game_data_for_hockey_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.", "regions_for_google_trends": "The endpoint to retrieve a list of supported regions", "search_content_for_url_content_extractor": "Allows you to search content for content based on a query.", "stagesubstages_for_motorsportapi": "Get all substages of a specific Motorsport stage.", "trending_for_bing_image_search": "Get currently trending images."}, "aseqs": [{"api_name": "get_trending_for_url_content_extractor", "api_action": "\nAction: get_trending_for_url_content_extractor\nAction Input: {}", "api_reaction": null}, {"api_name": "search_content_for_url_content_extractor", "api_action": "\nAction: search_content_for_url_content_extractor\nAction Input: {\n  \"query\": \"politics\"\n}", "api_reaction": null}, {"api_name": "get_content_for_url_content_extractor", "api_action": "\nAction: get_content_for_url_content_extractor\nAction Input: {\n  \"url\": \"https://news.google.com/rss/articles/CBMiMWh0dHBzOi8vd3d3LmJiYy5jb20vbmV3cy93b3JsZC11cy1jYW5hZGEtNjU5NTYxMDPSATVodHRwczovL3d3dy5iYmMuY29tL25ld3Mvd29ybGQtdXMtY2FuYWRhLTY1OTU2MTAzLmFtcA?oc=5\"\n}", "api_reaction": null}, {"api_name": "get_content_for_url_content_extractor", "api_action": "\nAction: get_content_for_url_content_extractor\nAction Input: {\n  \"url\": \"https://news.google.com/rss/articles/CBMiamh0dHBzOi8vYXBuZXdzLmNvbS9hcnRpY2xlL29yY2FzLWF0dGFjay1vY2Vhbi1yYWNlLXNhaWxib2F0LWtpbGxlci13aGFsZXMtYzEzZTdlNjdmMWM4ZjUzNmU1YmU5MjU4NDU1ZWVkNzDSAQA?oc=5\"\n}", "api_reaction": null}, {"api_name": "get_content_for_url_content_extractor", "api_action": "\nAction: get_content_for_url_content_extractor\nAction Input: {\n  \"url\": \"https://www.bbc.com/news/world-us-canada-65956103\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_content_for_url_content_extractor", "api_action": "{\"query\": \"politics\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_trending_for_url_content_extractor", "api_action": "{\"query\": \"trending news\"}", "api_reaction": null}}]}
{"URL": "39478", "query": "Is the application functioning properly? I need to find the pharmacies that are open in Nouvelle-Calédonie. Please check the application's status and provide me with the list of open pharmacies.", "api_names": ["Finish", "all_for_pharmacies_de_garde_nc", "health_for_pharmacies_de_garde_nc", "search_for_soundcloud", "get_all_ethereum_news_for_crypto_news_v11", "languages_for_linguin_ai", "https_mp3downy_com_twitter_video_downloader_api_for_twitter_video_downloader_mp4", "term_for_term_analysis", "united_states_retail_and_recreation_mobility_for_covid_19_economic_impact", "trades_pending_for_freefloatus", "getpetbyid_for_petstore_blitz", "properties_detail_for_realty_in_au"], "api_descs": {"Finish": "No description available.", "all_for_pharmacies_de_garde_nc": "Renvoie les pharmacies de garde de Nouvelle-Calédonie", "get_all_ethereum_news_for_crypto_news_v11": "This endpoint will return news articles from over 70 different websites about Ethereum", "getpetbyid_for_petstore_blitz": "Returns a single pet", "health_for_pharmacies_de_garde_nc": "Renvoie le statut de l'application : up ou down", "https_mp3downy_com_twitter_video_downloader_api_for_twitter_video_downloader_mp4": "New twitter video downloader https://mp3downy.com/twitter-video-downloader-API", "languages_for_linguin_ai": "Get the list of supported languages", "properties_detail_for_realty_in_au": "Get detailed information of a property", "search_for_soundcloud": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "term_for_term_analysis": "Given a text, this API returns lemma text", "trades_pending_for_freefloatus": "Get pending trades for your freefloat strategies.", "united_states_retail_and_recreation_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at retail and recreation."}, "aseqs": [{"api_name": "health_for_pharmacies_de_garde_nc", "api_action": "\nAction: health_for_pharmacies_de_garde_nc\nAction Input: {}", "api_reaction": null}, {"api_name": "all_for_pharmacies_de_garde_nc", "api_action": "\nAction: all_for_pharmacies_de_garde_nc\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": \"First, I need to check the status of the application using the health_for_pharmacies_de_garde_nc API.\"\n\t\"api_name\": \"health_for_pharmacies_de_garde_nc\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_pharmacies_de_garde_nc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_pharmacies_de_garde_nc"}}]}
{"URL": "4507", "query": "Please display the entities in this text: 'I bought a new phone from Apple store in New York City.'", "api_names": ["extract_entities_for_textapi", "display_entities_for_textapi", "Finish", "random_number_fact_for_testing", "get_articles_for_google_news_api", "get_random_named_color_for_colorful", "tweet_user_favoriters_for_twitter", "prediction_details_for_today_football_prediction", "check_a_url_for_fraudfreeze_phishing_check", "characters_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_", "search_for_youtube_v3_v3", "fixture_fixture_id_for_betbro_sportbook", "stagesubstages_for_motorsportapi", "captions_list_for_youtube_v3_v2", "search_api_for_world_weather_online_api"], "api_descs": {"Finish": "No description available.", "captions_list_for_youtube_v3_v2": "Returns a list of caption tracks that are associated with a specified video", "characters_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_": "Get All 30 Characters", "check_a_url_for_fraudfreeze_phishing_check": "Check if a URL is a known phishing or scam attempt", "display_entities_for_textapi": "Renders the extracted entity types on submitted text or spans defined manually.", "extract_entities_for_textapi": "Extracts named entities from text.", "fixture_fixture_id_for_betbro_sportbook": "Get full fixture SportBook\nwhat the fuck is going on !\n", "get_articles_for_google_news_api": "Get, filter, smart search google news articles.", "get_random_named_color_for_colorful": "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the list of named color keywords that can be used in CSS according to the W3 standard. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not.", "prediction_details_for_today_football_prediction": "Shows all details about the match, its prediction and the prediction results.", "random_number_fact_for_testing": "Random Number Fact", "search_api_for_world_weather_online_api": "The Location search API method takes a query value and returns information about the location, including area name, country, latitude/longitude, population, and a URL for the weather information.", "search_for_youtube_v3_v3": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching `video`, `channel` and `playlist` resources, but you can also configure queries to only retrieve a specific type of resource.", "stagesubstages_for_motorsportapi": "Get all substages of a specific Motorsport stage.", "tweet_user_favoriters_for_twitter": "This endpoint returns a list of user who favorited the tweet"}, "aseqs": [{"api_name": "extract_entities_for_textapi", "api_action": "\nAction: extract_entities_for_textapi\nAction Input: {\n  \"text\": \"I bought a new phone from Apple store in New York City.\"\n}", "api_reaction": null}, {"api_name": "display_entities_for_textapi", "api_action": "\nAction: display_entities_for_textapi\nAction Input: {\n  \"text\": \"I bought a new phone from Apple store in New York City.\",\n  \"spans\": \"[{'text': 'Apple', 'start': 26, 'end': 31, 'label': 'ORG'}, {'text': 'New York City', 'start': 41, 'end': 54, 'label': 'GPE'}]\"\n}", "api_reaction": null}, {"api_name": "display_entities_for_textapi", "api_action": "\nAction: display_entities_for_textapi\nAction Input: {\n  \"text\": \"I bought a new phone from Apple store in New York City.\",\n  \"spans\": \"\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "extract_entities_for_textapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "display_entities_for_textapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "display_entities_for_textapi", "text": "I bought a new phone from Apple store in New York City."}}, {"state": "generated_by_agent", "aseq": {"api_name": "display_entities_for_textapi", "text": "I bought a new phone from Apple store in New York City.", "spans": "[{'text': 'Apple', 'start': 26, 'end': 31}, {'text': 'New York City', 'start': 41, 'end': 54}]"}}]}
{"URL": "10540", "query": "My friend is a die-hard ice hockey fan and his birthday is coming up. I want to surprise him with some ice hockey-related information. Can you provide me with the tournament standings and the daily match list including live matches? Additionally, it would be great to have the recent match list between his favorite teams.", "api_names": ["tournament_list_for_ice_hockey_data", "tournament_standings_for_ice_hockey_data", "daily_match_list_live_for_ice_hockey_data", "tournament_teams_for_ice_hockey_data", "Finish", "recent_match_list_for_ice_hockey_data", "aircraftsearch_for_flightera_flight_data", "get_restaurant_details_for_tripadvisor", "historic_event_by_year_for_world_history_timeline", "getcasessince_for_360_business_tool", "search_subreddits_for_reddit_fast_search", "bsc_news_for_cryptocurrency_news", "search_video_list_by_keywords_for_tiktok_download_video_", "myorganizationsdefaultsitecollection_for_ishan", "loginuser_for_teste", "getpetbyid_for_tes", "get_all_stories_by_username_for_instagram_api_2023", "get_user_feed_for_instagram_v7", "overview_for_airdna", "api_whois_for_retrieve_dns_entries"], "api_descs": {"Finish": "No description available.", "aircraftsearch_for_flightera_flight_data": "A list of plane registrations for a given search criteria.\nCan search by airline ident, country, model\nIf multiple arguments are provided, they will be chained as AND\nReturns only currently active aircraft", "api_whois_for_retrieve_dns_entries": " ", "bsc_news_for_cryptocurrency_news": "Get the top latest news from BSC News.", "daily_match_list_live_for_ice_hockey_data": "Daily match list including live matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**", "get_all_stories_by_username_for_instagram_api_2023": "Get all active stories of an Instagram user using username.\n\n***Please use` Get all stories by user_id` endpoint for fast response.***", "get_restaurant_details_for_tripadvisor": "-", "get_user_feed_for_instagram_v7": "Get the feed of a user", "getcasessince_for_360_business_tool": "Get cases modified since", "getpetbyid_for_tes": "Returns a single pet", "historic_event_by_year_for_world_history_timeline": "Give an year in the query and it returns all the available events from that year", "loginuser_for_teste": "", "myorganizationsdefaultsitecollection_for_ishan": " ", "overview_for_airdna": "Returns overview stats (ADR, OCC ,Revenue ..) of a location rental data", "recent_match_list_for_ice_hockey_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Ice Hockey Match List or Fixture endpoints.**", "search_subreddits_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the Subreddits.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "search_video_list_by_keywords_for_tiktok_download_video_": "search video list by keywords", "tournament_list_for_ice_hockey_data": "List of tournaments in your data coverage.", "tournament_standings_for_ice_hockey_data": "Team Rankings for a specific competition.", "tournament_teams_for_ice_hockey_data": "List of teams participating in a specific tournament."}, "aseqs": [{"api_name": "tournament_list_for_ice_hockey_data", "api_action": "\nAction: tournament_list_for_ice_hockey_data\nAction Input: {}", "api_reaction": null}, {"api_name": "tournament_teams_for_ice_hockey_data", "api_action": "\nAction: tournament_teams_for_ice_hockey_data\nAction Input: {\"tournamentid\": 6}", "api_reaction": null}, {"api_name": "tournament_standings_for_ice_hockey_data", "api_action": "\nAction: tournament_standings_for_ice_hockey_data\nAction Input: {\"tournamentid\": 6}", "api_reaction": null}, {"api_name": "daily_match_list_live_for_ice_hockey_data", "api_action": "\nAction: daily_match_list_live_for_ice_hockey_data\nAction Input: {\"date\": \"17/11/2021\"}", "api_reaction": null}, {"api_name": "recent_match_list_for_ice_hockey_data", "api_action": "\nAction: recent_match_list_for_ice_hockey_data\nAction Input: {\"matchid\": 107101}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tournament_standings_for_ice_hockey_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_standings_for_ice_hockey_data", "api_action": "\nAction: tournament_standings_for_ice_hockey_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_standings_for_ice_hockey_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_match_list_live_for_ice_hockey_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_standings_for_ice_hockey_data", "api_action": "\nAction: tournament_standings_for_ice_hockey_data\nAction Input: {\"tournamentid\": 6}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_standings_for_ice_hockey_data", "api_action": "\nAction: tournament_standings_for_ice_hockey_data\nAction Input: {\"tournamentid\": 6}", "api_reaction": null}}]}
{"URL": "1438", "query": "I want to explore multiple cryptocurrency news sources. Fetch the top 5 articles from CoinCu, Yahoo Finance, and CryptoNinjas. Also, include news from CoinTelegraph. Please provide the article titles, authors, and publication dates. Additionally, summarize the main points of each article.", "api_names": ["coincu_for_crypto_news_v2", "top_news_for_crypto_news_v2", "cointelegraph_for_crypto_news_v2", "Finish", "cryptoninjas_for_crypto_news_v2", "yahoofinance_for_crypto_news_v2", "recent_100_for_moka_news", "get_supported_file_type_for_all_in_one_file_converter", "health_for_contests", "freeaccess_for_ai_powered_wishscraper_api", "custom_captcha_for_captcha_v2", "getdivision_for_nhl_stats_and_live_data", "getdisastertypebydate_for_rankiteo_climate_risk_assessment", "get_brandlist_by_siteid_zappos_1_6pm_2_for_zappos_2022", "get_news_source_feeds_for_climate_change_v31", "get_desserts_by_there_id_for_beverages_and_desserts", "get_heightmap_from_two_geopoints_for_heightmap_from_latitude_and_longitude", "erzeugung_for_regionalkonzept_strom_herkunft", "alerts_parameters_for_national_weather_service", "v1_nutrition_for_nutrition_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "alerts_parameters_for_national_weather_service": "A list of alerts that can be filtered by parameters. If no parameters are provided, then all alerts are returned. The ATOM format returns items in CAP-ATOM.", "coincu_for_crypto_news_v2": "Get the latest news from CoinCu.", "cointelegraph_for_crypto_news_v2": "Get the latest news from CoinTelegraph.", "cryptoninjas_for_crypto_news_v2": "Get the latest news from CryptoNinjas.", "custom_captcha_for_captcha_v2": "captcha code is user format. \n\n- string is number or character, string length is up to 8 (from 1 to 8)", "erzeugung_for_regionalkonzept_strom_herkunft": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Verbraucher sein dürfen, die  von einer Erzeugungsanlage von angegebener Postleitzahl ihren Strom beziehen sollen.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen dürfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/erzeugung?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Verbraucher sein darf, damit der Strom als regionaler Ökostrom bezeichnet werden darf, wenn dessen Netzeinspeisung (Erzeuger) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021", "freeaccess_for_ai_powered_wishscraper_api": "This endpoint provides access to the basic features available to free or unpaid users. It allows you to retrieve data according to the limitations and restrictions set for free users.", "get_brandlist_by_siteid_zappos_1_6pm_2_for_zappos_2022": "GET BrandList by siteId (zappos =1, 6pm=2)", "get_desserts_by_there_id_for_beverages_and_desserts": "Get Desserts by there Id", "get_heightmap_from_two_geopoints_for_heightmap_from_latitude_and_longitude": "you provide two geopoints( latitude, longitude). Server returns image/png with heightmap within this borders.", "get_news_source_feeds_for_climate_change_v31": "Api showing news feedsa all over the planet", "get_supported_file_type_for_all_in_one_file_converter": "Get supported file types by providing an input file type", "getdisastertypebydate_for_rankiteo_climate_risk_assessment": "Get disaster by type within a time range", "getdivision_for_nhl_stats_and_live_data": "You can use this to also retrieve inactive divisions. For example, the ID for the old Patrick division is `13`.", "health_for_contests": "Use health endpoint to check if server is up and running", "recent_100_for_moka_news": "GET the recent  100 news", "top_news_for_crypto_news_v2": "Get the top latest news from CoinDesk.\n\nSelect number of articles to return. Maximum limit depends on the provider which is usually 50+ articles for CoinDesk. The first articles are the latest.\n\nExample URLs:\n/news/top/5\n/news/top/20\n/news/top/1000  (if only 50 articles are available then 50 is returned)", "v1_nutrition_for_nutrition_by_api_ninjas": "API Ninjas Nutrition API endpoint.", "yahoofinance_for_crypto_news_v2": "Get the latest news from Yahoo Finance."}, "aseqs": [{"api_name": "coincu_for_crypto_news_v2", "api_action": "\nAction: coincu_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "yahoofinance_for_crypto_news_v2", "api_action": "\nAction: yahoofinance_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "cryptoninjas_for_crypto_news_v2", "api_action": "\nAction: cryptoninjas_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "cointelegraph_for_crypto_news_v2", "api_action": "\nAction: cointelegraph_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "coincu_for_crypto_news_v2", "api_action": "{\"page\": 1, \"count\": 5}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "cointelegraph_for_crypto_news_v2", "api_action": "\nAction: cointelegraph_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "cointelegraph_for_crypto_news_v2", "api_action": "\nAction: cointelegraph_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "coincu_for_crypto_news_v2", "api_action": "\nAction: coincu_for_crypto_news_v2\nAction Input: {\"count\": 5}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "coincu_for_crypto_news_v2", "api_action": "\nAction: coincu_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}}]}
{"URL": "29345", "query": "My company is interested in partnering with schools in the area. Can you provide me with the data of the second page with a limit of 10 from TDot School Data API? We need the 'id', 'key1', 'key2', and 'tdsbdatumId' for each record.", "api_names": ["get_paginate_for_tdot_school_data", "get_all_locations_for_tdot_school_data", "get_filter_for_tdot_school_data", "Finish", "communes_par_code_commune_for_bps", "get_by_filter_for_world_population_by_decade_and_growth_rate", "module_for_berita", "get_user_orders_for__demo_project_v2", "products_search_by_barcode_for_kohls", "index_for_ski_resorts_and_conditions", "daily_sentiment_for_sentitrade", "get_all_global_recession_news_for_global_recession_live", "get_recipes_for_recetas_en_espa_ol", "get_all_hadiths_for_hadiths_api", "get_available_companies_for_generate_linkedin_leads", "get_expressions_for_dicolink", "v1_folderid_participants_for_sertifi_esignature_and_epayment", "calculate_expenses_for_expense_data", "extract_download_links_for_instagram_downloader_reels_and_videos_downloader", "getdiscusage_for_groupdocs_comparison_cloud"], "api_descs": {"Finish": "No description available.", "calculate_expenses_for_expense_data": "<br /><br />\n<b>Authentication:</b> not required", "communes_par_code_commune_for_bps": "Récupérer les détails d'une commune depuis son code.", "daily_sentiment_for_sentitrade": "Returns asset ticker queried, sentiment score, date queried, and number of articles used to calculate the sentiment score.", "extract_download_links_for_instagram_downloader_reels_and_videos_downloader": "Add url parameter to get download links.", "get_all_global_recession_news_for_global_recession_live": "This endpoint will return the latest articles from 7 publications about worldwide recession news.", "get_all_hadiths_for_hadiths_api": "Get all hadiths from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.", "get_all_locations_for_tdot_school_data": "Get all locations", "get_available_companies_for_generate_linkedin_leads": "Get Available Companies which could be used in /leads/leads/ endpoint", "get_by_filter_for_world_population_by_decade_and_growth_rate": "Get by filter", "get_expressions_for_dicolink": "Get Expression with a specific word", "get_filter_for_tdot_school_data": "Get Filter", "get_paginate_for_tdot_school_data": "Get Paginate", "get_recipes_for_recetas_en_espa_ol": "Get all recipes", "get_user_orders_for__demo_project_v2": " ", "getdiscusage_for_groupdocs_comparison_cloud": " ", "index_for_ski_resorts_and_conditions": "Show a list of all endpoints available", "module_for_berita": "okeee", "products_search_by_barcode_for_kohls": "Search product by barcode", "v1_folderid_participants_for_sertifi_esignature_and_epayment": " "}, "aseqs": [{"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_filter_for_tdot_school_data", "api_action": "\nAction: get_filter_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_locations_for_tdot_school_data", "api_action": "\nAction: get_all_locations_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_locations_for_tdot_school_data", "api_action": "\nAction: get_all_locations_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_paginate_for_tdot_school_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {\n  \"limit\": 10,\n  \"page\": 2,\n  \"fields\": [\n    \"id\",\n    \"key1\",\n    \"key2\",\n    \"tdsbdatumId\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {}", "api_reaction": null}}]}
{"URL": "83010", "query": "I'm writing an article on famous quotes and I need some inspiration. Can you provide me with a diverse range of thought-provoking and motivational quotes from history's greatest thinkers? It would be great if I could filter the quotes by category and author.", "api_names": ["authors_for_words_of_wisdom_the_famous_quotes_api", "categories_for_words_of_wisdom_the_famous_quotes_api", "quotes_for_words_of_wisdom_the_famous_quotes_api", "Finish", "fast_language_detection_for_translate_v3", "getstockitem_for_appibase", "search_location_by_name_or_zip_code_for_weather_forecast_14_days", "single_name_medium_for_nameforge", "ip_address_check_for_miza", "hosts_txt_for_stopmodreposts_blocklist", "getuserbyname_for_petstore_blitz", "countries_for_visa_requirements", "get_station_details_for_soundcloud_scraper", "status_for_jobtitle", "get_company_balance_sheet_for_finance_data", "basketball_match_statistics_for_sports_live_scores", "get_all_gateways_for_aaaa", "consulta_receita_federal_for_consulta_cnpj_tempo_real", "time_zone_date_time_for_geodb_cities", "view_item_for_catalogapi"], "api_descs": {"Finish": "No description available.", "authors_for_words_of_wisdom_the_famous_quotes_api": "Returns a list of authors", "basketball_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint.", "categories_for_words_of_wisdom_the_famous_quotes_api": "Returns a list of categories", "consulta_receita_federal_for_consulta_cnpj_tempo_real": "Consulta Receita Federal", "countries_for_visa_requirements": " ", "fast_language_detection_for_translate_v3": "This endpoint will return the Language of the Text", "get_all_gateways_for_aaaa": "Get all Gateways", "get_company_balance_sheet_for_finance_data": "Get Company latest data for balance sheet", "get_station_details_for_soundcloud_scraper": "This endpoint fetches full details of a SoundCloud station, including all tracks.", "getstockitem_for_appibase": "Get a stock item", "getuserbyname_for_petstore_blitz": " ", "hosts_txt_for_stopmodreposts_blocklist": "Hosts file endpoint", "ip_address_check_for_miza": "Retrieves the host (server) and remote (your) IP addresses. A fast and responsive endpoint that is also handy for checking whether the service is online.", "quotes_for_words_of_wisdom_the_famous_quotes_api": "Get inspired by the words of history's greatest thinkers. Get your daily dose of motivation", "search_location_by_name_or_zip_code_for_weather_forecast_14_days": "Search location by Name or zip code and get the key for the forecast", "single_name_medium_for_nameforge": "Create single name.\nMax query length is 50 characters.", "status_for_jobtitle": "", "time_zone_date_time_for_geodb_cities": "Get the timezone current date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ", "view_item_for_catalogapi": "Returns an image and description of the item"}, "aseqs": [{"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "categories_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: categories_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "authors_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: authors_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch diverse and motivational quotes from history's greatest thinkers including different categories of quotes, so the user can filter by category as well. The 'quotes_for_words_of_wisdom_the_famous_quotes_api' provides inspirational quotes along with category information related to each quote.\n\t\"api_name\": \"quotes_for_words_of_wisdom_the_famous_quotes_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api"}}]}
{"URL": "20570", "query": "I'm looking for webcams near my current location in New York City. Can you give me a list of webcams in the city? Also, provide me with a map showing the locations of these webcams.", "api_names": ["webcams_list_modifier_modifier_for_webcams_travel", "Finish", "webcams_list_region_region_region_for_webcams_travel", "webcams_list_country_country_country_for_webcams_travel", "webcams_map_ne_lat_ne_lng_sw_lat_sw_lng_zoom_for_webcams_travel", "genres_for_web_novel_api", "get_the_account_for_alpaca_trading", "get_coins_for_coinranking", "settag_for_sms_receive", "search_user_for_instagram_v5", "rental_search_for_tripadvisor", "search_accounts_for_tiktok_api", "get_city_for_wgd_places", "powerball_for_ca_lottery", "get_video_urls_for_youtube_video_stream_download", "getcatalogtenant_for_auth", "top_grossing_ios_apps_for_app_store", "ip_lookup_api_for_weatherapi_com", "competition_standings_for_allscores", "pressure_from_to_number_for_unitconversion"], "api_descs": {"Finish": "No description available.", "competition_standings_for_allscores": "Get competition standings.", "genres_for_web_novel_api": "Returns all Genres.", "get_city_for_wgd_places": "Gets city information from a country id", "get_coins_for_coinranking": "Get a list of coins. Coins are by default ordered by their rank, which - somewhat simplified - means that they are ordered on marketcap. The response not only returns a list of coins, but also statistics regarding the requested list, such as the volume in the last 24 hours.", "get_the_account_for_alpaca_trading": "Returns the account associated with the API key", "get_video_urls_for_youtube_video_stream_download": "Get video/shorts urls for", "getcatalogtenant_for_auth": "Get tenant information. Internal endpoint only available to other services.", "ip_lookup_api_for_weatherapi_com": "IP Lookup API method allows a user to get up to date information for an IP address in json.", "powerball_for_ca_lottery": "Powerball History", "pressure_from_to_number_for_unitconversion": "Pressure unit conversions", "rental_search_for_tripadvisor": "-", "search_accounts_for_tiktok_api": "Return Search Result", "search_user_for_instagram_v5": "Get Instagram users by keyword.", "settag_for_sms_receive": "Change the current tag.", "top_grossing_ios_apps_for_app_store": "Get list of the top grossing ios apps", "webcams_list_country_country_country_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed country. Multiple countries must be separated by comma. Required: at least one {country}. Possible values are ISO 3166-1-alpha-2 codes.", "webcams_list_modifier_modifier_for_webcams_travel": "Returns a list of webcams according to the applied {modifier}s. Initially, the list contains all webcams. The resulting list of webcams from applying a modifer will be used as input for the following modifier. modifiers are processed from left to right. With every applied modifier, the list of webcams will be narrowed down. Possible values for {modifier} are: \"webcam\" (initial list of webcams), \"nearby\" (list of webcams around a position), \"bbox\" (list of webcams in an area), \"category\" (list of webcams in a category), \"continent\" (list of webcams in a continent), \"country\" (list of webcams in a country), \"region\" (list of webcams in a region of a country), \"exclude\" (exclude webcams from a list of webcams), \"orderby\" (order the list of webcams), \"limit\" (slice the list of webcams). \"webcam\", if given, is always applied first. \"exclude\", \"orderby\", and \"limit\" are always applied (even if not explicitly given) in this order and always after \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" have been applied.  If none of \"webcam\", \"nearby\", \"bbox\", \"category\", \"continent\", \"country\", and \"region\" are applied, then all webcams are in the list before applying \"exclude\", \"orderby\", and \"limit\".  Please refer to the description of the various {modifier}s to learn more about their parameter and defaults.  A {modifier} may be applied only once. If a {modifier} is listed multiple times, it may only applied once.", "webcams_list_region_region_region_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed region. Multiple regions must be separated by comma. Required: at least one {region}. Possible values are ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot.", "webcams_map_ne_lat_ne_lng_sw_lat_sw_lng_zoom_for_webcams_travel": "Returns a list of webcams optimized for displaying on a map for a given bounding box and {zoom} level. The value for the zoom level is compatible with the Google Maps zoom level."}, "aseqs": [{"api_name": "webcams_list_modifier_modifier_for_webcams_travel", "api_action": "\nAction: webcams_list_modifier_modifier_for_webcams_travel\nAction Input: {\n  \"modifier\": \"countries\",\n  \"show\": \"webcams\"\n}", "api_reaction": null}, {"api_name": "webcams_list_country_country_country_for_webcams_travel", "api_action": "\nAction: webcams_list_country_country_country_for_webcams_travel\nAction Input: {\n  \"country\": \"US\",\n  \"lang\": \"en\",\n  \"show\": \"webcams\"\n}", "api_reaction": null}, {"api_name": "webcams_list_region_region_region_for_webcams_travel", "api_action": "\nAction: webcams_list_region_region_region_for_webcams_travel\nAction Input: {\n  \"region\": \"US.NY\",\n  \"lang\": \"en\",\n  \"show\": \"webcams\"\n}", "api_reaction": null}, {"api_name": "webcams_map_ne_lat_ne_lng_sw_lat_sw_lng_zoom_for_webcams_travel", "api_action": "\nAction: webcams_map_ne_lat_ne_lng_sw_lat_sw_lng_zoom_for_webcams_travel\nAction Input: {\n  \"ne_lat\": 40.9176,\n  \"ne_lng\": -73.7004,\n  \"sw_lat\": 40.4774,\n  \"sw_lng\": -74.2591,\n  \"zoom\": 12,\n  \"lang\": \"en\",\n  \"show\": \"webcams\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "webcams_list_country_country_region_for_webcams_travel"}}, {"state": "generated_by_agent", "aseq": {"api_name": "webcams_list_modifier_modifier_for_webcams_travel"}}, {"state": "generated_by_agent", "aseq": {"api_name": "webcams_list_region_region_region_for_webcams_travel"}}, {"state": "generated_by_agent", "aseq": {"api_name": "webcams_map_ne_lat_ne_lng_sw_lat_sw_lng_zoom_for_webcams_travel"}}, {"state": "generated_by_agent", "aseq": {"api_name": "webcams_list_region_region_region_for_webcams_travel"}}]}
{"URL": "20741", "query": "I am a history enthusiast and enjoy learning about significant events. Could you give me a random historic event and its associated year? Furthermore, I would like to explore events from the year 1200 CE.", "api_names": ["Finish", "historic_event_by_year_for_world_history_timeline", "random_historic_event_for_world_history_timeline", "result_statistics_for_soccer_data", "get_transactions_over_period_for_mlb_data", "simbrief_get_latest_ofp_for_simbrief_get_latest_ofp", "hashtag_info_for_100_success_instagram_api_scalable_robust", "search_for_lexicala", "uuidv3_generator_for_uuid_generator", "copy_of_endpoint_google_for_tutorial", "phone_call_qr_code_for_scanova_qr_code", "get_drug_info_by_drug_name_route_for_konviere_drugsapi"], "api_descs": {"Finish": "No description available.", "copy_of_endpoint_google_for_tutorial": "google", "get_drug_info_by_drug_name_route_for_konviere_drugsapi": "This web method will return all the dataset related to the drug information using the “drgNm” the drug name or brand name or drug product and “drgRte” drug route, these input parameters are required.  All web method requires the \"api_key\" as query parameter.", "get_transactions_over_period_for_mlb_data": "Retrieve all transactions between a given period. start_date and end_date parameters should be in the YYYYMMDD format.", "hashtag_info_for_100_success_instagram_api_scalable_robust": "Get results of hashtag search by keyword", "historic_event_by_year_for_world_history_timeline": "Give an year in the query and it returns all the available events from that year", "phone_call_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with the phone number. When scanned, the QR Code will prompt the scanning device to 'dial the number'.", "random_historic_event_for_world_history_timeline": "Returns a Random World Historic Event with the year and the event", "result_statistics_for_soccer_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.", "search_for_lexicala": "search for entries with filters in query", "simbrief_get_latest_ofp_for_simbrief_get_latest_ofp": "Get latest ofp in xml (default) or json based on username\nthe json param must be 0 or 1", "uuidv3_generator_for_uuid_generator": "UUIDv3 generator"}, "aseqs": [{"api_name": "random_historic_event_for_world_history_timeline", "api_action": "\nAction: random_historic_event_for_world_history_timeline\nAction Input: {}", "api_reaction": null}, {"api_name": "historic_event_by_year_for_world_history_timeline", "api_action": "\nAction: historic_event_by_year_for_world_history_timeline\nAction Input: {\n  \"year\": \"1200\"\n}", "api_reaction": null}, {"api_name": "historic_event_by_year_for_world_history_timeline", "api_action": "\nAction: historic_event_by_year_for_world_history_timeline\nAction Input: {\n  \"year\": \"1200 CE\"\n}", "api_reaction": null}, {"api_name": "random_historic_event_for_world_history_timeline", "api_action": "\nAction: random_historic_event_for_world_history_timeline\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}]}
{"URL": "13757", "query": "I want to create a new client profile for my family. Please create a client with the following details: email - 'newclient@example.com', last name - 'Smith', first name - 'Jane', password - 'newpassword', and login - 'janesmith'.", "api_names": ["Finish", "create_client_for_ptl", "get_channel_polls_for_kick_com_api_kick_api", "random_credit_card_for_fake_data_generator", "logoutuser_for_freeplanhardlimitexternal", "get_post_data_download_video_photo_for_9gag_api_detailed_", "tournament_info_for_football_data", "getstationbycountry_for_radio_world_75_000_worldwide_fm_radio_stations_"], "api_descs": {"Finish": "No description available.", "create_client_for_ptl": "Receive new users", "get_channel_polls_for_kick_com_api_kick_api": "Get Channel Polls", "get_post_data_download_video_photo_for_9gag_api_detailed_": "Returns post data. Includes download link for videos.", "getstationbycountry_for_radio_world_75_000_worldwide_fm_radio_stations_": "Getting all Stations by country based on.\n- country id\n- limit\n- page\n- order", "logoutuser_for_freeplanhardlimitexternal": "", "random_credit_card_for_fake_data_generator": "This endpoint generate a list of fake credit cards", "tournament_info_for_football_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament."}, "aseqs": [{"api_name": "create_client_for_ptl", "api_action": "\nAction: create_client_for_ptl\nAction Input: {\n  \"client_email\": \"newclient@example.com\",\n  \"client_lastname\": \"Smith\",\n  \"client_firstname\": \"Jane\",\n  \"client_pass\": \"newpassword\",\n  \"client_login\": \"janesmith\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use the create_client_for_ptl API to create a new client profile with given details, but before that, email validation is required since it seems to be invalid or doesn't match the API requirement for the user profile creation. The provided 'newclient@example.com' can throw an error in this step.\n\t\"api_name\": \"create_client_for_ptl\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "create_client_for_ptl"}}]}
{"URL": "82171", "query": "As a social media enthusiast, I'm always on the lookout for interesting content. Can you provide me with the top posts from the subreddit 'interesting' and the rising popular posts? It would be great to see the number of comments and the upvote ratio for each post.", "api_names": ["post_details_for_reddit", "Finish", "popular_posts_for_reddit", "rising_popular_posts_for_reddit", "top_posts_by_subreddit_for_reddit", "product_groups_list_for_consumer_reports", "get_result_from_category_for_taboo_api", "auto_complete_deprecating_for_kohls", "leaguetotalteamevents_for_cricketapi2", "eventlist_for_31events_send_native_calendar_invites", "getsupportedfileformats_for_groupdocs_comparison_cloud", "get_distance_for_great_circle_math_api", "tweets_by_userid_for_twitter_aio", "auto_complete_for_idealista_v2", "vat_price_calculation_api_endpoint_for_vat_validation_and_tax_rates", "get_generated_article_by_id_for_articles_generator", "stock_get_dividends_splits_for_webull", "agents_list_for_realty_in_us", "get_latest_news_for_global_stock_market_api_data", "website_screenshot_v1_for_website_screenshot"], "api_descs": {"Finish": "No description available.", "agents_list_for_realty_in_us": "List agents with filters and options", "auto_complete_deprecating_for_kohls": "Get suggestions by term or phrase", "auto_complete_for_idealista_v2": "Get auto complete suggestion by term or phrase", "eventlist_for_31events_send_native_calendar_invites": "", "get_distance_for_great_circle_math_api": "Returns the circle math distance in miles.", "get_generated_article_by_id_for_articles_generator": "When using Generate New Article Endpoint, the article is saved, and can be accessed by the provided id", "get_latest_news_for_global_stock_market_api_data": "View the latest financial news articles published on Investing.com. Read the most recent stories and breaking news, covering all aspects of financial markets worldwide, including commodities, stocks, currencies, indices and more.", "get_result_from_category_for_taboo_api": "Given a stored category, get a random result which will contain the main phrase and the taboo words.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "getsupportedfileformats_for_groupdocs_comparison_cloud": " ", "leaguetotalteamevents_for_cricketapi2": "Get the total team events for a specific Cricket league for a given season by providing its unique tournament ID and season ID.", "popular_posts_for_reddit": "Popular Posts", "post_details_for_reddit": "Post Details", "product_groups_list_for_consumer_reports": "List product groups from categories and types", "rising_popular_posts_for_reddit": "Rising Popular Posts", "stock_get_dividends_splits_for_webull": "Get stock dividends and splits", "top_posts_by_subreddit_for_reddit": "Top Posts By Subreddit", "tweets_by_userid_for_twitter_aio": "Receive all tweets ordered by most recent. You can use the cursor and count to navigate around.", "vat_price_calculation_api_endpoint_for_vat_validation_and_tax_rates": "The Calculate Endpoint makes it easy to calculate a VAT compliant price given a country and price, as well as such optional values as the type of goods.", "website_screenshot_v1_for_website_screenshot": "Get a screenshot of any web page with one API call (v1)"}, "aseqs": [{"api_name": "top_posts_by_subreddit_for_reddit", "api_action": "\nAction: top_posts_by_subreddit_for_reddit\nAction Input: {\n  \"time\": \"day\",\n  \"subreddit\": \"interesting\"\n}", "api_reaction": null}, {"api_name": "rising_popular_posts_for_reddit", "api_action": "\nAction: rising_popular_posts_for_reddit\nAction Input: {}", "api_reaction": null}, {"api_name": "popular_posts_for_reddit", "api_action": "\nAction: popular_posts_for_reddit\nAction Input: {\n  \"sort\": \"hot\"\n}", "api_reaction": null}, {"api_name": "post_details_for_reddit", "api_action": "\nAction: post_details_for_reddit\nAction Input: {\n  \"post_id\": \"t3_14r1aau\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_posts_by_subreddit_for_reddit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rising_popular_posts_for_reddit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_posts_by_subreddit_for_reddit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_posts_by_subreddit_for_reddit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_posts_by_subreddit_for_reddit"}}]}
{"URL": "26671", "query": "I am interested in knowing the status of an order with the ID '987'. Can you use the getOrderById API call to fetch the details of this order?", "api_names": ["getinventory_for_tes", "getorderbyid_for_tes", "Finish", "currencies_for_currency_converter_pro", "schneetage_for_ecoweather", "category_tags_for_hashtag", "addresses_for_addressr", "girl_groups_for_k_pop", "getrecentanimes_for_gogoanime_data_api", "videogames_news_search_for_videogames_news", "match_for_cricketliveapi", "companies_cash_flow_statements_for_financial_modeling_prep", "getupdates_for_sms_receive", "get_categories_for_sign_hexagram", "music_information_for_instagram_v5", "sms_mt_send_sms_get_for_wavecell_sms", "random_skin_from_class_for_cs_skin_api", "seasonal_market_statistics_points_for_basketball_data"], "api_descs": {"Finish": "No description available.", "addresses_for_addressr": "returns a list of addresses matching the search string\n", "category_tags_for_hashtag": "Get a list of all the tags from a category", "companies_cash_flow_statements_for_financial_modeling_prep": "Returns companies cash flow statements", "currencies_for_currency_converter_pro": "List all supported currencies.", "get_categories_for_sign_hexagram": "Return a list of category of sign with description and image link.", "getinventory_for_tes": "Returns a map of status codes to quantities", "getorderbyid_for_tes": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "getrecentanimes_for_gogoanime_data_api": "Get Animes From googanime Recent Page", "getupdates_for_sms_receive": "Get updates about newly received messages.", "girl_groups_for_k_pop": "Get info of girl-groups", "match_for_cricketliveapi": "NA", "music_information_for_instagram_v5": "Get Instagram music information by Instagram audio_cluster_id.", "random_skin_from_class_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a random counterstrike skin from a specific class \n(prices for field tested condition in USD)\n\n(replace class_name)\n\nExample: /api/randomclass/Rifle", "schneetage_for_ecoweather": "Beantwortet die Frage, wie viel Schnee und an wie viel Tagen innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Einsatzplanung im Winterdienst und Hausmeisterservice sowie im Tourismus.", "seasonal_market_statistics_points_for_basketball_data": "Provides the seasonal market points statistics of the team in the tournament.", "sms_mt_send_sms_get_for_wavecell_sms": "Send a SMS message using Wavecell HTTP GET", "videogames_news_search_for_videogames_news": "Returns search results for current and historic news from top sources"}, "aseqs": [{"api_name": "getorderbyid_for_tes", "api_action": "\nAction: getorderbyid_for_tes\nAction Input: {\n  \"orderid\": 987\n}", "api_reaction": null}, {"api_name": "getinventory_for_tes", "api_action": "\nAction: getinventory_for_tes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getorderbyid_for_tes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getorderbyid_for_tes"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getorderbyid_for_tes\",\n\t\"api_action\": \"\\nAction: getorderbyid_for_tes\\nAction Input: {\\n  \\\"orderid\\\": 987\\n}\",\n}"}]}
{"URL": "41156", "query": "I want to personalize my meal plan based on my preferences. Can you retrieve my user information, including height, weight, and activity level? Additionally, provide me with the diet plan for a specific day and suggest replacement options for an ingredient in my breakfast menu.", "api_names": ["Finish", "get_user_s_information_for_bespoke_diet_generator", "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator", "hashtag_feed_video_posts_for_tiktok_data", "most_positive_news_for_stock_sentiment_api", "user_media_for_twitter_v2", "get_schedule_for_league_of_legends_esports", "url_analysis_for_url_analysis", "single_name_medium_for_nameforge", "get_watches_by_brand_family_model_for_watch_database", "defaultroot_for_fortune_cookie", "youtoosound_for_youtoosound"], "api_descs": {"Finish": "No description available.", "defaultroot_for_fortune_cookie": "default get request to the random fortune endpoint returning a standard response", "get_schedule_for_league_of_legends_esports": "In this method you can get all schedule for the leagues. You can filter multiple leagueId with join %  seperator.", "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator": "Get the current diet plan for the specified user for a specific day.", "get_user_s_information_for_bespoke_diet_generator": "Retrieve the information of the user with the matching user ID.", "get_watches_by_brand_family_model_for_watch_database": "Get Watches By Brand Family Model", "hashtag_feed_video_posts_for_tiktok_data": "Get hashtag feed\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "most_positive_news_for_stock_sentiment_api": "Returns a list of the most positive articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles", "single_name_medium_for_nameforge": "Create single name.\nMax query length is 50 characters.", "url_analysis_for_url_analysis": "url-analysis", "user_media_for_twitter_v2": "Get User Media", "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome"}, "aseqs": [{"api_name": "get_user_s_information_for_bespoke_diet_generator", "api_action": "\nAction: get_user_s_information_for_bespoke_diet_generator\nAction Input: {\n  \"userid\": \"user123\"\n}", "api_reaction": null}, {"api_name": "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator", "api_action": "\nAction: get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator\nAction Input: {\n  \"userid\": \"user123\",\n  \"dayindex\": \"1\"\n}", "api_reaction": null}, {"api_name": "get_user_s_information_for_bespoke_diet_generator", "api_action": "\nAction: get_user_s_information_for_bespoke_diet_generator\nAction Input: {\n  \"userid\": \"user456\"\n}", "api_reaction": null}, {"api_name": "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator", "api_action": "\nAction: get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator\nAction Input: {\n  \"userid\": \"user123\",\n  \"dayindex\": \"1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_user_s_information_for_bespoke_diet_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_s_diet_for_a_specific_day_for_bespoke_diet_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_s_information_for_bespoke_diet_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_s_information_for_bespoke_diet_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_s_information_for_bespoke_diet_generator", "api_action": "\nAction: get_user_s_information_for_bespoke_diet_generator\nAction Input: {\n  \"userid\": \"user456\"\n}", "api_reaction": null}}]}
{"URL": "86610", "query": "Please help me with the Neuronet NLP tool. I need to perform tokenization and part-of-speech tagging on a sentence. Can you guide me through the process?", "api_names": ["Finish", "main_for_neuronet_nlp", "recent_match_list_for_handball_data", "password_generation_for_explorarc_s_password_generation_api", "getnewsletters_for_a_i_smartable", "fundid_for_mutual_fund_nav", "geteventsid_for_wosti_futbol_tv_peru", "account_details_account_for_finhost", "orgcode_cardart_bins_for_test2", "host_read_for_netlas_all_in_one_host", "pl_decode_for_vin_decoder_v4", "player_season_statistics_for_basketball_datafeeds_by_rolling_insights"], "api_descs": {"Finish": "No description available.", "account_details_account_for_finhost": "Account bank detailes", "fundid_for_mutual_fund_nav": "current Nav", "geteventsid_for_wosti_futbol_tv_peru": "Obtener el evento por identificador único  del listado de eventos de partidos de fútbol televisados en Perú.\n\n> Este endpoints requiere de un parámetro denominado Id.", "getnewsletters_for_a_i_smartable": "Get newsletters", "host_read_for_netlas_all_in_one_host": "Both ip address and domain might be used as a search query.", "main_for_neuronet_nlp": "Enter a single sentence.", "orgcode_cardart_bins_for_test2": "Returns card art URLs by BINs. Different URLs can be defined for each BIN/range of BINs. User authentication is not required.", "password_generation_for_explorarc_s_password_generation_api": "The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords", "pl_decode_for_vin_decoder_v4": "PL Decode", "player_season_statistics_for_basketball_datafeeds_by_rolling_insights": "Returns Player Season Statistics", "recent_match_list_for_handball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handball Match List or Fixture endpoints.**"}, "aseqs": [{"api_name": "main_for_neuronet_nlp", "api_action": "\nAction: main_for_neuronet_nlp\nAction Input: {\n  \"text\": \"Please tokenize and tag this sentence.\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "main_for_neuronet_nlp"}}, {"state": "generated_by_agent", "aseq": {"api_name": "main_for_neuronet_nlp", "api_action": "\nAction: main_for_neuronet_nlp\nAction Input: {\n  \"text\": \"Tokenize and perform part-of-speech tagging on the sentence: Please tokenize and tag this sentence.\"\n}"}}]}
{"URL": "81777", "query": "My friend is planning a road trip and needs information about different places. Could you provide the boundaries of places within a specified radius? The latitude of the center is 40.61, and the longitude is -74.72. They are looking for places within a radius of 15 miles.", "api_names": ["placessearchinradius_for_mapreflex", "Finish", "is_holyday_for_enoch_calendar", "search_properties_for_rent_for_realtor", "getmediumquestion_for_leetcodeapi", "user_live_broadcast_for_instagram_v5", "getcatalogtenant_for_auth", "display_entities_for_textapi", "subusers_id_shares_sendernames_for_smsapi_com", "eventlist_for_31events_send_native_calendar_invites"], "api_descs": {"Finish": "No description available.", "display_entities_for_textapi": "Renders the extracted entity types on submitted text or spans defined manually.", "eventlist_for_31events_send_native_calendar_invites": "", "getcatalogtenant_for_auth": "Get tenant information. Internal endpoint only available to other services.", "getmediumquestion_for_leetcodeapi": "Get the number of medium level questing solved by the user.", "is_holyday_for_enoch_calendar": "Get the Holyday, corresponding Scritpures and if this Holyday is also a Sabbath from the supplied date string or today's date. Or false in for all returned properties", "placessearchinradius_for_mapreflex": "Get Places boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "search_properties_for_rent_for_realtor": "Search properties for rent by location", "subusers_id_shares_sendernames_for_smsapi_com": " ", "user_live_broadcast_for_instagram_v5": "Get Instagram user live broadcast by Instagram user id."}, "aseqs": [{"api_name": "placessearchinradius_for_mapreflex", "api_action": "\nAction: placessearchinradius_for_mapreflex\nAction Input: {\n  \"latitude\": 40.61,\n  \"longitude\": -74.72,\n  \"radius\": 15\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "placessearchinradius_for_mapreflex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "placessearchinradius_for_mapreflex"}}]}
{"URL": "82986", "query": "I'm developing a game strategy and I need access to real-time game data. Can you fetch the latest outcome details for me? Additionally, I'm interested in analyzing the statistics of the wheel results for the past 3 hours. Please provide me with the necessary information to improve my strategy.", "api_names": ["latest_outcome_for_crazytimeapi", "statistics_for_crazytimeapi", "Finish", "test_for_wraws_load_test", "storageexists_for_groupdocs_signature_cloud", "shorten_url_for_shortadlink_shorten_urls_and_earn_money", "artist_discovered_on_for_spotify_v3", "by_city_for_ambee_air_quality", "agent_reviews_for_zillow_v2", "image_stable_prompter_for_image_diffusion", "matchschedules_for_cricketapi2", "getmsgs_for_messages", "create_key_for_mymemory_translation_memory", "get_qoute_for_quotsy", "profile_by_id_for_instagram_statistics_api", "get_status_for_sms77io", "prices_today_for_route_precedence_test_1", "retrieve_the_latest_blogs_for_unofficial_efteling_api"], "api_descs": {"Finish": "No description available.", "agent_reviews_for_zillow_v2": "Get agent reviews by the agent's zuid", "artist_discovered_on_for_spotify_v3": "Artist discovered on playlists (max 50)", "by_city_for_ambee_air_quality": "Get the latest air quality data for your city", "create_key_for_mymemory_translation_memory": "MyMemory provides a specific API to create a new private TM key. Such key can be then used in the API call to identify a private TM or to privately contribute to a TM. Every contribution that has been created with a private TM key will be only shown if the same private TM key is used in the GET call; no other users will see private contributions without the right private TM key.", "get_qoute_for_quotsy": "get a quote by id", "get_status_for_sms77io": "Get a delivery report for a message ID sent with your API key.", "getmsgs_for_messages": "GetMsg", "image_stable_prompter_for_image_diffusion": "generate prompt from image url for stable diffusion", "latest_outcome_for_crazytimeapi": "Get the last Outcome data and details", "matchschedules_for_cricketapi2": "This operation returns the cricket match schedules for the given date, including match timings, teams, and other relevant information.", "prices_today_for_route_precedence_test_1": "/prices/today", "profile_by_id_for_instagram_statistics_api": "Returns profile information from our database or searches for an account in a social network.\nReturns general account information and identifier.\n\nContains the status of data collection and the time the data was last updated.\n\nDue to direct access to the social network, it may work a little slower. It is recommended to use for the initial receipt of the identifier.\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_16b6e212-c0c3-42c6-8c3c-9dfd22ae1bf6_f.png?time=1666776494)", "retrieve_the_latest_blogs_for_unofficial_efteling_api": "Retrieve the latest blogs, these are updated once every hour", "shorten_url_for_shortadlink_shorten_urls_and_earn_money": "Primary method for shortening URL with custom alias.", "statistics_for_crazytimeapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect", "storageexists_for_groupdocs_signature_cloud": " ", "test_for_wraws_load_test": "Test"}, "aseqs": [{"api_name": "latest_outcome_for_crazytimeapi", "api_action": "\nAction: latest_outcome_for_crazytimeapi\nAction Input: {}", "api_reaction": null}, {"api_name": "statistics_for_crazytimeapi", "api_action": "\nAction: statistics_for_crazytimeapi\nAction Input: {\n  \"duration\": 3\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the latest outcome details for the game using the latest_outcome_for_crazytimeapi API and then retrieve the statistics of wheel results within the past 3 hours using the statistics_for_crazytimeapi API.\n\t\"api_name\": \"latest_outcome_for_crazytimeapi\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_crazytimeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_crazytimeapi"}}]}
{"URL": "42265", "query": "I want to compare the controls and CCIs in the Risk Management Framework. Retrieve the CCI and its definition for the identification number 000001. Additionally, display all the subcontrols owned by the control AC-1.", "api_names": ["get_cci_by_number_for_risk_management_framework", "get_subcontrol_by_control_for_risk_management_framework", "Finish", "team_performance_indices_for_metrx_factory", "get_top_stories_of_kuensel_for_top_stories_of_kuensel", "get_story_by_shortcode_for_instagram_bulk_profile_scrapper", "simpleregions_for_phone_formatter", "random_nonalcoholic_for_cocktails", "slack_for_fortune_cookie", "dns_domain_for_utile_space", "v1_riddles_for_riddles_by_api_ninjas", "go_for_fast_reading"], "api_descs": {"Finish": "No description available.", "dns_domain_for_utile_space": "", "get_cci_by_number_for_risk_management_framework": "This endpoint will return a single CCI and it's definition based on the 6-digit CCI identification number.", "get_story_by_shortcode_for_instagram_bulk_profile_scrapper": "Fetch Instagram story from shortcode", "get_subcontrol_by_control_for_risk_management_framework": "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc.", "get_top_stories_of_kuensel_for_top_stories_of_kuensel": "Get top stories of kuensel", "go_for_fast_reading": "Convert raw text to Bionized Reading.", "random_nonalcoholic_for_cocktails": "Get a random nonalcoholic cocktail with all ingredients", "simpleregions_for_phone_formatter": "Returns a collection of supported regions. Method use \"Accept-Language\" header value for output list of\n regions on specific language", "slack_for_fortune_cookie": "This endpoint's response shape is designed to match the requirements for slack messages. You can easily use this api to have a POST or GET for this /slack endpoint to get the same functionality as the defaultRoot endpoint, but in a slack style response.  \n", "team_performance_indices_for_metrx_factory": "Returns a snapshot of global team performance indices sorted by rank in ascending order.\nSeparate index lists are maintained for club and national teams. The indication of projections controls which data should be collected and has direct impact on the payload and billed credits.\n\nIf no parameters are provided then the latest club team ranking is returned with only the main index projection in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. performances returned: 5`", "v1_riddles_for_riddles_by_api_ninjas": "API Ninjas Riddles API endpoint. Returns one or more random riddles."}, "aseqs": [{"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "\nAction: get_cci_by_number_for_risk_management_framework\nAction Input: {\n  \"cci\": \"000001\"\n}", "api_reaction": null}, {"api_name": "get_subcontrol_by_control_for_risk_management_framework", "api_action": "\nAction: get_subcontrol_by_control_for_risk_management_framework\nAction Input: {\n  \"control\": \"AC-1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_subcontrol_by_control_for_risk_management_framework"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cci_by_number_for_risk_management_framework", "api_action": "\nAction: get_cci_by_number_for_risk_management_framework\nAction Input: {\n  \"cci\": \"AC-1.1\"\n}", "api_reaction": null}}]}
{"URL": "51537", "query": "I'm starting a flower blog and need visually appealing images of flowers. Can you show me images of flowers like roses, lilies, and sunflowers? Also, provide me with their scientific names and descriptions. Thank you!", "api_names": ["get_by_id_for_flowers", "Finish", "show_image_for_flowers", "list_for_flowers", "option_flow_for_tradingflow_option_flow", "get_champions_for_league_of_legends_champion_informaion", "strongs_number_detail_api_for_complete_study_bible", "year_end_billboard_200_albums_for_billboard_api_v2", "list_of_hotel_chains_for_booking_com", "end_a_live_stream_for_scraptik", "race_list_for_f1_race_schedule", "fetchdriving_licensedocument_for_cleardil", "keydetails_185_225_233_110_30015_for_vrising_server_query_api", "get_country_details_for_gis_engine", "get_php_for_terminology_extraction", "get_the_clock_for_alpaca_trading", "account_event_timeline_for_dailycred", "mediainfo_for_instagram_v6", "news_for_yahoo_finance", "estrelabet_aviator_latest_for_estrelabet_aviator_api"], "api_descs": {"Finish": "No description available.", "account_event_timeline_for_dailycred": "", "end_a_live_stream_for_scraptik": "End a live stream.", "estrelabet_aviator_latest_for_estrelabet_aviator_api": "Will retrieve the latest results from Aviator at Estrelabet.\n\n- The first result is the most recent\n- The last result is the oldest", "fetchdriving_licensedocument_for_cleardil": " ", "get_by_id_for_flowers": "Get all info about the flower", "get_champions_for_league_of_legends_champion_informaion": "Accepts a comma delimited list of champion names or nicknames.\n\nReturns a list of Champions full names and list of passive ability and standard abilities in an on object format.", "get_country_details_for_gis_engine": "Get the country details by providing the country code (2 letter code)", "get_php_for_terminology_extraction": "", "get_the_clock_for_alpaca_trading": "Returns the market clock", "keydetails_185_225_233_110_30015_for_vrising_server_query_api": "Get the key details from server - change `/IP/PORT`", "list_for_flowers": "List all flowers", "list_of_hotel_chains_for_booking_com": "Returns a list of hotel chains.", "mediainfo_for_instagram_v6": "get media info", "news_for_yahoo_finance": "returns latest news articles related to symbol passed as parameter", "option_flow_for_tradingflow_option_flow": "Option Flow", "race_list_for_f1_race_schedule": "Lists down all the races in the schedule", "show_image_for_flowers": "Show image of the flower", "strongs_number_detail_api_for_complete_study_bible": "Receives a Strongs Number or comma-separated list of Strong's Numbers (limit 3 at a time) and returns detailed information for each number, including Greek and Hebrew, phonetic pronunciation guide, root, Strong's Condordance, Mounce's Dictionary, Thayer's Greek Lexicon, and Brown-Driver-Brigg's (BDB) Lexicon (Hebrew only).\n\nThayer's and BDB are stored as html and should be displayed as raw html in the browser. Add CSS styling as desired.\nAll scripture references in the html are stored as <a> tags with the following href format: \"/Bible/{book}/{chapter}/{verse}\". If you want the links to work properly, you can program your front-end to recognize these links and do an API call to the Chapter and Verse api  and display the response in a pop-up window.", "year_end_billboard_200_albums_for_billboard_api_v2": "Year end Billboard 200 Albums chart \nis yearly based. \n\nIf `year` is not supplied, will default to last year."}, "aseqs": [{"api_name": "list_for_flowers", "api_action": "\nAction: list_for_flowers\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_id_for_flowers", "api_action": "\nAction: get_by_id_for_flowers\nAction Input: {\n  \"is_id\": \"6383808bff3dde72b0fc34ab\"\n}", "api_reaction": null}, {"api_name": "show_image_for_flowers", "api_action": "\nAction: show_image_for_flowers\nAction Input: {\n  \"is_id\": \"6383808bff3dde72b0fc34ab\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "show_image_for_flowers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "show_image_for_flowers", "api_action": "\nAction: show_image_for_flowers\nAction Input: {\n \"species\": [\n \"roses\",\n \"lilies\",\n \"sunflowers\"\n ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "show_image_for_flowers", "api_action": "\nAction: show_image_for_flowers\nAction Input: {\n  \"flower_names\": [\"roses\", \"lilies\", \"sunflowers\"]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "show_image_for_flowers", "api_action": "\nAction: show_image_for_flowers\nAction Input: {\n  \"is_id\": \"1956\"\n}", "api_reaction": null}}]}
{"URL": "46883", "query": "I'm a marketing manager for a company and I'm interested in promoting products with discounts. Can you provide me with a list of all the products available on the recash tool, along with their prices, discounts, and affiliate links? Additionally, I'd like to search for 'electronics' and get the products, prices, discounts, and affiliate links.", "api_names": ["all_products_for_recash", "search_for_recash", "Finish", "getgroups_for_maytapi_whatsapp", "scrape_contacts_from_website_for_website_contacts_scraper", "api_trades_isin_isin_for_prague_stock_exchange", "uae_scheduled_flights_growth_for_global_flight_data", "get_channel_broadcaster_type_for_gwyo_twitch", "word_of_the_day_from_mw_for_word_of_the_day", "get_subcontrol_by_control_for_risk_management_framework", "filter_and_query_naics_description_for_industry_naics_search", "suggest_for_google_news", "trending_for_youtube_trending", "canvas_episodes_get_likes_for_webtoon", "channel_s_videos_streams_shorts_ids_w_pagination_for_fastytapi"], "api_descs": {"Finish": "No description available.", "all_products_for_recash": "This will gives you all the products with codes on the data base", "api_trades_isin_isin_for_prague_stock_exchange": " ", "canvas_episodes_get_likes_for_webtoon": "Get likes count of a episode", "channel_s_videos_streams_shorts_ids_w_pagination_for_fastytapi": "Returns the list of videos/streams(a.k.a. lives)/shorts ids with some basic information for each.\n\nPagination is possible, which allows to retrieve all videos/streams/shorts of a channel with several subsequent requests. For this, provide the `pagination` received in the previous request to this endpoint.\n\nResults are returned ordered by upload date, from latest to oldest.", "filter_and_query_naics_description_for_industry_naics_search": "This endpoint will allow you to search by freeform text, eg. Hotel and get all the list of NAICS code, hash, and description back.\nYou can also filter the search if you have an NAICS code and want to get the description and the hash of the industry.", "get_channel_broadcaster_type_for_gwyo_twitch": "Get Channel Broadcaster Type (using username or id)", "get_subcontrol_by_control_for_risk_management_framework": "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc.", "getgroups_for_maytapi_whatsapp": "Sets the option for getting the acknowledge messages from the webhook to true or false.", "scrape_contacts_from_website_for_website_contacts_scraper": "Extract emails, phone numbers and social profiles from website root domain domain.", "search_for_recash": "This will filter what you want from the products on the data base", "suggest_for_google_news": "This endpoint is used to get autocomplete suggestions or query predictions as a user types a search query. The endpoint requires the **keyword** parameter, which represents the partial text entered by the user. You can send a request with the partial text, and the request will generate a JSON response containing a list of relevant autocomplete suggestions for the search query.", "trending_for_youtube_trending": "Gather Trending Videos from Youtube", "uae_scheduled_flights_growth_for_global_flight_data": "Get weekly United Arab Emirates scheduled departing flights growth.", "word_of_the_day_from_mw_for_word_of_the_day": "Get word of the day from mw."}, "aseqs": [{"api_name": "all_products_for_recash", "api_action": "\nAction: all_products_for_recash\nAction Input: {}", "api_reaction": null}, {"api_name": "all_products_for_recash", "api_action": "\nAction: all_products_for_recash\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_recash", "api_action": "\nAction: search_for_recash\nAction Input: {\n  \"search\": \"home appliances\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_recash"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_recash", "api_action": "{\"keyword\": \"electronics\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_recash", "api_action": "\nAction: search_for_recash\nAction Input: {'query': 'electronics', 'include_discounts': True, 'include_prices': True, 'include_affiliate_links': True}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_products_for_recash", "api_action": "\nAction: all_products_for_recash\nAction Input: {}", "api_reaction": null}}]}
{"URL": "87770", "query": "My family is planning to buy a used car, and we want to verify its details. Can you help us retrieve important information such as the manufacturer, country of origin, and model year? The VIN we want to check is 'JH4KA7561PC008269'.", "api_names": ["v1_vinlookup_for_vin_lookup_by_api_ninjas", "Finish", "profile_for_direct_wines", "list_of_languages_for_languagetool", "get_stream_number_of_viewers_for_gwyo_twitch", "list_of_leagues_for_pinnacle_odds", "facebook_video_downloader_for_facebook_video_downloader_mp4", "get_tracks_for_spotify", "news_from_all_sources_for_covid_news_v2", "highlights_for_ig_private_api", "video_downloader_for_video_downloader", "getmessage_for_sms_receive"], "api_descs": {"Finish": "No description available.", "facebook_video_downloader_for_facebook_video_downloader_mp4": "Facebook video downloader API @ https://mp3downy.com/facebook-video-downloader-api", "get_stream_number_of_viewers_for_gwyo_twitch": "Get Stream Number of Viewers (using username or id)\n( return an empty JSON object if not currently LIVE )", "get_tracks_for_spotify": "Get one or more tracks", "getmessage_for_sms_receive": "Get message details.", "highlights_for_ig_private_api": "Highlights", "list_of_languages_for_languagetool": "", "list_of_leagues_for_pinnacle_odds": "Get a list of leagues", "news_from_all_sources_for_covid_news_v2": "Get news related to covid 19 from **All sources**", "profile_for_direct_wines": "Profile", "v1_vinlookup_for_vin_lookup_by_api_ninjas": "API Ninjas VIN Lookup API endpoint. Returns key vehicle information including manufacturer, country of origin and model year for a given VIN.", "video_downloader_for_video_downloader": "FreeVideoDownloader is a powerful video downloader tool designed for websites, allowing seamless integration of video downloading capabilities. It provides an easy-to-use API that enables website owners to offer their visitors the ability to download videos from various platforms without leaving the site. With FreeVideoDownloader, users can effortlessly save videos in different formats, enhancing their browsing experience and content accessibility."}, "aseqs": [{"api_name": "v1_vinlookup_for_vin_lookup_by_api_ninjas", "api_action": "\nAction: v1_vinlookup_for_vin_lookup_by_api_ninjas\nAction Input: {\n  \"vin\": \"JH4KA7561PC008269\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_vinlookup_for_vin_lookup_by_api_ninjas"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"v1_vinlookup_for_vin_lookup_by_api_ninjas\",\n\t\"api_action\": \"\\nAction: v1_vinlookup_for_vin_lookup_by_api_ninjas\\nAction Input: {\\n  \\\"vin\\\": \\\"JH4KA7561PC008269\\\"\\n}\",\n}"}]}
{"URL": "69983", "query": "Please give me the funding rate history for the BTCUSDT symbol from January 1, 2022, to January 10, 2022. Additionally, I'm interested in the announcement made by Bybit in the last 30 days.", "api_names": ["Finish", "announcement_for_bybit", "latest_information_for_symbol_for_bybit", "get_funding_rate_history_for_bybit", "list_playlist_videos_for_youtube_media_downloader", "get_priorityrows_mrt_train_no_wagons_wagon_no_priorityrow_get_for_aqls_b2c_system", "leagues_v2_list_for_livescore_v2", "morning_star_for_barpatterns", "get_reference_currencies_for_coinranking", "groups_for_serverless_blogging", "get_users_68a613f6_d503_4942_9c11_e04e59427ec1_for_the_south_asian_express", "series_list_archives_for_cricbuzz_cricket", "get_route_for_spatialscale_route_engine", "rereer_copy_for_nowyapi", "listing_status_full_for_airbnb_listings", "get_user_profile_for_9gag_api_detailed_", "stock_get_key_statistics_data_for_yh_finance_v2", "equity_splits_for_quotient", "settag_for_sms_receive", "instagram_user_for_user"], "api_descs": {"Finish": "No description available.", "announcement_for_bybit": "Get Bybit OpenAPI announcements in the last 30 days in reverse order.", "equity_splits_for_quotient": "Return splits history data for a given security.", "get_funding_rate_history_for_bybit": "The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent.", "get_priorityrows_mrt_train_no_wagons_wagon_no_priorityrow_get_for_aqls_b2c_system": " ", "get_reference_currencies_for_coinranking": "Get a list of reference currencies, which can be used as reference for coins. The response includes all the essentials for this use-case, such as the symbol (e.g. USD) and - if available - the sign (e.g. $).", "get_route_for_spatialscale_route_engine": "Given a list of locations, the route service provides details about the trip,\nincluding locations, a summary with basic information about the entire trip, and a list of legs.\n\n**Locations**\n\nYou specify locations as an ordered list of two or more locations within a JSON array. Locations are visited in the order specified.\n\nA location must include a latitude and longitude in decimal degrees. The coordinates can come from many input sources, such as a GPS location, a point or a click on a map, a geocoding service, and so on.\n\nTo build a route, you need to specify two `break` locations. In addition, you can include `through`, `via` or `break_through` locations to influence the route path.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Location parameters</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>lat</code></td>\n    <td>\nLatitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>lon</code></td>\n    <td>\nLongitude of the location in degrees. This is assumed to be both the routing location and the display location if no <code>display_lat</code> and <code>display_lon</code> are provided.\n    </td>\n</tr>\n<tr>\n    <td><code>type</code></td>\n    <td>\n\tType of location, either <code>break</code>, <code>through</code>, <code>via</code> or <code>break_through</code>. Each type controls two characteristics: whether or not to allow a u-turn at the location and whether or not to generate guidance/legs at the location. A <code>break</code> is a location at which we allows u-turns and generate legs and arrival/departure maneuvers. A <code>through</code> location is a location at which we neither allow u-turns nor generate legs or arrival/departure maneuvers. A <code>via</code> location is a location at which we allow u-turns but do not generate legs or arrival/departure maneuvers. A <code>break_through</code> location is a location at which we do not allow u-turns but do generate legs and arrival/departure maneuvers. If no type is provided, the type is assumed to be a <code>break</code>. The types of the first and last locations are ignored and are treated as breaks.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n\n**Costing models**\n\nThe routing service uses dynamic, run-time costing to generate the route path. The route request must include the name of the costing model and can include optional parameters available for the chosen costing model.\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Costing model</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>auto</code></td>\n    <td>\n\tStandard costing for driving routes by car, motorcycle, truck, and so on that obeys automobile driving rules, such as access and turn restrictions. <code>Auto</code> provides a short time path (though not guaranteed to be shortest time) and uses intersection costing to minimize turns and maneuvers or road name changes. Routes also tend to favor highways and higher classification roads, such as motorways and trunks.\n    </td>\n</tr>\n<tr>\n    <td><code>bicycle</code></td>\n    <td>\n\tStandard costing for travel by bicycle, with a slight preference for using <a href=\"http://wiki.openstreetmap.org/wiki/Key:cycleway\" target=\"_blank\">cycleways</a> or roads with bicycle lanes. Bicycle routes follow regular roads when needed, but avoid roads without bicycle access.\n    </td>\n</tr>\n<tr>\n    <td><code>bus</code></td>\n    <td>\n\tStandard costing for bus routes. Bus costing inherits the auto costing behaviors, but checks for bus access on the roads.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n", "get_user_profile_for_9gag_api_detailed_": "Returns user profie.", "get_users_68a613f6_d503_4942_9c11_e04e59427ec1_for_the_south_asian_express": "List Tags", "groups_for_serverless_blogging": "Get different blog groups of your account.", "instagram_user_for_user": "Here you can find the default value of an Instagram users details and test your API successfully.", "latest_information_for_symbol_for_bybit": "Get the latest information for symbol.", "leagues_v2_list_for_livescore_v2": "List all leagues by category (football, cricket, basketball, tennis, hockey)\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png", "list_playlist_videos_for_youtube_media_downloader": "This endpoint lists **available** videos of a YouTube playlist (unavailable ones won't be listed by YouTube). Pagination scraping is supported. Thumbnails won't be blurred by age safety.", "listing_status_full_for_airbnb_listings": "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules.", "morning_star_for_barpatterns": "List of stocks having Morning Star signal.", "rereer_copy_for_nowyapi": "rererer", "series_list_archives_for_cricbuzz_cricket": "List archived series", "settag_for_sms_receive": "Change the current tag.", "stock_get_key_statistics_data_for_yh_finance_v2": "return key statistics data"}, "aseqs": [{"api_name": "get_funding_rate_history_for_bybit", "api_action": "\nAction: get_funding_rate_history_for_bybit\nAction Input: {\n  \"interval\": \"1d\",\n  \"start\": 1640995200000,\n  \"end\": 1641820800000,\n  \"category\": \"linear\",\n  \"symbol\": \"BTCUSDT\"\n}", "api_reaction": null}, {"api_name": "announcement_for_bybit", "api_action": "\nAction: announcement_for_bybit\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_information_for_symbol_for_bybit", "api_action": "\nAction: latest_information_for_symbol_for_bybit\nAction Input: {\n  \"symbol\": \"BTCUSDT\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": [{"action": "Query BTCUSDT funding rate history from January 1, 2022 to January 10, 2022"}, {"action": "Retrieve Bybit announcements made in the last 30 days"}]}, {"state": "generated_by_agent", "aseq": {"api_name": "get_funding_rate_history_for_bybit", "api_action": "\nAction Input: {\n  \"interval\": \"1d\",\n  \"start\": 1640995200000,\n  \"end\": 1641820800000,\n  \"category\": \"linear\",\n  \"symbol\": \"BTCUSDT\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_funding_rate_history_for_bybit", "api_action": "\nAction: get_funding_rate_history_for_bybit\nAction Input: {\n  \"interval\": \"1d\",\n  \"start\": 1640995200,\n  \"end\": 1641811200,\n  \"category\": \"linear\",\n  \"symbol\": \"BTCUSDT\"\n}"}}, {"state": "generated_by_agent", "aseq": [{"api_name": "get_funding_rate_history_for_bybit", "api_action": "\nAction: get_funding_rate_history_for_bybit\nAction Input: {\n  \"interval\": \"1d\",\n  \"start\": 1640995200,\n  \"end\": 1641820800,\n  \"category\": \"linear\",\n  \"symbol\": \"BTCUSDT\"\n}"}, {"api_name": "announcement_for_bybit", "api_action": "\nAction: announcement_for_bybit\nAction Input: {}\n"}]}]}
{"URL": "65040", "query": "Help me find information about the history of the Eiffel Tower. I would like to know about its construction, architect, and interesting facts. Also, provide me with some images of the Eiffel Tower and their source websites.", "api_names": ["image_search_for_google_search_v3", "web_search_for_google_search_v3", "Finish", "video_for_simple_youtube_search", "searchstation_for_radio_world_75_000_worldwide_fm_radio_stations_", "historical_rates_for_metals_prices_rates_api", "get_a_random_recipe_for_low_carb_recipes", "hourly_open_proxies_for_open_proxies", "get_advisories_by_vendor_for_ics_cert_advisories", "random_skin_for_cs_skin_api", "searchcountries_for_world_cities_and_countries", "search_for_real_time_product_search", "read_all_users_for_supersaas_online_bookings_and_appointment_scheduling", "get_subcontrol_by_control_for_risk_management_framework", "v1_timezone_for_timezone_by_api_ninjas", "odds_for_admiralbet", "get_time_zone_for_countries", "all_districts_for_bdapi"], "api_descs": {"Finish": "No description available.", "all_districts_for_bdapi": "`/v1.0/districts`\nGet all Districts of Bangladesh in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string\n]\n```", "get_a_random_recipe_for_low_carb_recipes": "Get a random recipe", "get_advisories_by_vendor_for_ics_cert_advisories": "This endpoint will return back Advisories by Vendor and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov", "get_subcontrol_by_control_for_risk_management_framework": "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc.", "get_time_zone_for_countries": "This gets timezone data on a country. Use ISO2 for country_code.", "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.", "hourly_open_proxies_for_open_proxies": "Get a list of 200-400 working open proxies, updated every hour. Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Open Proxies** endpoint.", "image_search_for_google_search_v3": "This endpoint is used for image searches", "odds_for_admiralbet": "Latest Odds by Admiralbet.", "random_skin_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a random counterstrike skin (prices for field tested condition)", "read_all_users_for_supersaas_online_bookings_and_appointment_scheduling": "", "search_for_real_time_product_search": "Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter.", "searchcountries_for_world_cities_and_countries": "API to search county based on the matching search keyword passed in url param.\nNOTE: This API is case insensitive.\ne.g. \n`/v1/locations/countries/uni`: This will return all the matching countries whose name starts from `uni` and their additional info.", "searchstation_for_radio_world_75_000_worldwide_fm_radio_stations_": "Search Radio station by keywords.\n- keyword = radio name, country name\n- limit = item limitation per page ***default 10***\n- page = page number to be displayed ***default 1***\n- order = order by ASCENDING/DISASCENDING  *(use only ASC or DESC)* ***default ASC***", "v1_timezone_for_timezone_by_api_ninjas": "API Ninjas Timezone API endpoint. Returns the timezone name of the specified input location.\n\nEither both (**lat** and **lon**) or (**city**/**state**/**country**) parameters must be set.", "video_for_simple_youtube_search": "Get particular video", "web_search_for_google_search_v3": "This endpoint is used for web searches"}, "aseqs": [{"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"history of the Eiffel Tower\"\n}", "api_reaction": null}, {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"Eiffel Tower architect\"\n}", "api_reaction": null}, {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"interesting facts about the Eiffel Tower\"\n}", "api_reaction": null}, {"api_name": "image_search_for_google_search_v3", "api_action": "\nAction: image_search_for_google_search_v3\nAction Input: {\n  \"q\": \"Eiffel Tower images\"\n}", "api_reaction": null}, {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"Eiffel Tower image sources\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "web_search_for_google_search_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"history of the Eiffel Tower\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"Interesting Facts about the Eiffel Tower\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"history of the Eiffel Tower construction\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"Eiffel Tower construction history\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_search_for_google_search_v3", "api_action": "\nAction: web_search_for_google_search_v3\nAction Input: {\n  \"q\": \"history of the Eiffel Tower\"\n}", "api_reaction": null}}]}
{"URL": "61718", "query": "I am interested in the current news about Bitcoin. Can you provide me with the titles, URLs, and sources of the news articles? It would be great if you could also fetch news specifically from 'coindesk'.", "api_names": ["get_individual_bitcoin_news_sources_for_bitcoin_news", "get_all_bitcoin_news_for_bitcoin_news", "Finish", "big_five_personality_test_for_personality_quest", "lista_de_provincias_por_comunidad_aut_noma_for_organizaci_n_territorial_de_espa_a", "domains_list_for_hotels_com_provider", "getinventory_for_freeplanhardlimitexternal", "projected_pga_rankings_for_golf_leaderboard_data", "view_status_code_and_message_for_pe_demo", "get_hashtags_for_top_instagram_hashtag", "wordsearchenglish_for_dictionary", "get_for_instagram_media_downloader_v2"], "api_descs": {"Finish": "No description available.", "big_five_personality_test_for_personality_quest": "This route is for getting Big Five Personality Test Questionnaire", "domains_list_for_hotels_com_provider": "Get a list of Domains, available domains code, currencies and locales", "get_all_bitcoin_news_for_bitcoin_news": "This endpoint will return back all the news across all the major bitcoin news site from all over the world", "get_for_instagram_media_downloader_v2": "lol world", "get_hashtags_for_top_instagram_hashtag": "Get 100 Most Popular Instagram Hashtags", "get_individual_bitcoin_news_sources_for_bitcoin_news": "In this endpoint you can get informations for a specific News resource.", "getinventory_for_freeplanhardlimitexternal": "Returns a map of status codes to quantities", "lista_de_provincias_por_comunidad_aut_noma_for_organizaci_n_territorial_de_espa_a": "Lista todas las provincias de una Comunidad Autónoma", "projected_pga_rankings_for_golf_leaderboard_data": "This endpoint allows you to see the projected PGA rankings throughout a PGA event", "view_status_code_and_message_for_pe_demo": "View status code and message for the specified value.", "wordsearchenglish_for_dictionary": "With this service you can learn the meaning of English words from Oxdord dictionary."}, "aseqs": [{"api_name": "get_all_bitcoin_news_for_bitcoin_news", "api_action": "\nAction: get_all_bitcoin_news_for_bitcoin_news\nAction Input: {}", "api_reaction": null}, {"api_name": "get_individual_bitcoin_news_sources_for_bitcoin_news", "api_action": "\nAction: get_individual_bitcoin_news_sources_for_bitcoin_news\nAction Input: {\n  \"newspaperid\": \"coindesk\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_bitcoin_news_sources_for_bitcoin_news", "api_action": "\nAction: get_individual_bitcoin_news_sources_for_bitcoin_news\nAction Input: {\"sources\": \"coindesk\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}]}
{"URL": "1050", "query": "Please provide me with the SEO metrics for the domain name 'technewsblog.com'. Additionally, I would like to get a keyword overview for the query 'latest technology trends'. Your assistance is highly appreciated!", "api_names": ["Finish", "serp_analysis_for_domain_seo_analysis", "domain_seo_analysis_for_domain_seo_analysis", "user_stories_by_pk_for_instagram_api_v2", "get_specific_nba_franchise_data_for_1977_2022_nba_team_rosters_and_schedules", "events_for__crypto_events_calendar_", "search_a_range_for_advanced_serp_operators", "api_dns_for_retrieve_dns_entries", "measurements_for_measurement_unit_converter", "hashtag_info_for_instagram_api_v2", "praise_for_humor_jokes_and_memes", "matches_for_cbet"], "api_descs": {"Finish": "No description available.", "api_dns_for_retrieve_dns_entries": " ", "domain_seo_analysis_for_domain_seo_analysis": "Get popular SEO metrics for a given domain name", "events_for__crypto_events_calendar_": "Get crypto events like listing, airdrops, release, tokenomics, partnershiop, other.\nGrouped by days!", "get_specific_nba_franchise_data_for_1977_2022_nba_team_rosters_and_schedules": "Grabs all NBA Data for a Franchise from 1977(if applicable)-2022", "hashtag_info_for_instagram_api_v2": "Get all information about a specific hashtag on Instagram", "matches_for_cbet": "Latest Matches for Cbet", "measurements_for_measurement_unit_converter": "GET enum array of all types of measurement", "praise_for_humor_jokes_and_memes": "Praise somebody for doing something.\nSee https://humorapi.com/docs/#Praise for more.", "search_a_range_for_advanced_serp_operators": "Search \"Android phone\" but only show results where the price ranges from $300-$500; also works for dates and other numbers", "serp_analysis_for_domain_seo_analysis": "SERP Analysis aka keyword overview. Discover thousands of great keyword ideas, analyze their ranking difficulty and calculate their traffic potential.", "user_stories_by_pk_for_instagram_api_v2": "Get all stories via pk"}, "aseqs": [{"api_name": "domain_seo_analysis_for_domain_seo_analysis", "api_action": "\nAction: domain_seo_analysis_for_domain_seo_analysis\nAction Input: {\n  \"domain\": \"technewsblog.com\"\n}", "api_reaction": null}, {"api_name": "serp_analysis_for_domain_seo_analysis", "api_action": "\nAction: serp_analysis_for_domain_seo_analysis\nAction Input: {\n  \"query\": \"latest technology trends\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "domain_seo_analysis_for_domain_seo_analysis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "serp_analysis_for_domain_seo_analysis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domain_seo_analysis_for_domain_seo_analysis", "api_action": "\nAction: domain_seo_analysis_for_domain_seo_analysis\nAction Input: {\n  \"domain\": \"technewsblog.com\"\n}", "api_reaction": null}}]}
{"URL": "60810", "query": "I am planning to attend a football match next month and I need to know the schedule. Can you provide me with the daily match list including scheduled matches for the next 30 days? Additionally, I would like to see the tournament details and stage structure.", "api_names": ["tournament_info_for_football_data", "tournament_standings_for_football_data", "daily_match_list_scheduled_for_football_data", "Finish", "odds_for_fdj", "retrieve_response_for_best_paraphrasing_api", "get_alerts_list_or_create_for_fluximmo", "radical_english_meaning_for_learn_to_read_and_write_japanese_kanji", "cities_for_facebook_marketplace", "v1_render_for_inkit", "trending_stocks_for_sec_filings", "reviews_list_deprecated_for_hotels", "directions_between_2_locations_for_cameroon", "pornstar_search_for_quality_porn", "eredivisie_standings_for_eredivisie_standings", "listofsupportedbanks_for_afterbanks_psd2_payments_and_bank_reader"], "api_descs": {"Finish": "No description available.", "cities_for_facebook_marketplace": "Facebook items cities", "daily_match_list_scheduled_for_football_data": "Daily match list including scheduled matches.\n\nThe data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.", "directions_between_2_locations_for_cameroon": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.", "eredivisie_standings_for_eredivisie_standings": "Eredivisie Standings", "get_alerts_list_or_create_for_fluximmo": " ", "listofsupportedbanks_for_afterbanks_psd2_payments_and_bank_reader": "Get a complete list of supported banks, as well as the names of the fields needed to draw a login form similar to the bank's original.", "odds_for_fdj": "Latest Odds for FDJ", "pornstar_search_for_quality_porn": "Search for a porn star using the \"Query\".\nA list of all stars found is returned, or a detail pornstar if only one is found.", "radical_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "retrieve_response_for_best_paraphrasing_api": "With the JOB ID generated on the \"Rewriter\" endpoint, you will be able to get the response from that rewrite.", "reviews_list_deprecated_for_hotels": "Get all reviews of specific property", "tournament_info_for_football_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.", "tournament_standings_for_football_data": "Team Rankings for a specific competition.", "trending_stocks_for_sec_filings": "Returns the top  trending stocks on Last10K.com right now with the most viewed <strong>10-K / 20-F / 40-F Annual Reports</strong> and <strong>10-Q Quarterly SEC Filings</strong>.\n\nView live data at: https://last10k.com/stock-screeners/trending", "v1_render_for_inkit": " "}, "aseqs": [{"api_name": "daily_match_list_scheduled_for_football_data", "api_action": "\nAction: daily_match_list_scheduled_for_football_data\nAction Input: {\n  \"date\": \"next 30 days\"\n}", "api_reaction": null}, {"api_name": "tournament_info_for_football_data", "api_action": "\nAction: tournament_info_for_football_data\nAction Input: {\n  \"tournamentid\": 1\n}", "api_reaction": null}, {"api_name": "tournament_standings_for_football_data", "api_action": "\nAction: tournament_standings_for_football_data\nAction Input: {\n  \"tournamentid\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "daily_match_list_scheduled_for_football_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_info_for_football_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_match_list_scheduled_for_football_data", "api_action": "\nAction: daily_match_list_scheduled_for_football_data\nAction Input: {\n  \"date\": \"next 30 days\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_match_list_scheduled_for_football_data", "api_action": "\nAction: daily_match_list_scheduled_for_football_data\nAction Input: {\n  \"date\": \"next 30 days\"\n}", "api_reaction": null}}]}
{"URL": "20167", "query": "I need to track the current cryptocurrency prices and also get the global cryptocurrency statistics. Can you provide me with the current prices for the top 100 cryptocurrency pairs and also give me information about the total market capitalization, active markets, and the percentage change in Bitcoin and Ethereum?", "api_names": ["global_crypto_stats_for_coinlore_cryptocurrency", "get_exchange_pairs_for_coinlore_cryptocurrency", "Finish", "single_multiple_video_for_aol_on_network", "gettokenbalance_for_chaingateway_io", "ip_for_ip_geo_location_and_ip_reputation", "modern_internet_for_thai_lotto_new_api", "company_cash_flow_for_real_time_finance_data", "equity_daily_for_quotient", "list_videos_for_api_video", "keyword_search_at_coordinates_for_google_local_rank_tracker", "crimes_with_no_location_for_data_police_uk"], "api_descs": {"Finish": "No description available.", "company_cash_flow_for_real_time_finance_data": "Get public company's **quarterly** or **annual** cash flow information. Supports the *stock* type only.", "crimes_with_no_location_for_data_police_uk": "Returns a list of crimes where the responsible force hasn't specified a location.", "equity_daily_for_quotient": "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "get_exchange_pairs_for_coinlore_cryptocurrency": "Returns top 100 pars", "gettokenbalance_for_chaingateway_io": "Returns the token balance of a given address.", "global_crypto_stats_for_coinlore_cryptocurrency": "Get global info", "ip_for_ip_geo_location_and_ip_reputation": "Returns all data for the provided IP", "keyword_search_at_coordinates_for_google_local_rank_tracker": "Make a Keyword search at a Coordinate (lat/lng) for all the business.", "list_videos_for_api_video": " ", "modern_internet_for_thai_lotto_new_api": "ယခု Endpoint မှာတော့ နံနက် ၉ခွဲ နှင့် နေ့လည် ၂နာရီ မော်ဒန်၊ အင်တာနက် ထွက်ဂဏန်း နှင့် 12:01 မိနစ်၊ ညနေ 4:30 ထွက်မယ့် ဂဏန်းများကို တိုက်ရိုက်ပြသဖို့အတွက်ပဲဖြစ်ပါတယ်။", "single_multiple_video_for_aol_on_network": "To access the data for a specific video, you simply request a URL from Aol On Network's API with the specific video ID you want."}, "aseqs": [{"api_name": "get_exchange_pairs_for_coinlore_cryptocurrency", "api_action": "\nAction: get_exchange_pairs_for_coinlore_cryptocurrency\nAction Input: {\n  \"is_id\": 100\n}", "api_reaction": null}, {"api_name": "global_crypto_stats_for_coinlore_cryptocurrency", "api_action": "\nAction: global_crypto_stats_for_coinlore_cryptocurrency\nAction Input: {}", "api_reaction": null}, {"api_name": "get_exchange_pairs_for_coinlore_cryptocurrency", "api_action": "\nAction: get_exchange_pairs_for_coinlore_cryptocurrency\nAction Input: {\n  \"is_id\": 100\n}", "api_reaction": null}, {"api_name": "get_exchange_pairs_for_coinlore_cryptocurrency", "api_action": "\nAction: get_exchange_pairs_for_coinlore_cryptocurrency\nAction Input: {\n  \"is_id\": 100\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_pairs_for_coinlore_cryptocurrency"}}, {"state": "generated_by_agent", "aseq": {"api_name": "global_crypto_stats_for_coinlore_cryptocurrency"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_pairs_for_coinlore_cryptocurrency", "api_action": "\nAction: get_exchange_pairs_for_coinlore_cryptocurrency\nAction Input: {\n  \"is_id\": null\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "global_crypto_stats_for_coinlore_cryptocurrency", "api_action": "\nAction: global_crypto_stats_for_coinlore_cryptocurrency\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_pairs_for_coinlore_cryptocurrency", "api_action": "\nAction: get_exchange_pairs_for_coinlore_cryptocurrency\nAction Input: {\n  \"is_id\": null\n}", "api_reaction": null}}]}
{"URL": "52687", "query": "I am a Formula 1 enthusiast and I want to know the race results for round 8 of the 2021 season. Additionally, can you provide me with the lap time data for lap 10 of that race?", "api_names": ["raceresult_for_formula_1_fixed", "laptime_for_formula_1_fixed", "Finish", "your_events_for_ticketbud", "details_all_templates_answers_for_nps_net_promoter_score", "categories_for_free_stopwords", "bd_upazila_for_bd", "getprofile_for_snapchat", "player_information_for_baseball_datafeeds_by_rolling_insights", "list_of_all_ingredients_for_food_ingredient_measurement_conversion", "get_channel_leaderboards_for_twitch_api", "entities_for_wealth_reader_api", "directions_for_locationiq", "getmoviestatus_for_helioviewer_v1", "command_for_dudu"], "api_descs": {"Finish": "No description available.", "bd_upazila_for_bd": " ", "categories_for_free_stopwords": "Will list all available word categories. Check this before calling /stopwords", "command_for_dudu": "Please check http://dudu.com/docs/api/command/list for the proper parameter and method combinations", "details_all_templates_answers_for_nps_net_promoter_score": "Get a full list of all customer survey responses for a given template, by identifying its template id (tid)", "directions_for_locationiq": "Finds the fastest route between coordinates in the supplied order.", "entities_for_wealth_reader_api": "Obtiene el listado de entidades soportadas y la información necesaria para dibujar el formulario de login de la entidad.\n", "get_channel_leaderboards_for_twitch_api": "Returns leaderboard.", "getmoviestatus_for_helioviewer_v1": "", "getprofile_for_snapchat": "getProfile", "laptime_for_formula_1_fixed": "This endpoint requires the season(year), race(round) and lap number(lapnumber) to be specified.", "list_of_all_ingredients_for_food_ingredient_measurement_conversion": "GET a list of all the Ingredients available", "player_information_for_baseball_datafeeds_by_rolling_insights": "This endpoint returns player demographic information", "raceresult_for_formula_1_fixed": "This endpoint gives the result for a specific race (round) in a season(year).\n\n\nIf the results for the specified race are not yet available the RaceTable element in the response will be empty.\n\n", "your_events_for_ticketbud": "A list of events owned or accessible by the current token holder"}, "aseqs": [{"api_name": "raceresult_for_formula_1_fixed", "api_action": "\nAction: raceresult_for_formula_1_fixed\nAction Input: {\n  \"round\": \"8\",\n  \"year\": \"2021\"\n}", "api_reaction": null}, {"api_name": "laptime_for_formula_1_fixed", "api_action": "\nAction: laptime_for_formula_1_fixed\nAction Input: {\n  \"year\": \"2021\",\n  \"round\": \"8\",\n  \"lapnumber\": \"10\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "raceresult_for_formula_1_fixed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "laptime_for_formula_1_fixed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "raceresult_for_formula_1_fixed"}}]}
{"URL": "55836", "query": "Hey, I've been playing Wordle and I'm stuck on today's puzzle. Can you help me out by giving me the solution for today's Wordle game? Also, I'm curious about all the past solutions. Can you provide me with the historical answers? Thanks a bunch!", "api_names": ["all_solutions_for_wordle_answers_solutions", "today_for_wordle_answers_solutions", "Finish", "games_for_jet_set_radio_api", "articles_for_news_v3", "get_home_details_for_trulia_real_estate_scraper", "getgames_for_diablo4_smartable", "download_file_for_rushtranslate", "test_for_pmi_jateng", "fetchaverification_for_cleardil", "setup_for_cyber_guardian", "music_info_for_tiktok_scraper_v2", "whois_for_domain_checker", "team_statistics_for_football_dolphin", "news_get_details_for_fidelity_investments", "additional_title_details_for_ott_details", "get_key_dates_by_contact_for_churchapp", "get_all_climate_change_news_for_climate_change_live_api"], "api_descs": {"Finish": "No description available.", "additional_title_details_for_ott_details": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.", "all_solutions_for_wordle_answers_solutions": "Calling this endpoint you will get all the historical solutions of the Wordle game", "articles_for_news_v3": "Fetches articles from one specific newspaper", "download_file_for_rushtranslate": "Retrieve a temporary download URL for the file. Files are encrypted and stored in an Amazon S3 bucket. When you want to download a file this request will generate a temporary signed URL allowing access to download the file securely. URLs expire after two minutes.", "fetchaverification_for_cleardil": " ", "games_for_jet_set_radio_api": "Returns a list of all Games", "get_all_climate_change_news_for_climate_change_live_api": "Get climate change news all over the world", "get_home_details_for_trulia_real_estate_scraper": "Returns full details of home. Call **Get listing by url** or get items from *Search*. In response you'll get **url** of home. Take this url and pass it here into query. You can also go to https://www.trulia.com/AZ/Scottsdale/ and take urls e.g. https://www.trulia.com/p/az/fountain-hills/14834-e-valley-vista-dr-fountain-hills-az-85268--2113652369", "get_key_dates_by_contact_for_churchapp": "", "getgames_for_diablo4_smartable": "Get Diablo 4 gameplays.", "music_info_for_tiktok_scraper_v2": "Get music info.", "news_get_details_for_fidelity_investments": "Get news details", "setup_for_cyber_guardian": "Generates a link that grants access to the configuration dashboard for the Cyber Guardian and redirects you to it, already logged in through Rapid.", "team_statistics_for_football_dolphin": "Team statistics", "test_for_pmi_jateng": "PMI", "today_for_wordle_answers_solutions": "Calling this endpoint you will todays solution.", "whois_for_domain_checker": "Checks the domain Whois Details"}, "aseqs": [{"api_name": "today_for_wordle_answers_solutions", "api_action": "\nAction: today_for_wordle_answers_solutions\nAction Input: {}", "api_reaction": null}, {"api_name": "all_solutions_for_wordle_answers_solutions", "api_action": "\nAction: all_solutions_for_wordle_answers_solutions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "today_for_wordle_answers_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_solutions_for_wordle_answers_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "test_for_pmi_jateng"}}]}
{"URL": "63684", "query": "I need to be up to date with the latest news in the cryptocurrency world. Fetch me the news articles from CryptoNews and provide me with all the crypto news available.", "api_names": ["get_all_crypto_news_for_crypto_news_live_v2", "get_individual_news_sources_for_crypto_news_live_v2", "Finish", "last_ratings_for_sofascores", "deployment_details_for_surveymethods", "significant_earthquakes_past_day_for_everyearthquake", "get_post_for_tiktok_private", "google_places_for_value_serp", "group_invite_link_for_whin", "get_all_ethereum_news_for_crypto_news_v11", "user_tweets_replies_by_screen_name_for_twitter_v2", "getpetbyid_for_thisisapublicapi_v2", "see_about_nft_prices_for_crypto_currency_scraper_api", "fetchcallsforcampaign_for_upcall", "search_fighter_stats_by_age_for_mma_stats", "get_product_for__onboarding_project", "shares_float_for_holistic_finance_stock_data", "category_list_for_fortune_cookie"], "api_descs": {"Finish": "No description available.", "category_list_for_fortune_cookie": "List of fortune categories", "deployment_details_for_surveymethods": "Using this API call, you can retrieve the current deployment status of a particular survey.", "fetchcallsforcampaign_for_upcall": "Get all calls for a campaign", "get_all_crypto_news_for_crypto_news_live_v2": "Gets all crypto news from the currently configured websites", "get_all_ethereum_news_for_crypto_news_v11": "This endpoint will return news articles from over 70 different websites about Ethereum", "get_individual_news_sources_for_crypto_news_live_v2": "Get Crypto News from a Specific Source", "get_post_for_tiktok_private": "Get Post Detail", "get_product_for__onboarding_project": " ", "getpetbyid_for_thisisapublicapi_v2": "Returns a single pet", "google_places_for_value_serp": "VALUE SERP parses Google Local & Maps results (i.e. local business listings) when the search_type parameter is set to search_type=places. When this parameter is set VALUE SERP provides a places_results array in the result JSON that contains the [Places or Maps results](https://www.valueserp.com/docs/search-api/results/google/places).\n\n**Google Local vs. Google Maps**\n`search_type=places` requests can be executed in two modes to retrieve data from a [Google Local results page](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl) or from a [Google Maps results page](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z).\n\nYou set the Location of the `search_type=places` request using the `location` request parameter and this can be expressed as either a text location name from the [Locations API](https://www.valueserp.com/docs/locations-api/overview) (which will result in a [Google Local result](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl)), or as a latitude, longitude and zoom level (which will result in a [Google Maps result](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z)).", "group_invite_link_for_whin": "the endpoint returns an invite link url for a group you own.", "last_ratings_for_sofascores": "Get the latest player rating", "search_fighter_stats_by_age_for_mma_stats": "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their age. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more.", "see_about_nft_prices_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top nft currencies including names and prices even rank and more!", "shares_float_for_holistic_finance_stock_data": "Provides the amount of current shares float.", "significant_earthquakes_past_day_for_everyearthquake": "Significant Earthquakes, Past Day", "user_tweets_replies_by_screen_name_for_twitter_v2": "Get User Tweets & Replies  By Screen Name"}, "aseqs": [{"api_name": "get_all_crypto_news_for_crypto_news_live_v2", "api_action": "\nAction: get_all_crypto_news_for_crypto_news_live_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "get_individual_news_sources_for_crypto_news_live_v2", "api_action": "\nAction: get_individual_news_sources_for_crypto_news_live_v2\nAction Input: {\n  \"newspaperid\": \"CryptoNews\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_crypto_news_for_crypto_news_live_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_ethereum_news_for_crypto_news_v11"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_ethereum_news_for_crypto_news_v11"}}]}
{"URL": "59929", "query": "I need to modify a JPEG2000 image named 'image.jpg' and add a comment to it. Can you modify the image and provide the modified image file?", "api_names": ["Finish", "modifyjpeg2000_for_aspose_imaging_cloud", "downloadfile_for_aspose_imaging_cloud", "search_twitter_for_twitter_v5", "getsupportedfileformats_for_groupdocs_editor_cloud", "generate_litecoin_wallet_for_litecoin_wallet", "house_prices_get_running_costs_for_zoopla_v2", "getmsgs_for_messages", "fetchlatestnav_for_latest_mutual_fund_nav", "echo_for_simpleecho", "ideas_list_for_trading_view", "word_for_lorem_ipsum_api", "get_all_wards_of_a_district_in_vietnam_for_viet_nam_administrative_divisions", "user_stories_by_username_for_instagram_api_v2", "get_imbuements_for_demon_presence_holy_protection_for_tibia_items", "post_details_for_axesso_facebook_data_service", "nps_organization_for_nps_net_promoter_score", "accept_charset_for_testing_out_sharing_w_rachael"], "api_descs": {"Finish": "No description available.", "accept_charset_for_testing_out_sharing_w_rachael": "accepting character set", "downloadfile_for_aspose_imaging_cloud": " ", "echo_for_simpleecho": "Send a GET request to the Echo", "fetchlatestnav_for_latest_mutual_fund_nav": "Fetch Latest NAV", "generate_litecoin_wallet_for_litecoin_wallet": "Litecoin wallet API supports BIP44 HD wallets. It is very convenient and secure, since it can generate 2^31 addresses from 1 mnemonic phrase. Mnemonic phrase consists of 24 special words in defined order and can restore access to all generated addresses and private keys.\nEach address is identified by 3 main values:\n\nPrivate Key - your secret value, which should never be revealed\nPublic Key - public address to be published\nDerivation index - index of generated address\nIt follows BIP44 specification and generates for Litecoin wallet with derivation path m'/44'/2'/0'/0. More about BIP44 HD wallets can be found here - https://github.com/litecoin/bips/blob/master/bip-0044.mediawiki. Generate BIP44 compatible Litecoin wallet.", "get_all_wards_of_a_district_in_vietnam_for_viet_nam_administrative_divisions": "Get all names of wards in a district in Vietnam", "get_imbuements_for_demon_presence_holy_protection_for_tibia_items": "This enpoint will get all imbuement for type Demon Presence\n\nDemon Presence (Holy Protection)\nCultish Robe \nCultish Mask \nHellspawn Tail", "getmsgs_for_messages": "GetMsg", "getsupportedfileformats_for_groupdocs_editor_cloud": " ", "house_prices_get_running_costs_for_zoopla_v2": "Get running costs", "ideas_list_for_trading_view": "List ideas post with options and filters", "modifyjpeg2000_for_aspose_imaging_cloud": " ", "nps_organization_for_nps_net_promoter_score": "Get a summary of NPS calculation for a given organization. It considers the overall answers related to all templates belonging to a given organization and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs.", "post_details_for_axesso_facebook_data_service": "Fetch post details for a single post", "search_twitter_for_twitter_v5": "Search Twitter (Top, Latest, Videos, Photos and People)", "user_stories_by_username_for_instagram_api_v2": "Get all stories of any Instagram account via username", "word_for_lorem_ipsum_api": "Create lorem ipsum by defining the number of words"}, "aseqs": [{"api_name": "modifyjpeg2000_for_aspose_imaging_cloud", "api_action": "\nAction: modifyjpeg2000_for_aspose_imaging_cloud\nAction Input: {\n  \"name\": \"image.jpg\",\n  \"comment\": \"This is a modified image with a comment\"\n}", "api_reaction": null}, {"api_name": "downloadfile_for_aspose_imaging_cloud", "api_action": "\nAction: downloadfile_for_aspose_imaging_cloud\nAction Input: {\n  \"path\": \"image.jpg\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "modifyjpeg2000_for_aspose_imaging_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "modifyjpeg2000_for_aspose_imaging_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "modifyjpeg2000_for_aspose_imaging_cloud", "api_action": "\nAction: modifyjpeg2000_for_aspose_imaging_cloud\nAction Input: {\n  \"name\": \"image.jpg\",\n  \"comment\": \"This is a modified image with a comment\"\n}", "api_reaction": null}}]}
{"URL": "67581", "query": "I'm planning a trip and I want to find travel inspiration on TikTok. Can you search for videos using the query 'travel' and provide me with the video details and the user details of the creators?", "api_names": ["search_accounts_for_tiktok_api", "Finish", "emoji_api_instructions_for_funny_emojis", "getblock_for_chaingateway_io", "getgamesbytopic_for_diablo4_smartable", "get_rich_menu_id_of_user_for_line_messaging", "hello_for_quick_qr_code_generator", "wordsearchenglish_for_dictionary", "get_user_feed_for_instagram_v7", "url_for_newapi"], "api_descs": {"Finish": "No description available.", "emoji_api_instructions_for_funny_emojis": "emoji api Instructions", "get_rich_menu_id_of_user_for_line_messaging": "Gets the ID of the rich menu linked to a user.", "get_user_feed_for_instagram_v7": "Get the feed of a user", "getblock_for_chaingateway_io": "Returns information of an ethereum block with or without transactions", "getgamesbytopic_for_diablo4_smartable": "Get Diablo 4 gameplays by topic.", "hello_for_quick_qr_code_generator": "test hello endpoint", "search_accounts_for_tiktok_api": "Return Search Result", "url_for_newapi": "url", "wordsearchenglish_for_dictionary": "With this service you can learn the meaning of English words from Oxdord dictionary."}, "aseqs": [{"api_name": "search_accounts_for_tiktok_api", "api_action": "\nAction: search_accounts_for_tiktok_api\nAction Input: {\n  \"query\": \"travel\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_accounts_for_tiktok_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_accounts_for_tiktok_api", "api_action": "{\"query\": \"travel\", \"include_video_detail\": true, \"include_user_detail\": true}"}}]}
{"URL": "30134", "query": "My company is planning a marine research expedition to the Pacific Ocean. Before we embark on the journey, we need to gather information on the current ocean conditions, including wave height, wave period, wind speed, and tide information, closest to the coordinates 20.5937° N latitude and 78.9629° E longitude. Can you provide us with this data?", "api_names": ["ocean_conditions_closest_to_latitude_longitude_for_wavebase", "Finish", "shorts_sound_attribution_for_yt_api", "wins_leaderboard_mw2_for_cod_api_2_0", "user_guides_for_instagram_v13", "agent_s_active_listings_for_zillow", "leagueseasons_for_handballapi", "teamdocuments_for_boldsign"], "api_descs": {"Finish": "No description available.", "agent_s_active_listings_for_zillow": "Agent's active listings", "leagueseasons_for_handballapi": "Get seasons of a handball unique tournament by ID", "ocean_conditions_closest_to_latitude_longitude_for_wavebase": "​https://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location.", "shorts_sound_attribution_for_yt_api": "Get the Shorts original sound attribution listing.\nQuota cost is 1 unit.", "teamdocuments_for_boldsign": " ", "user_guides_for_instagram_v13": "Get instagram user guides by user id.", "wins_leaderboard_mw2_for_cod_api_2_0": "Get top wins information for up to 2000 players on the MW 2 leaderboard."}, "aseqs": [{"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase", "api_action": "\nAction: ocean_conditions_closest_to_latitude_longitude_for_wavebase\nAction Input: {\n  \"latitude\": 20.5937,\n  \"longitude\": 78.9629\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase"}}]}
{"URL": "12431", "query": "I need to check the performance of my family member on LeetCode. Can you please provide the number of medium, easy, and hard questions solved by them? Also, fetch their maximum streak, total active days this year, contest rank, total number of questions solved, and their name.", "api_names": ["Finish", "geteasyquestion_for_leetcodeapi", "gethardquestion_for_leetcodeapi", "getmediumquestion_for_leetcodeapi", "get_pages_fb3c1d3c_13c4_4cb5_9a4d_5dbc5e195d42_for_the_south_asian_express", "get_draw_dates_2023_for_4d_results", "chapters_list_all_for_manga_scrapper", "artist_search_for_shazam", "today_best_for_crypto_gem_finder", "hashtags_for_ai_writer", "tournament_teams_for_ice_hockey_data", "random_for_cocktails", "sentiment_analysis_for_google_s_bert_sentiment_analysis", "sport_leagues_for_pinaculo", "bans_esports_for_sofasport", "gives_the_bmi_when_you_input_values_in_metric_units_for_bmi_v2", "odds_for_betmaster", "uefa_rankings_for_transfermarkt_db", "getinventory_for_my_api_12345", "quotes_by_keywords_for_quotes_v2"], "api_descs": {"Finish": "No description available.", "artist_search_for_shazam": "This endpoint let you search for an artist by their name. You can get a list of artists from its name.", "bans_esports_for_sofasport": "Get bans (esports) by event_id", "chapters_list_all_for_manga_scrapper": "Make request to fetch chapter collection for a specific webtoon from a specific provider.", "get_draw_dates_2023_for_4d_results": "List of draw dates in 2023.", "get_pages_fb3c1d3c_13c4_4cb5_9a4d_5dbc5e195d42_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.", "geteasyquestion_for_leetcodeapi": "Get the number of easy question solved by the user", "gethardquestion_for_leetcodeapi": "Get the number of hard questions solved by the user.", "getinventory_for_my_api_12345": "Returns a map of status codes to quantities", "getmediumquestion_for_leetcodeapi": "Get the number of medium level questing solved by the user.", "gives_the_bmi_when_you_input_values_in_metric_units_for_bmi_v2": "Gives the BMI in kg/m2 when we input height in centimeters and weight in kilograms", "hashtags_for_ai_writer": "Generate hashtags from a given text.", "odds_for_betmaster": "Latest Odds by Betmaster.", "quotes_by_keywords_for_quotes_v2": "Returns Quotes containing specified keyword", "random_for_cocktails": "Get a random cocktail with all ingredients", "sentiment_analysis_for_google_s_bert_sentiment_analysis": "Multi-lingual Sentiment Analysis parameter {lang} is optional, we can detect the language but you can define it for better result and accurate", "sport_leagues_for_pinaculo": "Get sport leagues.", "today_best_for_crypto_gem_finder": "Get Today most popular coins", "tournament_teams_for_ice_hockey_data": "List of teams participating in a specific tournament.", "uefa_rankings_for_transfermarkt_db": "Get countries within 5 years. Ex. https://www.transfermarkt.com/statistik/5jahreswertung"}, "aseqs": [{"api_name": "getmediumquestion_for_leetcodeapi", "api_action": "\nAction: getmediumquestion_for_leetcodeapi\nAction Input: {\n  \"username\": \"family_member\"\n}", "api_reaction": null}, {"api_name": "gethardquestion_for_leetcodeapi", "api_action": "\nAction: gethardquestion_for_leetcodeapi\nAction Input: {\n  \"username\": \"family_member\"\n}", "api_reaction": null}, {"api_name": "geteasyquestion_for_leetcodeapi", "api_action": "\nAction: geteasyquestion_for_leetcodeapi\nAction Input: {\n  \"username\": \"family_member\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getmediumquestion_for_leetcodeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "geteasyquestion_for_leetcodeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "geteasyquestion_for_leetcodeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_my_api_12345", "api_action": "\nAction: getinventory_for_my_api_12345\nAction Input: {\n  \"user\": \"family_member\"\n}"}}]}
{"URL": "5272", "query": "I'm conducting market research for a client and I need information about similar companies. Can you provide me with a list of companies based on their website analysis and firmographics? It would be helpful if I could find the most relevant companies according to my search terms.", "api_names": ["similar_for_market_intelligence_by_automata", "Finish", "points_point_forecast_for_national_weather_service", "get_permissions_by_app_id_for_google_play", "getfileversions_for_groupdocs_translation_cloud", "trainsbetweenstations_v3_for_irctc", "search_for_torrenthunt", "stagesubstages_for_motorsportapi", "v1_render_for_inkit", "d_die_for_utile_space", "user_id_by_username_for_twitter", "healthcheck_for_fortune_cookie"], "api_descs": {"Finish": "No description available.", "d_die_for_utile_space": "Roll a die with n faces. With n between 2 and 100.", "get_permissions_by_app_id_for_google_play": "Returns the permissions of a single application by its ID", "getfileversions_for_groupdocs_translation_cloud": " ", "healthcheck_for_fortune_cookie": "The health check endpoint will return a status of 200 if the api is up and ready to recieve connections. It will tell the uptime, and total requests served since last restart. It also has a field for version which corresponds to the versioned release from the github repo.  \n", "points_point_forecast_for_national_weather_service": "Forecast data for a point. The DWML format is a temporary format to aid transition and will be sunset at a later date. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast", "search_for_torrenthunt": "Search queries on different torrent sources", "similar_for_market_intelligence_by_automata": " ", "stagesubstages_for_motorsportapi": "Get all substages of a specific Motorsport stage.", "trainsbetweenstations_v3_for_irctc": "-", "user_id_by_username_for_twitter": "this returns twitter user id based on twitter username.", "v1_render_for_inkit": " "}, "aseqs": [{"api_name": "similar_for_market_intelligence_by_automata", "api_action": "\nAction: similar_for_market_intelligence_by_automata\nAction Input: {\n  \"link\": \"example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "similar_for_market_intelligence_by_automata"}}, {"state": "generated_by_agent", "aseq": {"api_name": "similar_for_market_intelligence_by_automata"}}]}
{"URL": "19091", "query": "I want to learn more about a specific horse's performance. Can you provide me with the horse's stats, including the date, position, course, distance, class, weight, starting price, jockey, and trainer? The horse's ID is 230380.", "api_names": ["horse_stats_for_horse_racing", "Finish", "stock_institution_ownership_for_yahoo_finance_v2", "get_user_tagged_media_by_user_id_for_instagram_looter", "get_all_police_news_for_german_police_and_crime_news_live", "videos_for_cryptocurrency_markets", "languages_for_google_translator", "options_for_translate_it"], "api_descs": {"Finish": "No description available.", "get_all_police_news_for_german_police_and_crime_news_live": "This endpoint will return back all news about police, crime, accidents and more like this from germany.", "get_user_tagged_media_by_user_id_for_instagram_looter": "Get **Instagram** user tagged media by **user_id**", "horse_stats_for_horse_racing": "Get horse results history.", "languages_for_google_translator": "Returns a list of supported languages for translation.", "options_for_translate_it": "With this endpoint you can get the supported languages and the possible translations between them", "stock_institution_ownership_for_yahoo_finance_v2": "Get stock institution ownership.", "videos_for_cryptocurrency_markets": "Recently published cryptocurrencies videos."}, "aseqs": [{"api_name": "horse_stats_for_horse_racing", "api_action": "\nAction: horse_stats_for_horse_racing\nAction Input: {\n  \"id_horse\": \"230380\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "horse_stats_for_horse_racing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "horse_stats_for_horse_racing"}}]}
{"URL": "16389", "query": "I'm organizing a music-themed event and I need to gather information about the artist, Ennio Morricone. Can you provide me with details about his albums and tracks? Also, it would be great if you could give me the links to listen to his music on platforms like Spotify, Apple, and Deezer.", "api_names": ["search_by_url_for_musiclinkssapi", "search_by_query_for_musiclinkssapi", "get_artist_s_albums_for_musiclinkssapi", "Finish", "methane_endpoint_for_atmosphere_methane_concentration", "teste_for_teste", "isvalidexpression_for_mathematical_symbolic_expression_manipulator", "vehicle_ownership_cost_by_license_plate_for_vehicle_ownership_cost", "stock_company_overview_for_real_time_finance_data", "healthcare_mailing_for_healthcaremailing", "webcams_list_bbox_ne_lat_ne_lng_sw_lat_sw_lng_for_webcams_travel", "download_mp3_custom_audio_quality_for_youtube_mp3_downloader", "user_tweet_detail_for_twitter_pack_v2", "code_for_us_zipcodes", "autocomplete_suggestions_for_arcgis_platform_geocoding", "getcolorpalettefromimageurl_for_images_infos_api2"], "api_descs": {"Finish": "No description available.", "autocomplete_suggestions_for_arcgis_platform_geocoding": "The ArcGIS World Geocoding Service includes a method that allows character-by-character autocomplete suggestions to be generated for user input in a client application. This capability facilitates the interactive search user experience by reducing the number of characters that need to be typed before a suggested match is obtained. The idea is that a client application can provide a list of suggestions that is updated with each character entered by a user until the place they are looking for is returned in the list.\n\n![Autocomplete diagram](https://developers.arcgis.com/rest/geocode/api-reference/GUID-9A754AFE-8154-46C3-8A31-3566963F971E-web.png)\n\n[API reference `suggest` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm)", "code_for_us_zipcodes": "Return a zip code detail", "download_mp3_custom_audio_quality_for_youtube_mp3_downloader": "Download YouTube to Mp3 in various audio quality: 320 Kbps, 192Kbps, 256Kbps, 128Kbps & 64Kbps. (Specify the quality in the field)", "get_artist_s_albums_for_musiclinkssapi": "Given a **Spotify url**,  returns basic details about albums of artist.", "getcolorpalettefromimageurl_for_images_infos_api2": "Get palette from image", "healthcare_mailing_for_healthcaremailing": "Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list.", "isvalidexpression_for_mathematical_symbolic_expression_manipulator": " ", "methane_endpoint_for_atmosphere_methane_concentration": "The response will be an object with no CORS resources enabled.", "search_by_query_for_musiclinkssapi": "Given a **query** and **type** of element, this returns details about *tracks*, *albums* and *artists*.", "search_by_url_for_musiclinkssapi": "Given a **Spotify url**, this returns details about *tracks*, *albums* and *artists*.", "stock_company_overview_for_real_time_finance_data": "Get stock / public company details. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*. Returns company details for the *stock* type.", "teste_for_teste": "teste", "user_tweet_detail_for_twitter_pack_v2": "Get user tweet and reply", "vehicle_ownership_cost_by_license_plate_for_vehicle_ownership_cost": "Vehicle Ownership Cost by License Plate", "webcams_list_bbox_ne_lat_ne_lng_sw_lat_sw_lng_for_webcams_travel": "This is a modifier. Returns a list of the webcams in the bounding box given by north-east ({ne_lat},{ne_lng}) and south-west ({sw_lat},{sw_lng}) coordinates. Required: {ne_lat},{ne_lng},{sw_lat},{sw_lng}."}, "aseqs": [{"api_name": "get_artist_s_albums_for_musiclinkssapi", "api_action": "\nAction: get_artist_s_albums_for_musiclinkssapi\nAction Input: {\n  \"spotify_url\": \"https://open.spotify.com/artist/1Mxqyy3pSjf8kZZL4QVxS0\"\n}", "api_reaction": null}, {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"Ennio Morricone\",\n  \"type\": \"track\"\n}", "api_reaction": null}, {"api_name": "search_by_url_for_musiclinkssapi", "api_action": "\nAction: search_by_url_for_musiclinkssapi\nAction Input: {\n  \"spotify_url\": \"https://open.spotify.com/artist/1Mxqyy3pSjf8kZZL4QVxS0\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"query\": \"Ennio Morricone\",\n  \"type\": \"artist\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_artist_s_albums_for_musiclinkssapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_artist_s_albums_for_musiclinkssapi", "api_action": "\nAction: get_artist_s_albums_for_musiclinkssapi\nAction Input: {\n  \"spotify_url\": \"https://open.spotify.com/artist/1Mxqyy3pSjf8kZZL4QVxS0\"\n}", "api_reaction": null}}]}
{"URL": "23557", "query": "I'm organizing a flight school event and I need to provide live tracking for all the aircraft participating. Can you give me the total number of live tracked aircraft and also the live positioning for each aircraft using their ICAO HEX Code?", "api_names": ["total_live_tracked_aircraft_for_fachaapi", "live_aircraft_by_icao_for_fachaapi", "Finish", "schedule_for_tvmaze", "get_nba_franchise_w_l_schedule_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules", "article_api_for_diffbot", "custom_ticker_for_global_ethereum_price_index_gex", "resources_per_country_for_africa_api_", "videos_for_youtube_v3_lite", "ln_for_twelve_data", "directions_between_2_locations_for_tanzania_api", "search_jokes_for_humor_jokes_and_memes", "get_contacts_for_sms77io", "get_cities_for_geography", "get_trend_keyword_for_trends_keywords_in_different_regions"], "api_descs": {"Finish": "No description available.", "article_api_for_diffbot": "The Article API is used to extract clean article text from news articles, blog posts, and other text-heavy web pages.", "custom_ticker_for_global_ethereum_price_index_gex": "This endpoint can be used to generate a custom index in a certain currency. The “inex” path parameter represents “include” or “exclude”, you can choose to generate an index removing specified exchanges, or only including the few that you require.", "directions_between_2_locations_for_tanzania_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Arusha to Dar es Salaam**", "get_cities_for_geography": "Get details about cities", "get_contacts_for_sms77io": "Retrieves all contacts for a given API key.", "get_nba_franchise_w_l_schedule_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's W/L Schedule for a specific year", "get_trend_keyword_for_trends_keywords_in_different_regions": "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications.", "live_aircraft_by_icao_for_fachaapi": "Get live positioning for an aircraft with a specific ICAO HEX Code", "ln_for_twelve_data": "Natural Logarithm to the base of constant e(LN) transforms all data points with natural logarithm.", "resources_per_country_for_africa_api_": "Gives you a list of the most important resources that an African country relies on to keep their economy running.\nTakes parameter <country_name>", "schedule_for_tvmaze": "Get the TV schedule", "search_jokes_for_humor_jokes_and_memes": "Search for jokes.\nSee https://humorapi.com/docs/#Search-Jokes for more.", "total_live_tracked_aircraft_for_fachaapi": "Get total live tracked aircraft", "videos_for_youtube_v3_lite": "Get YouTube Video details.\nQuota cost is 1. For statistics part, quota is +1."}, "aseqs": [{"api_name": "total_live_tracked_aircraft_for_fachaapi", "api_action": "\nAction: total_live_tracked_aircraft_for_fachaapi\nAction Input: {}", "api_reaction": null}, {"api_name": "live_aircraft_by_icao_for_fachaapi", "api_action": "\nAction: live_aircraft_by_icao_for_fachaapi\nAction Input: {\n  \"icao\": \"ABCD12\"\n}", "api_reaction": null}, {"api_name": "live_aircraft_by_icao_for_fachaapi", "api_action": "\nAction: live_aircraft_by_icao_for_fachaapi\nAction Input: {\n  \"icao\": \"WXYZ56\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "live_aircraft_by_icao_for_fachaapi"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"live_aircraft_by_icao_for_fachaapi\",\n\t\"api_action\": \"\\nAction: live_aircraft_by_icao_for_facaaii\\nParams: {\\n  \\\"ICAO_HEX_Code\\\": [\\n    \"<I will provide the ICAO HEX Codes here>\\n  ]\\n}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "total_live_tracked_aircraft_for_fachaapi", "api_action": "\nAction: total_live_tracked_aircraft_for_fachaapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "total_live_tracked_aircraft_for_fachaapi", "api_action": "\nAction: total_live_tracked_aircraft_for_fachaapi\nAction Input: {}", "api_reaction": null}}]}
{"URL": "54606", "query": "I am planning a trip to a new country and would like to know if my birthday falls within the dates of my visit. Can you check if my birthday, which is on December 24, is between two given dates? The 'from' date is 1980-06-06 00:00:00 and the 'to' date is 1 week ago.", "api_names": ["birthday_for_dateclock", "between_checker_for_dateclock", "Finish", "gettodaysforecast_for_simple_surf_forecast_api", "get_quotes_by_actor_for_movie_and_tv_shows_quotes", "seasonal_goal_analysis_goal_minutes_for_soccer_data", "getuserbyname_for_apfd", "search_for_blogsapi", "get_zip_code_detail_for_zip_code_master", "titles_id_for_moviesdatabase", "getimage_for_the_cancer_imaging_archive", "get_the_next_dividend_payout_date_for_sundayfinance"], "api_descs": {"Finish": "No description available.", "between_checker_for_dateclock": "Check if given date is between two dates", "birthday_for_dateclock": "Return complete a birthday detail", "get_quotes_by_actor_for_movie_and_tv_shows_quotes": "This endpoint will return back quotes by the given actor or actress.", "get_the_next_dividend_payout_date_for_sundayfinance": "Feed in the ticke and get the next dividend payout date.", "get_zip_code_detail_for_zip_code_master": "Retrieve a detailed profile and demographic data for the provided ZIP code.", "getimage_for_the_cancer_imaging_archive": "Set of images in a zip file. NOTE: The resulting zip files can become very large. We strongly advise not testing  this endpoint via Mashape. Instead, consider using curl with the -o option set to output.zip", "gettodaysforecast_for_simple_surf_forecast_api": " ", "getuserbyname_for_apfd": " ", "search_for_blogsapi": "Search blogs by keyword.", "seasonal_goal_analysis_goal_minutes_for_soccer_data": "Provides the goals statistics of the teams against to the other teams(in tournament) in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.", "titles_id_for_moviesdatabase": " "}, "aseqs": [{"api_name": "birthday_for_dateclock", "api_action": "\nAction: birthday_for_dateclock\nAction Input: {\n  \"date\": \"1980-06-06 00:00:00\"\n}", "api_reaction": null}, {"api_name": "between_checker_for_dateclock", "api_action": "\nAction: between_checker_for_dateclock\nAction Input: {\n  \"to\": \"2022-12-17\",\n  \"date\": \"1980-12-24\",\n  \"is_from\": \"1980-06-06 00:00:00\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use the between_checker_for_dateclock API to check if my birthday falls between the given 'from' and 'to' dates,\n\t\"api_name\": \"between_checker_for_dateclock\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "between_checker_for_dateclock"}}, {"state": "generated_by_agent", "aseq": {"api_name": "between_checker_for_dateclock", "api_action": "\nAction: between_checker_for_dateclock\nAction Input: {\n  \"to\": \"2022-12-17\",\n  \"date\": \"1980-12-24\",\n  \"is_from\": \"1980-06-06 00:00:00\"\n}", "api_reaction": null}}]}
{"URL": "16201", "query": "I want to know the CO2 offset compensation details for my friend. Can you retrieve the compensation information linked to their account? I need to know the compensation ID, organization, CO2 equivalent, and the details of any gold standard credit and planted trees associated with it.", "api_names": ["list_existing_compensations_for_co2_offset", "Finish", "get_all_state_names_for_fast_food_restaurants_usa_top_50_chains", "get_all_bodies_positions_for_astronomy", "search_for_norwegian_license_plate_api", "feedbacks_id_for_aliexpress_unofficial", "pass_a_cloudflare_protected_site_for_manga_scrapper", "getpetbyid_for_freeplanhardlimitexternal", "user_agenda_for_supersaas_online_bookings_and_appointment_scheduling", "6_daily_for_stockyapiexchange", "historical_for_exchange_rate", "findalllistingactive_for_etsy"], "api_descs": {"6_daily_for_stockyapiexchange": "This feature provides up-to-date information about a stock's performance during a trading day. It includes the stock's opening and closing prices, as well as its high, low, and trading volume for the day.", "Finish": "No description available.", "feedbacks_id_for_aliexpress_unofficial": " ", "findalllistingactive_for_etsy": "Finds all active Listings. (Note: the sort_on and sort_order options only work when combined with one of the search options: keywords, color, tags, location, etc.)", "get_all_bodies_positions_for_astronomy": "Returns a iterable list of bodies and their properties in tabular format.", "get_all_state_names_for_fast_food_restaurants_usa_top_50_chains": "GET all {State} names", "getpetbyid_for_freeplanhardlimitexternal": "Returns a single pet", "historical_for_exchange_rate": "Get historical rates for any day since 1999.", "list_existing_compensations_for_co2_offset": "Returns a list of all existing co2offset certificates linked to account.", "pass_a_cloudflare_protected_site_for_manga_scrapper": "Make a request to fetch a website protected with Cloudflare's IUAM (I'm Under Attack Mode). This endpoint returns HTML document ready for data scraping purposes.", "search_for_norwegian_license_plate_api": " ", "user_agenda_for_supersaas_online_bookings_and_appointment_scheduling": ""}, "aseqs": [{"api_name": "list_existing_compensations_for_co2_offset", "api_action": "\nAction: list_existing_compensations_for_co2_offset\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_existing_compensations_for_co2_offset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_existing_compensations_for_co2_offset"}}]}
{"URL": "21615", "query": "I'm looking to enhance my personal blog by creating short branded links. Can you generate a new link that points to 'https://blogpost1.com'? Additionally, I would like to retrieve a list of available domains for branding the short links.", "api_names": ["create_a_new_link_for_url_link_shortener", "get_a_list_of_domains_for_url_link_shortener", "Finish", "1_year_historical_daily_prices_for_stock_prices", "entry_list_for_golf_leaderboard_data", "is_possible_for_phone_validator_api", "ideal_weight_for_fitness_calculator", "get_user_followers_for_instagram_fast", "qr_code_for_ai_writer", "getallquotes_for_radio_world_75_000_worldwide_fm_radio_stations_", "verify_for_email_utilities", "get_litecoin_blockchain_information_for_litecoin_wallet"], "api_descs": {"1_year_historical_daily_prices_for_stock_prices": "1 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "create_a_new_link_for_url_link_shortener": "Create a new link", "entry_list_for_golf_leaderboard_data": "Entry List for given tournament - query this to see who will be taking part.", "get_a_list_of_domains_for_url_link_shortener": "Get a list of domains", "get_litecoin_blockchain_information_for_litecoin_wallet": "Get Litecoin Blockchain Information. Obtain basic info like testnet / mainnet version of the chain, current block number and it's hash.", "get_user_followers_for_instagram_fast": "Get user followers list", "getallquotes_for_radio_world_75_000_worldwide_fm_radio_stations_": "You will get all the quotes here based on.\n- limit\n- page", "ideal_weight_for_fitness_calculator": "Find four different ideal weight scores according to four different well-known equations which are Hamwi, Devine, Miller, Robinson.  There are two parameters which are age and height(cm) values.", "is_possible_for_phone_validator_api": "Validates phone number length, returns `true` or `false`.", "qr_code_for_ai_writer": "Generate a QR Code from a link or a text.", "verify_for_email_utilities": "get normalized form of an email"}, "aseqs": [{"api_name": "create_a_new_link_for_url_link_shortener", "api_action": "\nAction: create_a_new_link_for_url_link_shortener\nAction Input: {\n\"destination\": \"https://blogpost1.com\"\n}", "api_reaction": null}, {"api_name": "get_a_list_of_domains_for_url_link_shortener", "api_action": "\nAction: get_a_list_of_domains_for_url_link_shortener\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "create_a_new_link_for_url_link_shortener"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_list_of_domains_for_url_link_shortener"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_list_of_domains_for_url_link_shortener"}}]}
{"URL": "79021", "query": "I'm a currency trader and I need to analyze the exchange rates between USD and XAU. Can you provide me with the historical rates for these currencies on January 20, 2022? Additionally, I would like to know the latest rates for USD and XAU.", "api_names": ["Finish", "historical_rates_for_metals_prices_rates_api", "latest_rates_for_metals_prices_rates_api", "get_products_in_category_for__demo_project_v12", "get_categories_for_my_store", "list_folder_contents_for_git_pager", "cars_for_car_data_v2", "recent_exchange_rates_for_currency_conversion_and_exchange_rates", "nft_tokens_in_collection_for_rich_nft_api_metadata", "groundhogs_for_groundhog_day_api", "list_all_nps_organization_templates_for_nps_net_promoter_score", "places_list_by_bounding_box_for_places", "brandlist_for_boldsign", "view_all_types_with_their_food_items_for_ind_nutrient_api", "reviews_list_for_hotels_com_provider"], "api_descs": {"Finish": "No description available.", "brandlist_for_boldsign": " ", "cars_for_car_data_v2": "Retrieve and filter lists of cars", "get_categories_for_my_store": " ", "get_products_in_category_for__demo_project_v12": " ", "groundhogs_for_groundhog_day_api": "Returns all prognosticating animals with their known predictions.", "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.", "latest_rates_for_metals_prices_rates_api": "The latest API endpoint will return real-time exchange rate data updated every 60 seconds.\n\nNote: All the responses retrieved in USD needs to be converted. \n\nEx: 1/value = USD PRICE.", "list_all_nps_organization_templates_for_nps_net_promoter_score": "Get a list of all NPS templates of a given Organization by its organization id (oid)", "list_folder_contents_for_git_pager": "Lists  all of the contents of a specific Github repo.", "nft_tokens_in_collection_for_rich_nft_api_metadata": "Get NFT tokens in specific collection.\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**Filter by traits example**:\ntraits=[{\"name\":\"type\",\"value\":\"Female\"}]\n\n**order_by: options** \nvalue\n-value\nrarity_rank_at\n-rarity_rank_at\npay_usd_value\n-pay_usd_value", "places_list_by_bounding_box_for_places": "Method returns all objects (or number of objects) in the given boundary box optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.", "recent_exchange_rates_for_currency_conversion_and_exchange_rates": "Retrieve the latest exchange rate data. Refresh rate will depend on your subscription: updated every 60 minutes, every 10 minutes or every 60 seconds.", "reviews_list_for_hotels_com_provider": "Get hotel reviews list", "view_all_types_with_their_food_items_for_ind_nutrient_api": "This request allows clients to retrieve a list of all available types along with the food items associated with each type.\n\nAPI request sent to [https://indnutrientsapi.tech/food/type](https://indnutrientsapi.tech/food/type)"}, "aseqs": [{"api_name": "historical_rates_for_metals_prices_rates_api", "api_action": "\nAction: historical_rates_for_metals_prices_rates_api\nAction Input: {\n  \"date\": \"2022-01-20\",\n  \"symbols\": \"USD,XAU\",\n  \"base\": \"USD\"\n}", "api_reaction": null}, {"api_name": "latest_rates_for_metals_prices_rates_api", "api_action": "\nAction: latest_rates_for_metals_prices_rates_api\nAction Input: {\n  \"symbols\": \"USD,XAU\",\n  \"base\": \"USD\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "historical_rates_for_metals_prices_rates_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_rates_for_metals_prices_rates_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "historical_rates_for_metals_prices_rates_api", "api_action": "\nAction: historical_rates_for_metals_prices_rates_api\nAction Input: {\n  \"date\": \"2022-01-20\",\n  \"symbols\": \"USD,XAU\",\n  \"base\": \"USD\"\n}", "api_reaction": null}}]}
{"URL": "17573", "query": "Could you please provide me with a collection of search results that match the query parameters I specify? I am particularly interested in finding videos related to a specific topic and playlists associated with a particular channel.", "api_names": ["playlists_for_youtube_v3_v3", "search_for_youtube_v3_v3", "Finish", "get_daily_schedule_for_tank01_fantasy_stats", "cake_ingredient_for_recipe_finder", "course_details_for_golf_course_finder", "cards_by_type_for_hearthstone", "title_get_most_popular_movies_for_imdb", "getdatetimebyaddress_for_date_and_time", "get_availiable_models_list_for_parking_places", "fur_color_for_dogbreeddb", "commands_run_for_ssh_honeypot", "getpastevents_for_election2020_smartable", "get_all_restaurants_by_chain_city_state_for_fast_food_restaurants_usa_top_50_chains", "volume_from_to_number_for_unitconversion", "user_info_by_pk_for_instagram_api_v2", "last_year_summary_for_os_sports_perform", "risk_free_rate_for_risk_free_rate_api"], "api_descs": {"Finish": "No description available.", "cake_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random cake recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "cards_by_type_for_hearthstone": "Returns all the cards of a certain type. Example values: Spell, Weapon.", "commands_run_for_ssh_honeypot": "Commands being run by honey pot logins", "course_details_for_golf_course_finder": "This endpoint will return the course details from Google Places", "fur_color_for_dogbreeddb": "Gives a list of all dogs with the color as provided in the parameter.", "get_all_restaurants_by_chain_city_state_for_fast_food_restaurants_usa_top_50_chains": "**10 results per request. Use page number for Pagination.**", "get_availiable_models_list_for_parking_places": "Method returns availiable models, which can be used for image processing.\nEvery model name can be passed to 'model' parameter.", "get_daily_schedule_for_tank01_fantasy_stats": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNBAGamesForDate?gameDate=20220310\nThe above call will return all of the games from March 10th, 2022.  Date must be in that format.  \nFor March 10th, there were two games. They come back in a list format within the body of the response.", "getdatetimebyaddress_for_date_and_time": "This endpoint internally calculates the co-ordinates and timezone to calculate the current date and time", "getpastevents_for_election2020_smartable": "Get past election events.", "last_year_summary_for_os_sports_perform": "Get last year summary of the player", "playlists_for_youtube_v3_v3": "Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.", "risk_free_rate_for_risk_free_rate_api": "This endpoint returns the risk free rate for a specific date. Default values are:\n\ndate = yesterday\ngeography = US\nduration = 3m\n\nCurrently only US is supported. Durations supported are 3m, 5y and 10y. Historical values are supported until 1960-01-04.", "search_for_youtube_v3_v3": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching `video`, `channel` and `playlist` resources, but you can also configure queries to only retrieve a specific type of resource.", "title_get_most_popular_movies_for_imdb": "Get most popular movies", "user_info_by_pk_for_instagram_api_v2": "Get all information about an Instagram account by pk (the unique id of Instagram account) such as username, profile_pic_url (hd), full_name, media_count, follower_count, following_count and etc", "volume_from_to_number_for_unitconversion": "Volume unit conversions"}, "aseqs": [{"api_name": "search_for_youtube_v3_v3", "api_action": "\nAction: search_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"q\": \"topic_of_interest\",\n  \"type\": \"video\"\n}", "api_reaction": null}, {"api_name": "playlists_for_youtube_v3_v3", "api_action": "\nAction: playlists_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"channelid\": \"UCvhhyPdS45Vlm3eoNevVLdw\"\n}", "api_reaction": null}, {"api_name": "search_for_youtube_v3_v3", "api_action": "\nAction: search_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"q\": \"alternative_topic\",\n  \"type\": \"video\"\n}", "api_reaction": null}, {"api_name": "playlists_for_youtube_v3_v3", "api_action": "\nAction: playlists_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"channelid\": \"UCQ6cRkByeSfKfVHLle_oJjA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_v3", "api_action": "\nAction: search_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"q\": \"playlist_channel_keywords\",\n  \"type\": \"playlist\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_v3", "api_action": "\nAction: search_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"q\": \"topic_of_interest\",\n  \"type\": \"video\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_v3", "api_action": "\nAction: search_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"q\": \"new_search_query\",\n  \"type\": \"video\"\n}", "api_reaction": null}}]}
{"URL": "50770", "query": "I want to explore job opportunities as a project manager in San Francisco. Can you search for project manager positions and provide the job details? Additionally, I would like to know the estimated salary range for project manager jobs in the area.", "api_names": ["search_for_jsearch", "estimated_salary_for_jsearch", "Finish", "getting_full_details_for_tiktok_full_video_info_without_watermark_", "water_vapour_history_by_lat_lng_for_ambee_water_vapor_data", "get_coin_ohlc_data_for_coinranking", "artist_appears_on_for_spotify_data", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji", "details_all_organization_surveys_for_nps_net_promoter_score", "home_for_vod_app", "get_litecoin_block_by_hash_or_height_for_litecoin_wallet", "get_call_for_import_export_verification", "get_for_cloudways_v2", "getcountrybynumber_for_telephonetocountry", "v1_convert_for_hryvna_today"], "api_descs": {"Finish": "No description available.", "artist_appears_on_for_spotify_data": "artist-appears-on", "details_all_organization_surveys_for_nps_net_promoter_score": "Get a full list of all customer survey responses for a given organization, by identifying its organization id (oid)", "estimated_salary_for_jsearch": "Get estimated salaries for a jobs around a location", "get_call_for_import_export_verification": "Used to fetch api result using the request id received in responses.", "get_coin_ohlc_data_for_coinranking": "Get OHLC (Open High Low Close) data for the coin throughout time.\nThis endpoint requires the **ultra** plan or higher.\n\n**Beta**\nThe OHLC endpoint is currently in beta. This means we might make some changes that could be considered breaking for your application, and we expect to have downtime every now and then while we are still in beta.", "get_for_cloudways_v2": "Response Class (Status 200)", "get_litecoin_block_by_hash_or_height_for_litecoin_wallet": "Get Litecoin Block detail by block hash or height.", "getcountrybynumber_for_telephonetocountry": "Returns country info by phone number", "getting_full_details_for_tiktok_full_video_info_without_watermark_": "Tiktok videos with full info \n- video without watermark (HD)\n- cover / music\n- share / likes / comments\n- and more", "home_for_vod_app": "Home", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "search_for_jsearch": "Search for jobs posted on job sites across the web.", "v1_convert_for_hryvna_today": "Use this method to convert money", "water_vapour_history_by_lat_lng_for_ambee_water_vapor_data": "Water vapour History by lat lng"}, "aseqs": [{"api_name": "estimated_salary_for_jsearch", "api_action": "\nAction: estimated_salary_for_jsearch\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_jsearch", "api_action": "\nAction: search_for_jsearch\nAction Input: {\n  \"query\": \"project manager in San Francisco\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_jsearch"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_jsearch"}}, {"state": "generated_by_agent", "aseq": {"api_name": "estimated_salary_for_jsearch"}}]}
{"URL": "19610", "query": "I am an investor interested in the climate leaders in the stock market. Can you provide me with the ticker symbols and current values for the top 10 climate leaders? Additionally, give me the latest news about these companies.", "api_names": ["market_trends_for_g_finance", "search_for_g_finance", "ticker_for_g_finance", "Finish", "fixture_tree_inplay_sport_sport_id_for_betbro_sportbook", "view_ip_address_for_pe_demo", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji", "mega_millions_for_ca_lottery", "account_balance_for_smslink", "news_get_details_for_seeking_alpha", "get_whois_batch_for_bulk_whois", "getzip_for_schweizer_postleitzahlen", "bilingual_dictionary_for_webit_language", "movies_for_simapi_movies", "funny_movement_for_comedy_kk_", "lognormal_call_for_kiann_options_project", "get_a_list_of_most_watched_profiles_for_is_this_coin_a_scam", "fetch_newsletter_lists_for_zigatext_global_bulk_sms_otp", "instagram_user_for_user", "autocomplete_for_twitter_v5"], "api_descs": {"Finish": "No description available.", "account_balance_for_smslink": "Account Balance", "autocomplete_for_twitter_v5": "Twitter Seach Query Autocomplete", "bilingual_dictionary_for_webit_language": "Powerful multi-language bilingual neural translation dictionary, supporting 80+ languages.", "fetch_newsletter_lists_for_zigatext_global_bulk_sms_otp": "Fetch Newsletter Lists", "fixture_tree_inplay_sport_sport_id_for_betbro_sportbook": "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures.\n", "funny_movement_for_comedy_kk_": "Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved", "get_a_list_of_most_watched_profiles_for_is_this_coin_a_scam": "Get a list of the most watched 100 crypto projects on isthiscoinascam.com over the past 7 days. Ordered by most most watched first.", "get_whois_batch_for_bulk_whois": "Get WHOIS batch.", "getzip_for_schweizer_postleitzahlen": "get town information from ZIP-code (Postleitzahl)", "instagram_user_for_user": "Here you can find the default value of an Instagram users details and test your API successfully.", "lognormal_call_for_kiann_options_project": "Black-Scholes Pricer/premium, Lognormal vols. Params are as per :\nk = strike (float)\nf = forward (float)\nt = time-to-expiry (float)\nv = implied volatility, lognormal, annualized (float)\nr = risk-free-rate (float). Note can be combined with dividend, funding, risk-free rate into one value", "market_trends_for_g_finance": "market-trends", "mega_millions_for_ca_lottery": "Mega Millions History", "movies_for_simapi_movies": "", "news_get_details_for_seeking_alpha": "Get analysis detail by id", "search_for_g_finance": "search", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "ticker_for_g_finance": "ticker", "view_ip_address_for_pe_demo": "View the IP address of the client in JSON format."}, "aseqs": [{"api_name": "market_trends_for_g_finance", "api_action": "\nAction: market_trends_for_g_finance\nAction Input: {\n  \"t\": \"climate-leaders\"\n}", "api_reaction": null}, {"api_name": "ticker_for_g_finance", "api_action": "\nAction: ticker_for_g_finance\nAction Input: {\n  \"t\": \"8267:TYO\"\n}", "api_reaction": null}, {"api_name": "ticker_for_g_finance", "api_action": "\nAction: ticker_for_g_finance\nAction Input: {\n  \"t\": \"2502:TYO\"\n}", "api_reaction": null}, {"api_name": "search_for_g_finance", "api_action": "\nAction: search_for_g_finance\nAction Input: {\n  \"q\": \"Aeon Co Ltd\"\n}", "api_reaction": null}, {"api_name": "search_for_g_finance", "api_action": "\nAction: search_for_g_finance\nAction Input: {\n  \"q\": \"Asahi Group Holdings Ltd\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ticker_for_g_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ticker_for_g_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_g_finance", "api_action": "\nAction: market_trends_for_g_finance\nAction Input: {\n  \"t\": \"top-climate-leaders\",\n  \"l\": 10,\n  \"includeHistory\": false\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_g_finance", "api_action": "\nAction: market_trends_for_g_finance\nAction Input: {\n  \"t\": \"climate-leaders\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "ticker_for_g_finance", "api_action": "\nAction: ticker_for_g_finance\nAction Input: {\n  \"t\": \"1934964\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_g_finance", "api_action": "\nAction: market_trends_for_g_finance\nAction Input: {\n  \"t\": \"top-10-climate-leaders\"\n}"}}]}
{"URL": "40690", "query": "I'm interested in the latest outcome of the roulette spin. Can you please share the details of the last spin? Additionally, I would like to know the statistics of the wheel results for the past 3 hours, including the count, percentage, last occurred time, and hot frequency percentage.", "api_names": ["Finish", "latest_outcome_for_immersiverouletteapi", "statistics_for_immersiverouletteapi", "list_of_countries_with_income_level_for_world_bank_gdp", "alerts_alertid_notifications_for_signl4_critical_mobile_alerting", "query_for_hexagon_by_h3index_for_ca_boundaries_io", "fetchcampaigns_for_upcall", "kanji_character_for_learn_to_read_and_write_japanese_kanji", "seasons_for_f1_live_motorsport_data", "get_train_data_by_no_mrt_train_no_get_for_aqls_b2c_system", "ticker_for_joj_finance", "api_user_userid_undo_latest_for_1p_challenge", "wayback_query_for_wayback_machine_domain_archived_lookup", "bash_versions_for_bash_code_compiler", "quality_for_everypixel_image_recognition"], "api_descs": {"Finish": "No description available.", "alerts_alertid_notifications_for_signl4_critical_mobile_alerting": "Get notifications of all users by alert id.", "api_user_userid_undo_latest_for_1p_challenge": "Undo the latest savings log from a user (fat-finger click)", "bash_versions_for_bash_code_compiler": "Bash Versions", "fetchcampaigns_for_upcall": "Get all campaigns", "get_train_data_by_no_mrt_train_no_get_for_aqls_b2c_system": " ", "kanji_character_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "latest_outcome_for_immersiverouletteapi": "Last Spin data", "list_of_countries_with_income_level_for_world_bank_gdp": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/V2/incomeLevel/LIC/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json", "quality_for_everypixel_image_recognition": "This method allows you to get the quality score for your photo. This service doesn't measure how cool or beautiful a person or an object on a photo may look. It cares only about technical parts like brightness, contrast, noise and so on. The service is not dedicated for scoring historical photos, illustrations or 3D visualizations.", "query_for_hexagon_by_h3index_for_ca_boundaries_io": "Create a h3 hexagon with any h3Index value in the world.", "seasons_for_f1_live_motorsport_data": "Lists available F1 seasons to query - starting point for the application.", "statistics_for_immersiverouletteapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect", "ticker_for_joj_finance": "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more", "wayback_query_for_wayback_machine_domain_archived_lookup": "API query domain for years available on Wayback machine"}, "aseqs": [{"api_name": "latest_outcome_for_immersiverouletteapi", "api_action": "\nAction: latest_outcome_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_outcome_for_immersiverouletteapi", "api_action": "\nAction: latest_outcome_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_immersiverouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {'time_period': '3 hours'}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_immersiverouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_immersiverouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_immersiverouletteapi"}}]}
{"URL": "59077", "query": "My friend is organizing a party and wants to create a playlist with the best music videos. Can you assist in finding videos from a specific playlist? The playlist ID is 'RDZiQo7nAkQHU'. Please provide the video details and limit the results to 50 videos.", "api_names": ["search_for_youtube_v3_v2", "playlist_videos_for_youtube_v3_v2", "Finish", "categoryschedules_for_rugbyapi2", "list_artist_concerts_for_theclique", "get_a_random_quote_for_anime_quotes_v4", "openid_connecter_for_acrosuite_oauther", "allchannel_for_tvview", "nz_decode_for_vin_decoder_v4", "get_requests_for_cloudflare_bypass", "companies_profile_for_financial_modeling_prep", "list_all_groups_for_geolocation_simulation_for_mobile_apps", "get_flights_v1_cancel_for_tripvair_ai_flight_cancel_predictor", "get_nba_franchise_w_l_schedule_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules", "nearby_arcgis_for_nearby_places"], "api_descs": {"Finish": "No description available.", "allchannel_for_tvview": "Get All the Channel", "categoryschedules_for_rugbyapi2": "Get the schedules of rugby matches for the given date and category, including match timings, teams, and other relevant information.", "companies_profile_for_financial_modeling_prep": "This API returns companies profile (Price,Beta,Volume Average, Market Capitalisation, Last Dividend, 52 week range, stock price change, stock price change in percentage, Company Name, Exchange, Description, Industry,Sector,CEO,Website and image).", "get_a_random_quote_for_anime_quotes_v4": "Get a random quote", "get_flights_v1_cancel_for_tripvair_ai_flight_cancel_predictor": "Offers a statistical  probability of a future flight being cancelled using deep learning AI from 7 days up to 363 days in advance", "get_nba_franchise_w_l_schedule_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's W/L Schedule for a specific year", "get_requests_for_cloudflare_bypass": "Scrape any website with GET requests\n\nURL: enter full URL required", "list_all_groups_for_geolocation_simulation_for_mobile_apps": "List All Groups", "list_artist_concerts_for_theclique": "Enter Artist ID", "nearby_arcgis_for_nearby_places": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50.", "nz_decode_for_vin_decoder_v4": "NZ Decode", "openid_connecter_for_acrosuite_oauther": "OAuth/OpenID Connect(OIDC) authentication information from the third-party providers(**Google/LINE/YahooJP/Azure**) will be available. \nAfter calling the API, you will get an OIDC list without **oAuthCode** or OIDC authentication information with **oAuthCode**.\nWhen you get an OIDC list, you may choose an **OAuthURL** to call it, then you will get OIDC authentication information.\nAnd it is not necessary to input redirectHost/redirectPort parameter here.\nPlease refer to the sample[**OIDC Authentication**] in the following demo page.\nhttps://mars.restgate.net/intro/en/suite_en.html#oauther\n\nサードパティプロバイダー(**Google/LINE/YahooJP/Azure**)からOAuth **OpenID Connect(OIDC)**認証情報を取得します。\nこのAPIを呼び出したら、OIDC一覧(**oAuthCode**付きなしの場合)又は認証情報(**oAuthCode**付きの場合)が戻られます。\nOIDC一覧が戻された場合は、続いて**OAuthURL**を選んで呼び出すと、該当する認証情報を取得できます。\nまたここでは、redirectHost/redirectPortのパラメータを無視してください。\n実際の挙動は、下記のデモページに呼び出しサンプル[**OIDC認証**]をご参考ください。\nhttps://mars.restgate.net/intro/jp/suite_jp.html#oauther\n<hr>\nThe following external document is for directly calling AcroSuite original APIs. Some Auth parameters may be neglected here.\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=2&withTitle=true&apiCode=02301016\n\n下記の外部ドキュメントは、AcroSuiteオリジナルAPIに対する資料であり、ここでは一部の認証パラメータを省略します。\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=1&withTitle=true&apiCode=02301016", "playlist_videos_for_youtube_v3_v2": "Get playlist videos", "search_for_youtube_v3_v2": "Search from YouTube"}, "aseqs": [{"api_name": "search_for_youtube_v3_v2", "api_action": "\nAction: search_for_youtube_v3_v2\nAction Input: {\n  \"part\": \"snippet\",\n  \"q\": \"playlist ID RDZiQo7nAkQHU\",\n  \"maxresults\": 50\n}", "api_reaction": null}, {"api_name": "playlist_videos_for_youtube_v3_v2", "api_action": "\nAction: playlist_videos_for_youtube_v3_v2\nAction Input: {\n  \"part\": \"snippet\",\n  \"playlistid\": \"RDZiQo7nAkQHU\",\n  \"maxresults\": \"50\"\n}", "api_reaction": null}, {"api_name": "search_for_youtube_v3_v2", "api_action": "\nAction: search_for_youtube_v3_v2\nAction Input: {\n  \"part\": \"snippet\",\n  \"q\": \"best music videos\",\n  \"maxresults\": 50\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "playlist_videos_for_youtube_v3_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "playlist_videos_for_youtube_v3_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "playlist_videos_for_youtube_v3_v2", "api_action": "\nAction: playlist_videos_for_youtube_v3_v2\nAction Input: {\n  \"part\": \"snippet\",\n  \"playlistid\": \"RDZiQo7nAkQHU\",\n  \"maxresults\": \"50\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "playlist_videos_for_youtube_v3_v2"}}]}
{"URL": "24501", "query": "I want to retrieve the full details of my CO2 offset compensation and also get a list of all existing CO2 offset certificates linked to my account.", "api_names": ["retrieve_compensation_for_co2_offset", "list_existing_compensations_for_co2_offset", "Finish", "getuser_for_auth", "match_margins_for_basketball_data", "get_workout_plan_for_workout_planner", "total_count_for_mcapi", "geocode_for_trueway_geocoding", "search_req_for_hanime_python_api", "mughal_empire_for_jak_api", "get_historical_nft_balances_for_uniblock", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji"], "api_descs": {"Finish": "No description available.", "geocode_for_trueway_geocoding": "Obtain geocoordinates for address", "get_historical_nft_balances_for_uniblock": "Gets the user's historical NFT balance records.", "get_workout_plan_for_workout_planner": "Get Workout Plans\n\nThis api request can be used to get Workout plan based on:\n\n- Time duration\n- Target Muscle\n- Location\n- Equipment\n\nHence api call takes 4 query parameters:\n\n- time\n- muscle\n- location\n- equipment", "getuser_for_auth": "Get single user data", "list_existing_compensations_for_co2_offset": "Returns a list of all existing co2offset certificates linked to account.", "match_margins_for_basketball_data": "Provides the average match margin statistics of the team in the tournament.", "mughal_empire_for_jak_api": "Get the JSON formated file containing details about The Mughal Empire!!", "retrieve_compensation_for_co2_offset": "Response contains full compensation details (if exists, and owner is account).", "search_req_for_hanime_python_api": "Search API with Query\n\n**This request is limited, Please Refer to /search for more stuff**", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "total_count_for_mcapi": "Get total count of entries"}, "aseqs": [{"api_name": "retrieve_compensation_for_co2_offset", "api_action": "\nAction: retrieve_compensation_for_co2_offset\nAction Input: {\n  \"is_id\": \"my_compensation_id\"\n}", "api_reaction": null}, {"api_name": "list_existing_compensations_for_co2_offset", "api_action": "\nAction: list_existing_compensations_for_co2_offset\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "retrieve_compensation_for_co2_offset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_existing_compensations_for_co2_offset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieve_compensation_for_co2_offset"}}]}
{"URL": "3910", "query": "I am learning to read and write Japanese kanji, and I want to find the English meaning of the kanji character '父'. Additionally, I would like to know the stroke number of this kanji.", "api_names": ["kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji", "kanji_character_for_learn_to_read_and_write_japanese_kanji", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji", "Finish", "income_by_zipcode_for_income_by_zipcode", "specific_skin_for_cs_skin_api", "get_all_plants_for_house_plants", "get_horoscope_english_only_for_horoscopes_ai", "search_people_q_query_for_tvmaze", "get_user_by_gender_for_fake_users", "apis_for_all_data", "abuse_contact_lookup_for_viewdns", "business_name_for_for_business_starter_api", "us_de_for_us_gas_prices", "odds_for_chillybets", "gettopics_for_ted_talks_api"], "api_descs": {"Finish": "No description available.", "abuse_contact_lookup_for_viewdns": "Used to find the abuse contact address for a domain name. This is where you would send complaints about spam originating from that domain.", "apis_for_all_data": "Return data", "business_name_for_for_business_starter_api": "Generate a Business name for existing idea", "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.", "get_horoscope_english_only_for_horoscopes_ai": "Return horoscope information by sign, period, type and languages provided.", "get_user_by_gender_for_fake_users": "get user by gender", "gettopics_for_ted_talks_api": "Get all the TED talks topics", "income_by_zipcode_for_income_by_zipcode": "Income By Zipcode", "kanji_character_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "odds_for_chillybets": "Latest Odds for Chillybets", "search_people_q_query_for_tvmaze": "Search for people", "specific_skin_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a specific counterstrike skin \n(prices for field tested condition in USD)\n\n(replace skin_name, underscores instead of spaces)\n\nExample: /api/AK-47_Redline", "us_de_for_us_gas_prices": "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."}, "aseqs": [{"api_name": "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"kem\": \"父\"\n}", "api_reaction": null}, {"api_name": "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"ks\": 4\n}", "api_reaction": null}, {"api_name": "kanji_character_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_character_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"kanji\": \"父\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji\",\n\t\"api_action\": \"\\nAction: kanji_stroke_number_for_learn_to_read_and_write_j Japanese,\\nkem\\\": \\\"\\u7236\\\"}\",\n\t\"api_reaction\": null\n}\n```json\n{\n\t\"Thought\": \"The previous API call was to get the English meaning of the kanji '父'. Now, I need to call the second API to get the stroke count of this character.\",\n\t\"api_name\": \"kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji\",\n}\n```"}, {"state": "generated_by_agent", "aseq": {"api_name": "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji", "api_action": "{\"kem\": \"画\"}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji\",\n\t\"api_action\": \"\\nAction: kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji\\nAction Input: {\\n  \\\"kem\\\": \\\"父\\\"\\ coats}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "18458", "query": "I work for XYZ Company and I need to stay updated on the latest crypto news. Can you provide me with the top 5 latest news articles from CoinDesk, CoinTelegraph, and CoinJournal? Also, include news from Yahoo Finance and CryptoNinjas. Thank you!", "api_names": ["top_news_for_crypto_news_v2", "cointelegraph_for_crypto_news_v2", "Finish", "coinjournal_for_crypto_news_v2", "cryptoninjas_for_crypto_news_v2", "yahoofinance_for_crypto_news_v2", "social_media_news_in_german_for_onelike", "user_tweets_for_twttrapi", "get_reservation_by_id_for_limoucloud", "tsv_for_odam", "non_manufacturing_pmi_for_u_s_economic_indicators", "stock_get_stock_profile_data_for_yh_finance_v2", "retrieve_response_for__paraphrasing_api", "tweets_by_userid_for_twitter_aio", "d7api_check_balance_for_d7sms", "v1_city_for_city_by_api_ninjas", "search_for_local_business_data", "get_project_details_for_walletapi_cloud", "odds_for_bildbet", "getcodestructure_for_flow_study"], "api_descs": {"Finish": "No description available.", "coinjournal_for_crypto_news_v2": "Get the latest news from CoinJournal.", "cointelegraph_for_crypto_news_v2": "Get the latest news from CoinTelegraph.", "cryptoninjas_for_crypto_news_v2": "Get the latest news from CryptoNinjas.", "d7api_check_balance_for_d7sms": "Get information about current balance on your D7API account", "get_project_details_for_walletapi_cloud": "Obtain a project's details including all assets.", "get_reservation_by_id_for_limoucloud": "Get Reservation by ID", "getcodestructure_for_flow_study": " ", "non_manufacturing_pmi_for_u_s_economic_indicators": "Get monthly non-manufacturing Purchasing Managers' Index.", "odds_for_bildbet": "Latest Odds for Bildbet", "retrieve_response_for__paraphrasing_api": "With the JOB ID generated on the \"Paraphrase\" endpoint, you will be able to get the response from that rewrite.", "search_for_local_business_data": "Search local businesses on Google Maps.", "social_media_news_in_german_for_onelike": "Get social media news in German", "stock_get_stock_profile_data_for_yh_finance_v2": "return stock profile data", "top_news_for_crypto_news_v2": "Get the top latest news from CoinDesk.\n\nSelect number of articles to return. Maximum limit depends on the provider which is usually 50+ articles for CoinDesk. The first articles are the latest.\n\nExample URLs:\n/news/top/5\n/news/top/20\n/news/top/1000  (if only 50 articles are available then 50 is returned)", "tsv_for_odam": "Get the subset list of a dataset along with the metadata\n", "tweets_by_userid_for_twitter_aio": "Receive all tweets ordered by most recent. You can use the cursor and count to navigate around.", "user_tweets_for_twttrapi": "Get user's tweets", "v1_city_for_city_by_api_ninjas": "API Ninjas City API endpoint.", "yahoofinance_for_crypto_news_v2": "Get the latest news from Yahoo Finance."}, "aseqs": [{"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "cointelegraph_for_crypto_news_v2", "api_action": "\nAction: cointelegraph_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "coinjournal_for_crypto_news_v2", "api_action": "\nAction: coinjournal_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "yahoofinance_for_crypto_news_v2", "api_action": "\nAction: yahoofinance_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "cryptoninjas_for_crypto_news_v2", "api_action": "\nAction: cryptoninjas_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2", "Action Input": {"includedEndpoints": ["CoinDesk", "Cointelegraph", "CoinJournal"], "limit": 5}}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieve_response_for__paraphrasing_api", "api_action": "\nAction: retrieve_response_for__paraphrasing_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieve_response_for__paraphrasing_api", "api_action": "\nAction: retrieve_response_for__paraphrasing_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {\"limit\": 5}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {'limit': 5}", "api_reaction": null}}]}
{"URL": "22174", "query": "Can you find news articles about food? I'm particularly interested in articles from a specific source. It would be great if you could provide the main image published with each article and the topic of the articles.", "api_names": ["v1_search_for_newscatcher", "v1_search_free_for_newscatcher", "Finish", "seller_profile_for_rainforest", "volume_from_to_number_for_unitconversion", "ideas_get_replies_for_trading_view", "agencies_list_for_bayut", "playlist_for_deezer", "coins_get_fullsize_chart_for_investing_cryptocurrency_markets", "valida_o_de_email_for_emailqualityplus", "area_code_for_phone", "get_all_police_news_for_german_police_and_crime_news_live"], "api_descs": {"Finish": "No description available.", "agencies_list_for_bayut": "List agencies or search for agencies by name", "area_code_for_phone": "Get the International Country Calling Code and the Local Area Code information", "coins_get_fullsize_chart_for_investing_cryptocurrency_markets": "Get fullsize chart of specific cryptocurrency", "get_all_police_news_for_german_police_and_crime_news_live": "This endpoint will return back all news about police, crime, accidents and more like this from germany.", "ideas_get_replies_for_trading_view": "Get replies relating to an ideal post and comment", "playlist_for_deezer": "A playlist object", "seller_profile_for_rainforest": "The Seller Profile Parameters are applicable when making a request with type=seller_profile to retrieve seller profile details for a single seller on Amazon - the seller is specified using either the seller_id and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon seller profile page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nSeller profile details are retrieved from the seller profile page for a single seller on Amazon. You can retrieve the seller_id value for a given seller from other Rainforest requests, such as type=offers requests.\n\nYou can use subsequent seller products and seller feedback requests to retrieve iterate all of the products and customer feedback from a given seller.", "v1_search_for_newscatcher": "Highly customizable search through our database. All filters and sorting options are allowed.", "v1_search_free_for_newscatcher": "**Up to 100 articles per 1 API call even with free Basic Plan.**\nFree search. Only the language filter is allowed.", "valida_o_de_email_for_emailqualityplus": "Validação Simples de Email", "volume_from_to_number_for_unitconversion": "Volume unit conversions"}, "aseqs": [{"api_name": "v1_search_free_for_newscatcher", "api_action": "\nAction: v1_search_free_for_newscatcher\nAction Input: {\n  \"q\": \"food\",\n  \"sources\": \"https://www.nytimes.com/\"\n}", "api_reaction": null}, {"api_name": "v1_search_for_newscatcher", "api_action": "\nAction: v1_search_for_newscatcher\nAction Input: {\n  \"q\": \"food\",\n  \"sources\": \"https://www.nytimes.com/\"\n}", "api_reaction": null}, {"api_name": "v1_search_for_newscatcher", "api_action": "\nAction: v1_search_for_newscatcher\nAction Input: {\n  \"q\": \"food\",\n  \"sources\": \"nytimes.com\",\n  \"media\": \"True\"\n}", "api_reaction": null}, {"api_name": "v1_search_for_newscatcher", "api_action": "\nAction: v1_search_for_newscatcher\nAction Input: {\n  \"q\": \"food\",\n  \"sources\": \"nytimes.com\",\n  \"media\": \"True\",\n  \"page_size\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_search_for_newscatcher"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_search_free_for_newscatcher"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_search_free_for_newscatcher"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_search_for_newscatcher"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_search_for_newscatcher", "api_action": "\nAction: v1_search_for_newscatcher\nAction Input: {\n  \"q\": \"food\",\n  \"sources\": \"nytimes.com\",\n  \"media\": \"True\",\n  \"page_size\": 5,\n  \"article_topic\": true\n}", "api_reaction": null}}]}
{"URL": "56428", "query": "I'm planning a vacation and I want to explore different travel destinations. Can you provide me with a list of popular tourist attractions in cities like Paris, Rome, and Tokyo? Additionally, I would like to see photos and videos of these attractions.", "api_names": ["get_for_instagram_v3", "Finish", "search_multi_for_soccerway_feed", "time_to_date_for_epoch_converter", "user_details_xml_for_yts_am_torrent", "get_complete_package_list_for_winget_api", "player_statistics_seasons_for_sofascores", "roll_for_diceforge"], "api_descs": {"Finish": "No description available.", "get_complete_package_list_for_winget_api": "Get all available packages in database by ID.", "get_for_instagram_v3": "Getting data bypassing CORS", "player_statistics_seasons_for_sofascores": "Get seasons of the player", "roll_for_diceforge": "Rolls a set of dice and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nsides (integer): A list of integers representing the number of sides for each die.\ncount (integer): A list of integers representing the number of times to roll each die. Defaults to 1 if not provided.\nmodifier (integer): A list of integers representing the modifier to apply to the total of each die roll.\nadvantage (boolean): If set to true, rolls each die twice and takes the higher result.\ndisadvantage (boolean): If set to true, rolls each die twice and takes the lower result.", "search_multi_for_soccerway_feed": "Search team, player by query", "time_to_date_for_epoch_converter": "Convert timestamp to datetime. (year, month, day Hours:Minutes:Seconds)", "user_details_xml_for_yts_am_torrent": "Get the user details"}, "aseqs": [{"api_name": "get_for_instagram_v3", "api_action": "\nAction: get_for_instagram_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "get_for_instagram_v3", "api_action": "\nAction: get_for_instagram_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_multi_for_soccerway_feed"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_multi_for_soccerway_feed\",\n\t\"search_term\": {\n\t\t\"team\": [\"Paris\", \"Rome\", \"Tokyo\"],\n\t\t\"player\": null,\n\t}\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_multi_for_soccerway_feed", "api_action": "{\"locations\":[\"Paris\",\"Rome\",\"Tokyo\"]}", "api_reaction": null}}]}
{"URL": "20077", "query": "I need the latest exchange rates for USD to EUR and GBP. Additionally, I would like to convert 750 USD to EUR using the Convert API. Can you please provide me with the current rates and the converted amount?", "api_names": ["recent_exchange_rates_for_currency_conversion_and_exchange_rates", "Finish", "get_paginate_for_tdot_school_data", "match_for_rugbyapi2", "getqrcode_for_green_api", "mortgage_check_equity_rates_for_realty_in_us", "search_for_local_business_data", "trending_for_youtube_v3_alternative", "test_endpoint_for_test_v18", "get_similar_apps_for_google_play_api"], "api_descs": {"Finish": "No description available.", "get_paginate_for_tdot_school_data": "Get Paginate", "get_similar_apps_for_google_play_api": "Returns similar apps.", "getqrcode_for_green_api": "Документация [QR](https://green-api.com/docs/api/account/QR/)", "match_for_rugbyapi2": "Get information of a Rugby match by its ID.", "mortgage_check_equity_rates_for_realty_in_us": "Check mortgage equity rates", "recent_exchange_rates_for_currency_conversion_and_exchange_rates": "Retrieve the latest exchange rate data. Refresh rate will depend on your subscription: updated every 60 minutes, every 10 minutes or every 60 seconds.", "search_for_local_business_data": "Search local businesses on Google Maps.", "test_endpoint_for_test_v18": "test endpoint", "trending_for_youtube_v3_alternative": "Get trending videos of the particular geo"}, "aseqs": [{"api_name": "recent_exchange_rates_for_currency_conversion_and_exchange_rates", "api_action": "\nAction: recent_exchange_rates_for_currency_conversion_and_exchange_rates\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "recent_exchange_rates_for_currency_conversion_and_exchange_rates"}}, {"state": "generated_by_agent", "aseq": {"api_name": "recent_exchange_rates_for_currency_conversion_and_exchange_rates"}}]}
{"URL": "64584", "query": "I need to verify my phone number for a new registration. Please provide me with a virtual number for Russia. Once I receive the number, I would like to view the SMS history for that number in order to retrieve the verification code.", "api_names": ["Finish", "get_number_by_country_id_for_virtual_number", "view_sms_history_for_virtual_number", "get_all_countries_for_virtual_number", "michellin_restaurants_for_restaurant", "locations_for_jet_set_radio_api", "getbars_for_getbs", "show_moves_for_marvel_vs_capcom_2", "t3ma_for_twelve_data", "vivanews_search_for_indonesia_news", "image_stable_prompter_for_image_diffusion", "getfileversions_for_groupdocs_conversion_cloud", "view_all_food_items_for_ind_nutrient_api", "get_ascii_by_id_for_img_to_ascii", "last_updated_for_data_police_uk", "getnews_for_power_bi_smartable"], "api_descs": {"Finish": "No description available.", "get_all_countries_for_virtual_number": "Get the list of currently available countries", "get_ascii_by_id_for_img_to_ascii": "Load previously generated ASCII image by id", "get_number_by_country_id_for_virtual_number": "Get currently available numbers list by given country id", "getbars_for_getbs": "getBars", "getfileversions_for_groupdocs_conversion_cloud": " ", "getnews_for_power_bi_smartable": "Get Power BI news.", "image_stable_prompter_for_image_diffusion": "generate prompt from image url for stable diffusion", "last_updated_for_data_police_uk": "Crime data in the API is updated once a month. Find out when it was last updated.", "locations_for_jet_set_radio_api": "Returns a list of all Locations in JSR/JSRF", "michellin_restaurants_for_restaurant": "All resautrants", "show_moves_for_marvel_vs_capcom_2": "Show Moves For A Specific Character", "t3ma_for_twelve_data": "Triple Exponential Moving Average(T3MA) makes better smoothing of moving average than the classical TEMA indicator by extending the lookback period and applying other enhanced parameters.", "view_all_food_items_for_ind_nutrient_api": "The request allows clients to retrieve a comprehensive list of all available food items.\n\nAPI request sent to [https://indnutrientsapi.tech/food](https://indnutrientsapi.tech/food)", "view_sms_history_for_virtual_number": "View All received SMS for the given number and country id", "vivanews_search_for_indonesia_news": "vivanews-search"}, "aseqs": [{"api_name": "get_all_countries_for_virtual_number", "api_action": "\nAction: get_all_countries_for_virtual_number\nAction Input: {}", "api_reaction": null}, {"api_name": "get_number_by_country_id_for_virtual_number", "api_action": "\nAction: get_number_by_country_id_for_virtual_number\nAction Input: {\n  \"countryid\": \"7\"\n}", "api_reaction": null}, {"api_name": "view_sms_history_for_virtual_number", "api_action": "\nAction: view_sms_history_for_virtual_number\nAction Input: {\n  \"number\": \"9993974810\",\n  \"countryid\": \"7\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_number_by_country_id_for_virtual_number"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_countries_for_virtual_number"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_countries_for_virtual_number"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_countries_for_virtual_number"}}]}
{"URL": "77416", "query": "I want to stay updated on the latest developments in the cryptocurrency world. Can you give me the top 5 articles from CoinJournal, CoinDesk, and CryptoNinjas?", "api_names": ["coindesk_for_crypto_news_v2", "top_news_for_crypto_news_v2", "Finish", "coinjournal_for_crypto_news_v2", "cryptoninjas_for_crypto_news_v2", "skill_child_for_iys_skill_api_", "parse_for_url_metadata_opengraph", "historical_daily_for_easy_weather", "major_league_soccer_standings_for_major_league_soccer_standings", "gay_image_gay_get_for_image", "https_kassbet_p_rapidapi_com_for_kassbet", "hashtag_challenge_posts_for_tiktok_v4", "minmax_for_twelve_data", "live_aircraft_by_reg_for_fachaapi", "obd2_code_for_car_code", "makes_for_car_api", "title_get_taglines_for_imdb", "getuserbyname_for_pet_store", "provider3_live_inplaying_for_football_betting_odds", "v1_covid19_for_covid_19_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "coindesk_for_crypto_news_v2": "Get the latest news from CoinDesk.", "coinjournal_for_crypto_news_v2": "Get the latest news from CoinJournal.", "cryptoninjas_for_crypto_news_v2": "Get the latest news from CryptoNinjas.", "gay_image_gay_get_for_image": " ", "getuserbyname_for_pet_store": "", "hashtag_challenge_posts_for_tiktok_v4": "Get Hashtag/Challenge Posts By \"challenge_name\" or \"challenge_id\",\nand the endpoint will return 35 posts by 'cursor', with post data including the author data.", "historical_daily_for_easy_weather": "Get a historical daily forecast for the given latitude, longitude, and start date/time.", "https_kassbet_p_rapidapi_com_for_kassbet": "fetch games", "live_aircraft_by_reg_for_fachaapi": "Get live positioning for an aircraft with a specific REG", "major_league_soccer_standings_for_major_league_soccer_standings": "Major League Soccer Standings", "makes_for_car_api": "Search makes by name and year.", "minmax_for_twelve_data": "Lowest and highest values over period(MINMAX).", "obd2_code_for_car_code": "This endpoint will provide the human readable version of a requested obd2 code", "parse_for_url_metadata_opengraph": " ", "provider3_live_inplaying_for_football_betting_odds": "get inplaying matches list", "skill_child_for_iys_skill_api_": "Skill child", "title_get_taglines_for_imdb": "Get taglines information of the title", "top_news_for_crypto_news_v2": "Get the top latest news from CoinDesk.\n\nSelect number of articles to return. Maximum limit depends on the provider which is usually 50+ articles for CoinDesk. The first articles are the latest.\n\nExample URLs:\n/news/top/5\n/news/top/20\n/news/top/1000  (if only 50 articles are available then 50 is returned)", "v1_covid19_for_covid_19_by_api_ninjas": "API Ninjas Covid19 API endpoint. Either **date** or **country** must be set."}, "aseqs": [{"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "coinjournal_for_crypto_news_v2", "api_action": "\nAction: coinjournal_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "cryptoninjas_for_crypto_news_v2", "api_action": "\nAction: cryptoninjas_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "coindesk_for_crypto_news_v2", "api_action": "\nAction: coindesk_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2", "api_action": "", "api_reaction": ""}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_news_for_crypto_news_v2", "api_action": "\nAction: top_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}}]}
{"URL": "61833", "query": "My company is interested in trading commodities and we need a comprehensive overview. Can you fetch us the real-time commodity futures prices along with the latest quotes? Additionally, we would like to know the list of countries where these commodities are traded.", "api_names": ["list_of_countries_for_stocks_for_investing", "real_time_commodity_futures_prices_for_investing", "Finish", "get_printers_printerid_v1_for_shapeways", "uuidv3_generator_for_uuid_generator", "get_bookmakers_for_surebets", "get_all_scores_for_thefluentme", "teamdetails_for_mmaapi", "iplocation_for_ip_geo_location_find_ip_location_and_details", "products_detail_for_zappos", "getpestscommonname_for_agrofitdata", "tour_rankings_for_golf_leaderboard_data", "tournamentmetadata_for_sportifyapi", "market_data_for_stock_sentiment_api", "cinemas_cinemaid_films_filmid_showtimes_for_argentina_movie_theatres"], "api_descs": {"Finish": "No description available.", "cinemas_cinemaid_films_filmid_showtimes_for_argentina_movie_theatres": " ", "get_all_scores_for_thefluentme": "Get a paginated list of all scores.\n\nPlease provide the following parameters in the query string\n- **page**: The page number. If no value is provided, the default value of `1` will be applied.\n- **per_page**: Scores per page. If no value is provided, the default value of `10` will be applied.", "get_bookmakers_for_surebets": "Get a list of all supported bookmakers", "get_printers_printerid_v1_for_shapeways": "", "getpestscommonname_for_agrofitdata": " ", "iplocation_for_ip_geo_location_find_ip_location_and_details": "Provides Geo information for the given IP.", "list_of_countries_for_stocks_for_investing": "This is a list of available countries, it is used as a request on another endpoint.", "market_data_for_stock_sentiment_api": "Returns a list of daily stock metrics such as opening, closing, highest and lowest prices.", "products_detail_for_zappos": "Get detail information of product by productId", "real_time_commodity_futures_prices_for_investing": "page source : https://www.investing.com/commodities/real-time-futures", "teamdetails_for_mmaapi": "Get detailed information about a specific team.", "tour_rankings_for_golf_leaderboard_data": "See player rankings accross the various tours given a `tour_id` and `season`", "tournamentmetadata_for_sportifyapi": "Tournament Meta data", "uuidv3_generator_for_uuid_generator": "UUIDv3 generator"}, "aseqs": [{"api_name": "real_time_commodity_futures_prices_for_investing", "api_action": "\nAction: real_time_commodity_futures_prices_for_investing\nAction Input: {}", "api_reaction": null}, {"api_name": "list_of_countries_for_stocks_for_investing", "api_action": "\nAction: list_of_countries_for_stocks_for_investing\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "real_time_commodity_futures_prices_for_investing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_data_for_stock_sentiment_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "real_time_commodity_futures_prices_for_investing"}}]}
{"URL": "32877", "query": "I am a fashion enthusiast and want to update my wardrobe. Can you show me the available clothing items in the store? Skip the first 5 and limit the result to 10. Also, provide me with the details of a particular clothing item with ID 5432.", "api_names": ["get_products_for_my_store", "get_products_in_category_for_my_store", "get_product_for_my_store", "Finish", "getrandompassword_for_random_chunk_api", "pascal_versions_for_pascal_code_compiler", "recent_match_list_for_soccer_data", "prefereces_for_getbs", "stats_performance_for_today_football_prediction", "get_trend_keyword_for_trends_keywords_in_different_regions", "find_favicon_for_favicon_finder", "create_a_live_stream_for_scraptik", "string_captcha_for_captcha_v2", "get_team_win_data_for_nfl_team_stats_v2", "replies_for_sms77io", "get_all_characters_for_riordanverse_api", "m_for_barbaraaa", "listportfolios_for_trader_wagon", "getrandomcolor_for_random_chunk_api", "get_voices_for_speechnoted"], "api_descs": {"Finish": "No description available.", "create_a_live_stream_for_scraptik": "Create a new live stream.", "find_favicon_for_favicon_finder": "Find favicons for a URL", "get_all_characters_for_riordanverse_api": "Get all characters\n\nOptions:\n\n- Limit → Limit amount of responses received\n- Step → Skip amount of characters\n- Search → Return characters with provided substring", "get_product_for_my_store": " ", "get_products_for_my_store": "Get all products in the store", "get_products_in_category_for_my_store": " ", "get_team_win_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' win/loss data. Parameters include a specific year.\n\nThe year parameter should be a year between these years: 1920 - current year.", "get_trend_keyword_for_trends_keywords_in_different_regions": "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications.", "get_voices_for_speechnoted": "Get available voice", "getrandomcolor_for_random_chunk_api": "Get a random quote.", "getrandompassword_for_random_chunk_api": "Get random password string.", "listportfolios_for_trader_wagon": "List portfolios", "m_for_barbaraaa": "crypto", "pascal_versions_for_pascal_code_compiler": "Pascal Versions", "prefereces_for_getbs": "Prefereces", "recent_match_list_for_soccer_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.\n\nP.S.\nFull data is available at Recent Match List endpoint but can not be shown in mock response.", "replies_for_sms77io": "Retrieves message replies history.", "stats_performance_for_today_football_prediction": "Returns statistics of AI prediction module with selected odds, prediction probabilities and profit-loss calculation. \n\n**Profit-Loss**: calculated by considering only single bet is played from 1 unit amount. If the bet is won, gets prediction odd as positive number else -1.", "string_captcha_for_captcha_v2": "captcha code is string format.\n\n- params: length is number (from 1 to 8, default is 6)"}, "aseqs": [{"api_name": "get_products_for_my_store", "api_action": "\nAction: get_products_for_my_store\nAction Input: {}", "api_reaction": null}, {"api_name": "get_product_for_my_store", "api_action": "\nAction: get_product_for_my_store\nAction Input: {\n  \"is_id\": 5432\n}", "api_reaction": null}, {"api_name": "get_products_in_category_for_my_store", "api_action": "\nAction: get_products_in_category_for_my_store\nAction Input: {\n  \"skip\": 5,\n  \"limit\": 10,\n  \"category\": \"clothing\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_products_for_my_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_for_my_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_for_my_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for_my_store"}}]}
{"URL": "30941", "query": "I'm a member of a gaming community and we're eagerly awaiting the release of Lost Ark. Can you give us an overview of the card collection in the game, as well as the weapon recipes available? We would like to know the names, lengths, cards, effects, and bonuses associated with each card, along with the names, required materials, and details of each weapon recipe.", "api_names": ["get_weapon_recipes_for_lost_ark_simple", "get_cards_collection_for_lost_ark_simple", "Finish", "video_details_for_youtube", "endpoint_for_iframely", "teams_teamid_dutyreports_for_signl4_critical_mobile_alerting", "price_probability_for_marketci_analytics", "search_autocomplete_api_for_weatherapi_com", "transitaire_for_transitaires", "translate_for_giphy", "get_a_specific_item_for_shoes_collections", "packages_v2_track_for_trackingmore_v2"], "api_descs": {"Finish": "No description available.", "endpoint_for_iframely": "main endpoint to get extract json", "get_a_specific_item_for_shoes_collections": "This will return a specific item from the collection ..,simpily write the id of the product and you will get the product", "get_cards_collection_for_lost_ark_simple": "Get List of all** Lost Ark Cards** details", "get_weapon_recipes_for_lost_ark_simple": "Get List of** Lost Ark** craftable Weapons.", "packages_v2_track_for_trackingmore_v2": "Get tracking information of specific package", "price_probability_for_marketci_analytics": "Based on over 1000 forecasts, the probabilistic outcome is above or below the current price in a normal distribution.", "search_autocomplete_api_for_weatherapi_com": "Search or Autocomplete API returns matching cities and towns.", "teams_teamid_dutyreports_for_signl4_critical_mobile_alerting": " ", "transitaire_for_transitaires": "Récupère un transitaire donnée", "translate_for_giphy": "This is prototype endpoint for using Giphy as a translation engine for a GIF dialect. The translate API draws on search, but uses the Giphy \"special sauce\" to handle translating from one vocabulary to another. In this case, words and phrases to GIFs. Use a plus or url encode for phrases.", "video_details_for_youtube": "Video Details"}, "aseqs": [{"api_name": "get_cards_collection_for_lost_ark_simple", "api_action": "\nAction: get_cards_collection_for_lost_ark_simple\nAction Input: {}", "api_reaction": null}, {"api_name": "get_weapon_recipes_for_lost_ark_simple", "api_action": "\nAction: get_weapon_recipes_for_lost_ark_simple\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_cards_collection_for_lost_ark_simple"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_weapon_recipes_for_lost_ark_simple", "api_action": "\nAction: get_weapon_recipes_for_lost_ark_simple\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cards_collection_for_lost_ark_simple"}}]}
{"URL": "67355", "query": "I'm planning a trip to France and would like to know the details of the cities in the country. Please provide me with the cities in France with a population between 100,000 and 1,000,000. Also, give me the country details of France.", "api_names": ["get_country_details_for_geoapi", "get_cities_in_a_country_for_geoapi", "Finish", "get_all_city_names_for_kfc_locations", "stock_institution_ownership_for_yahoo_finance_v2", "get_user_s_information_for_bespoke_diet_generator", "iex_short_interest_list_for_investors_exchange_iex_trading", "listing_prices_for_airbnb_listings", "contours_vector_tiles_for_maptoolkit", "get_all_characters_for_star_wars_characters", "schedule_by_date_for_os_sports_perform", "get_news_for_epic_games_store"], "api_descs": {"Finish": "No description available.", "contours_vector_tiles_for_maptoolkit": "Global Contourlines.", "get_all_characters_for_star_wars_characters": "Get all characters with all details", "get_all_city_names_for_kfc_locations": "GET all City names", "get_cities_in_a_country_for_geoapi": "Get cities in a country based on population.", "get_country_details_for_geoapi": "Get details of country from its name and prefix.", "get_news_for_epic_games_store": "Get list of all news on the platform.", "get_user_s_information_for_bespoke_diet_generator": "Retrieve the information of the user with the matching user ID.", "iex_short_interest_list_for_investors_exchange_iex_trading": "Consolidated market short interest positions in all IEX-listed securities", "listing_prices_for_airbnb_listings": "Retrieve listing prices for the requested month", "schedule_by_date_for_os_sports_perform": "Get event schedule by date", "stock_institution_ownership_for_yahoo_finance_v2": "Get stock institution ownership."}, "aseqs": [{"api_name": "get_cities_in_a_country_for_geoapi", "api_action": "\nAction: get_cities_in_a_country_for_geoapi\nAction Input: {\n  \"country_iso2\": \"FR\",\n  \"population_min\": 100000,\n  \"population_max\": 1000000\n}", "api_reaction": null}, {"api_name": "get_country_details_for_geoapi", "api_action": "\nAction: get_country_details_for_geoapi\nAction Input: {\n  \"name\": \"France\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_cities_in_a_country_for_geoapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_details_for_geoapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cities_in_a_country_for_geoapi"}}]}
{"URL": "46399", "query": "I recently placed an order for translation services with Nitro. Can you provide me with the details of my specific order? I need information about the order ID, source language, target language, and the rate charged for the translation.", "api_names": ["account_for_nitro", "get_all_orders_for_nitro", "Finish", "rates_for_nitro", "get_a_specific_order_for_nitro", "find_by_udprn_for_find_by_udprn", "create_for_sudoku_all_purpose_pro", "get_configuration_for_judge0_ce", "trending_for_youtube_v3_alternative", "get_specified_users_micros_for_geeklist", "start_end_date_to_time_for_epoch_converter", "author_author_abs_for_poetry_db", "uuid_to_name_for_minecraft_uuid_converter", "get_the_top_30_of_github_repos_based_on_a_query_for_leo_github_api_scraper", "goo_translate_languages_for_cheap_translate", "metrics_ohlcv_futures_pro_for_cryptocurrency_financial_data", "get_coin_by_slug_for_is_this_coin_a_scam", "enumeratesubsitesofsite_for_ishan", "genres_for_streamlinewatch_streaming_guide", "orgcode_cards_for_test2"], "api_descs": {"Finish": "No description available.", "account_for_nitro": "This endpoint retrieves an account.", "author_author_abs_for_poetry_db": "All poems by a specific author", "create_for_sudoku_all_purpose_pro": "Image output is base64 encoded! See https://myv.at/api/sudoku/code-examples/ how to decode back to HTML, SVG, JPG, PNG, GIF, WEBP easily!", "enumeratesubsitesofsite_for_ishan": " ", "find_by_udprn_for_find_by_udprn": "“Find By UDPRN” API gets address for the specified UDPRN.\n\nUDPRN stands for ‘Unique Delivery Point Reference Number. A UDPRN is a unique numeric code (e.g. 64983) for any premise on the Postcode Address File.\n\nThis API uses the latest PAF and Multiple Residence data from Royal Mail.UDPRN are unique identifiers for every address in the UK that Royal Mail has in its database.", "genres_for_streamlinewatch_streaming_guide": "Return a list of all genres", "get_a_specific_order_for_nitro": "This endpoint retrieves a specific order.", "get_all_orders_for_nitro": "This endpoint retrieves all account orders.", "get_coin_by_slug_for_is_this_coin_a_scam": "Get a specific coin by slug", "get_configuration_for_judge0_ce": "Configuration information gives you detailed information about the configuration of Judge0.", "get_specified_users_micros_for_geeklist": "", "get_the_top_30_of_github_repos_based_on_a_query_for_leo_github_api_scraper": "Get the top 30 of Github repos based on a query", "goo_translate_languages_for_cheap_translate": "Get all Goog supported language", "metrics_ohlcv_futures_pro_for_cryptocurrency_financial_data": "Price and volume metrics for futures markets", "orgcode_cards_for_test2": "Returns a list of cards for the given session. User authentication is required.", "rates_for_nitro": "This endpoint retrieves all rates.", "start_end_date_to_time_for_epoch_converter": "Convert datetime to get start timestamp and end timestamp. (year, month, day Hours:Minutes:Seconds) -> 1674864000.0, 1674950399.0", "trending_for_youtube_v3_alternative": "Get trending videos of the particular geo", "uuid_to_name_for_minecraft_uuid_converter": "Convert your Mineccraft UUID to a Name"}, "aseqs": [{"api_name": "get_all_orders_for_nitro", "api_action": "\nAction: get_all_orders_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "account_for_nitro", "api_action": "\nAction: account_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "get_a_specific_order_for_nitro", "api_action": "\nAction: get_a_specific_order_for_nitro\nAction Input: {\n  \"is_id\": \"SOME_ORDER_ID\"\n}", "api_reaction": null}, {"api_name": "rates_for_nitro", "api_action": "\nAction: rates_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro", "api_action": "\nAction: get_a_specific_order_for_nitro\nAction Input: {\n  \"is_id\": \"SOME_ORDER_ID\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro", "api_action": "\nAction: get_a_specific_order_for_nitro\nAction Input: {\n  \"is_id\": \"SOME_ORDER_ID\"\n}", "api_reaction": null}}]}
{"URL": "84398", "query": "I'm curious to know the default values and details of an Instagram user. It would be great if you could fetch this information for me. Thank you!", "api_names": ["instagram_user_for_user", "Finish", "ott_providers_for_ott_details", "getlearningresources_for_azure_smartable", "get_watches_from_reference_number_for_watchsignals", "events_for_events_linz", "treeequivalent_for_carbonfootprint", "webchain_for_webchain"], "api_descs": {"Finish": "No description available.", "events_for_events_linz": "Retrieves events in Linz, Austria", "get_watches_from_reference_number_for_watchsignals": "Get watches from reference number", "getlearningresources_for_azure_smartable": "Get Azure learning resources", "instagram_user_for_user": "Here you can find the default value of an Instagram users details and test your API successfully.", "ott_providers_for_ott_details": "Get  information on OTT platforms we suuport .", "treeequivalent_for_carbonfootprint": "Calculate how many trees it took to create paper.", "webchain_for_webchain": "WEBCHAIN: A Blockchain for DApps, Secured via Websites"}, "aseqs": [{"api_name": "instagram_user_for_user", "api_action": "\nAction: instagram_user_for_user\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "instagram_user_for_user"}}, {"state": "generated_by_agent", "aseq": {"api_name": "instagram_user_for_user"}}]}
{"URL": "65983", "query": "I am developing a real-time lightning roulette game and I need to integrate live data into it. Can you provide me with the latest outcome data and the history of the last 30 spins? This will help me ensure that my game is fast, reliable, and up-to-date. Thank you!", "api_names": ["history_for_xxxtremelightningrouletteapi", "latest_outcome_for_xxxtremelightningrouletteapi", "Finish", "trader_grades_for_crypto_market_data_from_token_metrics", "capture_for_website_screenshot_or_thumbnail", "hsdb_for_card_databse", "getpostcode_for_uk_postcode", "get_synthesize_for_speakeasy", "list_all_simulations_for_geolocation_simulation_for_mobile_apps", "g_olocaliser_les_partenaires_for_partenaires_mobilis", "stock_splits_for_freedom_finance", "genre_for_list_movies"], "api_descs": {"Finish": "No description available.", "capture_for_website_screenshot_or_thumbnail": "Capture screenshot from any URL or Raw HTML. POST method is also available. Please take a look https://restpack.io/screenshot/docs", "g_olocaliser_les_partenaires_for_partenaires_mobilis": "Récupérer tous les partenaires, ou récupérer tous les partenaires dans un rayon donné autour d'un point donné :\n\n- **nearByLon**= {longitude du centre du cercle de la zone de recherche}\n- **nearByLat**= {latitude du centre du cercle de la zone de recherche}\n- **nearByDistance**= {rayon du cercle de la zone de recherche}", "genre_for_list_movies": "Used to filter by a given genre (See http://www.imdb.com/genre/ for full list)", "get_synthesize_for_speakeasy": "Synthesizes the provided text and returns the corresponding audio URL.", "getpostcode_for_uk_postcode": "Find an exact match for a given post code.", "history_for_xxxtremelightningrouletteapi": "Histories of the last 30 spins", "hsdb_for_card_databse": "HSDB", "latest_outcome_for_xxxtremelightningrouletteapi": "last spin details and Outcome Data", "list_all_simulations_for_geolocation_simulation_for_mobile_apps": "", "stock_splits_for_freedom_finance": "List all stock splits for given stock symbol", "trader_grades_for_crypto_market_data_from_token_metrics": "Access Trader Grades for tokens"}, "aseqs": [{"api_name": "latest_outcome_for_xxxtremelightningrouletteapi", "api_action": "\nAction: latest_outcome_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_xxxtremelightningrouletteapi", "api_action": "\nAction: history_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_xxxtremelightningrouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi"}}]}
{"URL": "63764", "query": "I want to explore news articles in various categories from different regions. Fetch news articles related to entertainment, general news, and sports from the United States, China, and Japan.", "api_names": ["available_regions_for_ai_news_global", "get_news_for_ai_news_global", "Finish", "songkick_search_artist_for_theclique", "specific_giveaway_details_for_gamerpower", "get_video_without_the_watermark_for_tiktok_data", "marks_men_for_scoring_tables_api", "responses_for_moodring", "countrylist_for_arabiccountrylist", "consulta_unificada_for_consulta_cnpj_gr_tis", "request_all_eu_vat_rates_for_vatlayer", "autocomplete_localities_for_autocomplete_india", "word_of_the_day_from_ld_for_word_of_the_day", "10_year_historical_daily_prices_for_stock_prices", "album_for_deezer"], "api_descs": {"10_year_historical_daily_prices_for_stock_prices": "10 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "album_for_deezer": "An album object", "autocomplete_localities_for_autocomplete_india": "Autocomplete Localities", "available_regions_for_ai_news_global": "Get all available regions.", "consulta_unificada_for_consulta_cnpj_gr_tis": "Retorna todos os dados presentes no Comprovante de Inscrição do Cadastro Nacional da Pessoa Jurídica junto a Receita Federal", "countrylist_for_arabiccountrylist": "Get Arabic & English Country list", "get_news_for_ai_news_global": "Get News by region.", "get_video_without_the_watermark_for_tiktok_data": "Get direct post url to the video without watermark", "marks_men_for_scoring_tables_api": "This retrieves all men's marks from the World Athletics Scoring Tables.", "request_all_eu_vat_rates_for_vatlayer": "Use the API's \"rate_list\" endpoint to obtain standard & reduced VAT rates for all 28 current member states", "responses_for_moodring": "Get all responses to the quizzes", "songkick_search_artist_for_theclique": "Enter the name of the artist.\nFor example, ed sheran", "specific_giveaway_details_for_gamerpower": "Get details from a specific giveaway (insert giveaway id).", "word_of_the_day_from_ld_for_word_of_the_day": "Get word of the day from ld"}, "aseqs": [{"api_name": "available_regions_for_ai_news_global", "api_action": "\nAction: available_regions_for_ai_news_global\nAction Input: {}", "api_reaction": null}, {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"us\",\n  \"version\": \"v1\"\n}", "api_reaction": null}, {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"cn\",\n  \"version\": \"v1\"\n}", "api_reaction": null}, {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"jp\",\n  \"version\": \"v1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"us\",\n  \"category\": \"entertainment,general,sports\",\n  \"version\": \"v1\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"jp\",\n  \"version\": \"v1\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"regions\": [\n    \"us\",\n    \"cn\",\n    \"jp\"\n],\n  \"categories\": [\n    \"entertainment\",\n    \"general-news\",\n    \"sports\"\n]\n}", "api_reaction": null}}]}
{"URL": "64485", "query": "I'm a student working on a project about the transportation system in Senegal. Can you provide me with a list of airports in the country? Please include their names, locations, and time zones. Additionally, I would like to know the distance between each airport and the nearest hospital.", "api_names": ["facilities_lookup_for_senegal_api", "Finish", "search_fighter_stats_by_age_for_mma_stats", "categories_v2_list_for_sephora", "pesquisa_por_campo_for_lista_de_empresas_por_segmento", "leaguehomestandings_for_handballapi", "get_categories_for__demo_project_v2", "get_data_by_id_for_scrapemaster"], "api_descs": {"Finish": "No description available.", "categories_v2_list_for_sephora": "List categories", "facilities_lookup_for_senegal_api": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "get_categories_for__demo_project_v2": " ", "get_data_by_id_for_scrapemaster": "This endpoint will return all data from a specific tag and its id.", "leaguehomestandings_for_handballapi": "Get home standings for a handball unique tournament and season", "pesquisa_por_campo_for_lista_de_empresas_por_segmento": "Busque uma lista de empresas utilizando outros campos, como:  **nome, email, telefone, socio, cep**.\nCampos retornados: CNPJ, localização, UF, Cidade, bairro, nome fantasia e razão social.", "search_fighter_stats_by_age_for_mma_stats": "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their age. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more."}, "aseqs": [{"api_name": "facilities_lookup_for_senegal_api", "api_action": "\nAction: facilities_lookup_for_senegal_api\nAction Input: {\n  \"region\": \"Senegal\",\n  \"type\": \"aerodrome\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_senegal_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_senegal_api"}}]}
{"URL": "19677", "query": "I want to analyze the credit quality of my ETF investment with the security ID F00000O2CG. Can you provide me with the recent investment rating change, highest rated investments, and product involvement? Also, list the latest articles and news related to this investment.", "api_names": ["Finish", "type_sustainability_get_product_involvement_for_morning_star", "type_parent_get_recent_investment_rating_change_for_morning_star", "news_list_for_morning_star", "live_score_for_cricket", "get_by_origin_for_house_plants", "get_channel_polls_for_kick_com_api_kick_api", "leagues_for_sports_betting_api", "all_countries_for_europe_fuel_prices", "speechapi_health_for_open", "convert_from_one_unit_to_another_for_measurement_unit_converter", "api_v2_user_addresses_for_changenow_crypto_exchange", "logoutuser_for_freeplanwithhardlimit", "latest_coupons_for_27coupons", "memre_api_v1_users_user_id_learning_stats_for_learning_engine", "get_media_links_for_watch_database", "getspecialcompetitionview_for_betsports", "get_list_of_currency_exchanges_for_currencygenie", "https_customer_for_customer", "news_list_for_flixster"], "api_descs": {"Finish": "No description available.", "all_countries_for_europe_fuel_prices": "Get all of Europe countries Fuel prices", "api_v2_user_addresses_for_changenow_crypto_exchange": "This API endpoint returns a list of addresses bound to address name.\n \n<h3>Successful response:</h3>\n\t<p>The response contains an array of addresses bound to address name.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>success</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a request was processed successfully</td>\n    </tr>\n    <tr>\n        <td><b><i>addresses</i></b></td>\n        <td><i>Array</i></td>\n        <td>Array of addresses for requested fio-address or unstoppable-domain</td>\n    </tr>\n    <tr>\n        <td><b><i>currency</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker in naming space of his protocol</td>\n    </tr>\n    <tr>\n        <td><b><i>chain</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency chain in naming space of his protocol</td>\n    </tr>\n    <tr>\n        <td><b><i>address</i></b></td>\n        <td><i>String</i></td>\n        <td>Real address for requested fio-address or unstoppable-domain</td>\n    </tr>\n    <tr>\n        <td><b><i>protocol</i></b></td>\n        <td><i>String</i></td>\n        <td>Protocol of current address</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>", "convert_from_one_unit_to_another_for_measurement_unit_converter": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.", "get_by_origin_for_house_plants": "Get plants by their origin.", "get_channel_polls_for_kick_com_api_kick_api": "Get Channel Polls", "get_list_of_currency_exchanges_for_currencygenie": "Performs GET request for getting list of currencies", "get_media_links_for_watch_database": "Get Media Links", "getspecialcompetitionview_for_betsports": "getSpecialCompetitionView data", "https_customer_for_customer": "https://Customer", "latest_coupons_for_27coupons": "", "leagues_for_sports_betting_api": "League List", "live_score_for_cricket": "to view live score", "logoutuser_for_freeplanwithhardlimit": "", "memre_api_v1_users_user_id_learning_stats_for_learning_engine": "Get the most effective times of day for a user to study.\n", "news_list_for_flixster": "List latest news", "news_list_for_morning_star": "List latest news", "speechapi_health_for_open": " ", "type_parent_get_recent_investment_rating_change_for_morning_star": "Get recent investment rating change as displayed in the Parent tab", "type_sustainability_get_product_involvement_for_morning_star": "Get product involvement in the Sustainability tab"}, "aseqs": [{"api_name": "type_parent_get_recent_investment_rating_change_for_morning_star", "api_action": "\nAction: type_parent_get_recent_investment_rating_change_for_morning_star\nAction Input: {\n  \"type\": \"etf\",\n  \"securityid\": \"F00000O2CG\"\n}", "api_reaction": null}, {"api_name": "type_sustainability_get_product_involvement_for_morning_star", "api_action": "\nAction: type_sustainability_get_product_involvement_for_morning_star\nAction Input: {\n  \"type\": \"etf\",\n  \"securityid\": \"F00000O2CG\"\n}", "api_reaction": null}, {"api_name": "news_list_for_morning_star", "api_action": "\nAction: news_list_for_morning_star\nAction Input: {\n  \"performanceid\": \"F00000O2CG\"\n}", "api_reaction": null}, {"api_name": "news_list_for_morning_star", "api_action": "\nAction: news_list_for_morning_star\nAction Input: {\n  \"performanceid\": \"F00000O2CG\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "type_parent_get_recent_investment_rating_change_for_morning_star"}}, {"state": "generated_by_agent", "aseq": {"api_name": "type_sustainability_get_product_involvement_for_morning_star"}}, {"state": "generated_by_agent", "aseq": {"api_name": "type_parent_get_recent_investment_rating_change_for_morning_star"}}, {"state": "generated_by_agent", "aseq": {"api_name": "type_parent_get_recent_investment_rating_change_for_morning_star", "api_action": "\nAction: type_parent_get_recent_investment_rating_change_for_morning_star\nAction Input: {\n  \"type\": \"etf\",\n  \"securityid\": \"F00000O2CG\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "type_parent_get_recent_investment_rating_change_for_morning_star", "api_action": "\nAction: type_parent_get_recent_investment_rating_change_for_morning_star\nAction Input: {\n  \"type\": \"etf\",\n  \"securityid\": \"F00000O2CG\"\n}", "api_reaction": null}}]}
{"URL": "25419", "query": "I need the subtitle for a YouTube video with the video ID 'hKmqP6-TcWA' in SRT format. Please provide the subtitle in the default language of the video. Additionally, I want to download an mp3 from the same video. Can you give me the download link?", "api_names": ["Finish", "get_subtitle_in_json_format_for_subtitles_for_youtube_v2", "download_mp3_for_subtitles_for_youtube_v2", "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2", "real_time_price_for_twelve_data", "search_for_shopify_stores_info", "getlearningresources_for_azure_smartable", "fighter_for_spectation_sports_events_api", "gives_the_bmi_when_you_input_values_in_imperial_units_feet_inches_pounds_for_bmi_v2", "movie_details_json_for_yts_am_torrent", "search_for_linkedin_profiles", "search_company_by_email_for_b2bhint", "get_complete_package_list_for_winget_api", "free_to_play_for_steam_store_api", "get_cities_for_geography", "double_name_short_for_nameforge", "keto_recipes_by_difficulty_for_keto_diet", "getfileslist_for_groupdocs_metadata_cloud", "player_performance_details_for_transfermarkt_db", "get_status_cat_image_for_http_status_cats"], "api_descs": {"Finish": "No description available.", "double_name_short_for_nameforge": "Create double name.\nMax query length is 25 characters.", "download_mp3_for_subtitles_for_youtube_v2": "Download mp3 from youtube video.", "fighter_for_spectation_sports_events_api": "Get a single fighter by ID", "free_to_play_for_steam_store_api": "Get a full list of free to play games and other free products.", "get_cities_for_geography": "Get details about cities", "get_complete_package_list_for_winget_api": "Get all available packages in database by ID.", "get_status_cat_image_for_http_status_cats": "", "get_subtitle_in_json_format_for_subtitles_for_youtube_v2": "Get subtitle as a JSON object", "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2": "Get subtitle in SRT format", "getfileslist_for_groupdocs_metadata_cloud": " ", "getlearningresources_for_azure_smartable": "Get Azure learning resources", "gives_the_bmi_when_you_input_values_in_imperial_units_feet_inches_pounds_for_bmi_v2": "The API generates the BMI in kg/m2 when the height is entered in feet and inches and weight is entered in pounds.", "keto_recipes_by_difficulty_for_keto_diet": "Gives all keto recipes by its difficulty (Easy, Medium or Difficult).", "movie_details_json_for_yts_am_torrent": "Returns the information about a specific movie", "player_performance_details_for_transfermarkt_db": "Get player performance details", "real_time_price_for_twelve_data": "This endpoint is a lightweight method that allows retrieving only the real-time price of the selected instrument.", "search_company_by_email_for_b2bhint": "Search for a company by email will return a list of companies that match the selected email", "search_for_linkedin_profiles": "Search company or profile", "search_for_shopify_stores_info": "In this endpoint you can search any particular Niche, or keyword for more narrowed results."}, "aseqs": [{"api_name": "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2", "api_action": "\nAction: get_subtitle_in_srt_format_for_subtitles_for_youtube_v2\nAction Input: {\n  \"videoid\": \"hKmqP6-TcWA\"\n}", "api_reaction": null}, {"api_name": "download_mp3_for_subtitles_for_youtube_v2", "api_action": "\nAction: download_mp3_for_subtitles_for_youtube_v2\nAction Input: {\n  \"videoid\": \"hKmqP6-TcWA\"\n}", "api_reaction": null}, {"api_name": "download_mp3_for_subtitles_for_youtube_v2", "api_action": "\nAction: download_mp3_for_subtitles_for_youtube_v2\nAction Input: {\n  \"videoid\": \"hKmqP6-TcWA\"\n}", "api_reaction": null}, {"api_name": "get_subtitle_in_json_format_for_subtitles_for_youtube_v2", "api_action": "\nAction: get_subtitle_in_json_format_for_subtitles_for_youtube_v2\nAction Input: {\n  \"videoid\": \"hKmqP6-TcWA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "download_mp3_for_subtitles_for_youtube_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2", "api_action": "\nAction: get_subtitle_in_srt_format_for_subtitles_for_youtube_v2\nAction Input: {\n  \"videoid\": \"hKmqP6-TcWA\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_subtitle_in_srt_format_for_subtitles_for_youtube_v2", "api_action": "\nAction: get_subtitle_in_srt_format_for_subtitles_for_youtube_v2\nAction Input: {\n  \"videoid\": \"hKmqP6-TcWA\"\n}", "api_reaction": null}}]}
{"URL": "84333", "query": "I'm planning to write a book about famous historical figures. Can you provide me with a list of up to 10 people that match the search parameters? I'm particularly interested in those who were awarded and held office. Also, include their notable works and resting places.", "api_names": ["v1_historicalfigures_for_historical_figures_by_api_ninjas", "Finish", "flightstatistics_for_flightera_flight_data", "b2b_travel_portal_development_with_api_integration_for_travel_api_s", "social_media_news_in_french_for_onelike", "hotel_info_for_hotels_com_provider", "independent_albums_for_billboard_api_v2", "flight_for_flight_flight_aggregator"], "api_descs": {"Finish": "No description available.", "b2b_travel_portal_development_with_api_integration_for_travel_api_s": "TravelPD offers affordable travel portal development solutions with travel API integration and travel portal software. ", "flight_for_flight_flight_aggregator": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "flightstatistics_for_flightera_flight_data": "Returns statistics for a flight number with one entry per route flown. Statistics are updated daily.\nThe query can be filtered by route.\nStatistics are always as of today, please contact us if you require historical statistics.", "hotel_info_for_hotels_com_provider": "Get hotel info", "independent_albums_for_billboard_api_v2": "Independent Albums chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week", "social_media_news_in_french_for_onelike": "Get social media news in French", "v1_historicalfigures_for_historical_figures_by_api_ninjas": "API Ninjas Historical Figures API endpoint. Returns a list of up to 10 people that match the search parameters. Either **name** and/or **title** parameter is required."}, "aseqs": [{"api_name": "v1_historicalfigures_for_historical_figures_by_api_ninjas", "api_action": "\nAction: v1_historicalfigures_for_historical_figures_by_api_ninjas\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_historicalfigures_for_historical_figures_by_api_ninjas"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_historicalfigures_for_historical_figures_by_api_ninjas", "api_action": "{\"name\": \"awarded\", \"officeheld\": true}", "api_reaction": null}}]}
{"URL": "33540", "query": "I'm developing a mobile app and I need to verify phone numbers. Is there an API that can globally verify phone numbers? It should return the phone's validity, type, region, country, and carrier information. Additionally, it would be helpful if the API can provide an example phone number for any country.", "api_names": ["verify_for_veriphone", "example_for_veriphone", "Finish", "sms_for_insafel", "get_hebrew_month_for_enoch_calendar", "specified_users_data_for_geeklist", "get_quotes_by_anime_title_for_anime_quotes_v4", "vol_strike_for_kiann_options_project", "recent_trades_list_for_crypto_markets", "search_pro_for_streaming_availability", "v1_search_for_newscatcher", "ideal_weight_for_fitness_calculator"], "api_descs": {"Finish": "No description available.", "example_for_veriphone": "Get an example phone number for any country", "get_hebrew_month_for_enoch_calendar": "Get Hebrew Month from supplied date string or today's date", "get_quotes_by_anime_title_for_anime_quotes_v4": "Get quotes by anime title", "ideal_weight_for_fitness_calculator": "Find four different ideal weight scores according to four different well-known equations which are Hamwi, Devine, Miller, Robinson.  There are two parameters which are age and height(cm) values.", "recent_trades_list_for_crypto_markets": "Recent Trades List", "search_pro_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "sms_for_insafel": "Send", "specified_users_data_for_geeklist": "", "v1_search_for_newscatcher": "Highly customizable search through our database. All filters and sorting options are allowed.", "verify_for_veriphone": "Global phone number verification", "vol_strike_for_kiann_options_project": "This function generates the implied-volatility (lognormal) for a given, specified delta. The convention works with delta of 0.10 is specified via 0.90 in the argument, as we generate the delta from a 'call option' function.\n\nThis is the standard function to generate the 25-delta and 10-delta risk-reversals and butterfly which provides the market-conventions for the volatility-skew and volatility-smile.\n\nstrike_: List  of absolute strikes,\n vols_:  List of lognormal annualized volatilities,\nr_: float of risk-free-rate,\nS_: float of the spot:\nT_ : the time-to-expiry of the option\ndelta_target: float, the desired delta where you want the implied volatility"}, "aseqs": [{"api_name": "example_for_veriphone", "api_action": "\nAction: example_for_veriphone\nAction Input: {}", "api_reaction": null}, {"api_name": "verify_for_veriphone", "api_action": "\nAction: verify_for_veriphone\nAction Input: {\n  \"phone\": \"+44 7400 123456\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to find an API that can globally verify phone numbers and provide the requested information along with an example phone number for any country.\n\t\"api_name\": \"example_for_veriphone\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "verify_for_veriphone"}}, {"state": "generated_by_agent", "aseq": {"api_name": "verify_for_veriphone"}}]}
{"URL": "87019", "query": "Help me find the registered auditor linked to the ROAC code '123DEF'. I would appreciate it if you could provide me with the document type, name, and the dates of registration and deactivation for this auditor.", "api_names": ["api_auditores_roac_roac_sociedad_for_roac", "Finish", "blogs_for_spaceflight_news", "historical_for_exchange_rates_api_", "api_v2_list_of_all_available_pairs_for_changenow_crypto_exchange", "quarterly_cashflow_statements_for_freedom_finance", "get_server_time_for_yandex_serp", "get_artists_for_spotify_web"], "api_descs": {"Finish": "No description available.", "api_auditores_roac_roac_sociedad_for_roac": "asd", "api_v2_list_of_all_available_pairs_for_changenow_crypto_exchange": "<p>This API endpoint returns the list of all available pairs. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.</p>\n<p>Notice that the resulting array will contain about 13000 pairs.</p>\n\n<h3>Successful response:</h3>\n<p>The response contains an array of underscore separated pair of tickers.</p>\n\n<h3>Request Parameters:</h3>", "blogs_for_spaceflight_news": " ", "get_artists_for_spotify_web": "Get one or more artists", "get_server_time_for_yandex_serp": "Returns server time.", "historical_for_exchange_rates_api_": "This endpoint returns historical rates for any working day since 4 January 1999.\n\nGET /1999-01-04 HTTP/1.1\nYou can again tweak the response using the from and to parameters.", "quarterly_cashflow_statements_for_freedom_finance": "Quarterly cashflow statements"}, "aseqs": [{"api_name": "api_auditores_roac_roac_sociedad_for_roac", "api_action": "\nAction: api_auditores_roac_roac_sociedad_for_roac\nAction Input: {\n  \"roac\": \"123DEF\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "api_auditores_roac_roac_sociedad_for_roac"}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_auditores_roac_roac_sociedad_for_roac"}}]}
{"URL": "76658", "query": "I'm writing an article on global population trends and need accurate data. Can you provide me with the current world population count? Additionally, can you give me the population count of Egypt and its readable format?", "api_names": ["get_population_for_get_population", "get_country_population_for_get_population", "Finish", "get_chapter_for_bible_memory_verse_flashcard", "getfunctions_for_powerbi", "facebook_for_check_username", "get_api_tag_for_aaaa", "get_trending_result_for_google_trends_us", "bmi_for_bmi_calculator_v2", "healthcheck_for_fortune_cookie", "analyze_text_for_sentiment_analysis_service", "hashtag_feed_for_instagram_api_v2", "get_company_quote_price_data_for_stoxx", "get_artists_for_spotify_v3", "getwebhookresultsunseenerrorcount_for_mailslurp_email_testing"], "api_descs": {"Finish": "No description available.", "analyze_text_for_sentiment_analysis_service": "Determine the sentiment of a given body of text", "bmi_for_bmi_calculator_v2": "Calculate BMI using weight and height.", "facebook_for_check_username": "Check username on Facebook", "get_api_tag_for_aaaa": "Get Tag information for a specific API", "get_artists_for_spotify_v3": "Get one or more artists", "get_chapter_for_bible_memory_verse_flashcard": "Takes parameters and returns one chapter for chosen bookname", "get_company_quote_price_data_for_stoxx": "Retrieve updated quote and pricing data for a given company. This endpoint provides you with:\n\n- Symbol\n- Company Name\n- Exchange\n- High\n- Low\n- Close\n- PE\n- Volume\n- Market Cap\n- Datetime", "get_country_population_for_get_population": "Get country population.", "get_population_for_get_population": "Get world population.", "get_trending_result_for_google_trends_us": "Gives you an array of trending search result.", "getfunctions_for_powerbi": "Get Power BI DAX functions.", "getwebhookresultsunseenerrorcount_for_mailslurp_email_testing": " ", "hashtag_feed_for_instagram_api_v2": "It shows the content which is shared on Instagram with a specific hashtag, the first query does not need maxid, but if you want to get the rest of results you need to send it, and it can be taken from previous call as a next_max_id in Json response.\nfor example:\n\"next_max_id\": \"QVFBeHItQXBZTHZPdEdNM2RLTmFtODJEZXpkUVIwbktBWDFscFQ5SFIyZTlodWU3bFZ6RXJmaURNMGJGYk1BbFk1WjIzdzlITGJzRjBkM2lNZ2lwZ2s2TA==\"", "healthcheck_for_fortune_cookie": "The health check endpoint will return a status of 200 if the api is up and ready to recieve connections. It will tell the uptime, and total requests served since last restart. It also has a field for version which corresponds to the versioned release from the github repo.  \n"}, "aseqs": [{"api_name": "get_population_for_get_population", "api_action": "\nAction: get_population_for_get_population\nAction Input: {}", "api_reaction": null}, {"api_name": "get_country_population_for_get_population", "api_action": "\nAction: get_country_population_for_get_population\nAction Input: {\n  \"country\": \"Egypt\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_population_for_get_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_population_for_get_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_population_for_get_population"}}]}
{"URL": "85813", "query": "I'm looking for relevant businesses in my area. Can you help me find them? I need a list of at least 20 businesses based on my phone number, which is 416-228-7300. Please use the standard_v1 package for the search. Thank you!", "api_names": ["business_phone_search_for_data_axle_business_phone_search", "Finish", "all_codes_postaux_for_bps", "time_series_for_metals_prices_rates_api", "video_for_tiktok_video_downloader", "products_for_prueba", "get_pokemon_data_by_name_for_pokemon_unite_pokemons", "cards_by_quality_for_hearthstone", "v1_for_versioning_free", "infoproductlisting_for_ecartapi", "minimum_rating_for_list_movies", "get_all_cities_for_biggest_cities"], "api_descs": {"Finish": "No description available.", "all_codes_postaux_for_bps": "Tous les codes postaux.", "business_phone_search_for_data_axle_business_phone_search": "Find relevant businesses in the Data Axle database", "cards_by_quality_for_hearthstone": "Returns all the cards of a certain quality. Example values: Legendary, Common.", "get_all_cities_for_biggest_cities": "Get all cites", "get_pokemon_data_by_name_for_pokemon_unite_pokemons": "Get Pokemon data sing the pokemon name", "infoproductlisting_for_ecartapi": " ", "minimum_rating_for_list_movies": "Used to filter movie by a given minimum IMDb rating", "products_for_prueba": "Prueba de servicio products", "time_series_for_metals_prices_rates_api": "Timeseries endpoint lets you query the API for daily historical rates between two dates of your choice.\nThis endpoint has a limitation of 365 days and only one symbol per request.", "v1_for_versioning_free": "v1", "video_for_tiktok_video_downloader": "This will return  the details of video and download link"}, "aseqs": [{"api_name": "business_phone_search_for_data_axle_business_phone_search", "api_action": "\nAction: business_phone_search_for_data_axle_business_phone_search\nAction Input: {\n  \"limit\": \"20\",\n  \"query\": \"Toronto\",\n  \"packages\": \"standard_v1\"\n}", "api_reaction": null}, {"api_name": "business_phone_search_for_data_axle_business_phone_search", "api_action": "\nAction: business_phone_search_for_data_axle_business_phone_search\nAction Input: {\n  \"limit\": \"20\",\n  \"query\": \"Toronto downtown\",\n  \"packages\": \"standard_v1\"\n}", "api_reaction": null}, {"api_name": "business_phone_search_for_data_axle_business_phone_search", "api_action": "\nAction: business_phone_search_for_data_axle_business_phone_search\nAction Input: {\n  \"limit\": \"20\",\n  \"query\": \"restaurants Toronto downtown\",\n  \"packages\": \"standard_v1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "business_phone_search_for_data_axle_business_phone_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_phone_search_for_data_axle_business_phone_search"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"business_phone_search_for_data_axle_business_phone_search\",\n\t\"api_action\": \"\\nAction: business_phone_search_for_data_axle_business_phone_search\\nAction Input: {\\n  \\\"limit\\\": \\\"20\\\",\\n  \\\"query\\\": \\\"Toronto, ON\\\",\\n  \\\"packages\\\": \\\"standard_v1\\\"\\n}\",\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"business_phone_search_for_data_axle_business_phone_search\",\n\t\"api_action\": \"\\nAction: business_phone_search_for_data_axle_business_phone_search\\nAction Input: {\\n  \\\"limit\\\": \\\"20\\\",\\n  \\\"query\\\": \\\"Toronto,416-228-7300\\\",\\n  \\\"packages\\\": \\\"standard_v1\\\"\\n}\",\n}"}]}
{"URL": "62549", "query": "I'm planning a birthday party for my friend on June 21st. Can you give me a fascinating fact about that day in JSON format?", "api_names": ["get_date_fact_for_numbers", "Finish", "get_call_for_philippines_passport_ocr", "search_v2_for_twitter", "validate_for_phonenumbervalidatefree", "fertility_window_get_for_pregnancy_calculator_api", "chart_referents_for_genius_song_lyrics", "get_top_100_cryptocurrencies_details_for_crypto_update_live"], "api_descs": {"Finish": "No description available.", "chart_referents_for_genius_song_lyrics": "Chart: Referents", "fertility_window_get_for_pregnancy_calculator_api": "This endpoint accepts a GET request to calculate the fertility window.", "get_call_for_philippines_passport_ocr": "Used to fetch api result using the request id received in responses.", "get_date_fact_for_numbers": "Get a fact about a day of year", "get_top_100_cryptocurrencies_details_for_crypto_update_live": "This endpoint gives all the details of the top hundred cryptocurrencies.", "search_v2_for_twitter": "-", "validate_for_phonenumbervalidatefree": "Free and easy. Validate any phone number, from any country.\nGet type of number (for example, fixed line or mobile), the location of the number, and also reformat the number into local and international dialing formats."}, "aseqs": [{"api_name": "get_date_fact_for_numbers", "api_action": "\nAction: get_date_fact_for_numbers\nAction Input: {\n  \"month\": \"6\",\n  \"day\": \"21\",\n  \"json\": \"true\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_date_fact_for_numbers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_date_fact_for_numbers"}}]}
{"URL": "36589", "query": "Is it possible to get the daily zip files of filed 10-q and 10-k reports for the date 2022-11-10? Please show me the available dates with their corresponding subscriptions.", "api_names": ["content_for_daily_sec_financial_statement_dataset", "Finish", "tournament_matches_for_tennis_live_data", "provider2_live_match_id_for_football_betting_odds", "templates_for_meme_generator_and_template_database", "lyrics_get_for_songmeanings", "korean_baby_girl_names_for_korean_baby_name_ranking", "download_track_for_latest_spotify_downloader"], "api_descs": {"Finish": "No description available.", "content_for_daily_sec_financial_statement_dataset": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan", "download_track_for_latest_spotify_downloader": "Download a track by passing the details from the fetch track API", "korean_baby_girl_names_for_korean_baby_name_ranking": "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count.", "lyrics_get_for_songmeanings": "Retrieves lyrics and lyric related data for a specific song.", "provider2_live_match_id_for_football_betting_odds": "get match", "templates_for_meme_generator_and_template_database": "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**.", "tournament_matches_for_tennis_live_data": "Lists matches for a given `tournament_id`. This endpoint is a brief summary of all matches within a tournament without result details or detailed player information - use for quick summary of a given tournament."}, "aseqs": [{"api_name": "content_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: content_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}, {"api_name": "content_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: content_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "content_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "content_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "content_for_daily_sec_financial_statement_dataset"}}]}
{"URL": "85038", "query": "Could you please provide me with the latest cryptocurrency news? I'm interested in reading articles about altcoins, token sales, and the impact of cryptocurrency on the global economy. Your assistance in keeping me informed would be highly appreciated.", "api_names": ["get_last_cryptocurrency_news_for_crypto_news_api", "Finish", "getrandomdate_for_random_chunk_api", "health_for_localization_services", "get_all_postal_code_for_canada_postal_codes", "get_sub_regions_for_world_country", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real", "search_for_agents_for_zillow_v2"], "api_descs": {"Finish": "No description available.", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real": "Gera Mapa dos Arredores", "get_all_postal_code_for_canada_postal_codes": "Get all postal code", "get_last_cryptocurrency_news_for_crypto_news_api": "This end point returns all the latest articles on cryptocurrency", "get_sub_regions_for_world_country": "Get sub region list", "getrandomdate_for_random_chunk_api": "Get random date.", "health_for_localization_services": "Checks health status of services", "search_for_agents_for_zillow_v2": "Search for agents by location and name"}, "aseqs": [{"api_name": "get_last_cryptocurrency_news_for_crypto_news_api", "api_action": "\nAction: get_last_cryptocurrency_news_for_crypto_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_last_cryptocurrency_news_for_crypto_news_api", "api_action": "\nAction: get_last_cryptocurrency_news_for_crypto_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_last_cryptocurrency_news_for_crypto_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_last_cryptocurrency_news_for_crypto_news_api"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_last_cryptocurrency_news_for_crypto_news_api\",\n\t\"api_action\": \"\\nAction: get_last_cryptocurrency_news_for_crypto_news_api\\nAction Input: {}\",\n}"}]}
{"URL": "19619", "query": "I'm a researcher studying the impact of floods in coastal areas. Can you provide me with the list of recent flood disasters in Miami and fetch the affected cities for a specific flood?", "api_names": ["getcityexposedbydisasterid_for_rankiteo_climate_risk_assessment", "Finish", "get_all_districts_of_a_city_in_vietnam_for_viet_nam_administrative_divisions", "search_for_youtube_v3_lite", "domain_information_for_livescan_a_domain", "get_portail_api_for_fluximmo", "search_for_a_champion_for_league_of_legends_galore", "get_apps_from_dev_for_google_play_api", "stations_get_measurements_deprecated_for_airvisual", "ask_stories_for_yc_hacker_news_official", "1_shoot_thumbnail_for_pagepeeker", "realtoragentlist_for_realtor_api_for_real_estate_data"], "api_descs": {"1_shoot_thumbnail_for_pagepeeker": "Issues a reset API call if refresh is set to 1. Else it will download if the image is ready (see endpoint 2.)", "Finish": "No description available.", "ask_stories_for_yc_hacker_news_official": "Up to 200 of the latest Ask HN Stories!", "domain_information_for_livescan_a_domain": "Get data points of a given domain : A record, MX record, TXT/SPF record, SOA record, CMS Type (Generator), Certificate Issuer, Certificate Subject, Certificate Start Date, Certificate End Date, Domain creation date, Domain name (or partial), Domain expire date, Domain updated date, Javascript Libraries, Hostname (or partial), HTML Header Tags,  IP Address, Page title from domain homepage, Page meta tags (including og), Organization, Registrar, TLD, Server software (Apache, PHP, nginx etc), Server geolocation", "get_all_districts_of_a_city_in_vietnam_for_viet_nam_administrative_divisions": "Get all names of districts in a city", "get_apps_from_dev_for_google_play_api": "Returns dev's apps.", "get_portail_api_for_fluximmo": " ", "getcityexposedbydisasterid_for_rankiteo_climate_risk_assessment": "Get affected city along with informations by disaster id", "realtoragentlist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`", "search_for_a_champion_for_league_of_legends_galore": "This will go through the list of champions and return a single champion or a list of champions depending on YOUR request!", "search_for_youtube_v3_lite": "Get search results.\nQuota cost is 1.", "stations_get_measurements_deprecated_for_airvisual": "Get measurements at specific station by its id"}, "aseqs": [{"api_name": "getcityexposedbydisasterid_for_rankiteo_climate_risk_assessment", "api_action": "\nAction: getcityexposedbydisasterid_for_rankiteo_climate_risk_assessment\nAction Input: {\n  \"disaster_id\": \"FL1101228\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": [{"action": "Search for recent flood disasters related to Miami"}, {"action": "Fetch the affected cities from the mentioned flood disaster"}]}, {"state": "generated_by_agent", "aseq": {"api_name": "getrecentfloodevents_for_coclusio_global_flood_watch", "api_action": "\nAction: getrecentfloodevents_for_coclusio_global_flood_watch\nAction Input: {\n  \"location\": \"Miami\"\n}"}}]}
{"URL": "63921", "query": "I want to stay informed about the latest developments in the business world. Please give me the most recent business news and updates.", "api_names": ["business_for_google_news", "latest_for_google_news", "Finish", "get_all_world_footbol_news_live_for_live_world_futbol_news", "order_by_for_list_movies", "keyword_search_for_axesso_kaufland_data_service", "list_file_types_for_smile", "gettopsportmenu_for_sportapi", "food_report_list_deprecated_for_the_fork_the_spoon", "estimate_ownership_cost_for_car_utils", "search_all_schemas_for_mongodb_wix", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius", "prematchform_for_baseballapi", "highlights_for_ig_private_api", "get_player_by_puiid_for_league_of_legends_api", "my_images_by_id_for_arimagesynthesizer", "extract_for_linkedin_profiles", "crypto_arb_for_crypto_arbitrage"], "api_descs": {"Finish": "No description available.", "business_for_google_news": "This endpoint is used to get business news from Google News.", "crypto_arb_for_crypto_arbitrage": "Detects the exchanges with the highest bid and lowest ask for the currency pair provided by the user. Users can allow trading fees (market taker fees from each exchange) to be considered. It returns:\n\n**1- Arbitrage Profit:** The return of a trade where the currency is bought from the exchange with the lowest ask and sold in the exchange with the highest bid. If positive, an arbitrage opportunity has been detected.\n**2- Data for Highest Bid and Lowest Ask Exchanges:**  Exchange name, price, time, volume, and considered fees for both exchanges.\n**3- List of Exchanges Considered**\n\nAllowed pairs:\n['BTC/AUD', 'BTC/CAD', 'BTC/EUR', 'BTC/GBP', 'BTC/HKD', 'BTC/JPY', 'BTC/NZD', 'BTC/SGD', 'BTC/USD', 'BTC/PLN', 'LTC/BTC', 'DASH/BTC', 'DOGE/BTC', 'ETH/BTC', 'XRP/BTC', 'BCH/BTC', 'BCH/USD', 'BTG/BTC', 'BTG/USD', 'DASH/USD', 'ETH/USD', 'LTC/USD', 'BCH/PLN', 'BTG/PLN', 'LTC/PLN', 'ETH/EUR', 'LTC/EUR', 'XRP/USD', 'BTC/CNY', 'BTC/TRY', 'ETC/BTC', 'ETH/TRY', 'BCH/CNY', 'ETH/CNY', 'LTC/CNY', 'BTC/CZK', 'BTC/INR', 'LTC/AUD', 'BTC/BRL', 'BTC/CLP', 'BTC/PKR', 'BTC/VEF', 'BTC/VND', 'BTC/SEK', 'BTC/RUB', 'BCH/UAH', 'BTC/UAH', 'ETH/UAH', 'LSK/BTC', 'ETC/CNY', 'BCH/BRL', 'LTC/BRL', 'XMR/BTC', 'ZEC/BTC', 'BCH/EUR', 'BCH/ETH', 'BTS/BTC', 'GAME/BTC', 'GNT/BTC', 'GNT/ETH', 'NXT/BTC', 'OMG/BTC', 'OMG/ETH', 'PPC/BTC', 'REP/BTC', 'REP/ETH', 'XEM/BTC', 'XLM/BTC', 'ZRX/BTC', 'ZRX/ETH', 'BAT/BTC', 'BAT/ETH', 'CVC/BTC', 'CVC/ETH', 'EOS/BTC', 'EOS/ETH', 'SAN/BTC', 'SAN/ETH', 'SNT/BTC', 'SNT/ETH', 'TRX/BTC', 'TRX/ETH', 'EUR/USD', 'XRP/EUR', 'AMP/BTC', 'ARDR/BTC', 'BCH/USDT', 'BCY/BTC', 'BLK/BTC', 'BTC/USDT', 'BURST/BTC', 'CLAM/BTC', 'CRW/BTC', 'DASH/USDT', 'DCR/BTC', 'DGB/BTC', 'EMC2/BTC', 'ETC/ETH', 'ETC/USDT', 'ETH/USDT', 'EXP/BTC', 'FCT/BTC', 'FLDC/BTC', 'FLO/BTC', 'FUN/BTC', 'FUN/ETH', 'GNO/BTC', 'GNO/ETH', 'GRC/BTC', 'LBC/BTC', 'LTC/USDT', 'MAID/BTC', 'MANA/BTC', 'MANA/ETH', 'NAV/BTC', 'NEO/BTC', 'NEO/ETH', 'NEOS/BTC', 'NXC/BTC', 'NXT/USDT', 'OMNI/BTC', 'PAY/BTC', 'PAY/ETH', 'PINK/BTC', 'POT/BTC', 'QTUM/BTC', 'QTUM/ETH', 'RADS/BTC', 'RCN/BTC', 'RCN/ETH', 'RLC/BTC', 'RLC/ETH', 'SBD/BTC', 'SC/BTC', 'STEEM/BTC', 'STORJ/BTC', 'STRAT/BTC', 'SYS/BTC', 'VIA/BTC', 'VRC/BTC', 'VTC/BTC', 'XCP/BTC', 'XMR/USDT', 'XRP/USDT', 'XVC/BTC', 'ZEC/ETH', 'ZEC/USDT', 'BSD/BTC', 'NMC/BTC', 'PTC/BTC', 'SPK/BTC', 'SPK/USD', 'XMR/USD', 'XVG/BTC', 'BCH/GBP', 'BTG/EUR', 'DASH/EUR', 'ZEC/USD', 'BITB/BTC', 'BTA/BTC', 'BTCD/BTC', 'BTG/ETH', 'DASH/ETH', 'EFL/BTC', 'LTC/ETH', 'MONA/BTC', 'NLG/BTC', 'NVC/BTC', 'OK/BTC', 'RDD/BTC', 'SLR/BTC', 'START/BTC', 'XPM/BTC', 'BTC/MXN', '1ST/BTC', '1ST/ETH', 'ARK/BTC', 'AVT/BTC', 'AVT/ETH', 'AVT/USD', 'BNT/BTC', 'BNT/ETH', 'BT1/BTC', 'BT2/BTC', 'BTG/USDT', 'CMT/BTC', 'CMT/ETH', 'DASH/BCH', 'DAT/BTC', 'DAT/ETH', 'DAT/USD', 'DGB/ETH', 'DGD/BTC', 'DGD/ETH', 'DNT/BTC', 'DNT/ETH', 'EDO/BTC', 'EDO/ETH', 'EDO/USD', 'ELF/BTC', 'ELF/ETH', 'ELF/USD', 'ENG/BTC', 'ENG/ETH', 'EOS/USD', 'ETC/USD', 'FUN/USD', 'GAS/BTC', 'GAS/ETH', 'GNT/USD', 'ICN/BTC', 'ICN/ETH', 'INS/BTC', 'INS/ETH', 'IOTA/BTC', 'IOTA/ETH', 'IOTA/USD', 'LTC/BCH', 'MCO/BTC', 'MCO/ETH', 'NEO/USD', 'NEO/USDT', 'NGC/BTC', 'NGC/ETH', 'OMG/USD', 'OMG/USDT', 'QTUM/USD', 'RCN/USD', 'SALT/BTC', 'SALT/ETH', 'SAN/USD', 'SMT/BTC', 'SMT/USD', 'SNGLS/BTC', 'SNT/USD', 'STORJ/ETH', 'TNB/BTC', 'TNB/ETH', 'TNB/USD', 'TRX/USD', 'UKG/BTC', 'UKG/ETH', 'VIB/BTC', 'VIB/ETH', 'XEM/ETH', 'XLM/ETH', 'XLM/USD', 'XLM/USDT', 'XMR/ETH', 'XRP/ETH', 'ZEN/BTC', 'ZRX/USD', 'AID/BTC', 'AID/ETH', 'AID/USD', 'BAT/USD', 'ETP/BTC', 'ETP/ETH', 'ETP/USD', 'MNA/BTC', 'MNA/ETH', 'MNA/USD', 'REP/USD', 'RLC/USD', 'RRT/BTC', 'RRT/USD', 'SNG/BTC', 'SNG/ETH', 'SNG/USD', 'SPK/ETH', 'YYW/BTC', 'YYW/ETH', 'YYW/USD', 'ADX/BTC', 'ADX/ETH', 'AEON/BTC', 'AMM/BTC', 'AMM/ETH', 'AMM/USDT', 'ANT/BTC', 'ARN/BTC', 'ATL/BTC', 'BCN/BTC', 'BNT/USDT', 'BTM/BTC', 'BTM/ETH', 'BTM/USDT', 'CFI/BTC', 'CFI/ETH', 'CTR/BTC', 'CTR/ETH', 'CTR/USDT', 'CVC/USDT', 'DATA/BTC', 'DATA/ETH', 'DCT/BTC', 'DENT/ETH', 'DGB/USDT', 'DOGE/ETH', 'EDG/BTC', 'EDO/USDT', 'EMC/BTC', 'EOS/USDT', 'EVX/BTC', 'EVX/ETH', 'EVX/USDT', 'FUN/USDT', 'GUP/BTC', 'HSR/BTC', 'ICX/BTC', 'ICX/ETH', 'ICX/USDT', 'KMD/BTC', 'LA/ETH', 'LEND/BTC', 'LEND/ETH', 'LRC/BTC', 'LRC/ETH', 'LSK/ETH', 'LUN/BTC', 'MANA/USDT', 'MCO/USDT', 'MTH/BTC', 'MTH/ETH', 'NGC/USDT', 'OAX/BTC', 'OAX/ETH', 'OAX/USDT', 'POE/BTC', 'POE/ETH', 'PPT/BTC', 'PPT/ETH', 'PTOY/BTC', 'PTOY/ETH', 'QTUM/USDT', 'QVT/ETH', 'REP/USDT', 'SBTC/BTC', 'SMS/BTC', 'SMT/ETH', 'SMT/USDT', 'SNC/BTC', 'SNC/ETH', 'SNC/USDT', 'SNM/ETH', 'SNT/USDT', 'SPF/ETH', 'STRAT/ETH', 'SUB/BTC', 'SUB/ETH', 'SUB/USDT', 'SWFTC/BTC', 'SWFTC/ETH', 'SWFTC/USDT', 'SWT/BTC', 'TIO/BTC', 'TIO/ETH', 'TIO/USDT', 'TIX/ETH', 'TRST/BTC', 'TRX/USDT', 'VIB/USDT', 'VOISE/BTC', 'WAVES/BTC', 'WINGS/BTC', 'WRC/BTC', 'WRC/ETH', 'WRC/USDT', 'WTC/BTC', 'XDN/BTC', 'XEM/USDT', 'XUC/BTC', 'XUC/ETH', 'XUC/USDT', 'XVG/USDT', 'ZRX/USDT', 'ETH/GBP', 'BTC/CHF', 'GBP/USD', 'HMQ/BTC', 'SNM/BTC', 'TIME/BTC', 'TIME/ETH', 'USD/RUB', 'BAY/BTC', 'BBP/BTC', 'BBP/USD', 'DASH/DOGE', 'DOGE/USD', 'ELM/BTC', 'ETH/DOGE', 'EVR/BTC', 'GLD/BTC', 'GRS/BTC', 'HSR/USD', 'IOP/BTC', 'MCAP/BTC', 'MLM/BTC', 'MLM/LTC', 'MLM/USD', 'NVC/DOGE', 'ODN/BTC', 'ORME/BTC', 'OTX/BTC', 'R/BTC', 'RGC/BTC', 'SIB/BTC', 'UNO/BTC', 'UNO/DOGE', 'XAUR/BTC', 'ZSC/BTC', 'BTC/IDR', 'BTC/ZAR', 'DASH/LTC', 'ETH/LTC', 'NVC/USD', 'ZEC/LTC', 'PPC/USD', '1ST/USDT', 'ADX/USDT', 'AE/BTC', 'ANT/ETH', 'AST/BTC', 'AST/ETH', 'AST/USDT', 'BMC/BTC', 'BMC/ETH', 'BMC/USDT', 'DGD/USDT', 'DNT/USDT', 'ENG/USDT', 'GBG/BTC', 'GNT/USDT', 'GOLOS/BTC', 'GUP/ETH', 'HMQ/ETH', 'ICN/USDT', 'INCNT/BTC', 'IND/ETH', 'INS/USDT', 'KNC/BTC', 'KNC/ETH', 'KNC/USDT', 'LUN/ETH', 'MGO/BTC', 'MGO/USDT', 'MLN/BTC', 'NET/ETH', 'PAY/USDT', 'PLU/BTC', 'PLU/ETH', 'PRO/ETH', 'QRL/BTC', 'QRL/ETH', 'REQ/BTC', 'REQ/ETH', 'REQ/USDT', 'SALT/USDT', 'SAN/USDT', 'SNGLS/ETH', 'SNGLS/USDT', 'SNM/USDT', 'STORJ/USDT', 'STX/BTC', 'STX/ETH', 'STX/USDT', 'TAAS/BTC', 'TAAS/ETH', 'TKN/BTC', 'TNT/BTC', 'TNT/ETH', 'TNT/USDT', 'TRST/ETH', 'VEN/BTC', 'VEN/ETH', 'VEN/USDT', 'WAVES/ETH', 'WINGS/ETH', 'XZC/BTC', 'ETH/PLN', 'KICK/BTC', 'USDT/USD', 'ZEC/EUR', 'DASH/RUB', 'ETH/RUB', 'LTC/RUB', 'XMR/EUR', 'ZEC/RUB', 'BTC/PHP', 'ETH/AUD', 'ETH/IDR', 'QASH/BTC', 'QASH/ETH', 'QASH/USD', 'UBTC/BTC', 'UBTC/ETH', 'UBTC/USD', 'XRP/IDR', 'ADA/BTC', 'ADA/USDT', 'AE/ETH', 'AE/USDT', 'ARN/ETH', 'BAT/USDT', 'BCD/BTC', 'BCD/USDT', 'BCX/BTC', 'CDT/ETH', 'CDT/USDT', 'DATA/USDT', 'DOGE/USDT', 'DPY/ETH', 'DPY/USDT', 'DRGN/ETH', 'ELF/USDT', 'FUEL/ETH', 'FUEL/USDT', 'GAS/USDT', 'GNX/ETH', 'GNX/USDT', 'GTC/BTC', 'GTC/ETH', 'HSR/ETH', 'HSR/USDT', 'IOTA/USDT', 'KICK/ETH', 'LEND/USDT', 'LINK/ETH', 'LINK/USDT', 'LRC/USDT', 'LSK/USDT', 'LUN/USDT', 'MDA/ETH', 'MDA/USDT', 'MDT/BTC', 'MDT/ETH', 'MDT/USDT', 'MKR/ETH', 'MKR/USDT', 'NAS/BTC', 'NAS/ETH', 'NAS/USDT', 'OCN/BTC', 'OCN/ETH', 'OST/ETH', 'OST/USDT', 'POWR/BTC', 'POWR/ETH', 'PST/ETH', 'PST/USDT', 'RCN/USDT', 'RDN/ETH', 'RDN/USDT', 'SBTC/USDT', 'THETA/ETH', 'THETA/USDT', 'WAVES/USDT', 'XTZ/USDT', 'ZSC/ETH', 'ZSC/USDT', 'AUD/USD', 'BTC/NGN', 'USD/CAD', 'USD/CHF', 'USD/HKD', 'USD/JPY', 'USD/SGD', 'PPC/EUR', 'AIR/BTC', 'AIR/ETH', 'AIR/USDT', 'ART/BTC', 'ATB/BTC', 'ATB/ETH', 'ATB/USDT', 'ATM/BTC', 'ATM/ETH', 'ATM/USDT', 'ATS/BTC', 'ATS/ETH', 'AVH/BTC', 'B2X/BTC', 'B2X/ETH', 'B2X/USDT', 'BAS/ETH', 'BCN/ETH', 'BCN/USDT', 'BET/ETH', 'BKB/BTC', 'BMT/BTC', 'BMT/ETH', 'BOS/BTC', 'BQX/BTC', 'BQX/ETH', 'BQX/USDT', 'BTCA/BTC', 'BTCA/ETH', 'BTCA/USDT', 'BTX/BTC', 'BTX/USDT', 'BUS/BTC', 'BitClave/BTC', 'BitClave/ETH', 'BitClave/USDT', 'C20/BTC', 'C20/ETH', 'CAS/BTC', 'CAS/ETH', 'CAS/USDT', 'CCT/ETH', 'CDT/BTC', 'CDX/ETH', 'CHAT/BTC', 'CHAT/ETH', 'CHAT/USDT', 'CL/BTC', 'CL/ETH', 'CL/USDT', 'CLD/BTC', 'CLD/ETH', 'CLD/USDT', 'CND/BTC', 'CND/ETH', 'CND/USDT', 'CNX/BTC', 'COSS/BTC', 'COSS/ETH', 'COV/BTC', 'COV/ETH', 'CPAY/ETH', 'CSNO/BTC', 'CTX/BTC', 'CTX/ETH', 'DBIX/BTC', 'DCN/ETH', 'DCN/USDT', 'DDF/ETH', 'DICE/BTC', 'DICE/ETH', 'DIM/BTC', 'DIM/ETH', 'DIM/USDT', 'DLT/BTC', 'DOV/BTC', 'DOV/ETH', 'DRPU/BTC', 'DRPU/ETH', 'DRT/ETH', 'DRT/USDT', 'DSH/BTC', 'EBET/ETH', 'EBTC/BTC', 'EBTC/ETH', 'EBTC/USDT', 'EBTCOLD/BTC', 'EBTCOLD/ETH', 'EBTCOLD/USDT', 'ECH/BTC', 'EET/BTC', 'EET/ETH', 'EET/USDT', 'EKO/BTC', 'EKO/ETH', 'ELE/BTC', 'EMC/ETH', 'EMC/USDT', 'ENJ/BTC', 'ENJ/ETH', 'ENJ/USDT', 'ERO/BTC', 'ETBS/BTC', 'ETP/USDT', 'EXN/BTC', 'FCN/BTC', 'FRD/BTC', 'FUEL/BTC', 'FYN/ETH', 'FYP/BTC', 'GRMD/BTC', 'GVT/ETH', 'HAC/BTC', 'HDG/ETH', 'HGT/ETH', 'HPC/BTC', 'HVN/BTC', 'HVN/ETH', 'ICO/BTC', 'ICOS/BTC', 'ICOS/ETH', 'ICOS/USDT', 'IDH/BTC', 'IDH/ETH', 'IGNIS/ETH', 'INDI/BTC', 'IPL/BTC', 'ITS/BTC', 'IXT/BTC', 'IXT/ETH', 'KBR/BTC', 'KMD/ETH', 'KMD/USDT', 'LAT/BTC', 'LIFE/BTC', 'LOC/BTC', 'LOC/ETH', 'LOC/USDT', 'MAID/ETH', 'MAID/USDT', 'MIPS/BTC', 'MNE/BTC', 'MSP/ETH', 'MYB/ETH', 'NDC/ETH', 'NEBL/BTC', 'NEBL/ETH', 'NTO/BTC', 'NXT/ETH', 'OPT/BTC', 'OTN/BTC', 'PING/BTC', 'PIX/BTC', 'PIX/ETH', 'PLBT/BTC', 'PLR/BTC', 'PLR/ETH', 'PLR/USDT', 'POLL/BTC', 'PPC/USDT', 'PRE/BTC', 'PRG/BTC', 'PRG/ETH', 'PRG/USDT', 'QAU/BTC', 'QAU/ETH', 'QCN/BTC', 'RKC/ETH', 'RVT/BTC', 'SBTC/ETH', 'SCL/BTC', 'SISA/BTC', 'SISA/ETH', 'SKIN/BTC', 'SMART/BTC', 'SMART/ETH', 'SMART/USDT', 'SMS/ETH', 'SMS/USDT', 'STAR/ETH', 'STORM/BTC', 'STRAT/USDT', 'STU/BTC', 'STU/ETH', 'STU/USDT', 'SUR/BTC', 'SUR/ETH', 'SUR/USDT', 'SWT/ETH', 'TBT/BTC', 'TGT/BTC', 'TKR/ETH', 'TRAC/ETH', 'UET/ETH', 'UGT/BTC', 'UGT/ETH', 'UGT/USDT', 'ULTC/BTC', 'UTT/BTC', 'UTT/ETH', 'UTT/USDT', 'VERI/BTC', 'VERI/ETH', 'VERI/USDT', 'VIBE/BTC', 'W3C/BTC', 'W3C/ETH', 'WAX/BTC', 'WAX/ETH', 'WAX/USDT', 'WMGO/BTC', 'WMGO/USDT', 'XAUR/ETH', 'XDN/ETH', 'XDN/USDT', 'XDNCO/BTC', 'XTZ/BTC', 'XTZ/ETH', 'XVG/ETH', 'YOYOW/BTC', 'ZAP/BTC', 'ZRC/BTC', 'ADA/ETH', 'AION/BTC', 'AION/ETH', 'APPC/BTC', 'APPC/ETH', 'ARK/ETH', 'BRD/BTC', 'BRD/ETH', 'GXS/BTC', 'IOST/BTC', 'IOST/ETH', 'LINK/BTC', 'MDA/BTC', 'MTL/BTC', 'MTL/ETH', 'NANO/BTC', 'NANO/ETH', 'NULS/BTC', 'NULS/ETH', 'OST/BTC', 'PIVX/BTC', 'QSP/ETH', 'RDN/BTC', 'STEEM/ETH', 'WTC/ETH', 'YOYO/BTC', 'YOYO/ETH', 'BCX/USDT', 'BTS/USDT', 'INK/BTC', 'INK/USDT', 'QUN/BTC', 'QUN/USDT', 'TOPC/BTC', 'TOPC/USDT', 'TRUE/BTC', 'TRUE/USDT', 'UBTC/USDT', '611/BTC', 'ACP/BTC', 'ADCN/BTC', 'B2B/BTC', 'BDL/BTC', 'BELA/BTC', 'BITB/DOGE', 'BITB/ETH', 'BIZ/BTC', 'BQ/BTC', 'BRIT/BTC', 'CALC/BTC', 'CANN/BTC', 'CJ/BTC', 'DGC/BTC', 'DNR/BTC', 'DOGE/LTC', 'DP/BTC', 'DRGN/BTC', 'ECN/BTC', 'ECN/LTC', 'EGC/BTC', 'ERT/BTC', 'ETHOS/BTC', 'ETHOS/ETH', 'EXCL/BTC', 'FAIR/BTC', 'FCH/BTC', 'FTC/BTC', 'GAM/BTC', 'GB/BTC', 'GLTC/BTC', 'GMX/BTC', 'HMC/BTC', 'ICE/BTC', 'ILC/BTC', 'INXT/BTC', 'KLC/BTC', 'LA/BTC', 'LINDA/BTC', 'LMC/BTC', 'LTC/DOGE', 'MAG/BTC', 'MEME/BTC', 'MER/BTC', 'MINT/BTC', 'MOIN/BTC', 'MOON/BTC', 'MOON/DOGE', 'MUE/BTC', 'MXT/BTC', 'NLC2/BTC', 'PCS/BTC', 'PIVX/ETH', 'PRO/BTC', 'PTS/BTC', 'PURA/BTC', 'REV/BTC', 'RIYA/BTC', 'RMC/BTC', 'SYNX/BTC', 'TCOIN/BTC', 'TRC/BTC', 'TUN/BTC', 'UNO/ETH', 'VOISE/ETH', 'VOX/BTC', 'VSX/BTC', 'XBC/BTC', 'XCXT/BTC', 'XGOX/BTC', 'XSH/BTC', 'YOC/BTC', 'ZCL/BTC', 'ZEIT/BTC', 'ZENI/BTC', 'ZZC/BTC', 'ACT/BTC', 'ACT/ETH', 'AIDOC/BTC', 'AIDOC/ETH', 'BIFI/BTC', 'DBC/BTC', 'DBC/ETH', 'GNX/BTC', 'IOST/USDT', 'ITC/BTC', 'ITC/ETH', 'MDS/ETH', 'MTN/ETH', 'PROPY/BTC', 'QSP/BTC', 'QUN/ETH', 'RUFF/BTC', 'RUFF/ETH', 'SOC/BTC', 'SOC/ETH', 'SRN/BTC', 'SRN/ETH', 'STK/BTC', 'STK/ETH', 'THETA/BTC', 'TOPC/ETH', 'UTK/BTC', 'UTK/ETH', 'YEE/BTC', 'YEE/ETH', 'ZIL/ETH', 'CAN/BTC', 'CAN/ETH', 'DENT/BTC', 'FCT/ETH', 'IND/BTC', 'MTN/BTC', 'SPHTX/BTC', 'SPHTX/ETH', 'UBTC/QASH', 'BTC/THB', 'HYP/BTC', 'LEO/BTC', 'ZET/BTC', 'BCH/JPY', 'ETH/JPY', 'ACC/BTC', 'BASH/BTC', 'BOT/QTUM', 'INK/QTUM', 'INT/BTC', 'IQT/BTC', 'OC/BTC', 'QBT/QTUM', 'TSL/QTUM', 'UGC/ETH', 'ETH/HKD', 'GAT/BTC', 'GAT/ETH', 'GTO/BTC', 'GTO/ETH', 'IFT/BTC', 'KEY/BTC', 'KEY/ETH', 'LEV/BTC', 'LEV/ETH', 'MGO/ETH', 'BNTY/ETH', 'GXS/ETH', 'INK/ETH', 'OXY/BTC', 'PART/BTC', 'PUT/BTC', 'PUT/ETH', 'UNIT/BTC', 'VIU/BTC', 'YBCT/BTC', 'AGI/BTC', 'AGI/ETH', 'CPC/BTC', 'DRGN/USDT', 'EDG/ETH', 'MSP/BTC', 'TKS/BTC', 'VEE/BTC', 'VEE/ETH', 'VSL/BTC', 'WBTC/BTC', 'BCH/AUD', 'ACT/BCH', 'AMB/BTC', 'AMB/ETH', 'BCD/ETH', 'BCPT/BTC', 'BCPT/ETH', 'BNTY/BTC', 'CAG/BTC', 'CAG/ETH', 'CAT/BTC', 'CAT/ETH', 'COFI/ETH', 'DBC/USDT', 'DNA/BTC', 'DNA/ETH', 'ELIX/BTC', 'ELIX/ETH', 'GVT/BTC', 'HPB/BTC', 'MOD/BTC', 'MOD/ETH', 'OCN/USDT', 'PRL/BTC', 'PRL/ETH', 'PURA/ETH', 'QLC/BTC', 'QLC/ETH', 'RPX/BTC', 'SNOV/BTC', 'SNOV/ETH', 'TNC/BTC', 'TNC/ETH', 'TNC/USDT', 'XAS/BTC', 'XLR/BTC', 'XRB/BTC', 'ZPT/BTC', 'ZPT/ETH', '1337/BTC', '1337/DOGE', '611/DOGE', '611/LTC', 'ABC/BTC', 'ABC/DOGE', 'ABC/LTC', 'ABY/BTC', 'ADC/BTC', 'ADC/DOGE', 'ADST/BTC', 'ALIS/BTC', 'ALL/BTC', 'ALT/BTC', 'ALT/DOGE', 'ALT/LTC', 'ANI/BTC', 'ARC/BTC', 'ARC/DOGE', 'ARC/LTC', 'ARG/BTC', 'ARGUS/BTC', 'ARK/USDT', 'ATOM/BTC', 'AU/BTC', 'AUR/BTC', 'BAY/DOGE', 'BAY/LTC', 'BCH/DOGE', 'BCH/LTC', 'BDL/DOGE', 'BDL/LTC', 'BENJI/BTC', 'BLK/DOGE', 'BLZ/BTC', 'BSTY/BTC', 'BSTY/DOGE', 'BTA/DOGE', 'BTCD/DOGE', 'BTCS/BTC', 'BTCS/DOGE', 'BTCS/LTC', 'BTDX/BTC', 'CACH/BTC', 'CDN/BTC', 'CDN/DOGE', 'CHESS/BTC', 'CJ/DOGE', 'CJ/LTC', 'CLAM/DOGE', 'CLOAK/BTC', 'CMPCO/BTC', 'CNNC/BTC', 'CQST/BTC', 'CRAVE/BTC', 'CRAVE/DOGE', 'CRAVE/LTC', 'CRC/BTC', 'CRC/DOGE', 'CRC/LTC', 'CREA/BTC', 'CTIC3/BTC', 'CTIC3/DOGE', 'CTIC3/LTC', 'CXT/BTC', 'DALC/BTC', 'DAS/BTC', 'DAS/DOGE', 'DAS/LTC', 'DCN/BTC', 'DCR/DOGE', 'DEM/BTC', 'DEUS/BTC', 'DEUS/DOGE', 'DEUS/LTC', 'DFS/BTC', 'DFS/LTC', 'DGC/DOGE', 'DIME/BTC', 'DIME/DOGE', 'DNR/LTC', 'DOPE/BTC', 'DP/DOGE', 'EC/BTC', 'EC/DOGE', 'EC/LTC', 'EDRC/BTC', 'EFL/DOGE', 'ELM/DOGE', 'ELM/LTC', 'EPC/BTC', 'EQT/BTC', 'ERY/BTC', 'ETC/DOGE', 'ETC/LTC', 'ETHD/BTC', 'ETHD/LTC', 'ETT/BTC', 'ETT/DOGE', 'ETT/LTC', 'EVR/DOGE', 'EVR/LTC', 'EXP/DOGE', 'FAZZ/BTC', 'FJC/BTC', 'FJC/DOGE', 'FLASH/BTC', 'GBX/BTC', 'GBYTE/BTC', 'GCN/BTC', 'GCN/LTC', 'GDC/BTC', 'GEERT/BTC', 'GEO/BTC', 'GLD/DOGE', 'GLD/LTC', 'GP/BTC', 'GRS/DOGE', 'GRS/LTC', 'GRWI/BTC', 'GRWI/DOGE', 'GRWI/LTC', 'HAL/BTC', 'HBC/BTC', 'HC/BTC', 'HEAT/BTC', 'HEAT/DOGE', 'HEAT/LTC', 'HSR/DOGE', 'HSR/LTC', 'HST/BTC', 'INFX/BTC', 'INSN/BTC', 'IXC/BTC', 'KAYI/BTC', 'KAYI/DOGE', 'KGB/BTC', 'KOBO/BTC', 'KRONE/BTC', 'KRONE/DOGE', 'KRONE/LTC', 'KURT/BTC', 'LBTC/BTC', 'LDC/BTC', 'LINDA/DOGE', 'LINDA/LTC', 'LINX/BTC', 'LUX/BTC', 'LUX/DOGE', 'LUX/LTC', 'MAC/BTC', 'MEC/BTC', 'MINEX/BTC', 'MNM/BTC', 'MOIN/DOGE', 'MOIN/LTC', 'MOJO/BTC', 'MST/BTC', 'MUSIC/BTC', 'MYB/BTC', 'MZC/BTC', 'NAMO/BTC', 'NAMO/DOGE', 'NAMO/LTC', 'NLC2/DOGE', 'NLC2/LTC', 'NMC/DOGE', 'NOTE/BTC', 'NOTE/DOGE', 'NOTE/LTC', 'NVC/LTC', 'NXS/BTC', 'ODN/DOGE', 'ODN/LTC', 'OK/DOGE', 'ONION/BTC', 'ORB/BTC', 'ORME/DOGE', 'ORME/LTC', 'OX/BTC', 'OX/DOGE', 'OX/LTC', 'PBL/BTC', 'PIGGY/BTC', 'PLX/BTC', 'PND/BTC', 'POST/BTC', 'POSW/BTC', 'POT/DOGE', 'PPC/DOGE', 'PROC/BTC', 'PROC/DOGE', 'PROC/LTC', 'PURA/DOGE', 'PURA/LTC', 'PUT/LTC', 'QRK/BTC', 'QWARK/BTC', 'R/DOGE', 'R/LTC', 'RAIN/BTC', 'RBY/BTC', 'RDD/DOGE', 'RIYA/DOGE', 'RIYA/LTC', 'RKC/BTC', 'RKC/DOGE', 'RKC/LTC', 'RNS/BTC', 'RUP/BTC', 'SBC/BTC', 'SBC/DOGE', 'SBC/LTC', 'SCT/BTC', 'SFC/BTC', 'SIB/DOGE', 'SIB/LTC', 'SLG/BTC', 'SLG/DOGE', 'SMART/DOGE', 'SPR/BTC', 'SRC/BTC', 'START/DOGE', 'STC/BTC', 'STN/BTC', 'TER/BTC', 'TER/LTC', 'TIX/BTC', 'TOA/BTC', 'TOA/DOGE', 'TOA/LTC', 'TRC/DOGE', 'TRC/LTC', 'TRUMP/BTC', 'TRUMP/DOGE', 'TRUMP/LTC', 'TSE/BTC', 'TSE/DOGE', 'TX/BTC', 'UBQ/BTC', 'UNIFY/BTC', 'UNO/LTC', 'VIDZ/BTC', 'VRC/DOGE', 'VRM/BTC', 'VUC/BTC', 'VUC/DOGE', 'VUC/LTC', 'WDC/BTC', 'WDC/DOGE', 'XBL/BTC', 'XBTS/BTC', 'XBY/BTC', 'XBY/DOGE', 'XBY/LTC', 'XCO/BTC', 'XCT/BTC', 'XCXT/DOGE', 'XCXT/LTC', 'XGOX/LTC', 'XID/BTC', 'XMCC/BTC', 'XMG/BTC', 'XMY/BTC', 'XPM/DOGE', 'XST/BTC', 'YOVI/BTC', 'ZEC/DOGE', 'ZEIT/DOGE', 'ZEIT/LTC', 'ZET/DOGE', 'ZOI/BTC', 'ZSE/BTC', 'ETH/CAD', 'MLN/ETH', 'XLM/EUR', 'ADZ/BTC', 'AMM/USD', 'ARC/USD', 'ATX/BTC', 'B2B/ETH', 'BCC/BTC', 'BCH/RUR', 'BLU/BTC', 'BNT/USD', 'BTB/BTC', 'BTC/RUR', 'CCRB/BTC', 'CDX/BTC', 'CPC/ETH', 'CTR/USD', 'CURE/BTC', 'CVC/USD', 'DASH/RUR', 'DGD/USD', 'DMC/BTC', 'DMD/BTC', 'DOLLAR/BTC', 'EL/BTC', 'EL/USD', 'ENT/BTC', 'ESP/BTC', 'ETH/RUR', 'FLIXX/BTC', 'FLIXX/ETH', 'GRS/ETH', 'GRS/USD', 'GRX/BTC', 'GRX/ETH', 'HST/ETH', 'ITI/BTC', 'KNC/USD', 'KPL/BTC', 'KPL/USD', 'KRB/BTC', 'LEO/USD', 'LSK/USD', 'LTC/RUR', 'LUNA/BTC', 'MCO/USD', 'MCR/BTC', 'MNX/BTC', 'MSCN/BTC', 'MTL/USD', 'OD/BTC', 'PAY/USD', 'POSW/LTC', 'PRES/BTC', 'RBIES/BTC', 'SHIFT/BTC', 'SNGLS/USD', 'SPF/BTC', 'STORJ/USD', 'STRAT/USD', 'SUMO/BTC', 'SXC/BTC', 'TER/ETH', 'TFL/BTC', 'TFL/ETH', 'TKN/ETH', 'UNY/BTC', 'UNY/LTC', 'UNY/USD', 'UQC/BTC', 'UQC/ETH', 'USD/RUR', 'VIB/USD', 'VLTC/BTC', 'VRS/BTC', 'VRS/USD', 'XEM/USD', 'XSPEC/BTC', 'YOC/USD', 'B3/BTC', 'BTX/DOGE', 'BTX/ETH', 'BTX/LTC', 'ECN/DOGE', 'NAV/DOGE', 'NAV/ETH', 'NAV/LTC', 'NKA/BTC', 'NKA/DOGE', 'NKA/LTC', 'NSR/BTC', 'TZC/BTC', 'TZC/DOGE', 'TZC/LTC', 'XCN/BTC', 'XMCC/DOGE', 'XMCC/LTC', 'XVG/DOGE', 'XVG/LTC']", "estimate_ownership_cost_for_car_utils": "Estimate how much you will spend on the car with specified VIN for the next 5 years.", "extract_for_linkedin_profiles": "Extracts data from Linkedin URL (profile or company page).", "food_report_list_deprecated_for_the_fork_the_spoon": "List all available food reported by other diners", "get_all_world_footbol_news_live_for_live_world_futbol_news": "This end point will return back all news about footbol.", "get_player_by_puiid_for_league_of_legends_api": "Return you the summoner profile related to the puuid given", "gettopsportmenu_for_sportapi": "GetTopSportMenu Api Data", "highlights_for_ig_private_api": "Highlights", "keyword_search_for_axesso_kaufland_data_service": "Retrieve keyword search results.", "latest_for_google_news": "This endpoint is used to get the latest news from Google News.", "list_file_types_for_smile": "Get the available file types for uploads.", "my_images_by_id_for_arimagesynthesizer": "Similar to `/my_images` endpoint, returns generated images' information in a JSON response filtered by given `id`.", "order_by_for_list_movies": "Orders the results by either Ascending or Descending order", "prematchform_for_baseballapi": "Get the pre-match form for a specific baseball match using the match ID.", "search_all_schemas_for_mongodb_wix": "This call returns all schemas and its definition. Schemas are also called as case types. These case types will be consumed in Wix Database as Schemas.", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude."}, "aseqs": [{"api_name": "business_for_google_news", "api_action": "\nAction: business_for_google_news\nAction Input: {\n  \"lr\": \"en-US\"\n}", "api_reaction": null}, {"api_name": "business_for_google_news", "api_action": "\nAction: business_for_google_news\nAction Input: {\n  \"lr\": \"en-US\"\n}", "api_reaction": null}, {"api_name": "latest_for_google_news", "api_action": "\nAction: latest_for_google_news\nAction Input: {\n  \"lr\": \"en-US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"action": "Search for the latest business news and updates"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_for_google_news", "api_action": "\nAction: business_for_google_news\nAction Input: {\n  \"lr\": \"en-US\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_for_google_news", "api_action": "\nAction: business_for_google_news\nAction Input: {\n  \"lr\": \"en-US\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_for_google_news", "api_action": "\nAction: latest_for_google_news\nAction Input: {\n  \"lr\": \"en-US\"\n}"}}]}
{"URL": "83689", "query": "I want to explore albums where the artist '2w9zwq3AktTeYYMuhMjju8' appears. Can you provide me with a list of albums where '2w9zwq3AktTeYYMuhMjju8' is featured? Additionally, please suggest some other artists who appear on albums with '2w9zwq3AktTeYYMuhMjju8'.", "api_names": ["artist_related_for_spotify", "artist_appears_on_for_spotify", "Finish", "searchinventory_for_fortnitecosmetics", "get_video_without_watermark_for_tiktok_private", "catalog_albums_for_billboard_api_v2", "convert_url_to_image_for_cloudlayer_io", "carbonfootprintfrommotorbike_for_carbonfootprint", "get_a_list_of_latest_profiles_for_is_this_coin_a_scam", "channel_for_fastytapi", "tokens_all_for_defi_watch", "cities_for_geography_v2", "new_ios_apps_for_app_store", "v1_rates_landing_for_hryvna_today", "validationreport_for_appraisalqc"], "api_descs": {"Finish": "No description available.", "artist_appears_on_for_spotify": "Get artist appears on albums (max 50)", "artist_related_for_spotify": "Artist related", "carbonfootprintfrommotorbike_for_carbonfootprint": "Returns the CO2e in Kg from a motorbike travel", "catalog_albums_for_billboard_api_v2": "Billboard U.S. Afrobeats Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week", "channel_for_fastytapi": "Returns channel-related information.", "cities_for_geography_v2": "get a list of all the cities filtering by name", "convert_url_to_image_for_cloudlayer_io": "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options).", "get_a_list_of_latest_profiles_for_is_this_coin_a_scam": "Get a list of the top 100 crypto projects added to on isthiscoinascam.com. Ordered by date added.", "get_video_without_watermark_for_tiktok_private": "Get Video Without Watermark", "new_ios_apps_for_app_store": "Get list of new ios apps", "searchinventory_for_fortnitecosmetics": "By passing in the appropriate options, you can search for\navailable inventory in the system\n", "tokens_all_for_defi_watch": "Get data about all tokens and filter them", "v1_rates_landing_for_hryvna_today": "Notice: this method is temporary return rates for USD and EUR currencies only.", "validationreport_for_appraisalqc": "The API returns the XML validation report of the Appraisal Report uploaded"}, "aseqs": [{"api_name": "artist_appears_on_for_spotify", "api_action": "\nAction: artist_appears_on_for_spotify\nAction Input: {\n  \"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "artist_related_for_spotify", "api_action": "\nAction: artist_related_for_spotify\nAction Input: {\n  \"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "artist_appears_on_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_appears_on_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_appears_on_for_spotify"}}]}
{"URL": "10524", "query": "I want to gather comprehensive data on football matches. Can you provide me with the list of all matches, including the home team, away team, and country? Additionally, I would like to access the odds for each match to analyze the betting possibilities.", "api_names": ["Finish", "provider4_live_inplaying_for_football_betting_odds", "provider2_live_inplaying_for_football_betting_odds", "provider2_live_list_for_football_betting_odds", "provider3_live_list_for_football_betting_odds", "gstin_for_gst_return_status", "replies_for_sms77io", "personal_listener_for_whin", "asset_history_by_id_for_crypto_exchanges", "get_all_jokes_in_a_single_category_for_the_dozen_the_yo_mamsa_roast_api", "scanimageurl_for_qr_scanner_api", "daily_forecast_10_days_for_easy_weather", "flask_app_for_flask", "united_states_away_from_home_mobility_for_covid_19_economic_impact", "student_property_to_rent_detail_for_uk_real_estate_rightmove", "drinks_for_ghana_food_recipe_api", "findbypestscientificnamecrop_for_agrofitdata", "top_paid_ios_apps_for_app_store", "get_recipes_details_for_recetas_en_espa_ol", "getscreen_for_maytapi_whatsapp"], "api_descs": {"Finish": "No description available.", "asset_history_by_id_for_crypto_exchanges": "Get Asset History by ID", "daily_forecast_10_days_for_easy_weather": "Get a 10-day daily forecast for the given latitude and longitude.", "drinks_for_ghana_food_recipe_api": "This endpoint gets all local drinks,image,ingredient and preparation.", "findbypestscientificnamecrop_for_agrofitdata": " ", "flask_app_for_flask": "flask application", "get_all_jokes_in_a_single_category_for_the_dozen_the_yo_mamsa_roast_api": "This endpoint will return all joke  in a catagory.", "get_recipes_details_for_recetas_en_espa_ol": "Get details of any recipe", "getscreen_for_maytapi_whatsapp": "Returns the screenshot of the screen in the current session", "gstin_for_gst_return_status": "Get Details about GSTIN (GST number) and following \n1. Latest Return filing list\n2. GST Compliance Classification\n3. HSN/SAC", "personal_listener_for_whin": "The response is an url that you have to use as a webhook destination at the origin service. The content sent to it will be routed as a message to a whatsapp group owned by the user, or to the user.\nLearn use-cases on these videos: [grafana alerts](https://youtu.be/RvVgg0qwNDk),[Shelly notifications](https://youtu.be/B6MLlBUkyvo), [synology notifications](https://youtu.be/zeAJNuXYqH4).", "provider2_live_inplaying_for_football_betting_odds": "get inplaying matches list", "provider2_live_list_for_football_betting_odds": "get all matches", "provider3_live_list_for_football_betting_odds": "get all matches", "provider4_live_inplaying_for_football_betting_odds": "get inplaying matches list", "replies_for_sms77io": "Retrieves message replies history.", "scanimageurl_for_qr_scanner_api": "Scan image from URL and return QR text or Barcode number.", "student_property_to_rent_detail_for_uk_real_estate_rightmove": "Student property to rent for detail", "top_paid_ios_apps_for_app_store": "Get list of the top paid ios apps", "united_states_away_from_home_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent away from home."}, "aseqs": [{"api_name": "provider2_live_list_for_football_betting_odds", "api_action": "\nAction: provider2_live_list_for_football_betting_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "provider2_live_inplaying_for_football_betting_odds", "api_action": "\nAction: provider2_live_inplaying_for_football_betting_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "provider3_live_list_for_football_betting_odds", "api_action": "\nAction: provider3_live_list_for_football_betting_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "provider2_live_inplaying_for_football_betting_odds", "api_action": "\nAction: provider2_live_inplaying_for_football_betting_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "provider4_live_inplaying_for_football_betting_odds", "api_action": "\nAction: provider4_live_inplaying_for_football_betting_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get all matches and their odds using the provider2_live_list_for_football_betting_odds API first,\n\t\"api_name\": \"provider2_live_list_for_football_betting_odds\"\n}"}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to call the provider2_live_list_for_football_betting_odds API to get the list of all football matches and their home team, away team, and country information,\n\t\"api_name\": \"provider2_live_list_for_football_betting_odds\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "provider2_live_list_for_football_betting_odds", "api_action": "\nAction: provider2_live_list_for_football_betting_odds\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "provider2_live_list_for_football_betting_odds", "api_action": "\nAction: provider2_live_list_for_football_betting_odds\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "provider2_live_list_for_football_betting_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "provider2_live_list_for_football_betting_odds"}}]}
{"URL": "17337", "query": "Retrieve the comments for an Instagram post with shortcode 'CTU9ltunv3X'. Furthermore, fetch the replies for the comment with commentId '17898559397187730'.", "api_names": ["replies_for_axesso_instagram_data_service", "Finish", "comments_for_axesso_instagram_data_service", "aeropuerto_for_vuelos", "list_languages_for_subtitles_for_youtube_v2", "aliexpress_item_description_for_aliexpress_datahub", "temp_endpoint_for_top_free_apps", "api_v1_for_reverse_ip", "search_channel_for_fastytapi", "all_news_for_crypto_news_v2", "alerts_for_ai_weather_by_meteosource", "getdiscusage_for_groupdocs_watermark_cloud"], "api_descs": {"Finish": "No description available.", "aeropuerto_for_vuelos": "Location search", "alerts_for_ai_weather_by_meteosource": "**Severe weather alerts** for the USA, Europe, and Canada. **Define your location** using GPS coordinates or `place_id` from `Location` endpoints.", "aliexpress_item_description_for_aliexpress_datahub": "All details of a single item.", "all_news_for_crypto_news_v2": "Get news from all supported sources.", "api_v1_for_reverse_ip": "Reverse IP API", "comments_for_axesso_instagram_data_service": "Fetch comments for a given post. Therefore the shortcode needs to be passed which is returned in the \"node\" array from posts endpoint. If in the first response \"data.shortcode_media.edge_media_to_parent_comment.page_info.has_next_page\" equals true, then more comments exists and it can be fetched by passing \"data.shortcode_media.edge_media_to_parent_comment.page_info.end_cursor\" to the after param in the next request.", "getdiscusage_for_groupdocs_watermark_cloud": " ", "list_languages_for_subtitles_for_youtube_v2": "List all supported languages", "replies_for_axesso_instagram_data_service": "Fetch replies for a given commentId.  CommentId can be obtained from the comments endpoint response in field node.id. Also the field edge_threaded_comments.page_info.end_cursor needs to be passed for the given comment which can also be found in the response from the comments endpoint.", "search_channel_for_fastytapi": "Returns list of channel when searching YouTube for the provided query.", "temp_endpoint_for_top_free_apps": "/"}, "aseqs": [{"api_name": "comments_for_axesso_instagram_data_service", "api_action": "\nAction: comments_for_axesso_instagram_data_service\nAction Input: {\n  \"shortcode\": \"CTU9ltunv3X\"\n}", "api_reaction": null}, {"api_name": "replies_for_axesso_instagram_data_service", "api_action": "\nAction: replies_for_axesso_instagram_data_service\nAction Input: {\n  \"after\": \"\",\n  \"commentid\": \"17898559397187730\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "comments_for_axesso_instagram_data_service"}}, {"state": "generated_by_agent", "aseq": {"api_name": "replies_for_axesso_instagram_data_service", "api_action": "{\"commentId\": \"17898559397187730\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "comments_for_axesso_instagram_data_service", "api_action": "\nAction: comments_for_axesso_instagram_data_service\nAction Input: {\n  \"shortcode\": \"CTU9ltunv3X\"\n}", "api_reaction": null}}]}
{"URL": "7483", "query": "I recently tried a delicious cheese at a restaurant and I want to know more about it. Can you provide me with the information and history of the cheese? I remember its name starting with 'B' but I can't recall the full name.", "api_names": ["Finish", "get_by_id_for_cheeses", "list_for_cheeses", "get_sign_prediction_for_today_by_name_for_zodiacapi", "categories_list_root_deprecated_for_sephora", "powerball_for_ca_lottery", "user_likes_for_twitter_v4", "get_reference_numbers_of_a_specific_brand_for_watchsignals", "uk_letting_agents_for_zoopla", "v1_profanityfilter_for_profanity_filter_by_api_ninjas", "getrelatedtags_for_vimeo", "search_address_for_arcgis_platform_geocoding", "flights_search_for_flight_radar", "read_usage_totals_and_averages_for_ironwifi", "download_lyrics_on_spotify_2_quotas_for_soundcloud_scraper", "apgar_for_clinicalmarkers", "get_place_by_geoname_id_for_spott", "get_ico_calendar_for_investing_cryptocurrency_markets"], "api_descs": {"Finish": "No description available.", "apgar_for_clinicalmarkers": " ", "categories_list_root_deprecated_for_sephora": "List top root categories", "download_lyrics_on_spotify_2_quotas_for_soundcloud_scraper": "This endpoint provides a solution to download a track's lyrics on Spotify. (Powered by [Spotify Scraper](https://rapidapi.com/DataFanatic/api/spotify-scraper/))", "flights_search_for_flight_radar": "Search for specific flight", "get_by_id_for_cheeses": "Get all info about the cheese", "get_ico_calendar_for_investing_cryptocurrency_markets": "Get ICO calendar", "get_place_by_geoname_id_for_spott": "Returns a single Place identified by a Geoname ID.", "get_reference_numbers_of_a_specific_brand_for_watchsignals": "Get reference numbers of a specific brand", "get_sign_prediction_for_today_by_name_for_zodiacapi": "Get sign prediction for today  by name", "getrelatedtags_for_vimeo": "Get a list of related tags for a category.", "list_for_cheeses": "List all cheeses", "powerball_for_ca_lottery": "Powerball History", "read_usage_totals_and_averages_for_ironwifi": "READ - USAGE TOTALS AND AVERAGES", "search_address_for_arcgis_platform_geocoding": "The findAddressCandidates operation geocodes one location per request; the input address can be combined into a single input field or divided among multiple parameters.\n\n![geoceode screenshot](https://developers.arcgis.com/rest/geocode/api-reference/GUID-F2F78690-5FB5-4BF1-8633-26BF184C45A9-web.png)\n\n[API reference for `findAddressCandidates` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-find-address-candidates.htm)", "uk_letting_agents_for_zoopla": "UK letting agents", "user_likes_for_twitter_v4": "User Likes", "v1_profanityfilter_for_profanity_filter_by_api_ninjas": "API Ninjas Profanity Filter API endpoint. Returns the censored version (bad words replaced with asterisks) of any given text and whether the text contains profanity."}, "aseqs": [{"api_name": "list_for_cheeses", "api_action": "\nAction: list_for_cheeses\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_id_for_cheeses", "api_action": "\nAction: get_by_id_for_cheeses\nAction Input: {\n  \"is_id\": \"B\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_cheeses"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_cheeses"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_cheeses"}}]}
{"URL": "25662", "query": "I need to access the data of my Neostrada domain '576517' to check its status. Additionally, I would like to obtain a list of all my domains, including their IDs, descriptions, extensions, years, discounts, start dates, paid until dates, external statuses, redirect URLs, DNS IDs, redirect types, and statuses.", "api_names": ["domainlist_for_neostrada_domains", "domain_for_neostrada_domains", "Finish", "book_list_and_chapter_counts_api_for_complete_study_bible", "get_individual_result_by_id_for_robberydata", "teamtournaments_for_icehockeyapi", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb", "channel_community_posts_for_yt_api", "kd_calculator_for_teamriverbubbles_random_utilities", "data_tournaments_all_for_sports_odds_betapi", "drawing_by_date_for_fantasy_5", "world_cup_champions_for_transfermarkt_db", "get_geocoding_for_geocoding_places", "getinventory_for_my_api_12345", "getcategories_for_motivational_quotes", "getrandomquote_for_random_chunk_api", "fetchlatestnav_for_latest_mutual_fund_nav", "get_user_pins_for_pinterest_apis"], "api_descs": {"Finish": "No description available.", "book_list_and_chapter_counts_api_for_complete_study_bible": "Lists all books of the Bible, abbreviations, and chapter counts. Can be used as a reference for a chapter selection screen", "channel_community_posts_for_yt_api": "Get community post listing and channel details.\nQuota cost is 1 unit.", "data_tournaments_all_for_sports_odds_betapi": "Data Tournaments All Sports & All Countries", "domain_for_neostrada_domains": "Get Domain data", "domainlist_for_neostrada_domains": "Get a list of your domains", "drawing_by_date_for_fantasy_5": "Get the winning Fantasy 5 number set from a specific drawing date.", "fetchlatestnav_for_latest_mutual_fund_nav": "Fetch Latest NAV", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb": "This endpoint takes your epic centre latitude, longitude along with radius in KM and returns all postcodes and suburbs within it.", "get_geocoding_for_geocoding_places": "Get complete readable place info in prefered language based on given coordinate in latitude and longitude.", "get_individual_result_by_id_for_robberydata": "Get Individual Result by ID", "get_user_pins_for_pinterest_apis": "Get User Pins by user name", "getcategories_for_motivational_quotes": " ", "getinventory_for_my_api_12345": "Returns a map of status codes to quantities", "getrandomquote_for_random_chunk_api": "Get a random quote.", "kd_calculator_for_teamriverbubbles_random_utilities": "Calculates a kd (kill death ratio)", "teamtournaments_for_icehockeyapi": "This operation returns the unique tournaments in which an Ice Hockey team has participated.", "world_cup_champions_for_transfermarkt_db": "World cup champions. Titles and success"}, "aseqs": [{"api_name": "domain_for_neostrada_domains", "api_action": "\nAction: domain_for_neostrada_domains\nAction Input: {\n  \"domain_id\": \"576517\"\n}", "api_reaction": null}, {"api_name": "domainlist_for_neostrada_domains", "api_action": "\nAction: domainlist_for_neostrada_domains\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "domainlist_for_neostrada_domains"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domainlist_for_neostrada_domains", "api_action": "\nAction: domainlist_for_neostrada_domains\nAction Input: {\n  \"domain_id\": \"576517\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domain_for_neostrada_domains"}}]}
{"URL": "38797", "query": "I'm interested in exploring the most popular articles on dev.to. Can you fetch the titles and URLs of the top articles of all time, the year's top articles, and the month's top articles? It would also be helpful to include the latest articles.", "api_names": ["get_all_the_latest_articles_for_dev_to_api", "get_all_the_year_s_top_articles_for_dev_to_api", "get_the_month_s_top_articles_for_dev_to_api", "Finish", "get_the_top_articles_of_all_time_for_dev_to_api", "3_day_forecast_for_ouranos", "hashtag_by_name_for_instagram_api", "uae_scheduled_flights_level_for_global_flight_data", "get_extended_report_by_mountain_id_for_peak_conditions", "testbatmanapi_for_testgetapi", "get_stream_game_name_for_gwyo_twitch", "tennis_match_statistics_for_sports_live_scores", "match_boxscore_for_basketball_data", "downloadfile_for_groupdocs_comparison_cloud", "get_crypto_news_from_single_website_for_crypto_news_v11", "call_5_day_3_hour_forecast_data_by_city_id_for_rapidweather", "elevation_for_maptoolkit", "paymentcalculatorsimple_calculate_for_simple_interest_payment_calculator", "get_artists_for_spotify_v3", "send_image_for_betarecipes"], "api_descs": {"3_day_forecast_for_ouranos": "3 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 3 day every 3 hours", "Finish": "No description available.", "call_5_day_3_hour_forecast_data_by_city_id_for_rapidweather": "You can search weather forecast for 5 days with data every 3 hours by city ID. We recommend to call API by city ID to get unambiguous result for your city.", "downloadfile_for_groupdocs_comparison_cloud": " ", "elevation_for_maptoolkit": "Global elevation service.", "get_all_the_latest_articles_for_dev_to_api": "It returns all the latest articles present in the dev.to website.", "get_all_the_year_s_top_articles_for_dev_to_api": "It return year's top articles from dev.to website", "get_artists_for_spotify_v3": "Get one or more artists", "get_crypto_news_from_single_website_for_crypto_news_v11": "This endpoint allows you to retrieve all the news articles about Crypto from a single website", "get_extended_report_by_mountain_id_for_peak_conditions": "Returns an extended 6-day report for the mountain peak specified in the request.", "get_stream_game_name_for_gwyo_twitch": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )", "get_the_month_s_top_articles_for_dev_to_api": "It returns the month's top articles from dev.to website.", "get_the_top_articles_of_all_time_for_dev_to_api": "It returns the top articles of all time from dev.to website.", "hashtag_by_name_for_instagram_api": "Gets a Hashtag by Name", "match_boxscore_for_basketball_data": "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "paymentcalculatorsimple_calculate_for_simple_interest_payment_calculator": " ", "send_image_for_betarecipes": "Send Image to get prediction and other data", "tennis_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Tennis Live Matches endpoint.", "testbatmanapi_for_testgetapi": "API for test project batman", "uae_scheduled_flights_level_for_global_flight_data": "Get weekly United Arab Emirates scheduled departing flights level."}, "aseqs": [{"api_name": "get_the_top_articles_of_all_time_for_dev_to_api", "api_action": "\nAction: get_the_top_articles_of_all_time_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_the_year_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_year_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_the_month_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_the_month_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_the_latest_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_latest_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_the_top_articles_of_all_time_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_month_s_top_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_top_articles_of_all_time_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_latest_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_latest_articles_for_dev_to_api"}}]}
{"URL": "43133", "query": "I'm organizing a baby shower for my sister and I need a venue. Can you assist me? I would like a list of addresses matching the search string 'baby shower venues' and the detailed information for each venue using the address IDs.", "api_names": ["addresses_for_addressr", "Finish", "get_crime_rates_by_zip_for_crime_data_by_zipcode_api", "random_song_for_k_pop", "topscorersbyseasontotalpoints_for_nba_statistics_api", "sort_games_for_mmo_games", "top_grossing_apps_for_store_apps", "autocomplete_cities_for_autocomplete_india", "getuserbyid_for_user_demo", "get_expired_certs_for_iotvas"], "api_descs": {"Finish": "No description available.", "addresses_for_addressr": "returns a list of addresses matching the search string\n", "autocomplete_cities_for_autocomplete_india": "Autocomplete Cities", "get_crime_rates_by_zip_for_crime_data_by_zipcode_api": "Just with the ZIP code to analyze, you will be receiving a JSON object with an Overall Crime Scoring, and also a breakdown of different crimes that are assessed on the zone. \n\nGet information like:\n\n- \"Overall Crime Grade\".\n- \"Violent Crime Grade\".\n- \"Property Crime Grade\".\n- \"Other Crime Grade\".\n- \"Violent Crime Rates\".\n- \"Property Crime Rates\".\n- \"Other Crime Rates\".\n- \"Crime Rates Nearby\".\n- \"Similar Population Crime Rates\".", "get_expired_certs_for_iotvas": " ", "getuserbyid_for_user_demo": " ", "random_song_for_k_pop": "Get random K-POP song", "sort_games_for_mmo_games": "Sort games by release date, alphabetical, popularity or relevance", "top_grossing_apps_for_store_apps": "Top grossing apps chart.", "topscorersbyseasontotalpoints_for_nba_statistics_api": "## Return top players by total points in descending order.\n\n_Season is specified in the URL._"}, "aseqs": [{"api_name": "addresses_for_addressr", "api_action": "\nAction: addresses_for_addressr\nAction Input: {\n  \"q\": \"baby shower venues\"\n}", "api_reaction": null}, {"api_name": "addresses_for_addressr", "api_action": "\nAction: addresses_for_addressr\nAction Input: {\n  \"q\": \"event venues\"\n}", "api_reaction": null}, {"api_name": "addresses_for_addressr", "api_action": "\nAction: addresses_for_addressr\nAction Input: {\n  \"q\": \"banquet halls\"\n}", "api_reaction": null}, {"api_name": "addresses_for_addressr", "api_action": "\nAction: addresses_for_addressr\nAction Input: {\n  \"q\": \"baby shower venues\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": First, I need to find addresses matching the search string 'baby shower venues' using the addresses_for_addressr API,\n\t\"api_name\": \"addresses_for_addressr\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "autocomplete_cities_for_autocomplete_india"}}, {"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_addressr", "api_action": "\nAction: addresses_for_addressr\nAction Input: {\n  \"q\": \"baby shower venues\",\n  \"details\": true,\n  \"formatting\": \"minimal\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_addressr", "api_action": "{\"q\": \"baby shower venues\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_addressr", "api_action": "\nAction: addresses_for_addressr\nAction Input: {\n  \"q\": \"baby shower venues\"\n}", "api_reaction": null}}]}
{"URL": "26696", "query": "I am an automotive photographer and I need to remove the background from car images for a client. Can you please provide me with the available modes for background removal in the Cars Image Background Removal tool? Additionally, I would like to know the current version of the tool to ensure I have the latest enhancements.", "api_names": ["get_list_of_available_modes_for_cars_image_background_removal", "get_version_for_cars_image_background_removal", "Finish", "get_products_for__demo_project_v13", "search_for_local_business_data", "rates_for_nitro", "getchannelvideos_for_vimeo", "united_states_grocery_and_pharmacy_mobility_for_covid_19_economic_impact", "currency_exchange_rate_for_real_time_finance_data", "audit_for_clinicalmarkers", "ancestry_for_23andme", "get_plus_one_for_plus_one"], "api_descs": {"Finish": "No description available.", "ancestry_for_23andme": "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion — the ancestry we couldn't classify in it.   threshold is optional, default 0.75 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate.", "audit_for_clinicalmarkers": " ", "currency_exchange_rate_for_real_time_finance_data": "Get currency / forex or crypto exchange rates.", "get_list_of_available_modes_for_cars_image_background_removal": "The service provides three options for background removal results:\n* Mask of foreground.\n* Image with foreground object.\n* Image with foreground object with shadow.", "get_plus_one_for_plus_one": "Get your integer, incremented by one", "get_products_for__demo_project_v13": " ", "get_version_for_cars_image_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getchannelvideos_for_vimeo": "Get a list of the videos in a channel.", "rates_for_nitro": "This endpoint retrieves all rates.", "search_for_local_business_data": "Search local businesses on Google Maps.", "united_states_grocery_and_pharmacy_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at grocery and pharmacy."}, "aseqs": [{"api_name": "get_list_of_available_modes_for_cars_image_background_removal", "api_action": "\nAction: get_list_of_available_modes_for_cars_image_background_removal\nAction Input: {}", "api_reaction": null}, {"api_name": "get_version_for_cars_image_background_removal", "api_action": "\nAction: get_version_for_cars_image_background_removal\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_available_modes_for_cars_image_background_removal"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_available_modes_for_cars_image_background_removal"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_available_modes_for_cars_image_background_removal"}}]}
{"URL": "60770", "query": "I'm organizing a charity event and I want to include a football match. Can you provide me with a list of available matches and their associated odds? I need to choose a match that will attract a large audience and generate donations.", "api_names": ["matches_for_betmaster", "Finish", "days_from_date_for_futures", "get_imbuements_for_snake_skin_earth_protection_for_tibia_items", "amir_for_amir1", "v1_passwordgenerator_for_password_generator_by_api_ninjas", "wrt_transformer_for_walnut_word_completion", "user_by_screen_name_for_twitter_v2_v2"], "api_descs": {"Finish": "No description available.", "amir_for_amir1": "pet", "days_from_date_for_futures": "This endpoint returns futures contracts for the date falling on the number of days from the date you specified. This is useful for getting contracts closest to a date without having to determine the last date the contract was traded.\n\nConsider wanting contracts for WTI Crude that were traded 30 days before Christmas 2021, with Thanksgiving in the US being November 25, which date were contracts last traded? Specifying the dateFrom parameter as \"2021-12-25\" and the daysFrom parameter as 30 removes the guess work and gives the contract less-than-or-equal-to 30 days from the <dateFrom> parameter.\n\nUse the optional <month> parameter to get a specific month contract.\n\nUse the optional <inPast> parameter to specify if <daysFrom> should be added or subtracted from <dateFrom>. Setting <inPast> to false will result in contracts that fall after the given date. Default is true.\n\n**✴ Return Limited: 100 Objects\n✴ Oldest Date: 2010-01-01**\n\n*This endpoint will only return 100 objects per request. Use the <offset> parameter to paginate results.*", "get_imbuements_for_snake_skin_earth_protection_for_tibia_items": "This enpoint will get all imbuement for type Snake skin\n\nSnake Skin (Earth Protection)\nBrimstone Fangs \nPiece of Swampling Wood \nSnake Skin", "matches_for_betmaster": "Latest Matches by Betmaster", "user_by_screen_name_for_twitter_v2_v2": "User By Screen Name", "v1_passwordgenerator_for_password_generator_by_api_ninjas": "API Ninjas Password Generator API endpoint. Returns a random password string adhering to the specified parameters.", "wrt_transformer_for_walnut_word_completion": "Returns the hidden word in the sentence."}, "aseqs": [{"api_name": "matches_for_betmaster", "api_action": "\nAction: matches_for_betmaster\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betmaster"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betmaster"}}]}
{"URL": "83513", "query": "I'm a small business owner and I'm looking for wholesale suppliers for 'clothing'. Can you search for 'clothing' in the 'cl' region? Please provide the product details for the first nine items in the search results.", "api_names": ["search_products_for_shopeeapi", "Finish", "get_brands_for_cigars", "playershotchartdataseasonplayoffs_for_nba_statistics_api", "detect_for_translate_all_languages", "events_getbookableitemlist_for_sagenda_free_booking_system", "get_company_quote_price_data_for_stoxx", "total_count_for_mcapi", "hls_for_instagram_v3", "provider4_live_inplaying_for_football_betting_odds"], "api_descs": {"Finish": "No description available.", "detect_for_translate_all_languages": "Detects the language of text within a request.", "events_getbookableitemlist_for_sagenda_free_booking_system": "list of the bookable Items", "get_brands_for_cigars": "Get Cigar brands, paginated and searchable.", "get_company_quote_price_data_for_stoxx": "Retrieve updated quote and pricing data for a given company. This endpoint provides you with:\n\n- Symbol\n- Company Name\n- Exchange\n- High\n- Low\n- Close\n- PE\n- Volume\n- Market Cap\n- Datetime", "hls_for_instagram_v3": "hls => mp4 converter", "playershotchartdataseasonplayoffs_for_nba_statistics_api": "## Return player shot chart data (season & playoffs)\n\n### Current Players Available:\n\n- LeBron James\n- James Harden\n- Stephen Curry\n    \n\n_Player name and Season are specified in the request URL._\n\nShot chart is available [here](https://cdn.ssref.net/req/1/images/bbr/nbahalfcourt.png).", "provider4_live_inplaying_for_football_betting_odds": "get inplaying matches list", "search_products_for_shopeeapi": "Search product & Paginate", "total_count_for_mcapi": "Get total count of entries"}, "aseqs": [{"api_name": "search_products_for_shopeeapi", "api_action": "\nAction: search_products_for_shopeeapi\nAction Input: {\n  \"region\": \"cl\",\n  \"q\": \"clothing\",\n  \"p\": 1\n}", "api_reaction": null}, {"api_name": "search_products_for_shopeeapi", "api_action": "\nAction: search_products_for_shopeeapi\nAction Input: {\n  \"region\": \"cl\",\n  \"q\": \"clothing\",\n  \"p\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_shopeeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_shopeeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_shopeeapi"}}]}
{"URL": "49086", "query": "Retrieve the user details for ID '9876' from the Node Express API Tutorial database. Additionally, provide me with the complete list of all users stored in the database.", "api_names": ["Finish", "get_specific_user_for_node_express_api_tutorial", "get_all_users_for_node_express_api_tutorial", "airport_arrivals_for_flight_fare_search", "companies_profile_for_financial_modeling_prep", "alliance_data_in_json_format_for_flight_data_v2", "scraper_for_web_scraping_api", "get_by_id_for_manatee_jokes", "stochastic_for_qvantana", "youtube_channel_details_for_youtube_channel_details", "search_trips_for_flixbus_v2", "get_coin_for_coinranking", "get_config_issues_for_iotvas", "gettodousingget_for_todo", "nsfw_detection_for_nsfw_nude_detection", "countries_for_pageantdb", "get_story_by_username_for_instagram_bulk_profile_scrapper", "getbyaccountnumber_for_virtual_accounts_api"], "api_descs": {"Finish": "No description available.", "airport_arrivals_for_flight_fare_search": "An Endpoint to fetch Arrivals on a given date", "alliance_data_in_json_format_for_flight_data_v2": "API returns a file with a list of alliances from the database", "companies_profile_for_financial_modeling_prep": "This API returns companies profile (Price,Beta,Volume Average, Market Capitalisation, Last Dividend, 52 week range, stock price change, stock price change in percentage, Company Name, Exchange, Description, Industry,Sector,CEO,Website and image).", "countries_for_pageantdb": "Get a list of all countries involved in a pageant contest.", "get_all_users_for_node_express_api_tutorial": "This endpoint will return all users stored in the database.", "get_by_id_for_manatee_jokes": "gets a specific joke by id", "get_coin_for_coinranking": "Find information about a specific coin.", "get_config_issues_for_iotvas": " ", "get_specific_user_for_node_express_api_tutorial": "This endpoint will return back the user with the specified ID.", "get_story_by_username_for_instagram_bulk_profile_scrapper": "Fetch Instagram stories from username", "getbyaccountnumber_for_virtual_accounts_api": "To get a virtual account by account number.", "gettodousingget_for_todo": "Get todo from id", "nsfw_detection_for_nsfw_nude_detection": "AI-based detection if an image is likely to contain NSFW content (nudity).", "scraper_for_web_scraping_api": "The \"Scraper\" endpoint of the Web Scraping API is responsible for extracting data from websites while simulating a real browser. With its Headless Browser capability, the endpoint enables users to bypass restrictions, solve captchas, and scrape dynamic websites with ease. The endpoint can be used for high-level web scraping tasks, making it an ideal choice for businesses, data analysts, and developers who need to extract data from websites quickly and efficiently. By providing the endpoint with the necessary input parameters, users can initiate the scraping process and receive the extracted data in the desired format. This endpoint is a powerful tool for anyone who needs to extract data from websites and can be easily integrated into existing workflows and systems.", "search_trips_for_flixbus_v2": "Search trips between two cities or stations", "stochastic_for_qvantana": "Stochastic indicator", "youtube_channel_details_for_youtube_channel_details": "YouTube Channel Details"}, "aseqs": [{"api_name": "get_specific_user_for_node_express_api_tutorial", "api_action": "\nAction: get_specific_user_for_node_express_api_tutorial\nAction Input: {\n  \"is_id\": \"9876\"\n}", "api_reaction": null}, {"api_name": "get_all_users_for_node_express_api_tutorial", "api_action": "\nAction: get_all_users_for_node_express_api_tutorial\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_specific_user_for_node_express_api_tutorial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_users_for_node_express_api_tutorial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specific_user_for_node_express_api_tutorial", "api_action": "\nAction: get_specific_user_for_node_express_api_tutorial\nAction Input: {\n  \"is_id\": \"9876\"\n}", "api_reaction": null}}]}
{"URL": "17495", "query": "Can you help me verify the status of my email domain and check if it is a webmail or disposable domain using the DomainStatus API? Additionally, I would like to enrich the email data by retrieving the person's name, location, and social handles using the Enrichment API.", "api_names": ["enrichment_for_tomba", "domainstatus_for_tomba", "Finish", "current_time_by_ip_for_world_time", "random_girl_group_for_k_pop", "getcompanybywebsite_for_returns_company_info_based_on_the_website", "list_of_periods_for_pinnacle_odds", "search_exact_phrase_api_for_complete_study_bible", "getbook_for_book", "get_attributes_for_musclewiki", "getspecialcompetitionview_for_betsports", "countscenarios_for_acopaer", "authorfinder_for_tomba", "album_tracks_for_spotify_web", "check_if_text_contains_profanity_for_purgomalum"], "api_descs": {"Finish": "No description available.", "album_tracks_for_spotify_web": "Get album tracks", "authorfinder_for_tomba": "This API endpoint generates or retrieves the most likely email address from a blog post url.", "check_if_text_contains_profanity_for_purgomalum": "", "countscenarios_for_acopaer": "# Description GET Number Of Scenarios\r\n\r\nThis url provides the Scenarios quantity created, method type `GET`.\r\n\r\n`BASE_URL/scenarios/count`\r\n\r\nreturns the Scenarios quantity.", "current_time_by_ip_for_world_time": "Request the current time based on your public IP", "domainstatus_for_tomba": "Returns domain status if is webmail or disposable.", "enrichment_for_tomba": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person’s name, location and social handles from an email", "get_attributes_for_musclewiki": "Get Attributes you can use to filter exercises", "getbook_for_book": "get", "getcompanybywebsite_for_returns_company_info_based_on_the_website": "For valid response use valid website domain.  Other values will generate exceptions. Subdomains will be removed.", "getspecialcompetitionview_for_betsports": "getSpecialCompetitionView data", "list_of_periods_for_pinnacle_odds": "Get a list of periods", "random_girl_group_for_k_pop": "Get random girl-group", "search_exact_phrase_api_for_complete_study_bible": "Searches the KJV for the exact phrase supplied"}, "aseqs": [{"api_name": "domainstatus_for_tomba", "api_action": "\nAction: domainstatus_for_tomba\nAction Input: {}", "api_reaction": null}, {"api_name": "domainstatus_for_tomba", "api_action": "\nAction: domainstatus_for_tomba\nAction Input: {}", "api_reaction": null}, {"api_name": "enrichment_for_tomba", "api_action": "\nAction: enrichment_for_tomba\nAction Input: {\n  \"email\": \"example@example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "domainstatus_for_tomba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domainstatus_for_tomba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domainstatus_for_tomba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domainstatus_for_tomba"}}]}
{"URL": "15977", "query": "I want to create a meme about my favorite TV show. Can you provide me with meme templates that contain the name of the show? Additionally, I need the list of fonts available for adding captions and text.", "api_names": ["templates_for_meme_generator_and_template_database", "fonts_for_meme_generator_and_template_database", "search_for_meme_generator_and_template_database", "Finish", "loginuser_for_apfd", "getorderbyid_for_pet_store", "leaguegroups_for_basketapi", "next_31_days_for_show_air_dates", "transactions_for_orderful", "v1_feeds_for_awesome_rss", "country_specific_country_for_africa_api_", "account_for_ppob", "logoutuser_for_publicapitestinginbox", "get_zipcode_by_county_for_redfin_base", "product_reviews_for_real_time_product_search", "timezonelist_for_gtrend", "get_pinned_chat_for_twitch_api", "api_v1_fastings_for_sunnah_fasting", "search_leaderboard_for_bybit_leaderboard", "domain_name_search_for_domain_name_search"], "api_descs": {"Finish": "No description available.", "account_for_ppob": "API Account is used to display user information according to the Token embedded in the header request.", "api_v1_fastings_for_sunnah_fasting": "Get list of sunnah fasting", "country_specific_country_for_africa_api_": "Returns a json of specific country in Africa eg Kenya. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\"", "domain_name_search_for_domain_name_search": "Search 600m+ root domains (domain names) by partial match", "fonts_for_meme_generator_and_template_database": "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins", "get_pinned_chat_for_twitch_api": "Returns pinned chat.", "get_zipcode_by_county_for_redfin_base": "Get zipcode by county", "getorderbyid_for_pet_store": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "leaguegroups_for_basketapi": "Get the groups in the basketball league.", "loginuser_for_apfd": " ", "logoutuser_for_publicapitestinginbox": "", "next_31_days_for_show_air_dates": "Shows airing in the next 31 days", "product_reviews_for_real_time_product_search": "Get all product reviews. Infinite pagination/scrolling is supported using the *limit* and *offset* parameters.", "search_for_meme_generator_and_template_database": "Returns meme templates that contain a specific string. **searchString is case sensitive**", "search_leaderboard_for_bybit_leaderboard": "Returns traders that match your search filters.", "templates_for_meme_generator_and_template_database": "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**.", "timezonelist_for_gtrend": " ", "transactions_for_orderful": "Get Transaction by ID", "v1_feeds_for_awesome_rss": "List your current RSS"}, "aseqs": [{"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"favorite TV show\"\n}", "api_reaction": null}, {"api_name": "templates_for_meme_generator_and_template_database", "api_action": "\nAction: templates_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "fonts_for_meme_generator_and_template_database", "api_action": "\nAction: fonts_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "templates_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"favorite TV show\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_meme_generator_and_template_database", "api_action": "\nAction: search_for_meme_generator_and_template_database\nAction Input: {\n  \"searchstring\": \"favorite TV show\"\n}", "api_reaction": null}}]}
{"URL": "79598", "query": "I work for a travel agency and we are looking for data on the cities with the highest homicide rates in the world. Can you provide us with a list of these cities along with their rates? It would be great if the list is sorted in descending order of the rates.", "api_names": ["get_by_homicide_rate_for_world_cities_by_homicide_rate", "Finish", "api_create_user_for_1p_challenge", "channel_videos_for_youtube_search", "general_info_for_covid_italy_statistics", "metars_in_time_range_for_aviation_weather_center", "air_quality_history_for_air_quality", "search_roman_god_by_name_for_roman_gods_by_pizza_api", "get_stored_word_from_any_category_for_taboo_api", "get_basic_free_for_streaming_availability"], "api_descs": {"Finish": "No description available.", "air_quality_history_for_air_quality": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.", "api_create_user_for_1p_challenge": "Creates a new user within the system, returning the userId", "channel_videos_for_youtube_search": "Get the latest videos published by a Youtube channel", "general_info_for_covid_italy_statistics": "General information of service", "get_basic_free_for_streaming_availability": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.", "get_by_homicide_rate_for_world_cities_by_homicide_rate": "Get by homicide rate", "get_stored_word_from_any_category_for_taboo_api": "Get a random result which will contain the main phrase and the taboo words, result may come from any of the stored categories.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "metars_in_time_range_for_aviation_weather_center": "Obtain all METARs for a station collected between these start and end times using ISO8601  date/time format, with UTC offset: YYYY-MM-DDThh:mm:ssZ. Please see [W3C date/time formats](http://www.w3.org/TR/NOTE-datetime).", "search_roman_god_by_name_for_roman_gods_by_pizza_api": "Search for a Roman God By name to get a description about them"}, "aseqs": [{"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_homicide_rate_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_homicide_rate_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_homicide_rate_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}]}
{"URL": "26444", "query": "I need to filter out stopwords from user input in my software application. Can you provide me with the stopwords for a specific language using the Stopwords API? Additionally, I would like to retrieve a list of available word categories using the Categories API.", "api_names": ["stopwords_for_free_stopwords", "categories_for_free_stopwords", "languages_for_free_stopwords", "Finish", "user_feed_video_posts_for_social_media_data_tt", "getmindfulnessquote_for_metaapi_mindfulness_quotes", "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes", "downloadscreenshot_for_helioviewer_v1", "search_for_serp_api", "get_products_in_category_for__onboarding_project", "getgames_for_diablo4_smartable", "top_free_games_for_store_apps", "get_stream_tags_for_twitch_api", "sizes_percountry_for_africa_api_", "getpetbyid_for_swagger_petstore", "get_geo_map_for_regions_for_trends_keywords_in_different_regions"], "api_descs": {"Finish": "No description available.", "categories_for_free_stopwords": "Will list all available word categories. Check this before calling /stopwords", "downloadscreenshot_for_helioviewer_v1": "Download a custom screenshot (that was generated using the `takeScreenshot` API endpoint).", "get_geo_map_for_regions_for_trends_keywords_in_different_regions": "The \"Trending Keywords by Geo Regions\" API allows developers to access a list of 50 geographic regions and their corresponding trending keywords. With this API, developers can retrieve valuable insights into the most popular and trending search terms for specific locations.", "get_products_in_category_for__onboarding_project": " ", "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes": "This endpoint will return quotes by given movie or TV show name", "get_stream_tags_for_twitch_api": "Returns stream tags.", "getgames_for_diablo4_smartable": "Get Diablo 4 gameplays.", "getmindfulnessquote_for_metaapi_mindfulness_quotes": "Get a random quote about mindfulness from a list of 100 quotes.", "getpetbyid_for_swagger_petstore": "Returns a single pet", "languages_for_free_stopwords": "Will list all available stopword languages including how many words each language contains.", "search_for_serp_api": "Perform Google search and get results", "sizes_percountry_for_africa_api_": "Gets the size of a specific country.\nTakes parameter: <country_name>\nResponse example:\n{\n\"size\":580367\n\"unit\":\"km2\"\n\"country\":\"Kenya\"\n}", "stopwords_for_free_stopwords": "Will return the exact extract words to use in your data analysis or application", "top_free_games_for_store_apps": "Top free games chart.", "user_feed_video_posts_for_social_media_data_tt": "Get current user feed. \n\n- Before testing don't forget to fill out the username **OR** sec_uid inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more."}, "aseqs": [{"api_name": "languages_for_free_stopwords", "api_action": "\nAction: languages_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "stopwords_for_free_stopwords", "api_action": "\nAction: stopwords_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "categories_for_free_stopwords", "api_action": "\nAction: categories_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "languages_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "categories_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "categories_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stopwords_for_free_stopwords"}}]}
{"URL": "82275", "query": "I'm writing an article about football and I need some visual content. Can you fetch me the latest Instagram posts with the hashtag 'football'? It would be helpful to have access to the captions, timestamps, images, usernames, and avatars of the users who posted them. If possible, please also include the number of likes and the dimensions (width and height) of the images.", "api_names": ["hashtag_for_instagram_1", "Finish", "downloadfilefromincomingmessage_for_green_api", "get_player_info_for_valorant_esports_v2", "timezone_for_timezone_by_location", "search_challenge_for_tiktok_video_no_watermark_v2", "user_by_id_for_yc_hacker_news_official", "search_for_rakutensupportdefaultteam", "breed_type_for_catbreeddb", "total_amount_for_soti_sync", "v1_post_post_id_comments_for_tokapi_mobile_version", "v1_network_for_blocktrail_bitcoin_developers_platform"], "api_descs": {"Finish": "No description available.", "breed_type_for_catbreeddb": "Gives all results by the type of breed.", "downloadfilefromincomingmessage_for_green_api": "Документация [DownloadFile](https://green-api.com/docs/api/receiving/files/DownloadFile/)", "get_player_info_for_valorant_esports_v2": "Get name, country, team and more about a player.", "hashtag_for_instagram_1": "Posts by hashtag", "search_challenge_for_tiktok_video_no_watermark_v2": "Search challenge by keywords", "search_for_rakutensupportdefaultteam": "Search Items", "timezone_for_timezone_by_location": "Convert a position into its timezone", "total_amount_for_soti_sync": "Total Amount to be paid", "user_by_id_for_yc_hacker_news_official": "Users are identified by case-sensitive ids", "v1_network_for_blocktrail_bitcoin_developers_platform": "BlockTrail API Endpoint", "v1_post_post_id_comments_for_tokapi_mobile_version": "Comments by video ID"}, "aseqs": [{"api_name": "hashtag_for_instagram_1", "api_action": "\nAction: hashtag_for_instagram_1\nAction Input: {\n  \"hashtag\": \"football\",\n  \"raw\": false\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "hashtag_for_instagram_1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "downloadfilefromincomingmessage_for_green_api"}}]}
{"URL": "73091", "query": "Please draw a card from a regular 52-card playing deck and inform me of its suit and value. Additionally, I would like to draw multiple cards, let's say 10, and find out their suits and values. I would be grateful for your support.", "api_names": ["cards_for_card_draw_simulator", "card_for_card_draw_simulator", "Finish", "getmentions_for_track_the_mentions_and_conversations_about_your_business", "sentiment_analysis_for_text_sentiment_api", "video_related_contents_for_youtube", "game_report_for_hockey_live_sk_data", "get_user_tagged_media_by_user_id_for_instagram_looter", "list_by_equipment_for_exercisedb", "3_month_historical_daily_prices_for_stock_prices", "today_for_show_air_dates", "wallets_balance_by_chain_for_defi_watch", "carbonfootprintfrommotorbike_for_carbonfootprint", "opt_rho_for_kiann_options_project", "standard_deviation_for_qvantana"], "api_descs": {"3_month_historical_daily_prices_for_stock_prices": "3 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "carbonfootprintfrommotorbike_for_carbonfootprint": "Returns the CO2e in Kg from a motorbike travel", "card_for_card_draw_simulator": "Draw one card from a regular 52-card playing deck.", "cards_for_card_draw_simulator": "Draw multiple cards from a regular 52-card playing deck.", "game_report_for_hockey_live_sk_data": "Get game score, goals, penalties and team statistics for a certain game ID", "get_user_tagged_media_by_user_id_for_instagram_looter": "Get **Instagram** user tagged media by **user_id**", "getmentions_for_track_the_mentions_and_conversations_about_your_business": "Find your brand, competitor, or any other query mentions across the web", "list_by_equipment_for_exercisedb": "Fetch exercises by type of equipment", "opt_rho_for_kiann_options_project": "option lognormal greeks : delta calculates the delta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_= 0 (default) for use in rapidAPI.com", "sentiment_analysis_for_text_sentiment_api": "This endpoint takes a GET request with a string as a parameter and returns the sentiment scores (polarity and subjectivity) of the text as well as the 'Full Text', 'Language', 'Entities', 'Keywords', 'Sentiment Label' and 'Subjectivity Label'.", "standard_deviation_for_qvantana": "Standard deviation indicator", "today_for_show_air_dates": "Shows airing today", "video_related_contents_for_youtube": "Video Related Contents", "wallets_balance_by_chain_for_defi_watch": "Get wallet balance in USD by chain"}, "aseqs": [{"api_name": "card_for_card_draw_simulator", "api_action": "\nAction: card_for_card_draw_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "cards_for_card_draw_simulator", "api_action": "\nAction: cards_for_card_draw_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "cards_for_card_draw_simulator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cards_for_card_draw_simulator", "api_action": "{\"count\": 1, \"suitAndValue\": true}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "card_for_card_draw_simulator"}}]}
{"URL": "40310", "query": "I want to surprise my friends with some fun cat facts. Can you give me a random fact about cats? Also, it would be great if you could provide me with a list of all the available facts about cats. Thanks!", "api_names": ["get_all_facts_about_cat_for_cat_facts", "get_a_random_fact_about_cats_for_cat_facts", "Finish", "price_for_yahoo_finance", "binance_charts_for_candlestick_chart", "basketball_live_matches_for_sports_live_scores", "ask_question_to_ai_service_for_ask_ai", "search_for_google_web_search", "scrape_links_for_scrapey_link_scraper", "replies_for_axesso_instagram_data_service", "generating_agency_specific_reports_for_odesk_apis", "random_song_out_of_artist_for_halsey_lyric_snippets", "thumbnail_for_3d_services", "flight_search_v2_for_flight_fare_search", "disclaimer_for_mrautoparts", "live_quick_stats_v3_for_chartbeat", "statisticsinuniquetournament_for_sportifyapi", "getallrecordssince_for_360_business_tool"], "api_descs": {"Finish": "No description available.", "ask_question_to_ai_service_for_ask_ai": "Ask question to AI Service. Be concise.", "basketball_live_matches_for_sports_live_scores": "Returns Basketball Live Matches with betting odds", "binance_charts_for_candlestick_chart": "This endpoint creates candlestick charts for any cryptocurrency listed on [Binance](https://www.binance.com) that you want!", "disclaimer_for_mrautoparts": "we do not guarantee  product safety or prices", "flight_search_v2_for_flight_fare_search": "A faster, more agile Endpoint that's used to search flights.", "generating_agency_specific_reports_for_odesk_apis": "Time reports can be generated for an agency, in order to use this API the authorized user needs staffing manager permissions to the agency.", "get_a_random_fact_about_cats_for_cat_facts": "This endpoint returns a random fact about cats", "get_all_facts_about_cat_for_cat_facts": "This endpoint returns all available fact about cats in our database.", "getallrecordssince_for_360_business_tool": "Get all data modified since", "live_quick_stats_v3_for_chartbeat": "Returns an overview summary of the people on your domain right now. The number of people on a page, reading, writing, idle, etc... This call returns real-time data.", "price_for_yahoo_finance": "Returns the Stock Price Information for the symbol passed as parameter\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd\nfor eth try : eth-usd\nfor dogecoin try : doge-usd", "random_song_out_of_artist_for_halsey_lyric_snippets": "This endpoint retrieves a random song by the specified artist and returns it in the response.", "replies_for_axesso_instagram_data_service": "Fetch replies for a given commentId.  CommentId can be obtained from the comments endpoint response in field node.id. Also the field edge_threaded_comments.page_info.end_cursor needs to be passed for the given comment which can also be found in the response from the comments endpoint.", "scrape_links_for_scrapey_link_scraper": "Scrape all links from URL", "search_for_google_web_search": "Search", "statisticsinuniquetournament_for_sportifyapi": "Statisticsin Unique Tournament", "thumbnail_for_3d_services": " "}, "aseqs": [{"api_name": "get_a_random_fact_about_cats_for_cat_facts", "api_action": "\nAction: get_a_random_fact_about_cats_for_cat_facts\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_facts_about_cat_for_cat_facts", "api_action": "\nAction: get_all_facts_about_cat_for_cat_facts\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_a_random_fact_about_cats_for_cat_facts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_facts_about_cat_for_cat_facts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_random_fact_about_cats_for_cat_facts"}}]}
{"URL": "74819", "query": "My family and I are planning to watch a movie this weekend. Can you assist us in finding the showtimes for all the available movies at Cinemas NOS? It would be great if you could include the movie names, showtimes, and theater locations so that we can plan accordingly.", "api_names": ["Finish", "api_information_for_movie_showtimes", "anime_for_hummingbird_v1", "station_information_for_bart", "qwetre_for_test", "aliexpress_item_description_for_aliexpress_datahub", "search_patent_for_global_patent", "entnahme_for_regionalkonzept_strom_herkunft", "custom_ticker_for_global_ethereum_price_index_gex", "titles_for_rocket_league", "year_end_top_artists_for_billboard_v2", "calendar_events_for_calendarevents"], "api_descs": {"Finish": "No description available.", "aliexpress_item_description_for_aliexpress_datahub": "All details of a single item.", "anime_for_hummingbird_v1": "", "api_information_for_movie_showtimes": "Get the sessions for the specified movie (IMDb id)", "calendar_events_for_calendarevents": "Retrieve Google Calendar Events from a public calendar", "custom_ticker_for_global_ethereum_price_index_gex": "This endpoint can be used to generate a custom index in a certain currency. The “inex” path parameter represents “include” or “exclude”, you can choose to generate an index removing specified exchanges, or only including the few that you require.", "entnahme_for_regionalkonzept_strom_herkunft": "Endpunkt erlaubt eine Liste der Postleitzahlenbereiche zu erhalten, in denen Erzeugungsanlagen sein dürfen, die  für einen Verbraucher (Entnahme) an gegebener Postleitzahl ist.\n\n**Regionaler Herkunftsnachweis**\nBei Verwendung von Regionalnachweisen dürfen Stromversorger nun in ihrer Stromkennzeichnung ausweisen, dass der von ihnen gelieferte EEG-Strom aus Anlagen in der Region der Verbraucherin oder des Verbrauchers kommt.  [weitere Informationen](https://www.umweltbundesamt.de/dokument/rnr-regionenkonzept-2021/)\n\n**Verwendung**\n`/entnahme?postleitzahl=10117 `\n\nLiefert eine Liste der Postleitzahlen, an der eine Erzeugungsanlage sein darf, damit der Strom als regionaler Ökostrom bezeichnet werden darf, wenn die Netzentnahme (Verbrauch) in der Postleitzahl `10117` stattfindet.\n\nDatenstand: 2021", "qwetre_for_test": "qweytr", "search_patent_for_global_patent": "search with keyword and return list of patents", "station_information_for_bart": "", "titles_for_rocket_league": "Check a player's titles:\n`rocket-league1.p.rapidapi.com/titles/:player`", "year_end_top_artists_for_billboard_v2": "Get the Year-End Top Artists chart."}, "aseqs": [{"api_name": "api_information_for_movie_showtimes", "api_action": "\nAction: api_information_for_movie_showtimes\nAction Input: {\n  \"is_id\": \"tt1375666\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "api_information_for_movie_showtimes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_information_for_movie_showtimes"}}]}
{"URL": "77084", "query": "I'm a film student working on a project and I need to analyze movies from different genres. Can you help me discover movies in the genres of thriller, horror, and sci-fi? It would be great if you could provide me with the details and ratings of these movies.", "api_names": ["search_by_genre_for_advanced_movie_search", "get_detailed_response_for_advanced_movie_search", "Finish", "5000img_for_random_anime_img", "check_a_url_for_exerra_phishing_check", "properties_get_facilities_for_booking", "profile_for_rocket_league", "api_for_a", "sub_table_names_for_fitness_calculator", "youtube_channel_id_for_youtube_search", "get_app_reviews_for_google_play_api", "user_info_for_tiktok_bulletproof"], "api_descs": {"5000img_for_random_anime_img": "randomly selects around 5000 images", "Finish": "No description available.", "api_for_a": "a", "check_a_url_for_exerra_phishing_check": "Check if a URL is a known phishing attempt", "get_app_reviews_for_google_play_api": "Returns app reviews. Uses cursor.", "get_detailed_response_for_advanced_movie_search": "Get detailed response for a movie ID", "profile_for_rocket_league": "Check a player's profile:\n`rocket-league1.p.rapidapi.com/profile/:player`", "properties_get_facilities_for_booking": "Get facilities of property by id", "search_by_genre_for_advanced_movie_search": "Discover movies by Genre", "sub_table_names_for_fitness_calculator": "Find sub-table names of a table name in the food database.", "user_info_for_tiktok_bulletproof": "Retrieve TikTok user info by username", "youtube_channel_id_for_youtube_search": "This endpoint get the channel ID of a Youtube Channel given the channel name"}, "aseqs": [{"api_name": "search_by_genre_for_advanced_movie_search", "api_action": "\nAction: search_by_genre_for_advanced_movie_search\nAction Input: {}", "api_reaction": null}, {"api_name": "get_detailed_response_for_advanced_movie_search", "api_action": "\nAction: get_detailed_response_for_advanced_movie_search\nAction Input: {\n  \"movie_id\": 385687\n}", "api_reaction": null}, {"api_name": "get_detailed_response_for_advanced_movie_search", "api_action": "\nAction: get_detailed_response_for_advanced_movie_search\nAction Input: {\n  \"movie_id\": 123456\n}", "api_reaction": null}, {"api_name": "get_detailed_response_for_advanced_movie_search", "api_action": "\nAction: get_detailed_response_for_advanced_movie_search\nAction Input: {\n  \"movie_id\": 654321\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_genre_for_advanced_movie_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_genre_for_advanced_movie_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_genre_for_advanced_movie_search"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_by_genre_for_advanced_movie_search\",\n\t\"api_action\": \"\\nAction: search_by_genre_for_advanced_movie_search\\nAction Input: {\\n  \\\"genre\\\": [\\n    \\\"Thriller\\\",\\n    \\\"Horror\\\",\\n    \\\"Sci-Fi\\\"\\n  ]}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_genre_for_advanced_movie_search"}}]}
{"URL": "44641", "query": "I'm developing an application and I need to check if a domain is a free domain. Can you provide me with the information for the domain 'example.com'? Additionally, I would like to know if the domain is a role account and if it is disposable. Please suggest an alternative domain if necessary.", "api_names": ["Finish", "disposable_domain_and_suggest_domain_for_fast_email_verifier", "freedomain_for_fast_email_verifier", "role_account_for_fast_email_verifier", "instagram_user_info_for_instagram_v9", "premium_tips_for_betigolo_tips", "convert_for_just_currencies", "yearly_income_statements_for_freedom_finance", "getmoviestatus_for_helioviewer_v1", "v1_quotes_for_quotes_by_api_ninjas", "ask_stories_for_yc_hacker_news_official", "geocode_for_cameroon", "politician_goverlytics_id_for_goverlytics", "entry_list_for_golf_leaderboard_data", "get_list_of_algorithms_for_general_detection", "v1_search_free_for_newscatcher"], "api_descs": {"Finish": "No description available.", "ask_stories_for_yc_hacker_news_official": "Up to 200 of the latest Ask HN Stories!", "convert_for_just_currencies": "Convert", "disposable_domain_and_suggest_domain_for_fast_email_verifier": "Find out if the domain is disposable and get a suggested domain.", "entry_list_for_golf_leaderboard_data": "Entry List for given tournament - query this to see who will be taking part.", "freedomain_for_fast_email_verifier": "Check whether or not you have a free domain.", "geocode_for_cameroon": "This endpoint allows you to lookup locations in Cameroon by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_list_of_algorithms_for_general_detection": "Service provides alternative algorithms that may be used for image detection.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.", "getmoviestatus_for_helioviewer_v1": "", "instagram_user_info_for_instagram_v9": "Get Instagram account information", "politician_goverlytics_id_for_goverlytics": "Get 1 politician given their 'goverlytics_id'.", "premium_tips_for_betigolo_tips": "List of active Premium Tips", "role_account_for_fast_email_verifier": "Check the rols account of your domain", "v1_quotes_for_quotes_by_api_ninjas": "Returns one (or more) random quotes.", "v1_search_free_for_newscatcher": "**Up to 100 articles per 1 API call even with free Basic Plan.**\nFree search. Only the language filter is allowed.", "yearly_income_statements_for_freedom_finance": "Annual income statements"}, "aseqs": [{"api_name": "freedomain_for_fast_email_verifier", "api_action": "\nAction: freedomain_for_fast_email_verifier\nAction Input: {\n\"domain\": \"example.com\"\n}", "api_reaction": null}, {"api_name": "role_account_for_fast_email_verifier", "api_action": "\nAction: role_account_for_fast_email_verifier\nAction Input: {\n\"domain\": \"example.com\"\n}", "api_reaction": null}, {"api_name": "disposable_domain_and_suggest_domain_for_fast_email_verifier", "api_action": "\nAction: disposable_domain_and_suggest_domain_for_fast_email_verifier\nAction Input: {\n\"domain\": \"example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "freedomain_for_fast_email_verifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "role_account_for_fast_email_verifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "disposable_domain_and_suggest_domain_for_fast_email_verifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "freedomain_for_fast_email_verifier", "api_action": "\nAction: freedomain_for_fast_email_verifier\nAction Input: {\n\"domain\": \"example.com\"\n}", "api_reaction": null}}]}
{"URL": "56500", "query": "Find the Instagram username for the user with the PK 246813579 and validate the username 'selenagomez'. Search for hashtags using the keyword 'nature' and search for locations with the name 'Los Angeles'.", "api_names": ["search_hashtags_for_instagram_v2", "validate_username_for_instagram_v2", "pk_to_username_for_instagram_v2", "Finish", "search_locations_for_instagram_v2", "get_models_modelid_info_v1_for_shapeways", "best_bestgoal_for_morpheus_predictions_", "get_all_city_names_for_kfc_locations", "username_to_pk_convert_for_instagram_api_v2", "get_company_ads_count_for_fresh_linkedin_company_data", "get_all_collections_for_hadiths_api", "get_topic_for_textking_translation", "api_countriesavailabletoshipping_for_magic_aliexpress", "get_nft_owner_for_uniblock", "novels_for_web_novel_api", "marine_history_weather_api_for_world_weather_online_api", "bus_trolley_schedules_for_septa", "billboard_global_200_for_billboard_v2", "search_for_american_company_business_data", "searchstation_for_radio_world_75_000_worldwide_fm_radio_stations_"], "api_descs": {"Finish": "No description available.", "api_countriesavailabletoshipping_for_magic_aliexpress": "This resource represents the countries. Each country is composed of Code and Name Attributes. This service can be used to communicate with product service for the countryFrom and countryTo query parameters.", "best_bestgoal_for_morpheus_predictions_": "Today's best BestGoal", "billboard_global_200_for_billboard_v2": "Get the Billboard Global 200 chart.", "bus_trolley_schedules_for_septa": "", "get_all_city_names_for_kfc_locations": "GET all City names", "get_all_collections_for_hadiths_api": "Get all collections from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.", "get_company_ads_count_for_fresh_linkedin_company_data": "Get number of ads the company posted on LinkedIn. 1 request = 1 credit.", "get_models_modelid_info_v1_for_shapeways": "", "get_nft_owner_for_uniblock": "Gets the owner of a specific ERC-721 NFT.", "get_topic_for_textking_translation": "Returns a single topic area with the given ID.", "marine_history_weather_api_for_world_weather_online_api": "The Historical Marine Weather API method allows you to access marine data since 1st Jan, 2015 for a given longitude and latitude, as well as tide data. The Historical Marine Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, Tide data, significant wave height, swell height, swell direction and swell period.", "novels_for_web_novel_api": "Returns the amount of pages in the Novel Catalog.", "pk_to_username_for_instagram_v2": "Find username from PK (userid)", "search_for_american_company_business_data": "Search business contacts", "search_hashtags_for_instagram_v2": "Search tags name by keyword", "search_locations_for_instagram_v2": "Location name search from keyword", "searchstation_for_radio_world_75_000_worldwide_fm_radio_stations_": "Search Radio station by keywords.\n- keyword = radio name, country name\n- limit = item limitation per page ***default 10***\n- page = page number to be displayed ***default 1***\n- order = order by ASCENDING/DISASCENDING  *(use only ASC or DESC)* ***default ASC***", "username_to_pk_convert_for_instagram_api_v2": "it converts any username on instagram to the unique id which is called pk", "validate_username_for_instagram_v2": "Instagram Username validation"}, "aseqs": [{"api_name": "pk_to_username_for_instagram_v2", "api_action": "\nAction: pk_to_username_for_instagram_v2\nAction Input: {\n  \"pk\": \"246813579\"\n}", "api_reaction": null}, {"api_name": "validate_username_for_instagram_v2", "api_action": "\nAction: validate_username_for_instagram_v2\nAction Input: {\n  \"username\": \"selenagomez\"\n}", "api_reaction": null}, {"api_name": "search_hashtags_for_instagram_v2", "api_action": "\nAction: search_hashtags_for_instagram_v2\nAction Input: {\n  \"name\": \"nature\"\n}", "api_reaction": null}, {"api_name": "search_locations_for_instagram_v2", "api_action": "\nAction: search_locations_for_instagram_v2\nAction Input: {\n  \"name\": \"Los Angeles\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to first find the username from PK, then validate the username 'selenagomez', next search hashtags using the keyword 'nature', and finally search for locations with the name 'Los Angeles'.\n\t\"api_name\": \"username_to_pk_convert_for_instagram_api_v2\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "pk_to_username_for_instagram_v2", "api_action": "\nAction: pk_to_username_for_instagram_v2\nAction Input: {\n  \"pk\": \"246813579\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_hashtags_for_instagram_v2", "api_action": "\nAction: search_hashtags_for_instagram_v2\nAction Input: {\n  \"keyword\": \"nature\",\n  \"limit\": 10,\n  \"page\": 1,\n  \"order\": \"ASC\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_locations_for_instagram_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pk_to_username_for_instagram_v2", "api_action": "\nAction: pk_to_username_for_instagram_v2\nAction Input: {\n  \"pk\": \"246813579\"\n}", "api_reaction": null}}]}
{"URL": "54653", "query": "I'm planning a company event and would like to include quotes related to success and leadership. Please give me two random quotes from these categories. Additionally, let me know the available categories for future reference.", "api_names": ["list_categories_for_famous_quotes", "get_random_quotes_for_famous_quotes", "Finish", "get_all_locations_for_art_openings_italy", "suggestqueries_for_auto_suggest_queries", "matchschedules_for_icehockeyapi", "best_quote_for_morpheus_predictions_", "sms_sendernames_for_smsapi_com", "channel_community_for_youtube_data", "findplacesnearby_for_trueway_places", "latest_tweets_for_crypto_news_v3", "get_past_results_10_years_for_4d_results", "packs_for_flaticon", "profile_data_for_linkedin_profile_data", "songs_get_track_listening_count_for_shazam_api"], "api_descs": {"Finish": "No description available.", "best_quote_for_morpheus_predictions_": "The best predictions with good odds", "channel_community_for_youtube_data": "channel-community", "findplacesnearby_for_trueway_places": "Search for nearby places", "get_all_locations_for_art_openings_italy": "This service returns a list of all locations where art events take place.", "get_past_results_10_years_for_4d_results": "Return all company 4D Results within a specific date range.\n(Up to 10 year data and only available for MEGA PLAN subscriber)", "get_random_quotes_for_famous_quotes": "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint", "latest_tweets_for_crypto_news_v3": "This endpoint provides the latest crypto news tweets incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nParameters:\n- **[OPTIONAL] last_n_hours**: Only tweets from the last *n* hours are provided (default: 12).\n- **[OPTIONAL] max_articles**: Maximum number of tweets in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract form tweet (default:10)\n\nCurrently, we make use of the following sources:\n- [@BTCTN](https://twitter.com/BTCTN) \n- [@CryptoBoomNews](https://twitter.com/CryptoBoomNews)\n- [@cryptocom](https://twitter.com/cryptocom)\n- [@Crypto_Potato](https://twitter.com/crypto_potato)\n\nIf you have any suggestions for twitter accounts to add, please get in touch.", "list_categories_for_famous_quotes": "List all available categories", "matchschedules_for_icehockeyapi": "Get the schedules of ice hockey matches for a given date, including match timings, teams, and other relevant information.", "packs_for_flaticon": "Method that allows you to get a paged list with information about the packs available at Flaticon. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.  By default, it will return a list order by priority. If no order is set, it will return items order by priority.", "profile_data_for_linkedin_profile_data": "Get LinkedIn profile data with username", "sms_sendernames_for_smsapi_com": " ", "songs_get_track_listening_count_for_shazam_api": "Returns the number of times a particular song has been played", "suggestqueries_for_auto_suggest_queries": "Use this endpoint to fetch Suggestions"}, "aseqs": [{"api_name": "list_categories_for_famous_quotes", "api_action": "\nAction: list_categories_for_famous_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 2,\n  \"category\": \"success,leadership\"\n}", "api_reaction": null}, {"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 2,\n  \"category\": \"success\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_random_quotes_for_famous_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_quotes_for_famous_quotes", "http_method": "GET"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_categories_for_famous_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 2,\n  \"category\": \"leadership\"\n}", "api_reaction": null}}]}
{"URL": "53159", "query": "I'm organizing a company retreat in Mexico and I need to know the local time and timezone of Cancun. Can you provide me with this information? Additionally, I would like to find the nearest cities to Cancun and their populations. Please include the distance and compass direction from Cancun to these cities.", "api_names": ["getnearestcities_for_reverse_geocoding_and_geolocation_service", "gettimezone_for_reverse_geocoding_and_geolocation_service", "Finish", "getreviews_for_google_reviews_scraper", "find_zip_codes_by_city_and_street_for_polish_zip_codes", "entities_search_for_bing_entity_search", "get_score_by_id_for_thefluentme", "getbreeds_for_dog_api", "v1_reversegeocoding_for_geocoding_by_api_ninjas", "company_balance_sheet_for_real_time_finance_data", "get_all_state_names_for_kfc_locations", "get_weapon_recipes_for_lost_ark_simple", "team_season_statistics_for_hockey_datafeeds_by_rolling_insights", "labels_for_pinaculo", "supported_symbols_for_metals_prices_rates_api"], "api_descs": {"Finish": "No description available.", "company_balance_sheet_for_real_time_finance_data": "Get public company's **quarterly** or **annual** balance sheet. Supports the *stock* type only.", "entities_search_for_bing_entity_search": "Get entities and places results for a given query.", "find_zip_codes_by_city_and_street_for_polish_zip_codes": "Return all zip codes by street name in the city.", "get_all_state_names_for_kfc_locations": "GET all State names", "get_score_by_id_for_thefluentme": "Returns a score by `score_id`. You can get the `score_id` from the `Get all scores` endpoint. The scale parameter defines the maximum number of points for the recording, as well as each word. This parameter is not required. The default value of 100 will be applied if the parameter is not provided.", "get_weapon_recipes_for_lost_ark_simple": "Get List of** Lost Ark** craftable Weapons.", "getbreeds_for_dog_api": "LIST ALL BREEDS", "getnearestcities_for_reverse_geocoding_and_geolocation_service": "Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair.", "getreviews_for_google_reviews_scraper": "with this endpoint you can all reviews for any business searched  with pagination", "gettimezone_for_reverse_geocoding_and_geolocation_service": "Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time.", "labels_for_pinaculo": "Get labels.", "supported_symbols_for_metals_prices_rates_api": "The API comes with a constantly updated endpoint returning all available symbols.", "team_season_statistics_for_hockey_datafeeds_by_rolling_insights": "Returns statistics for teams", "v1_reversegeocoding_for_geocoding_by_api_ninjas": "API Ninjas Reverse Geocoding API endpoint."}, "aseqs": [{"api_name": "gettimezone_for_reverse_geocoding_and_geolocation_service", "api_action": "\nAction: gettimezone_for_reverse_geocoding_and_geolocation_service\nAction Input: {\n\"latitude\": 21.1619,\n\"longitude\": -86.8515\n}", "api_reaction": null}, {"api_name": "getnearestcities_for_reverse_geocoding_and_geolocation_service", "api_action": "\nAction: getnearestcities_for_reverse_geocoding_and_geolocation_service\nAction Input: {\n\"latitude\": 21.1619,\n\"longitude\": -86.8515,\n\"range\": 50000\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gettimezone_for_reverse_geocoding_and_geolocation_service"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnearestcities_for_reverse_geocoding_and_geolocation_service"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gettimezone_for_reverse_geocoding_and_geolocation_service", "api_action": "{\"latitude\": 21.1619, \"longitude\": -86.8515}", "api_reaction": null}}]}
{"URL": "49654", "query": "I'm planning a dinner party and I need some ideas for chicken dishes. Can you provide me with a list of all the chicken dishes available? Also, I would like to know the details of the dish with ID 2, including the name, description, image, price, and quantity.", "api_names": ["search_by_id_for_kfc_chickens", "get_chickens_for_kfc_chickens", "Finish", "random_historic_event_for_world_history_timeline", "see_about_nft_prices_for_crypto_currency_scraper_api", "get_stream_number_of_viewers_for_gwyo_twitch", "metadata_for_cryptocurrency_data", "provider1_live_match_id_for_football_betting_odds", "united_states_retail_and_recreation_mobility_for_covid_19_economic_impact", "latest_for_exchange_rates_api_", "get_a_conversation_for_lemurbot", "get_nfts_for_felina_multisig_wallet_api", "fetch_events_for_calendars", "get_apps_from_dev_for_google_play_api", "wrt_transformer_for_walnut_topic"], "api_descs": {"Finish": "No description available.", "fetch_events_for_calendars": "Fetches a list of events in either JSON or iCalendar format for the selected calendar", "get_a_conversation_for_lemurbot": "Get a specific conversation by it's id and view it's details", "get_apps_from_dev_for_google_play_api": "Returns dev's apps.", "get_chickens_for_kfc_chickens": "This Endpoint returns all the chicken dishes", "get_nfts_for_felina_multisig_wallet_api": "Fetch the list of owned NFTs by the wallet", "get_stream_number_of_viewers_for_gwyo_twitch": "Get Stream Number of Viewers (using username or id)\n( return an empty JSON object if not currently LIVE )", "latest_for_exchange_rates_api_": "This endpoint returns the latest rates.\n\nGET /latest HTTP/1.1\nRates quote against the Euro by default. You can quote against other currencies using the from parameter.\n\nGET /latest?from=USD HTTP/1.1\nto limits returned rates to specified values.\n\nGET /latest?to=USD,GBP HTTP/1.1", "metadata_for_cryptocurrency_data": "The list of all available assets", "provider1_live_match_id_for_football_betting_odds": "get match", "random_historic_event_for_world_history_timeline": "Returns a Random World Historic Event with the year and the event", "search_by_id_for_kfc_chickens": "Search Chicken Dishes by their **ID**", "see_about_nft_prices_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top nft currencies including names and prices even rank and more!", "united_states_retail_and_recreation_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at retail and recreation.", "wrt_transformer_for_walnut_topic": "Gets the text and set of possible topics separated by a comma.\n\nReturns the ranking of topics from most relevant to least relevant."}, "aseqs": [{"api_name": "get_chickens_for_kfc_chickens", "api_action": "\nAction: get_chickens_for_kfc_chickens\nAction Input: {}", "api_reaction": null}, {"api_name": "search_by_id_for_kfc_chickens", "api_action": "\nAction: search_by_id_for_kfc_chickens\nAction Input: {\n  \"is_id\": 2\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_id_for_kfc_chickens"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_id_for_kfc_chickens"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_id_for_kfc_chickens"}}]}
{"URL": "85524", "query": "My friend is researching ESG topics and needs news articles related to SASB and UN SDGs. Can you provide the latest ESG news for Apple Inc.? It would be great if the news could be filtered for a specific date.", "api_names": ["getesgnews_for_gaialens_esg_news", "Finish", "get_recipe_by_id_for_ghana_food_recipe_api", "search_for_jsearch", "getfileversions_for_groupdocs_editor_cloud", "get_speaker_list_for_anime_voice_waifu_ai_api", "gettodousingget_for_todo", "get_cast_by_id_for_cinema_api"], "api_descs": {"Finish": "No description available.", "get_cast_by_id_for_cinema_api": "With this endpoint, you can retrieve the full cast's list (together with their images and their role in the movie).", "get_recipe_by_id_for_ghana_food_recipe_api": "This endpoint gets specific recipe by id", "get_speaker_list_for_anime_voice_waifu_ai_api": "Get Speaker List", "getesgnews_for_gaialens_esg_news": "ESG news API with a state of the art algorithm tracking thousands of news sources, social media and NGOs in real-time. The results include ESG specific topics including SASB and UN SDGs and a few other important ESG themes such as Modern Slavery and Gender Equality.", "getfileversions_for_groupdocs_editor_cloud": " ", "gettodousingget_for_todo": "Get todo from id", "search_for_jsearch": "Search for jobs posted on job sites across the web."}, "aseqs": [{"api_name": "getesgnews_for_gaialens_esg_news", "api_action": "\nAction: getesgnews_for_gaialens_esg_news\nAction Input: {}", "api_reaction": null}, {"api_name": "getesgnews_for_gaialens_esg_news", "api_action": "\nAction: getesgnews_for_gaialens_esg_news\nAction Input: {\n  \"date\": \"2023-06-30\"\n}", "api_reaction": null}, {"api_name": "getesgnews_for_gaialens_esg_news", "api_action": "\nAction: getesgnews_for_gaialens_esg_news\nAction Input: {}", "api_reaction": null}, {"api_name": "getesgnews_for_gaialens_esg_news", "api_action": "\nAction: getesgnews_for_gaialens_esg_news\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getesgnews_for_gaialens_esg_news"}}, {"state": "generated_by_agent", "aseq": {"Thought": "The previous API call didn't return any results, so I need to call the ESG news API again with specific filters for SASB and UN SDGs and Apple Inc. The date filter was not provided in the query history, but we can handle it by specifying a date range.", "api_name": "getesgnews_for_gaialens_esg_news", "api_action": "{\"topic\": \"SASB\", \"sdgs\": [\"UN SDGs\"], \"company\": \"Apple Inc.\"}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getesgnews_for_gaialens_esg_news\",\n\t\"api_action\": \"\\nAction: getesgnews_for_gaialens_esg_news\\nAction Input: {\\n  \\\"date\\\": \\\"2023-06-30\\\",\\n  \\\"topics\\\": [\\n    \"SASB\",\\n    \"UN SDGs\"\\n  ]\\n}\",\n\t\"api_reaction\": null\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getesgnews_for_gaialens_esg_news\",\n\t\"api_action\": \"\\nAction: getesgnews_for_gaialens_esg_news\\nAction Input: {\\n  \\\"date\\\": \\\"2023-06-30\\\",\\n  \\\"topics\\\": [\\n    {\\n      \\\"id\\\": \\\"1\\\",\\n      \\\"topicName\\\": \\\"SASB\\\"\\n    },\\n    {\\n      \\\"id\\\": \\\"2\\\",\\n      \\\"topicName\\\": \\\"UN SDGs\\\"\\n    }\\n  ],\\n  \\\"entityIds\\\": [\\n    {\\n      \\\"id\\\": \\\"apple.inc\\\"\\n    }\\n  ]\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getesgnews_for_gaialens_esg_news", "api_action": "\nAction: getesgnews_for_gaialens_esg_news\nAction Input: {\n  \"topics\": [\n    {\n      \"topicName\": \"SASB\",\n      \"includeNewsWithThisTopic\": true,\n      \"excludeNewsWithoutThisTopic\": false\n    },\n    {\n      \"topicName\": \"UN SDGs\",\n      \"includeNewsWithThisTopic\": true,\n      \"excludeNewsWithoutThisTopic\": false\n    }\n  ],\n  \"dateRange\": {\n    \"start\":\"2023-06-30\",\n    \"end\":\"2023-07-01\"\n  }\n}", "api_reaction": null}}]}
{"URL": "41311", "query": "I'm a fashion blogger and I'm looking for unique clothing items to feature on my blog. Can you assist in searching for products in the 'cl' region that are fashion-forward and have a high rating? It would be helpful to see the product details, including the price, image, and seller's location.", "api_names": ["search_products_for_shopeeapi", "product_details_for_shopeeapi", "Finish", "review_for_worldwide_recipes", "get_users_json_for_quickblox", "download_tiktok_video_for_tiktok_video_downloader", "replies_for_sms77io", "retrieve_active_user_lend_eth_offers_for_blur", "streams_investor_relations_for_stocktwits", "get_city_by_id_for_geography_v2", "https_football_api_key_p_rapidapi_com_for_football_api_key", "user_for_instagram_downloader"], "api_descs": {"Finish": "No description available.", "download_tiktok_video_for_tiktok_video_downloader": "Provide Link of TikTok video in url parameter to get Download Links of TikTok Video.", "get_city_by_id_for_geography_v2": "get city by id", "get_users_json_for_quickblox": "Call this API to get a list of current users of you app. By default it returns upto 10 users, but you can change this by adding pagination parameters.", "https_football_api_key_p_rapidapi_com_for_football_api_key": "https://football_api_key.p.rapidapi.com/", "product_details_for_shopeeapi": "Get shopee product details", "replies_for_sms77io": "Retrieves message replies history.", "retrieve_active_user_lend_eth_offers_for_blur": "This endpoint is used to retrieve active user lend ETH offers\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "review_for_worldwide_recipes": "Get reviews", "search_products_for_shopeeapi": "Search product & Paginate", "streams_investor_relations_for_stocktwits": "Returns the most recent 30 messages posted by verified Investor Relations customers.", "user_for_instagram_downloader": "get user info"}, "aseqs": [{"api_name": "search_products_for_shopeeapi", "api_action": "\nAction: search_products_for_shopeeapi\nAction Input: {\n  \"region\": \"cl\",\n  \"q\": \"fashion-forward\",\n  \"p\": 1\n}", "api_reaction": null}, {"api_name": "product_details_for_shopeeapi", "api_action": "\nAction: product_details_for_shopeeapi\nAction Input: {\n  \"region\": \"cl\",\n  \"path\": \"Shopee-66-SUPER-Fashion-Men-MB01-cartera-hombres-Original-hombres-Bense-Classic-Forwardhombre-cartera-i.682924394.14959908191\"\n}", "api_reaction": null}, {"api_name": "product_details_for_shopeeapi", "api_action": "\nAction: product_details_for_shopeeapi\nAction Input: {\n  \"region\": \"cl\",\n  \"path\": \"SUPREME-X-DUNKHIGH-fashion-forward-Antideslizante-Y-Resistente-Al-Desgaste-Zapatillas-Casuales-Medias-i.966707079.18575864201\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_shopeeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_details_for_shopeeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_shopeeapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_shopeeapi", "api_action": "\nAction: search_products_for_shopeeapi\nAction Input: {\n  \"region\": \"cl\",\n  \"q\": \"high rating\",\n  \"p\": 2\n}", "api_reaction": null}}]}
{"URL": "37898", "query": "Please give me two random quotes from the 'happiness' category and three quotes from the 'inspiration' category. Additionally, provide me with a list of all the available categories.", "api_names": ["list_categories_for_famous_quotes", "get_random_quotes_for_famous_quotes", "Finish", "list_topics_for_textking_translation", "validationreport_for_appraisalqc", "rapidapigetobservationhistorybystationid_for_forecast", "head_to_head_for_football_prediction", "getpostdetails_for_tiktok_videos_without_watermark", "logoutuser_for_erictestpet", "show_movie_for_vod_app", "simbrief_get_latest_ofp_for_simbrief_get_latest_ofp", "list_user_albums_for_soundcloud_scraper", "get_movie_images_by_id_for_movies_tv_shows_database", "channel_playlists_for_youtube_data", "market_day_losers_for_mboum_finance"], "api_descs": {"Finish": "No description available.", "channel_playlists_for_youtube_data": "channel-playlists", "get_movie_images_by_id_for_movies_tv_shows_database": "A valid Movie ID (e.g. tt1375666)\nreturn title, id, poster, fanart", "get_random_quotes_for_famous_quotes": "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint", "getpostdetails_for_tiktok_videos_without_watermark": "Get video details like video, music, image", "head_to_head_for_football_prediction": "Shows head to head stats and previous encounters for the home and away team of an upcoming match.", "list_categories_for_famous_quotes": "List all available categories", "list_topics_for_textking_translation": "Returns a collection of all available topics.", "list_user_albums_for_soundcloud_scraper": "This endpoint lists the albums of a user. Pagination scraping is supported.", "logoutuser_for_erictestpet": "", "market_day_losers_for_mboum_finance": "Stocks ordered in ascending order by price percent change with respect to the previous close.", "rapidapigetobservationhistorybystationid_for_forecast": "Get an History object with historical information.", "show_movie_for_vod_app": "Show Movie", "simbrief_get_latest_ofp_for_simbrief_get_latest_ofp": "Get latest ofp in xml (default) or json based on username\nthe json param must be 0 or 1", "validationreport_for_appraisalqc": "The API returns the XML validation report of the Appraisal Report uploaded"}, "aseqs": [{"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 2,\n  \"category\": \"happiness\"\n}", "api_reaction": null}, {"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 3,\n  \"category\": \"inspiration\"\n}", "api_reaction": null}, {"api_name": "list_categories_for_famous_quotes", "api_action": "\nAction: list_categories_for_famous_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 3,\n  \"category\": \"love\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get two random quotes from the 'happiness' category and three quotes from the 'inspiration' category, so I will use the get_random_quotes_for_famous_quotes API for this purpose.\n\t\"api_name\": \"get_random_quotes_for_famous_quotes\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 3,\n  \"category\": \"inspiration\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_categories_for_famous_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_categories_for_famous_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_categories_for_famous_quotes"}}]}
{"URL": "39154", "query": "As a professional League of Legends player, I need to analyze the base stats of different champions. Can you provide me with the base health, attack damage, and ability haste of Ekko, Yasuo, and Lux? Additionally, I would like to know the base stats of all the champions in the game.", "api_names": ["get_all_champion_base_stats_for_league_of_legends_stats", "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "Finish", "getbreeds_for_dog_api", "trending_challenges_for_tiktok_private", "index_for_yahoo_finance", "get_all_gateways_for_aaaa", "latest_mmo_news_for_mmo_games", "playlist_videos_for_youtube_v3_v2", "get_schema_by_name_for_mongodb_wix", "search_jokes_for_humor_jokes_and_memes", "get_stats_for_exerra_phishing_check"], "api_descs": {"Finish": "No description available.", "get_a_specific_champion_s_base_stats_for_league_of_legends_stats": "This endpoint returns the base stats of a specific champion.", "get_all_champion_base_stats_for_league_of_legends_stats": "This endpoint returns all base stats from every champion in the game.", "get_all_gateways_for_aaaa": "Get all Gateways", "get_schema_by_name_for_mongodb_wix": "Get schema details by name. e.g. car", "get_stats_for_exerra_phishing_check": "Get statistics about the Exerra Phishing API", "getbreeds_for_dog_api": "LIST ALL BREEDS", "index_for_yahoo_finance": "Trend Analysis is a relatively straightforward quantitative demand forecasting technique that uses the historical relationship between the operational index (i.e. sales level) and the number of employees required by the organization (demand for labour) to forecast future requirements.", "latest_mmo_news_for_mmo_games": "Latest MMO News powered by MMOBomb.", "playlist_videos_for_youtube_v3_v2": "Get playlist videos", "search_jokes_for_humor_jokes_and_memes": "Search for jokes.\nSee https://humorapi.com/docs/#Search-Jokes for more.", "trending_challenges_for_tiktok_private": "Get Trending Challenges"}, "aseqs": [{"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_a_specific_champion_s_base_stats_for_league_of_legends_stats\nAction Input: {\n  \"name\": \"Ekko\"\n}", "api_reaction": null}, {"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_a_specific_champion_s_base_stats_for_league_of_legends_stats\nAction Input: {\n  \"name\": \"Yasuo\"\n}", "api_reaction": null}, {"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_a_specific_champion_s_base_stats_for_league_of_legends_stats\nAction Input: {\n  \"name\": \"Lux\"\n}", "api_reaction": null}, {"api_name": "get_all_champion_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_all_champion_base_stats_for_league_of_legends_stats\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_a_specific_champion_s_base_stats_for_league_of_legends_stats\nAction Input: {\n  \"name\": \"Yasuo\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_a_specific_champion_s_base_stats_for_league_of_legends_stats\nAction Input: {\n  \"name\": \"Lux\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_all_champion_base_stats_for_league_of_legends_stats\nAction Input: {\n  \"champions\": [\n    \"Ekko\",\n    \"Yasuo\",\n    \"Lux\"\n  ]}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "api_action": "\nAction: get_a_specific_champion_s_base_stats_for_league_of_legends_stats\nAction Input: {\n  \"name\": \"Ekko\",\n  \"stats\": [\n    \"health\",\n    \"attackDamage\",\n    \"abilityHaste\"\n  ]\n}", "api_reaction": null}}]}
{"URL": "46872", "query": "I'm planning a family vacation and I need assistance with advertising my vacation rental property. Can you suggest the best advertising strategies by utilizing endpoint A to analyze market trends and endpoint B to identify popular vacation rental platforms?", "api_names": ["Finish", "endpint_b_for_putreq", "endpoint_a_for_putreq", "actors_detail_for_flixster", "get_video_status_for_api_video", "search_property_by_geo_co_ordinates_deprecated_for_airbnb_v2", "weather_for_kayuloweather", "get_filter_for_tdot_school_data", "titles_x_titles_by_ids_for_moviesdatabase", "medias_for_instagram_v6", "cars_for_car_data", "news_latest_page_for_biztoc"], "api_descs": {"Finish": "No description available.", "actors_detail_for_flixster": "Get detailed information of an actor/actress", "cars_for_car_data": "Retrieve and filter lists of cars", "endpint_b_for_putreq": "efsdfs", "endpoint_a_for_putreq": "end", "get_filter_for_tdot_school_data": "Get Filter", "get_video_status_for_api_video": "This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.\n\nOnce encoding is completed, the response also lists the available stream qualities.", "medias_for_instagram_v6": "Get someone's medias, batch_size range from 1 to 50", "news_latest_page_for_biztoc": "Get the latest news stories in chronological order, filtered by `{page_id}`.", "search_property_by_geo_co_ordinates_deprecated_for_airbnb_v2": "-", "titles_x_titles_by_ids_for_moviesdatabase": "Titles by ids list", "weather_for_kayuloweather": "Obtain weather data for the specified location.\n\nThe `dataSets` query parameter is used to obtain different data, like forecasts and current weather. Thus not all query parameters are needed for every data set. See the description of the query parameters to identify, which parameter is needed for which data set."}, "aseqs": [{"api_name": "endpoint_a_for_putreq", "api_action": "\nAction: endpoint_a_for_putreq\nAction Input: {}", "api_reaction": null}, {"api_name": "endpint_b_for_putreq", "api_action": "\nAction: endpint_b_for_putreq\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use endpoint A for putreq to analyze market trends and endpoint B for putreq to identify popular vacation rental platforms,\n\t\"api_name\": \"endpoint_a_for_putreq\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "endpoint_b_for_putreq"}}, {"state": "generated_by_agent", "aseq": {"api_name": "endpoint_a_for_putreq"}}]}
{"URL": "71178", "query": "I am writing a book about cats and need detailed information about cat breeds. Can you provide me with the details of a single cat breed with ID 34? Additionally, give me a list of all cat breeds sorted in descending order by breed name.", "api_names": ["order_by_descending_for_catbreeddb", "single_cat_breed_for_catbreeddb", "Finish", "event_for_spectation_sports_events_api", "get_isochrone_for_spatialscale_route_engine", "get_individual_news_source_for_live_world_futbol_news", "custom_dice_rolls_for_dice_roll_simulator", "stats_for_tly_link_shortener", "airplanes_ordered_by_ascending_for_airplanesdb", "business_days_work_days_calculator_api_for_business_days_work_days_calculator_", "facilities_lookup_for_senegal_api", "water_vapour_data_by_coordinates_for_ambee_water_vapor_data", "rarity_tools_for_opensea_v2", "search_social_links_for_social_links_search", "au_car_averages_for_car_averages"], "api_descs": {"Finish": "No description available.", "airplanes_ordered_by_ascending_for_airplanesdb": "Get all airplanes ordered by name in ascending order.", "au_car_averages_for_car_averages": "AU Car averages", "business_days_work_days_calculator_api_for_business_days_work_days_calculator_": "# Workdays Calculation API Documentation\n\nThe Workdays Calculation API allows you to calculate the date after a given number of workdays, taking into account weekends and holidays. By specifying the country code, number of workdays, start date, and options, you can retrieve the ISO date of the day after the workdays have passed.\n\n\n## Request Parameters\n\nThe API expects the following GET parameters:\n\n1. `state` (required): The country code for which the workdays are calculated. Please refer to the [list of country codes](https://www.nationsonline.org/oneworld/international-calling-codes.htm) to find the appropriate code for your country.\n\n2. `work_days` (required): The number of workdays to calculate. This indicates how many workdays should be skipped before determining the result.\n\n3. `start_date` (required): The starting date from which to begin counting the workdays. The format of the start date should be `DD/MM/YYYY`.\n\n4. `options` (optional): The options for skipping specific days. This parameter accepts the following values:\n   - `0`: Skip holidays and weekends.\n   - `1`: Skip only weekends.\n   - `2`: Skip only holidays.\n\n## Response\n\nThe API response will be a string representing the ISO date of the day after the specified workdays have passed.\n\n## Example\n\nGiven `start_date` of 19/05/2023, which is Friday, and `work_days` of 2, \nthe returned result will be 23/05/2023. Here's the breakdown of the calculation:\n\n- 19/5-20/5: Weekend (Saturday and Sunday)\n- 21/5: First workday\n- 22/5: Second workday\n\nTherefore, 23/5 is the day after the specified workdays have passed", "custom_dice_rolls_for_dice_roll_simulator": "Roll any number of dice with any number of sides any number of times.", "event_for_spectation_sports_events_api": "Get a single event by ID", "facilities_lookup_for_senegal_api": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "get_individual_news_source_for_live_world_futbol_news": "Get News about football news from a specific news resource.", "get_isochrone_for_spatialscale_route_engine": "The isochrone service computes areas that are reachable within specified time intervals from a location,\nand returns the reachable regions as contours of polygons or lines that you can display on a map.\n\n**Costing parameters**\n\nThe isochrone service uses the auto, bicycle, pedestrian, and multimodal costing models available in the Turn-by-Turn service.\nRefer to the route costing models and costing options documentation for more on how to specify this input.\n\n**Other request parameters**\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Parameter</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>date_time</code></td>\n    <td>\n        The local date and time at the location. These parameters apply only for multimodal requests and are not used with other costing methods.\n        <ul>\n            <li><code>type</code></li>\n            <ul>\n                <li>0 - Current departure time for multimodal requests.</li>\n                <li>1 - Specified departure time for multimodal requests.</li>\n                <li>2 - Specified arrival time. Note: This is not yet implemented.</li>\n            </ul>\n            <li><code>value</code> - the date and time specified in ISO 8601 format (YYYY-MM-DDThh:mm) in the local time zone of departure or arrival. For example, \"2016-07-03T08:06\".\n            </li>\n        </ul>\n    </td>\n</tr>\n<tr>\n    <td><code>id</code></td>\n    <td>\n        Name of the isochrone request. If <code>id</code> is specified, the name is returned with the response.\n    </td>\n</tr>\n<tr>\n    <td><code>contours</code></td>\n    <td>\n        A JSON array of contour objects with the time in minutes or distance in kilometers and color to use for each isochrone contour. You can specify up to four contours (by default).\n        <ul>\n            <li><code>time</code> - A floating point value specifying the time in minutes for the contour.\n            </li>\n            <li><code>distance</code> - A floating point value specifying the distance in kilometers for the contour.\n            </li>\n            <li><code>color</code> -The color for the output of the contour. Specify it as a Hex value, but without the <code>#</code>, such as <code>\"color\":\"ff0000\"</code> for red. If no color is specified, the isochrone service will assign a default color to the output.\n            </li>\n        </ul>\n        You can only specify one metric per contour, i.e. time or distance.\n    </td>\n</tr>\n<tr>\n    <td><code>polygons</code></td>\n    <td>\n        A Boolean value to determine whether to return geojson polygons or linestrings as the contours. The default is <code>false</code>, which returns lines; when <code>true</code>, polygons are returned. Note: When <code>polygons</code> is <code>true</code>, any contour that forms a ring is returned as a polygon.\n    </td>\n</tr>\n<tr>\n    <td><code>generalize</code></td>\n    <td>\n        A floating point value in meters used as the tolerance for Douglas-Peucker generalization. Note: Generalization of contours can lead to self-intersections, as well as intersections of adjacent contours.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n", "order_by_descending_for_catbreeddb": "Gives a list of all cats sorted in descending order by name.", "rarity_tools_for_opensea_v2": "Rarity Tools Collection Items Endpoint , to  use you need to understand the source code of the webpage and reconstruct.", "search_social_links_for_social_links_search": "Get social profile links by search query or keywords. The following social networks are supported: Facebook, TikTok, Instagram, Snapchat, Twitter, Youtube, LinkedIn, GitHub and Pinterest.", "single_cat_breed_for_catbreeddb": "Gives details of a single cat breed.", "stats_for_tly_link_shortener": "", "water_vapour_data_by_coordinates_for_ambee_water_vapor_data": "Get Water Vapour data by Coordinates"}, "aseqs": [{"api_name": "single_cat_breed_for_catbreeddb", "api_action": "\nAction: single_cat_breed_for_catbreeddb\nAction Input: {\n  \"is_id\": 34\n}", "api_reaction": null}, {"api_name": "order_by_descending_for_catbreeddb", "api_action": "\nAction: order_by_descending_for_catbreeddb\nAction Input: {\"ordering\": \"breedName\"}", "api_reaction": null}, {"api_name": "single_cat_breed_for_catbreeddb", "api_action": "\nAction: single_cat_breed_for_catbreeddb\nAction Input: {\n  \"is_id\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"action": {"type": "SEARCH", "query": "cat breed with ID 34", "category": "CAT_BREED"}}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_all_breeds_sorted_desc", "api_action": "\nAction: list_all_breeds_sorted_desc\nAction Input: {\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": [{"api_name": "single_cat_breed_for_catbreeddb", "api_action": "\nAction: single_cat_breed_for_catbreeddb\nAction Input: {\n  \"is_id\": 34\n}"}, {"api_name": "order_by_descending_for_catbreeddb", "api_action": "\nAction: order_by_descending_for_catbreeddb\nAction Input: {\"ordering\": \"breedName\"}"}]}, {"state": "generated_by_agent", "aseq": [{"api_name": "single_cat_breed_for_catbreeddb", "api_action": "\nAction: single_cat_breed_for_catbreeddb\nAction Input: {\n  \"is_id\": 34\n}"}, {"api_name": "order_by_descending_for_catbreeddb", "api_action": "\nAction: order_by_descending_for_catbreeddb\nAction Input: {\"ordering\": \"breedName\"}"}]}]}
{"URL": "45204", "query": "Hi! I'm researching the impact of Bitcoin on the global financial landscape. Can you collect all the recent news about Bitcoin from major news sites worldwide? I'm interested in the news titles, URLs, and sources. Also, I would like specific news from CoinDesk. Thank you!", "api_names": ["get_individual_bitcoin_news_sources_for_bitcoin_news", "get_all_bitcoin_news_for_bitcoin_news", "Finish", "rapidapigetobservationhistorybystationid_for_forecast", "logoutuser_for_publicapitestinginbox", "matchup_related_markets_straight_for_pinaculo", "points_for_live_golf_data", "getorderbyid_for_apfd", "retrieve_a_contract_for_opensea_v2", "get_list_of_publicly_traded_companies_for_stoxx", "random_skin_for_cs_skin_api", "fixtures_by_date_for_cricket_live_data"], "api_descs": {"Finish": "No description available.", "fixtures_by_date_for_cricket_live_data": "Lists fixtures for a given date", "get_all_bitcoin_news_for_bitcoin_news": "This endpoint will return back all the news across all the major bitcoin news site from all over the world", "get_individual_bitcoin_news_sources_for_bitcoin_news": "In this endpoint you can get informations for a specific News resource.", "get_list_of_publicly_traded_companies_for_stoxx": "Provides a list of all publicly traded companies", "getorderbyid_for_apfd": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "logoutuser_for_publicapitestinginbox": "", "matchup_related_markets_straight_for_pinaculo": "Get matchup related markets straight.", "points_for_live_golf_data": "Fetch official FedExCup points earned per player for a given `tournId` and `year`. Note that PGA Tour non-members will not be officially ranked.", "random_skin_for_cs_skin_api": "retrieve name, price, icon, class and weapon for a random counterstrike skin (prices for field tested condition)", "rapidapigetobservationhistorybystationid_for_forecast": "Get an History object with historical information.", "retrieve_a_contract_for_opensea_v2": "This endpoint is used to fetch detailed information about a specified contract."}, "aseqs": [{"api_name": "get_all_bitcoin_news_for_bitcoin_news", "api_action": "\nAction: get_all_bitcoin_news_for_bitcoin_news\nAction Input: {}", "api_reaction": null}, {"api_name": "get_individual_bitcoin_news_sources_for_bitcoin_news", "api_action": "\nAction: get_individual_bitcoin_news_sources_for_bitcoin_news\nAction Input: {\n  \"newspaperid\": \"coindesk\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}]}
{"URL": "20218", "query": "My family is planning a vacation in Paris, France. Can you help me calculate the combined sales tax rate for an address in Paris? Additionally, please provide me with the list of supported countries.", "api_names": ["Finish", "calculate_for_sales_tax_calculator", "supported_countries_for_sales_tax_calculator", "icecream_ingredient_for_recipe_finder", "color_to_picture_for_color_to_picture_api", "team_information_for_baseball_datafeeds_by_rolling_insights", "dad_jokes_health_for_dad_jokes_v2", "see_about_gainers_losers_for_crypto_currency_scraper_api", "get_elevation_for_elevation_from_latitude_and_longitude", "driver_s_quotes_for_f1_drivers_quotes", "attribute_overviews_for_sofascores", "directory_for_phone", "send_message_to_multiple_numbers_for_branded_sms_pakistan", "api_for_test_api_v2", "shorts_sound_attribution_for_yt_api", "detail2_for_spaceflight_news", "non_manufacturing_pmi_for_u_s_economic_indicators", "top_paid_games_for_store_apps"], "api_descs": {"Finish": "No description available.", "api_for_test_api_v2": "12", "attribute_overviews_for_sofascores": "Get player attribute overviews", "calculate_for_sales_tax_calculator": "Retrieves tax rates applicable to a specific address. This endpoint accepts address inputs to deliver up-to-date, relevant local tax rates instantly.", "color_to_picture_for_color_to_picture_api": "Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color)", "dad_jokes_health_for_dad_jokes_v2": "Return the health status of the API. Returns current UTC time.", "detail2_for_spaceflight_news": " ", "directory_for_phone": "Get all the Local Area Codes from a given Country", "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.", "get_elevation_for_elevation_from_latitude_and_longitude": "Get Elevation", "icecream_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random icecream recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "non_manufacturing_pmi_for_u_s_economic_indicators": "Get monthly non-manufacturing Purchasing Managers' Index.", "see_about_gainers_losers_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top Gainers and Losers including names and percentage even rank and more!", "send_message_to_multiple_numbers_for_branded_sms_pakistan": "This API is useful to send a branded sms to multiple numbers", "shorts_sound_attribution_for_yt_api": "Get the Shorts original sound attribution listing.\nQuota cost is 1 unit.", "supported_countries_for_sales_tax_calculator": "Returns a list of supported countries.", "team_information_for_baseball_datafeeds_by_rolling_insights": "This endpoint returns team information", "top_paid_games_for_store_apps": "Top paid games chart."}, "aseqs": [{"api_name": "supported_countries_for_sales_tax_calculator", "api_action": "\nAction: supported_countries_for_sales_tax_calculator\nAction Input: {}", "api_reaction": null}, {"api_name": "calculate_for_sales_tax_calculator", "api_action": "\nAction: calculate_for_sales_tax_calculator\nAction Input: {\n  \"country\": \"FR\",\n  \"city\": \"Paris\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "calculate_for_sales_tax_calculator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "calculate_for_sales_tax_calculator", "api_action": "\nAction: calculate_for_sales_tax_calculator\nAction Input: {\n\t\"address\": \"Paris, France\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "supported_countries_for_sales_tax_calculator"}}]}
{"URL": "70659", "query": "I would like to know the market and the human-readable date of the latest price for the fund with ISIN LU0690375182. Also, give me the historical prices of the same fund from 2015-01-25 to 2020-12-31.", "api_names": ["v1getfundhistoricalprices_for_funds", "v1getfundlatestprice_for_funds", "Finish", "get_game_for_league_of_legends_esports", "v1_feeds_for_awesome_rss", "collection_recipes_for_bbc_good_food_api", "currency_api_php_for_free_currency_converter_by_hajana_one", "games_list_for_mmo_games", "get_movies_by_year_for_imdb_api", "hashtag_data_by_name_for_tiktok_solutions", "sec_filings_for_sec_filings", "album_tracks_for_spotify_v2", "dad_jokes_joke_of_the_day_for_dad_jokes_v2", "daily_calory_requirements_for_fitness_calculator", "get_asset_details_for_walletapi_cloud", "check_lists_for_mailvalid", "search_challenge_for_tiktok_video_no_watermark_v2", "search_gifs_for_humor_jokes_and_memes"], "api_descs": {"Finish": "No description available.", "album_tracks_for_spotify_v2": "Get all tracks of an specific Spotify album", "check_lists_for_mailvalid": "The route for checking the lists of disposable or non disposable emails", "collection_recipes_for_bbc_good_food_api": "Get collection of recipes by collection name ID", "currency_api_php_for_free_currency_converter_by_hajana_one": "Convert Ant Currency", "dad_jokes_joke_of_the_day_for_dad_jokes_v2": "Return joke of the day. Each new UTC day API will return a new joke. During the UTC day, API returns the same joke.", "daily_calory_requirements_for_fitness_calculator": "Knowing your daily calorie requirements is important to achieve your final goal. You can calculate your daily calorie req. for 7 different goals.", "games_list_for_mmo_games": "Live games list.", "get_asset_details_for_walletapi_cloud": "Obtain the details of an asset with provided ID.", "get_game_for_league_of_legends_esports": "In this api method you can search all of the game data with game id. You can get this id from the Get Vods api method.", "get_movies_by_year_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required", "hashtag_data_by_name_for_tiktok_solutions": "Get Hashtag Data by using Name of Hashtag", "search_challenge_for_tiktok_video_no_watermark_v2": "Search challenge by keywords", "search_gifs_for_humor_jokes_and_memes": "Search for gifs.\nSee https://humorapi.com/docs/#Search-Gifs for more.", "sec_filings_for_sec_filings": "Returns a list of SEC Filings for the requested company.", "v1_feeds_for_awesome_rss": "List your current RSS", "v1getfundhistoricalprices_for_funds": "Get fund's historical prices", "v1getfundlatestprice_for_funds": "Get fund latest price"}, "aseqs": [{"api_name": "v1getfundlatestprice_for_funds", "api_action": "\nAction: v1getfundlatestprice_for_funds\nAction Input: {\n  \"isin\": \"LU0690375182\"\n}", "api_reaction": null}, {"api_name": "v1getfundhistoricalprices_for_funds", "api_action": "\nAction: v1getfundhistoricalprices_for_funds\nAction Input: {\n  \"isin\": \"LU0690375182\",\n  \"is_from\": \"2015-01-25\",\n  \"to\": \"2020-12-31\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1getfundlatestprice_for_funds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1getfundhistoricalprices_for_funds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1getfundlatestprice_for_funds"}}]}
{"URL": "83920", "query": "I would like to add 10 business days to September 8, 2021. Additionally, I'm curious to know if September 8, 2021, is a weekday.", "api_names": ["calendar_arithmetic_for_daysapi", "is_weekend_for_daysapi", "Finish", "feed_for_free_football_soccer_videos_v2", "random_number_fact_for_testing", "open_item_for_inventory_and_ecommerce_hosted_and_self_hosted_solution", "player_injuries_for_hockey_datafeeds_by_rolling_insights", "v1_sources_for_newscatcher", "extract_fast_for_mobile_phone_validation", "show_image_for_flowers", "get_coins_data_for_mineable_coins", "community_post_comments_for_youtube_data"], "api_descs": {"Finish": "No description available.", "calendar_arithmetic_for_daysapi": "This endpoint will take in a date number of years, months, days,\nhours, minutes, and seconds as query parameters and return the date\nwith the addtion or subtraction produced from entered query\nparameters.\n\nThis endpoint can do addition and subtraction. To do subtraction just add\n`-` befor the integer like so `-8` and the endpoint will subtract based\non the query.\n\n**Note**: Please enter properly formatted dates and optionally times.\nThis endpoint will try and figure out what is entered but will output\nincorrect dates and times if date format isn't well formatted.", "community_post_comments_for_youtube_data": "community-post-comments", "extract_fast_for_mobile_phone_validation": "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in /extract endpoint case you can't provide Country and service will try to guess the country :)", "feed_for_free_football_soccer_videos_v2": "You can retrieve the highlights and goals of the latest football matches in JSON format from this endpoint", "get_coins_data_for_mineable_coins": "With this endpoint you can get a collection of all coins.\n\n**API alterations**\n- **Get one coin:** https://api.minerstat.com/v2/coins?list=BTC\n- **Get list of coins:** https://api.minerstat.com/v2/coins?list=BTC,BCH,BSV\n- **Get all coins from one algorithm:** https://api.minerstat.com/v2/coins?algo=SHA-256\n- **Get all coins from multiple algorithms:** https://api.minerstat.com/v2/coins?algo=SHA-256,Scrypt,Ethash", "is_weekend_for_daysapi": "Endpoint will return True if date falls on the weekend, Saturday or\nSunday.", "open_item_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "Get one item", "player_injuries_for_hockey_datafeeds_by_rolling_insights": "Returns a record of each player's injury on a team", "random_number_fact_for_testing": "Random Number Fact", "show_image_for_flowers": "Show image of the flower", "v1_sources_for_newscatcher": "Returns a list of supported news websites for any topic, country, language, or any of those combined"}, "aseqs": [{"api_name": "is_weekend_for_daysapi", "api_action": "\nAction: is_weekend_for_daysapi\nAction Input: {}", "api_reaction": null}, {"api_name": "calendar_arithmetic_for_daysapi", "api_action": "\nAction: calendar_arithmetic_for_daysapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "calendar_arithmetic_for_daysapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "calendar_arithmetic_for_daysapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "calendar_arithmetic_for_daysapi"}}]}
{"URL": "61066", "query": "I'm a football coach and I need to keep track of the matches happening today. Can you retrieve all the matches scheduled to be played today by competition ID? I want to know the teams, time, and results of each match.", "api_names": ["get_all_competitions_information_for_match_api", "get_all_match_play_today_by_competitions_for_match_api", "Finish", "get_all_physical_quantities_for_physical_quantities_constants_and_equations_", "instablogs_post_data_for_seeking_alpha_finance", "getorderbyid_for_my_api_12345", "modern_internet_for_thai_lotto_new_api", "get_all_lotto_america_drawings_for_lotto_america", "get_username_mobile_legends_for_id_game_checker", "read_clients_per_ap_for_ironwifi", "gst_for_gst_advance", "getexchangerate_for_chaingateway_io"], "api_descs": {"Finish": "No description available.", "get_all_competitions_information_for_match_api": "Retrieve all competitions information", "get_all_lotto_america_drawings_for_lotto_america": "Get all winning drawings from Lotto America.", "get_all_match_play_today_by_competitions_for_match_api": "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id.", "get_all_physical_quantities_for_physical_quantities_constants_and_equations_": "This endpoint return back data of physical quantities", "get_username_mobile_legends_for_id_game_checker": "Enter the Mobile Legends ID and Server in the required parameters", "getexchangerate_for_chaingateway_io": "Returns the current Ethereum price in Euro or US Dollar.", "getorderbyid_for_my_api_12345": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "gst_for_gst_advance": "Used to verify GST Number", "instablogs_post_data_for_seeking_alpha_finance": "Get instablogs post data by instablog_post_id", "modern_internet_for_thai_lotto_new_api": "ယခု Endpoint မှာတော့ နံနက် ၉ခွဲ နှင့် နေ့လည် ၂နာရီ မော်ဒန်၊ အင်တာနက် ထွက်ဂဏန်း နှင့် 12:01 မိနစ်၊ ညနေ 4:30 ထွက်မယ့် ဂဏန်းများကို တိုက်ရိုက်ပြသဖို့အတွက်ပဲဖြစ်ပါတယ်။", "read_clients_per_ap_for_ironwifi": "READ - CLIENTS PER AP"}, "aseqs": [{"api_name": "get_all_competitions_information_for_match_api", "api_action": "\nAction: get_all_competitions_information_for_match_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "\nAction: get_all_match_play_today_by_competitions_for_match_api\nAction Input: {\n  \"competition_id\": 24210\n}", "api_reaction": null}, {"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "\nAction: get_all_match_play_today_by_competitions_for_match_api\nAction Input: {\n  \"competition_id\": 23962\n}", "api_reaction": null}, {"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "\nAction: get_all_match_play_today_by_competitions_for_match_api\nAction Input: {\n  \"competition_id\": 24049\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use the get_all_match_play_today_by_competitions_for_match_api to retrieve all the matches scheduled for today by competition ID.\n\t\"api_name\": \"get_all_match_play_today_by_competitions_for_match_api\"\n}"}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to retrieve all matches scheduled to be played today by competition ID, and since the previous API call did not provide any information, it seems like this API needs an additional parameter to get the specific matches for today.\n\t\"api_name\": \"get_all_match_play_today_by_competitions_for_match_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "\nAction: get_all_match_play_today_by_competitions_for_match_api\nAction Input: {\n  \"competition_id\": 24210\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "\nAction: get_all_match_play_today_by_competitions_for_match_api\nAction Input: {\n  \"competition_id\": 24538\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "\nAction: get_all_match_play_today_by_competitions_for_match_api\nAction Input: {\n  \"competition_id\": 24315\n}", "api_reaction": null}}]}
{"URL": "18355", "query": "I'm working on a financial report for Apple (AAPL), and I need some key metrics. Can you fetch me the average metrics of Apple's peers? Additionally, I'm interested in the discounted cash flow models (DCF's) for Apple. Can you provide me with those?", "api_names": ["peers_for_marketci_analytics", "discounted_cash_flow_models_dcf_s_for_marketci_analytics", "peer_metrics_average_for_marketci_analytics", "Finish", "video_without_watermark_mp4_mp3_cover_for_tiktok_downloader_download_tiktok_videos_without_watermark", "get_all_climate_change_related_news_for_climate_news_api_v2", "get_user_info_for_tiktok_download_video_", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment", "get_draw_dates_2023_for_4d_results", "pitstopdataforarace_for_formula_1_fixed", "api_trades_for_prague_stock_exchange", "area_from_to_number_for_unitconversion", "get_reference_numbers_of_a_specific_brand_for_watchsignals", "match_margins_for_basketball_data", "age_calculator_for_age_calculator", "matchschedules_for_cricketapi2", "overview_for_airdna", "banks_by_country_for_bank_swift_codes", "getwebsitesscreenshot_for_images_infos_api1", "get_articles_about_data_for_pluralsight_articles"], "api_descs": {"Finish": "No description available.", "age_calculator_for_age_calculator": "Calculates age based on the requested date. Accepts different formats and Time Zones.", "api_trades_for_prague_stock_exchange": " ", "area_from_to_number_for_unitconversion": "Area unit conversions", "banks_by_country_for_bank_swift_codes": "Returns list of banks for a country (use two letter ISO country code)", "discounted_cash_flow_models_dcf_s_for_marketci_analytics": "Artificial Intelligence-powered DCF's for Cash Flow forecasts and assumptions.", "get_all_climate_change_related_news_for_climate_news_api_v2": "This endpoint will return all news about Climate change from all around the world.", "get_articles_about_data_for_pluralsight_articles": "This endpoint will return back data with around 50 articles from Pluralsight's \"data-professional\" section.", "get_draw_dates_2023_for_4d_results": "List of draw dates in 2023.", "get_reference_numbers_of_a_specific_brand_for_watchsignals": "Get reference numbers of a specific brand", "get_user_info_for_tiktok_download_video_": "get user info\nunique_id or user_id is not empty", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get disasters which have address falling into a specific radius for a specific date range", "getwebsitesscreenshot_for_images_infos_api1": "Capture a screenshot from website", "match_margins_for_basketball_data": "Provides the average match margin statistics of the team in the tournament.", "matchschedules_for_cricketapi2": "This operation returns the cricket match schedules for the given date, including match timings, teams, and other relevant information.", "overview_for_airdna": "Returns overview stats (ADR, OCC ,Revenue ..) of a location rental data", "peer_metrics_average_for_marketci_analytics": "An Average of Company Peer Metrics for TTM Data", "peers_for_marketci_analytics": "Get List of Company Peers", "pitstopdataforarace_for_formula_1_fixed": "This endpoint requires the season(year) and race(round) to be specified.\n", "video_without_watermark_mp4_mp3_cover_for_tiktok_downloader_download_tiktok_videos_without_watermark": "video without watermark mp4 mp3 and cover only\nwith light weight responses between 300-450ms or lower depending on your server geo loc"}, "aseqs": [{"api_name": "peer_metrics_average_for_marketci_analytics", "api_action": "\nAction: peer_metrics_average_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "discounted_cash_flow_models_dcf_s_for_marketci_analytics", "api_action": "\nAction: discounted_cash_flow_models_dcf_s_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "peers_for_marketci_analytics", "api_action": "\nAction: peers_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "peer_metrics_average_for_marketci_analytics", "api_action": "\nAction: peer_metrics_average_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"MSFT\"\n}", "api_reaction": null}, {"api_name": "discounted_cash_flow_models_dcf_s_for_marketci_analytics", "api_action": "\nAction: discounted_cash_flow_models_dcf_s_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": Extracting metrics for Apple's peers and DCF models requires multiple API calls, but the first task is to get the average metrics of Apple's peers using 'peer_metrics_average_for_marketci_analytics'.\n\t\"api_name\": \"peer_metrics_average_for_marketci_analytics\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "peer_metrics_average_for_marketci_analytics", "api_action": "\nAction: peer_metrics_average_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "peer_metrics_average_for_marketci_analytics"}}, {"state": "generated_by_agent", "aseq": {"api_name": "peer_metrics_average_for_marketci_analytics"}}, {"state": "generated_by_agent", "aseq": {"api_name": "peer_metrics_average_for_marketci_analytics", "api_action": "\nAction: peer_metrics_average_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "peer_metrics_average_for_marketci_analytics", "api_action": "\nAction: peer_metrics_average_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}}]}
{"URL": "55503", "query": "I need news about Covid 19 from multiple sources. Please gather news articles, headlines, authors, and publication dates from sources like WHO, CNN, and the guardian.", "api_names": ["news_from_all_sources_for_covid_news_v2", "Finish", "canvas_home_for_webtoon", "jokes_search_for_chuck_norris", "charts_track_for_shazam", "get_ontology_gas_balance_for_cryptocurrency_balance", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling", "locales_for_review_generator_ai_", "past_1_day_for_the_sandbox_sand", "convert_get_symbol_for_currencies_and_countries", "products_search_for_wayfair", "get_many_sets_for_pokemon_tcg_card_prices"], "api_descs": {"Finish": "No description available.", "canvas_home_for_webtoon": "Reproduce comic data in home screen\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "charts_track_for_shazam": "Get all popular songs in specific chart", "convert_get_symbol_for_currencies_and_countries": "It is the same thing with the convert endpoint. But this one can give you the symbol of the converted value.", "get_many_sets_for_pokemon_tcg_card_prices": "Returns many sets based on query parameters.\n\nA set is a grouping of cards that are periodically released together. Every card has a set. Every set is part of a series.", "get_ontology_gas_balance_for_cryptocurrency_balance": "This endpoint will return back the Ontology Gas balance of an address", "jokes_search_for_chuck_norris": "Free text search", "locales_for_review_generator_ai_": "Get list of locales", "news_from_all_sources_for_covid_news_v2": "Get news related to covid 19 from **All sources**", "past_1_day_for_the_sandbox_sand": "Get price data for the past 24 hours.\n\n~5 minutes data points.", "products_search_for_wayfair": "Search for products by term or phrase", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling": ""}, "aseqs": [{"api_name": "news_from_all_sources_for_covid_news_v2", "api_action": "\nAction: news_from_all_sources_for_covid_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "news_from_all_sources_for_covid_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_from_all_sources_for_covid_news_v2", "api_action": "", "api_reaction": null}}]}
{"URL": "74110", "query": "I need live positioning for an aircraft with the registration number N789AB. Also, fetch the details of this aircraft using its ICAO HEX Code.", "api_names": ["aircraft_details_by_icao_for_fachaapi", "live_aircraft_by_reg_for_fachaapi", "Finish", "properties_count_for_seloger", "tax_rate_for_simple_taxrate_retrieval", "stock_get_stock_quote_type_data_for_yh_finance_v2", "get_sku_for_taobao_tmall_product_detail", "albums_get_related_artist_for_shazam", "decrypt_for_cryptocurrency_news", "get_astronomy_data_for_stormglass_complete", "categories_list_for_amazon_data_v2", "station_for_station", "languages_for_lexicala", "list_position_for_each_crypto_for_crypto_grana", "get_asn_by_ip_for_asn_details", "key_statistics_for_stock_analysis", "get_wind_speed_for_cloud_cast", "send_sms_for_sms_v2"], "api_descs": {"Finish": "No description available.", "aircraft_details_by_icao_for_fachaapi": "Get Aircraft details for a specific ICAO HEX Code", "albums_get_related_artist_for_shazam": "Get artist related to an album", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "decrypt_for_cryptocurrency_news": "Get the top latest news from Decrypt.", "get_asn_by_ip_for_asn_details": "Enter an IP Address (Both IPv4 or IPv6 Addresses allowed) to get its ASN number, Organization, Country etc.", "get_astronomy_data_for_stormglass_complete": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.", "get_sku_for_taobao_tmall_product_detail": "Get SKU, Price, Propperties Image", "get_wind_speed_for_cloud_cast": "Get the current wind speed", "key_statistics_for_stock_analysis": "Get key statistics.", "languages_for_lexicala": "all supported languages and codes", "list_position_for_each_crypto_for_crypto_grana": "List your current position for each crypto", "live_aircraft_by_reg_for_fachaapi": "Get live positioning for an aircraft with a specific REG", "properties_count_for_seloger": "Count total properties returned with options and filters", "send_sms_for_sms_v2": "Send SMS", "station_for_station": "radio", "stock_get_stock_quote_type_data_for_yh_finance_v2": "return stock quota type data", "tax_rate_for_simple_taxrate_retrieval": "Obtain tax rate by zip code"}, "aseqs": [{"api_name": "live_aircraft_by_reg_for_fachaapi", "api_action": "\nAction: live_aircraft_by_reg_for_fachaapi\nAction Input: {\n  \"reg\": \"N789AB\"\n}", "api_reaction": null}, {"api_name": "aircraft_details_by_icao_for_fachaapi", "api_action": "\nAction: aircraft_details_by_icao_for_fachaapi\nAction Input: {\n  \"icao\": \"A00001\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "live_aircraft_by_reg_for_fachaapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "aircraft_details_by_icao_for_fachaapi", "api_action": "{\"icaohex\": \"N789AB\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "aircraft_details_by_icao_for_fachaapi", "api_action": "\nAction: aircraft_details_by_icao_for_fachaapi\nAction Input: {\n  \"icao\": \"A00001\"\n}", "api_reaction": null}}]}
{"URL": "66157", "query": "I'm looking for recipe suggestions. Can you provide me with some popular searches and ingredients related to chicken? It would also be helpful to see the reviews for the recipe 'Rachael-Ray_s-Southwestern-Chili-Con-Queso-Pasta-Bake-1178051'.", "api_names": ["search_for_worldwide_recipes", "suggestions_for_worldwide_recipes", "detail_for_worldwide_recipes", "Finish", "explore_for_worldwide_recipes", "list_related_videos_and_playlists_for_youtube_media_downloader", "get_sunrise_and_sunset_times_for_sunrise_sunset_times", "liquidation_report_for_liquidation_report", "transfermarkt_search_for_theclique", "user_follower_list_for_tiktok_download_video_", "business_intelligence_jobs_for_usa_jobs_for_it", "search_domains_websites_on_same_ip_shared_for_websites_on_same_ip", "php_versions_for_php_code_compiler", "getaccount_for_background_remover", "states_by_country_for_geosource_api", "get_sample_businessprofile_for_mocking_rock_", "unlock_for_catalogapi", "nhl_score_board_for_nhl_api", "currencies_for_yoonit", "artist_discovered_on_for_spotify"], "api_descs": {"Finish": "No description available.", "artist_discovered_on_for_spotify": "Artist discovered on playlists (max 50)", "business_intelligence_jobs_for_usa_jobs_for_it": "Business Intelligence Jobs Api", "currencies_for_yoonit": "Returns a list of all supported currencies", "detail_for_worldwide_recipes": "Get detail of recipe", "explore_for_worldwide_recipes": "Explore Recipes", "get_sample_businessprofile_for_mocking_rock_": "Use this API to get fake-generated Business Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above.", "get_sunrise_and_sunset_times_for_sunrise_sunset_times": "Get sunrise and sunset times by date, latitude, and longitude.", "getaccount_for_background_remover": "Returns a description of your user account information.\nUseful to get the remaining credits on your account\n", "liquidation_report_for_liquidation_report": "Get the latest liquidation data from Binance, Bybit and OKX exchange. Data is limited to 1000 rows.", "list_related_videos_and_playlists_for_youtube_media_downloader": "This endpoint lists related videos and playlists of a YouTube video. Pagination scraping is supported. It's recommended to get the first page by calling `Video > Get Video Details`, and then get subsequent pages here.", "nhl_score_board_for_nhl_api": "This API endpoint will get the NHL scoreboard data for a specified date if available.", "php_versions_for_php_code_compiler": "PHP Versions", "search_domains_websites_on_same_ip_shared_for_websites_on_same_ip": "Search domain and get other domains on same IP address, use IP address OR domain name", "search_for_worldwide_recipes": "Search Recipe", "states_by_country_for_geosource_api": "Retrives a list of all states of the country.", "suggestions_for_worldwide_recipes": "Get Suggestions", "transfermarkt_search_for_theclique": "Search by name", "unlock_for_catalogapi": "Unlocks a cart that has been locked via the cart_validate method.", "user_follower_list_for_tiktok_download_video_": "get user follower list"}, "aseqs": [{"api_name": "suggestions_for_worldwide_recipes", "api_action": "\nAction: suggestions_for_worldwide_recipes\nAction Input: {\n  \"q\": \"chicken\"\n}", "api_reaction": null}, {"api_name": "explore_for_worldwide_recipes", "api_action": "\nAction: explore_for_worldwide_recipes\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_worldwide_recipes", "api_action": "\nAction: search_for_worldwide_recipes\nAction Input: {\n  \"q\": \"chicken\",\n  \"start\": 0\n}", "api_reaction": null}, {"api_name": "detail_for_worldwide_recipes", "api_action": "\nAction: detail_for_worldwide_recipes\nAction Input: {\n  \"canonical_term\": \"chicken\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "suggestions_for_worldwide_recipes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "suggestions_for_worldwide_recipes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "suggestions_for_worldwide_recipes", "api_action": "\nAction: suggestions_for_worldwide_recipes\nAction Input: {\n  \"q\": \"chicken\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "detail_for_worldwide_recipes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_suggestions_for_recipes"}}]}
{"URL": "41744", "query": "I'm developing a language translation app, and I need text-to-speech functionality. Can you guide me on how to use the Microsoft Edge Text to Speech API to convert text into speech? I would like to use the voice 'en-US-AriaNeural' for English language support.", "api_names": ["getdownloadurl_for_microsoft_edge_text_to_speech", "getvoiceslist_for_microsoft_edge_text_to_speech", "Finish", "get_user_dialog_json_for_waifu", "table_for_football_v2", "getcompanies_for_a_i_smartable", "fetchcampaignquestions_for_upcall", "getgamedetailpro_for_evosis_s_game_database", "get_latest_article_list_for_malaysia_kini", "marks_men_points_for_scoring_tables_api", "random_quote_for_semantic_quotes", "list_for_sagenda_v3"], "api_descs": {"Finish": "No description available.", "fetchcampaignquestions_for_upcall": "Get campaign's questions", "get_latest_article_list_for_malaysia_kini": "Return a list of current latest news article with info.", "get_user_dialog_json_for_waifu": "Get user dialog json", "getcompanies_for_a_i_smartable": "Get artificial intelligence companies.", "getdownloadurl_for_microsoft_edge_text_to_speech": "request with a long text and get the mp3 download URL created by the TTS engine.\n\nSupporting lots of languages with different voices, such as French, Spanish, Portuguese, Japanese, Korean, Chinese, Polish, Hindi and so on\n\nparams:\ntext - STRING : the text to be transformed to speeches.\nvoice_name - STRING: the voice and language for the speeches.", "getgamedetailpro_for_evosis_s_game_database": "Returns the game's information as Json.", "getvoiceslist_for_microsoft_edge_text_to_speech": "Voices list for the param \"voice_name\" of the function \"GetDownloadUrl\"", "list_for_sagenda_v3": "A list of bookable items associated with supplied authentication token (account)", "marks_men_points_for_scoring_tables_api": "This retrieves the men's marks for the point value given as a parameter (0-1400).", "random_quote_for_semantic_quotes": "Get random quotes by length and/or tags.  **NOTE:** up to 10 results can be returned, they may have similar meanings. If you want want absolute random, just pick the first result (or set `limit` to 1) and call this API again to get another quote.", "table_for_football_v2": "Get the current championship table"}, "aseqs": [{"api_name": "getvoiceslist_for_microsoft_edge_text_to_speech", "api_action": "\nAction: getvoiceslist_for_microsoft_edge_text_to_speech\nAction Input: {}", "api_reaction": null}, {"api_name": "getdownloadurl_for_microsoft_edge_text_to_speech", "api_action": "\nAction: getdownloadurl_for_microsoft_edge_text_to_speech\nAction Input: {\n  \"text\": \"Hello, how are you?\",\n  \"voice_name\": \"en-US-AriaNeural\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getvoiceslist_for_microsoft_edge_text_to_speech"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getdownloadurl_for_microsoft_edge_text_to_speech"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getdownloadurl_for_microsoft_edge_text_to_speech\",\n\t\"api_action\": \"\\nAction: getdownloadurl_for_microsoft_edge_text_to_speech\\nAction Input: {\\n  \\\"text\\\": \\\"Hello, how are you?\\\\\",\\n  \\\"voice_name\\\": \\\"en-US-AriaNeural\\\"\\n}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "36183", "query": "I'm a travel blogger and I'm writing an article about the different neighborhoods in Mexico City. Can you provide me with the zip code data for each neighborhood using the 'Get zip code in Mexico' API? Additionally, can you search for the zip codes of other cities in Mexico using the 'Search zip codes in Mexico' API?", "api_names": ["search_zip_codes_in_mexico_for_be_zips", "get_zip_code_in_mexico_for_be_zips", "Finish", "toptier_summary_for_sciphercrypto", "text_for_fancy_text", "product_offers_for_real_time_product_search", "get_item_for_dungeons_and_dragon_5e", "get_all_stories_by_username_for_instagram_api_2023", "hotels_details_for_booking_com", "latest_drawing_for_lotto_america", "get_search_keyword_for_instagram_profile", "streams_investor_relations_for_stocktwits"], "api_descs": {"Finish": "No description available.", "get_all_stories_by_username_for_instagram_api_2023": "Get all active stories of an Instagram user using username.\n\n***Please use` Get all stories by user_id` endpoint for fast response.***", "get_item_for_dungeons_and_dragon_5e": "Returns information about the D&D item in JSON format. Only includes magic items, not equipment.", "get_search_keyword_for_instagram_profile": "Return search by keyword will return hashtag & places", "get_zip_code_in_mexico_for_be_zips": "Get zip code data given a specific zip code", "hotels_details_for_booking_com": "Hotels Details", "latest_drawing_for_lotto_america": "Get the latest, and last winning Lotto America winning number set.", "product_offers_for_real_time_product_search": "Get all offers available for a product.", "search_zip_codes_in_mexico_for_be_zips": "Perform a text search in zip codes in Mexico", "streams_investor_relations_for_stocktwits": "Returns the most recent 30 messages posted by verified Investor Relations customers.", "text_for_fancy_text": "", "toptier_summary_for_sciphercrypto": "This response returns an ascending crypto coins the rank varies the way you choose limit if you choose 10 as limit you will get the top 10 cryptos\n->limit= Options are: 1-->100\n->page= Options are: 1-->100 based on limit rate \n->assetClass= Options are: ALL,DEFI,NFT\n->tsym\" typically stands for \"to symbol\", which represents the cryptocurrency that the conversion rate is being calculated for."}, "aseqs": [{"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Mexico City\"\n}", "api_reaction": null}, {"api_name": "search_zip_codes_in_mexico_for_be_zips", "api_action": "\nAction: search_zip_codes_in_mexico_for_be_zips\nAction Input: {\n  \"q\": \"Mexico City\"\n}", "api_reaction": null}, {"api_name": "search_zip_codes_in_mexico_for_be_zips", "api_action": "\nAction: search_zip_codes_in_mexico_for_be_zips\nAction Input: {\n  \"q\": \"Mexico City neighborhoods\"\n}", "api_reaction": null}, {"api_name": "search_zip_codes_in_mexico_for_be_zips", "api_action": "\nAction: search_zip_codes_in_mexico_for_be_zips\nAction Input: {\n  \"q\": \"Mexico City neighborhoods zip codes\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_in_mexico_for_be_zips"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_in_mexico_for_be_zips", "api_action": "\nAction: search_zip_codes_in_mexico_for_be_zips\nAction Input: {\n  \"query\": \"other cities in mexico\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"neighborhoods of Mexico City\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Mexico City neighborhoods\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Mexico City neighborhoods\"\n}", "api_reaction": null}}]}
{"URL": "83091", "query": "I want to start my day with a positive quote. Can you give me a random quote from Quotes_v2? Please include the author's name, country, and profession.", "api_names": ["get_random_quote_for_quotes_v2", "Finish", "get_specifications_by_custom_id_for_mobile_phone_specs_database", "get_mark_price_kline_for_bybit", "currencies_list_for_webull", "tax_rate_for_simple_taxrate_retrieval", "get_engravings_for_lost_ark", "get_geodata_find_json_for_quickblox", "contact_list_for_zipwhip", "image_search_for_google_search_results_scraper"], "api_descs": {"Finish": "No description available.", "contact_list_for_zipwhip": "This method returns all contacts associated with session provided.", "currencies_list_for_webull": "List all global currencies and rates", "get_engravings_for_lost_ark": "Endpoint to get all engravings", "get_geodata_find_json_for_quickblox": "Retrieve all (by default) geodata for current application. The ID of the application is taken from the token which is specified in the request", "get_mark_price_kline_for_bybit": "Query mark price kline.", "get_random_quote_for_quotes_v2": "Get a random quote", "get_specifications_by_custom_id_for_mobile_phone_specs_database": "Get all phone specifications by phone custom id", "image_search_for_google_search_results_scraper": "Runs a standard image search and parses the output to a clean json object.", "tax_rate_for_simple_taxrate_retrieval": "Obtain tax rate by zip code"}, "aseqs": [{"api_name": "get_random_quote_for_quotes_v2", "api_action": "\nAction: get_random_quote_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "get_random_quote_for_quotes_v2", "api_action": "\nAction: get_random_quote_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_random_quote_for_quotes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_quote_for_quotes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_quote_for_quotes_v2"}}]}
{"URL": "62510", "query": "As a user of the Felina Multisig Wallet API, I would like to view the NFTs associated with my wallet and access the list of transactions recorded in the database. Please retrieve this data for me.", "api_names": ["get_nfts_for_felina_multisig_wallet_api", "read_transactions_for_felina_multisig_wallet_api", "Finish", "today_for_show_air_dates", "objectexists_for_groupdocs_comparison_cloud", "crypto_info_for_investing_financial_stocks", "get_transaction_for_smile", "get_a_specific_team_for_free_nba", "get_a_specific_item_for_shoes_collections", "get_hourly_forecast_for_cloud_cast", "pvwatts_for_nrel_national_renewable_energy_laboratory", "v1_helicopter_for_helicopter_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "crypto_info_for_investing_financial_stocks": "get crypto all info page by slug name", "get_a_specific_item_for_shoes_collections": "This will return a specific item from the collection ..,simpily write the id of the product and you will get the product", "get_a_specific_team_for_free_nba": "This endpoint retrieves a specific team", "get_hourly_forecast_for_cloud_cast": "Get the hourly forecast", "get_nfts_for_felina_multisig_wallet_api": "Fetch the list of owned NFTs by the wallet", "get_transaction_for_smile": "Get a user's transaction by ID.", "objectexists_for_groupdocs_comparison_cloud": " ", "pvwatts_for_nrel_national_renewable_energy_laboratory": "NREL's PVWatts calculates the energy production of grid-connected photovoltaic (PV) energy systems. This service estimates the performance of hypothetical residential and small commercial PV installations.  Version 4 is the current version of the PVWatts API. Previous versions have been deprecated and its users are encouraged to migrate to this newly enhanced version.", "read_transactions_for_felina_multisig_wallet_api": "Fetch the list of transactions submitted to the database.", "today_for_show_air_dates": "Shows airing today", "v1_helicopter_for_helicopter_by_api_ninjas": "API Ninjas Helicopter API endpoint. Returns a list of helicopter specs that match the given parameters.\n\nAt least one of the following parameters (excluding the limit parameter) must be set."}, "aseqs": [{"api_name": "get_nfts_for_felina_multisig_wallet_api", "api_action": "\nAction: get_nfts_for_felina_multisig_wallet_api\nAction Input: {}", "api_reaction": null}, {"api_name": "read_transactions_for_felina_multisig_wallet_api", "api_action": "\nAction: read_transactions_for_felina_multisig_wallet_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_nfts_for_felina_multisig_wallet_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "read_transactions_for_felina_multisig_wallet_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_nfts_for_felina_multisig_wallet_api"}}]}
{"URL": "86501", "query": "I need a QR code for my website. Can you generate a QR code image for 'www.mywebsite.com'? Please ensure the image is in a suitable format for online use.", "api_names": ["qr_code_gen_for_simple_cheap_qr_code_generator", "Finish", "get_all_stored_categories_for_taboo_api", "get_qoutes_by_page_for_quotsy", "prueba_for_practicauipath", "get_chapter_for_bible_memory_verse_flashcard", "trending_for_bing_image_search", "v2_auto_complete_for_seeking_alpha", "v1_sticker_for_tokapi_mobile_version", "rotating_proxy_api_for_rotating_proxies"], "api_descs": {"Finish": "No description available.", "get_all_stored_categories_for_taboo_api": "Get a list of all stored categories. Use them to get results for the specified category", "get_chapter_for_bible_memory_verse_flashcard": "Takes parameters and returns one chapter for chosen bookname", "get_qoutes_by_page_for_quotsy": "return quotes for the page no", "prueba_for_practicauipath": "prueba", "qr_code_gen_for_simple_cheap_qr_code_generator": "This endpoint takes a \"GET\" request with the \"url\" query parameter and returns a QR code image associated with the text passed.", "rotating_proxy_api_for_rotating_proxies": "API will respond with a random proxy currently active in the pool upon each request.", "trending_for_bing_image_search": "Get currently trending images.", "v1_sticker_for_tokapi_mobile_version": "Effects information by IDs (look at stickers field in video response)", "v2_auto_complete_for_seeking_alpha": "Get suggested symbols, authors, etc... by provided word or phrase"}, "aseqs": [{"api_name": "qr_code_gen_for_simple_cheap_qr_code_generator", "api_action": "\nAction: qr_code_gen_for_simple_cheap_qr_code_generator\nAction Input: {\n  \"url\": \"www.mywebsite.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "qr_code_gen_for_simple_cheap_qr_code_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "qr_code_gen_for_simple_cheap_qr_code_generator", "api_action": "\nAction: qr_code_gen_for_simple_cheap_qr_code_generator\nAction Input: {\n  \"url\": \"www.mywebsite.com\"\n}"}}]}
{"URL": "30511", "query": "I'm writing an article on anime news and I need the details of the news item titled 'mai-nishikata-game-between-the-suits-manga-resumes-after-2-years' published on March 17, 2023. Can you fetch the details for me? Also, I would like to include the most up-to-date anime news list in my article.", "api_names": ["get_details_of_a_news_item_for_anime_news_net", "get_anime_news_list_for_anime_news_net", "Finish", "get_status_for_mailcheap", "gettextrequestparameters_for_groupdocs_translation_cloud", "getarchivereport_for_property_report", "soccer_sports_open_data_for_sport_v2", "statuses_for_visa_requirements", "drivers_standings_for_fia_formula_1_championship_statistics", "http_ulvis_net_api_write_get_for_free_url_shortener", "water_vapour_data_by_coordinates_for_ambee_water_vapor_data", "get_portail_api_for_fluximmo", "getallsolutions_for_pocket_cube_solver", "nowcast_for_foreca_weather", "getallsign_for_zodiac_sign_api"], "api_descs": {"Finish": "No description available.", "drivers_standings_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve drivers standings data about a specifit F1 championship by specifying a year. If you ommit the ***year*** query parameter, a default value will be set to current year. The response data will contain information about the position in the rank list, driver's name, nationality, team and total points accumulated.", "get_anime_news_list_for_anime_news_net": "Get the most up-to-date anime list up to date and in real time", "get_details_of_a_news_item_for_anime_news_net": "Get the details of each news item, such as the title, an image and the body of the news item, in addition to other properties", "get_portail_api_for_fluximmo": " ", "get_status_for_mailcheap": "Fetch API status", "getallsign_for_zodiac_sign_api": "Get all sign. This returns all the available signs", "getallsolutions_for_pocket_cube_solver": "Returns json data consisting of all the solutions of a given cube position.", "getarchivereport_for_property_report": " ", "gettextrequestparameters_for_groupdocs_translation_cloud": " ", "http_ulvis_net_api_write_get_for_free_url_shortener": "shorten url  url= url-wan't shorten &custom= your custom name& private= if wan't be public them 0 if private them 1http://ulvis.net/api/write/post", "nowcast_for_foreca_weather": "3-hour forecast in 15-minute time steps.", "soccer_sports_open_data_for_sport_v2": " Sports Open Data", "statuses_for_visa_requirements": " ", "water_vapour_data_by_coordinates_for_ambee_water_vapor_data": "Get Water Vapour data by Coordinates"}, "aseqs": [{"api_name": "get_details_of_a_news_item_for_anime_news_net", "api_action": "\nAction: get_details_of_a_news_item_for_anime_news_net\nAction Input: {\n  \"is_id\": \"mai-nishikata-game-between-the-suits-manga-resumes-after-2-years\",\n  \"title\": \"mai-nishikata-game-between-the-suits-manga-resumes-after-2-years\",\n  \"date\": \"March 17, 2023\"\n}", "api_reaction": null}, {"api_name": "get_details_of_a_news_item_for_anime_news_net", "api_action": "\nAction: get_details_of_a_news_item_for_anime_news_net\nAction Input: {\n  \"is_id\": \"mai-nishikata-game-between-the-suits-manga-resumes-after-2-years\",\n  \"title\": \"mai-nishikata-game-between-the-suits-manga-resumes-after-2-years\",\n  \"date\": \"March 17, 2023\"\n}", "api_reaction": null}, {"api_name": "get_anime_news_list_for_anime_news_net", "api_action": "\nAction: get_anime_news_list_for_anime_news_net\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_details_of_a_news_item_for_anime_news_net"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_anime_news_list_for_anime_news_net"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_anime_news_list_for_anime_news_net"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_details_of_a_news_item_for_anime_news_net", "api_action": "\nAction: get_details_of_a_news_item_for_anime_news_net\nAction Input: {\n  \"is_id\": \"mai-nishikata-game-between-the-suits-manga-resumes-after-2-years\",\n  \"title\": \"mai-nishikata-game-between-the-suits-manga-resumes-after-2-years\",\n  \"date\": \"March 17, 2023\"\n}", "api_reaction": null}}]}
{"URL": "1187", "query": "I want to organize a movie night for my family and I need your assistance. Can you suggest a genre suitable for family movies using the Genre List API? Once I choose a genre, I would like to discover movies within that genre using the Search by Genre API. It would be great if the results include the movie title, release date, and overview. Additionally, I would like to get the detailed response for a specific movie using the Get Detailed Response API. The movie I'm interested in is 'Toy Story'.", "api_names": ["search_by_genre_for_advanced_movie_search", "get_detailed_response_for_advanced_movie_search", "genre_list_for_advanced_movie_search", "Finish", "spellout_for_spellout", "user_id_by_username_for_twitter", "burned_calorie_from_activity_for_fitness_calculator", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau", "engines_for_car_api", "disciplina_1_for_colegiosantaana", "super_lig_standings_for_super_lig_standings", "search_content_for_url_content_extractor", "v2_user_tweets_and_replies_for_twitter_data", "get_categories_of_jokes_for_world_of_jokes", "calc_for_distance_calculator_v3", "products_list_for_hm_hennes_mauritz", "supported_assets_for_futures", "anikuendpoint_for_aniku", "website_url_qr_code_for_scanova_qr_code", "hull_moving_average_for_qvantana"], "api_descs": {"Finish": "No description available.", "anikuendpoint_for_aniku": "Storage", "burned_calorie_from_activity_for_fitness_calculator": "Calculate the burned calorie for a specific activity.", "calc_for_distance_calculator_v3": "Calculate distance between two coordinates", "disciplina_1_for_colegiosantaana": "Disciplina alumno 1", "engines_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"horsepower_hp\", \"op\": \">=\", \"val\": 100}, {\"field\": \"horsepower_hp\", \"op\": \"<=\", \"val\": 300}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, fuel_type, engine_type, transmission, drive_type, cam_type, valve_timing, valves, horsepower_hp, size, cylinders, make_id, make_model_id, and make_model_trim_id.", "genre_list_for_advanced_movie_search": "Get list of all available genres", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau": "Returns a geocode and a geolookup for a specified address", "get_categories_of_jokes_for_world_of_jokes": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.", "get_detailed_response_for_advanced_movie_search": "Get detailed response for a movie ID", "hull_moving_average_for_qvantana": "Hull Moving Average indicator", "products_list_for_hm_hennes_mauritz": "List products from H&M with options to sort, filter, or search for products by name", "search_by_genre_for_advanced_movie_search": "Discover movies by Genre", "search_content_for_url_content_extractor": "Allows you to search content for content based on a query.", "spellout_for_spellout": "Spell out number in given language using provided rule set", "super_lig_standings_for_super_lig_standings": "Super Lig Standings", "supported_assets_for_futures": "This endpoint returns all symbols supported by the * last *and* time-series *endpoint.", "user_id_by_username_for_twitter": "this returns twitter user id based on twitter username.", "v2_user_tweets_and_replies_for_twitter_data": "v2/user-tweets-and-replies", "website_url_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with a specified URL"}, "aseqs": [{"api_name": "genre_list_for_advanced_movie_search", "api_action": "\nAction: genre_list_for_advanced_movie_search\nAction Input: {}", "api_reaction": null}, {"api_name": "search_by_genre_for_advanced_movie_search", "api_action": "\nAction: search_by_genre_for_advanced_movie_search\nAction Input: {}", "api_reaction": null}, {"api_name": "get_detailed_response_for_advanced_movie_search", "api_action": "\nAction: get_detailed_response_for_advanced_movie_search\nAction Input: {\n  \"movie_id\": 862\n}", "api_reaction": null}, {"api_name": "search_by_genre_for_advanced_movie_search", "api_action": "\nAction: search_by_genre_for_advanced_movie_search\nAction Input: {}", "api_reaction": null}, {"api_name": "get_detailed_response_for_advanced_movie_search", "api_action": "\nAction: get_detailed_response_for_advanced_movie_search\nAction Input: {\n  \"movie_id\": 862\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_genre_for_advanced_movie_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_genre_for_advanced_movie_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_categories_of_jokes_for_world_of_jokes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "genre_list_for_advanced_movie_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "genre_list_for_advanced_movie_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "genre_list_for_advanced_movie_search"}}]}
{"URL": "62585", "query": "I'm preparing for the National Real Estate exam and I want to ensure a high score. Could you please provide me with flashcards that cover important terms and definitions? Additionally, I would like access to multiple-choice and true or false questions with answers and feedback to test my knowledge.", "api_names": ["Finish", "qanda_for_real_estate_exam", "flashcards_for_real_estate_exam", "t2g_kurs_check_for_words_world", "billboard_global_200_for_billboard", "retrieve_tokens_listings_for_blur", "race_detail_info_for_horse_racing", "fetch_restaurant_information_for_foodiefetch", "daily_open_proxies_for_open_proxies", "details_for_patreon", "get_all_the_video_tags_for_youtube_video_tags", "searchchannel_for_youtube_search_v3", "get_hebrew_month_for_enoch_calendar", "getfutureeventsbytopic_for_azure_smartable", "search_properties_for_rent_for_realtor", "get_news_source_feeds_for_climate_change_v31", "north_america_for_nomad_list_cities", "getbars_for_getbs"], "api_descs": {"Finish": "No description available.", "billboard_global_200_for_billboard": "Provide Billboard Global 200 chart information. Available from SEPTEMBER 19, 2020", "daily_open_proxies_for_open_proxies": "Get a list of 200-400 open proxies, updated once per day around 00:00 UTC.  Because they can go up & down, these IPs may not be functional when you retrieve them. For higher reliability, try the **Hourly** or **Open Proxies** endpoints.", "details_for_patreon": "Get the details and general information of a Creator with the `creator_id`.", "fetch_restaurant_information_for_foodiefetch": "This endpoint allows users to retrieve menu location and ratings data for a specific restaurant. The user can send the name of the restaurant, preferably the full name with the city, to fetch data from the API.", "flashcards_for_real_estate_exam": "Get a list of all flashcard terms and definitions", "get_all_the_video_tags_for_youtube_video_tags": "This endpoint will return all the tags used for the SEO of a video, with the video title.", "get_hebrew_month_for_enoch_calendar": "Get Hebrew Month from supplied date string or today's date", "get_news_source_feeds_for_climate_change_v31": "Api showing news feedsa all over the planet", "getbars_for_getbs": "getBars", "getfutureeventsbytopic_for_azure_smartable": "Get future Azure events by topic.", "north_america_for_nomad_list_cities": "Get North America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "qanda_for_real_estate_exam": "Returns all multiple choice and true or false questions with answers and feedback.", "race_detail_info_for_horse_racing": "**Get racecard detailed info** and **Odds comparator**\nHorses, Jockeys, Trainers, Form, OR, Owner, Sire, Dam, Age, Weight and more information.", "retrieve_tokens_listings_for_blur": "This endpoint returns a set of NFTs based on the specified filter parameters.\n\nFilter for Listed Tokens: {\"cursor\":null,\"traits\":[],\"hasAsks\":true}\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "search_properties_for_rent_for_realtor": "Search properties for rent by location", "searchchannel_for_youtube_search_v3": "Efficiently search for specific videos or playlists within a channel", "t2g_kurs_check_for_words_world": "Kurs check of IDR to another valuta"}, "aseqs": [{"api_name": "flashcards_for_real_estate_exam", "api_action": "\nAction: flashcards_for_real_estate_exam\nAction Input: {}", "api_reaction": null}, {"api_name": "qanda_for_real_estate_exam", "api_action": "\nAction: qanda_for_real_estate_exam\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "qanda_for_real_estate_exam"}}, {"state": "generated_by_agent", "aseq": {"api_name": "qanda_for_real_estate_exam"}}, {"state": "generated_by_agent", "aseq": {"api_name": "flashcards_for_real_estate_exam"}}]}
{"URL": "22953", "query": "I'm a marketing manager and I want to analyze the following of a competitor's Instagram account. Can you provide me with the following of the user with the user ID '54321'? Additionally, I would like to search for specific accounts among the following using the query 'tech' and retrieve their information.", "api_names": ["searchfollowers_for_instagram_v6", "followers_for_instagram_v6", "Finish", "all_countries_names_for_countries_population", "artists_get_details_for_shazam", "user_data_by_secuid_for_tiktok_solutions", "crypto_symbols_for_real_time_quotes", "listing_status_full_for_airbnb_listings", "user_feed_by_id_for_tiktok_solutions", "ping_for_stocks_archive", "free_access_for_walnuttradingdash", "article_index_for_test_apideno", "getbreadcrumbnavitem_for_sport_odds", "get_pinned_chat_for_twitch_api", "get_user_following_for_instagram_fast"], "api_descs": {"Finish": "No description available.", "all_countries_names_for_countries_population": "Returns all countries english full names. Useful when need to know wich country names to search for.", "article_index_for_test_apideno": "article index", "artists_get_details_for_shazam": "Get detailed information of an artist", "crypto_symbols_for_real_time_quotes": "Returns a list of all available crypto  currencies", "followers_for_instagram_v6": "get someone's followers", "free_access_for_walnuttradingdash": "The api call will grant access to a unique URL to access the dashboard (demo [here](https://walnuthillai.com/wp-content/themes/blankslate-child/videos/demo_walnuttradingdash.mp4)). The FREE version grants access to half of the assets and technical indicators / strategies and any time period from 2021/06 to 2022/1.", "get_pinned_chat_for_twitch_api": "Returns pinned chat.", "get_user_following_for_instagram_fast": "Get user following list", "getbreadcrumbnavitem_for_sport_odds": "GetBreadCrumbNavItem data api", "listing_status_full_for_airbnb_listings": "Retrieve the calculated status (available/not available for stay) for the next 12 months of a listing based on previous and following days stay rules.", "ping_for_stocks_archive": "Check that server is still alive", "searchfollowers_for_instagram_v6": "search someone's followers", "user_data_by_secuid_for_tiktok_solutions": "Get User Data by SecUID", "user_feed_by_id_for_tiktok_solutions": "Get **User Feed** by** ID**"}, "aseqs": [{"api_name": "followers_for_instagram_v6", "api_action": "\nAction: followers_for_instagram_v6\nAction Input: {\n  \"user_id\": \"54321\",\n  \"batch_size\": 50\n}", "api_reaction": null}, {"api_name": "searchfollowers_for_instagram_v6", "api_action": "\nAction: searchfollowers_for_instagram_v6\nAction Input: {\n  \"user_id\": \"54321\",\n  \"query\": \"tech\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_data_by_secuid_for_tiktok_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "searchfollowers_for_instagram_v6"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_following_for_instagram_fast"}}]}
{"URL": "71375", "query": "I'm a concerned citizen living in an area with frequent earthquakes. Can you provide me with information about all earthquakes that have occurred in the past day worldwide? I want to stay updated on any significant earthquakes and their locations.", "api_names": ["all_earthquakes_past_day_for_everyearthquake", "significant_earthquakes_past_day_for_everyearthquake", "Finish", "list_all_groups_for_geolocation_simulation_for_mobile_apps", "getdraft_for_nhl_stats_and_live_data", "get_profiles_for_matrimony_profiles", "analysis_for_email", "challenge_for_tiktok_v3", "http_mrauto_parts_for_mrautoparts", "get_social_moving_averages_2w_for_finance_social_sentiment_for_twitter_and_stocktwits", "get_all_round_dates_for_thai_lottery", "view_food_items_by_type_for_ind_nutrient_api", "poor_backlinks_for_best_backlink_checker_api", "health_check_for_hris", "health_check_endpoint_for_interesting_facts_api"], "api_descs": {"Finish": "No description available.", "all_earthquakes_past_day_for_everyearthquake": "All Earthquakes, Past Day", "analysis_for_email": "Analyse, validate and parse the content of a given Email Address", "challenge_for_tiktok_v3": "get challenge by hashtag", "get_all_round_dates_for_thai_lottery": "Get all round dates - ดึงข้อมูลวันที่หวยออกทั้งหมด", "get_profiles_for_matrimony_profiles": "Get 200 profiles", "get_social_moving_averages_2w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 2-week intervals.", "getdraft_for_nhl_stats_and_live_data": " ", "health_check_endpoint_for_interesting_facts_api": "This endpoint returns successful response, if service works fine.", "health_check_for_hris": "Check API Health Status", "http_mrauto_parts_for_mrautoparts": "DOWNLOADS APP", "list_all_groups_for_geolocation_simulation_for_mobile_apps": "List All Groups", "poor_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "significant_earthquakes_past_day_for_everyearthquake": "Significant Earthquakes, Past Day", "view_food_items_by_type_for_ind_nutrient_api": "This request allows clients to retrieve detailed information about a food item by filtering by query param `type`.\n\nAPI request sent to [https://indnutrientsapi.tech/food?type=non-vegetarian](https://indnutrientsapi.tech/food?type=non-vegetarian)"}, "aseqs": [{"api_name": "significant_earthquakes_past_day_for_everyearthquake", "api_action": "\nAction: significant_earthquakes_past_day_for_everyearthquake\nAction Input: {}", "api_reaction": null}, {"api_name": "all_earthquakes_past_day_for_everyearthquake", "api_action": "\nAction: all_earthquakes_past_day_for_everyearthquake\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_earthquakes_past_day_for_everyearthquake"}}, {"state": "generated_by_agent", "aseq": {"api_name": "significant_earthquakes_past_day_for_everyearthquake"}}, {"state": "generated_by_agent", "aseq": {"api_name": "significant_earthquakes_past_day_for_everyearthquake"}}]}
{"URL": "66241", "query": "I want to surprise my family with a special pizza and dessert combo. Can you recommend a unique pizza flavor and a dessert that complements it? Please provide the descriptions and prices.", "api_names": ["get_specific_dessert_for_pizza_and_desserts", "get_specific_pizza_for_pizza_and_desserts", "Finish", "all_pizza_data_for_pizza_and_desserts", "all_desserts_data_for_pizza_and_desserts", "veiculo_tipo_id_marca_id_modelo_id_modelo_ano_for_veiculos_api", "sourcingresume_for_screening_and_matching_resumes", "mm_for_sb_weather", "get_binary_image_set_for_midjourney", "love_quote_for_olato_quotes", "gettraderpositions_for_trader_wagon", "top_nfts_today_for_top_nft_sales", "summary_for_real_estate_records", "generate_a_qr_code_image_for_qrickit_qr_code_qreator", "produce_mixy_words_list_for_mixy_word_guess_api", "earning_call_transcript_api_premium_for_financial_modeling_prep", "course_instructor_for_udemy_course_scrapper_api", "options_for_stock_and_options", "south_korea_scheduled_flights_level_for_global_flight_data", "get_last_n_days_scan_counts_for_tag_for_pixelstix"], "api_descs": {"Finish": "No description available.", "all_desserts_data_for_pizza_and_desserts": "This will return s all the desserts data", "all_pizza_data_for_pizza_and_desserts": "This will returns all the pizzas data", "course_instructor_for_udemy_course_scrapper_api": "Provide the course Instructor", "earning_call_transcript_api_premium_for_financial_modeling_prep": "Analyzing Earnings Conference Call With NLP", "generate_a_qr_code_image_for_qrickit_qr_code_qreator": "Format of GET request to generate QR Code image. See documentation at https://qrickit.com/qrickit_apps/qrickit_api.php", "get_binary_image_set_for_midjourney": "returns requested binary image (\"image/png\"). Full image set", "get_last_n_days_scan_counts_for_tag_for_pixelstix": "Gets the number of scans over the last N days, per day", "get_specific_dessert_for_pizza_and_desserts": "Get the Dessert by their id", "get_specific_pizza_for_pizza_and_desserts": "Get pizza by their  **ID**", "gettraderpositions_for_trader_wagon": "Get trader positions of a given portfolio id", "love_quote_for_olato_quotes": "It shows random quotes", "mm_for_sb_weather": "MMM ", "options_for_stock_and_options": "Return Stock and Options Data for given ticker", "produce_mixy_words_list_for_mixy_word_guess_api": "It produces random words in a requested amount and varios difficulty levels such as; \"easy\", \"medium\", \"hard\". In the query, \"amount\" and \"difficulty\" are optional parameters.", "sourcingresume_for_screening_and_matching_resumes": " ", "south_korea_scheduled_flights_level_for_global_flight_data": "Get weekly South Korea scheduled departing flights level.", "summary_for_real_estate_records": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index", "top_nfts_today_for_top_nft_sales": "Top selling NFTs today", "veiculo_tipo_id_marca_id_modelo_id_modelo_ano_for_veiculos_api": "/"}, "aseqs": [{"api_name": "all_pizza_data_for_pizza_and_desserts", "api_action": "\nAction: all_pizza_data_for_pizza_and_desserts\nAction Input: {}", "api_reaction": null}, {"api_name": "all_desserts_data_for_pizza_and_desserts", "api_action": "\nAction: all_desserts_data_for_pizza_and_desserts\nAction Input: {}", "api_reaction": null}, {"api_name": "get_specific_pizza_for_pizza_and_desserts", "api_action": "\nAction: get_specific_pizza_for_pizza_and_desserts\nAction Input: {\n  \"is_id\": 4\n}", "api_reaction": null}, {"api_name": "get_specific_pizza_for_pizza_and_desserts", "api_action": "\nAction: get_specific_pizza_for_pizza_and_desserts\nAction Input: {\n  \"is_id\": 1\n}", "api_reaction": null}, {"api_name": "get_specific_dessert_for_pizza_and_desserts", "api_action": "\nAction: get_specific_dessert_for_pizza_and_desserts\nAction Input: {\n  \"is_id\": 2\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_pizza_data_for_pizza_and_desserts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specific_pizza_for_pizza_and_desserts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_pizza_data_for_pizza_and_desserts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specific_dessert_for_pizza_and_desserts"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specific_dessert_for_pizza_and_desserts", "api_action": "\nAction: get_specific_dessert_for_pizza_and_desserts\nAction Input: {\n  \"is_id\": 1\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_pizza_data_for_pizza_and_desserts"}}]}
{"URL": "20021", "query": "I'm planning to invest in precious metals and need the latest rates for gold, silver, and platinum. Can you provide me with the rates in USD for each metal? Additionally, I would like to compare the historical rates of silver and platinum between January 1, 2022, and December 31, 2022.", "api_names": ["latest_rates_for_metals_prices_rates_api", "historical_rates_for_metals_prices_rates_api", "Finish", "clickbank_for_clickbankuniversity", "dashboard_pro_access_for_email_scraper", "getuserbyname_for_tes", "getevents_for_kalshi_trading_api", "validate_for_catalogapi", "videos_by_music_for_tiktok_v3", "tournament_standings_for_handball_data", "get_reservations_for_limoucloud", "file_digest_for_pragmavantapi"], "api_descs": {"Finish": "No description available.", "clickbank_for_clickbankuniversity": "email marketing", "dashboard_pro_access_for_email_scraper": "Call this endpoint (or click 'Test Endpoint') to get access to the dashboard with all features.", "file_digest_for_pragmavantapi": "Get digest/checksum for a file", "get_reservations_for_limoucloud": "get all driver related reservations", "getevents_for_kalshi_trading_api": "Endpoint for getting data about all events.", "getuserbyname_for_tes": "", "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.", "latest_rates_for_metals_prices_rates_api": "The latest API endpoint will return real-time exchange rate data updated every 60 seconds.\n\nNote: All the responses retrieved in USD needs to be converted. \n\nEx: 1/value = USD PRICE.", "tournament_standings_for_handball_data": "Team Rankings for a specific competition.", "validate_for_catalogapi": "Validates the address and items in the cart. You should call this method just before placing an order to make sure that the order will not be rejected.", "videos_by_music_for_tiktok_v3": "get videos by music_id"}, "aseqs": [{"api_name": "latest_rates_for_metals_prices_rates_api", "api_action": "\nAction: latest_rates_for_metals_prices_rates_api\nAction Input: {\n  \"symbols\": \"XAU,XAG,XPT\",\n  \"base\": \"USD\"\n}", "api_reaction": null}, {"api_name": "historical_rates_for_metals_prices_rates_api", "api_action": "\nAction: historical_rates_for_metals_prices_rates_api\nAction Input: {\n  \"date\": \"2022-01-01\",\n  \"symbols\": \"XAG,XPT\",\n  \"base\": \"USD\"\n}", "api_reaction": null}, {"api_name": "historical_rates_for_metals_prices_rates_api", "api_action": "\nAction: historical_rates_for_metals_prices_rates_api\nAction Input: {\n  \"date\": \"2022-12-31\",\n  \"symbols\": \"XAG,XPT\",\n  \"base\": \"USD\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_rates_for_metals_prices_rates_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "historical_rates_for_metals_prices_rates_api", "api_action": "\nAction: historical_rates_for_metals_prices_rates_api\nAction Input: {\n  \"symbols\": \"XAG,XPT\",\n  \"date_range\": \"2022-01-01,2022-12-31\",\n  \"base\": \"USD\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_rates_for_metals_prices_rates_api", "api_action": "\nAction: latest_rates_for_metals_prices_rates_api\nAction Input: {\n  \"symbols\": \"XAU,XAG,XPT\",\n  \"base\": \"USD\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_rates_for_metals_prices_rates_api", "api_action": "\nAction: latest_rates_for_metals_prices_rates_api\nAction Input: {\n  \"symbols\": \"XAU,XAG,XPT\",\n  \"base\": \"USD\"\n}", "api_reaction": null}}]}
{"URL": "82704", "query": "I'm organizing a company event and need to gather user information. Can you help me retrieve the details for the user with the ID '33333'? Additionally, I would like to see the information of all users stored in the database.", "api_names": ["Finish", "get_specific_user_for_node_express_api_tutorial", "get_all_users_for_node_express_api_tutorial", "get_call_for_import_export_verification", "fetch_events_for_calendars", "search_for_ykapi", "low_hold_bets_for_sportsbook_odds", "get_major_global_indices_by_technical_for_global_stock_market_api_data", "og_for_explorarc_s_opengraph_crawling_api", "historical_for_exchange_rate", "get_exchanges_for_coinlore_cryptocurrency", "marks_men_for_scoring_tables_api", "categorytournaments_for_basketapi", "all_climate_change_news_for_climate_change_news_v5", "feeds_for_tiktok_v2", "get_specific_country_for_europe_fuel_prices", "download_youtube_mp3_for_youtube_mp3_downloader", "hashtag_for_tiktok_v2"], "api_descs": {"Finish": "No description available.", "all_climate_change_news_for_climate_change_news_v5": "With this endpoint you can get all climate change news", "categorytournaments_for_basketapi": "Get the list of all leagues belonging to a specific basketball category using the category ID.", "download_youtube_mp3_for_youtube_mp3_downloader": "Update: 17 May 2023: API is fixed & it is now 100% working. Converts any YouTube video into Mp3 downloadable files. No Ads. No wild redirects.", "feeds_for_tiktok_v2": "Fetch TikToc user recent feeds by username", "fetch_events_for_calendars": "Fetches a list of events in either JSON or iCalendar format for the selected calendar", "get_all_users_for_node_express_api_tutorial": "This endpoint will return all users stored in the database.", "get_call_for_import_export_verification": "Used to fetch api result using the request id received in responses.", "get_exchanges_for_coinlore_cryptocurrency": "Get all exchanges", "get_major_global_indices_by_technical_for_global_stock_market_api_data": "World financial market to get major global Indices with respect to technical", "get_specific_country_for_europe_fuel_prices": "Get fuel prices for a specific country", "get_specific_user_for_node_express_api_tutorial": "This endpoint will return back the user with the specified ID.", "hashtag_for_tiktok_v2": "Search TikToc feeds by hashtag", "historical_for_exchange_rate": "Get historical rates for any day since 1999.", "low_hold_bets_for_sportsbook_odds": "This returns the bets that have low hold bets. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.", "marks_men_for_scoring_tables_api": "This retrieves all men's marks from the World Athletics Scoring Tables.", "og_for_explorarc_s_opengraph_crawling_api": "The Best API to Fetch all the OpenGraph and Meta tags from an given website URL", "search_for_ykapi": "search"}, "aseqs": [{"api_name": "get_specific_user_for_node_express_api_tutorial", "api_action": "\nAction: get_specific_user_for_node_express_api_tutorial\nAction Input: {\n  \"is_id\": \"33333\"\n}", "api_reaction": null}, {"api_name": "get_all_users_for_node_express_api_tutorial", "api_action": "\nAction: get_all_users_for_node_express_api_tutorial\nAction Input: {}", "api_reaction": null}, {"api_name": "get_specific_user_for_node_express_api_tutorial", "api_action": "\nAction: get_specific_user_for_node_express_api_tutorial\nAction Input: {\n  \"is_id\": \"33333\"\n}", "api_reaction": null}, {"api_name": "get_all_users_for_node_express_api_tutorial", "api_action": "\nAction: get_all_users_for_node_express_api_tutorial\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_specific_user_for_node_express_api_tutorial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_users_for_node_express_api_tutorial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specific_user_for_node_express_api_tutorial", "api_action": "\nAction: get_specific_user_for_node_express_api_tutorial\nAction Input: {\n  \"is_id\": \"33333\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_users_for_node_express_api_tutorial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specific_user_for_node_express_api_tutorial", "api_action": "{\"is_id\": \"33333\"}", "api_reaction": null}}]}
{"URL": "25944", "query": "I am a car enthusiast and I'm curious about the manufacturing location, model type, manufacturing year, and VIN details of a Tesla Roadster. The VIN identifier for the car is 0f7885c2af1a6ef9. Can you provide me with this information?", "api_names": ["manufacturing_year_detection_for_tesla_vin_identifier", "vin_detection_for_tesla_vin_identifier", "Finish", "manufacturing_location_detection_for_tesla_vin_identifier", "model_detection_for_tesla_vin_identifier", "statistics_esports_for_os_sports_perform", "get_host_list_version_hosts_get_for_ecoindex", "get_coin_issuance_blockchains_for_coinranking", "countries_for_surebets_2", "movie_comments_json_for_yts_am_torrent", "search_for_serp_api", "get_order_for_asdfadsf", "request_random_quote_for_random_quote_generator", "list_of_live_events_for_flashlive_sports", "entertainment_for_google_news", "all_products_for_recash", "exists_exists_ticket_get_for_ifc_bim_services", "get_appointments_for_appointment_system_api", "traditionalhydrotocarbonfootprint_for_carbonfootprint", "singapore_scheduled_flights_growth_for_global_flight_data"], "api_descs": {"Finish": "No description available.", "all_products_for_recash": "This will gives you all the products with codes on the data base", "countries_for_surebets_2": "Available countries", "entertainment_for_google_news": "This endpoint is used to get entertainment news from Google News.", "exists_exists_ticket_get_for_ifc_bim_services": "Check if the key ticket is available or not", "get_appointments_for_appointment_system_api": "EndPoints returns all appointments in the date. \n\nParameter Description :\ndate : the date the appointments is requested\nclinicName : Name of the clinic\n\nReturn Value : \nIt returns json object. Json contains all the appointments in requested date.\n\nJson Format :\n\nhLabel:\"07:00\"\nid:5\naDay:\"2022-09-09T00:00:00\"\naHour:58\naName:\"Efe Kemal TASAR\"\naTel:\"+905376853054\"\naType:\"Appoint\"", "get_coin_issuance_blockchains_for_coinranking": "Get the issuance blockchains on which the coin is issued.\nThis endpoint requires the **ultra** plan or higher.", "get_host_list_version_hosts_get_for_ecoindex": "This returns a list of hosts that ran an ecoindex analysis order by most request made", "get_order_for_asdfadsf": " ", "list_of_live_events_for_flashlive_sports": "Get list of live events. Use `/live-update` to get changes in live events!", "manufacturing_location_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to manufacturing location.\nA few examples:\nLRW-C (Shanghai, China)\nXP7-B (Berlin, Germany)", "manufacturing_year_detection_for_tesla_vin_identifier": "Detects the manufacturing year of the respective vehicle.", "model_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to a model type", "movie_comments_json_for_yts_am_torrent": "Returns all the comments for the specified movie", "request_random_quote_for_random_quote_generator": "A simple get request.", "search_for_serp_api": "Perform Google search and get results", "singapore_scheduled_flights_growth_for_global_flight_data": "Get weekly Singapore scheduled departing flights growth.", "statistics_esports_for_os_sports_perform": "Get statistics (esports) by event_id", "traditionalhydrotocarbonfootprint_for_carbonfootprint": "Calculate CO2e from the use of traditional hydro provider", "vin_detection_for_tesla_vin_identifier": "This endpoint is capable of resolving a Tesla VIN identifier to an actual VIN. This conversion has a success rate of approximately 98%.\nThe following information is encoded in a Tesla VIN:\nManufacturer ID\nModel Type\nPlatform Type\nSeat Belt Type\nDrive System \nMotor Type\nYear of Manufacturing\nManufacturing Location (Fremont, Shanghai, Berlin, Austin)\nSpecial Series (like R for research)\nVIN Serial"}, "aseqs": [{"api_name": "manufacturing_location_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_location_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "model_detection_for_tesla_vin_identifier", "api_action": "\nAction: model_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "manufacturing_year_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_year_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "vin_detection_for_tesla_vin_identifier", "api_action": "\nAction: vin_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "vin_detection_for_tesla_vin_identifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "manufacturing_year_detection_for_tesla_vin_identifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "manufacturing_year_detection_for_tesla_vin_identifier", "action_input": {"vin_identifier": "0f7885c2af1a6ef9"}}}, {"state": "generated_by_agent", "aseq": {"api_name": "vin_detection_for_tesla_vin_identifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "vin_detection_for_tesla_vin_identifier", "api_action": "\nAction: vin_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}}]}
{"URL": "57371", "query": "I'm a game enthusiast and I want to explore the latest news and reviews for the game 'Counter-Strike: Global Offensive'. Can you provide me with the last 10 news articles related to the game, including a brief summary of each article? Additionally, I would like to read the last 40 user reviews for the game, including the review text, rating, and date.", "api_names": ["app_news_for_steam", "app_reviews_for_steam", "global_achievement_percentages_for_app_for_steam", "Finish", "weather_forecast_for_indonesian_cities_bmkg_for_indonesia_most_accurate_weather_and_earthquake", "getgeolocationposition_for_woosmap", "get_contact_for_churchapp", "getlist_for_ordering", "upvote_riddle_for_riddlie_", "list_of_all_countries_for_weather_forecast_14_days", "list_of_foods_for_the_mexican_food_db", "get_product_for_test", "google_search_for_value_serp", "get_regions_for_gis_engine", "get_wagon_data_mrt_wagons_id_id_get_for_aqls_b2c_system", "c99_versions_for_c99_code_compiler"], "api_descs": {"Finish": "No description available.", "app_news_for_steam": "Get last n news for App", "app_reviews_for_steam": "Get last n reviews of an app", "c99_versions_for_c99_code_compiler": "C99 Versions", "get_contact_for_churchapp": "Search for a contact by their unique ID", "get_product_for_test": "get product", "get_regions_for_gis_engine": "Get regions  per country\n\n- country_code can be fetch from Get Countries endpoint.", "get_wagon_data_mrt_wagons_id_id_get_for_aqls_b2c_system": " ", "getgeolocationposition_for_woosmap": "The `/position` returns JSON location of your users thanks to IP address of their devices.\n", "getlist_for_ordering": "Get paginated list of orders. This endpoint is compatible with React AdminOnRest framework to provide DataSource.", "global_achievement_percentages_for_app_for_steam": "Get the list of all achievements and their percentages success rate", "google_search_for_value_serp": "The Google Search Parameters are applicable when making a request to the Search API to retrieve Google search results for a given search term. The search term is specified in the q parameter. The location your search is run from is determined by the location parameter, which can be populated with a full_name value from the Locations API.", "list_of_all_countries_for_weather_forecast_14_days": "List of all Countries", "list_of_foods_for_the_mexican_food_db": "This endpoint responds with a list of mexican foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe.", "upvote_riddle_for_riddlie_": "Simply calling this endpoint registers a \"like\" to better serve the riddles in the future. There is no response back other than a status message.", "weather_forecast_for_indonesian_cities_bmkg_for_indonesia_most_accurate_weather_and_earthquake": "Weather forecast for Indonesian cities BMKG"}, "aseqs": [{"api_name": "app_reviews_for_steam", "api_action": "\nAction: app_reviews_for_steam\nAction Input: {\n  \"appid\": \"730\",\n  \"limit\": 40\n}", "api_reaction": null}, {"api_name": "app_news_for_steam", "api_action": "\nAction: app_news_for_steam\nAction Input: {\n  \"limit\": 10,\n  \"appid\": 730\n}", "api_reaction": null}, {"api_name": "app_reviews_for_steam", "api_action": "\nAction: app_reviews_for_steam\nAction Input: {\n  \"appid\": \"730\",\n  \"limit\": 40\n}", "api_reaction": null}, {"api_name": "global_achievement_percentages_for_app_for_steam", "api_action": "\nAction: global_achievement_percentages_for_app_for_steam\nAction Input: {\n  \"appid\": 730\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "app_news_for_steam"}}, {"state": "generated_by_agent", "aseq": {"api_name": "app_news_for_steam", "api_action": "\nAction: app_news_for_steam\nAction Input: {\n  \"appid\": \"730\",\n  \"limit\": 10\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "app_reviews_for_steam", "api_action": "{\"appid\": \"730\", \"limit\": 40}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "app_reviews_for_steam"}}, {"state": "generated_by_agent", "aseq": {"api_name": "app_reviews_for_steam"}}]}
{"URL": "28768", "query": "I'm writing an article about the impact of news sentiment on stock prices. Can you give me the sentiment scores for the latest news articles related to Tesla (TSLA)? Additionally, provide me with the daily stock metrics for the past month.", "api_names": ["news_sentiment_data_for_stock_sentiment_api", "most_positive_news_for_stock_sentiment_api", "Finish", "most_negative_news_for_stock_sentiment_api", "market_data_for_stock_sentiment_api", "fetchcampaign_for_upcall", "get_all_recipes_1_for_comfyfood", "get_player_information_for_tank01_fantasy_stats", "items_for_codester_api", "getservertime_for_bybit_leaderboard", "getlearningresourcesbytopic_for_azure", "current_time_by_specific_ip_for_world_time", "search_music_for_kwai", "general_statistics_for_cash4life", "get_tide_sea_level_data_for_stormglass_complete", "get_call_for_nurse_verification", "locations_for_value_serp", "competitions_scorers_for_zeus_api", "conversion_for_sciphercrypto", "get_person_by_id_for_auther_check"], "api_descs": {"Finish": "No description available.", "competitions_scorers_for_zeus_api": "List the current scorers for a league ⚽.", "conversion_for_sciphercrypto": "example from \"BTC\" (Bitcoin) to \"USDT\" (Tether)\nThis JSON response contains data for the cryptocurrency example:Ethereum (ETH), including its name, algorithm, block number, launch date, and market performance ratings. It also includes conversion information for ETH to USDT, such as the current market cap, total volume, and conversion rate. use the correct symbol in order to get an accurate data.", "current_time_by_specific_ip_for_world_time": "Request the current time for a specific IP (in plain text)", "fetchcampaign_for_upcall": "Get a specific campaign", "general_statistics_for_cash4life": "This endpoint pulls basic statistics of the Cash4Life numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, and cashBall) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.", "get_all_recipes_1_for_comfyfood": "returns all the recipes from comfyfood's website", "get_call_for_nurse_verification": "Used to fetch api result using the request id received in responses.", "get_person_by_id_for_auther_check": "To check if the person_id already exists in the system, just specify the path with person_id. If the person_id exists in response you will get the same person_id and information when a person was created and updated.", "get_player_information_for_tank01_fantasy_stats": "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find LeBron, you can use lebron_james and it will bring him back.  Or try with playerName=smith and it will return a list of guys with smith in their name.\n\n/getNBAPlayerInfo?playerID=28908111729\n\n/getNBAPlayerInfo?playerName=smith\n\netc", "get_tide_sea_level_data_for_stormglass_complete": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.", "getlearningresourcesbytopic_for_azure": "Get Azure learning resources by topic.", "getservertime_for_bybit_leaderboard": "Returns server time.", "items_for_codester_api": "You can get item details such as description, price, author, images and so on.", "locations_for_value_serp": "The VALUE SERP Locations API allows you to search for VALUE SERP supported Google search locations. You can supply the `full_name` returned by the Locations API as the `location` parameter in a Search API query to retrieve search results localized to that location.", "market_data_for_stock_sentiment_api": "Returns a list of daily stock metrics such as opening, closing, highest and lowest prices.", "most_negative_news_for_stock_sentiment_api": "Returns a list of the most negative articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles", "most_positive_news_for_stock_sentiment_api": "Returns a list of the most positive articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles", "news_sentiment_data_for_stock_sentiment_api": "Returns a list of articles related to the input stock and their associated sentiment score.\nThe sentiment score is called compound.", "search_music_for_kwai": "Search Music API"}, "aseqs": [{"api_name": "news_sentiment_data_for_stock_sentiment_api", "api_action": "\nAction: news_sentiment_data_for_stock_sentiment_api\nAction Input: {\n  \"ticker\": \"TSLA\"\n}", "api_reaction": null}, {"api_name": "most_positive_news_for_stock_sentiment_api", "api_action": "\nAction: most_positive_news_for_stock_sentiment_api\nAction Input: {\n  \"ticker\": \"TSLA\"\n}", "api_reaction": null}, {"api_name": "most_negative_news_for_stock_sentiment_api", "api_action": "\nAction: most_negative_news_for_stock_sentiment_api\nAction Input: {\n  \"ticker\": \"TSLA\"\n}", "api_reaction": null}, {"api_name": "market_data_for_stock_sentiment_api", "api_action": "\nAction: market_data_for_stock_sentiment_api\nAction Input: {\n  \"ticker\": \"TSLA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "most_positive_news_for_stock_sentiment_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "most_positive_news_for_stock_sentiment_api", "api_action": "\nAction: most_positive_news_for_stock_sentiment_api\nAction Input: {\n  \"ticker\": \"TSLA\",\n  \"count\": 100\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_data_for_stock_sentiment_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_data_for_stock_sentiment_api", "api_action": "\nAction: market_data_for_stock_sentiment_api\nAction Input: {\n  \"ticker\": \"TSLA\",\n  \"dateRange\": \"30\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "most_positive_news_for_stock_sentiment_api", "api_action": "\nAction: most_positive_news_for_stock_sentiment_api\nAction Input: {\n  \"ticker\": \"TSLA\",\n  \"count\": 50\n}", "api_reaction": null}}]}
{"URL": "2042", "query": "I'm planning to watch a football match tonight. Can you provide me with the latest odds and matches available on Betmaster? I want to see the odds for my favorite team and check if there are any interesting matches happening tonight.", "api_names": ["matches_for_betmaster", "odds_for_betmaster", "Finish", "album_metadata_for_spotify_web", "3_day_forecast_for_ouranos", "newaddress_for_chaingateway_io", "get_popular_news_urls_for_news_content_extraction_live", "author_author_abs_for_poetry_db", "user_event_timeline_for_dailycred", "get_websites_for_amazon_web_scraping_api", "check_account_balance_for_eazita_com", "post_comments_for_tiktok_v4", "extracthandwriting_for_images_infos_api2", "getcatalogtenant_for_auth", "heroes_for_superhero_search", "search_term_for_fashion_industry_news_data_collection", "air_quality_forecasts_for_air_quality_api", "movies_link_and_name_for_porn_movies"], "api_descs": {"3_day_forecast_for_ouranos": "3 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 3 day every 3 hours", "Finish": "No description available.", "air_quality_forecasts_for_air_quality_api": "Gives hourly air quality forecast for a given city!", "album_metadata_for_spotify_web": "Get album metadata", "author_author_abs_for_poetry_db": "All poems by a specific author", "check_account_balance_for_eazita_com": "Retrieve your current eazita account balance.", "extracthandwriting_for_images_infos_api2": "Extract text from an image", "get_popular_news_urls_for_news_content_extraction_live": "List of popular news url links ranking by Google.", "get_websites_for_amazon_web_scraping_api": "Get the available websites available by country to extract amazon product data.", "getcatalogtenant_for_auth": "Get tenant information. Internal endpoint only available to other services.", "heroes_for_superhero_search": "Return a list of 20 random heroes", "matches_for_betmaster": "Latest Matches by Betmaster", "movies_link_and_name_for_porn_movies": "Movies Link And Name", "newaddress_for_chaingateway_io": "Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.", "odds_for_betmaster": "Latest Odds by Betmaster.", "post_comments_for_tiktok_v4": "Get Posts CommentBy \"challenge_name\" or \"challenge_id\",\nand the endpoint will return Posts comments by 'cursor'.", "search_term_for_fashion_industry_news_data_collection": "search term", "user_event_timeline_for_dailycred": ""}, "aseqs": [{"api_name": "odds_for_betmaster", "api_action": "\nAction: odds_for_betmaster\nAction Input: {}", "api_reaction": null}, {"api_name": "matches_for_betmaster", "api_action": "\nAction: matches_for_betmaster\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betmaster"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betmaster"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_betmaster"}}]}
{"URL": "52484", "query": "I'm a sports analyst and I want to analyze the performance of handball teams. Can you provide me with the predictions for handball matches that took place on October 18, 2021? Additionally, give me a sample of predictions for different markets.", "api_names": ["handball_predictions_by_day_for_betigolo_predictions", "sample_predictions_for_betigolo_predictions", "Finish", "detect_language_for_bidirectional_text_language_translation", "multi_search_for_genius_song_lyrics", "address_for_real_estate_records", "realtorschoollist_for_realtor_api_for_real_estate_data", "get_articles_for_google_news_api", "getpeoplebytopic_for_azure_smartable", "cash_flow_statement_for_fmpcloud", "get_device_asset_by_identifier_for_basic_info_vikkon_assets", "top_new_artists_for_billboard_api", "track_for_deezer", "deployment_tools_for_apievangelist", "get_by_climate_for_house_plants", "get_post_by_id_for_thefluentme", "word_of_the_day_for_urban_dictionary", "get_expressions_for_dicolink"], "api_descs": {"Finish": "No description available.", "address_for_real_estate_records": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index", "cash_flow_statement_for_fmpcloud": "Get Cash Flow Statement in JSON Format", "deployment_tools_for_apievangelist": "", "detect_language_for_bidirectional_text_language_translation": "If you want to detect language only and not translate you can provide the text parameter and the detected language will be provided in the results", "get_articles_for_google_news_api": "Get, filter, smart search google news articles.", "get_by_climate_for_house_plants": "Get plants by climate of their natural habitat.", "get_device_asset_by_identifier_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier", "get_expressions_for_dicolink": "Get Expression with a specific word", "get_post_by_id_for_thefluentme": "Returns a post by `post_id`. You can get the `post_id` from the `Get all posts` endpoint.", "getpeoplebytopic_for_azure_smartable": "Get Azure influencers by topic.", "handball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.", "multi_search_for_genius_song_lyrics": "The multi search capability covers all content hosted on Genius (all sections).", "realtorschoollist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`", "sample_predictions_for_betigolo_predictions": "Get a list of a sample of matches of the previous day, including predictions for many markets.", "top_new_artists_for_billboard_api": "Provide the YEAR-END Top New Artists chart information\n\nIf `year` is not supplied, will default to last year.", "track_for_deezer": "A track object", "word_of_the_day_for_urban_dictionary": "Gets the Word of the Day for the past 10 days, including today."}, "aseqs": [{"api_name": "handball_predictions_by_day_for_betigolo_predictions", "api_action": "\nAction: handball_predictions_by_day_for_betigolo_predictions\nAction Input: {\n  \"day\": \"2021-10-18\"\n}", "api_reaction": null}, {"api_name": "sample_predictions_for_betigolo_predictions", "api_action": "\nAction: sample_predictions_for_betigolo_predictions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "handball_predictions_by_day_for_betigolo_predictions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "sample_predictions_for_betigolo_predictions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "handball_predictions_by_day_for_betigolo_predictions", "api_action": "\nAction: handball_predictions_by_day_for_betigolo_predictions\nAction Input: {\n  \"day\": \"2021-10-18\"\n}", "api_reaction": null}}]}
{"URL": "18293", "query": "I'm planning a movie night with my friends and we want to watch some high-quality adult content. Can you suggest some popular pornstars for us to search for? It would be great if you could provide their profile images as well.", "api_names": ["Finish", "pornstar_search_for_quality_porn", "top_10_search_queries_for_quality_porn", "pornstar_by_name_for_quality_porn", "channel_details_for_youtube", "body_fat_percentage_for_fitness_calculator", "country_list_for_global_data", "get_album_for_youtube_music_api_detailed_", "comment_for_deezer", "wcag_en_json_for_daily_knowledge", "playlist_for_simple_youtube_search", "artist_info_for_shazam", "user_tweets_replies_for_twitter_v2_v2", "java_jobs_for_usa_jobs_for_it", "sponge_bob_for_memeados", "feeds_search_for_yummly", "versions_for_darko_androcec_example", "get_specific_climate_change_news_for_climate_change_api_v5", "trend_for_yahoo_finance", "connect_test_for_airbnb_listings"], "api_descs": {"Finish": "No description available.", "artist_info_for_shazam": "This endpoint will extract information of any artist from https://www.shazam.com.", "body_fat_percentage_for_fitness_calculator": "Knowing body fat percentage would be helpful to decide on a well-programmed fitness plan. You can use this endpoint with 7 parameters.", "channel_details_for_youtube": "Channel Details", "comment_for_deezer": "A comment object", "connect_test_for_airbnb_listings": "No parameters needed. Useful to test connectivity and authentication", "country_list_for_global_data": "Provides the list of the countries which belong to the tournaments.", "feeds_search_for_yummly": "Search for recipes by name and option filters", "get_album_for_youtube_music_api_detailed_": "Get information and tracks of an album.", "get_specific_climate_change_news_for_climate_change_api_v5": "This endpoint will return back specific news about climate change from all over the world", "java_jobs_for_usa_jobs_for_it": "Java Jobs Api", "playlist_for_simple_youtube_search": "YouTube playlist data", "pornstar_by_name_for_quality_porn": "Loads a porn star by name from the loaded list.", "pornstar_search_for_quality_porn": "Search for a porn star using the \"Query\".\nA list of all stars found is returned, or a detail pornstar if only one is found.", "sponge_bob_for_memeados": "Generate Sponge Bob meme", "top_10_search_queries_for_quality_porn": "Get the top 10 search queries", "trend_for_yahoo_finance": "This reflects the insurance company's profits over given periods of time.\nThis endpoint also gives **experts** & **AI supported predictions** about stock future behavior", "user_tweets_replies_for_twitter_v2_v2": "User Tweets & Replies", "versions_for_darko_androcec_example": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.", "wcag_en_json_for_daily_knowledge": "Success criteria to fulfill WCAG."}, "aseqs": [{"api_name": "pornstar_search_for_quality_porn", "api_action": "\nAction: pornstar_search_for_quality_porn\nAction Input: {\n  \"query\": \"\"\n}", "api_reaction": null}, {"api_name": "top_10_search_queries_for_quality_porn", "api_action": "\nAction: top_10_search_queries_for_quality_porn\nAction Input: {}", "api_reaction": null}, {"api_name": "pornstar_by_name_for_quality_porn", "api_action": "\nAction: pornstar_by_name_for_quality_porn\nAction Input: {\n  \"name\": \"mia khalifa\",\n  \"responseprofileimagebase64\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to search for popular pornstars and retrieve their profiles to suggest some options to the user.\n\t\"api_name\": \"pornstar_search_for_quality_porn\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "pornstar_search_for_quality_porn", "api_action": "\nAction: pornstar_search_for_quality_porn\nAction Input: {\n  \"query\": \"high-quality\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pornstar_search_for_quality_porn", "api_action": "\nAction: pornstar_search_for_quality_porn\nAction Input: {\n  \"query\": \"\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "pornstar_search_for_quality_porn", "api_action": "\nAction: pornstar_search_for_quality_porn\nAction Input: {\n  \"query\": \"\"\n}", "api_reaction": null}}]}
{"URL": "27793", "query": "I'm a basketball coach and I'm interested in the history of the NCAA Final Four. Can you provide me with a summary of the Final Four data for the year 1980, including the champion, the Final Four teams, the Most Outstanding Player, and the number one seeds? It would also be interesting to know the Final Four city and venue for the year 1952.", "api_names": ["Finish", "summary_for_ncaa_final_four", "location_for_ncaa_final_four", "vehicle_information_for_vehicle_rc_information_v2", "get_chat_restrictions_for_twitch_api", "list_for_tripit", "get_datasources_datasource_id_for_ubidots", "dna2aminoacid_for_dna2protein", "gamerounds_for_esportapi", "historical_hourly_for_easy_weather", "groundhogs_for_groundhog_day_api", "forwardgeocoding_for_forward_reverse_geocoding", "searchjobs_for_indeed_jobs_api_sweden", "option_flow_for_tradingflow_option_flow", "getnewsletters_for_a_i_smartable"], "api_descs": {"Finish": "No description available.", "dna2aminoacid_for_dna2protein": "Transform a DNA sequence into a sequence of Amino Acids", "forwardgeocoding_for_forward_reverse_geocoding": "Turn an address into latitude and longitude (e.g. to display on a map) by schematic input.", "gamerounds_for_esportapi": "Get game rounds for a specific E-Sports game by providing the game ID.", "get_chat_restrictions_for_twitch_api": "Returns chat restrictions.", "get_datasources_datasource_id_for_ubidots": "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity", "getnewsletters_for_a_i_smartable": "Get newsletters", "groundhogs_for_groundhog_day_api": "Returns all prognosticating animals with their known predictions.", "historical_hourly_for_easy_weather": "Get a historical hourly forecast for the given latitude, longitude, and start date/time.", "list_for_tripit": "A list request is used to retrieve multiple objects given an object type and set of filter parameters. Since list requests do not change data they are all made via an HTTP GET request for a URL that takes the following form:", "location_for_ncaa_final_four": "Get the Final Four city and venue for the given year.", "option_flow_for_tradingflow_option_flow": "Option Flow", "searchjobs_for_indeed_jobs_api_sweden": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Stockholm (For now this API gets data for Sweden Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'", "summary_for_ncaa_final_four": "Get the basic Final Four data set for the given year.", "vehicle_information_for_vehicle_rc_information_v2": "Fetch Vehicle Information using Registration Number."}, "aseqs": [{"api_name": "summary_for_ncaa_final_four", "api_action": "\nAction: summary_for_ncaa_final_four\nAction Input: {\n  \"identifier\": \"1980\"\n}", "api_reaction": null}, {"api_name": "location_for_ncaa_final_four", "api_action": "\nAction: location_for_ncaa_final_four\nAction Input: {\n  \"identifier\": \"1952\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "summary_for_ncaa_final_four"}}, {"state": "generated_by_agent", "aseq": {"api_name": "summary_for_ncaa_final_four", "api_action": "\nAction: summary_for_ncaa_final_four\nAction Input: {\n  \"identifier\": \"1980\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "summary_for_ncaa_final_four", "api_action": "\nAction: summary_for_ncaa_final_four\nAction Input: {\n  \"identifier\": \"1980\"\n}", "api_reaction": null}}]}
{"URL": "27693", "query": "Can you give me the details of the German league 'Bundesliga' for the year 2021? I'm particularly interested in the top scorers and their respective teams. Please include their goals and assists as well.", "api_names": ["competitions_for_zeus_api", "competitions_scorers_for_zeus_api", "competitions_id_for_zeus_api", "Finish", "nft_news_for_nft_api_news", "north_america_for_nomad_list_cities", "content_for_wayback_machine", "samyutam_for_samyutam_eduction", "list_movies_json_for_yts_am_torrent", "categories_for_aliexpress_unofficial", "iex_regulation_sho_threshold_securities_list_for_investors_exchange_iex_trading", "search_for_crossref", "get_flights_v1_cancel_for_tripvair_ai_flight_cancel_predictor", "capture_for_giflayer", "get_all_brands_for_iherb_product_data_api", "get_formats_for_intelligent_automation_ocr_ai_"], "api_descs": {"Finish": "No description available.", "capture_for_giflayer": "Main API endpoint used to generate GIFs", "categories_for_aliexpress_unofficial": " ", "competitions_for_zeus_api": "List all available competitions 🏆.", "competitions_id_for_zeus_api": "List one competition given by id 🔍.", "competitions_scorers_for_zeus_api": "List the current scorers for a league ⚽.", "content_for_wayback_machine": "Content", "get_all_brands_for_iherb_product_data_api": "Lists all available brands", "get_flights_v1_cancel_for_tripvair_ai_flight_cancel_predictor": "Offers a statistical  probability of a future flight being cancelled using deep learning AI from 7 days up to 363 days in advance", "get_formats_for_intelligent_automation_ocr_ai_": "Get a list of formats", "iex_regulation_sho_threshold_securities_list_for_investors_exchange_iex_trading": "IEX-listed securities that have an aggregate fail to deliver position for five consecutive settlement days at a registered clearing agency, totaling 10,000 shares or more and equal to at least 0.5% of the issuer’s total shares outstanding (i.e., “threshold securities”). ", "list_movies_json_for_yts_am_torrent": "Used to list and search through out all the available movies. Can sort, filter, search and order the results", "nft_news_for_nft_api_news": "This is where you get all the up to date NFT news. This is a live feed and is updated daily.", "north_america_for_nomad_list_cities": "Get North America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "samyutam_for_samyutam_eduction": "Rahul Name is Almost male", "search_for_crossref": "Let’s look at some of the results"}, "aseqs": [{"api_name": "competitions_for_zeus_api", "api_action": "\nAction: competitions_for_zeus_api\nAction Input: {}", "api_reaction": null}, {"api_name": "competitions_id_for_zeus_api", "api_action": "\nAction: competitions_id_for_zeus_api\nAction Input: {\n  \"is_id\": \"BUN\"\n}", "api_reaction": null}, {"api_name": "competitions_scorers_for_zeus_api", "api_action": "\nAction: competitions_scorers_for_zeus_api\nAction Input: {\n  \"is_id\": \"BUN\",\n  \"year\": \"2021\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "competitions_scorers_for_zeus_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "competitions_id_for_zeus_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "competitions_scorers_for_zeus_api", "api_action": "\nAction: competitions_scorers_for_zeus_api\nAction Input: {\n  \"id\": \"BUN\",\n  \"year\": 2021,\n  \"sort_by\": \"goals_and_assists\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "competitions_scorers_for_zeus_api", "api_action": "\nAction: competitions_scorers_for_zeus_api\nAction Input: {\n  \"is_id\": \"BUN\",\n  \"year\": \"2021\"\n}", "api_reaction": null}}]}
{"URL": "76863", "query": "I want to create a playlist of videos related to technology. Fetch the videos, playlists, and channels related to the query 'technology' using the 'Search' API. Also, include the trending videos from the 'Trending' API to add popular content to the playlist.", "api_names": ["Finish", "trending_for_youtube_v3_alternative", "search_for_youtube_v3_alternative", "stock_quotes_for_real_time_quotes", "10_year_historical_monthly_prices_for_stock_prices", "get_live_streams_livestreamid_for_api_video", "province_for_provinces_of_thailand", "read_usage_per_nas_for_ironwifi", "cards_by_quality_for_hearthstone", "cpf_for_quadro_de_s_cios_cpf_cnpj", "weather_report_for_the_weather_api", "test_for_pmi_jateng", "get_emoji_category_list_for_funny_emojis", "list_top_tracks_for_spotify_scraper", "series_get_squads_for_unofficial_cricbuzz"], "api_descs": {"10_year_historical_monthly_prices_for_stock_prices": "10 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "cards_by_quality_for_hearthstone": "Returns all the cards of a certain quality. Example values: Legendary, Common.", "cpf_for_quadro_de_s_cios_cpf_cnpj": "Buscar pelo CPF do sócio ou administrador", "get_emoji_category_list_for_funny_emojis": "get emoji category list", "get_live_streams_livestreamid_for_api_video": " ", "list_top_tracks_for_spotify_scraper": "This endpoint lists weekly or daily top tracks at any time and in any country.", "province_for_provinces_of_thailand": "จังหวัด", "read_usage_per_nas_for_ironwifi": "READ - USAGE PER NAS", "search_for_youtube_v3_alternative": "Search videos, playlist, channel.", "series_get_squads_for_unofficial_cricbuzz": "Get squads by series", "stock_quotes_for_real_time_quotes": "Returns the real time price of one or multiple companies", "test_for_pmi_jateng": "PMI", "trending_for_youtube_v3_alternative": "Get trending videos of the particular geo", "weather_report_for_the_weather_api": "Gives weather report of a particular city."}, "aseqs": [{"api_name": "search_for_youtube_v3_alternative", "api_action": "\nAction: search_for_youtube_v3_alternative\nAction Input: {\n  \"query\": \"technology\",\n  \"type\": \"video,playlist,channel\"\n}", "api_reaction": null}, {"api_name": "search_for_youtube_v3_alternative", "api_action": "\nAction: search_for_youtube_v3_alternative\nAction Input: {\n  \"query\": \"technology news\",\n  \"type\": \"video,playlist,channel\"\n}", "api_reaction": null}, {"api_name": "trending_for_youtube_v3_alternative", "api_action": "\nAction: trending_for_youtube_v3_alternative\nAction Input: {\n  \"geo\": \"US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_alternative"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_youtube_v3_alternative", "api_action": "\nAction: trending_for_youtube_v3_alternative\nAction Input: {\n  \"query\": \"technology\",\n  \"type\": \"video\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_alternative", "api_action": "\nAction: search_for_youtube_v3_alternative\nAction Input: {\n  \"query\": \"technology\",\n  \"type\": \"video,playlist,channel\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_alternative", "api_action": "\nAction: search_for_youtube_v3_alternative\nAction Input: {\n  \"query\": \"technology\",\n  \"type\": \"video,playlist,channel\"\n}", "api_reaction": null}}]}
{"URL": "12853", "query": "I need your assistance with my email. Can you help me retrieve the emails in my inbox and display the message content? Additionally, I would like to obtain a list of available email domains.", "api_names": ["domains_list_for_temporary_email", "get_email_for_temporary_email", "Finish", "v1_reversegeocoding_for_geocoding_by_api_ninjas", "title_get_taglines_for_imdb", "get_products_in_category_for__demo_project", "asset_history_by_id_for_crypto_exchanges", "translate_for_translate_all_languages", "drinks_for_ghana_food_recipe_api", "search_for_youtube_v3_v3", "nearby_google_for_nearby_places", "driverstandingsbyspecifyingthedriver_for_formula_1_fixed"], "api_descs": {"Finish": "No description available.", "asset_history_by_id_for_crypto_exchanges": "Get Asset History by ID", "domains_list_for_temporary_email": "Get domains list", "drinks_for_ghana_food_recipe_api": "This endpoint gets all local drinks,image,ingredient and preparation.", "driverstandingsbyspecifyingthedriver_for_formula_1_fixed": "Driver standings by giving in the driverid(name of the driver).", "get_email_for_temporary_email": "Get Email", "get_products_in_category_for__demo_project": " ", "nearby_google_for_nearby_places": "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20.", "search_for_youtube_v3_v3": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching `video`, `channel` and `playlist` resources, but you can also configure queries to only retrieve a specific type of resource.", "title_get_taglines_for_imdb": "Get taglines information of the title", "translate_for_translate_all_languages": "Translates input text, returning translated text", "v1_reversegeocoding_for_geocoding_by_api_ninjas": "API Ninjas Reverse Geocoding API endpoint."}, "aseqs": [{"api_name": "get_email_for_temporary_email", "api_action": "\nAction: get_email_for_temporary_email\nAction Input: {\n  \"email\": \"user@example.com\"\n}", "api_reaction": null}, {"api_name": "domains_list_for_temporary_email", "api_action": "\nAction: domains_list_for_temporary_email\nAction Input: {}", "api_reaction": null}, {"api_name": "get_email_for_temporary_email", "api_action": "\nAction: get_email_for_temporary_email\nAction Input: {\n  \"email\": \"user@example.com\"\n}", "api_reaction": null}, {"api_name": "domains_list_for_temporary_email", "api_action": "\nAction: domains_list_for_temporary_email\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": Deciding to get available domains first as per the user query.\n\t\"api_name\": \"domains_list_for_temporary_email\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_email_for_temporary_email"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_email_for_temporary_email"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_email_for_temporary_email"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_email_for_temporary_email", "api_action": "\nAction: get_email_for_temporary_email\nAction Input: {}"}}]}
{"URL": "53136", "query": "I'm planning a hiking trip with my friends and we need to find the geocoordinates for multiple hiking trails. Can you help us with the geocoordinates for the Grand Canyon, Yosemite National Park, and Mount Everest? Additionally, it would be great to obtain the human-readable addresses for these locations.", "api_names": ["geocode_for_trueway_geocoding", "reversegeocode_for_trueway_geocoding", "Finish", "v1_weather_for_weather_by_api_ninjas", "user_info_for_100_success_instagram_api_scalable_robust", "matchmaking_matches_for_trackmania", "get_many_cards_for_pokemon_tcg_card_prices", "get_the_yield_for_sundayfinance", "referee_profile_for_transfermarkt_db", "getallencodedvideos_for_heywatch_video_encoding", "reverse_geocode_for_tunisia_api", "business_days_work_days_calculator_api_for_business_days_work_days_calculator_"], "api_descs": {"Finish": "No description available.", "business_days_work_days_calculator_api_for_business_days_work_days_calculator_": "# Workdays Calculation API Documentation\n\nThe Workdays Calculation API allows you to calculate the date after a given number of workdays, taking into account weekends and holidays. By specifying the country code, number of workdays, start date, and options, you can retrieve the ISO date of the day after the workdays have passed.\n\n\n## Request Parameters\n\nThe API expects the following GET parameters:\n\n1. `state` (required): The country code for which the workdays are calculated. Please refer to the [list of country codes](https://www.nationsonline.org/oneworld/international-calling-codes.htm) to find the appropriate code for your country.\n\n2. `work_days` (required): The number of workdays to calculate. This indicates how many workdays should be skipped before determining the result.\n\n3. `start_date` (required): The starting date from which to begin counting the workdays. The format of the start date should be `DD/MM/YYYY`.\n\n4. `options` (optional): The options for skipping specific days. This parameter accepts the following values:\n   - `0`: Skip holidays and weekends.\n   - `1`: Skip only weekends.\n   - `2`: Skip only holidays.\n\n## Response\n\nThe API response will be a string representing the ISO date of the day after the specified workdays have passed.\n\n## Example\n\nGiven `start_date` of 19/05/2023, which is Friday, and `work_days` of 2, \nthe returned result will be 23/05/2023. Here's the breakdown of the calculation:\n\n- 19/5-20/5: Weekend (Saturday and Sunday)\n- 21/5: First workday\n- 22/5: Second workday\n\nTherefore, 23/5 is the day after the specified workdays have passed", "geocode_for_trueway_geocoding": "Obtain geocoordinates for address", "get_many_cards_for_pokemon_tcg_card_prices": "Returns many cards based on query parameters.\n\nA card represents a single card that can be defined by a combination of series / set / number in set / variant.", "get_the_yield_for_sundayfinance": "Feed in the ticker and get the yield", "getallencodedvideos_for_heywatch_video_encoding": "Get all encoded videos of your account", "matchmaking_matches_for_trackmania": "Get recent matchmaking matches.", "referee_profile_for_transfermarkt_db": "Get referee profile by referee_id", "reverse_geocode_for_tunisia_api": "This endpoint allows you to perform reverse geocoding in Tunisia by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "reversegeocode_for_trueway_geocoding": "Obtain address for location", "user_info_for_100_success_instagram_api_scalable_robust": "Get data of user profile", "v1_weather_for_weather_by_api_ninjas": "API Ninjas Weather API endpoint."}, "aseqs": [{"api_name": "geocode_for_trueway_geocoding", "api_action": "\nAction: geocode_for_trueway_geocoding\nAction Input: {\n  \"address\": \"Grand Canyon\"\n}", "api_reaction": null}, {"api_name": "reversegeocode_for_trueway_geocoding", "api_action": "\nAction: reversegeocode_for_trueway_geocoding\nAction Input: {\n  \"location\": \"36.054434,-112.140110\"\n}", "api_reaction": null}, {"api_name": "reversegeocode_for_trueway_geocoding", "api_action": "\nAction: reversegeocode_for_trueway_geocoding\nAction Input: {\n  \"location\": \"37.865101,-119.538329\"\n}", "api_reaction": null}, {"api_name": "reversegeocode_for_trueway_geocoding", "api_action": "\nAction: reversegeocode_for_trueway_geocoding\nAction Input: {\n  \"location\": \"27.988119,86.925278\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "geocode_for_trueway_geocoding"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reversegeocode_for_trueway_geocoding"}}, {"state": "generated_by_agent", "aseq": {"api_name": "geocode_for_trueway_geocoding", "api_action": "\nAction: geocode_for_trueway_geocoding\nAction Input: {\n  \"address\": \"Grand Canyon\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "geocode_for_trueway_geocoding", "api_action": "\nAction: geocode_for_trueway_geocoding\nAction Input: {\n  \"address\": \"Grand Canyon\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "geocode_for_trueway_geocoding", "api_action": "\nAction: geocode_for_trueway_geocoding\nAction Input: {\n  \"address\": \"Grand Canyon, Arizona, USA\"\n}", "api_reaction": null}}]}
{"URL": "4963", "query": "I am conducting research on climate change and require up-to-date news articles. Can you provide me with news articles from various sources as well as articles specifically from 'The Times'?", "api_names": ["get_all_climate_change_related_news_for_climate_news_api_v2", "get_individual_news_source_news_for_climate_news_api_v2", "Finish", "advanced_search_for_ott_details", "rip_for_url_intelligence", "get_all_for_print", "top_track_by_city_for_shazam", "alerts_alertid_notifications_for_signl4_critical_mobile_alerting", "search_cars_for_adzuna", "show_account_for_flowplayer_drive", "video_data_by_url_for_tiktok_solutions", "youtoosound_for_youtoosound", "middle_east_for_nomad_list_cities", "stock_getlateststock_for_stock_api", "cities_v2_get_information_for_airvisual", "autocomplete_results_for_google_search_2", "120_hour_forecast_for_weather", "sub_table_names_for_fitness_calculator"], "api_descs": {"120_hour_forecast_for_weather": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "Finish": "No description available.", "advanced_search_for_ott_details": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.", "alerts_alertid_notifications_for_signl4_critical_mobile_alerting": "Get notifications of all users by alert id.", "autocomplete_results_for_google_search_2": "Use this API to get suggestions based on the entered keyword.", "cities_v2_get_information_for_airvisual": "Get information in specific city by its id", "get_all_climate_change_related_news_for_climate_news_api_v2": "This endpoint will return all news about Climate change from all around the world.", "get_all_for_print": "Gets all the data", "get_individual_news_source_news_for_climate_news_api_v2": "Get news about climate change from a specific newspaper.", "middle_east_for_nomad_list_cities": "Get Middle East cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "rip_for_url_intelligence": "Extract links and info from a given URL", "search_cars_for_adzuna": "Search Adzuna cars.", "show_account_for_flowplayer_drive": "Shows the account", "stock_getlateststock_for_stock_api": "Get the latest stock information.", "sub_table_names_for_fitness_calculator": "Find sub-table names of a table name in the food database.", "top_track_by_city_for_shazam": "This endpoint will give the top song in specific city", "video_data_by_url_for_tiktok_solutions": "Get Video Data by U", "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome"}, "aseqs": [{"api_name": "get_all_climate_change_related_news_for_climate_news_api_v2", "api_action": "\nAction: get_all_climate_change_related_news_for_climate_news_api_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"times\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"The Times\"\n}", "api_reaction": null}, {"api_name": "get_all_climate_change_related_news_for_climate_news_api_v2", "api_action": "\nAction: get_all_climate_change_related_news_for_climate_news_api_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_news_for_climate_news_api_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {'source': 'The Times'}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"times\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"The Times\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_news_for_climate_news_api_v2", "api_action": "\nAction: get_individual_news_source_news_for_climate_news_api_v2\nAction Input: {\n  \"newspaperid\": \"The Times\"\n}", "api_reaction": null}}]}
{"URL": "28945", "query": "I'm planning a cross-country trip with my friends in the United States. Can you fetch the gas prices in different states? We would like to know the gas prices in Washington (WA). Additionally, provide us with the list of cities in the USA along with their corresponding gas prices.", "api_names": ["Finish", "stateusaprice_for_gas_price", "usacitieslist_for_gas_price", "get_artist_top_tracks_for_spotify_data_api", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau", "independence_per_country_for_africa_api_", "events_getbookableitemlist_for_sagenda_free_booking_system", "list_all_groups_for_geolocation_simulation_for_mobile_apps", "generate_shield_for_shields", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji", "getrecognizedocument_for_aspose_ocr_cloud", "convert_url_to_image_for_cloudlayer_io", "matchmanagers_for_icehockeyapi", "getsurfbreaksbycountry_for_simple_surf_forecast_api", "getbookbyid_for_feku_json"], "api_descs": {"Finish": "No description available.", "convert_url_to_image_for_cloudlayer_io": "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options).", "events_getbookableitemlist_for_sagenda_free_booking_system": "list of the bookable Items", "generate_shield_for_shields": "Generate shield.", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau": "Returns a geocode and a geolookup for a specified address", "get_artist_top_tracks_for_spotify_data_api": "Get artist top tracks by artist id", "getbookbyid_for_feku_json": "get Specific Book by ID", "getrecognizedocument_for_aspose_ocr_cloud": " ", "getsurfbreaksbycountry_for_simple_surf_forecast_api": " ", "independence_per_country_for_africa_api_": "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name>", "list_all_groups_for_geolocation_simulation_for_mobile_apps": "List All Groups", "matchmanagers_for_icehockeyapi": "Get the managers for a specific Ice Hockey match using the match id.", "stateusaprice_for_gas_price": "The service that brings gas prices in the United States by state.", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "usacitieslist_for_gas_price": "The service that get list of cities with price information in the USA."}, "aseqs": [{"api_name": "stateusaprice_for_gas_price", "api_action": "\nAction: stateusaprice_for_gas_price\nAction Input: {\n  \"state\": \"WA\"\n}", "api_reaction": null}, {"api_name": "usacitieslist_for_gas_price", "api_action": "\nAction: usacitieslist_for_gas_price\nAction Input: {}", "api_reaction": null}, {"api_name": "stateusaprice_for_gas_price", "api_action": "\nAction: stateusaprice_for_gas_price\nAction Input: {\n  \"state\": \"WA\"\n}", "api_reaction": null}, {"api_name": "usacitieslist_for_gas_price", "api_action": "\nAction: usacitieslist_for_gas_price\nAction Input: {}", "api_reaction": null}, {"api_name": "stateusaprice_for_gas_price", "api_action": "\nAction: stateusaprice_for_gas_price\nAction Input: {\n  \"state\": \"WA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "stateusaprice_for_gas_price"}}, {"state": "generated_by_agent", "aseq": {"api_name": "usacitieslist_for_gas_price"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"stateusaprice_for_gas_price\",\n\t\"api_action\": \"\\nAction: stateusaprice_for_gas_price\\nAction Input: {\\n  \\\"state\\\": \\\"WA\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "usacitieslist_for_gas_price"}}, {"state": "generated_by_agent", "aseq": {"api_name": "usacitieslist_for_gas_price"}}, {"state": "generated_by_agent", "aseq": {"api_name": "usacitieslist_for_gas_price"}}]}
{"URL": "68144", "query": "I'm conducting a research project on YouTube videos and need specific information. Can you search for videos related to cats? Additionally, fetch the playlist details and videos for the playlist with the id 'PLMC9KNkIncKseYxDN2niH6glGRWKsLtde'.", "api_names": ["playlist_for_youtube_v3_alternative", "Finish", "search_for_youtube_v3_alternative", "eff_diceware_for_mad_libs_diceware", "bombed_for_bombsaway", "hsdb_for_card_databse", "getcampaigndetails_for_nexweave", "get_chickens_for_kfc_chickens", "search_companies_by_name_for_get_companies_by_sic_code_api", "reviews_v2_list_deprecated_for_hotels", "number_captcha_for_captcha_v2", "gst_for_gst_advance"], "api_descs": {"Finish": "No description available.", "bombed_for_bombsaway": "Sends SMS", "eff_diceware_for_mad_libs_diceware": "**Generate password using plain diceware**\n\nUse query string parameter *nwords* to change number of words in the password\n\nAccepted values for *nwords* parameter: 4 to 7", "get_chickens_for_kfc_chickens": "This Endpoint returns all the chicken dishes", "getcampaigndetails_for_nexweave": "This API will return the Campaign details including variables used in the overall Campaign.", "gst_for_gst_advance": "Used to verify GST Number", "hsdb_for_card_databse": "HSDB", "number_captcha_for_captcha_v2": "Captcha code is number format.\n\n- params: length is number (from 1 to  8, default is 6)", "playlist_for_youtube_v3_alternative": "Get playlist details and videos.", "reviews_v2_list_deprecated_for_hotels": "Get all reviews of specific property", "search_companies_by_name_for_get_companies_by_sic_code_api": "This endpoint will allow you to search for companies by their name. This endpoint will provide you with the company slug that could be used to get additional company data, like SIC code and NAICS code.", "search_for_youtube_v3_alternative": "Search videos, playlist, channel."}, "aseqs": [{"api_name": "search_for_youtube_v3_alternative", "api_action": "\nAction: search_for_youtube_v3_alternative\nAction Input: {\n  \"query\": \"cats\"\n}", "api_reaction": null}, {"api_name": "playlist_for_youtube_v3_alternative", "api_action": "\nAction: playlist_for_youtube_v3_alternative\nAction Input: {\n  \"is_id\": \"PLMC9KNkIncKseYxDN2niH6glGRWKsLtde\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_alternative"}}, {"state": "generated_by_agent", "aseq": {"api_name": "playlist_for_youtube_v3_alternative", "api_action": "{\"playlist_id\": \"PLMC9KNkIncKseYxDN2niH6glGRWKsLtde\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_youtube_v3_alternative", "api_action": "\nAction: search_for_youtube_v3_alternative\nAction Input: {\n  \"query\": \"cats\",\n  \"part\": \"snippet\"\n}", "api_reaction": null}}]}
{"URL": "84354", "query": "I need to check if a specific vehicle with the VIN 1G1JC5SHXC4134208 has been listed in the salvage database. Please let me know if it was salvaged in the past.", "api_names": ["salvagecheck_for_simple_salvage_vin_check", "Finish", "qwe_for_test_apizzz", "search_for_city_and_state_search_api", "top_headlines_for_real_time_news_data", "social_media_news_in_german_for_onelike", "customer_name_for_soti_sync", "top_artists_for_billboard_api"], "api_descs": {"Finish": "No description available.", "customer_name_for_soti_sync": "Fetch Customer Name", "qwe_for_test_apizzz": "qwe", "salvagecheck_for_simple_salvage_vin_check": "Returns true if the VIN was in a salvage database in the past. False otherwise. Must be a valid 17 digit vin from North America.", "search_for_city_and_state_search_api": "This endpoint allows you to search for locations (cities, states, or countries) by name. It returns a list of locations that match the specified search query.", "social_media_news_in_german_for_onelike": "Get social media news in German", "top_artists_for_billboard_api": "Provide the YEAR-END Top Artists chart information\n\nIf `year` is not supplied, will default to last year.", "top_headlines_for_real_time_news_data": "Get the latest news headlines/top stories for a country."}, "aseqs": [{"api_name": "salvagecheck_for_simple_salvage_vin_check", "api_action": "\nAction: salvagecheck_for_simple_salvage_vin_check\nAction Input: {\n  \"vin\": \"1G1JC5SHXC4134208\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "salvagecheck_for_simple_salvage_vin_check"}}, {"state": "generated_by_agent", "aseq": {"api_name": "salvagecheck_for_simple_salvage_vin_check"}}]}
{"URL": "41273", "query": "I'm looking for some wine recommendations for a special occasion. Can you suggest some wines and also provide my profile details?", "api_names": ["cart_for_direct_wines", "recommendations_for_direct_wines", "profile_for_direct_wines", "Finish", "get_subcontrol_by_control_for_risk_management_framework", "daily_match_list_scheduled_for_ice_hockey_data", "getoutgoingmessagesjournal_for_green_api", "streams_friends_for_stocktwits", "memre_api_v1_readiness_for_learning_engine", "stockprice_for_indian_stock_exchange_api", "epname_for_pl1box1", "search_for_joj_finance", "reviews_list_deprecated_for_target", "rapid_api_of_dung_bui_end_point_for_dung_bui", "google_search_for_value_serp", "aliexpress_store_item_search_for_aliexpress_datahub", "get_movies_by_title_for_movies_tv_shows_database", "images_for_seo_api", "user_lookup_for_peerreach", "convert_from_one_unit_to_another_for_measurement_unit_converter"], "api_descs": {"Finish": "No description available.", "aliexpress_store_item_search_for_aliexpress_datahub": "All details of a single item.", "cart_for_direct_wines": "", "convert_from_one_unit_to_another_for_measurement_unit_converter": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.", "daily_match_list_scheduled_for_ice_hockey_data": "Daily match list including scheduled matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**", "epname_for_pl1box1": "Get all collections", "get_movies_by_title_for_movies_tv_shows_database": "Result set includes all search results\nEach item includes fields:\nTitle\nYear\nMovie  ID", "get_subcontrol_by_control_for_risk_management_framework": "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc.", "getoutgoingmessagesjournal_for_green_api": "Документация [LastOutgoingMessages](https://green-api.com/docs/api/journals/LastOutgoingMessages/)", "google_search_for_value_serp": "The Google Search Parameters are applicable when making a request to the Search API to retrieve Google search results for a given search term. The search term is specified in the q parameter. The location your search is run from is determined by the location parameter, which can be populated with a full_name value from the Locations API.", "images_for_seo_api": "Perform Google Image Search\n\nParameters\n----------\nquery : the string query to perform search. supports advance queries.\n\nReturns\n-------\njson: a list of results with the link, description, title, and image thumbnail for each result", "memre_api_v1_readiness_for_learning_engine": "Get the readiness of the user for the specified item.\n", "profile_for_direct_wines": "Profile", "rapid_api_of_dung_bui_end_point_for_dung_bui": "lưu webhook call", "recommendations_for_direct_wines": "", "reviews_list_deprecated_for_target": "List reviews relating to a product", "search_for_joj_finance": "Search for indexes, stocks, ETFs, cryptocurrencies, currencies and more", "stockprice_for_indian_stock_exchange_api": "Enter the SYMBOL such as TATAMOTORS, M&M etc as a parameter at the endpoint and it will give your the Live Price updates from exchange.", "streams_friends_for_stocktwits": "Returns the most recent 30 messages posted to the authenticating user's people stream of the users they follow.", "user_lookup_for_peerreach": "Returns a detailed overview of available PeerReach data for the user"}, "aseqs": [{"api_name": "recommendations_for_direct_wines", "api_action": "\nAction: recommendations_for_direct_wines\nAction Input: {}", "api_reaction": null}, {"api_name": "profile_for_direct_wines", "api_action": "\nAction: profile_for_direct_wines\nAction Input: {}", "api_reaction": null}, {"api_name": "cart_for_direct_wines", "api_action": "\nAction: cart_for_direct_wines\nAction Input: {}", "api_reaction": null}, {"api_name": "recommendations_for_direct_wines", "api_action": "\nAction: recommendations_for_direct_wines\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "recommendations_for_direct_wines"}}, {"state": "generated_by_agent", "aseq": {"api_name": "profile_for_direct_wines"}}, {"state": "generated_by_agent", "aseq": {"api_name": "recommendations_for_direct_wines"}}, {"state": "generated_by_agent", "aseq": {"api_name": "recommendations_for_direct_wines"}}, {"state": "generated_by_agent", "aseq": {"api_name": "recommendations_for_direct_wines"}}]}
{"URL": "71095", "query": "My company is developing a mobile app centered around ancient mythology and we need data on the Roman gods. Can you give me a description of a random Roman god and also provide me with information about Mercury, the messenger of the gods?", "api_names": ["search_roman_god_by_name_for_roman_gods_by_pizza_api", "random_roman_god_for_roman_gods_by_pizza_api", "Finish", "contact_list_for_zipwhip", "random_username_generator_for_unique_username_generator_by_pizza_api", "random_profiles_for_fake_data_generator", "tournament_info_for_handball_data", "leagues_for_soccer_app", "search_hotel_for_skyscanner_v2", "top_collections_this_month_for_top_nft_sales", "qualifyingresults_for_formula_1_fixed", "top_holders_for_rich_nft_api_metadata", "get_company_historical_data_for_stoxx", "get_weapon_recipes_for_lost_ark_simple", "getmodalityvalues_for_the_cancer_imaging_archive"], "api_descs": {"Finish": "No description available.", "contact_list_for_zipwhip": "This method returns all contacts associated with session provided.", "get_company_historical_data_for_stoxx": "Provides access to daily historical company pricing data over a given period of months\n\nA sample output for each day:\n`{\n\"changePercent\":0\n\"close\":115.1465\n\"date\":\"2022-05-27\"\n\"high\":115.187\n\"low\":112.628\n\"open\":113.55\n\"symbol\":\"AMZN\"\n\"updated\":1654726813000\n\"volume\":93660160\n}`", "get_weapon_recipes_for_lost_ark_simple": "Get List of** Lost Ark** craftable Weapons.", "getmodalityvalues_for_the_cancer_imaging_archive": "getModalityValues", "leagues_for_soccer_app": "League Matches 2020", "qualifyingresults_for_formula_1_fixed": " ", "random_profiles_for_fake_data_generator": "This endpoint generate a list of fake user profiles", "random_roman_god_for_roman_gods_by_pizza_api": "Returns information about a random Roman God", "random_username_generator_for_unique_username_generator_by_pizza_api": "Returns a Random and unique username everytime", "search_hotel_for_skyscanner_v2": "Get and poll hotel room search with prices, filter etc.", "search_roman_god_by_name_for_roman_gods_by_pizza_api": "Search for a Roman God By name to get a description about them", "top_collections_this_month_for_top_nft_sales": "Top trending collections this month", "top_holders_for_rich_nft_api_metadata": "Get top holders \n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op", "tournament_info_for_handball_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament."}, "aseqs": [{"api_name": "random_roman_god_for_roman_gods_by_pizza_api", "api_action": "\nAction: random_roman_god_for_roman_gods_by_pizza_api\nAction Input: {}", "api_reaction": null}, {"api_name": "search_roman_god_by_name_for_roman_gods_by_pizza_api", "api_action": "\nAction: search_roman_god_by_name_for_roman_gods_by_pizza_api\nAction Input: {\n\"god\": \"Mercury\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_roman_god_for_roman_gods_by_pizza_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_roman_god_by_name_for_roman_gods_by_pizza_api", "api_action": "{\"name\": \"Mercury\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_roman_god_for_roman_gods_by_pizza_api"}}]}
{"URL": "44335", "query": "I need to gather information about the current live events and their details for a specific skin. Could you please provide me with the live events, their types, details, and external information? It would be helpful if you could also include the bread crumb navigation items.", "api_names": ["geteventtypes_for_sport_odds", "geteventdetails_for_sport_odds", "getlivenow_for_sport_odds", "Finish", "getbreadcrumbnavitem_for_sport_odds", "get_rankings_post_season_for_nba_stats_v2", "placesbyids_for_mapreflex", "eredivisie_standings_for_eredivisie_standings", "search_term_for_cryptocurrencies_data_collection", "keyword_search_with_ranking_for_google_local_rank_tracker", "spac_sec_filings_for_spachero_spac_database", "get_station_details_for_soundcloud_scraper", "leagues_for_soccer_app", "heroes_data_for_dota2_heroes", "get_artist_overview_for_theclique", "proxy_request_endpoint_for_cors_proxy", "get_resolutions_for_lambdatest_screenshot", "m2_5_earthquakes_past_hour_for_everyearthquake", "fetchcalls_for_upcall", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days"], "api_descs": {"Finish": "No description available.", "eredivisie_standings_for_eredivisie_standings": "Eredivisie Standings", "fetchcalls_for_upcall": "Get all calls", "get_artist_overview_for_theclique": "Enter Artist ID", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days": "get forecast for 14 days for the location Lat/Lon", "get_rankings_post_season_for_nba_stats_v2": "Api to query rankings post season", "get_resolutions_for_lambdatest_screenshot": "Fetch all available resolution on different OS", "get_station_details_for_soundcloud_scraper": "This endpoint fetches full details of a SoundCloud station, including all tracks.", "getbreadcrumbnavitem_for_sport_odds": "GetBreadCrumbNavItem data api", "geteventdetails_for_sport_odds": "GetEventDetails api data", "geteventtypes_for_sport_odds": "GetEventTypes data api", "getlivenow_for_sport_odds": "GetLivenow data now", "heroes_data_for_dota2_heroes": "You can get heroes all heroes data name, image, videos, roles, abilities and talents with 20 languages.", "keyword_search_with_ranking_for_google_local_rank_tracker": "Make a Keyword search at a Coordinate (lat/lng) for all the business and get the ranking of a specific business at that point. The ranking data is determined by the business place_id or business name.", "leagues_for_soccer_app": "League Matches 2020", "m2_5_earthquakes_past_hour_for_everyearthquake": "Magnitude 2.5+ Earthquakes, Past Hour", "placesbyids_for_mapreflex": "Get boundaries of given Places (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "proxy_request_endpoint_for_cors_proxy": "returns response text of a given website using cors proxy", "search_term_for_cryptocurrencies_data_collection": "search term", "spac_sec_filings_for_spachero_spac_database": "Get latest SPAC SEC filings, filter by SPAC symbol."}, "aseqs": [{"api_name": "getlivenow_for_sport_odds", "api_action": "\nAction: getlivenow_for_sport_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "geteventtypes_for_sport_odds", "api_action": "\nAction: geteventtypes_for_sport_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "geteventdetails_for_sport_odds", "api_action": "\nAction: geteventdetails_for_sport_odds\nAction Input: {\n  \"skinname\": \"betbiga\"\n}", "api_reaction": null}, {"api_name": "getbreadcrumbnavitem_for_sport_odds", "api_action": "\nAction: getbreadcrumbnavitem_for_sport_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getlivenow_for_sport_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "geteventtypes_for_sport_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlivenow_for_sport_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbreadcrumbnavitem_for_sport_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlivenow_for_sport_odds"}}]}
{"URL": "42616", "query": "I'm planning a solo trip to London and I want to make sure I have the latest public transit information. Can you provide me with the latest feed version for the public transit system in London? Additionally, it would be great to retrieve a list of feed versions for the same system.", "api_names": ["Finish", "getfeedversions_for_transitfeeds", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas", "get_coin_metrics_by_name_for_crowdsense", "get_coin_price_difference_for_crypto_arbitrage_trading", "basal_metabolic_rate_bmr_for_health_calculator_api", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking", "shakespeare_for_shakespeare_translator"], "api_descs": {"Finish": "No description available.", "basal_metabolic_rate_bmr_for_health_calculator_api": "This endpoint allows you to calculate the Basal Metabolic Rate (BMR) based on age, weight, height, and gender parameters. The BMR represents the number of calories needed to maintain basic bodily functions at rest.", "get_coin_metrics_by_name_for_crowdsense": "Retrieve  coin´s real time social media metrics by Coin name\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Name: Coin Name (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n•\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n•\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n•\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n•\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n•\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n•\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All dates are in UTC\n- Results are on 1 day timeframe", "get_coin_price_difference_for_crypto_arbitrage_trading": "returns the object with all the required data", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "getfeedversions_for_transitfeeds": "Retrieve a list of feed versions. This list can be filtered by a number of input parameters", "shakespeare_for_shakespeare_translator": "Shakespeare Translator", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas": "API Ninjas Mortgage Calculator API endpoint. Either **loan_amount** or (**home_value** + **downpayment**) parameters must be set."}, "aseqs": [{"api_name": "getfeedversions_for_transitfeeds", "api_action": "\nAction: getfeedversions_for_transitfeeds\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getfeedversions_for_transitfeeds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfeedversions_for_transitfeeds"}}]}
{"URL": "76678", "query": "I want to surprise my friend with a luxury watch from a specific brand. Can you fetch the reference numbers of the watches available for that brand? Also, I would like to know the exchange rates for currency conversion.", "api_names": ["Finish", "get_exchange_rates_for_watchsignals", "get_reference_numbers_of_a_specific_brand_for_watchsignals", "get_all_watch_brands_for_watchsignals", "get_individual_source_news_for_german_police_and_crime_news_live", "get_beverage_by_there_id_for_beverages_and_desserts", "search_arrivals_by_flight_for_british_airways_flight_info", "send_sms_for_hajana_one_free_sms_for_websites", "category_for_bigbox", "estimated_salary_for_jsearch", "phonelist_for_whatsapp_api", "categories_for_fiverr_pro_services", "letters_for_boggle", "get_country_by_alphacode_for_geography", "search_for_deezer", "getgamecontent_for_nhl_stats_and_live_data", "companies_id_financials_exists_for_german_company_data_v2", "rising_popular_posts_for_reddit", "get_whois_batch_for_bulk_whois", "list_all_qr_code_s_for_qr_code_dynamic_and_static"], "api_descs": {"Finish": "No description available.", "categories_for_fiverr_pro_services": "List of category names you can search for", "category_for_bigbox": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results from Home Depot. The category is specified in the category_id parameter. The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nCategory results are retrieved from the Category results page on Home Depot.", "companies_id_financials_exists_for_german_company_data_v2": "This endpoint returns the list of years for which financial key figures (balance sheet total, revenue, profit, number of employees) for the company with the given identifier are available. The purpose of this endpoint is to give the user the opportunity to avoid potentially expensive and useless calles to the /financials-endpoint.", "estimated_salary_for_jsearch": "Get estimated salaries for a jobs around a location", "get_all_watch_brands_for_watchsignals": "Get all watch brands", "get_beverage_by_there_id_for_beverages_and_desserts": "Get beverages by there id", "get_country_by_alphacode_for_geography": "Get brief countries details by ISO 3166 standard alpha code", "get_exchange_rates_for_watchsignals": "Return latest exchange rates", "get_individual_source_news_for_german_police_and_crime_news_live": "This endpoint will return back all news about police, crime, accidents and more like this from germany from a specific news source.", "get_reference_numbers_of_a_specific_brand_for_watchsignals": "Get reference numbers of a specific brand", "get_whois_batch_for_bulk_whois": "Get WHOIS batch.", "getgamecontent_for_nhl_stats_and_live_data": " ", "letters_for_boggle": "Solve Boggle board", "list_all_qr_code_s_for_qr_code_dynamic_and_static": "From this endpoint is to list all registered qr codes, related to their api key.", "phonelist_for_whatsapp_api": " ", "rising_popular_posts_for_reddit": "Rising Popular Posts", "search_arrivals_by_flight_for_british_airways_flight_info": "", "search_for_deezer": "Search tracks", "send_sms_for_hajana_one_free_sms_for_websites": "A File for sending SMS"}, "aseqs": [{"api_name": "get_all_watch_brands_for_watchsignals", "api_action": "\nAction: get_all_watch_brands_for_watchsignals\nAction Input: {}", "api_reaction": null}, {"api_name": "get_reference_numbers_of_a_specific_brand_for_watchsignals", "api_action": "\nAction: get_reference_numbers_of_a_specific_brand_for_watchsignals\nAction Input: {\n  \"is_id\": \"60\"\n}", "api_reaction": null}, {"api_name": "get_exchange_rates_for_watchsignals", "api_action": "\nAction: get_exchange_rates_for_watchsignals\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to first fetch the reference numbers of the watches available for the specific brand, and then get the exchange rates.\n}\n{\n\t\"api_name\": \"get_reference_numbers_of_a_specific_brand_for_watchsignals\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_reference_numbers_of_a_specific_brand_for_watchsignals"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_rates_for_watchsignals"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_rates_for_watchsignals"}}]}
{"URL": "13533", "query": "I work for a climate research organization and I need to gather articles related to climate change from different publications. Can you provide me with the latest articles from sources like Nasa Climate, United Nations, and The Guardian? Please exclude any articles from The Guardian. Limit the number of articles to 50.", "api_names": ["get_articles_for_climate_news_feed", "get_all_publications_for_climate_news_feed", "Finish", "qrcode_for_qr_code_v18", "calendar_events_for_yh_finance_complete", "email_for_mailcheck", "search_for_instagram_scraper_2023_v2", "past_3_months_for_the_sandbox_sand", "category_for_rainforest", "getlistingsbyradius_idx_for_remarketlite_apis", "account_for_finhost", "get_all_characters_for_new_girl", "gives_the_weight_catergory_based_on_the_bmi_for_bmi_v2", "metadata_for_cryptocurrency_data", "dat_for_dathoang", "get_champion_rotation_for_league_of_legends_api", "format_number_for_phone_validator_api", "search_today_s_departures_by_time_for_british_airways_flight_info"], "api_descs": {"Finish": "No description available.", "account_for_finhost": "Return the list of the balances for the client accounts", "calendar_events_for_yh_finance_complete": "Calendar Events of a particular stock", "category_for_rainforest": "The Category Parameters are applicable when making a request with type=category to retrieve category results for an Amazon category. Categories can be specified either via passing an Amazon category URL in to the url parameter, or by passing a Category ID in to the category_id (where the category_id is returned from the Categories API) and an Amazon domain in to the amazon_domain parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.", "dat_for_dathoang": "hoang", "email_for_mailcheck": "Check if an email is disposable", "format_number_for_phone_validator_api": "Returns the phone number on standardized formats.", "get_all_characters_for_new_girl": "This will provide the show's characters with a tiny bit of data", "get_all_publications_for_climate_news_feed": "Get the name of all publications this API delivers news from.", "get_articles_for_climate_news_feed": "Gets all articles.\n\nquery examples:\nsource = United Nations, Nasa Climate, The Guardian, Carbon Brief\nLimit = 100 (default)\nexclude=The Guardian", "get_champion_rotation_for_league_of_legends_api": "Return's you a liste of free champion ids and liste of free champions ids for new player.", "getlistingsbyradius_idx_for_remarketlite_apis": "Search listings around a point or address within the specified Radius", "gives_the_weight_catergory_based_on_the_bmi_for_bmi_v2": "The API catergorizes the person based on the BMI. The catergories would be Underweight, Normal weight, Overweight, Obesity Class I, Obesity Class II and Obesity Class III. These definitions differ in Asians hence you may be able to enter the ethnicity of the person (Asian or not asian)", "metadata_for_cryptocurrency_data": "The list of all available assets", "past_3_months_for_the_sandbox_sand": "Get price data for the past 3 months.\n\n~hourly data points.", "qrcode_for_qr_code_v18": "Get a QR Code from an input text", "search_for_instagram_scraper_2023_v2": "Search", "search_today_s_departures_by_time_for_british_airways_flight_info": ""}, "aseqs": [{"api_name": "get_articles_for_climate_news_feed", "api_action": "\nAction: get_articles_for_climate_news_feed\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_publications_for_climate_news_feed", "api_action": "\nAction: get_all_publications_for_climate_news_feed\nAction Input: {}", "api_reaction": null}, {"api_name": "get_articles_for_climate_news_feed", "api_action": "\nAction: get_articles_for_climate_news_feed\nAction Input: {}", "api_reaction": null}, {"api_name": "get_articles_for_climate_news_feed", "api_action": "\nAction: get_articles_for_climate_news_feed\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_articles_for_climate_news_feed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_articles_for_climate_news_feed", "api_action": "{\"sources\": ['United Nations', 'Nasa Climate'], \"exclude_sources\": ['The Guardian'], \"limit\": 50}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_instagram_scraper_2023_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_instagram_scraper_2023_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_publications_for_climate_news_feed"}}]}
{"URL": "6390", "query": "I am a data scientist and I want to analyze the changing trends in different regions over time. Can you provide me with the trending keywords for the past week in all 50 geographic regions? It would be great if you can include the corresponding articles and images for these keywords.", "api_names": ["get_trend_keyword_for_trends_keywords_in_different_regions", "Finish", "stays_properties_detail_facilities_for_booking_com_v2", "leagues_for_sports_betting_api", "search_for_webit_image_search", "communes_par_code_commune_for_bps", "get_digibyte_balance_for_cryptocurrency_balance", "define_a_word_search_for_urban_dictionary", "content_for_wayback_machine", "edit_alert_for_cheapshark_game_deals"], "api_descs": {"Finish": "No description available.", "communes_par_code_commune_for_bps": "Récupérer les détails d'une commune depuis son code.", "content_for_wayback_machine": "Content", "define_a_word_search_for_urban_dictionary": "Can be used to define a specific word, or search for word defintions", "edit_alert_for_cheapshark_game_deals": "Set or remove a price alert.", "get_digibyte_balance_for_cryptocurrency_balance": "This endpoint will return back the DigiByte balance of an address", "get_trend_keyword_for_trends_keywords_in_different_regions": "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications.", "leagues_for_sports_betting_api": "League List", "search_for_webit_image_search": "Webit Image Search API provides you a powerful endpoint to search billions of images from the world wide web featuring rating, reverse search by image and multi-lingual capabilities.", "stays_properties_detail_facilities_for_booking_com_v2": "Get detail facilities"}, "aseqs": [{"api_name": "get_trend_keyword_for_trends_keywords_in_different_regions", "api_action": "\nAction: get_trend_keyword_for_trends_keywords_in_different_regions\nAction Input: {}", "api_reaction": null}, {"api_name": "get_trend_keyword_for_trends_keywords_in_different_regions", "api_action": "\nAction: get_trend_keyword_for_trends_keywords_in_different_regions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_trend_keyword_for_trends_keywords_in_different_regions"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_trend_keyword_for_trends_keywords_in_different_regions\",\n\t\"api_action\": \"{\\\"date\\\": \\\"2023-05\\\", 'nb_days': 7}\\nAction Input: {\"date\": \"2023-05\", \"nb_days\": 7}\",\n\t\"api_reaction\": null\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_trend_keyword_for_trends_keywords_in_different_regions\",\n\t\"api_action\": \"\\nAction: get_trend_keyword_for_trends_keywords_in_different_regions\\nAction Input: {\"date\":\"2023-05-19\"}\",  # Using a future date to simulate the process for demonstration purposes\n\t\"api_reaction\": null\n}"}]}
{"URL": "64482", "query": "I'm a journalist writing an article about the healthcare system in Senegal. Can you provide me with a list of hospitals in the country? Please include their addresses, latitude and longitude coordinates, and contact information. Additionally, I would like to know the distance from each hospital to the nearest airport.", "api_names": ["facilities_lookup_for_senegal_api", "geocode_for_senegal_api", "Finish", "tweet_retweeters_for_twitter_v2_v2", "properties_list_in_boundary_for_seloger", "3000_years_for_weeby", "getorderbyid_for_13", "generatequiz_for_quizy_api", "getmasters_for_aspose_diagram_cloud", "get_data_with_articles_about_software_development_for_pluralsight_articles", "url_metrics_for_domain_da_pa_check", "flight_for_flight_integration", "detection_objects_as_json_by_image_url_for_mantis_object_detection", "titles_with_changed_episodes_for_watchmode", "get_individual_news_source_news_for_latest_ipl_news", "group_management_api_access_for_group_s_device_list_for_catchloc", "get_metadata_for_us_counties", "property_listings_for_airdna"], "api_descs": {"3000_years_for_weeby": "Generates the 3000 Years Meme.\n**ALL DOCUMENTATION HERE**: [https://weebyapi.ntmnathan.com/api/docs](https://weebyapi.ntmnathan.com/api/docs)", "Finish": "No description available.", "detection_objects_as_json_by_image_url_for_mantis_object_detection": "Any valid image URL and return JSON", "facilities_lookup_for_senegal_api": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "flight_for_flight_integration": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "generatequiz_for_quizy_api": "This endpoint will return you the 5 questions, options, correct answer and explaination for the quiz topic you provide.", "geocode_for_senegal_api": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_data_with_articles_about_software_development_for_pluralsight_articles": "This endpoint will return back data with around 100 articles from Pluralsight's \"software-development\" section.", "get_individual_news_source_news_for_latest_ipl_news": "Get News about IPL from a specific news resource.", "get_metadata_for_us_counties": "metadata", "getmasters_for_aspose_diagram_cloud": " ", "getorderbyid_for_13": "Retrieves an order", "group_management_api_access_for_group_s_device_list_for_catchloc": "API access for location object group's device list.\n\nrequired parameter : api(api.common.group.get.group.object.list)", "properties_list_in_boundary_for_seloger": "List properties in a bounding box with options and filters", "property_listings_for_airdna": "Get rental properties of Airbnb and Vrbo by location and date.", "titles_with_changed_episodes_for_watchmode": "Get a listing of titles that have changes to their episodes (new episodes, episode details changed, etc) within the date range.", "tweet_retweeters_for_twitter_v2_v2": "Tweet Retweeters", "url_metrics_for_domain_da_pa_check": "- Title\n- Domain Authority Score\n- Page Authority Score\n- Equity\n- Links\n- Moz Rank"}, "aseqs": [{"api_name": "facilities_lookup_for_senegal_api", "api_action": "\nAction: facilities_lookup_for_senegal_api\nAction Input: {\n  \"region\": \"Senegal\",\n  \"type\": \"hospital\",\n  \"limit\": \"10\"\n}", "api_reaction": null}, {"api_name": "geocode_for_senegal_api", "api_action": "\nAction: geocode_for_senegal_api\nAction Input: {\n  \"address\": \"airport, Senegal\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_senegal_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "geocode_for_senegal_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_senegal_api", "api_action": "Action: facilities_lookup_for_senegal_api\nAction Input: {\n  \"region\": \"Senegal\",\n  \"type\": \"hospital\",\n  \"limit\": \"10\"\n}", "api_reaction": null}}]}
{"URL": "76520", "query": "I'm planning a family vacation to Marrakech and I need to find a spacious villa for rent. Can you perform a fast search on Avito and provide me with a list of available villas, along with their descriptions, prices, and contact details? We would prefer a villa with a pool and a garden.", "api_names": ["fastsearchfull_for_avito_scraper", "Finish", "ip_lookup_for_ip_geolocator", "get_workout_plan_for_workout_planner", "stays_properties_detail_facilities_for_booking_com_v2", "word_of_the_day_from_pm_for_word_of_the_day", "search_for_skype_graph", "market_get_sectors_for_schwab"], "api_descs": {"Finish": "No description available.", "fastsearchfull_for_avito_scraper": "this is a beta test of fast API of Full info Search", "get_workout_plan_for_workout_planner": "Get Workout Plans\n\nThis api request can be used to get Workout plan based on:\n\n- Time duration\n- Target Muscle\n- Location\n- Equipment\n\nHence api call takes 4 query parameters:\n\n- time\n- muscle\n- location\n- equipment", "ip_lookup_for_ip_geolocator": "## Retrieve an IP address geolocation and ASN informations.", "market_get_sectors_for_schwab": "Get brief information about all sectors", "search_for_skype_graph": "Search for a Skype user by email address or name", "stays_properties_detail_facilities_for_booking_com_v2": "Get detail facilities", "word_of_the_day_from_pm_for_word_of_the_day": "Get word of the day from pm"}, "aseqs": [{"api_name": "fastsearchfull_for_avito_scraper", "api_action": "\nAction: fastsearchfull_for_avito_scraper\nAction Input: {\n  \"fastav\": \"spacious villa for rent in Marrakech with pool and garden\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "fastsearchfull_for_avito_scraper"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"fastsearchfull_for_avito_scraper\",\n\t\"api_action\": \"{\\\"fastav\\\": \\\"spacious villa for rent in Marrakech with pool and garden\\\"}\",\n}"}]}
{"URL": "66123", "query": "As a food blogger, I'm always searching for new recipe ideas. Can you suggest a recipe that is trending right now? Once I choose a recipe, please provide the details, including the author, publishing date, content, and image. Additionally, I would like to see the recipe category, image, and URL for all recipes.", "api_names": ["get_recipes_details_for_recetas_en_espa_ol", "get_recipes_for_recetas_en_espa_ol", "Finish", "ticker_for_joj_finance", "get_a_full_list_of_conversions_with_statistics_for_clickmeter", "read_guest_registration_for_ironwifi", "innings_cricket_for_sofasport", "get_airplane_list_for_travel_hacking_tool", "title_title_for_poetry_db", "verify_for_sudoku_all_purpose_pro", "get_main_campaigns_for_vouchery_io", "camlist_for_tsaboin_cams"], "api_descs": {"Finish": "No description available.", "camlist_for_tsaboin_cams": "List all available traffic cameras", "get_a_full_list_of_conversions_with_statistics_for_clickmeter": "Get a full list of conversions with statistics", "get_airplane_list_for_travel_hacking_tool": "This endpoint returns a list of all airplane types available in our database.", "get_main_campaigns_for_vouchery_io": "Gets main campaign", "get_recipes_details_for_recetas_en_espa_ol": "Get details of any recipe", "get_recipes_for_recetas_en_espa_ol": "Get all recipes", "innings_cricket_for_sofasport": "Get innings (cricket) by event_id", "read_guest_registration_for_ironwifi": "READ - GUEST REGISTRATION", "ticker_for_joj_finance": "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more", "title_title_for_poetry_db": "All poems on Poetry DB with a specific title", "verify_for_sudoku_all_purpose_pro": "Check any solved (as well as *unsolved!*) Sudoku for authenticity and integrity."}, "aseqs": [{"api_name": "get_recipes_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_for_recetas_en_espa_ol\nAction Input: {}", "api_reaction": null}, {"api_name": "get_recipes_details_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_details_for_recetas_en_espa_ol\nAction Input: {\n  \"slug\": \"receta-de-coca-de-san-juan-casera-75270.html\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_details_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_for_recetas_en_espa_ol"}}]}
{"URL": "50094", "query": "I'm searching for a property to rent in Portugal and I need one with a terrace and private toilet. Can you provide me with a list of available rental properties in Lisbon? Also, I would like to know the details of a specific zone of interest with the zoiId 'metro-porta-romana'.", "api_names": ["zois_detail_for_idealista_v2", "properties_list_for_idealista_v2", "auto_complete_for_idealista_v2", "Finish", "getuserbyname_for_freeplanhardlimitexternal", "genderize_for_genderize_nationalize", "get_individual_news_sources_for_crypto_news_live_v2", "lyrics_get_for_songmeanings", "tunein_for_tunein", "get_categories_for__demo_project_v13", "search_company_by_name_for_business_and_company_name_api", "hourlyweather_for_history", "get_a_conversation_turn_for_lemurbot", "searchcities_for_world_cities_and_countries", "get_brandlist_by_siteid_zappos_1_6pm_2_for_zappos_2022", "api_vcodes_api_php_siteid_siteid_for_free_coupon_codes"], "api_descs": {"Finish": "No description available.", "api_vcodes_api_php_siteid_siteid_for_free_coupon_codes": "Free Coupon Codes", "auto_complete_for_idealista_v2": "Get auto complete suggestion by term or phrase", "genderize_for_genderize_nationalize": "Get gender of provided name", "get_a_conversation_turn_for_lemurbot": "Get a specific conversation turn by it's id and view it's details", "get_brandlist_by_siteid_zappos_1_6pm_2_for_zappos_2022": "GET BrandList by siteId (zappos =1, 6pm=2)", "get_categories_for__demo_project_v13": " ", "get_individual_news_sources_for_crypto_news_live_v2": "Get Crypto News from a Specific Source", "getuserbyname_for_freeplanhardlimitexternal": "", "hourlyweather_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (latitude and longitude)", "lyrics_get_for_songmeanings": "Retrieves lyrics and lyric related data for a specific song.", "properties_list_for_idealista_v2": "List properties for sale or rent in Italy, Spain, Portugal with options and filters", "search_company_by_name_for_business_and_company_name_api": "Do you know the company name? you can make a search of company information with just the name. You will get hits of all companies and businesses that are matching that particular name.", "searchcities_for_world_cities_and_countries": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.", "tunein_for_tunein": "Radio", "zois_detail_for_idealista_v2": "Get information about specific zone of interest"}, "aseqs": [{"api_name": "auto_complete_for_idealista_v2", "api_action": "\nAction: auto_complete_for_idealista_v2\nAction Input: {\n\"prefix\": \"Lisbon\",\n\"country\": \"pt\"\n}", "api_reaction": null}, {"api_name": "properties_list_for_idealista_v2", "api_action": "\nAction: properties_list_for_idealista_v2\nAction Input: {\n\"operation\": \"rent\",\n\"locationname\": \"Lisboa, Lisboa\",\n\"locationid\": \"0-EU-PT-11-06\",\n\"country\": \"pt\",\n\"terrace\": true,\n\"privatetoilet\": true\n}", "api_reaction": null}, {"api_name": "zois_detail_for_idealista_v2", "api_action": "\nAction: zois_detail_for_idealista_v2\nAction Input: {\n\"zoiid\": \"metro-porta-romana\",\n\"language\": \"en\",\n\"country\": \"it\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_idealista_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_idealista_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "zois_detail_for_idealista_v2", "api_action": "{\"operation\": \"get\", \"zoiid\": 1234567890}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_idealista_v2"}}]}
{"URL": "4965", "query": "Can you provide me with news articles about India? I am particularly interested in articles that mention the tag 'India'. Please fetch the title, content, and link for each article.", "api_names": ["tag_search_for_india_today_unofficial", "Finish", "water_vapour_data_by_coordinates_for_ambee_water_vapor_data", "search_for_worldwide_recipes", "getbookcoverimage_for_book_cover_api", "get_reservation_by_id_for_limoucloud", "lines_line_abs_for_poetry_db", "race_calendar_for_fia_formula_1_championship_statistics", "bookrestaurant_for_camrest676", "visa_requirements_for_visa_requirements"], "api_descs": {"Finish": "No description available.", "bookrestaurant_for_camrest676": "Returns the restaurants the user is looking for", "get_reservation_by_id_for_limoucloud": "Get Reservation by ID", "getbookcoverimage_for_book_cover_api": "Get a book cover image by isbn and language code", "lines_line_abs_for_poetry_db": "All poems that contain a specific line", "race_calendar_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the current championship schedule and information about the **next round**. Time zone is GMT +00:00 Europe/London", "search_for_worldwide_recipes": "Search Recipe", "tag_search_for_india_today_unofficial": "Get news as per the tag", "visa_requirements_for_visa_requirements": " ", "water_vapour_data_by_coordinates_for_ambee_water_vapor_data": "Get Water Vapour data by Coordinates"}, "aseqs": [{"api_name": "tag_search_for_india_today_unofficial", "api_action": "\nAction: tag_search_for_india_today_unofficial\nAction Input: {\n  \"tag\": \"India\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tag_search_for_india_today_unofficial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tag_search_for_india_today_unofficial"}}]}
{"URL": "16256", "query": "My company is interested in purchasing electronic devices. Can you search for electronic devices on Ebay in Germany and retrieve the search results? Please provide information about the sellers, including their usernames and ratings. Also, fetch the images, prices, and conditions of the devices.", "api_names": ["search_products_for_ebay", "Finish", "list_histories_for_crypto_grana", "index_for_web_push_notifications_server", "latest_earthquake_for_indonesia_latest_weather_and_earthquake", "is_mobile_for_phone_validator_api", "types_for_everyearthquake", "newlyregistereddomains_for_check_disposable_email", "get_news_from_a_specific_source_for_pollution_news_api", "trending_music_gaming_news_movies_for__cheap_youtube_api_"], "api_descs": {"Finish": "No description available.", "get_news_from_a_specific_source_for_pollution_news_api": "This Endpoint would return news on pollution in african countries from a specific news source", "index_for_web_push_notifications_server": "Endpoint to fetch server information", "is_mobile_for_phone_validator_api": "Returns `true` or `false` depending on whether the number is a mobile line or not.", "latest_earthquake_for_indonesia_latest_weather_and_earthquake": "Latest Earthquake", "list_histories_for_crypto_grana": "List of your histories", "newlyregistereddomains_for_check_disposable_email": "REST API to lookup newly registered domains", "search_products_for_ebay": "Search for products on Ebay in specific country.\nReturns the `last_page` that can be scraped for the specific `search_query`.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)", "trending_music_gaming_news_movies_for__cheap_youtube_api_": "Get trending videos.\n\nOptional parameters:\ntype: \"music\", \"gaming\", \"news\", \"movies\"\nregion: ISO 3166 country code (default: \"US\")", "types_for_everyearthquake": "Return all types of events ever recorded by the USGS, such as earthquakes, explosions, landslides and many more."}, "aseqs": [{"api_name": "search_products_for_ebay", "api_action": "\nAction: search_products_for_ebay\nAction Input: {\n  \"search_query\": \"electronic devices\",\n  \"country\": \"Germany\"\n}", "api_reaction": null}, {"api_name": "search_products_for_ebay", "api_action": "\nAction: search_products_for_ebay\nAction Input: {\n  \"search_query\": \"smartphones\",\n  \"country\": \"Germany\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": Using the search_products_for_ebay API, we will need to specify the country as Germany and set \"type\" to \"electronics\" to retrieve electronic devices listing on Ebay in Germany. We will also include additional parameters to fetch sellers' usernames, ratings, images, prices, and conditions.\n\t\"api_name\": \"search_products_for_ebay\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_ebay"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_histories_for_crypto_grana"}}]}
{"URL": "20804", "query": "I am planning a motorcycle trip next year and I need to find the specifications of different models. Can you provide me with a list of motorcycle models for the year 2022 in the Sport category? Please include the make ID for each model.", "api_names": ["Finish", "models_by_make_for_motorcycle_specs_database", "models_by_make_id_year_category_for_motorcycle_specs_database", "models_by_make_id_and_category_for_motorcycle_specs_database", "check_search_status_for_fresh_linkedin_profile_data", "hourly_for_ai_weather_by_meteosource", "properties_get_hotel_photos_deprecated_for_hotels", "download_translated_document_for_textking_translation", "check_lists_for_mailvalid", "properties_count_for_seloger", "weather_forecast_for_indonesian_cities_bmkg_for_indonesia_most_accurate_weather_and_earthquake", "smile_for_5970b9b3dcc757e61e53daec3e720974", "search_by_location_for_ev_charge_finder", "search_for_twitter", "getsupportedbarcodes_for_groupdocs_signature_cloud", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a", "all_supported_exams_for_tech_exams", "email_checker_for_alpha_email_verification", "api_schedulechangeaccept_mfref_flightid_for_asr_hub", "get_amazon_search_results_for_ag_amazon_data_web_scraper"], "api_descs": {"Finish": "No description available.", "all_supported_exams_for_tech_exams": "Returns all supported exams.", "api_schedulechangeaccept_mfref_flightid_for_asr_hub": "Accept Schedule Change based on the UserInputs\r\n - MFRef\r\n - Flight Id", "check_lists_for_mailvalid": "The route for checking the lists of disposable or non disposable emails", "check_search_status_for_fresh_linkedin_profile_data": "Get the status of your search using the request_id given in step 1.", "download_translated_document_for_textking_translation": "Downloads the translated document for a job.", "email_checker_for_alpha_email_verification": "check the email provided by user for registration is valid or not or may be disposable email.", "get_amazon_search_results_for_ag_amazon_data_web_scraper": "It Will Give The Product Details You Want Just By Searching The Product Name.", "getsupportedbarcodes_for_groupdocs_signature_cloud": " ", "hourly_for_ai_weather_by_meteosource": "**Hourly weather** forecast for the next 5 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las Comunidades Autónomas de España", "models_by_make_for_motorcycle_specs_database": "Get all models by make name\nex: /model/make-name/BMW\nsample:\n\n```\n    {\n        \"id\": 1514,\n        \"name\": \"450 Sports Enduro\"\n    },\n    {\n        \"id\": 1515,\n        \"name\": \"C 400 GT\"\n    },\n    {\n        \"id\": 1516,\n        \"name\": \"C 400 X\"\n    },\n    {\n        \"id\": 1517,\n        \"name\": \"C 600 Sport\"\n    },\n    {\n        \"id\": 1518,\n        \"name\": \"C 650 GT\"\n    },\n```", "models_by_make_id_and_category_for_motorcycle_specs_database": "Get all models  by make ID and category\nex: /api/v1/model/make-id/100/category/Sport\n\nsample:\n\n```\n    {\n        \"modelId\": 2713,\n        \"modelName\": \"Altino 125 ES\",\n        \"yearName\": 2004,\n        \"categoryName\": \"Sport\",\n        \"priceName\": null,\n        \"articleId\": 5559\n    },\n    {\n        \"modelId\": 2730,\n        \"modelName\": \"Daystar 125 FI\",\n        \"yearName\": 2011,\n        \"categoryName\": \"Sport\",\n        \"priceName\": \" Euro 2990.  Prices depend on country, taxes, accessories, etc.\",\n        \"articleId\": 5590\n    },\n    {\n        \"modelId\": 2745,\n        \"modelName\": \"RoadSport\",\n        \"yearName\": 2015,\n        \"categoryName\": \"Sport\",\n        \"priceName\": null,\n        \"articleId\": 5610\n    }\n```", "models_by_make_id_year_category_for_motorcycle_specs_database": "get model by make ID, year and category:\n\nex: /api/v1/model/make-id/55/2010/Sport", "properties_count_for_seloger": "Count total properties returned with options and filters", "properties_get_hotel_photos_deprecated_for_hotels": "Get all available photos of property", "search_by_location_for_ev_charge_finder": "Search for EV charging stations near a specific location specified as a free-form location query (e.g. *San Francisco, CA, USA*).", "search_for_twitter": "-", "smile_for_5970b9b3dcc757e61e53daec3e720974": "smile", "weather_forecast_for_indonesian_cities_bmkg_for_indonesia_most_accurate_weather_and_earthquake": "Weather forecast for Indonesian cities BMKG"}, "aseqs": [{"api_name": "models_by_make_id_and_category_for_motorcycle_specs_database", "api_action": "\nAction: models_by_make_id_and_category_for_motorcycle_specs_database\nAction Input: {\n  \"make\": 0,\n  \"category\": \"Sport\"\n}", "api_reaction": null}, {"api_name": "models_by_make_for_motorcycle_specs_database", "api_action": "\nAction: models_by_make_for_motorcycle_specs_database\nAction Input: {\n  \"make\": \"all\"\n}", "api_reaction": null}, {"api_name": "models_by_make_id_year_category_for_motorcycle_specs_database", "api_action": "\nAction: models_by_make_id_year_category_for_motorcycle_specs_database\nAction Input: {\n  \"make\": 55,\n  \"year\": 2022,\n  \"category\": \"Sport\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "models_by_make_id_year_category_for_motorcycle_specs_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "models_by_make_id_year_category_for_motorcycle_specs_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "models_by_make_id_year_category_for_motorcycle_specs_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "models_by_make_id_year_category_for_motorcycle_specs_database"}}]}
{"URL": "71249", "query": "I want to improve my performance in the National Real Estate exam, so I need access to the questions and answers from previous exams. Can you provide me with all the multiple choice and true or false questions along with the correct answers? It would be helpful if the questions are categorized by topic.", "api_names": ["qanda_for_real_estate_exam", "Finish", "list_all_images_for_qrcode", "get_all_foods_for_generic_food_v2", "iamrich_for_i_am_rich", "app_reviews_for_store_apps", "get_category_by_id_for_hadiths_api", "retrieves_the_account_s_open_position_for_given_symbol_for_alpaca_trading", "extract_for_mobile_phone_validation", "billboard_global_200_for_billboard_v2", "getseries_for_the_cancer_imaging_archive", "view_request_headers_and_body_for_pe_demo"], "api_descs": {"Finish": "No description available.", "app_reviews_for_store_apps": "Get all app reviews.", "billboard_global_200_for_billboard_v2": "Get the Billboard Global 200 chart.", "extract_for_mobile_phone_validation": "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in case you can't provide Country and service will try to guess the country :). Country recognition not very fast. Read docs to explain possible values.", "get_all_foods_for_generic_food_v2": "Get all foods", "get_category_by_id_for_hadiths_api": "Each category have a unique ID. These ID can be used to get the category", "getseries_for_the_cancer_imaging_archive": "Returns a set of series objects filtered by query keys", "iamrich_for_i_am_rich": "Since so many people asked for it.\n\nBe part of the fun !", "list_all_images_for_qrcode": "This endpoint allows you to list images hosted in the LinQR storage. If there are no images hosted, an empty array is returned.", "qanda_for_real_estate_exam": "Returns all multiple choice and true or false questions with answers and feedback.", "retrieves_the_account_s_open_position_for_given_symbol_for_alpaca_trading": "", "view_request_headers_and_body_for_pe_demo": "View the request headers and body in JSON format."}, "aseqs": [{"api_name": "qanda_for_real_estate_exam", "api_action": "\nAction: qanda_for_real_estate_exam\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "qanda_for_real_estate_exam"}}, {"state": "generated_by_agent", "aseq": {"api_name": "qanda_for_real_estate_exam"}}]}
{"URL": "43260", "query": "I'm planning a trip to explore new destinations. Can you provide me with a list of interests to choose from? Additionally, I would like to get recommendations for interesting places to visit in a specific country.", "api_names": ["interests_for_fastapi_project", "explore_for_fastapi_project", "Finish", "getproductoptions_for_appibase", "get_all_teams_for_aaaa", "timezones_for_referential", "get_major_global_indices_by_technical_for_global_stock_market_api_data", "about_for_judge0_ce", "nps_template_for_nps_net_promoter_score", "body_mass_index_for_health_calculator_api", "pair_strength_for_currency_quake", "getteamroster_for_nhl_stats_and_live_data", "slot_and_betting_games_for_slot_and_betting_games", "search_by_animename_art_id_for_premium_anime_mobile_wallpapers_illustrations", "companies_cash_flow_statements_for_financial_modeling_prep"], "api_descs": {"Finish": "No description available.", "about_for_judge0_ce": "Get general information.", "body_mass_index_for_health_calculator_api": "This endpoint calculates the BMI based on the provided height and weight parameters.", "companies_cash_flow_statements_for_financial_modeling_prep": "Returns companies cash flow statements", "explore_for_fastapi_project": "explore api", "get_all_teams_for_aaaa": "Get information about all of the Teams in a specific Organization, including the `name`, `status`, and `description` for each Team. ", "get_major_global_indices_by_technical_for_global_stock_market_api_data": "World financial market to get major global Indices with respect to technical", "getproductoptions_for_appibase": "Get all product options", "getteamroster_for_nhl_stats_and_live_data": " ", "interests_for_fastapi_project": "Gets interests", "nps_template_for_nps_net_promoter_score": "Get a summary of NPS calculation for a given template. It considers the overall answers related to that template and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs.", "pair_strength_for_currency_quake": "Exposes the underlying calculations that are performed on each pair to get a currency’s combined strength.", "search_by_animename_art_id_for_premium_anime_mobile_wallpapers_illustrations": "Search by animename, art_id\n\nRequired GET parameter\n\n**page**: 1\n**sensitivity**: 1\n**searchText**: 'Tokyo'\n**exact**: 0\n\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper\npage 1 : 0-10\npage 2: 10-20 ……\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOn the above **searchText**, means it will try to fetch all arts based on the above text (Japanese anime name)\nOR\nart_id\n\n***Note: searchText param should be min 3 chars length***\n\nOptional GET parameter\n**exact**: \n\nIf the exact parameter is not provided then by default it will be set to 0.\n0 represents fetch all the arts related to any searchText word of animename.\n\n**Note: Exact params value 0 assume that you are passing japanese animename it will search all the wallpapers related to it**\n( So **attack on t** will result in empty response since its english name but **Shingeki no** will not)\n\n1 represents fetch all the arts which have the same animename and searchText.\n\n**Note: Exact params value 1 support both english and japanese animename**\n( So **Attack on titan** which is english will result wallpaper of japanese animename **Shingeki no Kyojin**)\n\n2 represent fetch arts based on art_id ( so If you are sending art_id on searchText make sure you set the exact param to 2 )\n\n**quality**:0\nThis API provides two types of wallpaper images\n\nCompress lower size wallpaper.\nBest quality but will result in high size.\nIf the **quality** parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\nRESPONSE\n**animename**( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity**( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id**( Depend on subscription )\nUnique wallpaper id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\nNote: if no wallpaper found response will be\n\n*{\"status\": \"empty\"}*", "slot_and_betting_games_for_slot_and_betting_games": "Games for your online casino.", "timezones_for_referential": "List the world's time zones in 20 languages"}, "aseqs": [{"api_name": "explore_for_fastapi_project", "api_action": "\nAction: explore_for_fastapi_project\nAction Input: {}", "api_reaction": null}, {"api_name": "interests_for_fastapi_project", "api_action": "\nAction: interests_for_fastapi_project\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "interests_for_fastapi_project"}}, {"state": "generated_by_agent", "aseq": {"api_name": "interests_for_fastapi_project"}}, {"state": "generated_by_agent", "aseq": {"api_name": "interests_for_fastapi_project"}}]}
{"URL": "53575", "query": "My company needs to analyze the crypto market. Please fetch the list of positions for each crypto in our Crypto grana account. We want to see the amount in cents and the currency ISO. Additionally, we would like to retrieve the histories for our Crypto grana account. Provide us with the list of histories, displaying 50 records per page and showing the second page.", "api_names": ["list_histories_for_crypto_grana", "list_position_for_each_crypto_for_crypto_grana", "Finish", "provider3_live_upcoming_for_football_betting_odds", "getmaptilewithspanishlabels_for_maptiles", "template_list_for_xlsx_template", "geocode_for_nigeria_api", "api_vcodes_api_php_siteid_siteid_for_free_coupon_codes", "get_last_5_economic_calendar_news_for_cryptoinfo", "get_info_about_artist_for_theclique", "type_for_typography", "realtorschoollist_for_realtor_api_for_real_estate_data"], "api_descs": {"Finish": "No description available.", "api_vcodes_api_php_siteid_siteid_for_free_coupon_codes": "Free Coupon Codes", "geocode_for_nigeria_api": "This endpoint allows you to lookup locations in Nigeria by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_info_about_artist_for_theclique": "Give info about artist on allmusic.com\n\nResponse -> json", "get_last_5_economic_calendar_news_for_cryptoinfo": "Get last 5 actual and processed economic calendar news", "getmaptilewithspanishlabels_for_maptiles": "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map.", "list_histories_for_crypto_grana": "List of your histories", "list_position_for_each_crypto_for_crypto_grana": "List your current position for each crypto", "provider3_live_upcoming_for_football_betting_odds": "get upcoming matches list", "realtorschoollist_for_realtor_api_for_real_estate_data": "This endpoint will give you the Realtor School List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York etc\nstate_code: CA or NY etc\nschool_level: It can be either one of them (elementary, middle, high, private & charter)\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"coordinates\": {\n      \"lat\": 37.247605,\n      \"lon\": -121.946069\n    },\n    \"funding_type\": \"public\",\n    \"grades\": [\n      \"K\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\"\n    ],\n    \"id\": \"078653021\",\n    \"location\": {\n      \"city\": \"San Jose\",\n      \"city_slug_id\": \"San-Jose_CA\",\n      \"state\": \"CA\"\n    },\n    \"name\": \"Carlton Elementary School\",\n    \"parent_rating\": 4,\n    \"rating\": 9,\n    \"review_count\": 27,\n    \"school url\": \"https://www.realtor.com/local/schools/Carlton-Elementary-School-078653021\"\n  }`", "template_list_for_xlsx_template": "Cloud storage templates file list", "type_for_typography": " "}, "aseqs": [{"api_name": "list_histories_for_crypto_grana", "api_action": "\nAction: list_histories_for_crypto_grana\nAction Input: {}", "api_reaction": null}, {"api_name": "list_position_for_each_crypto_for_crypto_grana", "api_action": "\nAction: list_position_for_each_crypto_for_crypto_grana\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_position_for_each_crypto_for_crypto_grana"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_position_for_each_crypto_for_crypto_grana"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_position_for_each_crypto_for_crypto_grana", "api_action": "\nAction: list_position_for_each_crypto_for_crypto_grana\nAction Input: {}", "api_reaction": null}}]}
{"URL": "69039", "query": "My friend is interested in a specific product on Amazon. Could you fetch the product details, reviews, and offers for the product with the ID 'B00K3OM3PS'? It would be great if I could share this information with my friend.", "api_names": ["get_product_s_reviews_for_amazon_data_scraper_v2", "get_awesome_product_details_for_amazon_data_scraper_v2", "get_product_s_offers_for_amazon_data_scraper_v2", "Finish", "rapid_api_of_dung_bui_end_point_for_dung_bui", "get_data_for_backend", "validate_email_for_easy_email_validation", "filter_for_conflict_for_east_china_news", "ai_bot_for_chat_gpt_ai_bot", "historical_traffic_series_for_chartbeat", "pull_track_for_air_cargo_co2_track_and_trace", "getfeatures_for_endlessmedicalapi", "gameweekgames_for_premier_league_stats", "searching_for_videos_for_aol_on_network", "getqrcode_for_maytapi_whatsapp", "citizen_profile_for_erpk", "get_a_random_fact_about_cats_for_cat_facts", "message_send_for_zipwhip", "channel_shorts_for_youtube_v2", "get_word_by_length_and_contain_for_random_word_api"], "api_descs": {"Finish": "No description available.", "ai_bot_for_chat_gpt_ai_bot": "Simply ask for whatever you require, and our API will provide the solutions. Let us know your needs, and our AI BOT will effortlessly generate the marketing copy for you. With this convenient tool, you'll have more time to dedicate to your passions.", "channel_shorts_for_youtube_v2": "Get the latest shorts published by a Youtube channel", "citizen_profile_for_erpk": "", "filter_for_conflict_for_east_china_news": "Filters for conflict in all three regions", "gameweekgames_for_premier_league_stats": "Get all games from a particular gameweek.", "get_a_random_fact_about_cats_for_cat_facts": "This endpoint returns a random fact about cats", "get_awesome_product_details_for_amazon_data_scraper_v2": "Get awesome product details", "get_data_for_backend": "Get all Data", "get_product_s_offers_for_amazon_data_scraper_v2": "Get Product's Offers", "get_product_s_reviews_for_amazon_data_scraper_v2": "Get product's reviews", "get_word_by_length_and_contain_for_random_word_api": "Returns a random word that contains a certain string and contains a certain amount of letters.\nFor example, if the substring is \"le\" and the length \"7\", you will get a word that contains \"le\" and is 7 characters long, such as \"dozzled\".", "getfeatures_for_endlessmedicalapi": "GetFeatures", "getqrcode_for_maytapi_whatsapp": "Gets the image of QR-Code.", "historical_traffic_series_for_chartbeat": "Returns series of the traffic sources and/or page load time where the default time span of each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data.", "message_send_for_zipwhip": "Sends a message from the logged in user's phone number.", "pull_track_for_air_cargo_co2_track_and_trace": "By providing a valid AWB, you can get tracking information for the shipment.", "rapid_api_of_dung_bui_end_point_for_dung_bui": "lưu webhook call", "searching_for_videos_for_aol_on_network": "You can search our library using this request:", "validate_email_for_easy_email_validation": "Validate an email"}, "aseqs": [{"api_name": "get_awesome_product_details_for_amazon_data_scraper_v2", "api_action": "\nAction: get_awesome_product_details_for_amazon_data_scraper_v2\nAction Input: {\n  \"productid\": \"B00K3OM3PS\"\n}", "api_reaction": null}, {"api_name": "get_product_s_reviews_for_amazon_data_scraper_v2", "api_action": "\nAction: get_product_s_reviews_for_amazon_data_scraper_v2\nAction Input: {\n  \"productid\": \"B00K3OM3PS\"\n}", "api_reaction": null}, {"api_name": "get_product_s_offers_for_amazon_data_scraper_v2", "api_action": "\nAction: get_product_s_offers_for_amazon_data_scraper_v2\nAction Input: {\n  \"productid\": \"B00K3OM3PS\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch product details, reviews, and offers for the product with ID 'B00K3OM3PS' from Amazon using the get_awesome_product_details_for_amazon_data_scraper_v2 API.\n\t\"api_name\": \"get_awesome_product_details_for_amazon_data_scraper_v2\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_product_s_reviews_for_amazon_data_scraper_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_product_s_offers_for_amazon_data_scraper_v2", "api_action": "\nAction: get_product_s_offers_for_amazon_data_scraper_v2\nAction Input: {\n  \"productid\": \"B00K3OM3PS\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_awesome_product_details_for_amazon_data_scraper_v2\",\n\t\"api_action\": \"\\nAction: get_awesome_product_details_for_amazon_data_scraper_v2\\nAction Input: {\\n  \\\"productid\\\": \\\"B00K3OM3PS\\\"\\n}\",\n}"}]}
{"URL": "35141", "query": "I'm looking for new arrivals and bestsellers in the makeup category on Sephora. Can you list the products that match these criteria? Please include details such as the product name, rating, price, and images.", "api_names": ["Finish", "products_v2_get_filters_for_sephora", "products_v2_list_for_sephora", "categories_v2_list_for_sephora", "user_media_for_twitter_v2", "ideas_get_comments_for_trading_view", "carriers_detect_for_trackingmore_v2", "searchicons_for_flaticon", "coin_for_circulating_supply", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data", "airplanes_ordered_by_descending_for_airplanesdb", "keyword_research_api_for_seo_keyword_research", "getstationbycountry_for_radio_world_75_000_worldwide_fm_radio_stations_", "artist_discography_overview_for_spotify_web", "regional_rail_schedules_for_septa", "usa_latest_odds_for_surebets_2"], "api_descs": {"Finish": "No description available.", "airplanes_ordered_by_descending_for_airplanesdb": "Get all airplanes ordered by name in descending order.", "artist_discography_overview_for_spotify_web": "Get artist discography overview", "carriers_detect_for_trackingmore_v2": "Detect carrier by providing tracking number", "categories_v2_list_for_sephora": "List categories", "coin_for_circulating_supply": "This endpoint returns the value of given coin as parameter.", "getstationbycountry_for_radio_world_75_000_worldwide_fm_radio_stations_": "Getting all Stations by country based on.\n- country id\n- limit\n- page\n- order", "ideas_get_comments_for_trading_view": "Get comments relating to an ideal post", "keyword_research_api_for_seo_keyword_research": "Keyword Research API", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests", "products_v2_get_filters_for_sephora": "Generate the filter panel dynamically", "products_v2_list_for_sephora": "List products with options and filters", "regional_rail_schedules_for_septa": "By train number, lol.", "searchicons_for_flaticon": "Method that allows you to get a paged list with the results of the search. Icons returned by the search may be SELECTION icons or PREMIUM icons. By default, it will return a list order by priority. If no order is set, it will return items order by priority. In order to avoid 403 errors when svg icon is used to show the icon in result lists you must not store data in cache more than 15 minutes", "usa_latest_odds_for_surebets_2": "Latest odds for matches in the USA - updated every 6 hours", "user_media_for_twitter_v2": "Get User Media"}, "aseqs": [{"api_name": "categories_v2_list_for_sephora", "api_action": "\nAction: categories_v2_list_for_sephora\nAction Input: {}", "api_reaction": null}, {"api_name": "products_v2_get_filters_for_sephora", "api_action": "\nAction: products_v2_get_filters_for_sephora\nAction Input: {}", "api_reaction": null}, {"api_name": "products_v2_list_for_sephora", "api_action": "\nAction: products_v2_list_for_sephora\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "products_v2_list_for_sephora"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_v2_list_for_sephora"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_v2_list_for_sephora"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_v2_list_for_sephora"}}]}
{"URL": "25989", "query": "I'm developing a mobile app that requires a random array of strings. Can you generate a random array with 5 strings for me? Additionally, I need a random word for a game I'm creating. Can you provide me with a random adjective?", "api_names": ["Finish", "getrandomarray_for_random_chunk_api", "getrandomword_for_random_chunk_api", "convert_for_exchange_rate", "find_pages_linked_to_specific_anchor_text_for_advanced_serp_operators", "refugee_by_data_for_ukraine_war_data", "v1_recipe_for_recipe_by_api_ninjas", "results_by_date_for_cricket_live_data", "get_rhyme_for_simple_poet", "get_top_coins_by_mentions_change_for_crowdsense", "get_subtitle_in_json_format_for_subtitles_for_youtube_v3", "jokes_categories_for__jokester", "get_detailed_data_for_all_county_equivalents_for_us_counties", "get_content_for_line_messaging", "following_by_username_for_instagram_pro", "batch_for_languagelayer", "product_category_list_for_real_time_amazon_data", "get_litecoin_transaction_by_hash_for_litecoin_wallet"], "api_descs": {"Finish": "No description available.", "batch_for_languagelayer": "API endpoint used to perform batch language detection", "convert_for_exchange_rate": "Currency conversion endpoint, can be used to convert any amount from one currency to another.", "find_pages_linked_to_specific_anchor_text_for_advanced_serp_operators": "finds pages that are linked to any specific anchor text.", "following_by_username_for_instagram_pro": "Instagram Following List by username, Up to 1000 records", "get_content_for_line_messaging": "Gets image, video, and audio data sent by users.", "get_detailed_data_for_all_county_equivalents_for_us_counties": "county", "get_litecoin_transaction_by_hash_for_litecoin_wallet": "Get Litecoin Transaction detail by transaction hash.", "get_rhyme_for_simple_poet": "Finds a rhyme for a given word in the database. If multiple words are a rhyme, one is picked at random.", "get_subtitle_in_json_format_for_subtitles_for_youtube_v3": "Get Subtitle in JSON format", "get_top_coins_by_mentions_change_for_crowdsense": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions change value\n\n**Definitions:**\n- MentionsChange: Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time", "getrandomarray_for_random_chunk_api": "Generate a random array with numbers, words or mixed values.", "getrandomword_for_random_chunk_api": "Get random words.", "jokes_categories_for__jokester": " ", "product_category_list_for_real_time_amazon_data": "Get Amazon product categories (per country / marketplace).", "refugee_by_data_for_ukraine_war_data": "Refugee by data", "results_by_date_for_cricket_live_data": "Lists results for given date", "v1_recipe_for_recipe_by_api_ninjas": "Get a list of recipes for a given search query. Returns at most 10 results. To access more than the first 10 results, use the offset parameter to offset results in multiple API calls."}, "aseqs": [{"api_name": "getrandomarray_for_random_chunk_api", "api_action": "\nAction: getrandomarray_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandomword_for_random_chunk_api", "api_action": "\nAction: getrandomword_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getrandomarray_for_random_chunk_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandomword_for_random_chunk_api", "api_action": "\nAction: getrandomword_for_random_chunk_api\nAction Input: {}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getrandomarray_for_random_chunk_api\",\n\t\"api_action\": \"\\nAction: getrandomarray_for_random_chunk_api\\nAction Input: {\"length\": 5}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "11199", "query": "I'm planning a trip to the United States and I want to explore the market trends in the US stock exchanges. Can you provide me with the most active stocks, gainers, and losers in the US? Additionally, I would like to know the price, charts, and news for a specific stock, ABNB:NASDAQ.", "api_names": ["market_trends_for_joj_finance", "ticker_for_joj_finance", "Finish", "options_for_stock_and_options_trading_data_provider", "domain_for_mailcheck", "get_company_quarterly_income_statement_for_finance_data", "crypto_exchanges_for_twelve_data", "seasonal_statistics_goals_for_soccer_data", "getnearestcities_for_reverse_geocoding_and_geolocation_service", "products_search_deprecated_for_forever21", "get_user_pins_for_pinterest_apis", "historical_daily_for_easy_weather"], "api_descs": {"Finish": "No description available.", "crypto_exchanges_for_twelve_data": "This API call return array of cryptocurrency exchanges available at Twelve Data API. This list is daily updated.", "domain_for_mailcheck": "Check if a domain is disposable", "get_company_quarterly_income_statement_for_finance_data": "Get Company Income Statement", "get_user_pins_for_pinterest_apis": "Get User Pins by user name", "getnearestcities_for_reverse_geocoding_and_geolocation_service": "Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair.", "historical_daily_for_easy_weather": "Get a historical daily forecast for the given latitude, longitude, and start date/time.", "market_trends_for_joj_finance": "Explore market trends", "options_for_stock_and_options_trading_data_provider": "Stock and Options Data", "products_search_deprecated_for_forever21": "Search for product by name", "seasonal_statistics_goals_for_soccer_data": "Provides the goal statistics of the team in the tournament.", "ticker_for_joj_finance": "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more"}, "aseqs": [{"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"most-active\",\n  \"gl\": \"us\"\n}", "api_reaction": null}, {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"gainers\",\n  \"gl\": \"us\"\n}", "api_reaction": null}, {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"losers\",\n  \"gl\": \"us\"\n}", "api_reaction": null}, {"api_name": "ticker_for_joj_finance", "api_action": "\nAction: ticker_for_joj_finance\nAction Input: {\n  \"t\": \"ABNB:NASDAQ\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "options_for_stock_and_options_trading_data_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"losers\",\n  \"gl\": \"us\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"most-active,\ngainers,\nlosers\",\n  \"gl\": \"us\"\n}", "api_reaction": null}}]}
{"URL": "10635", "query": "I'm a Formula 1 fan and I want to know the constructor standings after a specific race in a particular season. Can you give me the constructor standings after round 5 of the 2022 season? Additionally, I'm interested in the pitstop data for a specific race in a particular season. Please provide me with the pitstop data for the race in 2021, round 10.", "api_names": ["pitstopdataforarace_for_formula_1_fixed", "constructorstandingsafterarace_for_formula_1_fixed", "Finish", "hourlyweatherzip_for_history", "pnr_status_for_real_time_pnr_status_api_for_indian_railways", "additional_title_details_for_ott_details", "get_nba_franchise_roster_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules", "metrics_ohlcv_futures_pro_for_cryptocurrency_financial_data", "getgeneration_for_dream_diffusion", "order_by_descending_for_catbreeddb", "transfers_list_records_for_transfermarket", "food_info_for_fitness_calculator", "search_products_for_ebay", "getnewsletters_for_power_bi_smartable", "phone_number_for_phone_and_email_validator_v2", "getname_for_leetcodeapi", "getpatient_for_the_cancer_imaging_archive", "word_of_the_day_from_mw_for_word_of_the_day"], "api_descs": {"Finish": "No description available.", "additional_title_details_for_ott_details": "Get  additional details for a movie or tv show like reviews  , quotes , plotsummary , number of votes , trailer url  , cast details etc.", "constructorstandingsafterarace_for_formula_1_fixed": "To list the constructor standings after a specific race (round) in a season(year), use this endpoint.\n\n", "food_info_for_fitness_calculator": "Find the food info for a food id from the food database.", "get_nba_franchise_roster_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's Roster for a specific year", "getgeneration_for_dream_diffusion": "Gets the generation status and generated images", "getname_for_leetcodeapi": "Get the name of the user", "getnewsletters_for_power_bi_smartable": "Get Power BI newsletters", "getpatient_for_the_cancer_imaging_archive": "Returns a set of patient objects filtered by query keys", "hourlyweatherzip_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (country and zip-code)", "metrics_ohlcv_futures_pro_for_cryptocurrency_financial_data": "Price and volume metrics for futures markets", "order_by_descending_for_catbreeddb": "Gives a list of all cats sorted in descending order by name.", "phone_number_for_phone_and_email_validator_v2": "E164 Format. Eg 19542567890 for USA", "pitstopdataforarace_for_formula_1_fixed": "This endpoint requires the season(year) and race(round) to be specified.\n", "pnr_status_for_real_time_pnr_status_api_for_indian_railways": "This is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations. This API is designed for educational purposes only and is not affiliated with Indian Railways in any way.", "search_products_for_ebay": "Search for products on Ebay in specific country.\nReturns the `last_page` that can be scraped for the specific `search_query`.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)", "transfers_list_records_for_transfermarket": "List records transfers information along with player info, and trade value", "word_of_the_day_from_mw_for_word_of_the_day": "Get word of the day from mw."}, "aseqs": [{"api_name": "constructorstandingsafterarace_for_formula_1_fixed", "api_action": "\nAction: constructorstandingsafterarace_for_formula_1_fixed\nAction Input: {\n\"year\": \"2022\",\n\"round\": \"5\"\n}", "api_reaction": null}, {"api_name": "pitstopdataforarace_for_formula_1_fixed", "api_action": "\nAction: pitstopdataforarace_for_formula_1_fixed\nAction Input: {\n\"year\": \"2021\",\n\"round\": \"10\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "constructorstandingsafterarace_for_formula_1_fixed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pitstopdataforarace_for_formula_1_fixed", "api_action": "{\"year\": \"2021\", \"round\": \"10\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "constructorstandingsafterarace_for_formula_1_fixed", "api_action": "\nAction: constructorstandingsafterarace_for_formula_1_fixed\nAction Input: {\n\"year\": \"2022\",\n\"round\": \"5\"\n}", "api_reaction": null}}]}
{"URL": "86317", "query": "Could you please provide me with the list of Haskell versions? I want to ensure that my code is compatible with the most recent version. Your assistance would be greatly appreciated.", "api_names": ["haskell_versions_for_haskell_code_compiler", "Finish", "historic_data_for_yahoo_finance", "get_album_tracks_for_spotify_data_api", "account_transaction_history_for_binance_smart_chain", "list_of_cocktails_for_the_cocktail_db", "getallsports_for_sportapi", "latest_exchange_rates_for_exchangeratespro", "teams_get_tournaments_for_divanscore", "items_for_mcapi"], "api_descs": {"Finish": "No description available.", "account_transaction_history_for_binance_smart_chain": "Get an array of all transactions of an address on the Binance Smart Chain.", "get_album_tracks_for_spotify_data_api": "Get album tracks by album ID", "getallsports_for_sportapi": "GetAllSports data api", "haskell_versions_for_haskell_code_compiler": "Haskell Versions", "historic_data_for_yahoo_finance": "return historic data\ninterval - The time interval between two data points. Can be 1m 2m 5m 15m 30m 60m 90m 1h 1d 5d 1wk 1mo 3mo\nrange - The range for which the data is returned.\n\nfor normal stocks :\nyou can directly search by tickername:\neg. tsla , msft , meta\n\nfor crypt:\ntry searching by ticker name followed by -USD.\nfor bitcoin try : btc-usd", "items_for_mcapi": "Retrieve items information:\n\n- **item_id** is the id of the item like \"minecraft:stick\"\n- **item_group** is the group of the item like \"Ingredients\"\n- **stack_size** is the max amount of items in one stack\n- **fire_resistant** is true if the item doesn't burn\n- **rarity** is the item rarity such as \"COMMON\"\n- **is_food** is true if the item can be eaten\n- **is_damageable** is true if the item can be damaged when used\n- **is_enchantable** is true if the item can be enchanted\n- **durability** indicates how many times the item can be used\n- **tags** are the tags applied to this item", "latest_exchange_rates_for_exchangeratespro": "Get up-to-date exchange rate data with the /latest endpoint. Choose from daily, hourly, or minute updates, based on your plan. Stay on top of the markets with real-time data, delivered with one simple request.", "list_of_cocktails_for_the_cocktail_db": "This endpoint responds with a list of cocktails that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cocktail Recipe by ID\" endpoint to receive the detailed cocktail recipe.", "teams_get_tournaments_for_divanscore": "Get attended tournaments of specific team"}, "aseqs": [{"api_name": "haskell_versions_for_haskell_code_compiler", "api_action": "\nAction: haskell_versions_for_haskell_code_compiler\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "haskell_versions_for_haskell_code_compiler"}}, {"state": "generated_by_agent", "aseq": {"api_name": "haskell_versions_for_haskell_code_compiler"}}]}
{"URL": "64257", "query": "My friend is an RPG enthusiast and he's looking for new items to enhance his gaming experience. Can you provide him with a list of all available RPG items using the 'Get All Items' API? Additionally, he would like to narrow down the results by specifying a rank of 1, slot as chest, rarity as common, name as 'Linen Cloth Robe', and type as armor using the 'Get Items by query' API.", "api_names": ["get_all_items_for_rpg_items", "get_items_by_query_for_rpg_items", "Finish", "get_products_for_asdfadsf", "historical_for_fear_and_greed_index", "recipient_for_finhost", "phone_code_by_country_for_geosource_api", "rates_for_nitro", "straddle_for_stock_and_options", "postcodes_for_postcodejp_api", "getmatchs_for_ipl_api", "api_product_productid_historic_prices_for_magic_aliexpress", "query_for_hexagon_by_h3index_for_ca_boundaries_io", "etablissements_d_une_entreprise_for_ridet_nc", "competitions_matches_for_zeus_api", "converting_currencies_for_currency_exchange_rates", "detection_objects_as_json_by_image_url_for_mantis_object_detection", "get_articles_by_publisher_for_movie_articles_and_news"], "api_descs": {"Finish": "No description available.", "api_product_productid_historic_prices_for_magic_aliexpress": "This endpoint returns the prices historic of product loaded by a client", "competitions_matches_for_zeus_api": "List the current matches for a league 🆚.", "converting_currencies_for_currency_exchange_rates": "The /convert/ endpoint is similar to the /live/ and /historical/ endpoints, except it allows you to convert an arbitrary amount of currency.\n\nFor example, it calculates how many EUR you would get for 1,337.99 USD today, or how many GBP and CAD you'd get for that amount on January 1, 2020.", "detection_objects_as_json_by_image_url_for_mantis_object_detection": "Any valid image URL and return JSON", "etablissements_d_une_entreprise_for_ridet_nc": "Affiche les établissement d'une entreprise en Nouvelle Calédonie.", "get_all_items_for_rpg_items": "Get all RPG items", "get_articles_by_publisher_for_movie_articles_and_news": "Get articles by a specific publisher.", "get_items_by_query_for_rpg_items": "Get all RPG items", "get_products_for_asdfadsf": " ", "getmatchs_for_ipl_api": "to get all the match details .", "historical_for_fear_and_greed_index": "Get the index for the given date.", "phone_code_by_country_for_geosource_api": "Retrives a Phone code of the country.", "postcodes_for_postcodejp_api": "postcodes", "query_for_hexagon_by_h3index_for_ca_boundaries_io": "Create a h3 hexagon with any h3Index value in the world.", "rates_for_nitro": "This endpoint retrieves all rates.", "recipient_for_finhost": "List of the recipients for the client", "straddle_for_stock_and_options": "Return options data in straddle format"}, "aseqs": [{"api_name": "get_all_items_for_rpg_items", "api_action": "\nAction: get_all_items_for_rpg_items\nAction Input: {}", "api_reaction": null}, {"api_name": "get_items_by_query_for_rpg_items", "api_action": "\nAction: get_items_by_query_for_rpg_items\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_items_for_rpg_items"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_items_by_query_for_rpg_items"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_items_for_rpg_items"}}]}
{"URL": "15935", "query": "I want to keep track of my favorite anime shows. Can you help me create a personalized anime library where I can add and organize my favorite shows? Additionally, can you provide me with the latest episodes and updates for each show?", "api_names": ["library_for_hummingbird_apiv1", "feed_for_hummingbird_apiv1", "user_for_hummingbird_apiv1", "Finish", "get_all_state_names_for_kfc_locations", "teamnextmatches_for_americanfootballapi", "create_qr_code_for_easy_qr_code_generator", "list_text_messages_for_calltrackingmetrics", "playlist_videos_for_youtube_data", "stalled_pattern_for_qvantana", "verify_email_for_emails_verifier", "placessearchinboundingbox_for_mapreflex", "get_media_for_getmedia", "translate_for_translate_all_languages", "birth_details_for_yawin_indian_astrology", "get_post_for_kwai"], "api_descs": {"Finish": "No description available.", "birth_details_for_yawin_indian_astrology": "Get Basic astrological details from the birth date and birth time", "create_qr_code_for_easy_qr_code_generator": "Turn any URL or even text into a downloadable and printable QR code", "feed_for_hummingbird_apiv1": "Get the latest posts on a user's feed", "get_all_state_names_for_kfc_locations": "GET all State names", "get_media_for_getmedia": "Get Media", "get_post_for_kwai": "Get Post API", "library_for_hummingbird_apiv1": "Get a user's anime library", "list_text_messages_for_calltrackingmetrics": "The SMS API allows you to search, send, and manage text messaging triggers for all capable numbers.", "placessearchinboundingbox_for_mapreflex": "Get Places boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "playlist_videos_for_youtube_data": "playlist-videos", "stalled_pattern_for_qvantana": "Stalled pattern indicator", "teamnextmatches_for_americanfootballapi": "Get the upcoming matches for a specific American Football team by providing the team ID and page number. You can expect empty responses if no upcoming matches are scheduled.", "translate_for_translate_all_languages": "Translates input text, returning translated text", "user_for_hummingbird_apiv1": "Get informations about a single user", "verify_email_for_emails_verifier": "Allows verifying email addresses. Checks if emails are deliverable."}, "aseqs": [{"api_name": "user_for_hummingbird_apiv1", "api_action": "\nAction: user_for_hummingbird_apiv1\nAction Input: {\n  \"name\": \"my_username\"\n}", "api_reaction": null}, {"api_name": "library_for_hummingbird_apiv1", "api_action": "\nAction: library_for_hummingbird_apiv1\nAction Input: {\n  \"name\": \"my_username\"\n}", "api_reaction": null}, {"api_name": "feed_for_hummingbird_apiv1", "api_action": "\nAction: feed_for_hummingbird_apiv1\nAction Input: {\n  \"name\": \"my_username\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "library_for_hummingbird_apiv1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "library_for_hummingbird_apiv1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "feed_for_hummingbird_apiv1", "api_action": "\nAction: feed_for_hummingbird_apiv1\nAction Input: {\n  \"username\": \"my_username\",\n  \"type\": \"anime\",\n  \"limit\": 10,\n  \"order_by\": \"created_at_desc\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "library_for_hummingbird_apiv1", "api_action": "\nAction: library_for_hummingbird_apiv1\nAction Input: {\n  \"name\": \"my_username\",\n  \"action\": \"add\"\n}", "api_reaction": null}}]}
{"URL": "69236", "query": "I'm organizing a sports betting competition for my company. Can you fetch me a list of bookmakers that offer surebets? Additionally, I would like to get the details of available surebets, including the profit, odds, and the bookmakers offering them.", "api_names": ["Finish", "list_for_surebets", "get_bookmakers_for_surebets", "get_astronomy_data_for_stormglass_complete", "getimageframeproperties_for_aspose_imaging_cloud", "track_list_album_for_spotify_downloader", "mughal_empire_for_jak_api", "getfileversions_for_groupdocs_merger_cloud", "vin_decoder_extended_for_vin_decoder", "generate_qr_code_for_free_qr_code_generator", "emoji_for_emoji", "read_a_survey_nlp_for_nps_net_promoter_score", "latest_10_drawings_for_lotto_america", "tournament_fixture_for_basketball_data", "mmaoctogonimage_for_mmaapi"], "api_descs": {"Finish": "No description available.", "emoji_for_emoji": "This endpoint takes a 'GET' request with name / string as a parameter and returns emoji associated with the name.", "generate_qr_code_for_free_qr_code_generator": "Turn Word to QR Code with just one request", "get_astronomy_data_for_stormglass_complete": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.", "get_bookmakers_for_surebets": "Get a list of all supported bookmakers", "getfileversions_for_groupdocs_merger_cloud": " ", "getimageframeproperties_for_aspose_imaging_cloud": " ", "latest_10_drawings_for_lotto_america": "Get the latest, and last winning 10 Lotto America number sets.", "list_for_surebets": "Get all available Surebets", "mmaoctogonimage_for_mmaapi": "Get MMA octagon image", "mughal_empire_for_jak_api": "Get the JSON formated file containing details about The Mughal Empire!!", "read_a_survey_nlp_for_nps_net_promoter_score": "Get a detail of customer survey answer by its survey id (sid), and applies to the third answer (a3) the sentiment analysis feature.", "tournament_fixture_for_basketball_data": "Full match list with quarter, half time and final scores with venue info.", "track_list_album_for_spotify_downloader": "Get track list from album", "vin_decoder_extended_for_vin_decoder": "Get 168 items"}, "aseqs": [{"api_name": "get_bookmakers_for_surebets", "api_action": "\nAction: get_bookmakers_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "list_for_surebets", "api_action": "\nAction: list_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "list_for_surebets", "api_action": "\nAction: list_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_bookmakers_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_bookmakers_for_surebets"}}]}
{"URL": "85766", "query": "I need assistance in selling my property. Can you help me with the process? I would like to know the estimated market value of my house and the average selling price in my area. Additionally, it would be helpful if you could provide some tips for staging and marketing the property.", "api_names": ["real_estate_api_for_real_estate_heroku", "Finish", "measurements_for_measurement_unit_converter", "channel_livestreams_for_yt_api", "get_post_for_kwai", "restaurants_list_deprecated_for_the_fork_the_spoon", "locales_for_review_generator_ai_", "real_time_commodity_futures_prices_for_investing", "playlist_extraction_for_miza", "music_data_by_id_for_tiktok_solutions", "post_comments_for_instagram_data", "search_hashtag_for_instagram_v5"], "api_descs": {"Finish": "No description available.", "channel_livestreams_for_yt_api": "Get live stream listing and channel details.\nQuota cost is 1 unit.", "get_post_for_kwai": "Get Post API", "locales_for_review_generator_ai_": "Get list of locales", "measurements_for_measurement_unit_converter": "GET enum array of all types of measurement", "music_data_by_id_for_tiktok_solutions": "Get** Music Data **by **ID**", "playlist_extraction_for_miza": "Produces information on all songs in a playlist (YouTube, Spotify, SoundCloud, etc), with much faster response time than most other available tools. Currently O(1) for YouTube, O(log n) for Spotify, and O(log n) for SoundCloud. See [this article](http://i.mizabot.xyz/f/Bc9AUlCRkA) for the algorithm behind the YouTube playlists specifically.", "post_comments_for_instagram_data": "Get post comments\n\n**NOTE:** Profile should be public(not private)", "real_estate_api_for_real_estate_heroku": "Real Estate", "real_time_commodity_futures_prices_for_investing": "page source : https://www.investing.com/commodities/real-time-futures", "restaurants_list_deprecated_for_the_fork_the_spoon": "List restaurants with options and filters", "search_hashtag_for_instagram_v5": "Get Instagram hashtags by keyword."}, "aseqs": [{"api_name": "real_estate_api_for_real_estate_heroku", "api_action": "\nAction: real_estate_api_for_real_estate_heroku\nAction Input: {}", "api_reaction": null}, {"api_name": "real_estate_api_for_real_estate_heroku", "api_action": "\nAction: real_estate_api_for_real_estate_heroku\nAction Input: {}", "api_reaction": null}, {"api_name": "real_estate_api_for_real_estate_heroku", "api_action": "\nAction: real_estate_api_for_real_estate_heroku\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get the Real Estate data for the user's house to estimate its market value and average selling price in their area.\n\t\"api_name\": \"real_estate_api_for_real_estate_heroku\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "real_estate_api_for_real_estate_heroku"}}, {"state": "generated_by_agent", "aseq": {"api_name": "real_estate_api_for_real_estate_heroku"}}, {"state": "generated_by_agent", "aseq": {"api_name": "real_estate_api_for_real_estate_heroku"}}]}
{"URL": "57854", "query": "My company is organizing a corporate event and we need to order some products. Can you provide us with a list of available categories in the store? We would also like to see the products in the 'Corporate Event Supplies' category and get information about each product, including its name and category.", "api_names": ["Finish", "get_products_in_category_for_my_store", "get_product_for_my_store", "get_categories_for_my_store", "geocode_for_tunisia_api", "get_latest_quote_for_stockseyes", "get_character_skills_for_lost_ark_simple", "get_user_info_for_instagram_v7", "get_teams_for_nba_stats_v2", "moon_information_for_ouranos", "gets_the_meta_data_from_one_given_champion_based_on_a_rank_for_league_of_legends_champion_meta", "get_inboxes_for_intelligent_automation_ocr_ai_", "search_by_category_for_ikea_api", "get_reservations_for_limoucloud", "genderize_for_genderizeio", "district_detail_and_coordinates_of_specific_division_for_bdapi", "get_info_for_jsmon", "v1_cryptosymbols_for_crypto_symbols_by_api_ninjas", "mediterranean_ingredient_for_recipe_finder", "getqrcode_for_qr_code_generator_with_multiple_datatypes_"], "api_descs": {"Finish": "No description available.", "district_detail_and_coordinates_of_specific_division_for_bdapi": "`/v1.1/division/{division_name}`\nGet all Districts, Coordinates, and Upazila of any Division.\n\n**Response:**\n```\nstatus: object,\ndata: [\n  _id: string:district,\n  district: string,\n  coordinates: string\n  upazilla: array\n]\n```", "genderize_for_genderizeio": "Predict the gender of a person based on their name.", "geocode_for_tunisia_api": "This endpoint allows you to lookup locations in Tunisia by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_categories_for_my_store": " ", "get_character_skills_for_lost_ark_simple": "List of Lost Ark Character Skills", "get_inboxes_for_intelligent_automation_ocr_ai_": "Get a list of inboxes with their ids", "get_info_for_jsmon": "Request information.", "get_latest_quote_for_stockseyes": "The /getLatestQuote API returns latest realtime quote for for given trading symbol. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in.\nSee the list of trading symbols [here](https://stockseyes.com/group/all).", "get_product_for_my_store": " ", "get_products_in_category_for_my_store": " ", "get_reservations_for_limoucloud": "get all driver related reservations", "get_teams_for_nba_stats_v2": "Api to query teams", "get_user_info_for_instagram_v7": "Get information about a user", "getqrcode_for_qr_code_generator_with_multiple_datatypes_": "This API will return you an URL of the QR Code image that you can easily embed on to website or download it for your other needs.", "gets_the_meta_data_from_one_given_champion_based_on_a_rank_for_league_of_legends_champion_meta": "Fetches the Data from the provided League of Legends Champion based on a rank.\nWill return a list of Objects, because a Champion can be played in multiple roles\n\nPossible rank parameters are: \n- placements\n- iron\n- bronze\n- silver\n- gold\n- platinum\n- diamond\n- master\n- grandmaster\n- challenger\nThey also be combined with a \"comma-sign\": e.g challenger,master", "mediterranean_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random mediterranean  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "moon_information_for_ouranos": "Moon Information return moon phase and illumination.", "search_by_category_for_ikea_api": "Obtain a list of Ikea products information based on a specified categoryID.", "v1_cryptosymbols_for_crypto_symbols_by_api_ninjas": "API Ninjas Crypto Symbols API"}, "aseqs": [{"api_name": "get_categories_for_my_store", "api_action": "\nAction: get_categories_for_my_store\nAction Input: {}", "api_reaction": null}, {"api_name": "get_products_in_category_for_my_store", "api_action": "\nAction: get_products_in_category_for_my_store\nAction Input: {\n  \"skip\": 0,\n  \"limit\": 10,\n  \"category\": \"Corporate Event Supplies\"\n}", "api_reaction": null}, {"api_name": "get_products_in_category_for_my_store", "api_action": "\nAction: get_products_in_category_for_my_store\nAction Input: {\n  \"skip\": 0,\n  \"limit\": 10,\n  \"category\": \"Technology\"\n}", "api_reaction": null}, {"api_name": "get_product_for_my_store", "api_action": "\nAction: get_product_for_my_store\nAction Input: {\n  \"is_id\": 884312\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for_my_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for_my_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_info_for_my_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_info_for_jsmon"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for_my_store", "api_action": "\nAction: get_products_in_category_for_my_store\nAction Input: {\n  \"skip\": 0,\n  \"limit\": 10,\n  \"category\": \"Corporate Event Supplies\"\n}", "api_reaction": null}}]}
{"URL": "60901", "query": "I want to learn more about the details of competition ID 65. Can you provide me with information such as the competition name, description, sub title, and badge URL? Additionally, I'm curious about the standings for this competition.", "api_names": ["competitions_standings_for_livescore_sports", "competitions_details_for_livescore_sports", "Finish", "block_for_unicode_codepoints", "instagram_post_info_for_instagram_v9", "stations_v2_get_information_for_airvisual", "video_comments_for_youtube_search", "getinventory_for_privatepublicapi", "getforecast_pro_for_the_apophis", "jennifer_aniston_for_starlovematch", "showtimes_for_argentina_movie_theatres", "5_day_forecast_for_weather"], "api_descs": {"5_day_forecast_for_weather": "3 hour interval - 5 day forecast for a given lat/lon", "Finish": "No description available.", "block_for_unicode_codepoints": "Information about a Unicode block", "competitions_details_for_livescore_sports": "Get competition details by competition ID", "competitions_standings_for_livescore_sports": "Get competition standings (table) by competition ID.  LTT_CODE: All(1),Home(2),Away 3", "getforecast_pro_for_the_apophis": "This endpoint is part of Pro subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 10 Periods\n\n**Timeframe:**\n- 1h", "getinventory_for_privatepublicapi": "Returns a map of status codes to quantities", "instagram_post_info_for_instagram_v9": "Get Instagram Post (likes, comments, hashtags, mentions, location, etc.)", "jennifer_aniston_for_starlovematch": "This is a demo endpoint showing how it processes a list of Jennifer Aniston's partners.\n\nHere are the input 'birthdetails' parameters :  name=Jennifer Aniston&dob=2/11/1969&name1=Justin Theroux&dob1=8/10/1971&name2=Gerard Butler&dob2=11/13/1969&name3=John Mayer&dob3=10/16/1977&name4=Paul Sculfor&dob4=2/1/1971&name5=David Schwimmer&dob5=11/2/1969&name6=Vince Vaughn&dob6=3/28/1970&name7=Brad Pitt&dob7=12/18/1963&name8=Paul Rudd&dob8=4/6/1969&name9=Tate Donovan&dob9=9/25/1963&name10=Daniel McDonald&dob10=7/30/1960&sort=S&NC=C&ryr=2022&details=N&coupon=12345678\n\nYou will see that it calculates Paul Rudd to be her best overall (sort='O')  general match, followed by Justin Theroux and Brad Pitt.\n\nHowever, if you change the input parameters and specify sort='P' (Physical), you will see that John Mayer is her best physical (sex) match.\n\nLikewise, if you wish to see how it calculates her Intellection matches in order, change this to sort='I', and you will see that Paul Rudd is again her best intellectual partner.", "showtimes_for_argentina_movie_theatres": " ", "stations_v2_get_information_for_airvisual": "Get information at specific station by its id", "video_comments_for_youtube_search": "This endpoint returns a list comments under a given Youtube video"}, "aseqs": [{"api_name": "competitions_details_for_livescore_sports", "api_action": "\nAction: competitions_details_for_livescore_sports\nAction Input: {\n  \"timezone\": 0,\n  \"competition_id\": 65,\n  \"locale\": \"EN\"\n}", "api_reaction": null}, {"api_name": "competitions_standings_for_livescore_sports", "api_action": "\nAction: competitions_standings_for_livescore_sports\nAction Input: {\n  \"timezone\": 0,\n  \"competition_id\": 65,\n  \"locale\": \"EN\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "competitions_details_for_livescore_sports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "competitions_standings_for_livescore_sports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "competitions_details_for_livescore_sports"}}]}
{"URL": "16452", "query": "I'm a music enthusiast and would love to explore more about an artist on Spotify. Can you fetch the artist's profile overview, including their biography, playlists, and external links? Additionally, I would like to know the artists related to this artist.", "api_names": ["artist_discography_overview_for_spotify", "artist_discovered_on_for_spotify", "artist_related_for_spotify", "Finish", "artist_albums_for_spotify", "artist_overview_for_spotify", "media_id_to_shortcode_for_instagram_api_v2", "athlete_trophy_stats_for_allscores", "getbrands_for_cellphones", "dns_domain_for_utile_space", "v1_motorcycles_for_motorcycles_by_api_ninjas", "gettodaysforecast_for_simple_surf_forecast_api", "skill_tree_for_iys_skill_api_", "getplayer_for_nhl_stats_and_live_data", "latest_anime_for_anime_streaming", "search_coming_soon_games_for_epic_store_games", "get_listing_by_url_for_trulia_real_estate_scraper", "searchbyaddress_for_opennwi", "v4_sports_sport_scores_for_live_sports_odds", "metadata_playlist_for_spotify_downloader"], "api_descs": {"Finish": "No description available.", "artist_albums_for_spotify": "Get artist albums", "artist_discography_overview_for_spotify": "Get artist discography overview", "artist_discovered_on_for_spotify": "Artist discovered on playlists (max 50)", "artist_overview_for_spotify": "Get artist overview", "artist_related_for_spotify": "Artist related", "athlete_trophy_stats_for_allscores": "Get athlete trophy stats.", "dns_domain_for_utile_space": "", "get_listing_by_url_for_trulia_real_estate_scraper": "Returns homes from the listing. Just go to https://www.trulia.com/ select the listing you are interested in e.g. https://www.trulia.com/AZ/Scottsdale/ and pass that url into query.", "getbrands_for_cellphones": "Load all cell phone brands", "getplayer_for_nhl_stats_and_live_data": " ", "gettodaysforecast_for_simple_surf_forecast_api": " ", "latest_anime_for_anime_streaming": "Gets all new anime added in last 24 hours", "media_id_to_shortcode_for_instagram_api_v2": "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts 2931558439012794055 to Ciu_N9Qpm5d", "metadata_playlist_for_spotify_downloader": "Get metadata about playlist", "search_coming_soon_games_for_epic_store_games": "Search Coming Soon Games", "searchbyaddress_for_opennwi": "Search local walk scores and regional bike and transit data by address. NWI score range from 0-20.", "skill_tree_for_iys_skill_api_": "Skill Tree", "v1_motorcycles_for_motorcycles_by_api_ninjas": "API Ninjas Motorcycles API endpoint. Returns up to 30 motorcycle results matching the input name parameters. For searches that yield > 30 results, please use the offset parameter.\n\nEither **make** or **model** parameter must be set.", "v4_sports_sport_scores_for_live_sports_odds": "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)"}, "aseqs": [{"api_name": "artist_overview_for_spotify", "api_action": "\nAction: artist_overview_for_spotify\nAction Input: {\n  \"is_id\": \"2CIMQHirSU0MQqyYHq0eOx\"\n}", "api_reaction": null}, {"api_name": "artist_related_for_spotify", "api_action": "\nAction: artist_related_for_spotify\nAction Input: {\n  \"is_id\": \"2CIMQHirSU0MQqyYHq0eOx\"\n}", "api_reaction": null}, {"api_name": "artist_discography_overview_for_spotify", "api_action": "\nAction: artist_discography_overview_for_spotify\nAction Input: {\n  \"is_id\": \"2CIMQHirSU0MQqyYHq0eOx\"\n}", "api_reaction": null}, {"api_name": "artist_discovered_on_for_spotify", "api_action": "\nAction: artist_discovered_on_for_spotify\nAction Input: {\n  \"is_id\": \"2CIMQHirSU0MQqyYHq0eOx\"\n}", "api_reaction": null}, {"api_name": "artist_albums_for_spotify", "api_action": "\nAction: artist_albums_for_spotify\nAction Input: {\n  \"is_id\": \"2CIMQHirSU0MQqyYHq0eOx\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "artist_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_related_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_discography_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_overview_for_spotify"}}]}
{"URL": "45816", "query": "I want to search for flights from London to New York on 2023-06-01. Please provide me with the flight details for the selected flights and also search for hotels in New York for a check-in date of 2023-06-01 and a checkout date of 2023-06-10.", "api_names": ["Finish", "search_hotel_for_skyscanner_v2", "search_flights_for_skyscanner_v2", "products_types_typeid_locations_for_national_weather_service", "hashtag_info_for_tiktok_scraper_v2", "breakfast_ingredient_for_recipe_finder", "consulta_por_cpf_for_consulta_cpf_cnpj_brasil", "ttt_for_funtrip", "random_song_out_of_artist_for_halsey_lyric_snippets", "get_information_about_a_transaction_output_utxo_in_a_litecoin_transaction_for_litecoin_wallet", "asset_by_id_for_crypto_exchanges", "ben_10_for_jak_api"], "api_descs": {"Finish": "No description available.", "asset_by_id_for_crypto_exchanges": "Get Asset by ID", "ben_10_for_jak_api": "Get the JSON formatted data about Ben 10!!", "breakfast_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random breakfast  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "consulta_por_cpf_for_consulta_cpf_cnpj_brasil": "**Consulta por CPF endpoint**", "get_information_about_a_transaction_output_utxo_in_a_litecoin_transaction_for_litecoin_wallet": "Get information about a transaction output in a transaction and check whether this output is a UTXO or has been spent.\n\n\"UTXO\" stands for \"Unspent Transaction Output\". A UTXO is the amount of LTC that remains at a Litecoin address after a cryptocurrency transaction involving this address has been performed. The UTXO can then be used as input for a new cryptocurrency transaction. For more information the UTXO, see the [Bitcoin user documentation.](https://developer.bitcoin.org/devguide/transactions.html)\n\nIf the transaction output is an UTXO, the API returns data about it.\nIf the transaction output has been spent and there is no UTXO to return, the API returns an error with the 404 response code.", "hashtag_info_for_tiktok_scraper_v2": "Get hashtag (challenge) info.", "products_types_typeid_locations_for_national_weather_service": "A list of locations that have issues products for a type. Example: /products/types/AFD/locations", "random_song_out_of_artist_for_halsey_lyric_snippets": "This endpoint retrieves a random song by the specified artist and returns it in the response.", "search_flights_for_skyscanner_v2": "Get and poll all flights, search between origin and destination with prices, filter, sorting.", "search_hotel_for_skyscanner_v2": "Get and poll hotel room search with prices, filter etc.", "ttt_for_funtrip": "ttt"}, "aseqs": [{"api_name": "search_flights_for_skyscanner_v2", "api_action": "\nAction: search_flights_for_skyscanner_v2\nAction Input: {\n  \"date\": \"2023-06-01\",\n  \"origin\": \"LON\",\n  \"destination\": \"NYC\"\n}", "api_reaction": null}, {"api_name": "search_hotel_for_skyscanner_v2", "api_action": "\nAction: search_hotel_for_skyscanner_v2\nAction Input: {\n  \"entityid\": \"NYC\",\n  \"checkin\": \"2023-06-01\",\n  \"checkout\": \"2023-06-10\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_flights_for_skyscanner_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_flights_for_skyscanner_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_flights_for_skyscanner_v2"}}]}
{"URL": "4490", "query": "I'm preparing a presentation for my company and want to ensure my slides are error-free. Can you correct any grammar mistakes in the slides and suggest rephrases to enhance clarity? Also, please provide translations for certain slides from English to German.", "api_names": ["correction_in_sentence_for_ginger", "Finish", "correct_and_rephrase_for_ginger", "get_language_code_for_ginger", "translation_for_ginger", "getnews_for_diablo4_smartable", "get_order_for__onboarding_project", "get_imbuements_for_snake_skin_earth_protection_for_tibia_items", "get_users_for_feku_json", "webcams_list_region_region_region_for_webcams_travel", "most_visited_for_cryptocurrency_markets", "get_individual_news_source_news_for_climate_change_live_v27", "ainamematch_for_aspose_email_cloud", "game_odds_tiered_schedule_for_sportsbook_odds", "can_create_live_stream_for_scraptik", "get_season_totals_regular_season_for_nba_stats_v2", "exchange_for_currency_v2", "search_leaderboard_for_binance_futures_leaderboard", "user_details_for_twitter", "get_configuration_for_judge0_extra_ce"], "api_descs": {"Finish": "No description available.", "ainamematch_for_aspose_email_cloud": " ", "can_create_live_stream_for_scraptik": "Check if user can create live streams on TikTok.", "correct_and_rephrase_for_ginger": "-", "correction_in_sentence_for_ginger": "-", "exchange_for_currency_v2": "The currency converter service that converts the entered rate into the desired exchange rate.", "game_odds_tiered_schedule_for_sportsbook_odds": "This is a schedule that is tiered and separated with qualitative information. It is used for the website BookBreakers.us to create accordion tables of bet data.\n\nThe Tiers:\n1. Bet Type and Game Period (Eg. P3^0 is 3 Pointers Full Game in Basketball)\n2. Player (Eg. Jayson Tatum) (NOTE: If this is not a prop this tier will not exists)\n3. Lines Available (Eg. 2.5, 3.5)\n4. Outcomes for Those Lines (Eg. O, U for Over and Under)\n5. Sites (Eg. Fanduel, DraftKings, ETC.)", "get_configuration_for_judge0_extra_ce": "Configuration information gives you detailed information about the configuration of Judge0.", "get_imbuements_for_snake_skin_earth_protection_for_tibia_items": "This enpoint will get all imbuement for type Snake skin\n\nSnake Skin (Earth Protection)\nBrimstone Fangs \nPiece of Swampling Wood \nSnake Skin", "get_individual_news_source_news_for_climate_change_live_v27": "This API gets news from individual news source", "get_language_code_for_ginger": "-", "get_order_for__onboarding_project": " ", "get_season_totals_regular_season_for_nba_stats_v2": "Api to query season totals regular season", "get_users_for_feku_json": "To Get list of all Users", "getnews_for_diablo4_smartable": "Get Diablo 4 news.", "most_visited_for_cryptocurrency_markets": "Most visited cryptocurrencies today.", "search_leaderboard_for_binance_futures_leaderboard": "Get the list of traders on the leaderboard", "translation_for_ginger": "-", "user_details_for_twitter": "This endpoint returns the public information about a Twitter profile", "webcams_list_region_region_region_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed region. Multiple regions must be separated by comma. Required: at least one {region}. Possible values are ISO 3166-1-alpha-2 codes for the country and a region code separated by a dot."}, "aseqs": [{"api_name": "correct_and_rephrase_for_ginger", "api_action": "\nAction: correct_and_rephrase_for_ginger\nAction Input: {\n  \"text\": \"I'm preparing a presentation for my company and want to ensure my slides are error-free. Can you correct any grammar mistakes in the slides and suggest rephrases to enhance clarity? Also, please provide translations for certain slides from English to German.\"\n}", "api_reaction": null}, {"api_name": "correction_in_sentence_for_ginger", "api_action": "\nAction: correction_in_sentence_for_ginger\nAction Input: {\n  \"text\": \"I'm preparing a presentation for my company and want to ensure my slides are error-free. Can you correct any grammar mistakes in the slides and suggest rephrases to enhance clarity? Also, please provide translations for certain slides from English to German.\"\n}", "api_reaction": null}, {"api_name": "get_language_code_for_ginger", "api_action": "\nAction: get_language_code_for_ginger\nAction Input: {}", "api_reaction": null}, {"api_name": "translation_for_ginger", "api_action": "\nAction: translation_for_ginger\nAction Input: {\n  \"text\": \"I'm preparing a presentation for my company and want to ensure my slides are error-free. Can you correct any grammar mistakes in the slides and suggest rephrases to enhance clarity? Also, please provide translations for certain slides from English to German.\",\n  \"tolanguage\": \"de\",\n  \"fromlanguage\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "correction_in_sentence_for_ginger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translation_for_ginger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translation_for_ginger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translation_for_ginger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_language_code_for_ginger"}}]}
{"URL": "12427", "query": "I'm a student preparing for a competitive exam, and I need to stay updated on current affairs. Can you please provide me with the recent current affairs in India? Additionally, I would like to challenge myself with a quiz based on today's current affairs. Could you share the quiz questions?", "api_names": ["recent_current_affairs_for_current_affairs_of_india", "quiz_for_today_for_current_affairs_of_india", "Finish", "get_weekly_popular_books_by_genre_for_hapi_books", "channels_for_youtube_v3_lite", "vat_validation_api_endpoint_for_vat_validation_and_tax_rates", "findallstates_for_india_pincode_api", "form_check_user_for_botlibre", "coins_get_markets_for_investing_cryptocurrency_markets", "recipes_auto_complete_for_tasty", "liste_des_pays_villes_quartiers_secteurs_et_localit_s_for_digixpress", "search_pins_for_pinterest_scraper", "public_holidays_for_public_holiday", "allformactions_for_acopaer", "feed_for_kwai"], "api_descs": {"Finish": "No description available.", "allformactions_for_acopaer": "# Description GET All Form Actions\r\n\r\nThis url is to get all Form Actions created is type `GET`, the url is `BASE_URL/form-actions` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "channels_for_youtube_v3_lite": "Get channel details.\nQuota cost is 1.", "coins_get_markets_for_investing_cryptocurrency_markets": "Get market information of specific cryptocurrency in specified currency", "feed_for_kwai": "Feed API", "findallstates_for_india_pincode_api": "findallstates", "form_check_user_for_botlibre": "The form-check-user API validates user, and returns the user's details.", "get_weekly_popular_books_by_genre_for_hapi_books": "Returns the most popular books from the last weeks given a genre.", "liste_des_pays_villes_quartiers_secteurs_et_localit_s_for_digixpress": "Base de localisation.", "public_holidays_for_public_holiday": "Returns the public holidays from a given year and country.", "quiz_for_today_for_current_affairs_of_india": "This endpoint will fetch you today's current affair 10 quiz questions.", "recent_current_affairs_for_current_affairs_of_india": "This will provide you with the recent current affairs of India.", "recipes_auto_complete_for_tasty": "Get auto complete suggestions by name or ingredients", "search_pins_for_pinterest_scraper": "Search Pins", "vat_validation_api_endpoint_for_vat_validation_and_tax_rates": "The Validate Endpoint takes a VAT number in the request, checks if that number is valid, and if it is valid, returns addition details about the company associated with that VAT number."}, "aseqs": [{"api_name": "recent_current_affairs_for_current_affairs_of_india", "api_action": "\nAction: recent_current_affairs_for_current_affairs_of_india\nAction Input: {}", "api_reaction": null}, {"api_name": "quiz_for_today_for_current_affairs_of_india", "api_action": "\nAction: quiz_for_today_for_current_affairs_of_india\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "recent_current_affairs_for_current_affairs_of_india"}}, {"state": "generated_by_agent", "aseq": {"api_name": "quiz_for_today_for_current_affairs_of_india"}}, {"state": "generated_by_agent", "aseq": {"api_name": "recent_current_affairs_for_current_affairs_of_india"}}]}
{"URL": "41512", "query": "I am planning a trip to Florida and I want to know the details of the airports in the state. Can you provide me with a list of airports, including their names, locations, and time zones? Additionally, it would be helpful if you could show me an image of each airport.", "api_names": ["getimage_for_florida_realty_api", "Finish", "getlistings_for_florida_realty_api", "getcities_for_florida_realty_api", "datedif_for_date_calculator", "ancestry_for_23andme", "get_the_month_s_top_articles_for_dev_to_api", "normalize_for_email_utilities", "recipes_auto_complete_for_tasty", "get_team_info_for_valorant_esports_v2", "asd_for_test_v16", "gettopics_for_a_i_smartable", "get_cigars_for_cigars", "find_places_for_ai_weather_by_meteosource", "sentiment_for_textapi", "top_stories_for_hacker_news", "objective_c_versions_for_objective_c_code_compiler", "session_for_f1_live_motorsport_data", "get_sunrise_and_sunset_times_for_sunrise_sunset_times", "v1_iplookup_for_ip_lookup_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "ancestry_for_23andme": "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion — the ancestry we couldn't classify in it.   threshold is optional, default 0.75 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate.", "asd_for_test_v16": "asdasdasd", "datedif_for_date_calculator": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).", "find_places_for_ai_weather_by_meteosource": "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc.", "get_cigars_for_cigars": "Get cigar data, paginated with filters", "get_sunrise_and_sunset_times_for_sunrise_sunset_times": "Get sunrise and sunset times by date, latitude, and longitude.", "get_team_info_for_valorant_esports_v2": "Get comprehensive information about a team, including player details, events, results, and more.", "get_the_month_s_top_articles_for_dev_to_api": "It returns the month's top articles from dev.to website.", "getcities_for_florida_realty_api": "Get a list of supported cities with some data about those cities like the number of residents, the latitude, longitude, altitude  and a description and image of the city.", "getimage_for_florida_realty_api": "Load images of cities you retrieve by calling getCities().", "getlistings_for_florida_realty_api": "Use this endpoint to retrieve a list of condominiums and townhouses in Southwest Florida and on the East Coast.", "gettopics_for_a_i_smartable": "Get artificial intelligence topics.", "normalize_for_email_utilities": "get normalized form of an email", "objective_c_versions_for_objective_c_code_compiler": "Objective-C Versions", "recipes_auto_complete_for_tasty": "Get auto complete suggestions by name or ingredients", "sentiment_for_textapi": "Get the sentiment of submitted text using VADER (Valence Aware Dictionary and sEntiment Reasoner) is a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiments expressed in social media.", "session_for_f1_live_motorsport_data": "Provides session details for a given `session id` found in the Races endpoint. Contains information on drivers times, session weather, speed traps, and session status. Updated throughout each session.", "top_stories_for_hacker_news": "Returns the current top 100 stories.", "v1_iplookup_for_ip_lookup_by_api_ninjas": "API Ninjas IP Lookup API endpoint."}, "aseqs": [{"api_name": "getcities_for_florida_realty_api", "api_action": "\nAction: getcities_for_florida_realty_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getimage_for_florida_realty_api", "api_action": "\nAction: getimage_for_florida_realty_api\nAction Input: {\n  \"filename\": \"cape_coral_airport.jpg\"\n}", "api_reaction": null}, {"api_name": "getimage_for_florida_realty_api", "api_action": "\nAction: getimage_for_florida_realty_api\nAction Input: {\n  \"filename\": \"fort_lauderdale_airport.jpg\"\n}", "api_reaction": null}, {"api_name": "getlistings_for_florida_realty_api", "api_action": "\nAction: getlistings_for_florida_realty_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getcities_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcities_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlistings_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlistings_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcities_for_florida_realty_api"}}]}
{"URL": "83728", "query": "I'm a music blogger and I'm looking for some interesting content. Can you fetch the artist 100 chart for a specific date, let's say July 7, 2021? I'm interested in the top 10 artists and their rankings. Additionally, could you provide the Billboard 200 chart for the same date? I want to explore the top-selling albums as well.", "api_names": ["billboard_200_for_billboard_v2", "artist_100_for_billboard_v2", "Finish", "get_season_totals_regular_season_by_id_for_nba_stats_v2", "true_range_for_qvantana", "etf_list_for_palmy_investing_api", "by_zip_code_for_homeless_shelter", "get_chat_messages_for_kick_com_api_kick_api", "pipeline_for_streak_crm_for_gmail", "openapi_openapi_json_get_for_places_in_radius", "getmetadatafromimage_for_images_infos_api2", "get_astronomy_data_for_stormglass_complete"], "api_descs": {"Finish": "No description available.", "artist_100_for_billboard_v2": "Get the Artist 100 chart.", "billboard_200_for_billboard_v2": "Get the Billboard 200 chart.", "by_zip_code_for_homeless_shelter": "Search Homeless Shelters by Zip Code", "etf_list_for_palmy_investing_api": "A list of n ETFs where each hold time critical information such as price", "get_astronomy_data_for_stormglass_complete": "Stormglass Astronomy Data\n\nRetrieve sunrise, sunset, moonrise, moonset and moon phase for a single coordinate.", "get_chat_messages_for_kick_com_api_kick_api": "Returns chat messages from livestream ID.", "get_season_totals_regular_season_by_id_for_nba_stats_v2": "Api to query season totals regular season", "getmetadatafromimage_for_images_infos_api2": "Get metadata from image", "openapi_openapi_json_get_for_places_in_radius": " ", "pipeline_for_streak_crm_for_gmail": "Pipelines represent a business process that a user would like managed.", "true_range_for_qvantana": "True range indicator"}, "aseqs": [{"api_name": "artist_100_for_billboard_v2", "api_action": "\nAction: artist_100_for_billboard_v2\nAction Input: {\n  \"date\": \"2021-07-07\",\n  \"range\": \"1-10\"\n}", "api_reaction": null}, {"api_name": "billboard_200_for_billboard_v2", "api_action": "\nAction: billboard_200_for_billboard_v2\nAction Input: {\n  \"date\": \"2021-07-07\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "artist_100_for_billboard_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "billboard_200_for_billboard_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_100_for_billboard_v2", "api_action": "\nAction: artist_100_for_billboard_v2\nAction Input: {\n  \"date\": \"2021-07-07\",\n  \"range\": \"1-10\"\n}", "api_reaction": null}}]}
{"URL": "64387", "query": "I'm a researcher studying the impact of climate change on coastal areas. Can you help me find cities located on the coast with high vulnerability to rising sea levels? It would be great to know about the current sea level rise projections, average temperature, and precipitation in these cities.", "api_names": ["get_place_by_id_for_spott", "autocomplete_places_for_spott", "Finish", "v1_latest_headlines_for_newscatcher", "findbycrop_for_agrofitdata", "get_a_specific_employee_by_employee_id_for_human_resources_api", "get_complete_package_list_for_winget_api", "title_cast_crew_for_watchmode", "latest_chapters_updates_for_manga_scrapper", "get_date_and_time_by_city_for_location_and_time", "get_user_wallets_for_wallet", "countries_list_for_asos", "languages_for_translate_all_languages", "dark_cloud_cover_for_barpatterns", "getall_for_house_plants"], "api_descs": {"Finish": "No description available.", "autocomplete_places_for_spott": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.", "countries_list_for_asos": "List countries that Asos supports selling products", "dark_cloud_cover_for_barpatterns": "List of stocks having Dark Cloud Cover signal.", "findbycrop_for_agrofitdata": " ", "get_a_specific_employee_by_employee_id_for_human_resources_api": "This endpoint gets one record by a specific employee ID that is unique for each employee in the employees table, up to 900 employees with their information.\nFor example:  employee ID , first name, email, and  etc...", "get_complete_package_list_for_winget_api": "Get all available packages in database by ID.", "get_date_and_time_by_city_for_location_and_time": "Get current date and time for specified city, fuzzy search is supported. **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/datetime/bylocation` endpoint instead.", "get_place_by_id_for_spott": "Returns a single Place identified by an ID.", "get_user_wallets_for_wallet": "returns all user wallets", "getall_for_house_plants": "Returns all plant data within an array. Information for each plant returned contains (but not limited to) the list below\n\n- Latin name \n- Img \n- Id\n- Family \n- Other names \n- Common name \n- Common name (fr.) \n- Description \n- Categories \n- Origin \n- Climat \n- Temperature max\n- Temperature min\n- Zone \n- Growth \n- Light ideal \n- Light tolered \n- Watering \n- Insects \n- Disease \n- Appeal \n- Color of leaf \n- Color of blooms \n- Blooming season \n- Perfume \n- Avaibility \n- Pot diameter\n- Height at purchase\n- Width at purchase\n- Height potential\n- Width potential\n- Available sizes\n- Bearing \n- Clump\n- Pruning \n- Style \n- Use", "languages_for_translate_all_languages": "Returns a list of supported languages for translation.", "latest_chapters_updates_for_manga_scrapper": "Make request to fetch latest chapters updates up to 7 days ago.", "title_cast_crew_for_watchmode": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.", "v1_latest_headlines_for_newscatcher": "Always returns the latest 100 articles for any `topic`, `country`, `lang`, or any of those combined"}, "aseqs": [{"api_name": "autocomplete_places_for_spott", "api_action": "\nAction: autocomplete_places_for_spott\nAction Input: {}", "api_reaction": null}, {"api_name": "get_place_by_id_for_spott", "api_action": "\nAction: get_place_by_id_for_spott\nAction Input: {\n  \"is_id\": \"5809844\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_date_and_time_by_city_for_location_and_time"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_date_and_time_by_city_for_location_and_time", "api_action": "\nAction: get_date_and_time_by_city_for_location_and_time\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_date_and_time_by_city_for_location_and_time", "api_action": "\nAction: get_date_and_time_by_city_for_location_and_time\nAction Input: {\n  \"city\": \"coastal_vulnerable_cities\"\n}", "api_reaction": null}}]}
{"URL": "47719", "query": "I'm organizing a spelling competition for children and I need challenging words. Can you generate anagrams using the Collins Scrabble Words 2021 lexicon and the NASPA Word List 2020 edition? I need the words, their definitions, and the probability of their occurrence.", "api_names": ["csw21_for_word_tree", "nwl20_for_word_tree", "Finish", "create_qr_code_for_flowcode", "get_reviews_by_app_id_for_google_play", "get_climate_data_by_lat_lon_or_key_for_climate_data", "accurate_language_detection_for_translate_v3", "china_and_us_relation_filter_for_east_china_news", "view_status_code_and_message_for_pe_demo", "united_states_employment_for_covid_19_economic_impact", "exists_exists_ticket_get_for_ifc_bim_services", "cities_for_facebook_marketplace", "social_profiles_for_ocoya", "get_monthly_top_100_music_torrents_for_movie_tv_music_search_and_download", "phone_number_for_phone_and_email_validator_v2", "consulta_por_cpf_for_consulta_cpf_cnpj_brasil", "get_app_reviews_for_ios_store", "10_year_historical_monthly_prices_for_stock_prices"], "api_descs": {"10_year_historical_monthly_prices_for_stock_prices": "10 Year monthly historically adjusted Open, High, Low, and Close prices.  Monthly Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "accurate_language_detection_for_translate_v3": "This endpoint will return the Language of the Text", "china_and_us_relation_filter_for_east_china_news": "Filters all news for US and China", "cities_for_facebook_marketplace": "Facebook items cities", "consulta_por_cpf_for_consulta_cpf_cnpj_brasil": "**Consulta por CPF endpoint**", "create_qr_code_for_flowcode": "This API takes an endpoint and return and image for a QR Code in either svg, png, jpg, or pdf format", "csw21_for_word_tree": "Search for words using Collins Scrabble Words 2021 lexicon.", "exists_exists_ticket_get_for_ifc_bim_services": "Check if the key ticket is available or not", "get_app_reviews_for_ios_store": "This endpoint allows us to fetch app reviews given app Id", "get_climate_data_by_lat_lon_or_key_for_climate_data": "get climate for  the location Lat/Lon", "get_monthly_top_100_music_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Music Torrents", "get_reviews_by_app_id_for_google_play": "Returns the reviews of a single application by its ID", "nwl20_for_word_tree": "Search using the NASPA Word List 2020 edition, © 2020 North American Word Game Players Association.", "phone_number_for_phone_and_email_validator_v2": "E164 Format. Eg 19542567890 for USA", "social_profiles_for_ocoya": "Returns information about connected social profiles.", "united_states_employment_for_covid_19_economic_impact": "Get daily average percent change of employment relative to January 4 - 31, 2020.", "view_status_code_and_message_for_pe_demo": "View status code and message for the specified value."}, "aseqs": [{"api_name": "csw21_for_word_tree", "api_action": "\nAction: csw21_for_word_tree\nAction Input: {\n  \"input\": \"anagrams\"\n}", "api_reaction": null}, {"api_name": "nwl20_for_word_tree", "api_action": "\nAction: nwl20_for_word_tree\nAction Input: {\n  \"input\": \"anagrams\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use the csw21_for_word_tree and nwl20_for_word_tree APIs to generate anagrams using the Collins Scrabble Words 2021 lexicon and the NASPA Word List 2020 edition. Then, I should create a response with the words, their definitions, and the probability of their occurrence.\n\t\"api_name\": \"csw21_for_word_tree\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "nwl20_for_word_tree"}}, {"state": "generated_by_agent", "aseq": {"api_name": "csw21_for_word_tree", "api_action": "\nAction: csw21_for_word_tree\nAction Input: {\n  \"input\": \"anagrams\"\n}", "api_reaction": null}}]}
{"URL": "86319", "query": "My company is conducting market research and needs to visit multiple websites. Can you provide us with a proxy service to access these websites? We would like to visit 'https://www.website1.com', 'https://www.website2.com', and 'https://www.website3.com'.", "api_names": ["proxy_for_proxy", "Finish", "weather_for_weather_v14", "wallets_balance_by_chain_for_defi_watch", "localitiesdetails_for_woosmap", "get_car_models_for_infocarsapi", "song_comments_for_genius_song_lyrics", "inasistencias_1_for_colegiosantaana", "reddit_for_check_username", "search_for_wayback_machine", "argentina_latest_matches_for_surebets_2", "tangga_lagu_for_kotak7"], "api_descs": {"Finish": "No description available.", "argentina_latest_matches_for_surebets_2": "Latest matches in Argentina by bookie - updated every 24 hours", "get_car_models_for_infocarsapi": "This endpoint will return back all the models of a respective car maker", "inasistencias_1_for_colegiosantaana": "Inasistencias de alumno 1", "localitiesdetails_for_woosmap": "Provides details of an autocomplete suggestion (using the suggestion’s `public_id`).\n", "proxy_for_proxy": "Proxy your request anywhere.", "reddit_for_check_username": "Check username on Reddit", "search_for_wayback_machine": "Search", "song_comments_for_genius_song_lyrics": "Song Comments", "tangga_lagu_for_kotak7": "Daftar tangga lagu", "wallets_balance_by_chain_for_defi_watch": "Get wallet balance in USD by chain", "weather_for_weather_v14": "dsfghbn"}, "aseqs": [{"api_name": "proxy_for_proxy", "api_action": "\nAction: proxy_for_proxy\nAction Input: {\n  \"url\": \"https://www.website1.com\"\n}", "api_reaction": null}, {"api_name": "proxy_for_proxy", "api_action": "\nAction: proxy_for_proxy\nAction Input: {\n  \"url\": \"https://www.website1.com\",\n  \"headers\": \"{\\\"X-API-Key\\\": \\\"validApiKey123\\\"}\"\n}", "api_reaction": null}, {"api_name": "proxy_for_proxy", "api_action": "\nAction: proxy_for_proxy\nAction Input: {\n  \"url\": \"https://www.website1.com\",\n  \"headers\": \"{\\\"X-API-Key\\\": \\\"validApiKey123\\\",}\"\n}", "api_reaction": null}, {"api_name": "proxy_for_proxy", "api_action": "\nAction: proxy_for_proxy\nAction Input: {\n  \"url\": \"https://www.website1.com\",\n  \"headers\": {\n    \"X-API-Key\": \"validApiKey123\"\n  }\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "proxy_for_proxy"}}, {"state": "generated_by_agent", "aseq": {"api_name": "proxy_for_proxy", "api_action": "\nAction: proxy_for_proxy\nAction Input: {\n  \"url\": \"https://www.website2.com\"\n}"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"proxy_for_proxy\",\n\t\"api_action\": \"\\nAction: proxy_for_proxy\\nAction Input: {\\n  \\\"url\\\": \\\"https://www.website2.com\\\"\\n}\",\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"proxy_for_proxy\",\n\t\"api_action\": \"\\nAction: proxy_for_proxy\\nAction Input: {\\n  \\\"url\\\": \\\"https://www.website2.com\\\"\\n}\",\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"proxy_for_proxy\",\n\t\"api_action\": \"\\nAction: proxy_for_proxy\\nAction Input: {\\n  \\\"url\\\": \\\"https://www.website1.com\\\"\\n}\",\n}"}]}
{"URL": "26587", "query": "I'm organizing a movie night for my company's team-building event. Can you search for movies related to 'comedy' and provide a list of titles along with their details? Additionally, we would like to know if there are any similar titles available.", "api_names": ["search_for_netflix_v2", "title_similars_for_netflix_v2", "Finish", "account_update_for_stocktwits", "about_for_judge0_ce", "set_contribution_for_mymemory_translation_memory", "exchanges_for_tardis_dev", "get_call_for_passport_verification", "search_for_gearbest", "leagueoverallpergametopplayers_for_basketapi", "checkseatavailability_for_irctc", "getuservideos_for_helioviewer_v1", "all_ticker_data_for_global_ethereum_price_index_gex", "image_search_for_google_search_results_scraper", "word_infos_for_master_dictionary"], "api_descs": {"Finish": "No description available.", "about_for_judge0_ce": "Get general information.", "account_update_for_stocktwits": "This updates the properties of the authenticating user's account.", "all_ticker_data_for_global_ethereum_price_index_gex": "If no query parameters are sent, then returns ticker data for every supported symbol. If fiat(s) are sent as parameters, then only the ticker for those values is sent.", "checkseatavailability_for_irctc": "-", "exchanges_for_tardis_dev": "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc.", "get_call_for_passport_verification": "Used to fetch api result using the request id received in responses.", "getuservideos_for_helioviewer_v1": "Get a listing (in descending time order) of the most recently user-generated movies that have been publicly shared to YouTube.  Result set is limited to the value requested or default value of the `num` parameter (unless truncated when the date value of the `since` parameter is reached).", "image_search_for_google_search_results_scraper": "Runs a standard image search and parses the output to a clean json object.", "leagueoverallpergametopplayers_for_basketapi": "Get the best players in the basketball league per game overall.", "search_for_gearbest": " ", "search_for_netflix_v2": "Search", "set_contribution_for_mymemory_translation_memory": "The SET api is used to save a contribution. You can either save a contribution privately with your private TM key or add it to the public collaborative TM.", "title_similars_for_netflix_v2": "Title Similars", "word_infos_for_master_dictionary": "Get word infos"}, "aseqs": [{"api_name": "search_for_netflix_v2", "api_action": "\nAction: search_for_netflix_v2\nAction Input: {\n  \"query\": \"comedy\",\n  \"limit_titles\": 10\n}", "api_reaction": null}, {"api_name": "title_similars_for_netflix_v2", "api_action": "\nAction: title_similars_for_netflix_v2\nAction Input: {\n  \"is_id\": \"80174688\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_netflix_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "title_similars_for_netflix_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "title_similars_for_netflix_v2", "api_action": "\nAction: title_similars_for_netflix_v2\nAction Input: {\n  \"is_id\": \"\"search_result_id\",\n  \"limit\": 5\n}", "api_reaction": null}}]}
{"URL": "57761", "query": "I need a recipe for vegetarian tacos. Please provide the detailed recipe, including the difficulty level, portion size, preparation time, ingredients, cooking method, and an image. Additionally, give me a list of Mexican foods along with their names and images.", "api_names": ["list_of_foods_for_the_mexican_food_db", "detailed_food_recipe_by_id_for_the_mexican_food_db", "Finish", "get_all_plants_for_house_plants", "addresses_autocomplete_for_uk_postcode_api", "get_models_modelid_info_v1_for_shapeways", "getallchannels_for_vimeo", "feeds_for_tiktok_v2", "rising_popular_posts_for_reddit", "get_stock_price_for_stock_info", "list_languages_for_rushtranslate", "getpeople_for_powerbi", "order_by_descending_for_dogbreeddb", "get_pages_fb3c1d3c_13c4_4cb5_9a4d_5dbc5e195d42_for_the_south_asian_express", "airplanes_ordered_by_ascending_for_airplanesdb"], "api_descs": {"Finish": "No description available.", "addresses_autocomplete_for_uk_postcode_api": "Suggests address results for a given search term.", "airplanes_ordered_by_ascending_for_airplanesdb": "Get all airplanes ordered by name in ascending order.", "detailed_food_recipe_by_id_for_the_mexican_food_db": "Mexican Food Recipe by ID", "feeds_for_tiktok_v2": "Fetch TikToc user recent feeds by username", "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.", "get_models_modelid_info_v1_for_shapeways": "", "get_pages_fb3c1d3c_13c4_4cb5_9a4d_5dbc5e195d42_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.", "get_stock_price_for_stock_info": "To get the Stock Price (Delayed 30 mins)", "getallchannels_for_vimeo": "Get a list of all public channels.", "getpeople_for_powerbi": "Get Power BI influencers.", "list_languages_for_rushtranslate": "Get the list of languages we support. The language codes included in the response will be required when placing orders via the API.", "list_of_foods_for_the_mexican_food_db": "This endpoint responds with a list of mexican foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe.", "order_by_descending_for_dogbreeddb": "Gives a list of all dogs sorted in descending order by name.", "rising_popular_posts_for_reddit": "Rising Popular Posts"}, "aseqs": [{"api_name": "list_of_foods_for_the_mexican_food_db", "api_action": "\nAction: list_of_foods_for_the_mexican_food_db\nAction Input: {}", "api_reaction": null}, {"api_name": "detailed_food_recipe_by_id_for_the_mexican_food_db", "api_action": "\nAction: detailed_food_recipe_by_id_for_the_mexican_food_db\nAction Input: {\n  \"is_id\": \"7\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_of_foods_for_the_mexican_food_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detailed_food_recipe_by_id_for_the_mexican_food_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detailed_food_recipe_by_id_for_the_mexican_food_db", "api_action": "\nAction: detailed_food_recipe_by_id_for_the_mexican_food_db\nAction Input: {\n  \"is_id\": \"7\",\n  \"include_difficulty_level\": true,\n  \"include_portion_size\": true,\n  \"include_preparation_time\": true,\n  \"include_ingredients\": true,\n  \"include_cooking_method\": true,\n  \"include_image\": true\n}", "api_reaction": null}}]}
{"URL": "68182", "query": "I am organizing a networking event and I need a list of potential attendees. Can you help me by searching for profiles of people working in a specific industry using the search API? Once you find the profiles, please extract their data using the extract API. It would be great if you can provide details such as their job titles, education, and worksFor details.", "api_names": ["search_for_linkedin_profiles", "Finish", "list_employers_for_adzuna", "properties_get_static_map_for_booking", "get_coin_metrics_by_name_for_crowdsense", "datedif_for_date_calculator", "getteams_for_wosti_futbol_tv_spain", "check_email_server_for_mx_email_server_up_or_down", "get_the_stock_history_by_code_for_stocks", "newlyregistereddomains_for_check_disposable_email", "images_search_for_bing_search_apis", "channels_list_for_sofascores"], "api_descs": {"Finish": "No description available.", "channels_list_for_sofascores": "Get a list of channels by country", "check_email_server_for_mx_email_server_up_or_down": "Returns if email server is up or down.", "datedif_for_date_calculator": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).", "get_coin_metrics_by_name_for_crowdsense": "Retrieve  coin´s real time social media metrics by Coin name\nIn the case you want to retrieve historical data check \"Get Coin Historical Metrics by Name\" or \"Get Coin Historical Metrics by Ticker\"\n\n**Input:** \n- Security Name: Coin Name (Required)\n\n**Output:**\n\n- Sentiment\n- Sentiment change\n- Followers\n- Followers change\n- Mentions\n- Mentions change\n- Security ticker\n- Security name\n- DataTimeStamp\n\n**Definitions:**\n\n•\tMentions - Number of posts related to the coin in tracked social media sources in the requested date with TimeFrame required.\n•\tMentionsChange - Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n•\tSentiment - Democratic Sentiment Score out of 100 Points (100 for the most positive, 50 for neutral and 0 for the most negative)in the requested date with TimeFrame required.  [Democratic Sentiment is a sentiment that gives the same weight to each mention related to the coin despite the number of followers for each mention]\n•\tSentimentChange - Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n•\tFollowers - Sum of followers reached by coin related mentions in the requested date with TimeFrame required.\n•\tFollowersChange - Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All dates are in UTC\n- Results are on 1 day timeframe", "get_the_stock_history_by_code_for_stocks": "Get the stock history by code.", "getteams_for_wosti_futbol_tv_spain": "Obtener el listado de equipos de fútbol televisados en España.", "images_search_for_bing_search_apis": "Search images from the search engine for the most relevant keywords and images related to keywords and images.", "list_employers_for_adzuna": "List the employers with most jobs advertised.", "newlyregistereddomains_for_check_disposable_email": "REST API to lookup newly registered domains", "properties_get_static_map_for_booking": "Get static map at specific GEO location", "search_for_linkedin_profiles": "Search company or profile"}, "aseqs": [{"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"industry:software development\",\n  \"type\": \"person\"\n}", "api_reaction": null}, {"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"company:software development company\",\n  \"type\": \"person\"\n}", "api_reaction": null}, {"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"company:software development\",\n  \"type\": \"person\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"industry:finance\",\n  \"type\": \"person\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles", "api_action": "{\"query\": \"industry:software development\", \"type\": \"person\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles"}}]}
{"URL": "37340", "query": "I'm organizing a group trip to the United States and we need to know about the airports in the country. Can you fetch a list of airports in the United States, including their names, IATA codes, and locations? It would be great if you could also provide details about the airports near the coordinates 32.9222, -97.0409.", "api_names": ["get_airport_details_by_code_for_airports_finder", "Finish", "get_airports_by_coordinates_for_airports_finder", "get_airports_by_city_for_airports_finder", "list_of_foods_for_the_vegan_recipes_db", "get_list_of_github_repo_for_ruby_webscrapping_for_leo_github_data_scraper", "allchannel_for_tvview", "4_date_endpoint_for_currenciesexchangerateapi", "basic_search_for_slovenia_company_data", "matches_for_metrx_factory", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days", "vehicle_attributes_for_car_api", "documentation_for_cakemail", "get_products_in_category_for_asdfadsf", "macros_amounts_for_fitness_calculator", "properties_v2_get_rooms_for_booking"], "api_descs": {"4_date_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'date': \n'symbols': \n'base': \nResponse: This endpoint returns the exchange rates for the specified currencies on the specified date in JSON format.", "Finish": "No description available.", "allchannel_for_tvview": "Get All the Channel", "basic_search_for_slovenia_company_data": "Basic text based search for company names registered in Slovenia", "documentation_for_cakemail": "", "get_airport_details_by_code_for_airports_finder": "The \"Get Airport Details By Code\" API allows you to quickly retrieve comprehensive information about airports based on their IATA codes. Obtain precise details such as airport names, locations, time zones, and more with this efficient and reliable API.", "get_airports_by_city_for_airports_finder": "The \"Get Airports By City\" API enables you to effortlessly retrieve a list of airports based on a specific city. This API provides comprehensive details about airports, including their names, IATA codes, locations, and additional information.", "get_airports_by_coordinates_for_airports_finder": "The \"Get Airports By Coordinates\" API enables you to retrieve a list of airports based on specific latitude and longitude coordinates. By providing the latitude and longitude values, this API returns comprehensive details about airports located within that vicinity. This information includes airport names, IATA codes, locations, and additional relevant data.", "get_forecastdata_by_lat_lon_for_weather_forecast_14_days": "get forecast for 14 days for the location Lat/Lon", "get_list_of_github_repo_for_ruby_webscrapping_for_leo_github_data_scraper": "Get list of Github repo for Ruby Webscrapping", "get_products_in_category_for_asdfadsf": " ", "list_of_foods_for_the_vegan_recipes_db": "This endpoint responds with a list of vegan foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe.", "macros_amounts_for_fitness_calculator": "Find the amount of macro nutrients in four different categories which are balanced, low-fat, low-carbs and high-protein for a specific calorie burned. There are 6 inputs which are age, gender, height, weight, activity level and goal. \n\nFor activity level :\n    \n-     \"1\" : \"BMR\",\n-     \"2\" : \"Sedentary: little or no exercise\",\n-     \"3\" : \"Exercise 1-3 times/week\",\n-     \"4\" : \"Exercise 4-5 times/week\",\n-     \"5\" : \"Daily exercise or intense exercise 3-4 times/week\",\n-     \"6\" : \"Intense exercise 6-7 times/week\",\n-     \"7\" : \"Very intense exercise daily, or physical job\" \n\nFor goals : \n\n-      \"maintain\" : \"maintain weight\",\n-     \"mildlose\" : \"Mild weight loss\",\n-     \"weightlose\" : \"Weight loss\",\n-     \"extremelose\" : \"Extreme weight loss\",\n-     \"mildgain\" : \"Mild weight gain\",\n-     \"weightgain\" : \"Weight gain\",\n-     \"extremegain\" : \"Extreme weight gain\"", "matches_for_metrx_factory": "Returns a list of matches for given parameters.\n\nBoth historical and upcoming matches are supported. If no parameters are provided then all upcoming matches are returned. The time span covering next matches ranges between 8 hours for *Basic* and 60 hours for paid subscriptions.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. matches returned: 5`", "properties_v2_get_rooms_for_booking": "Get full details of rooms in the hotel", "vehicle_attributes_for_car_api": "Returns all options for given attribute."}, "aseqs": [{"api_name": "get_airports_by_coordinates_for_airports_finder", "api_action": "\nAction: get_airports_by_coordinates_for_airports_finder\nAction Input: {\n  \"lat\": \"32.9222\",\n  \"lon\": \"-97.0409\"\n}", "api_reaction": null}, {"api_name": "get_airports_by_city_for_airports_finder", "api_action": "\nAction: get_airports_by_city_for_airports_finder\nAction Input: {\n  \"city\": \"Dallas\"\n}", "api_reaction": null}, {"api_name": "get_airport_details_by_code_for_airports_finder", "api_action": "\nAction: get_airport_details_by_code_for_airports_finder\nAction Input: {\n  \"code\": \"DFW\"\n}", "api_reaction": null}, {"api_name": "get_airports_by_city_for_airports_finder", "api_action": "\nAction: get_airports_by_city_for_airports_finder\nAction Input: {\n  \"city\": \"Dallas\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_airports_by_coordinates_for_airports_finder"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_airports_by_city_for_airports_finder"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_airports_by_coordinates_for_airports_finder"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_airports_by_coordinates_for_airports_finder"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_airports_by_coordinates_for_airports_finder"}}]}
{"URL": "16620", "query": "My friend is looking for a property to rent in Melbourne. Can you help me find rental properties in the city? We're looking for properties with at least 2 bedrooms, a pool, and a garage. Please include the property details, such as price, location, and description.", "api_names": ["Finish", "auto_complete_for_realty_in_au", "properties_list_for_realty_in_au", "properties_detail_for_realty_in_au", "about_for_whatsapp_data", "list_all_tasks_for_odesk_apis", "connectip_185_225_233_110_30015_for_vrising_server_query_api", "v1_covid19_for_covid_19_by_api_ninjas", "stock_earnings_for_yahoo_finance_v2", "news_list_for_flixster", "get_by_category_for_house_plants", "wrt_transformer_for_walnut_word_completion", "get_movie_for_magisto", "api_business_card_fromat_for_business_card_maker", "get_all_champion_base_stats_for_league_of_legends_stats", "daily_match_list_results_for_football_data"], "api_descs": {"Finish": "No description available.", "about_for_whatsapp_data": "This endpoint will return the `About` data of the Whatsapp for business number, and when the value was set.", "api_business_card_fromat_for_business_card_maker": "Get Business Card.", "auto_complete_for_realty_in_au": "Get suggestions by term or phrase. The returned data will be used with .../properties/list endpoint", "connectip_185_225_233_110_30015_for_vrising_server_query_api": "Get the connect IP from server - change `/IP/PORT`", "daily_match_list_results_for_football_data": "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**", "get_all_champion_base_stats_for_league_of_legends_stats": "This endpoint returns all base stats from every champion in the game.", "get_by_category_for_house_plants": "Get plants by their category.", "get_movie_for_magisto": "Downloading of the completed movie", "list_all_tasks_for_odesk_apis": "pull all tasks assigned within a company, team or to a specific user", "news_list_for_flixster": "List latest news", "properties_detail_for_realty_in_au": "Get detailed information of a property", "properties_list_for_realty_in_au": "List properties with options and filters", "stock_earnings_for_yahoo_finance_v2": "Get earnings information for a particular stock", "v1_covid19_for_covid_19_by_api_ninjas": "API Ninjas Covid19 API endpoint. Either **date** or **country** must be set.", "wrt_transformer_for_walnut_word_completion": "Returns the hidden word in the sentence."}, "aseqs": [{"api_name": "auto_complete_for_realty_in_au", "api_action": "\nAction: auto_complete_for_realty_in_au\nAction Input: {\n  \"query\": \"Melbourne\"\n}", "api_reaction": null}, {"api_name": "properties_list_for_realty_in_au", "api_action": "\nAction: properties_list_for_realty_in_au\nAction Input: {\n  \"searchlocation\": \"Melbourne\",\n  \"channel\": \"rent\",\n  \"searchlocationsubtext\": \"Suburb\",\n  \"type\": \"Melbourne, VIC 3000\",\n  \"keywords\": \"pool,garage\",\n  \"minimumbedrooms\": 2\n}", "api_reaction": null}, {"api_name": "properties_detail_for_realty_in_au", "api_action": "\nAction: properties_detail_for_realty_in_au\nAction Input: {\n  \"is_id\": 437214908\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_realty_in_au"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_realty_in_au"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_realty_in_au"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_realty_in_au"}}]}
{"URL": "65792", "query": "I'm a Game of Thrones superfan and I want to create a comprehensive character guide. Can you provide me with a list of all the characters, including their names, families, and images? Furthermore, I would like to know the continents mentioned in the series.", "api_names": ["get_all_characters_for_game_of_thrones", "get_continents_for_game_of_thrones", "Finish", "speakers_for_hellonext", "data_tournaments_for_sports_odds_betapi", "albums_get_related_artist_for_shazam", "getportfolioinfo_for_trader_wagon", "get_exchange_category_for_stock_cryptocurrency_forex_market_data", "getslots_for_mybooky_demo", "view_db_for_face_recognition", "batch_for_languagelayer", "get_all_plants_for_house_plants", "get_leaderboard_rank_for_binance_futures_leaderboard", "stock_get_num_shares_outstanding_for_yh_finance_v2", "leaguenextmatches_for_cricketapi2", "userid_for_instagram_v13", "translate_for_translate_v3", "request_random_quote_for_random_quote_generator"], "api_descs": {"Finish": "No description available.", "albums_get_related_artist_for_shazam": "Get artist related to an album", "batch_for_languagelayer": "API endpoint used to perform batch language detection", "data_tournaments_for_sports_odds_betapi": "Data Tournaments", "get_all_characters_for_game_of_thrones": "Returns all of the GOT characters", "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.", "get_continents_for_game_of_thrones": "Returns all GOT continents", "get_exchange_category_for_stock_cryptocurrency_forex_market_data": "Get list available categories of exchanges", "get_leaderboard_rank_for_binance_futures_leaderboard": "Get the leaderboard rank", "getportfolioinfo_for_trader_wagon": "Get portfolio info of a given portfolio id", "getslots_for_mybooky_demo": " ", "leaguenextmatches_for_cricketapi2": "Get a list of next matches for a cricket league using the tournament ID, season ID, and page number.", "request_random_quote_for_random_quote_generator": "A simple get request.", "speakers_for_hellonext": "speakers", "stock_get_num_shares_outstanding_for_yh_finance_v2": "return number of share outstanding", "translate_for_translate_v3": "Return Translated Text and the source language if it wasn't specified", "userid_for_instagram_v13": "Get instagram user id by username", "view_db_for_face_recognition": "Read / view all face uids in your DB as \"faces_list\""}, "aseqs": [{"api_name": "get_continents_for_game_of_thrones", "api_action": "\nAction: get_continents_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_characters_for_game_of_thrones", "api_action": "\nAction: get_all_characters_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to first fetch all the characters from Game of Thrones and their families/images, then fetch the continents mentioned in the series,\n\t\"api_name\": \"get_all_characters_for_game_of_thrones\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}]}
{"URL": "84715", "query": "Could you please assist me in analyzing the value and ROI of a domain? It would be great if I could retrieve information such as domain length, past sales, and number of mentions. Also, it would be helpful if I can specify a domain for the analysis.", "api_names": ["Finish", "domain_analysis_for_domain_analysis", "get_feat_for_dungeons_and_dragon_5e", "us_az_for_us_gas_prices", "retrieving_a_contract_for_opensea_data_query", "leaguelastmatches_for_baseballapi", "quote_of_the_day_for_quotes_v2", "find_comment_find_get_for_facebook_user_info", "types_for_car_data", "gettest_for_testapi_v4", "get_abyssal_dungeons_for_lost_ark", "get_40_man_roster_for_mlb_data"], "api_descs": {"Finish": "No description available.", "domain_analysis_for_domain_analysis": "For a given domain, get analysis ranging from domain length all the way to past sales and number of mentions.", "find_comment_find_get_for_facebook_user_info": "Find Comment by UID or by_object_id(PageID, GroupID) ", "get_40_man_roster_for_mlb_data": "Retrieve a team’s 40 man roster.", "get_abyssal_dungeons_for_lost_ark": "endpoint to get all abyssal dungeons", "get_feat_for_dungeons_and_dragon_5e": "Returns information about the feat. Mainly full text description.", "gettest_for_testapi_v4": "get", "leaguelastmatches_for_baseballapi": "Get the last matches for a league by providing the unique tournament ID, season ID, and the page number (0-based).", "quote_of_the_day_for_quotes_v2": "Returns Quote of the Day", "retrieving_a_contract_for_opensea_data_query": "Used to fetch more in-depth information about an contract asset.", "types_for_car_data": "get a list of supported types", "us_az_for_us_gas_prices": "Returns current gas price data for Arizona. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."}, "aseqs": [{"api_name": "domain_analysis_for_domain_analysis", "api_action": "\nAction: domain_analysis_for_domain_analysis\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "domain_analysis_for_domain_analysis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domain_analysis_for_domain_analysis"}}]}
{"URL": "83117", "query": "Can you provide me with the outcome data for the last spin and the history of the previous 30 spins? I'm interested in the numbers, colors, and any trends that have emerged.", "api_names": ["history_for_xxxtremelightningrouletteapi", "latest_outcome_for_xxxtremelightningrouletteapi", "Finish", "getfutureeventsbytopic_for_azure", "mostrecentshortvolume_for_short", "generate_for_token_api", "dailyweatherseries_for_history", "getdraft_for_nhl_stats_and_live_data", "autocomplete_zipcodes_zip4_for_autocomplete_usa", "get_laws_for_one_state_for_us_gun_laws", "the_calendar_of_prices_for_a_week_for_flight_data_v2", "get_products_from_category_for_gearbest", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats", "test_for_paultest", "inn_general_director_for_dimondevosint", "downloadminecraftjarchecksum_for_minecraft_forge_optifine", "n_for_newapi", "get_watch_playlist_for_youtube_music_api_detailed_"], "api_descs": {"Finish": "No description available.", "autocomplete_zipcodes_zip4_for_autocomplete_usa": "Autocomplete USA Zipcodes-Zip4", "dailyweatherseries_for_history": "This endpoint returns the historical weather for a given series of days for a given location (latitude and longitude)", "downloadminecraftjarchecksum_for_minecraft_forge_optifine": "Return a .sha1 file used to checksum for downloadMinecraftJar method.", "generate_for_token_api": "Generate a new token for Language API", "get_laws_for_one_state_for_us_gun_laws": "This endpoint provides links to gun law documentation for any particular state.", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats": "This call will grab a map of all of the games a player has played in the season.     \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\nExample:\nCorrect way to get the stats for Nikola Vucevic for his game against the Heat on 10/19/2022 would be this:\n/getNBAGamesForPlayer?playerID=28268405032&gameID=20221019_CHI@MIA\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nIf you want his games from last season, do this..\n/getNBAGamesForPlayer?playerID=28268405032&season=2022\n\nBut if you wanted to get all of his games this season, you don't have to include the season. Simply make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNBABoxScore call with that specific gameID.", "get_products_from_category_for_gearbest": " ", "get_watch_playlist_for_youtube_music_api_detailed_": "Get a watch list of tracks. This watch playlist appears when you press play on a track in YouTube Music.\n\n\nList of watch playlist items. The counterpart key is optional and only appears if a song has a corresponding video counterpart (UI song/video switcher).", "getdraft_for_nhl_stats_and_live_data": " ", "getfutureeventsbytopic_for_azure": "Get future Azure events by topic.", "history_for_xxxtremelightningrouletteapi": "Histories of the last 30 spins", "inn_general_director_for_dimondevosint": "Returns the general director of a company by INN nymber.", "latest_outcome_for_xxxtremelightningrouletteapi": "last spin details and Outcome Data", "mostrecentshortvolume_for_short": "MostRecentShortVolume", "n_for_newapi": "new var", "test_for_paultest": "test", "the_calendar_of_prices_for_a_week_for_flight_data_v2": "Brings the prices for the nearest dates to the target ones back"}, "aseqs": [{"api_name": "latest_outcome_for_xxxtremelightningrouletteapi", "api_action": "\nAction: latest_outcome_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_xxxtremelightningrouletteapi", "api_action": "\nAction: history_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_xxxtremelightningrouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi"}}]}
{"URL": "7326", "query": "As a content creator, I'm always looking for new meme templates to engage my audience. Can you suggest meme templates that are currently trending? It would be great if you could also provide me with the available fonts to add captions and text in different styles.", "api_names": ["templates_for_meme_generator_and_template_database", "fonts_for_meme_generator_and_template_database", "Finish", "about_for_whatsapp_scraper", "book_list_and_chapter_counts_api_for_complete_study_bible", "storageexists_for_aspose_diagram_cloud", "getinventory_for_privatepublicapi", "description_for_numerology_api", "get_categories_of_jokes_for_world_of_jokes", "ec_for_arespass", "countries_by_bookie_for_surebets_2", "list_of_live_events_for_flashlive_sports", "get_specific_job_for_odesk_apis", "tournament_list_for_ultimate_tennis", "1_obter_c_digo_do_chat_code_to_chat_for_compras_net_api", "getuserbyname_for_apfd", "ev_for_ev", "get_twitter_feed_for_all_crypto_news_feed"], "api_descs": {"1_obter_c_digo_do_chat_code_to_chat_for_compras_net_api": "Obter Código do Chat", "Finish": "No description available.", "about_for_whatsapp_scraper": "This endpoint will return the `About` info of the Whatsapp for business number, and when the value was set.", "book_list_and_chapter_counts_api_for_complete_study_bible": "Lists all books of the Bible, abbreviations, and chapter counts. Can be used as a reference for a chapter selection screen", "countries_by_bookie_for_surebets_2": "This endpoint gets all available links. In addition you will have a URL to the leagues. (not every bookie included)", "description_for_numerology_api": " ", "ec_for_arespass": " ", "ev_for_ev": "get data, place parameter page to paginate list by 1000 object. ex.: *?page=2*", "fonts_for_meme_generator_and_template_database": "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins", "get_categories_of_jokes_for_world_of_jokes": "Get all available categories of our Jokes collection which can be used to filter jokes based on specific category.", "get_specific_job_for_odesk_apis": "Returns the complete job object for the referenced job, this is only available to users with manage_recruiting permissions within the team that the job is posted in.", "get_twitter_feed_for_all_crypto_news_feed": "Returns Twitter Feed.", "getinventory_for_privatepublicapi": "Returns a map of status codes to quantities", "getuserbyname_for_apfd": " ", "list_of_live_events_for_flashlive_sports": "Get list of live events. Use `/live-update` to get changes in live events!", "storageexists_for_aspose_diagram_cloud": " ", "templates_for_meme_generator_and_template_database": "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**.", "tournament_list_for_ultimate_tennis": "Via this endpoint, you can retrieve the list of all tournaments to be played in a selected year.  We return some basic info about every row such as tournament venue, surface, winners, etc. If you want to have all the details regarding the matches played in a single tournament you can use the **Tournament Results by Id and Year** endpoint"}, "aseqs": [{"api_name": "templates_for_meme_generator_and_template_database", "api_action": "\nAction: templates_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "fonts_for_meme_generator_and_template_database", "api_action": "\nAction: fonts_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "templates_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fonts_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "templates_for_meme_generator_and_template_database"}}]}
{"URL": "22601", "query": "I'm organizing a game night and need to roll dice for various scenarios. Can you provide me with a random outcome for skill checks and combat encounters? It would be great if I could also roll dice to generate character stats. Please assist me with these requirements.", "api_names": ["roll_for_diceforge", "Finish", "statroll_for_diceforge", "user_info_not_stable_for_tiktok_v4", "get_quotes_by_keyword_for__quotes_api", "search_country_by_name_for_location_and_time", "webtoons_list_paginated_for_manga_scrapper", "get_price_history_by_id_for_steam_market_and_store", "health_for_stampr", "search_music_for_kwai", "autosuggest_for_keyword_autosuggest", "artist_singles_for_spotify"], "api_descs": {"Finish": "No description available.", "artist_singles_for_spotify": "Get artist singles", "autosuggest_for_keyword_autosuggest": "autosuggest and find related keywords for a given keyword. SEO-friendly", "get_price_history_by_id_for_steam_market_and_store": "For a given ID, get the price history together with the number of items sold.", "get_quotes_by_keyword_for__quotes_api": " ", "health_for_stampr": "", "roll_for_diceforge": "Rolls a set of dice and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nsides (integer): A list of integers representing the number of sides for each die.\ncount (integer): A list of integers representing the number of times to roll each die. Defaults to 1 if not provided.\nmodifier (integer): A list of integers representing the modifier to apply to the total of each die roll.\nadvantage (boolean): If set to true, rolls each die twice and takes the higher result.\ndisadvantage (boolean): If set to true, rolls each die twice and takes the lower result.", "search_country_by_name_for_location_and_time": "Get details of the country specified by name, fuzzy search is supported. Up to 10 records for countries with similar name may be returned. Information includes country name, capital, area, population, languages, neighbors, phone code, postal code, and more.", "search_music_for_kwai": "Search Music API", "statroll_for_diceforge": "Rolls 4d6 for generating character stats, dropping the lowest die result from the total, and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nmodifier (integer): An integer representing the modifier to apply to the total of the stat roll.", "user_info_not_stable_for_tiktok_v4": "Get User Information By \"unique_id\",\nand the endpoint will return user data, including => id, nickname, bio, secUid, avatar, statistics", "webtoons_list_paginated_for_manga_scrapper": "Make request to fetch webtoon's series collection from a specific provider."}, "aseqs": [{"api_name": "roll_for_diceforge", "api_action": "\nAction: roll_for_diceforge\nAction Input: {\n  \"sides\": 20,\n  \"count\": 1\n}", "api_reaction": null}, {"api_name": "roll_for_diceforge", "api_action": "\nAction: roll_for_diceforge\nAction Input: {\n  \"sides\": 6,\n  \"count\": 2\n}", "api_reaction": null}, {"api_name": "roll_for_diceforge", "api_action": "\nAction: roll_for_diceforge\nAction Input: {\n  \"sides\": 6,\n  \"count\": 1\n}", "api_reaction": null}, {"api_name": "statroll_for_diceforge", "api_action": "\nAction: statroll_for_diceforge\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "roll_for_diceforge"}}, {"state": "generated_by_agent", "aseq": {"api_name": "roll_for_diceforge"}}, {"state": "generated_by_agent", "aseq": {"api_name": "roll_for_diceforge", "api_action": "\nAction: roll_for_diceforge\nAction Input: {\n  \"sides\": 8,\n  \"count\": 2\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "roll_for_diceforge", "api_action": "\nAction: roll_for_diceforge\nAction Input: {\n  \"sides\": 20,\n  \"count\": 1\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "roll_for_diceforge", "api_action": "\nAction: roll_for_diceforge\nAction Input: {\n  \"sides\": 6,\n  \"count\": 1\n}", "api_reaction": null}}]}
{"URL": "75761", "query": "I would like to translate the text 'Tomorrow is another day' into French. Additionally, could you generate relevant hashtags and keywords from the same text? Thank you.", "api_names": ["hashtags_for_ai_writer", "translation_for_ai_writer", "Finish", "get_quotes_by_genre_for_quotsy", "downloadfile_for_groupdocs_editor_cloud", "weather_for_kayuloweather", "get_anime_news_list_for_anime_news_net", "peer_ratio_averages_for_marketci_analytics", "publications_for_ig_private_api", "users_for_seeding_data", "tariff_plans_api_for_mobile_recharge_plans_api_tariff_plans_free", "is_it_up_for_scrape_for_me"], "api_descs": {"Finish": "No description available.", "downloadfile_for_groupdocs_editor_cloud": " ", "get_anime_news_list_for_anime_news_net": "Get the most up-to-date anime list up to date and in real time", "get_quotes_by_genre_for_quotsy": "returns first 10 list of quotes for the genre", "hashtags_for_ai_writer": "Generate hashtags from a given text.", "is_it_up_for_scrape_for_me": "check the server is working \ninsteed of \"up\" in the link you can type anything", "peer_ratio_averages_for_marketci_analytics": "An Average of Company Peer Ratios for TTM Data", "publications_for_ig_private_api": "Publications", "tariff_plans_api_for_mobile_recharge_plans_api_tariff_plans_free": "Just send the operator and circle and GET ALL PLANS according to circle and operator our api", "translation_for_ai_writer": "Translate content into any language just enter the language name.", "users_for_seeding_data": "Get 100 users with en_US locale and gender male", "weather_for_kayuloweather": "Obtain weather data for the specified location.\n\nThe `dataSets` query parameter is used to obtain different data, like forecasts and current weather. Thus not all query parameters are needed for every data set. See the description of the query parameters to identify, which parameter is needed for which data set."}, "aseqs": [{"api_name": "translation_for_ai_writer", "api_action": "\nAction: translation_for_ai_writer\nAction Input: {\n  \"text\": \"Tomorrow is another day\",\n  \"language\": \"fr\"\n}", "api_reaction": null}, {"api_name": "hashtags_for_ai_writer", "api_action": "\nAction: hashtags_for_ai_writer\nAction Input: {\n  \"text\": \"Tomorrow is another day\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "translation_for_ai_writer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "hashtags_for_ai_writer", "api_action": "{\"text\": \"Tomorrow is another day\", \"language\": \"fr\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "translation_for_ai_writer", "api_action": "{\"text\": \"Tomorrow is another day\", \"language\": \"fr\"}", "api_reaction": null}}]}
{"URL": "74801", "query": "My poetry club is hosting a competition and we need a variety of poems. Can you provide us with poems that have a specific number of lines? Additionally, it would be great if we could explore poems that contain a specific line to add some diversity to the competition.", "api_names": ["linecount_linecount_for_poetry_db", "lines_line_for_poetry_db", "Finish", "equity_live_for_quotient", "search_for_recash", "request_all_eu_vat_rates_for_vatlayer", "search_user_for_tiktok_download_video_", "questions_for_bigbox", "get_option_delivery_price_for_bybit", "advance_x_signed_query_payload_beta_for_opensea_graphql", "get_global_indices_by_technical_for_global_stock_market_api_data", "stock_get_dividends_splits_for_webull", "business_units_get_reviews_for_unofficial_trust_pilot", "retrieve_response_for_best_paraphrasing_api", "proxy_requests_for_ssh_honeypot"], "api_descs": {"Finish": "No description available.", "advance_x_signed_query_payload_beta_for_opensea_graphql": "This endpoint provides a verified request template based on the latest consecutive request.", "business_units_get_reviews_for_unofficial_trust_pilot": "Get reviews related to a business unit", "equity_live_for_quotient": "Return current market price data given the input parameters.", "get_global_indices_by_technical_for_global_stock_market_api_data": "World financial market to get global Indices with respect to technical", "get_option_delivery_price_for_bybit": "Get option delivery price", "linecount_linecount_for_poetry_db": "All poems on Poetry DB with a specific number of lines", "lines_line_for_poetry_db": "All poems on Poetry DB containing a specific line", "proxy_requests_for_ssh_honeypot": "", "questions_for_bigbox": "The Questions Parameters are applicable when making a request with type=questions to retrieve customer Questions for a single product on Home Depot - the product is specified using either the item_id or url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nQuestions are retrieved from the customer questions page for a single product on Home Depot.", "request_all_eu_vat_rates_for_vatlayer": "Use the API's \"rate_list\" endpoint to obtain standard & reduced VAT rates for all 28 current member states", "retrieve_response_for_best_paraphrasing_api": "With the JOB ID generated on the \"Rewriter\" endpoint, you will be able to get the response from that rewrite.", "search_for_recash": "This will filter what you want from the products on the data base", "search_user_for_tiktok_download_video_": "get user list by keywords", "stock_get_dividends_splits_for_webull": "Get stock dividends and splits"}, "aseqs": [{"api_name": "linecount_linecount_for_poetry_db", "api_action": "\nAction: linecount_linecount_for_poetry_db\nAction Input: {\n  \"linecount\": 10\n}", "api_reaction": null}, {"api_name": "lines_line_for_poetry_db", "api_action": "\nAction: lines_line_for_poetry_db\nAction Input: {\n  \"line\": \"And so make life, death, and that vast for-ever\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "lines_line_for_poetry_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "lines_line_for_poetry_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "lines_line_for_poetry_db"}}]}
{"URL": "32387", "query": "I am planning a road trip and I want to explore different locations. Can you provide me with the meta information for the PixelStix code 'BAAA'? Additionally, I would like to know if there are any associated Maps or Galleries with the code.", "api_names": ["pixelstix_meta_for_pixelstix", "Finish", "pixelstix_map_meta_for_pixelstix", "get_a_specific_payment_card_by_card_number_for_human_resources_api", "getarchivereport_for_experian_credit_report_score", "allowance_for_tribal_mail_translate", "aljazeera_for_arabic_news_api", "user_profile_picture_for_instagram_v13", "trip_details_for_flixbus", "get_cards_collection_for_lost_ark_simple", "downloadfile_for_aspose_cells_cloud", "video_streaming_data_for_youtube", "webcams_list_limit_limit_offset_for_webcams_travel", "activity_values_for_bmr_and_tmr", "v1_hashtag_hashtag_id_for_tokapi_mobile_version", "api_documentation_for_pikwy", "get_company_cash_flow_for_finance_data", "codepoint_for_unicode_codepoints"], "api_descs": {"Finish": "No description available.", "activity_values_for_bmr_and_tmr": "Returns a list of possible activity values that are needed to compute TMR", "aljazeera_for_arabic_news_api": "مسار يقوم باسترجاع الاخبار من موقع الجزيرة", "allowance_for_tribal_mail_translate": "This endpoint shows your current left over allowance for the month.", "api_documentation_for_pikwy": "Use our simple API to capture screenshots of websites.", "codepoint_for_unicode_codepoints": "show detailed information about a single codepoint. You can specify fields of interest with the “property” parameter: codepoint/1234?property=age,uc,lc", "downloadfile_for_aspose_cells_cloud": " ", "get_a_specific_payment_card_by_card_number_for_human_resources_api": "This endpoint gets one record by a specific card number that is unique for each card in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...", "get_cards_collection_for_lost_ark_simple": "Get List of all** Lost Ark Cards** details", "get_company_cash_flow_for_finance_data": "Get company cash flow latest data.", "getarchivereport_for_experian_credit_report_score": " ", "pixelstix_map_meta_for_pixelstix": "A PixelStix Map is a collection of PREMIUM PixelStix that have been assigned latitude and longitude coordinates. A PREMIUM PixelStix can belong to multiple Maps and is also known as a Gallery.\n\nThis endpoint will retrieve information about your particular Map/Gallery. The name used in the endpoint is the same name that you will see in the list of galleries when using the PixelStix app.", "pixelstix_meta_for_pixelstix": "This endpoint will retrieve the meta information for a given PixelStix code and any Maps/Galleries it may be associated with if the PixelStix is of type 'PREMIUM'", "trip_details_for_flixbus": "Get a trip details by trip uid", "user_profile_picture_for_instagram_v13": "Get instagram user profile picture by username.", "v1_hashtag_hashtag_id_for_tokapi_mobile_version": "Search videos by hashtag ID", "video_streaming_data_for_youtube": "Video Streaming Data", "webcams_list_limit_limit_offset_for_webcams_travel": "This is a modifier. Returns the list of webcams sliced by {limit}. The optional offset is given by {offset}. Required: {limit}. The maximum value for {limit} is 50. {offset} defaults to 0. If limit is not given, then a default of limit=10 is applied."}, "aseqs": [{"api_name": "pixelstix_meta_for_pixelstix", "api_action": "\nAction: pixelstix_meta_for_pixelstix\nAction Input: {\n  \"pixelstix_code\": \"BAAA\"\n}", "api_reaction": null}, {"api_name": "pixelstix_map_meta_for_pixelstix", "api_action": "\nAction: pixelstix_map_meta_for_pixelstix\nAction Input: {\n  \"pixelstix_map_name\": \"BAAA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "pixelstix_meta_for_pixelstix"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pixelstix_map_meta_for_pixelstix"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pixelstix_map_meta_for_pixelstix", "api_action": "\nAction: pixelstix_map_meta_for_pixelstix\nAction Input: {\n  \"pixelstix_map_name\": \"BAAA\"\n}", "api_reaction": null}}]}
{"URL": "30030", "query": "I run an advertising agency and I need to generate ad copy for a new client. Can you fetch the content for me using the threadId '6a6bbc6e-5896-45b6-8681-0a885e195f9a' and promptId 'be5272ef-fbda-4e6d-abf7-0fe88b937693'? I require at least ten ad descriptions and twenty ad headlines. Additionally, validate my API key.", "api_names": ["Finish", "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation", "api_key_validation_for_adcopy_ai_google_ads_ai_text_generation", "get_list_of_voices_for_text_to_speech_pro", "leaguehomestandings_for_handballapi", "get_for_cloudways_v2", "pascal_versions_for_pascal_code_compiler", "users_for_seeding_data", "get_web_detection_for_web_detection", "users_userid_dutystatus_for_signl4_critical_mobile_alerting", "post_with_cursor_for_instagram_bulk_profile_scrapper", "about_info_for_bulk_whatsapp_validator", "get_ecoindex_analysis_list_version_ecoindexes_get_for_ecoindex", "related_videos_for_youtube_v3_alternative", "personasapi_for_personas"], "api_descs": {"Finish": "No description available.", "about_info_for_bulk_whatsapp_validator": "This endpoint will return the *About* state of the WA number on the query.", "api_key_validation_for_adcopy_ai_google_ads_ai_text_generation": "This endpoint is used only to validate API Keys, it simply returns a status of 200 and a message of 'OK'. \nThe use of this endpoint is Free, and is useful for server-to-server FREE API validation.", "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation": "Provide async prompt and threadid to fetch content.\nThis endpoint is Free and you are allowed to pull it once every 2 seconds to fetch your content.", "get_ecoindex_analysis_list_version_ecoindexes_get_for_ecoindex": "This returns a list of ecoindex analysis corresponding to query filters and the given version engine. The results are ordered by ascending date", "get_for_cloudways_v2": "Response Class (Status 200)", "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices", "get_web_detection_for_web_detection": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=“image_url”)", "leaguehomestandings_for_handballapi": "Get home standings for a handball unique tournament and season", "pascal_versions_for_pascal_code_compiler": "Pascal Versions", "personasapi_for_personas": "RapidAPI’s official API that allows you to add or update your API’s definition.", "post_with_cursor_for_instagram_bulk_profile_scrapper": "This API return time will be faster, As this fetch  profile data directly from userid (pk)\n\nScrap instagram profile by pk or username", "related_videos_for_youtube_v3_alternative": "Get the videos related to the provided video.", "users_for_seeding_data": "Get 100 users with en_US locale and gender male", "users_userid_dutystatus_for_signl4_critical_mobile_alerting": "Returns a object with duty information."}, "aseqs": [{"api_name": "api_key_validation_for_adcopy_ai_google_ads_ai_text_generation", "api_action": "\nAction: api_key_validation_for_adcopy_ai_google_ads_ai_text_generation\nAction Input: {}", "api_reaction": null}, {"api_name": "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation", "api_action": "\nAction: fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation\nAction Input: {\n  \"threadid\": \"6a6bbc6e-5896-45b6-8681-0a885e195f9a\",\n  \"promptid\": \"be5272ef-fbda-4e6d-abf7-0fe88b937693\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the ad copy using the provided threadId and promptId. I also need to validate my API key.\n\t\"api_name\": \"api_key_validation_for_adcopy_ai_google_ads_ai_text_generation\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation", "api_action": "\nAction: fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation\nAction Input: {\"threadId\": '6a6bbc6e-5896-45b6-8681-0a885e195f9a', \"promptId\": 'be5272ef-fbda-4e6d-abf7-0fe88b937693'}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation", "api_action": "\nAction: fetch_async_content_for_adcopy_ai_google_ads_ai_text_generation\nAction Input: {\n  \"threadid\": \"6a6bbc6e-5896-45b6-8681-0a885e195f9a\",\n  \"promptid\": \"be5272ef-fbda-4e6d-abf7-0fe88b937693\"\n}", "api_reaction": null}}]}
{"URL": "51125", "query": "I am developing a language proficiency test and I need a tool to generate random words and sentences. Can you provide an API that generates a random word and another API that generates a random sentence? I want to use these APIs to create test questions for the test takers.", "api_names": ["generate_a_random_word_for_random_word_generator", "generate_a_random_sentence_for_random_word_generator", "Finish", "user_followers_for_twitter_v4", "entreprise_par_rid_for_ridet_nc", "searchvideos_for_vimeo", "autocomplete_for_flixbus_v2", "actors_get_all_videos_for_online_movie_database", "checkseatavailability_for_irctc", "get_a_specific_quote_for_motivational_content", "g_olocaliser_les_partenaires_for_partenaires_mobilis", "read_case_type_by_name_for_yardillo", "get_all_latest_news_for_sri_lanka_news_api", "single_name_medium_for_nameforge", "reverse_search_by_image_for_webit_image_search", "get_all_physical_quantities_for_physical_quantities_constants_and_equations_", "year_end_billboard_200_albums_for_billboard_api_v2", "supported_languages_for_bing_web_search"], "api_descs": {"Finish": "No description available.", "actors_get_all_videos_for_online_movie_database": "Get all videos of actor or actress", "autocomplete_for_flixbus_v2": "Search for Flixbus stations", "checkseatavailability_for_irctc": "-", "entreprise_par_rid_for_ridet_nc": "Affiche les informations d'une entreprise de la Nouvelle Calédonie à partir de son rid.", "g_olocaliser_les_partenaires_for_partenaires_mobilis": "Récupérer tous les partenaires, ou récupérer tous les partenaires dans un rayon donné autour d'un point donné :\n\n- **nearByLon**= {longitude du centre du cercle de la zone de recherche}\n- **nearByLat**= {latitude du centre du cercle de la zone de recherche}\n- **nearByDistance**= {rayon du cercle de la zone de recherche}", "generate_a_random_sentence_for_random_word_generator": "Generate a random sentence", "generate_a_random_word_for_random_word_generator": "Scour through thousands of words from the RandomWordGenerator.com database", "get_a_specific_quote_for_motivational_content": "This endpoint fetches a specific quote using the provided 'id'.", "get_all_latest_news_for_sri_lanka_news_api": "Get latest news from all the news sources.This route return all the latest news from each news source at once", "get_all_physical_quantities_for_physical_quantities_constants_and_equations_": "This endpoint return back data of physical quantities", "read_case_type_by_name_for_yardillo": "Search a case type by its name. e.g. SensorX09", "reverse_search_by_image_for_webit_image_search": "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint.", "searchvideos_for_vimeo": "Search for videos.", "single_name_medium_for_nameforge": "Create single name.\nMax query length is 50 characters.", "supported_languages_for_bing_web_search": "These languages are supported for to search.", "user_followers_for_twitter_v4": "User Followers", "year_end_billboard_200_albums_for_billboard_api_v2": "Year end Billboard 200 Albums chart \nis yearly based. \n\nIf `year` is not supplied, will default to last year."}, "aseqs": [{"api_name": "generate_a_random_word_for_random_word_generator", "api_action": "\nAction: generate_a_random_word_for_random_word_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "generate_a_random_sentence_for_random_word_generator", "api_action": "\nAction: generate_a_random_sentence_for_random_word_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_word_for_random_word_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_sentence_for_random_word_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_word_for_random_word_generator"}}]}
{"URL": "65924", "query": "I'm creating an adult-themed mobile app and I need a random adult picture for the app icon. Please provide me with a picture from the 'blowjob' category. Also, it would be helpful if you could share a list of all the available tags in your API for further customization.", "api_names": ["Finish", "photo_for_rapid_porn", "all_tags_for_rapid_porn", "user_tweet_detail_for_twitter_pack_v2", "v1_sentiment_for_sentiment_by_api_ninjas", "shazam_songs_get_details_for_shazam", "search_suggest_for_kwai", "documentation_for_wordle_api", "product_by_name_for_company_consultation_reportero_industrial_mexicano_api", "event_starting_lineups_for_flashlive_sports", "predictions_for_groundhog_day_api", "v1_babynames_for_baby_names_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "all_tags_for_rapid_porn": "", "documentation_for_wordle_api": " ", "event_starting_lineups_for_flashlive_sports": "Get starting lineups by event ID", "photo_for_rapid_porn": "This is where the fun starts, replace category with a value to get ;))\nIf you get 500 Internal Server Error,\nPlease cross check your category inserted from the all-tags endpoint.", "predictions_for_groundhog_day_api": "Get all predictions for a given year.", "product_by_name_for_company_consultation_reportero_industrial_mexicano_api": "Return product data", "search_suggest_for_kwai": "Search Suggest API", "shazam_songs_get_details_for_shazam": "Get mapping id information between systems to use with other endpoints.", "user_tweet_detail_for_twitter_pack_v2": "Get user tweet and reply", "v1_babynames_for_baby_names_by_api_ninjas": "API Ninjas Baby Names API endpoint. Returns 10 baby name results.", "v1_sentiment_for_sentiment_by_api_ninjas": "Returns sentiment analysis score and overall sentiment for a given block of text."}, "aseqs": [{"api_name": "photo_for_rapid_porn", "api_action": "\nAction: photo_for_rapid_porn\nAction Input: {\n  \"category\": \"blowjob\"\n}", "api_reaction": null}, {"api_name": "all_tags_for_rapid_porn", "api_action": "\nAction: all_tags_for_rapid_porn\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_tags_for_rapid_porn"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_tags_for_rapid_porn"}}, {"state": "generated_by_agent", "aseq": {"api_name": "photo_for_rapid_porn", "api_action": "\nAction: photo_for_rapid_porn\nAction Input: {\n  \"category\": \"blowjob\"\n}", "api_reaction": null}}]}
{"URL": "1415", "query": "My friends and I are interested in investing in cryptocurrencies. Can you give us the current prices of Bitcoin, Ethereum, and Litecoin? We would also like to compare these prices with the prices of all world currencies. Please provide the necessary information to make an informed decision.", "api_names": ["get_currency_by_name_for_cion_prices_api", "git_all_world_currencies_prices_for_cion_prices_api", "Finish", "get_stocks_info_by_styleids_siteid_zappos_1_6pm_2_for_zappos_2022", "get_meta_data_deprecated_for_hotels", "user_for_instagram_downloader", "get_stream_title_for_gwyo_twitch", "getfaqsbytopic_for_election2020_smartable", "get_character_by_id_for_riordanverse_api", "getuserbyname_for_my_api_12345", "type_portfolio_get_credit_quality_for_morning_star", "films_for_argentina_movie_theatres", "coin_for_circulating_supply", "gettopsportmenu_for_sport_odds", "nft_tokens_in_collection_for_rich_nft_api_metadata"], "api_descs": {"Finish": "No description available.", "coin_for_circulating_supply": "This endpoint returns the value of given coin as parameter.", "films_for_argentina_movie_theatres": " ", "get_character_by_id_for_riordanverse_api": "Get individual character by ID\nOptions:\n\n- Limit → Limit amount of responses received\n- Step → Skip amount of characters", "get_currency_by_name_for_cion_prices_api": "get several states of one currency prices", "get_meta_data_deprecated_for_hotels": "Get locale meta data", "get_stocks_info_by_styleids_siteid_zappos_1_6pm_2_for_zappos_2022": "GET stocks info by siteId & styleIds", "get_stream_title_for_gwyo_twitch": "Get Stream Title (using username or id)\n( return an empty JSON object if not currently LIVE )", "getfaqsbytopic_for_election2020_smartable": "Get FAQs by topic.", "gettopsportmenu_for_sport_odds": "GetTopSportMenu data api", "getuserbyname_for_my_api_12345": "", "git_all_world_currencies_prices_for_cion_prices_api": "This end point will return back prices of world currencies", "nft_tokens_in_collection_for_rich_nft_api_metadata": "Get NFT tokens in specific collection.\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**Filter by traits example**:\ntraits=[{\"name\":\"type\",\"value\":\"Female\"}]\n\n**order_by: options** \nvalue\n-value\nrarity_rank_at\n-rarity_rank_at\npay_usd_value\n-pay_usd_value", "type_portfolio_get_credit_quality_for_morning_star": "Get credit quality as displayed in the Portfolio tab", "user_for_instagram_downloader": "get user info"}, "aseqs": [{"api_name": "get_currency_by_name_for_cion_prices_api", "api_action": "\nAction: get_currency_by_name_for_cion_prices_api\nAction Input: {\n  \"coinid\": \"bitcoin\"\n}", "api_reaction": null}, {"api_name": "get_currency_by_name_for_cion_prices_api", "api_action": "\nAction: get_currency_by_name_for_cion_prices_api\nAction Input: {\n  \"coinid\": \"ethereum\"\n}", "api_reaction": null}, {"api_name": "get_currency_by_name_for_cion_prices_api", "api_action": "\nAction: get_currency_by_name_for_cion_prices_api\nAction Input: {\n  \"coinid\": \"litecoin\"\n}", "api_reaction": null}, {"api_name": "git_all_world_currencies_prices_for_cion_prices_api", "api_action": "\nAction: git_all_world_currencies_prices_for_cion_prices_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_currency_by_name_for_cion_prices_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_currency_by_name_for_cion_prices_api", "api_action": "\nAction: get_currency_by_name_for_cion_prices_api\nAction Input: {\n  \"coinid\": \"ethereum\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_currency_by_name_for_cion_prices_api", "api_action": "\nAction: get_currency_by_name_for_cion_prices_api\nAction Input: {\n  \"coinid\": \"litecoin\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "git_all_world_currencies_prices_for_cion_prices_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_currency_by_name_for_cion_prices_api", "api_action": "\nAction: get_currency_by_name_for_cion_prices_api\nAction Input: {\n  \"coinid\": \"bitcoin\"\n}", "api_reaction": null}}]}
{"URL": "76767", "query": "I'm researching a company for a potential collaboration. Can you fetch the company details, such as its name, description, employee count, and industries, based on its LinkedIn URL 'https://www.linkedin.com/company/example/'? Furthermore, I'm interested in the number of job openings posted by the company.", "api_names": ["get_company_jobs_count_for_fresh_linkedin_company_data", "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data", "Finish", "content_analysis_for_seo_analysis", "liked_posts_for_kwai", "search_application_for_suggestuse", "root_for_pragmavantapi", "search_places_for_spott", "auto_complete_for_wayfair", "get_order_for__onboarding_project", "get_all_domaines_for_domaine_nc", "reverse_geocoding_for_rapidweather", "rotating_proxy_api_for_rotating_proxies", "get_time_series_metadata_for_quandl", "get_video_details_for_youtube_media_downloader", "fantasy_5_for_ca_lottery", "get_download_link_for_terabox_downloader", "v1_caloriesburned_for_calories_burned_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "auto_complete_for_wayfair": "Get auto suggestions by term or phrase", "content_analysis_for_seo_analysis": "Content Analysis endpoint", "fantasy_5_for_ca_lottery": "Fantasy 5 History", "get_all_domaines_for_domaine_nc": "Get all domain names", "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data": "Given a company’s LinkedIn URL, the API will return valuable data points in JSON format.", "get_company_jobs_count_for_fresh_linkedin_company_data": "Get number of opening jobs the company posted on LinkedIn. 1 request = 1 credit.", "get_download_link_for_terabox_downloader": "Get Download Link", "get_order_for__onboarding_project": " ", "get_time_series_metadata_for_quandl": "This call returns metadata for a specified time-series.", "get_video_details_for_youtube_media_downloader": "This endpoint fetches full details of a YouTube video, including URLs of videos, audios, thumbnails and subtitles as well as related videos and playlists.", "liked_posts_for_kwai": "Liked Posts API", "reverse_geocoding_for_rapidweather": "Reverse geocoding allows to get name of the location (city name or area name) by using geografical coordinates (lat, lon). The **limit **parameter in the API call allows you to cap how many location names you will see in the API response.", "root_for_pragmavantapi": "Root resource", "rotating_proxy_api_for_rotating_proxies": "API will respond with a random proxy currently active in the pool upon each request.", "search_application_for_suggestuse": "Search Application", "search_places_for_spott": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.", "v1_caloriesburned_for_calories_burned_by_api_ninjas": "API Ninjas Calories Burned API endpoint."}, "aseqs": [{"api_name": "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data", "api_action": "\nAction: get_company_data_by_linkedin_url_for_fresh_linkedin_company_data\nAction Input: {\n  \"linkedin_url\": \"https://www.linkedin.com/company/example/\"\n}", "api_reaction": null}, {"api_name": "get_company_jobs_count_for_fresh_linkedin_company_data", "api_action": "\nAction: get_company_jobs_count_for_fresh_linkedin_company_data\nAction Input: {\n  \"company_id\": \"142280\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_company_jobs_count_for_fresh_linkedin_company_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data", "api_action": "\nAction: get_company_data_by_linkedin_url_for_fresh_linkedin_company_data\nAction Input: {\n  \"linkedin_url\": \"https://www.linkedin.com/company/example/\"\n}", "api_reaction": null}}]}
{"URL": "10015", "query": "I'm creating a website and I need visually appealing images. Can you help me find relevant images for my website? Additionally, I'm interested in the currently trending images.", "api_names": ["trending_for_bing_image_search", "image_search_for_bing_image_search", "Finish", "get_the_next_dividend_payout_date_for_sundayfinance", "planetaryoverview_for_horostory", "reviews_list_deprecated_for_target", "flights_list_by_airline_for_flight_radar", "get_session_info_for_gigopost", "geocode_for_uganda_api", "product_offers_for_real_time_product_search", "api_pricetobook_for_finanzoo_api_fundamentals", "disposable_domain_and_suggest_domain_for_fast_email_verifier", "tags_trending_for_biztoc", "market_data_for_stock_sentiment_api", "get_recurring_characters_for_new_girl", "get_statics_for_league_of_legends_esports", "get_taboo_words_from_word_for_taboo_api", "aftavb_for_aftab"], "api_descs": {"Finish": "No description available.", "aftavb_for_aftab": "dsafadasd", "api_pricetobook_for_finanzoo_api_fundamentals": "contains the price-book ratio (P / B ratio) for each past trading day", "disposable_domain_and_suggest_domain_for_fast_email_verifier": "Find out if the domain is disposable and get a suggested domain.", "flights_list_by_airline_for_flight_radar": "List flights by airline", "geocode_for_uganda_api": "This endpoint allows you to lookup locations in Uganda by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_recurring_characters_for_new_girl": "This endpoint gets the recurring characters within the show.", "get_session_info_for_gigopost": "Returns session information 1685369452715x643061726475037300", "get_statics_for_league_of_legends_esports": "This endpoint gives you champion statics. This statics can filtered time period and league.", "get_taboo_words_from_word_for_taboo_api": "Provide your own word and get the taboo words back.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "get_the_next_dividend_payout_date_for_sundayfinance": "Feed in the ticke and get the next dividend payout date.", "image_search_for_bing_image_search": "Get relevant images for a given query.", "market_data_for_stock_sentiment_api": "Returns a list of daily stock metrics such as opening, closing, highest and lowest prices.", "planetaryoverview_for_horostory": "get the Planetary Overview of the day", "product_offers_for_real_time_product_search": "Get all offers available for a product.", "reviews_list_deprecated_for_target": "List reviews relating to a product", "tags_trending_for_biztoc": "Get list of trending tags for `{page_id}`, sorted by popularity. The `{tag}` can be used for the **Tag/News** endpoint.", "trending_for_bing_image_search": "Get currently trending images."}, "aseqs": [{"api_name": "image_search_for_bing_image_search", "api_action": "\nAction: image_search_for_bing_image_search\nAction Input: {\n  \"q\": \"website design\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "trending_for_bing_image_search", "api_action": "\nAction: trending_for_bing_image_search\nAction Input: {}", "api_reaction": null}, {"api_name": "image_search_for_bing_image_search", "api_action": "\nAction: image_search_for_bing_image_search\nAction Input: {\n  \"q\": \"web design\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "trending_for_bing_image_search", "api_action": "\nAction: trending_for_bing_image_search\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "image_search_for_bing_image_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_bing_image_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "image_search_for_bing_image_search", "api_action": "\nAction: image_search_for_bing_image_search\nAction Input: {\n  \"q\": \"currently trending website design\",\n  \"count\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_bing_image_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "image_search_for_bing_image_search", "api_action": "\nAction: image_search_for_bing_image_search\nAction Input: {\n  \"q\": \"website design trending\",\n  \"count\": 5\n}", "api_reaction": null}}]}
{"URL": "31933", "query": "I'm currently preparing a presentation on various topics and I need some inspirational quotes. Can you suggest some topics that would be suitable for my presentation? Additionally, I would like to have a random quote related to each suggested topic.", "api_names": ["Finish", "author_for_quotes_diffusion", "random_for_quotes_diffusion", "authenticated_users_data_for_geeklist", "get_cryptocurrency_details_for_crypto_update_live", "mmaoctogonimage_for_mmaapi", "list_applications_for_geolocation_simulation_for_mobile_apps", "postalcode_for_phone_and_email_validator_v2", "authentic_money_transfer_portal_for_fastmoney", "getlanguagepairs_for_groupdocs_translation_cloud", "get_movie_for_magisto", "test_for_underscore_test", "au_car_averages_for_car_averages", "api_getcountries_for_similarweb_historical_data_", "medium_for_check_username"], "api_descs": {"Finish": "No description available.", "api_getcountries_for_similarweb_historical_data_": "Returns country shares by months", "au_car_averages_for_car_averages": "AU Car averages", "authentic_money_transfer_portal_for_fastmoney": "Authentic Money Transfer Portal", "authenticated_users_data_for_geeklist": "", "author_for_quotes_diffusion": " ", "get_cryptocurrency_details_for_crypto_update_live": "This endpoint gives live detailed information about the current value of a particular cryptocurrency.", "get_movie_for_magisto": "Downloading of the completed movie", "getlanguagepairs_for_groupdocs_translation_cloud": " ", "list_applications_for_geolocation_simulation_for_mobile_apps": "List all your applications", "medium_for_check_username": "Check username on Medium", "mmaoctogonimage_for_mmaapi": "Get MMA octagon image", "postalcode_for_phone_and_email_validator_v2": "Postal Code or Zip Code to Location For USA only", "random_for_quotes_diffusion": " ", "test_for_underscore_test": "/test"}, "aseqs": [{"api_name": "random_for_quotes_diffusion", "api_action": "\nAction: random_for_quotes_diffusion\nAction Input: {}", "api_reaction": null}, {"api_name": "author_for_quotes_diffusion", "api_action": "\nAction: author_for_quotes_diffusion\nAction Input: {}", "api_reaction": null}, {"api_name": "random_for_quotes_diffusion", "api_action": "\nAction: random_for_quotes_diffusion\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_for_quotes_diffusion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_for_quotes_diffusion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_for_quotes_diffusion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_for_quotes_diffusion"}}]}
{"URL": "70253", "query": "I'm planning a trip to Europe and need to convert my currency from USD to Euros. Can you provide me with the current exchange rate and a list of available currencies? Additionally, I'd like to know the exchange rate from Euros to British Pounds.", "api_names": ["currency_list_for_currency_ex", "get_exchange_rate_for_currency_ex", "Finish", "amberwaves_retrieve_paged_collection_for_usda", "directory_for_phone", "channel_community_posts_for_yt_api", "yahoofinance_for_crypto_news_v2", "extract_download_links_for_instagram_downloader_reels_and_videos_downloader", "get_m1lhao_for_euro_millions", "autocomplete_cities_for_autocomplete_india", "macronutrient_distribution_for_health_calculator_api", "retrieve_user_s_food_preferences_for_bespoke_diet_generator"], "api_descs": {"Finish": "No description available.", "amberwaves_retrieve_paged_collection_for_usda": "Retrieves a paged collection of amber waves content nodes filtered by a particular section alias, ordered by descending release date.", "autocomplete_cities_for_autocomplete_india": "Autocomplete Cities", "channel_community_posts_for_yt_api": "Get community post listing and channel details.\nQuota cost is 1 unit.", "currency_list_for_currency_ex": "List of available currency in JSON format.", "directory_for_phone": "Get all the Local Area Codes from a given Country", "extract_download_links_for_instagram_downloader_reels_and_videos_downloader": "Add url parameter to get download links.", "get_exchange_rate_for_currency_ex": "Return excahnge rate of two currency codes.", "get_m1lhao_for_euro_millions": "Get last drawn result of M1lhao (M1lhão (‘The Million’) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of €1 million on Friday evenings.)", "macronutrient_distribution_for_health_calculator_api": "This endpoint calculates the optimal distribution of macronutrients (carbohydrates, proteins, and fats) based on factors such as activity level, body composition goals, and dietary preferences.", "retrieve_user_s_food_preferences_for_bespoke_diet_generator": "Retrieve the list of all ingredients that will be excluded from user's diets.", "yahoofinance_for_crypto_news_v2": "Get the latest news from Yahoo Finance."}, "aseqs": [{"api_name": "currency_list_for_currency_ex", "api_action": "\nAction: currency_list_for_currency_ex\nAction Input: {}", "api_reaction": null}, {"api_name": "get_exchange_rate_for_currency_ex", "api_action": "\nAction: get_exchange_rate_for_currency_ex\nAction Input: {\n  \"to\": \"EUR\",\n  \"is_from\": \"USD\"\n}", "api_reaction": null}, {"api_name": "get_exchange_rate_for_currency_ex", "api_action": "\nAction: get_exchange_rate_for_currency_ex\nAction Input: {\n  \"to\": \"GBP\",\n  \"is_from\": \"USD\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_rate_for_currency_ex"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_exchange_rate_for_currency_ex\",\n\t\"action_input\": \"{\\\"from\\\":\\\"USD\\\",\\\"to\\\":\\\"EUR\\\"}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_rate_for_currency_ex", "api_action": "\nAction: get_exchange_rate_for_currency_ex\nAction Input: {\n  \"to\": \"GBP\",\n  \"is_from\": \"EUR\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exchange_rate_for_currency_ex", "api_action": "\nAction: get_exchange_rate_for_currency_ex\nAction Input: {\n  \"to\": \"EUR\",\n  \"is_from\": \"USD\"\n}", "api_reaction": null}}]}
{"URL": "60073", "query": "Can you help me download my FreeFloatUs portfolio and provide me with the pending trades for my freefloat strategies? I need to review my portfolio and make sure there are no pending trades.", "api_names": ["portfolio_for_freefloatus", "trades_pending_for_freefloatus", "Finish", "iq_personality_test_questionnaire_for_personality_quest", "historical_traffic_series_for_chartbeat", "get_search_suggestions_for_coinranking", "age_calculator_for_age_calculator", "get_all_joke_categories_for_the_dozen_the_yo_mamsa_roast_api", "get_cards_collection_for_lost_ark_simple", "list_of_special_markets_for_pinnacle_odds", "get_latest_price_for_oil_thai_price", "auto_complete_for_target"], "api_descs": {"Finish": "No description available.", "age_calculator_for_age_calculator": "Calculates age based on the requested date. Accepts different formats and Time Zones.", "auto_complete_for_target": "Get suggestion by term or phrase", "get_all_joke_categories_for_the_dozen_the_yo_mamsa_roast_api": "Returns a list of all joke categories, whose as values can be used as a path or query parameter in other endpoints.", "get_cards_collection_for_lost_ark_simple": "Get List of all** Lost Ark Cards** details", "get_latest_price_for_oil_thai_price": "Get latest thai oil price", "get_search_suggestions_for_coinranking": "Search suggestions are a quick and easy way to find data on coinranking. The endpoint only accepts one parameter; a query. With this query you can find currencies (including fiat), exchanges and markets, by their symbol or name. The response always returns a set of the most prominent coins, exchanges and markets matching your query.", "historical_traffic_series_for_chartbeat": "Returns series of the traffic sources and/or page load time where the default time span of each data point is 5 minutes. You should use this call if you want to see a more granular picture of your data.", "iq_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for IQ Personality Test.", "list_of_special_markets_for_pinnacle_odds": "Get a list of special markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value. You must always use the since parameter, after the first call. Please note that prematch and live events are different", "portfolio_for_freefloatus": "Download your freefloat portfolio.", "trades_pending_for_freefloatus": "Get pending trades for your freefloat strategies."}, "aseqs": [{"api_name": "portfolio_for_freefloatus", "api_action": "\nAction: portfolio_for_freefloatus\nAction Input: {}", "api_reaction": null}, {"api_name": "portfolio_for_freefloatus", "api_action": "\nAction: portfolio_for_freefloatus\nAction Input: {}", "api_reaction": null}, {"api_name": "trades_pending_for_freefloatus", "api_action": "\nAction: trades_pending_for_freefloatus\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "portfolio_for_freefloatus"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trades_pending_for_freefloatus"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trades_pending_for_freefloatus"}}, {"state": "generated_by_agent", "aseq": {"api_name": "portfolio_for_freefloatus"}}]}
{"URL": "28553", "query": "I'm a cryptocurrency enthusiast and I'm interested in the OHLCV metrics for the BTC/USDT pair on the BINANCE exchange. Could you provide the data for the past month, sorted in descending order?", "api_names": ["metrics_ohlcv_trial_for_cryptocurrency_financial_data", "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "Finish", "get_individual_result_by_id_for_robberydata", "get_last_n_days_scan_counts_for_tag_for_pixelstix", "config_for_torrenthunt", "search_for_uk_postcode", "getforecast_mega_for_the_apophis", "extracttext_for_images_infos_api2", "getdistancematrix_for_woosmap", "rates_for_nitro", "locations_list_for_canadian_gas_prices", "getesgnews_for_gaialens_esg_news", "world_climate_change_for_climate_change_v31", "getpoints_for_raastaapi"], "api_descs": {"Finish": "No description available.", "config_for_torrenthunt": "Get config and available sites", "extracttext_for_images_infos_api2": "Extract text from an image", "get_individual_result_by_id_for_robberydata": "Get Individual Result by ID", "get_last_n_days_scan_counts_for_tag_for_pixelstix": "Gets the number of scans over the last N days, per day", "getdistancematrix_for_woosmap": "Get distances and durations for a matrix of origins and destinations, based on the recommended route between start and end points for a specified travel mode.\n", "getesgnews_for_gaialens_esg_news": "ESG news API with a state of the art algorithm tracking thousands of news sources, social media and NGOs in real-time. The results include ESG specific topics including SASB and UN SDGs and a few other important ESG themes such as Modern Slavery and Gender Equality.", "getforecast_mega_for_the_apophis": "This endpoint is part of Mega subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 30 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h", "getpoints_for_raastaapi": "This will retrieve specific points from the database and return it.", "locations_list_for_canadian_gas_prices": "Returns full object representing collection of valid locations for this API.", "metrics_ohlcv_pro_for_cryptocurrency_financial_data": "Price and volume metrics for spot markets", "metrics_ohlcv_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests", "rates_for_nitro": "This endpoint retrieves all rates.", "search_for_uk_postcode": "Find an street or post code using one of more key words", "world_climate_change_for_climate_change_v31": "Endpoint showing Climate changes all over the the world"}, "aseqs": [{"api_name": "metrics_ohlcv_trial_for_cryptocurrency_financial_data", "api_action": "\nAction: metrics_ohlcv_trial_for_cryptocurrency_financial_data\nAction Input: {\n  \"market_venue\": \"BINANCE\",\n  \"symbol\": \"BTC\",\n  \"start\": \"2022-01-01T00:00:00\",\n  \"base\": \"USDT\",\n  \"sort\": \"desc\",\n  \"gran\": \"1d\"\n}", "api_reaction": null}, {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "api_action": "\nAction: metrics_ohlcv_pro_for_cryptocurrency_financial_data\nAction Input: {\n  \"market_venue\": \"BINANCE\",\n  \"symbol\": \"BTC\",\n  \"start\": \"2022-02-01T00:00:00\",\n  \"base\": \"USDT\",\n  \"sort\": \"desc\",\n  \"gran\": \"1d\"\n}", "api_reaction": null}, {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "api_action": "\nAction: metrics_ohlcv_pro_for_cryptocurrency_financial_data\nAction Input: {\n  \"market_venue\": \"BINANCE\",\n  \"symbol\": \"BTC\",\n  \"start\": \"2022-09-01T00:00:00\",\n  \"base\": \"USDT\",\n  \"sort\": \"desc\",\n  \"gran\": \"1d\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "metrics_ohlcv_trial_for_cryptocurrency_financial_data", "api_action": "\nAction: metrics_ohlcv_trial_for_cryptocurrency_financial_data\nAction Input: {\n  \"market_venue\": \"BINANCE\",\n  \"symbol\": \"BTCUSDT\",\n  \"start\": \"2022-12-01T00:00:00\",\n  \"base\": \"USDT\",\n  \"sort\": \"desc\",\n  \"gran\": \"1d\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "api_action": "{\"market_venue\": \"BINANCE\", \"symbol\": \"BTC\", \"start\": \"2021-01-01T00:00:00\", \"base\": \"USDT\", \"sort\": \"desc\", \"gran\": \"1d\"}", "api_reaction": null}}]}
{"URL": "5409", "query": "I want to surprise my friends with a vacation in Minas Gerais next year. Can you provide me with the national holidays for the state of Minas Gerais in 2023? I need the holiday names and types.", "api_names": ["feriados_dos_estados_for_feriados_brasileiros", "Finish", "tunefind_for_details_for_theclique", "analyze_v2_for_seo_checker", "mail_config_list_for_xlsx_template", "reviews_list_for_yummly", "getproductparent_for_appibase", "by_zip_code_for_rapidweather", "getlocationinfobyzipcode_for_zillow_base", "search_for_shopify_stores_info", "reviews_scores_for_hotels_com_provider", "loginuser_for_petstoreratelimit"], "api_descs": {"Finish": "No description available.", "analyze_v2_for_seo_checker": "analyze page speed with more results information", "by_zip_code_for_rapidweather": "Please note if country is not specified then the search works for USA as a default.", "feriados_dos_estados_for_feriados_brasileiros": "Retorna os feriados de certo estado. Os parâmetros necessários são: 1. Estado - Sigla da Unidade Federativa em letra maíuscula. 2. Ano", "getlocationinfobyzipcode_for_zillow_base": "Get location information by zip code", "getproductparent_for_appibase": "Get the parent product", "loginuser_for_petstoreratelimit": "", "mail_config_list_for_xlsx_template": "Get mail config list from cloud database", "reviews_list_for_yummly": "List reviews, feedback from other users", "reviews_scores_for_hotels_com_provider": "Get hotel overall score", "search_for_shopify_stores_info": "In this endpoint you can search any particular Niche, or keyword for more narrowed results.", "tunefind_for_details_for_theclique": "Please, enter the slug of artist. For example, taylor-swift or acdc.\nYou can get a slug  by using the TuneFind Search API"}, "aseqs": [{"api_name": "feriados_dos_estados_for_feriados_brasileiros", "api_action": "\nAction: feriados_dos_estados_for_feriados_brasileiros\nAction Input: {\n  \"estado\": \"MG\",\n  \"ano\": \"2023\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "feriados_dos_estados_for_feriados_brasileiros"}}, {"state": "generated_by_agent", "aseq": {"api_name": "feriados_dos_estados_for_feriados_brasileiros"}}]}
{"URL": "22451", "query": "I'm conducting a statistical analysis and require simulated dice rolls. Please roll a regular die, 3 regular dice, and 2 custom dice with 6 sides each. Also, roll 4 regular dice 3 times and 5 custom dice with 8 sides each 2 times. I need the results for my research.", "api_names": ["regular_dice_for_dice_roll_simulator", "regular_die_for_dice_roll_simulator", "Finish", "custom_dice_for_dice_roll_simulator", "custom_dice_rolls_for_dice_roll_simulator", "thumbnail_for_3d_services", "getevent_for_kalshi_trading_api", "address_reverse_geocoding_for_navitime_geocoding", "retrieve_listing_events_for_openblur", "search_posts_for_reddit_fast_search", "channel_videos_for_yt_api", "top_ranking_testnets_for_top_nft_collections", "url_metrics_for_domain_da_pa_check", "rsi_overbought_for_barpatterns", "get_stations_for_vehicle_charging_stations_", "currency_rates_for_1_bank_historical_data_for_forecast_crypto_and_fiat_currency_exchange_rates", "get_feed_video_list_by_region_for_tiktok_download_video_", "paginate_through_campany_employees_information_for_human_resources_api", "statusforemissiontable_for_carbon_management", "api_aaaa_domain_for_dns_lookup"], "api_descs": {"Finish": "No description available.", "address_reverse_geocoding_for_navitime_geocoding": "逆ジオコーディング\n緯度経度を指定して住所情報を取得します。", "api_aaaa_domain_for_dns_lookup": "Sample request:\r\nGET /api/aaaa/oxog.net", "channel_videos_for_yt_api": "Get channel video listing and channel details.\nQuota cost is 1 unit.", "currency_rates_for_1_bank_historical_data_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\n**S**o it does - get exchange rates for selected bank on chosen date. Timezone is important!!!\n\nExample 1 - get currency rates provided by ECB(European Central Bank) in Berlin:\n`/api/get_all_currencies_values_for_1bank/?country_code=eu&date_yyyy_mm_dd_from=2021-11-15&date_yyyy_mm_dd_till=2021-11-15&bank_id=15&tz=Europe/Berlin`\n\nExample 2, MAIB (private Moldavian bank): `/api/get_all_currencies_values_for_1bank/?country_code=md&date_yyyy_mm_dd_from=2021-11-12&date_yyyy_mm_dd_till=2021-11-12&bank_id=1&tz=Europe/Chisinau`\n\nPrameters and where to get info:\n`country_code=`   -->> `/api/info/countries`  -here you can get all available country_code's and their's timezones.\n`bank_id=`  -->>  `/api/get_all_banks_in_country?country_code=bitcoin` or `/api/get_all_banks_in_country?country_code=eu`\n`date_yyyy_mm_dd_till=` and `date_yyyy_mm_dd_from=`  -->>  must be equal", "custom_dice_for_dice_roll_simulator": "Roll any number of dice with any number of sides.", "custom_dice_rolls_for_dice_roll_simulator": "Roll any number of dice with any number of sides any number of times.", "get_feed_video_list_by_region_for_tiktok_download_video_": "get feed video list by region", "get_stations_for_vehicle_charging_stations_": "Return nearest charging stations within\nA POI (Point of Interest), also referred to as a Site or ChargePoint, is the top-level set of information regarding a geographic site with one or more electric vehicle charging equipment present.", "getevent_for_kalshi_trading_api": "Endpoint for getting data about an event by its ticker.", "paginate_through_campany_employees_information_for_human_resources_api": "This endpoint lets you paginate through all the available records in the employees' table in case you only need a limited number of records for your application, the response includes some metadata information to help you with pagination in the frontend, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...", "regular_dice_for_dice_roll_simulator": "Roll any number of regular dice.", "regular_die_for_dice_roll_simulator": "Roll one regular die.", "retrieve_listing_events_for_openblur": "Retrieve Blur Listing Events", "rsi_overbought_for_barpatterns": "List of stocks having RSI Overbought signal.", "search_posts_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the posts.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "statusforemissiontable_for_carbon_management": "Get results in details from the task id.", "thumbnail_for_3d_services": " ", "top_ranking_testnets_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings", "url_metrics_for_domain_da_pa_check": "- Title\n- Domain Authority Score\n- Page Authority Score\n- Equity\n- Links\n- Moz Rank"}, "aseqs": [{"api_name": "regular_die_for_dice_roll_simulator", "api_action": "\nAction: regular_die_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "regular_dice_for_dice_roll_simulator", "api_action": "\nAction: regular_dice_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "custom_dice_for_dice_roll_simulator", "api_action": "\nAction: custom_dice_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "custom_dice_rolls_for_dice_roll_simulator", "api_action": "\nAction: custom_dice_rolls_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "custom_dice_rolls_for_dice_roll_simulator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "regular_dice_for_dice_roll_simulator", "api_action": "{}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "regular_die_for_dice_roll_simulator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "regular_die_for_dice_roll_simulator", "api_action": "\nAction: regular_die_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "regular_die_for_dice_roll_simulator", "api_action": "\nAction: regular_die_for_dice_simulator\nAction Input: {}"}}]}
{"URL": "8073", "query": "I'm planning to sell my property in San Jose, California. Can you provide me with a list of recently sold properties in the area? I would like to see the property details, including the address, sold date, and sold price. Additionally, it would be helpful if you can provide me with the contact information of the realtor agents associated with each sold property.", "api_names": ["realtoragentlist_for_realtor_data_api_for_real_estate", "realtorpropertylist_for_realtor_data_api_for_real_estate", "Finish", "keyword_search_for_domain_checker", "live_events_for_art_openings_italy", "get_all_latest_nba_articles_for_nba_latest_news", "version_metadata_for_hapihub", "get_all_advisories_for_ics_cert_advisories", "nearby_for_places_nearby_a_coordinates", "get_nba_franchise_w_l_schedule_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules", "history_for_currencyapi_net", "game_odds_by_site_schedule_for_sportsbook_odds"], "api_descs": {"Finish": "No description available.", "game_odds_by_site_schedule_for_sportsbook_odds": "This is a schedule that is separated by site. Upper and lower case doesn't matter as long as it has the correct letters for the request (DraftKings is same as draftkings)\n\nThe Sites:\n1. Fanduel\n2. DraftKings\n3. Caesars\n4. WynnBet\n5. PointsBet\n6. BetMGM\n7. SuperBook\n8. FoxBet\n9. Kambis    (SugarHouse/BetRivers/Barstool)", "get_all_advisories_for_ics_cert_advisories": "This endpoint will return back all  advisories and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov", "get_all_latest_nba_articles_for_nba_latest_news": "GET /articles\nReturns a list of all the latest nba articles.\n\nOptional params:\n\nsource returns articles based on chosen source\n\noptions: nba-canada, nba, bleacher-report, yahoo, espn, slam\n\nExample /articles?source=bleacher-report\n\nteam returns articles based on chosen team\n\nExample /articles?team=lakers\n\nlimit returns the maximum number of articles desired\n\nExample /articles?limit=5\n\nplayer returns articles based on chosen player\n\nUse dash to seperate names\n\nSearching by players full name seperated by dash produces best results\n\nExample /articles?player=kevin-durant&limit=10", "get_nba_franchise_w_l_schedule_for_a_specific_year_for_1977_2022_nba_team_rosters_and_schedules": "Grabs NBA Franchise's W/L Schedule for a specific year", "history_for_currencyapi_net": "Display the currency conversions historical rates for a particular day", "keyword_search_for_domain_checker": "Query up to 333 TLDs to check registered domains", "live_events_for_art_openings_italy": "To call this service, you would make a GET request to the endpoint /api/ongoing-events with the optional query parameter city. When the service is called, it retrieves a list of events from the database, filtered by the city parameter if it is provided.", "nearby_for_places_nearby_a_coordinates": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nReturns up to 60 places per request.", "realtoragentlist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`", "realtorpropertylist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`", "version_metadata_for_hapihub": "Retrieve the server's version metadata"}, "aseqs": [{"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtorpropertylist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"state_code\": \"CA\",\n  \"offset\": \"0\",\n  \"city\": \"San Jose\"\n}", "api_reaction": null}, {"api_name": "realtoragentlist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtoragentlist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"page\": \"1\",\n  \"state_code\": \"CA\",\n  \"city\": \"San Jose\"\n}", "api_reaction": null}, {"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtorpropertylist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"state_code\": \"CA\",\n  \"offset\": \"0\",\n  \"city\": \"San Jose\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"action": "Generate SQL query to fetch recent sold properties details including address, sold date and price from San Jose real estate database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtorpropertylist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"state_code\": \"CA\",\n  \"offset\": \"10\",\n  \"city\": \"San Jose\"\n}"}}, {"state": "generated_by_agent", "aseq": [{"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtorpropertylist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"state_code\": \"CA\",\n  \"offset\": \"0\",\n  \"city\": \"San Jose\"\n}"}, {"api_name": "realtoragentlist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtoragentlist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"page\": \"1\",\n  \"state_code\": \"CA\",\n  \"city\": \"San Jose\"\n}"}]}, {"state": "generated_by_agent", "aseq": {"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtorpropertylist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"state_code\": \"CA\",\n  \"offset\": \"0\",\n  \"city\": \"San Jose\"\n}"}}]}
{"URL": "49964", "query": "List the top tracks globally for today. Also, fetch the full details of an artist.", "api_names": ["get_artist_overview_for_spotify_scraper", "list_top_tracks_for_spotify_scraper", "Finish", "province_list_for_canadian_gas_prices", "trending_for_youtube_search_and_download", "get_exchanges_for_coinlore_cryptocurrency", "random_proxy_for_proxypage", "web_exchange_details_for_open_defi", "versions_for_darko_androcec_example", "languages_for_review_generator_ai_", "getchannelvideos_for_youtube_search_v3", "product_details_for_target_com_store_product_reviews_locations_data", "word_of_the_day_from_pm_for_word_of_the_day", "getcataloguser_for_auth", "single_blog_for_blogsapi", "show_all_series_for_vod_app", "generate_uuid_for_helper_function", "all_for_bps"], "api_descs": {"Finish": "No description available.", "all_for_bps": "Liste des provinces de la Nouvelle Calédonie", "generate_uuid_for_helper_function": "Generate UUID v4 with dash or not.\nmax\nBASIC: 3\nPRO: 20\nULTRA: 50\nMEGA: 150", "get_artist_overview_for_spotify_scraper": "This endpoint fetches full details of an artist.", "get_exchanges_for_coinlore_cryptocurrency": "Get all exchanges", "getcataloguser_for_auth": "Get user information. Internal endpoint only available to other services.", "getchannelvideos_for_youtube_search_v3": "Retrieve a comprehensive list of videos associated with a specific channel", "languages_for_review_generator_ai_": "Get list of Languages", "list_top_tracks_for_spotify_scraper": "This endpoint lists weekly or daily top tracks at any time and in any country.", "product_details_for_target_com_store_product_reviews_locations_data": "The endpoint returns single product details\n\n- Every target has a uniq **store_id** , **store_id** can be extract with the help of this endpoint **/target/location/search**", "province_list_for_canadian_gas_prices": "Returns list of valid provinces for this API.", "random_proxy_for_proxypage": "Get random proxy,\n\nchoose type and country", "show_all_series_for_vod_app": "Show all series", "single_blog_for_blogsapi": "Single blog post details by its ID.", "trending_for_youtube_search_and_download": "Get list of trending videos", "versions_for_darko_androcec_example": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.", "web_exchange_details_for_open_defi": " ", "word_of_the_day_from_pm_for_word_of_the_day": "Get word of the day from pm"}, "aseqs": [{"api_name": "list_top_tracks_for_spotify_scraper", "api_action": "\nAction: list_top_tracks_for_spotify_scraper\nAction Input: {}", "api_reaction": null}, {"api_name": "get_artist_overview_for_spotify_scraper", "api_action": "\nAction: get_artist_overview_for_spotify_scraper\nAction Input: {\n  \"artistid\": \"1McMsnEElThX1knmY4oliG\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_top_tracks_for_spotify_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_artist_overview_for_spotify_scraper", "api_action": "\nAction: get_artist_overview_for_spotify_scraper\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_top_tracks_for_spotify_scraper"}}]}
{"URL": "25987", "query": "I'm organizing a game night with my friends, and I need a random TV show suggestion. Can you recommend a random TV show for us to watch? Additionally, I'm looking for a random movie to watch with my family. Can you suggest a family-friendly movie?", "api_names": ["Finish", "getrandommovie_for_random_chunk_api", "getrandomtvshow_for_random_chunk_api", "getfileslist_for_groupdocs_annotation_cloud", "realtorpropertylist_for_realtor_data_api_for_real_estate", "title_streaming_sources_for_watchmode", "fresh_potential_gems_for_crypto_gem_finder", "user_tweets_for_twitter_v2_v2", "list_comments_for_kwai", "get_all_half_staff_events_for_every_flag_for_flag_status", "products_list_deprecated_for_target", "appointment_time_list_for_appointment_system_api", "getdivision_for_nhl_stats_and_live_data", "macros_amounts_for_fitness_calculator", "tournament_teams_for_ice_hockey_data"], "api_descs": {"Finish": "No description available.", "appointment_time_list_for_appointment_system_api": "EndPoint gets Appointment Time List by Day. EndPoint gets date parameter and returns List of Appointment Times of that date. In the list there is available field, This field indicates whether there is an appointment at the specified time.\nParameter Descriptions : \ndate --> The day that hours will be return\nclinicName --> Name of the clinic\n\nReturn Value: \nThe EndPoint returns json object in format below.\n[\n{\"id\":1\n\"hLabel\":\"07:00\"\n\"available\":\"true\"\n\"hour\":7\n\"minute\":0\n\"interval\":15\n},\n......\n]\n\nId --> is the key value of the record.\nhLabel --> is the string format of the time\navailable --> if is true that means the time is suitable for new record. If it is false that means there is another appointment in this time interval. \nhour --> Hour of the appointment time.\nminute --> Minute of the appointment time.\ninterval  --> this field points out to the interval whether 15 minutes or 30 minutes", "fresh_potential_gems_for_crypto_gem_finder": "Get Recently added coins", "get_all_half_staff_events_for_every_flag_for_flag_status": "Get every half-staff event for the last 365 days", "getdivision_for_nhl_stats_and_live_data": "You can use this to also retrieve inactive divisions. For example, the ID for the old Patrick division is `13`.", "getfileslist_for_groupdocs_annotation_cloud": " ", "getrandommovie_for_random_chunk_api": "Returns random movies from over 1000 movie list.", "getrandomtvshow_for_random_chunk_api": "Returns random TVshows.", "list_comments_for_kwai": "List Comments API", "macros_amounts_for_fitness_calculator": "Find the amount of macro nutrients in four different categories which are balanced, low-fat, low-carbs and high-protein for a specific calorie burned. There are 6 inputs which are age, gender, height, weight, activity level and goal. \n\nFor activity level :\n    \n-     \"1\" : \"BMR\",\n-     \"2\" : \"Sedentary: little or no exercise\",\n-     \"3\" : \"Exercise 1-3 times/week\",\n-     \"4\" : \"Exercise 4-5 times/week\",\n-     \"5\" : \"Daily exercise or intense exercise 3-4 times/week\",\n-     \"6\" : \"Intense exercise 6-7 times/week\",\n-     \"7\" : \"Very intense exercise daily, or physical job\" \n\nFor goals : \n\n-      \"maintain\" : \"maintain weight\",\n-     \"mildlose\" : \"Mild weight loss\",\n-     \"weightlose\" : \"Weight loss\",\n-     \"extremelose\" : \"Extreme weight loss\",\n-     \"mildgain\" : \"Mild weight gain\",\n-     \"weightgain\" : \"Weight gain\",\n-     \"extremegain\" : \"Extreme weight gain\"", "products_list_deprecated_for_target": "List products in specific store with options and filters", "realtorpropertylist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`", "title_streaming_sources_for_watchmode": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.", "tournament_teams_for_ice_hockey_data": "List of teams participating in a specific tournament.", "user_tweets_for_twitter_v2_v2": "User Tweets"}, "aseqs": [{"api_name": "getrandomtvshow_for_random_chunk_api", "api_action": "\nAction: getrandomtvshow_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandommovie_for_random_chunk_api", "api_action": "\nAction: getrandommovie_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": [{"action": "Search for random TV show suggestions", "query": "random TV show for game night"}, {"action": "Search for random family-friendly movie suggestions", "query": "random family-friendly movie"}]}, {"state": "generated_by_agent", "aseq": [{"api_name": "getrandomtvshow_for_random_chunk_api", "api_action": "\nAction: getrandomtvshow_for_random_chunk_api\nAction Input: {}"}, {"api_name": "getrandommovieforcfamily_api", "api_action": "\nAction: getrandommovieforcfamily_api\nAction Input: {}"}]}, {"state": "generated_by_agent", "aseq": [{"api_name": "getrandomtvshow_for_random_chunk_api", "api_action": "\nAction: getrandomtvshow_for_random_chunk_api\nAction Input: {}"}, {"api_name": "getrandommovie_for_random_chunk_api", "api_action": "\nAction: getrandommovie_for_random_chunk_api\nAction Input: {}"}]}]}
{"URL": "18939", "query": "I'm a beginner in sports betting and want to familiarize myself with surebets. Can you provide me with a comprehensive list of all supported bookmakers and their corresponding surebets? Also, I would like to know the profit margin and odds for each surebet.", "api_names": ["Finish", "list_for_surebets", "get_bookmakers_for_surebets", "party_for_partydiva", "searching_for_videos_for_aol_on_network", "matchh2hduel_for_basketapi", "planet_vector_tiles_for_maptoolkit", "quotes_by_authors_for_quotes_v2", "retrieve_text_for_melrose_labs_voice_api", "transfers_list_records_for_transfermarket", "autocomplete_for_zillow_data_v2", "singular_object_v2_for_blackbox"], "api_descs": {"Finish": "No description available.", "autocomplete_for_zillow_data_v2": "Find location for search", "get_bookmakers_for_surebets": "Get a list of all supported bookmakers", "list_for_surebets": "Get all available Surebets", "matchh2hduel_for_basketapi": "Get head-to-head duel information for a specific basketball match.", "party_for_partydiva": "party", "planet_vector_tiles_for_maptoolkit": "Global planet vector tiles.", "quotes_by_authors_for_quotes_v2": "Returns the quotes by specified authors", "retrieve_text_for_melrose_labs_voice_api": "Retrieve text from previously converted speech-to-text.", "searching_for_videos_for_aol_on_network": "You can search our library using this request:", "singular_object_v2_for_blackbox": "Note: This will work only with singular IP lookups.\n\nIf you are unkeen to lookup multiple IP addresses at the same time, and want a simpler request. This might be for you. \n\nWe will return a singular IP object, that will minimize your request complexity, but with the loss of flexibility.", "transfers_list_records_for_transfermarket": "List records transfers information along with player info, and trade value"}, "aseqs": [{"api_name": "get_bookmakers_for_surebets", "api_action": "\nAction: get_bookmakers_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "list_for_surebets", "api_action": "\nAction: list_for_surebets\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_for_surebets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_bookmakers_for_surebets"}}]}
{"URL": "20360", "query": "My company is planning to invest in cryptocurrencies and we need expert analysis opinions. Can you provide us with expert analysis for a specific cryptocurrency? Please paginate the results and give us the first page. Additionally, we would like to get an overview of this cryptocurrency.", "api_names": ["coins_get_overview_for_investing_cryptocurrency_markets", "coins_get_analysis_for_investing_cryptocurrency_markets", "Finish", "news_for_newsdata", "locations_search_deprecated_for_hotels", "exchanges_for_tardis_dev", "getpetbyid_for_apfd", "getmoviestatus_for_helioviewer_v1", "sending_sms_otp_auto_generated_otp_for_2factor_authentication_india", "markets_for_airbnb_listings", "fed_funds_overnight_rate_for_u_s_economic_indicators", "company_cash_flow_for_real_time_finance_data", "exchange_zip_code_for_state_for_zip_code_to_state_converter", "autocomplete_for_open_brewery_db", "sport_translations_for_pinaculo", "detection_of_plates_and_faces_for_plate_detection", "get_a_language_for_judge0_extra_ce", "extract_data_for_youtube_video_data_extractor"], "api_descs": {"Finish": "No description available.", "autocomplete_for_open_brewery_db": "", "coins_get_analysis_for_investing_cryptocurrency_markets": "Get analysis opinion from expert for specific cryptocurrency", "coins_get_overview_for_investing_cryptocurrency_markets": "Get overview information of specific cryptocurrency", "company_cash_flow_for_real_time_finance_data": "Get public company's **quarterly** or **annual** cash flow information. Supports the *stock* type only.", "detection_of_plates_and_faces_for_plate_detection": "In order to protect personal data, you can detect license plates and faces in the pictures you have.", "exchange_zip_code_for_state_for_zip_code_to_state_converter": "The endpoint to pass a zip code as a query parameter and get the state the zip code is located in as a response.", "exchanges_for_tardis_dev": "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc.", "extract_data_for_youtube_video_data_extractor": "Almost all YouTube video urls are supported", "fed_funds_overnight_rate_for_u_s_economic_indicators": "Get daily federal funds overnight rate at which commercial banks borrow and lend their excess reserves to each other overnight.", "get_a_language_for_judge0_extra_ce": "Get a language.", "getmoviestatus_for_helioviewer_v1": "", "getpetbyid_for_apfd": "Returns a single pet", "locations_search_deprecated_for_hotels": "Search for related locations and suggestions", "markets_for_airbnb_listings": "Retrieve Market names to be used in Listing by market endpoint. Returns 50 results", "news_for_newsdata": "The latest news endpoint provides access to the latest and breaking news for a country, for a specific category in a country, or for a single or multiple domains. The news articles are sorted by the publish date.\n\nRetrieving the latest news allows you to build experience such as showcasing the latest news, breaking news tickers and analyzing News to better understand their content.", "sending_sms_otp_auto_generated_otp_for_2factor_authentication_india": "This endpoint is used to send Auto Generated SMS OTP to India", "sport_translations_for_pinaculo": "Get sport translations."}, "aseqs": [{"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_analysis_for_investing_cryptocurrency_markets\nAction Input: {\n  \"pair_id\": 1,\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "coins_get_overview_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_overview_for_investing_cryptocurrency_markets\nAction Input: {\n  \"pair_id\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "coins_get_overview_for_investing_cryptocurrency_markets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_analysis_for_investing_cryptocurrency_markets\nAction Input: {\n  \"pair_id\": 1,\n  \"page\": 2\n}", "api_reaction": null}}]}
{"URL": "59193", "query": "I'm curious to know if two domains are similar. Please check if 'instagram.com' and 'facebook.com' are similar. Additionally, provide me with the DNS data for 'instagram.com' and the IP address of the NameServer for 'facebook.com'.", "api_names": ["ns_lookup_for_whois_lookup_v3", "domain_information_for_whois_lookup_v3", "check_similarity_for_whois_lookup_v3", "dns_lookup_for_whois_lookup_v3", "Finish", "get_all_cards_for_poker_cards_cartomancy", "echo_get_for_echo_api", "specified_users_data_for_geeklist", "valida_o_de_email_for_emailqualityplus", "new_titles_for_watchmode", "properties_get_nearby_for_zoopla_v2", "get_current_count_for_counter", "fetchquestionanswers_for_upcall", "generate_avatar_for_avatar_io_modern_avatar_placeholder_api", "price_all_for_latest_stock_price", "top_losers_for_cryptocurrency_markets", "video_comment_replies_for_tiktok_v3", "get_voice_for_anime_voice_waifu_ai_api", "get_call_for_voter_card_verifications", "glyph_codes_qcf_v2_font_for_quran_com"], "api_descs": {"Finish": "No description available.", "check_similarity_for_whois_lookup_v3": "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2", "dns_lookup_for_whois_lookup_v3": "This endpoint pulls DNS data from a domain\n\nParameters:\n> domain - The domain to search\n> rtype - The type of record to pull. Records availables: A, PTR, MX, CNAME, TXT,NS.", "domain_information_for_whois_lookup_v3": "This endpoint pulls the domain information, such as IP, expiration date and much more.\n\n\nParameters:\n-> search - The domain to search, don't add https or http. i.e: google.com", "echo_get_for_echo_api": "Make a HTTP GET request with the code you like to get in the response.", "fetchquestionanswers_for_upcall": "Get question's answers", "generate_avatar_for_avatar_io_modern_avatar_placeholder_api": "Generates the desired avatar and returns the image to the client.", "get_all_cards_for_poker_cards_cartomancy": "All cards name, number, meaning and images", "get_call_for_voter_card_verifications": "Get call is to be made by appending request id to the url in the query parameter, to fetch the api results.", "get_current_count_for_counter": "get count and and don't increase", "get_voice_for_anime_voice_waifu_ai_api": "Get Voice", "glyph_codes_qcf_v2_font_for_quran_com": "Get glyph codes of ayah for QCF v2 font", "new_titles_for_watchmode": "Get a listing of the title IDs of new titles added to Watchmode within the date range. You can use this to find new titles, then use the /v1/title/ endpoint to get details on the title.", "ns_lookup_for_whois_lookup_v3": "This endpoint returns IP from a domain. (NameServer)\n\nParameters\n-> search - The domain to search", "price_all_for_latest_stock_price": "Fetch latest stock price", "properties_get_nearby_for_zoopla_v2": "Get nearest points of interest", "specified_users_data_for_geeklist": "", "top_losers_for_cryptocurrency_markets": "Cryptocurrencies with the most losses today.", "valida_o_de_email_for_emailqualityplus": "Validação Simples de Email", "video_comment_replies_for_tiktok_v3": "get video comment replies"}, "aseqs": [{"api_name": "check_similarity_for_whois_lookup_v3", "api_action": "\nAction: check_similarity_for_whois_lookup_v3\nAction Input: {\n  \"domain1\": \"instagram.com\",\n  \"domain2\": \"facebook.com\"\n}", "api_reaction": null}, {"api_name": "dns_lookup_for_whois_lookup_v3", "api_action": "\nAction: dns_lookup_for_whois_lookup_v3\nAction Input: {\n  \"domain\": \"instagram.com\",\n  \"rtype\": \"A\"\n}", "api_reaction": null}, {"api_name": "ns_lookup_for_whois_lookup_v3", "api_action": "\nAction: ns_lookup_for_whois_lookup_v3\nAction Input: {\n  \"search\": \"facebook.com\"\n}", "api_reaction": null}, {"api_name": "domain_information_for_whois_lookup_v3", "api_action": "\nAction: domain_information_for_whois_lookup_v3\nAction Input: {\n  \"search\": \"facebook.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "```json\n{\n\t\"Thought\": I will first check if 'instagram.com' and 'facebook.com' are similar using the check_similarity_for_whois_lookup_v3 API, then fetch the DNS data for 'instagram.com', and find out the IP address of the NameServer for 'facebook.com'.\n\t\"api_name\": \"check_similarity_for_whois_lookup_v3\"\n}\n```"}, {"state": "generated_by_agent", "aseq": {"api_name": "dns_lookup_for_whois_lookup_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ns_lookup_for_whois_lookup_v3", "api_action": "\nAction: ns_lookup_for_whois_lookup_v3\nAction Input: {\n  \"search\": \"facebook.com\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "check_similarity_for_whois_lookup_v3", "api_action": "\nAction: check_similarity_for_whois_lookup_v3\nAction Input: {\n  \"domain1\": \"instagram.com\",\n  \"domain2\": \"facebook.com\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "check_similarity_for_whois_lookup_v3", "api_action": "\nAction: check_similarity_for_whois_lookup_v3\nAction Input: {\n  \"domain1\": \"instagram.com\",\n  \"domain2\": \"facebook.com\"\n}", "api_reaction": null}}]}
{"URL": "33975", "query": "Retrieve the email address, full name, and company details for the person with the email b.mohamed@tomba.io. Also, retrieve the email count for tomba.io.", "api_names": ["enrichment_for_tomba", "emailcount_for_tomba", "Finish", "top_music_for_kwai", "consumers_get_reviews_for_unofficial_trust_pilot", "get_news_for_ai_news_global", "base_for_apigabin", "getthelistofcountriesregistered_for_sandbox_ecombr_com_04_orders", "search_for_flixster", "status_for_getting_pdf_urls_for_carbon_management", "list_of_nominated_books_for_a_genre_in_a_year_for_hapi_books", "user_stories_by_pk_for_instagram_api_v2"], "api_descs": {"Finish": "No description available.", "base_for_apigabin": "uNE BASE", "consumers_get_reviews_for_unofficial_trust_pilot": "Get reviews belonging to a consumer", "emailcount_for_tomba": "Domain name from which you want to find the email addresses.", "enrichment_for_tomba": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person’s name, location and social handles from an email", "get_news_for_ai_news_global": "Get News by region.", "getthelistofcountriesregistered_for_sandbox_ecombr_com_04_orders": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html", "list_of_nominated_books_for_a_genre_in_a_year_for_hapi_books": "For a certain year and a genre, get the list of all nominated books to win an award.", "search_for_flixster": "Search for movies, actors, theaters by term and phrase", "status_for_getting_pdf_urls_for_carbon_management": "Get results in details from the task id.", "top_music_for_kwai": "Top Music API", "user_stories_by_pk_for_instagram_api_v2": "Get all stories via pk"}, "aseqs": [{"api_name": "enrichment_for_tomba", "api_action": "\nAction: enrichment_for_tomba\nAction Input: {\n  \"email\": \"b.mohamed@tomba.io\"\n}", "api_reaction": null}, {"api_name": "emailcount_for_tomba", "api_action": "\nAction: emailcount_for_tomba\nAction Input: {\n  \"domain\": \"tomba.io\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "enrichment_for_tomba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "emailcount_for_tomba", "api_action": "{\"domain\": \"tomba.io\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "enrichment_for_tomba", "api_action": "{\"email\": \"b.mohamed@tomba.io\"}", "api_reaction": null}}]}
{"URL": "1267", "query": "Search for videos related to 'fitness tips' and get insights about a specific video. Also, provide me with the trending videos.", "api_names": ["video_search_for_bing_video_search", "video_details_for_bing_video_search", "trending_for_bing_video_search", "Finish", "get_album_for_youtube_music_api_detailed_", "ethprice_for_uniswap_v2_api", "youtube_channel_id_for_youtube_search", "geteventsid_for_wosti_futbol_tv_peru", "get_member_for_socie", "iamrich_for_i_am_rich", "emailfinder_for_tomba", "list_of_available_languages_for_translef_translator", "artist_related_for_spotify", "career_leaderboard_mw2_for_cod_api_2_0", "get_websites_for_amazon_web_scraping_api", "ticker_changes_for_global_ethereum_price_index_gex", "count_of_days_for_enoch_calendar", "recommended_channels_for_fastytapi", "block_for_optimism", "v1_hashtag_posts_hashtag_id_for_tokapi_mobile_version"], "api_descs": {"Finish": "No description available.", "artist_related_for_spotify": "Artist related", "block_for_optimism": "Get full data from a specific block on the Optimism blockchain.", "career_leaderboard_mw2_for_cod_api_2_0": "Get top career information for up to 2000 players on the MW 2 leaderboard.", "count_of_days_for_enoch_calendar": "Current day count in this Hebrew year from the supplied date string or today's date", "emailfinder_for_tomba": "generates or retrieves the most likely email address from a domain name, a first name and a last name.", "ethprice_for_uniswap_v2_api": "Return the current eth price in uniswap v2", "get_album_for_youtube_music_api_detailed_": "Get information and tracks of an album.", "get_member_for_socie": "Return a specific member. To do this, you need the `externalId` you gave the member when you created it or the `id` provided by Socie.", "get_websites_for_amazon_web_scraping_api": "Get the available websites available by country to extract amazon product data.", "geteventsid_for_wosti_futbol_tv_peru": "Obtener el evento por identificador único  del listado de eventos de partidos de fútbol televisados en Perú.\n\n> Este endpoints requiere de un parámetro denominado Id.", "iamrich_for_i_am_rich": "Since so many people asked for it.\n\nBe part of the fun !", "list_of_available_languages_for_translef_translator": "This method returns a list of language codes that will be needed in the method to translate the text", "recommended_channels_for_fastytapi": "Returns a list of recommended channels for the provided channel.\n\nNote: this endpoint requires some heavier computations, response time might take ~5 seconds.", "ticker_changes_for_global_ethereum_price_index_gex": "Returns ticker values and price changes for specified market and symbol.", "trending_for_bing_video_search": "Get currently trending videos.", "v1_hashtag_posts_hashtag_id_for_tokapi_mobile_version": "Search videos by hashtag ID", "video_details_for_bing_video_search": "Get insights about a video, such as related videos.", "video_search_for_bing_video_search": "Get videos relevant for a given query.", "youtube_channel_id_for_youtube_search": "This endpoint get the channel ID of a Youtube Channel given the channel name"}, "aseqs": [{"api_name": "video_search_for_bing_video_search", "api_action": "\nAction: video_search_for_bing_video_search\nAction Input: {\n  \"q\": \"fitness tips\"\n}", "api_reaction": null}, {"api_name": "video_details_for_bing_video_search", "api_action": "\nAction: video_details_for_bing_video_search\nAction Input: {\n  \"modules\": \"relatedVideos\",\n  \"is_id\": \"91651A86912BBFB94C9E91651A86912BBFB94C9E\"\n}", "api_reaction": null}, {"api_name": "trending_for_bing_video_search", "api_action": "\nAction: trending_for_bing_video_search\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "video_search_for_bing_video_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "video_details_for_bing_video_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_bing_video_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "video_details_for_bing_video_search", "api_action": "\nAction: video_details_for_bing_video_search\nAction Input: {\n  \"modules\": \"trendingVideos\",\n  \"is_id\": null\n}", "api_reaction": null}}]}
{"URL": "73330", "query": "I'm planning a road trip with my friends and we want to explore different counties along the way. Can you provide me with the boundaries of counties within a bounding box defined by the coordinates 40.81,-73.41 and 40.62,-74.73? Also, can you give me the boundaries of places within a radius of 50 miles from the center coordinates 40.61,-74.72?", "api_names": ["countiessearchinradius_for_mapreflex", "placessearchinradius_for_mapreflex", "countiessearchinboundingbox_for_mapreflex", "Finish", "get_epic_free_games_for_epic_free_games", "reviews_v2_list_deprecated_for_hotels", "weather_dataset_for_weather_dataset", "search_for_simple_youtube_search", "getfutureeventsbytopic_for_azure_smartable", "ip_address_for_get_ip_address_and_basic_info_", "listing_status_for_airbnb_listings", "downloadminecraftjson_for_minecraft_forge_optifine", "convert_for_exchanger_currency_rates_provider", "get_by_filter_for_world_population_by_decade_and_growth_rate", "market_undervalued_large_caps_for_mboum_finance", "index_for_global_market_indices_data"], "api_descs": {"Finish": "No description available.", "convert_for_exchanger_currency_rates_provider": "This API with a separate currency conversion endpoint, which can be used to convert any amount from one currency to another. In order to convert currencies, please use the API's convert endpoint, append the from and to parameters and set them to your preferred base and target currency codes.", "countiessearchinboundingbox_for_mapreflex": "Get Counties boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "countiessearchinradius_for_mapreflex": "Get Counties boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "downloadminecraftjson_for_minecraft_forge_optifine": "Redirect to download Minecraft .json file.", "get_by_filter_for_world_population_by_decade_and_growth_rate": "Get by filter", "get_epic_free_games_for_epic_free_games": "Get Epic Free Games", "getfutureeventsbytopic_for_azure_smartable": "Get future Azure events by topic.", "index_for_global_market_indices_data": "Get an Index constituents", "ip_address_for_get_ip_address_and_basic_info_": "JUST SEND AJAX OR REQUEST TO API.", "listing_status_for_airbnb_listings": "Retrieve the calculated status (available/not available for stay) of a listing based on previous and following days stay rules.", "market_undervalued_large_caps_for_mboum_finance": "Large cap stocks that are potentially undervalued.", "placessearchinradius_for_mapreflex": "Get Places boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "reviews_v2_list_deprecated_for_hotels": "Get all reviews of specific property", "search_for_simple_youtube_search": "Make youtube search", "weather_dataset_for_weather_dataset": "Check The Weather Api Process"}, "aseqs": [{"api_name": "countiessearchinboundingbox_for_mapreflex", "api_action": "\nAction: countiessearchinboundingbox_for_mapreflex\nAction Input: {\n  \"northeast\": \"40.81,-73.41\",\n  \"southwest\": \"40.62,-74.73\"\n}", "api_reaction": null}, {"api_name": "countiessearchinradius_for_mapreflex", "api_action": "\nAction: countiessearchinradius_for_mapreflex\nAction Input: {\n  \"latitude\": 40.61,\n  \"longitude\": -74.72,\n  \"radius\": 50\n}", "api_reaction": null}, {"api_name": "placessearchinradius_for_mapreflex", "api_action": "\nAction: placessearchinradius_for_mapreflex\nAction Input: {\n  \"latitude\": 40.61,\n  \"longitude\": -74.72,\n  \"radius\": 50\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "countiessearchinboundingbox_for_mapreflex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "placessearchinradius_for_mapreflex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "countiessearchinradius_for_mapreflex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "countiessearchinboundingbox_for_mapreflex", "api_action": "\nAction: countiessearchinboundingbox_for_mapreflex\nAction Input: {\n  \"northeast\": \"40.81,-73.41\",\n  \"southwest\": \"40.62,-74.73\"\n}", "api_reaction": null}}]}
{"URL": "12050", "query": "I'm planning a backpacking trip around Southeast Asia and I need to know the visa requirements for each country. Can you provide me with the necessary information?", "api_names": ["countries_for_visa_requirements", "visa_requirements_for_visa_requirements", "Finish", "anime_img_for_any_anime", "idols_for_k_pop", "hotelsearch_for_hotelapi", "getinventory_for_urltest", "details_for_patreon", "artist_overview_for_spotify_web", "get_the_states_for_location", "on_general_for_generaltalker", "igtv_for_ig_private_api"], "api_descs": {"Finish": "No description available.", "anime_img_for_any_anime": "Show only the image from the api on your browser .", "artist_overview_for_spotify_web": "Get artist overview", "countries_for_visa_requirements": " ", "details_for_patreon": "Get the details and general information of a Creator with the `creator_id`.", "get_the_states_for_location": "Get the states.", "getinventory_for_urltest": "Returns a map of status codes to quantities", "hotelsearch_for_hotelapi": "Search Hotel List", "idols_for_k_pop": "Get idol individual info", "igtv_for_ig_private_api": "IGTV", "on_general_for_generaltalker": "いろいろなボットでご利用いただける雑談APIです。\n\n以下はon_generalのレスポンス例と、その意味です。\n```\n{\n\"response\":{\n    \"res\":\"おはよーございます\"         # 生成された返答\n    \"user_score\":-2.8724350929260254   # ユーザーの発話のスコア\n    \"lm\":0.7096909880638123            # 文章の妥当性スコア\n    \"mc\":-1.5187406539916992           # 返答としての妥当性スコア\n    \"score\":-0.3534274697303772        # 総合スコア\n    \"history_text\":\"<speaker2>Hello\"   # 発話の生成に使われた発話履歴\n    \"res_score_list\":[                 # 採用しなかった返答のリスト\n        0:[\n            0:\"おはよーございます\"       # 返答の内容\n            1:[                          # スコア（文章の妥当性,返答としての妥当性,総合スコア）\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # 中略\n    ]\n    }\n}\n```", "visa_requirements_for_visa_requirements": " "}, "aseqs": [{"api_name": "visa_requirements_for_visa_requirements", "api_action": "\nAction: visa_requirements_for_visa_requirements\nAction Input: {\n  \"passport\": \"countryA\",\n  \"destination\": \"countryB\"\n}", "api_reaction": null}, {"api_name": "countries_for_visa_requirements", "api_action": "\nAction: countries_for_visa_requirements\nAction Input: {}", "api_reaction": null}, {"api_name": "visa_requirements_for_visa_requirements", "api_action": "\nAction: visa_requirements_for_visa_requirements\nAction Input: {\n  \"passport\": \"AD\",\n  \"destination\": \"TH\"\n}", "api_reaction": null}, {"api_name": "visa_requirements_for_visa_requirements", "api_action": "\nAction: visa_requirements_for_visa_requirements\nAction Input: {\n  \"passport\": \"AD\",\n  \"destination\": \"MY\"\n}", "api_reaction": null}, {"api_name": "visa_requirements_for_visa_requirements", "api_action": "\nAction: visa_requirements_for_visa_requirements\nAction Input: {\n  \"passport\": \"AD\",\n  \"destination\": \"VN\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "visa_requirements_for_visa_requirements"}}, {"state": "generated_by_agent", "aseq": {"api_name": "visa_requirements_for_visa_requirements"}}, {"state": "generated_by_agent", "aseq": {"api_name": "visa_requirements_for_visa_requirements", "api_action": "\nAction: visa_requirements_for_visa_requirements\nAction Input: {\n  \"passport\": \"country\",\n  \"destination\": \"CountryA\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_states_for_location"}}, {"state": "generated_by_agent", "aseq": {"api_name": "visa_requirements_for_visa_requirements"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_states_for_location"}}]}
{"URL": "74307", "query": "My company, ABC Corp, is based in Nouvelle Calédonie. Can you check the health of the Ridet NC application and provide me with the details of all the establishments associated with our company?", "api_names": ["entreprise_par_rid_for_ridet_nc", "health_for_ridet_nc", "etablissements_d_une_entreprise_for_ridet_nc", "Finish", "title_get_popular_movies_by_genre_deprecated_for_imdb", "convert_username_to_userid_for_twitter_aio", "getchannelvideos_for_vimeo", "trending_charts_for_youtube_v3_lite", "app_reviews_for_steam", "comment_list_for_tiktok_video_no_watermark_v2", "products_get_offers_for_consumer_reports", "random_post_for_fake_data_generator", "footballers_by_id_for_premier_league_stats", "get_information_of_a_particular_post_for_leetcode_compensation", "medium_for_the_sandbox_sand", "getcountrybynumber_for_telephonetocountry", "getshapes_for_aspose_diagram_cloud", "get_datasources_datasource_id_for_ubidots", "get_airline_list_for_travel_hacking_tool", "get_places_json_for_quickblox"], "api_descs": {"Finish": "No description available.", "app_reviews_for_steam": "Get last n reviews of an app", "comment_list_for_tiktok_video_no_watermark_v2": "Comment list", "convert_username_to_userid_for_twitter_aio": "You'll need the userId to receive tweets, media and replies.", "entreprise_par_rid_for_ridet_nc": "Affiche les informations d'une entreprise de la Nouvelle Calédonie à partir de son rid.", "etablissements_d_une_entreprise_for_ridet_nc": "Affiche les établissement d'une entreprise en Nouvelle Calédonie.", "footballers_by_id_for_premier_league_stats": "Get a players stats by their ID. Choose from all 597 registered premier league players.", "get_airline_list_for_travel_hacking_tool": "This endpoint returns a full list of airlines with their IATA code and full name.", "get_datasources_datasource_id_for_ubidots": "This resource obtains an existing data source and its details. Also, it returns additional fields besides the ones required during the creation of the data source:  number_of_variables: Shows the number of variables contained by the data source. last_activity: Returns the date of the last activity", "get_information_of_a_particular_post_for_leetcode_compensation": "This API Endpoint will return information of a particular post with specific postID.", "get_places_json_for_quickblox": "Retrieving a list of the created places by application", "getchannelvideos_for_vimeo": "Get a list of the videos in a channel.", "getcountrybynumber_for_telephonetocountry": "Returns country info by phone number", "getshapes_for_aspose_diagram_cloud": " ", "health_for_ridet_nc": "Permet de vérifier que l'application fonctionne.", "medium_for_the_sandbox_sand": "Get official news from Medium.", "products_get_offers_for_consumer_reports": "Get offers from places or sites to buy product", "random_post_for_fake_data_generator": "This endpoint generate a list of fake posts", "title_get_popular_movies_by_genre_deprecated_for_imdb": "Get popular movies by genre\n* This endpoints is deprecated, use .../title/v2/get-popular-movies-by-genre instead", "trending_charts_for_youtube_v3_lite": "Get Trending Videos list or Chart.\nQuota cost is 1."}, "aseqs": [{"api_name": "health_for_ridet_nc", "api_action": "\nAction: health_for_ridet_nc\nAction Input: {}", "api_reaction": null}, {"api_name": "etablissements_d_une_entreprise_for_ridet_nc", "api_action": "\nAction: etablissements_d_une_entreprise_for_ridet_nc\nAction Input: {\n  \"rid\": \"ABC Corp\"\n}", "api_reaction": null}, {"api_name": "entreprise_par_rid_for_ridet_nc", "api_action": "\nAction: entreprise_par_rid_for_ridet_nc\nAction Input: {\n  \"rid\": \"ABC Corp\"\n}", "api_reaction": null}, {"api_name": "entreprise_par_rid_for_ridet_nc", "api_action": "\nAction: entreprise_par_rid_for_ridet_nc\nAction Input: {\n  \"rid\": \"1234567\"\n}", "api_reaction": null}, {"api_name": "etablissements_d_une_entreprise_for_ridet_nc", "api_action": "\nAction: etablissements_d_une_entreprise_for_ridet_nc\nAction Input: {\n  \"rid\": \"1234567\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "entreprise_par_rid_for_ridet_nc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "etablissements_d_une_entreprise_for_ridet_nc", "api_action": "\nAction: etablissements_d_une_entreprise_for_ridet_nc\nAction Input: {\"rid\": \"ABC1234567890\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_ridet_nc", "api_action": "\nAction: health_for_ridet_nc\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_ridet_nc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_ridet_nc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_ridet_nc"}}]}
{"URL": "77578", "query": "I am looking for a specific product and I have the barcode '194574942221'. Can you search for this product using the barcode and provide me with the details? Also, I would like to find the stores near me where I can purchase this product. Please list the stores within a 25-mile radius of my location at longitude '-118.2487' and latitude '33.9733'.", "api_names": ["products_search_by_barcode_for_kohls", "stores_list_for_kohls", "Finish", "dedu_for_dedu", "image_anime_diffusion_for_image_diffusion", "live_matches_stats_for_ultimate_tennis", "list_of_available_languages_for_translef_translator", "calculate_distance_by_lat_long_for_distance_calculation_api_by_pizza_api", "api_test_for_scott", "languages_for_microsoft_translator_text", "test_for_underscore_test", "validate_wa_number_for_bulk_whatsapp_validator"], "api_descs": {"Finish": "No description available.", "api_test_for_scott": "test", "calculate_distance_by_lat_long_for_distance_calculation_api_by_pizza_api": "Calculate Distance between to place by their latitude and longitudes and metric you want the output of.", "dedu_for_dedu": "dedu", "image_anime_diffusion_for_image_diffusion": "design to generate weeb stuff.", "languages_for_microsoft_translator_text": "Gets the set of languages currently supported by other operations of the Translator Text API.", "list_of_available_languages_for_translef_translator": "This method returns a list of language codes that will be needed in the method to translate the text", "live_matches_stats_for_ultimate_tennis": "You can retrieve all te details related to a single match such as Aces, Break points, First Serve %, first serve returns, second serves, ecc..", "products_search_by_barcode_for_kohls": "Search product by barcode", "stores_list_for_kohls": "List stores near a provided GEO location", "test_for_underscore_test": "/test", "validate_wa_number_for_bulk_whatsapp_validator": "enter the number you want to validate.\nLearn how to use it on this [video](https://youtu.be/_h5ybzp9UNU)."}, "aseqs": [{"api_name": "products_search_by_barcode_for_kohls", "api_action": "\nAction: products_search_by_barcode_for_kohls\nAction Input: {\n  \"upc\": \"194574942221\"\n}", "api_reaction": null}, {"api_name": "stores_list_for_kohls", "api_action": "\nAction: stores_list_for_kohls\nAction Input: {\n  \"longitude\": -118.2487,\n  \"latitude\": 33.9733,\n  \"radius\": 25\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "products_search_by_barcode_for_kohls"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stores_list_for_kohls"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_search_by_barcode_for_kohls", "api_action": "\nAction: products_search_by_barcode_for_kohls\nAction Input: {\n  \"upc\": \"194574942221\"\n}", "api_reaction": null}}]}
{"URL": "9387", "query": "I am interested in a company's main activity and side activities. Retrieve the tax ID, name, main activity, and side activities for the company with CNPJ 37335118000180. Additionally, provide the tax ID, name, main activity, and side activities of the associated members.", "api_names": ["consulta_pessoa_for_consulta_cnpj_tempo_real", "consulta_estabelecimento_for_consulta_cnpj_tempo_real", "Finish", "languages_for_fast_and_highly_accurate_language_detection", "extract_fast_for_mobile_phone_validation", "cities_by_state_for_geosource_api", "v1_ownersearch_for_uspto_trademark", "getpowerplantbyradiusandaddress_for_rankiteo_climate_risk_assessment", "swift_code_for_bank_swift_codes", "latest_tweets_for_crypto_news_v3", "a_single_ticket_for_ticketbud", "business_email_compromise_bec_api_for_business_email_compromise_bec_api\t", "bet365_result_for_betsapi", "stock_news_for_real_time_finance_data", "trackingpackage_for_trackingpackage"], "api_descs": {"Finish": "No description available.", "a_single_ticket_for_ticketbud": "Information about a single ticket.", "bet365_result_for_betsapi": "to view bet365 event result", "business_email_compromise_bec_api_for_business_email_compromise_bec_api\t": "This API protect your business from Business email compromise (BEC), \nit takes email and returns  keys risk indicators such as : email\nvalidation, blacklisted, phishing, dmarc seurity,  spoofing risk, malicious activity.", "cities_by_state_for_geosource_api": "Retrives a list of  cities of the state.", "consulta_estabelecimento_for_consulta_cnpj_tempo_real": "Consulta CNPJ unificada a Receita Federal, Simples Nacional e Cadastro de Contribuintes", "consulta_pessoa_for_consulta_cnpj_tempo_real": "Consulta Pessoa", "extract_fast_for_mobile_phone_validation": "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in /extract endpoint case you can't provide Country and service will try to guess the country :)", "getpowerplantbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get powerplants which have address falling into a specific radius", "languages_for_fast_and_highly_accurate_language_detection": "Endpoint to return language information.", "latest_tweets_for_crypto_news_v3": "This endpoint provides the latest crypto news tweets incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nParameters:\n- **[OPTIONAL] last_n_hours**: Only tweets from the last *n* hours are provided (default: 12).\n- **[OPTIONAL] max_articles**: Maximum number of tweets in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract form tweet (default:10)\n\nCurrently, we make use of the following sources:\n- [@BTCTN](https://twitter.com/BTCTN) \n- [@CryptoBoomNews](https://twitter.com/CryptoBoomNews)\n- [@cryptocom](https://twitter.com/cryptocom)\n- [@Crypto_Potato](https://twitter.com/crypto_potato)\n\nIf you have any suggestions for twitter accounts to add, please get in touch.", "stock_news_for_real_time_finance_data": "Get the latest news related to a specific stock.  Supports all stock types: *stock*, *index*, *mutual fund* and *futures*.", "swift_code_for_bank_swift_codes": "Returns details of a SWIFT code", "trackingpackage_for_trackingpackage": "Track UPS, USPS and FedEx packages.", "v1_ownersearch_for_uspto_trademark": "Does a search on **owner name** or **postcode** and returns details about the trademarks found for that owner. Duplicate owner results can be returned by this endpoint, especially when an owner had an address change.\n\nYou can use literal 'null' if you don't want to use a param. So you can either search just for a keyword or just for a postcode or together if you want to filter by both."}, "aseqs": [{"api_name": "consulta_estabelecimento_for_consulta_cnpj_tempo_real", "api_action": "\nAction: consulta_estabelecimento_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"cnpj\": \"37335118000180\"\n}", "api_reaction": null}, {"api_name": "consulta_pessoa_for_consulta_cnpj_tempo_real", "api_action": "\nAction: consulta_pessoa_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"is_id\": \"0ee5ad51-e58d-4400-a68a-1ae0aaf394c6\"\n}", "api_reaction": null}, {"api_name": "consulta_pessoa_for_consulta_cnpj_tempo_real", "api_action": "\nAction: consulta_pessoa_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"is_id\": \"84cda86b-7b46-4be3-9b2e-4c374da9879b\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "consulta_pessoa_for_consulta_cnpj_tempo_real"}}, {"state": "generated_by_agent", "aseq": {"api_name": "consulta_pessoa_for_consulta_cnpj_tempo_real"}}, {"state": "generated_by_agent", "aseq": {"api_name": "consulta_estabelecimento_for_consulta_cnpj_tempo_real", "api_action": "\nAction: consulta_estabelecimento_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"cnpj\": \"37335118000180\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "consulta_estabelecimento_for_consulta_cnpj_tempo_real", "api_action": "\nAction: consulta_estabelecimento_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"cnpj\": \"37335118000180\"\n}", "api_reaction": null}}]}
{"URL": "16577", "query": "My friend is interested in job opportunities. Can you fetch the latest job postings for the company with the ID 'DEVFCLQFW054'? Additionally, provide the basic information and people associated with this company.", "api_names": ["companies_id_data_for_german_company_data_v2", "companies_id_jobs_for_german_company_data_v2", "companies_id_people_for_german_company_data_v2", "Finish", "product_for_ikea_api", "single_cat_breed_for_catbreeddb", "retrieve_asset_for_blur", "get_user_stories_by_id_for_instagram_fast", "fake_user_for_fake_users_v6", "relatives_for_23andme", "memes_for_meme_generator_v2", "best_quote_for_morpheus_predictions_", "playlist_info_for_soundcloud", "sdafdasf_for_lets", "commonports_for_commonportnumbers", "airport_info_for_airports_info_", "get_monthly_top_100_music_torrents_for_movie_tv_music_search_and_download", "get_lottery_list_by_date_for_lottery", "get_all_fastingcenters_for_fastingcenters", "get_company_data_by_linkedin_url_for_fresh_linkedin_profile_data"], "api_descs": {"Finish": "No description available.", "airport_info_for_airports_info_": "Get airport details\nIf you want a specific airport, say it in a comment", "best_quote_for_morpheus_predictions_": "The best predictions with good odds", "commonports_for_commonportnumbers": "Get registered service names and transport protocols port numbers.", "companies_id_data_for_german_company_data_v2": "This endpoint returns the basic information of the company with the given identifier. The information includes all the core data (name, address), web data if known (phone, fax, email, url, social media profiles), legal information (registry, founding date, capital), up to three industries, and revenue and employees class.", "companies_id_jobs_for_german_company_data_v2": "This endpoint returns the latest job postings about the company with the given identifier since the given timestamp. This timestamp is optional and is specified via a query parameter. Job postings come with a title, a text (the content of the posting), a source, and a timestamp.", "companies_id_people_for_german_company_data_v2": "This endpoint returns the information about people associated with the company with the given identifier. The information includes names, roles, email addresses, and phone numbers, if available.", "fake_user_for_fake_users_v6": "This endpoint will give dummy users for your application testing.", "get_all_fastingcenters_for_fastingcenters": "Get all", "get_company_data_by_linkedin_url_for_fresh_linkedin_profile_data": "Given a company’s LinkedIn URL, the API will return valuable data points in JSON format. **1 credit per call.**", "get_lottery_list_by_date_for_lottery": "Get Lottery List By Date", "get_monthly_top_100_music_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Music Torrents", "get_user_stories_by_id_for_instagram_fast": "Get instagram stories by user id", "memes_for_meme_generator_v2": "Generate mems by /meme", "playlist_info_for_soundcloud": "Get playlist info.", "product_for_ikea_api": "Get up-to-date Information for a specific product.", "relatives_for_23andme": "Relatives on 23andMe, for the user's profile. shared_segments is the total number of shared IBD segments; similarity is the actual proportion (1.00 being you, or an identical twin). maternal/paternal_side are True if this match is a relative from your mom or dad's side. range is defined if we couldn't pinpoint the relatedness of the match. match_id is a unique identifier.  Since you could have thousands of matches, limit defaults to 10, and offset to 0. count gives the total number of matches. Results are sorted by updated, descending. You can also get results that have been updated or added since a timestamp.", "retrieve_asset_for_blur": "This endpoint is used to retrieve information about a single NFT.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "sdafdasf_for_lets": "adsfdasf", "single_cat_breed_for_catbreeddb": "Gives details of a single cat breed."}, "aseqs": [{"api_name": "companies_id_jobs_for_german_company_data_v2", "api_action": "\nAction: companies_id_jobs_for_german_company_data_v2\nAction Input: {\n  \"is_id\": \"DEVFCLQFW054\",\n  \"size\": 5\n}", "api_reaction": null}, {"api_name": "companies_id_data_for_german_company_data_v2", "api_action": "\nAction: companies_id_data_for_german_company_data_v2\nAction Input: {\n  \"is_id\": \"DEVFCLQFW054\"\n}", "api_reaction": null}, {"api_name": "companies_id_people_for_german_company_data_v2", "api_action": "\nAction: companies_id_people_for_german_company_data_v2\nAction Input: {\n  \"is_id\": \"DEVFCLQFW054\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "companies_id_jobs_for_german_company_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "companies_id_data_for_german_company_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "companies_id_people_for_german_company_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "companies_id_jobs_for_german_company_data_v2", "api_action": "\nAction: companies_id_jobs_for_german_company_data_v2\nAction Input: {\n  \"is_id\": \"DEVFCLQFW054\",\n  \"size\": 5,\n  \"timestamp\": 1677789800\n}", "api_reaction": null}}]}
{"URL": "45560", "query": "My family and I are considering investing in Amazon. Can you provide us with the financial cash statement data for the past five years? We need to analyze the net income/loss, total depreciation and amortization, other non-cash items, change in accounts receivable, change in inventories, change in accounts payable, change in assets/liabilities, total change in assets/liabilities, cash flow from operating activities, net change in property, plant, and equipment, net change in intangible assets, net acquisitions/divestitures, and net change in short-term investments.", "api_names": ["financial_cash_statement_for_macrotrends_finance", "Finish", "estimate_market_value_for_car_utils", "hashtag_metadata_information_for_social_media_data_tt", "live_events_for_art_openings_italy", "specs_v1_getmakes_for_datamo", "getgamecontent_for_nhl_stats_and_live_data", "list_users_for_calltrackingmetrics", "all_districts_with_coordinates_for_bdapi", "coincu_for_crypto_news_v2", "seasonal_goal_analysis_scoring_first_for_soccer_data", "timezone_for_timezone_by_location"], "api_descs": {"Finish": "No description available.", "all_districts_with_coordinates_for_bdapi": "`/v1.1/districts`\nGet all Districts with their Coordinates in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string,\n  coordinates: string\n]\n```", "coincu_for_crypto_news_v2": "Get the latest news from CoinCu.", "estimate_market_value_for_car_utils": "Estimate market value of the car with specified VIN.", "financial_cash_statement_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.", "getgamecontent_for_nhl_stats_and_live_data": " ", "hashtag_metadata_information_for_social_media_data_tt": "Get hashtag metadata\n\nBasic informations as number of posts and etc", "list_users_for_calltrackingmetrics": "The users API allows you to create and manage users.", "live_events_for_art_openings_italy": "To call this service, you would make a GET request to the endpoint /api/ongoing-events with the optional query parameter city. When the service is called, it retrieves a list of events from the database, filtered by the city parameter if it is provided.", "seasonal_goal_analysis_scoring_first_for_soccer_data": "Provides the scoring first goal statistics of the teams against to other teams in tournaments in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.**", "specs_v1_getmakes_for_datamo": "This endpoint will return all the vehicle makes available, as an array of strings.", "timezone_for_timezone_by_location": "Convert a position into its timezone"}, "aseqs": [{"api_name": "financial_cash_statement_for_macrotrends_finance", "api_action": "\nAction: financial_cash_statement_for_macrotrends_finance\nAction Input: {\n  \"symbol\": \"AMZN\",\n  \"freq\": \"A\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "financial_cash_statement_for_macrotrends_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "financial_cash_statement_for_macrotrends_finance"}}]}
{"URL": "7272", "query": "I'm a game developer and I'm working on a roulette game with a twist. I need the latest outcome data of the lightning roulette game to add a unique feature to my game. Additionally, provide me with the history of the last 30 spins to analyze the game patterns. It would be great if the data can be retrieved in real-time.", "api_names": ["history_for_xxxtremelightningrouletteapi", "latest_outcome_for_xxxtremelightningrouletteapi", "Finish", "is_a_coordinate_water_for_isitwater_com", "summary_detail_for_yh_finance_complete", "card_set_for_hearthstone", "singapore_scheduled_flights_level_for_global_flight_data", "glyph_for_unicode_codepoints", "stock_profile_stock_for_mboum_finance", "pull_track_for_air_cargo_co2_track_and_trace", "getorderbyid_for_pet_store", "wnba_standings_for_wnba_api", "get_all_stories_by_user_id_for_instagram_api_2023", "get_exchange_rates_forecast_for_forecast_crypto_and_fiat_currency_exchange_rates", "user_s_videos_for_tiktok_api", "get_geo_map_for_regions_for_trends_keywords_in_different_regions", "block_number_voice_service_for_2factor_authentication_india", "companies_cash_flow_statements_for_financial_modeling_prep"], "api_descs": {"Finish": "No description available.", "block_number_voice_service_for_2factor_authentication_india": "This endpoint is used to add number to VOICE Blocklist", "card_set_for_hearthstone": "Returns all cards in a set. Example values: Blackrock Mountain, Classic.", "companies_cash_flow_statements_for_financial_modeling_prep": "Returns companies cash flow statements", "get_all_stories_by_user_id_for_instagram_api_2023": "Get all active stories of an Instagram user using user_id.", "get_exchange_rates_forecast_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis API provides convinient way to get forecast for almost all fiat currencies and for bitcoin. Forecast based on Moving Average method with at least 30 historical observations.\n\nExample with fiat- \n`/api/get_forecast?country_code=eu&currency=usd&predict_days=5`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nExample 1 - \n`/api/get_forecast?country_code=bitcoin&currency=btc`\nList of all available country_code's in `/api/info/countries`\nInfo about all currencies: `/api/info/currencies`\n\nSince 11 April 2022 you can request `/api/get_forecast?country_code=bitcoin&currency=btc&predict_days=10`\nThis will provide prediction for 10 days. `&predict_days` accepting integer from 2 to 10\n\nExample 2 - If you want to get forecast for Canadian Dollar in USD:\n`/api/get_forecast?country_code=eu&currency=usd&cross_currency=cad`\nyou will get response:\n\"`message`\":\".......... price for 1 CAD in US DOLLAR.... \"\n\"`forecast_rate`\": 0.7896,  -->> means that  forecast for 1 CAD is equal to 0.7896 USD\n\"`forecast_date`\": \"2021-11-21\", \n...\n\nExample 3 - If you want to get forecast of exchange rate for US Dollar in EU (European Union)  provided by European Central Bank:\n`/api/get_forecast?country_code=eu&currency=usd`\nyou get:\n\"`forecast_rate`\": 1.1254,  -->>which means 1 Euro = 1.1254 US Dollar\n\"`forecast_date`\": \"2021-11-21\",\n\nExample 4 - get  forecast and exhange rates for 1 USD provided by Moldavian Central Bank in Russian language:\n`/api/get_forecast?country_code=md&lang=ru&currency=eur&cross_currency=usd`\nInfo about lang= : `/api/info/languages`\nInfo about `cross_currency`= : `/api/info/currencies`", "get_geo_map_for_regions_for_trends_keywords_in_different_regions": "The \"Trending Keywords by Geo Regions\" API allows developers to access a list of 50 geographic regions and their corresponding trending keywords. With this API, developers can retrieve valuable insights into the most popular and trending search terms for specific locations.", "getorderbyid_for_pet_store": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "glyph_for_unicode_codepoints": "Request a Sample Glyph", "history_for_xxxtremelightningrouletteapi": "Histories of the last 30 spins", "is_a_coordinate_water_for_isitwater_com": "Given a latitude and longitude, return if that coordinate on Earth is water.", "latest_outcome_for_xxxtremelightningrouletteapi": "last spin details and Outcome Data", "pull_track_for_air_cargo_co2_track_and_trace": "By providing a valid AWB, you can get tracking information for the shipment.", "singapore_scheduled_flights_level_for_global_flight_data": "Get weekly Singapore scheduled departing flights level.", "stock_profile_stock_for_mboum_finance": "Get stock profile information such as company name, descriptions, website, etc...", "summary_detail_for_yh_finance_complete": "This endpoint returns full detail of any public stock", "user_s_videos_for_tiktok_api": "Return User Videos", "wnba_standings_for_wnba_api": "The endpoint provides you with the team standings for the WNBA"}, "aseqs": [{"api_name": "latest_outcome_for_xxxtremelightningrouletteapi", "api_action": "\nAction: latest_outcome_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_xxxtremelightningrouletteapi", "api_action": "\nAction: history_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi", "api_action": "\nAction: latest_outcome_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi", "api_action": "\nAction: latest_outcome_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}}]}
{"URL": "13178", "query": "I'm a surfer looking for the perfect wave. Can you give me the wave conditions, tide information, and weather forecast for the spot with the closest ocean conditions to latitude -33.9 and longitude 151.2? Please include the wave mean period, wind wave mean period, and wave from direction.", "api_names": ["xyz_map_tiles_for_ocean_conditions_for_wavebase", "ocean_conditions_closest_to_latitude_longitude_for_wavebase", "Finish", "get_all_districts_of_a_city_in_vietnam_for_viet_nam_administrative_divisions", "list_of_countries_for_stocks_for_investing", "retrieve_active_user_lend_eth_offers_for_blur", "shared_service_for_lootero", "get_stations_within_1_km_for_ev_charging_stations", "price_for_apfelpreise", "user_data_by_secuid_for_tiktok_solutions", "season_episodes_for_netflix_v2", "get_platform_by_slug_for_is_this_coin_a_scam", "eomonth_for_date_calculator", "competitions_team_stats_for_livescore_sports", "conversation_delete_for_zipwhip", "list_all_simulations_for_geolocation_simulation_for_mobile_apps", "proxy_detection_api_for_proxy_detection", "new_ios_apps_for_app_store"], "api_descs": {"Finish": "No description available.", "competitions_team_stats_for_livescore_sports": "Get competition Team statistics by competition ID", "conversation_delete_for_zipwhip": "Deletes the conversation based on the provided conversation ID. It also deletes the associated messages.", "eomonth_for_date_calculator": "Computes and returns a date on the last day of the month in the future or past. This resource behave exactly as Excel EOMONTH function.", "get_all_districts_of_a_city_in_vietnam_for_viet_nam_administrative_divisions": "Get all names of districts in a city", "get_platform_by_slug_for_is_this_coin_a_scam": "Get a specific platform by slug", "get_stations_within_1_km_for_ev_charging_stations": "Return nearest charging stations within 1 km radius.", "list_all_simulations_for_geolocation_simulation_for_mobile_apps": "", "list_of_countries_for_stocks_for_investing": "This is a list of available countries, it is used as a request on another endpoint.", "new_ios_apps_for_app_store": "Get list of new ios apps", "ocean_conditions_closest_to_latitude_longitude_for_wavebase": "​https://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location.", "price_for_apfelpreise": "Get latest average price for manufacturer number", "proxy_detection_api_for_proxy_detection": "API will detect if an ip address is related to a proxy of any kind. Checks through a database of over 26 million proxies.", "retrieve_active_user_lend_eth_offers_for_blur": "This endpoint is used to retrieve active user lend ETH offers\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "season_episodes_for_netflix_v2": "Season Episodes", "shared_service_for_lootero": "This endpoint returns the items related to a share code", "user_data_by_secuid_for_tiktok_solutions": "Get User Data by SecUID", "xyz_map_tiles_for_ocean_conditions_for_wavebase": "Wavebase Global Ocean Tiles API:\n\nWave Signficant Height (GET): https://api.wavebase.app/v1/tiles/singleband/{variable}/{date-timeslot - YYYYMMDDHH}/0/0/0.png\n\ne.g.: https://api.wavebase.app/v1/tiles/singleband/VHM0/2023051703/0/0/0.png \n\nCurrently only Tile at 0/0/0 is available Free.  Contact:  info@wavebase.app for additional tiles."}, "aseqs": [{"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase", "api_action": "\nAction: ocean_conditions_closest_to_latitude_longitude_for_wavebase\nAction Input: {\n  \"latitude\": -33.9,\n  \"longitude\": 151.2\n}", "api_reaction": null}, {"api_name": "xyz_map_tiles_for_ocean_conditions_for_wavebase", "api_action": "\nAction: xyz_map_tiles_for_ocean_conditions_for_wavebase\nAction Input: {\n  \"variable\": \"VHM0\",\n  \"datetime\": \"2023071000\"\n}", "api_reaction": null}, {"api_name": "xyz_map_tiles_for_ocean_conditions_for_wavebase", "api_action": "\nAction: xyz_map_tiles_for_ocean_conditions_for_wavebase\nAction Input: {\n  \"variable\": \"VTMP\",\n  \"datetime\": \"2023071000\"\n}", "api_reaction": null}, {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase", "api_action": "\nAction: ocean_conditions_closest_to_latitude_longitude_for_wavebase\nAction Input: {\n  \"latitude\": -33.9,\n  \"longitude\": 151.2\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ocean_conditions_closest_to_latitude_longitude_for_wavebase"}}]}
{"URL": "71466", "query": "I'm writing an article about multilingualism and its benefits. Can you help me translate a few phrases into Spanish, French, German, and Italian? Please ensure accurate language detection for the source text.", "api_names": ["Finish", "accurate_language_detection_for_translate_v3", "translate_for_translate_v3", "trending_stocks_for_sec_filings", "get_the_continents_for_location", "calculate_repayment_schedule_for_loan_amortization_schedule_calculator", "carbonfootprintfrompublictransit_for_carbonfootprint", "screenshot_endpoint_for_screenshot_url_to_image", "get_token_balance_for_pancakeswap_api_freemium", "get_meta_data_for_investing_cryptocurrency_markets", "memes_for_meme_generator_v2", "time_for_pubnub_network"], "api_descs": {"Finish": "No description available.", "accurate_language_detection_for_translate_v3": "This endpoint will return the Language of the Text", "calculate_repayment_schedule_for_loan_amortization_schedule_calculator": "Returns detailed loan repayment schedule", "carbonfootprintfrompublictransit_for_carbonfootprint": "Return CO2e in Kg from the use of public transporation.", "get_meta_data_for_investing_cryptocurrency_markets": "Get init meta data", "get_the_continents_for_location": "Get the continents.", "get_token_balance_for_pancakeswap_api_freemium": "An endpoint to get Token Balance", "memes_for_meme_generator_v2": "Generate mems by /meme", "screenshot_endpoint_for_screenshot_url_to_image": "Take a screenshot from a webpage url.", "time_for_pubnub_network": "Timetoken from PubNub Network", "translate_for_translate_v3": "Return Translated Text and the source language if it wasn't specified", "trending_stocks_for_sec_filings": "Returns the top  trending stocks on Last10K.com right now with the most viewed <strong>10-K / 20-F / 40-F Annual Reports</strong> and <strong>10-Q Quarterly SEC Filings</strong>.\n\nView live data at: https://last10k.com/stock-screeners/trending"}, "aseqs": [{"api_name": "accurate_language_detection_for_translate_v3", "api_action": "\nAction: accurate_language_detection_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\"\n}", "api_reaction": null}, {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\",\n  \"dest\": \"es\",\n  \"src\": \"en\"\n}", "api_reaction": null}, {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\",\n  \"dest\": \"fr\",\n  \"src\": \"en\"\n}", "api_reaction": null}, {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\",\n  \"dest\": \"de\",\n  \"src\": \"en\"\n}", "api_reaction": null}, {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\",\n  \"dest\": \"it\",\n  \"src\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "accurate_language_detection_for_translate_v3", "api_action": "\nAction: accurate_language_detection_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\",\n  \"dest\": \"de\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\",\n  \"dest\": \"it\",\n  \"src\": \"en\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "accurate_language_detection_for_translate_v3", "api_action": "\nAction: accurate_language_detection_for_translate_v3\nAction Input: {\n  \"text\": \"I'm writing an article about multilingualism and its benefits.\"\n}", "api_reaction": null}}]}
{"URL": "21503", "query": "I'm a student researching the impact of fuel prices on the economy. Can you provide me with the current fuel prices for gasoline, diesel, and LPG? Additionally, I need information on recent earthquakes, including the magnitude, location, and date of occurrence.", "api_names": ["akaryak_t_for_kolektifapi", "deprem_for_kolektifapi", "Finish", "get_all_locations_for_art_openings_italy", "open_weather_for_weather", "v1_covid_for_covid_19_news", "get_date_fact_for_numbers", "cities_v2_get_information_for_airvisual", "consumer_name_search_for_data_axle_consumer_search", "albums_get_details_for_shazam", "v1_1_for_bdapi", "get_postal_codes_by_id_for_canada_postal_codes", "tvl_protocol_for_defi_data", "get_version_for_nsfw", "getmoviestatus_for_helioviewer_v1", "list_of_available_currencies_for_changenow_crypto_exchange", "get_stream_tags_for_twitch_api", "getgamedetail_for_evosis_s_game_database"], "api_descs": {"Finish": "No description available.", "akaryak_t_for_kolektifapi": "«haberler.com» Güncel Akaryakıt Verileri", "albums_get_details_for_shazam": "Get detailed album of an album", "cities_v2_get_information_for_airvisual": "Get information in specific city by its id", "consumer_name_search_for_data_axle_consumer_search": "Find relevant People in the Data Axle database", "deprem_for_kolektifapi": "«afet.gen.tr» Son Depremler Verisi", "get_all_locations_for_art_openings_italy": "This service returns a list of all locations where art events take place.", "get_date_fact_for_numbers": "Get a fact about a day of year", "get_postal_codes_by_id_for_canada_postal_codes": "Get postal code by id", "get_stream_tags_for_twitch_api": "Returns stream tags.", "get_version_for_nsfw": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getgamedetail_for_evosis_s_game_database": "Returns the game's information as Json", "getmoviestatus_for_helioviewer_v1": "", "list_of_available_currencies_for_changenow_crypto_exchange": "This API endpoint returns the list of available currencies. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.\n\n<h3>Successful response:</h3>\n\t<p>The response contains an array of objects with currency information.</p>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>ticker</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency ticker</td>\n    </tr>\n    <tr>\n        <td><b><i>name</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency name</td>\n    </tr>\n    <tr>\n        <td><b><i>image</i></b></td>\n        <td><i>String</i></td>\n        <td>Currency logo url</td>\n    </tr>\n    <tr>\n        <td><b><i>hasExternalId</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency has an Extra ID</td>\n    </tr>\n    <tr>\n        <td><b><i>isFiat</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is a fiat currency (EUR, USD)</td>\n    </tr>\n    <tr>\n        <td><b><i>featured</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is popular</td>\n    </tr>\n    <tr>\n        <td><b><i>isStable</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is stable</td>\n    </tr>\n    <tr>\n        <td><b><i>supportsFixedRate</i></b></td>\n        <td><i>Boolean</i></td>\n        <td>Indicates if a currency is available on a fixed-rate flow</td>\n    </tr>\n</table>\n\n<h3>Request Parameters:</h3>", "open_weather_for_weather": "weathermap", "tvl_protocol_for_defi_data": "Get only protocol TVL", "v1_1_for_bdapi": "`/v1.1`\nPrefix endpoint for version 1.1\nResponse provides a list of available endpoints in version 1.1", "v1_covid_for_covid_19_news": "Highly customizable search through our database of news only on the next specific keywords: \n`covid`,`covid-19`, `coronavirus`, `коронавирус`, `koronavirüs`, `koronavirüs`, `coronavirüs`, `التاجى`\nAll filters and sorting options are allowed."}, "aseqs": [{"api_name": "akaryak_t_for_kolektifapi", "api_action": "\nAction: akaryak_t_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "deprem_for_kolektifapi", "api_action": "\nAction: deprem_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "deprem_for_kolektifapi", "api_action": "\nAction: deprem_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "akaryak_t_for_kolektifapi", "api_action": "\nAction: akaryak_t_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "akaryak_t_for_kolektifapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "akaryak_t_for_kolektifapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "akaryak_t_for_kolektifapi", "api_action": "\nAction: akaryak_t_for_kolektifapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "akaryak_t_for_kolektifapi", "api_action": "\nAction: akaryak_t_for_kolektifapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "akaryak_t_for_kolektifapi"}}]}
{"URL": "35499", "query": "I'm planning to attend a football match next week. Can you give me the predictions for the matches in the next 48 hours? It would be helpful if you could also provide the bookie odds. Furthermore, I'm interested in the performance statistics for the past predictions in the last 14 days.", "api_names": ["predictions_for_football_prediction", "list_available_markets_for_football_prediction", "performance_stats_for_past_predictions_for_football_prediction", "Finish", "delete_delete_a_webhook_for_calltrackingmetrics", "api_v1_sources_for_sunnah_fasting", "category_tags_for_hashtag", "bans_esports_for_sofasport", "scraper_for_aliexpress_product", "game_details_for_allscores", "bulkgenerateguids_for_guid_generator", "resources_allcontries_for_africa_api_", "artist_related_for_spotify", "sms_mt_send_sms_get_for_wavecell_sms", "batch_for_sigue_payout", "get_spanish_alt_text_for_alt_bichinhos"], "api_descs": {"Finish": "No description available.", "api_v1_sources_for_sunnah_fasting": "Get list of sources", "artist_related_for_spotify": "Artist related", "bans_esports_for_sofasport": "Get bans (esports) by event_id", "batch_for_sigue_payout": "batch process to retrieve payout transaction data", "bulkgenerateguids_for_guid_generator": " ", "category_tags_for_hashtag": "Get a list of all the tags from a category", "delete_delete_a_webhook_for_calltrackingmetrics": "", "game_details_for_allscores": "Get game details.", "get_spanish_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **Spanish.**", "list_available_markets_for_football_prediction": "List all available markets and the ones that are enabled for your subscription plan", "performance_stats_for_past_predictions_for_football_prediction": "Returns information about the accuracy of past predictions. (in the last day, 7 days, 14 days and 30 days) Can be additionally filtered by federation and market. If no market filter is provided it defaults to classic", "predictions_for_football_prediction": "This endpoint returns a list of the football predictions scheduled to start in the next 48hours. URL parameters can be specified to show past predictions or to filter by federation and prediction market.", "resources_allcontries_for_africa_api_": "Gives you a list of the most important resources that each African country relies on to keep their economy running.", "scraper_for_aliexpress_product": "/scraper", "sms_mt_send_sms_get_for_wavecell_sms": "Send a SMS message using Wavecell HTTP GET"}, "aseqs": [{"api_name": "predictions_for_football_prediction", "api_action": "\nAction: predictions_for_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "performance_stats_for_past_predictions_for_football_prediction", "api_action": "\nAction: performance_stats_for_past_predictions_for_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "list_available_markets_for_football_prediction", "api_action": "\nAction: list_available_markets_for_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "predictions_for_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "predictions_for_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "predictions_for_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "predictions_for_football_prediction"}}]}
{"URL": "3003", "query": "Retrieve the historical exchange rates for USD to EUR on January 1, 2021. Furthermore, I would like to know the latest exchange rates for USD to GBP, CAD, and AUD. Thank you!", "api_names": ["latest_exchange_rates_for_exchangeratespro", "historical_exchange_rates_for_exchangeratespro", "Finish", "zipcode_for_ap_sample", "products_for_seeding_data", "get_cities_by_filter_for_biggestcities", "products_v2_list_for_forever21", "autocomplete_suggestions_for_arcgis_platform_geocoding", "etf_list_for_palmy_investing_api", "get_username_higgs_domino_for_id_game_checker", "tomorrow_sure_vip_over_2_5_goals_for_168predict_vip_football_predictions", "search_twitter_for_twitter_v5"], "api_descs": {"Finish": "No description available.", "autocomplete_suggestions_for_arcgis_platform_geocoding": "The ArcGIS World Geocoding Service includes a method that allows character-by-character autocomplete suggestions to be generated for user input in a client application. This capability facilitates the interactive search user experience by reducing the number of characters that need to be typed before a suggested match is obtained. The idea is that a client application can provide a list of suggestions that is updated with each character entered by a user until the place they are looking for is returned in the list.\n\n![Autocomplete diagram](https://developers.arcgis.com/rest/geocode/api-reference/GUID-9A754AFE-8154-46C3-8A31-3566963F971E-web.png)\n\n[API reference `suggest` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm)", "etf_list_for_palmy_investing_api": "A list of n ETFs where each hold time critical information such as price", "get_cities_by_filter_for_biggestcities": "Get Cities by filter", "get_username_higgs_domino_for_id_game_checker": "Enter your Higgs Domino ID  in the required parameters", "historical_exchange_rates_for_exchangeratespro": "Access over two decades of historical exchange rate data with the /historical endpoint. Exchange rates are provided as daily end of day exchange rates dating back all the way to 1999. Choose the day with the 'date' parameter.", "latest_exchange_rates_for_exchangeratespro": "Get up-to-date exchange rate data with the /latest endpoint. Choose from daily, hourly, or minute updates, based on your plan. Stay on top of the markets with real-time data, delivered with one simple request.", "products_for_seeding_data": "Get 100 products with en_US locale and taxes of 10% and categories type set as string", "products_v2_list_for_forever21": "List products by category", "search_twitter_for_twitter_v5": "Search Twitter (Top, Latest, Videos, Photos and People)", "tomorrow_sure_vip_over_2_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers tomorrow sure and precise over 2.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information.", "zipcode_for_ap_sample": "Get locations by zipcode"}, "aseqs": [{"api_name": "historical_exchange_rates_for_exchangeratespro", "api_action": "\nAction: historical_exchange_rates_for_exchangeratespro\nAction Input: {\n  \"date\": \"2021-01-01\"\n}", "api_reaction": null}, {"api_name": "latest_exchange_rates_for_exchangeratespro", "api_action": "\nAction: latest_exchange_rates_for_exchangeratespro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_exchange_rates_for_exchangeratespro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_exchange_rates_for_exchangeratespro", "api_action": "\nAction: latest exchange rates for USD to EUR\nAction Input: {\n  \"date\": null,\n  \"to_currency_codes\": [\n    \"EUR\",\n    \"GBP\",\n    \"CAD\",\n    \"AUD\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "historical_exchange_rates_for_exchangeratespro", "api_action": "\nAction: historical_exchange_rates_for_exchangeratespro\nAction Input: {\n  \"date\": \"2021-01-01\",\n  \"to_currency\": \"EUR\"\n}", "api_reaction": null}}]}
{"URL": "10772", "query": "I'm a sports journalist and I'm writing an article about the Women's World Cup 2023. Can you provide me with some interesting facts about the tournament? I would like to know the total number of countries participating and any notable players to watch out for.", "api_names": ["Finish", "get_all_players_for_shescoresapi", "get_all_countries_for_shescoresapi", "download_file_for_rushtranslate", "get_a_random_quote_for_anime_quotes", "itemsinateamdrive_for_ishan", "video_downloader_for_video_downloader", "prices_date_for_route_precedence_test_1", "get_current_count_for_counter", "calendars_get_economic_calendar_for_trading_view", "united_states_residential_mobility_for_covid_19_economic_impact", "places_list_by_radius_nearby_search_for_places", "getcurrentbysymbol_for_earningsdata", "air_quality_history_for_air_quality", "get_all_artistic_directors_for_hautecouture_api", "asia_for_nomad_list_cities", "teams_list_for_cricbuzz_cricket", "get_taboo_words_from_word_for_taboo_api"], "api_descs": {"Finish": "No description available.", "air_quality_history_for_air_quality": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.", "asia_for_nomad_list_cities": "Get Asian cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "calendars_get_economic_calendar_for_trading_view": "Get economic calendar by specific date range and countries", "download_file_for_rushtranslate": "Retrieve a temporary download URL for the file. Files are encrypted and stored in an Amazon S3 bucket. When you want to download a file this request will generate a temporary signed URL allowing access to download the file securely. URLs expire after two minutes.", "get_a_random_quote_for_anime_quotes": "Get a random quote", "get_all_artistic_directors_for_hautecouture_api": "Renders all the maisons artistic directors", "get_all_countries_for_shescoresapi": "Gets all countries participating", "get_all_players_for_shescoresapi": "Gets all the players from all the teams", "get_current_count_for_counter": "get count and and don't increase", "get_taboo_words_from_word_for_taboo_api": "Provide your own word and get the taboo words back.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "getcurrentbysymbol_for_earningsdata": "Get the current value, growth and momentum information for a single stock.", "itemsinateamdrive_for_ishan": " ", "places_list_by_radius_nearby_search_for_places": "Method returns objects closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.", "prices_date_for_route_precedence_test_1": "/prices/{date}", "teams_list_for_cricbuzz_cricket": "List teams", "united_states_residential_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at residential.", "video_downloader_for_video_downloader": "FreeVideoDownloader is a powerful video downloader tool designed for websites, allowing seamless integration of video downloading capabilities. It provides an easy-to-use API that enables website owners to offer their visitors the ability to download videos from various platforms without leaving the site. With FreeVideoDownloader, users can effortlessly save videos in different formats, enhancing their browsing experience and content accessibility."}, "aseqs": [{"api_name": "get_all_countries_for_shescoresapi", "api_action": "\nAction: get_all_countries_for_shescoresapi\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_players_for_shescoresapi", "api_action": "\nAction: get_all_players_for_shescoresapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_countries_for_shescoresapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_players_for_shescoresapi", "api_action": "\nAction: get_all_countries_for_shescoresapi\nAction Input: {}\nAction Output: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_countries_for_shescoresapi"}}]}
{"URL": "34714", "query": "My family loves learning about different cultures. Can you suggest countries with diverse languages, interests, and famous landmarks? It would be helpful to have information about child-friendly activities and educational experiences.", "api_names": ["interests_for_fastapi_project", "explore_for_fastapi_project", "Finish", "options_vertical_for_fancyoptions", "products_detail_for_kohls", "category_for_asin_data", "0mmo_for_0mmo", "search_for_serp_api", "reversegeocode_for_trueway_geocoding", "get_all_countries_for_shescoresapi", "get_user_favorite_videos_for_tiktok_video_feature_summary", "get_train_data_by_no_mrt_train_no_get_for_aqls_b2c_system", "show_video_for_flowplayer_drive", "get_amenities_filters_for_airbnb_v2", "get_past_results_1_year_for_4d_results"], "api_descs": {"0mmo_for_0mmo": "0MMO is the number 1 site offering the very best software designed for Internet Marketers from 2008!\nAddress Novokosinskaya 14k7, Moscow,119034, Russia\nHotline 0945273782\nEmail: support@0mmo.net\nhttps://www.0mmo.net \nhttps://www.0mmo.net/gb \nhttps://www.0mmo.net/im-tools \nhttps://www.0mmo.net/wp \nhttps://www.0mmo.net/tutorials \nhttps://www.liveinternet.ru/users/0mmo/profile\nhttps://dribbble.com/0mmo/about\nhttps://infogram.com/0mmonet-1h7g6k0e17ry02o?live\nhttps://www.babelcube.com/user/0m-mo\nhttps://www.spreaker.com/user/15816794\nhttps://sketchfab.com/0mmo\nhttps://gitlab-test.eclipse.org/0mmo\nhttps://w3techs.com/users/profile/2751735\nhttps://www.scoop.it/topic/0m-mo\nhttps://0mmo.hpage.com/\nhttps://www.diigo.com/user/ommonet\nhttps://forums.iis.net/members/0mmo.aspx\nhttps://www.podomatic.com/podcasts/0mmonet9\nhttps://pinshape.com/users/1775513-0mmonet#designs-tab-open\nhttps://osf.io/xmzqj/\nhttps://gitlab.tue.nl/0mmo\nhttps://git.qt.io/0mmo\nhttps://communities.bentley.com/members/53bef9c4_2d00_8015_2d00_43ab_2d00_8a9c_2d00_d7d0b2a8d418\nhttps://myanimelist.net/profile/0mmo\nhttps://app.glosbe.com/profile/6875826798379142906\nhttps://8tracks.com/users/0mmo\nhttps://0mmo.cgsociety.org/profile\nhttps://api.rakuten.net/user/0mmonet\nhttps://www.forexfactory.com/0mmonet\nhttps://os.mbed.com/users/0mmonet/\nhttps://xclams.xwiki.org/xwiki/bin/view/XWiki/0mmonet\nhttp://photozou.jp/user/top/3300078\nhttps://www.designspiration.com/0mmonet9/saves/\nhttps://piqs.de/user/0mmo/account/\nhttps://hypothes.is/users/0mmo\nhttps://www.renderosity.com/users/0mmonet\nhttps://onmogul.com/0mmo\nhttps://www.hulkshare.com/0mmo\nhttps://writeablog.net/qur56j124j\nhttps://www.noteflight.com/profile/137b8a32fba12c039d5987842f5b20676af05440\nhttps://blogfreely.net/me/posts/\nhttps://www.cakeresume.com/dashboard\nhttps://appsliced.co/u/0mmo\nhttps://dashburst.com/0mmo\nhttps://timeswriter.com/members/0mmo/profile/\nhttps://www.csslight.com/profile/0mmo\nhttps://git.feneas.org/0mmonet9\nhttps://www.phuot.vn/members/0mmo.267461/\nhttps://startupmatcher.com/p/0mmo\nhttps://getpocket.com/@0mmo\nhttps://www.free-ebooks.net/profile/1356925/0mmo\nhttps://www.cnccode.com/user/0mmo\nhttps://amara.org/en/profiles/profile/pOFx88VGGOI-X9mHsomnquPySAFAWbW6JlrFYtYIgKU/\nhttps://en.eyeka.com/u/0mmo\nhttp://gitlab.aic.ru/0mmo\nhttp://www.asmetalwork.1gb.ua/forum/user/edit/56363.page\nhttps://band.us/band/86095136\nhttps://www.tripline.net/0mmo/\nhttps://bookme.name/0mmonet\nhttps://able2know.org/user/0mmo/\nhttps://profile.hatena.ne.jp/huyss/profile\nhttps://lackky.com/0mmonet\nhttps://www.webmasterpro.de/user/0mmonet/\nhttps://openuserjs.org/users/0mmo\nhttps://www.linkedin.com/in/0mmo/", "Finish": "No description available.", "category_for_asin_data": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results for an Amazon category. Categories can be specified either via passing an Amazon category URL in to the url parameter, or by passing a Category ID in the `category_id` and an Amazon domain in the `amazon_domain` parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nCategory results are retrieved from the category listing page on Amazon.", "explore_for_fastapi_project": "explore api", "get_all_countries_for_shescoresapi": "Gets all countries participating", "get_amenities_filters_for_airbnb_v2": "-", "get_past_results_1_year_for_4d_results": "Return all company 4D Results within a specific date range.\n(Up to 1 year data and only available for ULTRA PLAN subscriber)", "get_train_data_by_no_mrt_train_no_get_for_aqls_b2c_system": " ", "get_user_favorite_videos_for_tiktok_video_feature_summary": "get user favorite videos list", "interests_for_fastapi_project": "Gets interests", "options_vertical_for_fancyoptions": "This endpoint returns verticals for an individual ticker. The verticals that are returned have a 70% chance of being out of the money at time of expirations.", "products_detail_for_kohls": "Get detail information of specific product", "reversegeocode_for_trueway_geocoding": "Obtain address for location", "search_for_serp_api": "Perform Google search and get results", "show_video_for_flowplayer_drive": "Shows the specified video, with embedded encodings"}, "aseqs": [{"api_name": "explore_for_fastapi_project", "api_action": "\nAction: explore_for_fastapi_project\nAction Input: {}", "api_reaction": null}, {"api_name": "explore_for_fastapi_project", "api_action": "\nAction: explore_for_fastapi_project\nAction Input: {}", "api_reaction": null}, {"api_name": "interests_for_fastapi_project", "api_action": "\nAction: interests_for_fastapi_project\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_countries_for_shescoresapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_countries_for_shescoresapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "explore_for_fastapi_project", "api_action": "{\"interests\": \"diverse languages, child-friendly activities, educational experiences\", \"family_size\": 1}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "explore_countries_with_diverse_cultures", "api_action": "", "api_reaction": null}}]}
{"URL": "87346", "query": "My company is in search of an API that provides address suggestions for partial queries. Can you suggest a tool that offers a JSON interface for this purpose? We're specifically interested in suggestions for the term 'Bridge'.", "api_names": ["address_autosuggest_for_address_autosuggest", "Finish", "pinterest_for_check_username", "info_for_hearthstone", "get_ip_for_ipinfoapi", "setup_for_cyber_guardian", "sweden_scheduled_flights_growth_for_global_flight_data", "ufc_fight_night_song_vs_simon_april_28_2023_for_mma_stats"], "api_descs": {"Finish": "No description available.", "address_autosuggest_for_address_autosuggest": "\"Address Autosuggest\" API buit to suggests address results for a given search term. This API provides a JSON interface to extract address suggestions for a complete or partial address query.\n\nThe Autocomplete API suggests partial address results for a given query.", "get_ip_for_ipinfoapi": "Get user's IP", "info_for_hearthstone": "Returns a list of current patch, classes, sets, types, factions, qualities, races and locales.", "pinterest_for_check_username": "Check username on Pinterest", "setup_for_cyber_guardian": "Generates a link that grants access to the configuration dashboard for the Cyber Guardian and redirects you to it, already logged in through Rapid.", "sweden_scheduled_flights_growth_for_global_flight_data": "Get weekly Sweden scheduled departing flights growth.", "ufc_fight_night_song_vs_simon_april_28_2023_for_mma_stats": "**Get details to UFC Fight Night: Song vs. Simon**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."}, "aseqs": [{"api_name": "address_autosuggest_for_address_autosuggest", "api_action": "\nAction: address_autosuggest_for_address_autosuggest\nAction Input: {\n  \"query\": \"Bridge\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "address_autosuggest_for_address_autosuggest"}}, {"state": "generated_by_agent", "aseq": {"api_name": "address_autosuggest_for_address_autosuggest"}}]}
{"URL": "17589", "query": "I'm researching a tweet and I need to retrieve the users who favorited it. Can you give me the list of users who favorited the tweet with ID 1349129669258448897? It would be great if you could include their public information, such as their usernames and follower counts.", "api_names": ["tweet_user_favoriters_for_twitter", "Finish", "image_search_for_image_search", "collection_videos_details_for_tiktok_api", "get_draw_result_for_lotto_draw_results_global", "mgs_products_for_mgs", "planetaryoverview_for_horostory", "getallsearches_for_youtube_influencer_search", "removeendpointdata_for_endpoint_monitor_tool", "teste_for_shoxbps", "tournamentsbycalender_for_sportifyapi", "products_v2_list_for_asos"], "api_descs": {"Finish": "No description available.", "collection_videos_details_for_tiktok_api": "Return a collection details and videos", "get_draw_result_for_lotto_draw_results_global": "Get draw result by given region, game and draw date.", "getallsearches_for_youtube_influencer_search": "Get all searches", "image_search_for_image_search": "Image Search", "mgs_products_for_mgs": "MGS Products", "planetaryoverview_for_horostory": "get the Planetary Overview of the day", "products_v2_list_for_asos": "List products, search products with options and filters version 2", "removeendpointdata_for_endpoint_monitor_tool": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.", "teste_for_shoxbps": "teste", "tournamentsbycalender_for_sportifyapi": "Tournaments By Calender", "tweet_user_favoriters_for_twitter": "This endpoint returns a list of user who favorited the tweet"}, "aseqs": [{"api_name": "tweet_user_favoriters_for_twitter", "api_action": "\nAction: tweet_user_favoriters_for_twitter\nAction Input: {\n  \"tweet_id\": \"1349129669258448897\"\n}", "api_reaction": null}, {"api_name": "tweet_user_favoriters_for_twitter", "api_action": "\nAction: tweet_user_favoriters_for_twitter\nAction Input: {\n  \"tweet_id\": \"1349129669258448897\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tweet_user_favoriters_for_twitter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_user_favoriters_for_twitter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweet_user_favoriters_for_twitter"}}]}
{"URL": "17801", "query": "I'm working on a creative writing assignment and require some inspiration. Please provide me with 3 random WikiHow steps and 2 image URLs to spark my imagination.", "api_names": ["steps_for_wikihow", "images_for_wikihow", "Finish", "earnings_history_for_stock_analysis", "api_v1_sources_for_sunnah_fasting", "search_title_for_open_library", "feeds_list_similarities_for_yummly", "football_for_football_api", "list_of_hotel_chains_for_booking_com", "get_categories_v1_for_shapeways", "search_for_joj_finance", "get_the_last_result_for_euro_millions", "banks_by_country_for_bank_swift_codes", "types_for_car_data", "rate_by_id_for_crypto_exchanges"], "api_descs": {"Finish": "No description available.", "api_v1_sources_for_sunnah_fasting": "Get list of sources", "banks_by_country_for_bank_swift_codes": "Returns list of banks for a country (use two letter ISO country code)", "earnings_history_for_stock_analysis": "Get earnings history.", "feeds_list_similarities_for_yummly": "List similar recipes by name and author", "football_for_football_api": "https://www.api-football.com/documentation", "get_categories_v1_for_shapeways": "", "get_the_last_result_for_euro_millions": "Get the latest draw results available", "images_for_wikihow": "Gets the src URL for random WikiHow images", "list_of_hotel_chains_for_booking_com": "Returns a list of hotel chains.", "rate_by_id_for_crypto_exchanges": "Get rate by ID", "search_for_joj_finance": "Search for indexes, stocks, ETFs, cryptocurrencies, currencies and more", "search_title_for_open_library": "Searches for books by title.", "steps_for_wikihow": "Gets a random selection of WikiHow steps.", "types_for_car_data": "get a list of supported types"}, "aseqs": [{"api_name": "steps_for_wikihow", "api_action": "\nAction: steps_for_wikihow\nAction Input: {\n  \"count\": 3\n}", "api_reaction": null}, {"api_name": "images_for_wikihow", "api_action": "\nAction: images_for_wikihow\nAction Input: {\n  \"count\": 2\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "steps_for_wikihow"}}, {"state": "generated_by_agent", "aseq": {"api_name": "images_for_wikihow", "api_action": "{\"count\": 2}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "steps_for_wikihow", "api_action": "\nAction: steps_for_wikihow\nAction Input: {\n  \"count\": 3\n}", "api_reaction": null}}]}
{"URL": "27504", "query": "My friends and I are football fanatics, and we want to create a transfer database. Could you provide us with the transfer records, player info, and trade value for the Italian competition? We're also interested in the game plan for the current season and short information about the competitions.", "api_names": ["competitions_list_default_for_transfermarket", "transfers_list_for_transfermarket", "competitions_get_short_info_for_transfermarket", "Finish", "transfers_list_records_for_transfermarket", "competitions_get_game_plan_for_transfermarket", "status_200_for_daily_ovrll_0822202143542", "streams_user_for_stocktwits", "movies_get_dvds_for_flixster", "get_the_awarded_books_of_a_year_for_hapi_books", "comments_for_axesso_facebook_data_service", "userinfo_for_instagram_cheapest", "letters_for_boggle", "all_data_for_robberydata", "list_all_models_by_phone_brand_for_mobile_phone_specs_database", "get_symbols_for_ohlc_history_forex", "all_bps_for_bps", "total_population_for_countries_population", "challenge_videos_for_tiktok_v3", "tweets_by_userid_for_twitter_aio"], "api_descs": {"Finish": "No description available.", "all_bps_for_bps": "Lister toutes les boîtes postales", "all_data_for_robberydata": "Get all Data", "challenge_videos_for_tiktok_v3": "get challenge videos by challenge _id", "comments_for_axesso_facebook_data_service": "Fetch comments for a given feedbackId (returned in the post endpoint). For pagination the optional query parameter \"after\" can be used by including \"comments.data.feedback.page_info.end_cursor\" from the previous response.", "competitions_get_game_plan_for_transfermarket": "Get game plan by competition and season", "competitions_get_short_info_for_transfermarket": "Get short information of one or more competitions", "competitions_list_default_for_transfermarket": "List most popular competitions", "get_symbols_for_ohlc_history_forex": "Get all available forex pairs", "get_the_awarded_books_of_a_year_for_hapi_books": "Returns the list of the best books of a year by its winning category.\nEach returned book has its Name, Winning Category, Cover Image and more.", "letters_for_boggle": "Solve Boggle board", "list_all_models_by_phone_brand_for_mobile_phone_specs_database": "List Models By Phone Brand name", "movies_get_dvds_for_flixster": "Get movies that watch at home", "status_200_for_daily_ovrll_0822202143542": "Testing", "streams_user_for_stocktwits": "Returns the most recent 30 messages for the specified user. Includes user object in response.", "total_population_for_countries_population": "Returns the estimated total population\n\n- Number in millions.", "transfers_list_for_transfermarket": "List transfers information along with player info, and market value", "transfers_list_records_for_transfermarket": "List records transfers information along with player info, and trade value", "tweets_by_userid_for_twitter_aio": "Receive all tweets ordered by most recent. You can use the cursor and count to navigate around.", "userinfo_for_instagram_cheapest": "get userinfo by username"}, "aseqs": [{"api_name": "competitions_list_default_for_transfermarket", "api_action": "\nAction: competitions_list_default_for_transfermarket\nAction Input: {}", "api_reaction": null}, {"api_name": "competitions_get_short_info_for_transfermarket", "api_action": "\nAction: competitions_get_short_info_for_transfermarket\nAction Input: {\"ids\": \"IT1\"}", "api_reaction": null}, {"api_name": "transfers_list_records_for_transfermarket", "api_action": "\nAction: transfers_list_records_for_transfermarket\nAction Input: {\"competitionid\": \"IT1\"}", "api_reaction": null}, {"api_name": "transfers_list_for_transfermarket", "api_action": "\nAction: transfers_list_for_transfermarket\nAction Input: {\"competitionid\": \"IT1\"}", "api_reaction": null}, {"api_name": "competitions_get_game_plan_for_transfermarket", "api_action": "\nAction: competitions_get_game_plan_for_transfermarket\nAction Input: {\"is_id\": \"IT1\", \"seasonid\": \"2021\"}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "transfers_list_records_for_transfermarket"}}, {"state": "generated_by_agent", "aseq": {"api_name": "transfers_list_records_for_transfermarket", "api_action": "{\"competition\": \"Italian\", \"season\": \"current\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "transfers_list_records_for_transfermarket", "api_action": "\nAction: transfers_list_records_for_transfermarket\nAction Input: {\"competition\": \"IT1\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "transfers_list_records_for_transfermarket", "api_action": "\nAction: transfers_list_records_for_transfermarket\nAction Input: {\"competitionid\": \"IT1\", \"season\": \"current_season\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "competitions_get_game_plan_for_transfermarket"}}, {"state": "generated_by_agent", "aseq": {"api_name": "transfers_list_for_transfermarket", "api_action": "\nAction: transfers_list_for_transfermarket\nAction Input: {\"competitionid\": \"IT1\"}", "api_reaction": null}}]}
{"URL": "84017", "query": "My company is expanding and we need to find a new office space in New York. Can you provide me with a list of available properties in the city? I am interested in commercial properties with a minimum of 5,000 square feet. Please include the agent details and photos of each property.", "api_names": ["realtorpropertylist_for_realtor_data_api_for_real_estate", "Finish", "ymm_for_autoymm", "player_information_for_hockey_datafeeds_by_rolling_insights", "instagram_user_for_user", "titles_id_for_moviesdatabase", "product_by_id_for_aliexpress_true_api", "list_all_available_subtitles_for_subtitles_for_youtube_v2", "getcodecontent_for_flow_study", "sample_app_config_copy_for_sample_app_config_json"], "api_descs": {"Finish": "No description available.", "getcodecontent_for_flow_study": " ", "instagram_user_for_user": "Here you can find the default value of an Instagram users details and test your API successfully.", "list_all_available_subtitles_for_subtitles_for_youtube_v2": "List all available subtitles for a YouTube video", "player_information_for_hockey_datafeeds_by_rolling_insights": "This endpoint returns player demographic information", "product_by_id_for_aliexpress_true_api": "Get entirely a single product and all possible values comes from it including images, videos and all product data.", "realtorpropertylist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor Property List with the data as given below, if you provide the city, state_code and offset.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\noffset: min = 0 and max can be depends on the total number of results. but the maximum number of results you can see at a time is 42. So you need to keep increasing the offset value by 42 to achieve a pagination.  To achieve pagination you have to start the offset from 0 and increase the offset by 42.\n\n`{\n    \"agent\": [\n      {\n        \"office_name\": \"CENTURY21 REAL ESTATE ALLIANCE\"\n      },\n      {\n        \"office_name\": null\n      }\n    ],\n    \"branding\": [\n      {\n        \"name\": \"CENTURY 21 Real Estate Alliance\",\n        \"photo\": null,\n        \"type\": \"Office\"\n      }\n    ],\n    \"last_update_date\": \"2022-12-06T01:24:16Z\",\n    \"list_date\": \"2022-08-23T23:24:23Z\",\n    \"list_price\": 875000,\n    \"listing_id\": \"2946989531\",\n    \"location\": {\n      \"address\": {\n        \"city\": \"San Francisco\",\n        \"coordinate\": {\n          \"lat\": 37.71979,\n          \"lon\": -122.462898\n        },\n        \"line\": \"9 Garfield St\",\n        \"postal_code\": \"94132\",\n        \"state\": \"California\",\n        \"state_code\": \"CA\"\n      },\n      \"county\": {\n        \"fips_code\": \"06075\",\n        \"name\": \"San Francisco\"\n      },\n      \"street_view_url\": \"https://maps.googleapis.com/maps/api/streetview?channel=rdc-streetview&client=gme-movesalesinc&location=9%20Garfield%20St%2C%20San%20Francisco%2C%20CA%2094132&size=640x480&source=outdoor&signature=NniMw06UKhWMjlwyIN-dwOajrxo=\"\n    },\n    \"open_house_description\": \"No Open House Available\",\n    \"other_listings\": {\n      \"rdc\": [\n        {\n          \"listing_id\": \"2946989531\",\n          \"listing_key\": null,\n          \"primary\": true,\n          \"status\": \"for_sale\"\n        }\n      ]\n    },\n    \"permalink\": \"https://www.realtor.com/realestateandhomes-detail/9-Garfield-St_San-Francisco_CA_94132_M23343-72866\",\n    \"photos\": [\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\"\n      },\n      {\n        \"href\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b145756411s.jpg\"\n      }\n    ],\n    \"price_reduced_amount\": null,\n    \"primary_photo\": \"https://ap.rdcpix.com/690f73cb78c5a22ccb272def0e3435fel-b1134851845s.jpg\",\n    \"property_description\": {\n      \"baths\": 1,\n      \"baths_1qtr\": null,\n      \"baths_3qtr\": null,\n      \"baths_full\": 1,\n      \"baths_half\": null,\n      \"beds\": 0,\n      \"garage\": 2,\n      \"lot_sqft\": 2539,\n      \"name\": null,\n      \"sold_date\": \"2017-08-17\",\n      \"sold_price\": 45373,\n      \"sqft\": 1094,\n      \"stories\": null,\n      \"sub_type\": null,\n      \"type\": \"single_family\",\n      \"year_built\": 1947\n    },\n    \"property_id\": \"2334372866\",\n    \"source\": \"BDCA\",\n    \"status\": \"for_sale\",\n    \"tax_record\": \"6A966F0C987E7C5A1DB0D29A6B22116A\",\n    \"type\": \"mls\",\n    \"virtual_tour_link\": \"No Virtual Tour Available\"\n  }`", "sample_app_config_copy_for_sample_app_config_json": "test", "titles_id_for_moviesdatabase": " ", "ymm_for_autoymm": "Year Make Model"}, "aseqs": [{"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate", "api_action": "\nAction: realtorpropertylist_for_realtor_data_api_for_real_estate\nAction Input: {\n  \"state_code\": \"NY\",\n  \"offset\": \"0\",\n  \"city\": \"New York\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate", "city": "New York", "state_code": "NY", "offset": 0}}, {"state": "generated_by_agent", "aseq": {"api_name": "realtorpropertylist_for_realtor_data_api_for_real_estate"}}]}
{"URL": "50725", "query": "I'm an avid reader and I want to explore news content in different languages. Could you please provide me with the supported languages for news content extraction? I'm also interested in popular news URLs and hot topics. Thank you in advance!", "api_names": ["Finish", "get_hot_topics_for_news_content_extraction_live", "get_popular_news_urls_for_news_content_extraction_live", "get_support_languages_for_news_content_extraction_live", "search_sex_offenders_for_sex_offenders", "properties_list_for_bayut", "get_city_by_id_for_geography_v2", "get_positions_for_body_for_astronomy", "extract_for_linkedin_profiles", "onpage_seo_analyze_for_website_analyze_and_seo_audit_pro_", "special_offers_for_flight_data_v2", "actors_get_interesting_jobs_for_online_movie_database", "search_for_gearbest", "get_top_nft_collections_for_top_nft_collections", "get_generation_status_for_midjourney", "carriers_detect_for_trackingmore_v2", "custom_dice_rolls_for_dice_roll_simulator", "generating_agency_specific_reports_for_odesk_apis", "openhab_for_openhub", "planet_vector_tiles_for_maptoolkit"], "api_descs": {"Finish": "No description available.", "actors_get_interesting_jobs_for_online_movie_database": "Get interesting jobs of actor or actress", "carriers_detect_for_trackingmore_v2": "Detect carrier by providing tracking number", "custom_dice_rolls_for_dice_roll_simulator": "Roll any number of dice with any number of sides any number of times.", "extract_for_linkedin_profiles": "Extracts data from Linkedin URL (profile or company page).", "generating_agency_specific_reports_for_odesk_apis": "Time reports can be generated for an agency, in order to use this API the authorized user needs staffing manager permissions to the agency.", "get_city_by_id_for_geography_v2": "get city by id", "get_generation_status_for_midjourney": "Get status of the previously posted job.\n\n- outcome - if Failure, then it comes from MJ, like censorship.\n- estimated_time - in seconds. based on previous generation.\n- percent - available when actual generation started", "get_hot_topics_for_news_content_extraction_live": "Hot Topics ranking by Google.", "get_popular_news_urls_for_news_content_extraction_live": "List of popular news url links ranking by Google.", "get_positions_for_body_for_astronomy": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"", "get_support_languages_for_news_content_extraction_live": "List of supported Languages.", "get_top_nft_collections_for_top_nft_collections": "Get the NFT collections ordered by volume or sales.", "onpage_seo_analyze_for_website_analyze_and_seo_audit_pro_": "Get Website audit data", "openhab_for_openhub": "smart home integration", "planet_vector_tiles_for_maptoolkit": "Global planet vector tiles.", "properties_list_for_bayut": "List properties with options and filters", "search_for_gearbest": " ", "search_sex_offenders_for_sex_offenders": "Params:\n@lat: latitude\n@lng: longitude\n@radius: search radius in Miles (Mi), e.g. radius = 0.2 means the API will search for sex offenders within 0.2 miles of the given lat and lng\n\nResponse:\n@offenders: List of Offender Object; If no offenders are found, it will return empty list `offenders: []`.\n\nExtensive database of National Registered Sex Offenders API for the United States. This API covers 750k+ offender records, 1M+ crime records, 19k+ cities, and all 50 states. Supports lat/lng search with radius.", "special_offers_for_flight_data_v2": "Brings the recent special offers from the airline companies back in the .XML format."}, "aseqs": [{"api_name": "get_support_languages_for_news_content_extraction_live", "api_action": "\nAction: get_support_languages_for_news_content_extraction_live\nAction Input: {}", "api_reaction": null}, {"api_name": "get_popular_news_urls_for_news_content_extraction_live", "api_action": "\nAction: get_popular_news_urls_for_news_content_extraction_live\nAction Input: {}", "api_reaction": null}, {"api_name": "get_hot_topics_for_news_content_extraction_live", "api_action": "\nAction: get_hot_topics_for_news_content_extraction_live\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_support_languages_for_news_content_extraction_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_popular_news_urls_for_news_content_extraction_live", "api_action": "\nAction: get_popular_news_urls_for_news_content_extraction_live\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_hot_topics_for_news_content_extraction_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_support_languages_for_news_content_extraction_live"}}]}
{"URL": "831", "query": "I'm organizing a luxury watch exhibition and I need to gather information about various watch brands. Can you fetch the details of all watch brands, including their reference numbers and offers?", "api_names": ["Finish", "get_all_watch_brands_for_watchsignals", "whoisserver_dnsservice_for_dns_lookup", "player_information_for_baseball_datafeeds_by_rolling_insights", "get_team_receiving_data_for_nfl_team_stats_v2", "get_product_for__demo_project_v3", "showtimes_for_argentina_movie_theatres", "combinations_for_papercliff", "top_memes_for_reddit_meme", "genres_for_streamlinewatch_streaming_guide"], "api_descs": {"Finish": "No description available.", "combinations_for_papercliff": "Returns the 100 most popular combinations/triples of keywords with the corresponding number of news agencies and articles from which they have been cited", "genres_for_streamlinewatch_streaming_guide": "Return a list of all genres", "get_all_watch_brands_for_watchsignals": "Get all watch brands", "get_product_for__demo_project_v3": " ", "get_team_receiving_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' receiving data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.", "player_information_for_baseball_datafeeds_by_rolling_insights": "This endpoint returns player demographic information", "showtimes_for_argentina_movie_theatres": " ", "top_memes_for_reddit_meme": "Use this route to get the all top quality memes from subreddit", "whoisserver_dnsservice_for_dns_lookup": "DNS Lookup API"}, "aseqs": [{"api_name": "get_all_watch_brands_for_watchsignals", "api_action": "\nAction: get_all_watch_brands_for_watchsignals\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_watch_brands_for_watchsignals"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_watch_brands_for_watchsignals"}}]}
{"URL": "8872", "query": "I'm looking for quotes that are inspirational and motivational, with a maximum length of 2000 characters. Please provide me with three quotes that are similar in meaning to 'Never give up' and have tags related to success and motivation.", "api_names": ["search_quotes_for_semantic_quotes", "Finish", "properties_v2_list_sold_deprecated_for_realty_in_us", "home_for_contextoguess", "provider_for_dummydata", "get_dm_conversation_for_twttrapi", "get_live_streams_livestreamid_for_api_video", "view_food_items_by_core_for_ind_nutrient_api", "getall_for_reword_pdf", "zestimate_history_for_zillow_v2", "get_player_details_for_league_of_legends_galore", "get_car_models_for_infocarsapi"], "api_descs": {"Finish": "No description available.", "get_car_models_for_infocarsapi": "This endpoint will return back all the models of a respective car maker", "get_dm_conversation_for_twttrapi": "Get single conversation messages", "get_live_streams_livestreamid_for_api_video": " ", "get_player_details_for_league_of_legends_galore": "Get Player Details based on UserName.\nCase Sensitive!", "getall_for_reword_pdf": " ", "home_for_contextoguess": "Home", "properties_v2_list_sold_deprecated_for_realty_in_us": "List sold properties", "provider_for_dummydata": "provider entry points", "search_quotes_for_semantic_quotes": "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity.", "view_food_items_by_core_for_ind_nutrient_api": "This request allows clients to retrieve detailed information about a food item by filtering by query param `core`.\n\nClients can include multiple cores in a single request. For example, by sending a request to https://indnutrientsapi.tech/food?core=chicken,dal,paneer, the API will return food items associated with the specified cores: chicken, dal, and paneer.\n\nAPI request sent to [https://indnutrientsapi.tech/food?core=chicken](https://indnutrientsapi.tech/food?core=chicken)", "zestimate_history_for_zillow_v2": "Zestimate history by zpid"}, "aseqs": [{"api_name": "search_quotes_for_semantic_quotes", "api_action": "\nAction: search_quotes_for_semantic_quotes\nAction Input: {\n  \"q\": \"Never give up\",\n  \"tags\": \"success,motivation\",\n  \"max_length\": 2000,\n  \"limit\": 3\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_semantic_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_semantic_quotes"}}]}
{"URL": "42933", "query": "My friends and I are having a competition to solve a pocket cube. We need your help in finding a random optimal solution for the cube's current position, which is 'GBWGYOGYRYOORWROBRWYGWBB'. It would be great if you could also fetch all the solutions available for this position. This will give us a better understanding of the cube's complexity and help us improve our solving strategies.", "api_names": ["getrandomsolution_for_pocket_cube_solver", "getallsolutions_for_pocket_cube_solver", "Finish", "get_all_city_names_for_restaurants_near_me_usa", "meme_for_alt_coins", "user_info_by_username_for_instagram_api_v2", "haber_for_kolektifapi", "matchschedules_for_cricketapi2", "emails_and_contacts_for_domain_emails_and_contacts", "getsupportedqrcodes_for_groupdocs_signature_cloud", "user_tweets_and_replies_for_twitter_data", "billboard_hot_100_for_billboard_api_v2", "get_all_users_for_node_express_api_tutorial", "health_check_endpoint_for_interesting_facts_api", "measurements_detailed_for_measurement_unit_converter"], "api_descs": {"Finish": "No description available.", "billboard_hot_100_for_billboard_api_v2": "Billboard Hot 100 chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week", "emails_and_contacts_for_domain_emails_and_contacts": "Allows finding email addresses, social links, and phones from domains.", "get_all_city_names_for_restaurants_near_me_usa": "GET all City names", "get_all_users_for_node_express_api_tutorial": "This endpoint will return all users stored in the database.", "getallsolutions_for_pocket_cube_solver": "Returns json data consisting of all the solutions of a given cube position.", "getrandomsolution_for_pocket_cube_solver": "Returns json data consisting of a random optimal solution of a given cube position.", "getsupportedqrcodes_for_groupdocs_signature_cloud": " ", "haber_for_kolektifapi": "«ntv.com.tr» Son Dakika Haberleri Verileri", "health_check_endpoint_for_interesting_facts_api": "This endpoint returns successful response, if service works fine.", "matchschedules_for_cricketapi2": "This operation returns the cricket match schedules for the given date, including match timings, teams, and other relevant information.", "measurements_detailed_for_measurement_unit_converter": "GET a list of all the available measurements with unit details.", "meme_for_alt_coins": "Provide memes", "user_info_by_username_for_instagram_api_v2": "Get all information of an Instagram account by  username", "user_tweets_and_replies_for_twitter_data": "user-tweets-and-replies"}, "aseqs": [{"api_name": "getrandomsolution_for_pocket_cube_solver", "api_action": "\nAction: getrandomsolution_for_pocket_cube_solver\nAction Input: {\n  \"position\": \"GBWGYOGYRYOORWROBRWYGWBB\"\n}", "api_reaction": null}, {"api_name": "getallsolutions_for_pocket_cube_solver", "api_action": "\nAction: getallsolutions_for_pocket_cube_solver\nAction Input: {\n  \"position\": \"GBWGYOGYRYOORWROBRWYGWBB\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getrandomsolution_for_pocket_cube_solver"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getallsolutions_for_pocket_cube_solver"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandomsolution_for_pocket_cube_solver"}}]}
{"URL": "78956", "query": "I want to explore the latest developments in the Bitcoin market. Fetch me the title, URL, and source of all the news articles related to Bitcoin from major news websites. Also, provide me with the title, URL, and source of the news articles specifically from CoinDesk.", "api_names": ["get_all_bitcoin_news_for_bitcoin_news", "Finish", "dashboard_for_miraisoft_training", "search_for_google_search_v2", "cities_get_information_deprecated_for_airvisual", "real_time_commodity_futures_prices_for_investing", "message_send_for_sendsms", "geomap_for_gtrend", "related_videos_or_playlists_for_yt_api", "currencies_list_for_webull", "get_current_count_for_counter", "drawings_between_dates_for_lotto_america"], "api_descs": {"Finish": "No description available.", "cities_get_information_deprecated_for_airvisual": "Get information in specific city by its id", "currencies_list_for_webull": "List all global currencies and rates", "dashboard_for_miraisoft_training": "dashboard", "drawings_between_dates_for_lotto_america": "Get all Lotto America winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date.", "geomap_for_gtrend": "Get geo map data from given query", "get_all_bitcoin_news_for_bitcoin_news": "This endpoint will return back all the news across all the major bitcoin news site from all over the world", "get_current_count_for_counter": "get count and and don't increase", "message_send_for_sendsms": "", "real_time_commodity_futures_prices_for_investing": "page source : https://www.investing.com/commodities/real-time-futures", "related_videos_or_playlists_for_yt_api": "Get related videos or playlists.\nQuota cost is 1 unit.", "search_for_google_search_v2": "search"}, "aseqs": [{"api_name": "get_all_bitcoin_news_for_bitcoin_news", "api_action": "\nAction: get_all_bitcoin_news_for_bitcoin_news\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}, {"state": "generated_by_agent", "aseq": {"api_name": "related_videos_or_playlists_for_yt_api", "api_action": "{\"query\": \"Bitcoin\", \"type\": \"news\"}", "api_reaction": null}}]}
{"URL": "72085", "query": "I'm trying to impress my friends with some math trivia. Can you give me a mind-blowing fact about the number 7? Also, surprise me with a random number fact. Thanks a bunch!", "api_names": ["fact_for_specific_number_for_testing", "random_number_fact_for_testing", "Finish", "get_categories_for_my_store", "search_today_s_arrivals_by_time_for_british_airways_flight_info", "tickets_for_an_event_for_ticketbud", "get_price_for_stock_cryptocurrency_forex_market_data", "tsv3_for_odam", "coins_get_historical_data_for_investing_cryptocurrency_markets", "dailyweatherseries_for_history", "convert_for_just_currencies", "get_colors_for_cigars", "responses_for_moodring", "search_for_local_business_data", "get_expired_certs_for_iotvas", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data", "google_maps_data_id_for_google_search_2", "volume_from_to_number_for_unitconversion"], "api_descs": {"Finish": "No description available.", "coins_get_historical_data_for_investing_cryptocurrency_markets": "Get historical data of specific cryptocurrency", "convert_for_just_currencies": "Convert", "dailyweatherseries_for_history": "This endpoint returns the historical weather for a given series of days for a given location (latitude and longitude)", "fact_for_specific_number_for_testing": "Fact for specific number", "get_categories_for_my_store": " ", "get_colors_for_cigars": "Get Enum of Cigar colors", "get_expired_certs_for_iotvas": " ", "get_price_for_stock_cryptocurrency_forex_market_data": "Get Stock, Cryptocurrency, Forex price by timeframe", "google_maps_data_id_for_google_search_2": "Using this API you can get the JSON results of the data ID of a particular place.", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests", "random_number_fact_for_testing": "Random Number Fact", "responses_for_moodring": "Get all responses to the quizzes", "search_for_local_business_data": "Search local businesses on Google Maps.", "search_today_s_arrivals_by_time_for_british_airways_flight_info": "", "tickets_for_an_event_for_ticketbud": "All tickets for an event that you have access to", "tsv3_for_odam": "Get all values of a merged data subsets\n", "volume_from_to_number_for_unitconversion": "Volume unit conversions"}, "aseqs": [{"api_name": "fact_for_specific_number_for_testing", "api_action": "\nAction: fact_for_specific_number_for_testing\nAction Input: {\n  \"number\": \"7\"\n}", "api_reaction": null}, {"api_name": "random_number_fact_for_testing", "api_action": "\nAction: random_number_fact_for_testing\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_number_fact_for_testing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_number_fact_for_testing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_number_fact_for_testing"}}]}
{"URL": "67017", "query": "I would like to know the owner's information for the Web Push Notifications Server. Please provide me with the details using the owner ID 'JKL987'. Additionally, fetch the server uptime.", "api_names": ["owner_info_for_web_push_notifications_server", "index_for_web_push_notifications_server", "Finish", "newly_added_events_for_sofasport", "get_character_skills_for_lost_ark_simple", "album_for_apple_music", "get_wagons_mrt_train_no_wagons_get_for_aqls_b2c_system", "getrandomword_for_random_chunk_api", "motivation_quote_for_olato_quotes", "web_chain_details_for_open_defi", "get_user_id_for_instagram_fast", "search_latest_for_twttrapi", "getassetslist_pro_for_the_apophis", "lognormal_call_for_kiann_options_project", "retrieve_user_s_food_preferences_for_bespoke_diet_generator", "getimage_for_the_cancer_imaging_archive", "matchmaking_matches_for_trackmania", "keyword_search_for_axesso_kaufland_data_service"], "api_descs": {"Finish": "No description available.", "album_for_apple_music": "Get entire Playlist data of any album from Apple Music.", "get_character_skills_for_lost_ark_simple": "List of Lost Ark Character Skills", "get_user_id_for_instagram_fast": "Get instagram id by username", "get_wagons_mrt_train_no_wagons_get_for_aqls_b2c_system": " ", "getassetslist_pro_for_the_apophis": "Retrieve a list of available assets for forecasting", "getimage_for_the_cancer_imaging_archive": "Set of images in a zip file. NOTE: The resulting zip files can become very large. We strongly advise not testing  this endpoint via Mashape. Instead, consider using curl with the -o option set to output.zip", "getrandomword_for_random_chunk_api": "Get random words.", "index_for_web_push_notifications_server": "Endpoint to fetch server information", "keyword_search_for_axesso_kaufland_data_service": "Retrieve keyword search results.", "lognormal_call_for_kiann_options_project": "Black-Scholes Pricer/premium, Lognormal vols. Params are as per :\nk = strike (float)\nf = forward (float)\nt = time-to-expiry (float)\nv = implied volatility, lognormal, annualized (float)\nr = risk-free-rate (float). Note can be combined with dividend, funding, risk-free rate into one value", "matchmaking_matches_for_trackmania": "Get recent matchmaking matches.", "motivation_quote_for_olato_quotes": "It shows random quotes", "newly_added_events_for_sofasport": "Newly added events", "owner_info_for_web_push_notifications_server": "Fetch owner's details", "retrieve_user_s_food_preferences_for_bespoke_diet_generator": "Retrieve the list of all ingredients that will be excluded from user's diets.", "search_latest_for_twttrapi": "Search latest results", "web_chain_details_for_open_defi": " "}, "aseqs": [{"api_name": "owner_info_for_web_push_notifications_server", "api_action": "\nAction: owner_info_for_web_push_notifications_server\nAction Input: { \"owner_id\": \"JKL987\" }", "api_reaction": null}, {"api_name": "index_for_web_push_notifications_server", "api_action": "\nAction: index_for_web_push_notifications_server\nAction Input: {}", "api_reaction": null}, {"api_name": "index_for_web_push_notifications_server", "api_action": "\nAction: index_for_web_push_notifications_server\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "owner_info_for_web_push_notifications_server"}}, {"state": "generated_by_agent", "aseq": {"api_name": "index_for_web_push_notifications_server"}}, {"state": "generated_by_agent", "aseq": {"api_name": "owner_info_for_web_push_notifications_server", "api_action": "\nAction: owner_info_for_web_push_notifications_server\nAction Input: { \"owner_id\": \"JKL987\" }", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "owner_info_for_web_push_notifications_server", "api_action": "\nAction: owner_info_for_web_push_notifications_server\nAction Input: { \"owner_id\": \"JKL987\" }", "api_reaction": null}}]}
{"URL": "19800", "query": "I want to generate a new Ethereum address to receive funds. Can you help me with that? Also, I need to check the token balance of a specific address. Please provide me with the token balance.", "api_names": ["newaddress_for_chaingateway_io", "importaddress_for_chaingateway_io", "Finish", "fetch_information_for_asn_lookup", "api_about_version_for_prague_stock_exchange", "linkedin_contacts_for_linkedin_outreach", "getinterestinglistings_for_etsy", "get_highlights_for_instagram_profile", "products_for_makeup", "owner_info_for_web_push_notifications_server", "get_all_languages_for_alt_bichinhos", "getorderbyid_for_tes"], "api_descs": {"Finish": "No description available.", "api_about_version_for_prague_stock_exchange": " ", "fetch_information_for_asn_lookup": "Retrieve information based on AS number, CIDR (IPV4 & IPV6) or organization name.", "get_all_languages_for_alt_bichinhos": "This endpoint will return back all languages available for the image.", "get_highlights_for_instagram_profile": "Highlight list", "getinterestinglistings_for_etsy": "Collects the list of interesting listings", "getorderbyid_for_tes": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "importaddress_for_chaingateway_io": "Returns all ethereum addresses created with an account.", "linkedin_contacts_for_linkedin_outreach": "This API fetches the Linkedin URL and Name of the search you have made.", "newaddress_for_chaingateway_io": "Generates a new ethereum addresses you can use to send or receive funds. Do not lose the password! We can't restore access to an address if you lose it.", "owner_info_for_web_push_notifications_server": "Fetch owner's details", "products_for_makeup": "Search makeup products"}, "aseqs": [{"api_name": "newaddress_for_chaingateway_io", "api_action": "\nAction: newaddress_for_chaingateway_io\nAction Input: {}", "api_reaction": null}, {"api_name": "newaddress_for_chaingateway_io", "api_action": "\nAction: newaddress_for_chaingateway_io\nAction Input: {}", "api_reaction": null}, {"api_name": "importaddress_for_chaingateway_io", "api_action": "\nAction: importaddress_for_chaingateway_io\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "newaddress_for_chaingateway_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "newaddress_for_chaingateway_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "newaddress_for_chaingateway_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "newaddress_for_chaingateway_io", "api_action": "\nAction: newaddress_for_chaingateway_io\nAction Input: {}", "api_reaction": null}}]}
{"URL": "70200", "query": "My family wants to analyze the trading data for various cryptocurrencies. Can you fetch the Volume Weighted Average Price (VWAP), TRIX, and Stochastic indicators for the BTC/USDT, ETH/USDT, and ADA/USDT pairs on Binance exchange? Please provide the data for the past 14 days.", "api_names": ["Finish", "stochastic_for_qvantana", "volume_weighted_average_price_vwap_for_qvantana", "trix_for_qvantana", "latest_for_exchange_rate", "search_for_airplanesdb", "get_call_for_philippines_voter_card_ocr", "789betlinkvao2022_for_789bettnet", "area_from_to_number_for_unitconversion", "v4_sports_for_live_sports_odds", "verse_verse_for_uncovered_treasure", "get_annonce_for_fluximmo", "article_page_for_climate_news_feed", "sentiment_analysis_for_multi_lingual_sentiment_analysis", "love_quote_for_olato_quotes", "get_zip_code_by_state_for_zillow_data_v2", "result_statistics_goals_for_handball_data", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb", "countries_detail_for_unofficial_shein", "japan_filter_for_news_for_east_china_news"], "api_descs": {"789betlinkvao2022_for_789bettnet": "789bet là nhà cái cá cược trực tuyến uy tín top đầu khu vực châu Á, cung cấp các dịch vụ cá cược như casino, cá cược thể thao, nổ hũ, bắn cá, tài xỉu.\n#789bettnet #789bet #nhacai789bet #linkvao #dangky789bet #dangnhap789bet\nHotline 0985 433 336\nĐịa chỉ : 89 Ngõ 15 Giải Phóng, Hoàng Liệt, Hai Bà Trưng, Hà Nội, Việt Nam \nGoogle map https://www.google.com/maps?cid=5871956287660487504 \nGmaiL: 789bett.net@gmail.com\nWebsite https://789bett.net/ \nhttps://789bett.net/dang-ky-789bet/ \nhttps://789bett.net/khuyen-mai-789bet/ \nhttps://sites.google.com/view/789bettnet/home \nhttps://dailygram.com/index.php/profile-432167\nhttps://www.mtbproject.com/user/201407644/789bett-net\nhttps://mydramalist.com/profile/789bettnet\nhttps://my.desktopnexus.com/789bettnet/\nhttps://worldcosplay.net/member/1058048\nhttps://www.tetongravity.com/community/profile/789bettnet/\nhttps://community.amplifi.com/user/789bett-net\nhttps://www.gaiaonline.com/profiles/789bettnet/45915060/\nhttps://www.hackathon.io/789bettnet\nhttps://pawoo.net/@789bettnet\nhttp://pixelhub.me/789bettnet\nhttps://guides.co/p/789bett-net\nhttps://www.allmyfaves.com/789bettnet\nhttps://my.mamul.am/en/profile/1314087/info\nhttp://www.effecthub.com/people/789bettnet\nhttps://kuwestions.248am.com/user/789bettnet\nhttps://www.mapleprimes.com/users/789bettnet\nhttps://www.bahamaslocal.com/userprofile/137779/789bettnet.html\nhttps://www.misterpoll.com/users/4137466\nhttps://yarabook.com/789bettnet\nhttps://anchor.fm/789bettnet\nhttps://www.bitsdujour.com/profiles/Vj49if", "Finish": "No description available.", "area_from_to_number_for_unitconversion": "Area unit conversions", "article_page_for_climate_news_feed": "Get articles in pages", "countries_detail_for_unofficial_shein": "Get detailed information of a country", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb": "This endpoint takes your epic centre latitude, longitude along with radius in KM and returns all postcodes and suburbs within it.", "get_annonce_for_fluximmo": " ", "get_call_for_philippines_voter_card_ocr": "Used to fetch api result using the request id received in responses.", "get_zip_code_by_state_for_zillow_data_v2": "Get zip code by state", "japan_filter_for_news_for_east_china_news": "Filters Japan news from all sources", "latest_for_exchange_rate": "Get the latest foreign exchange rates.", "love_quote_for_olato_quotes": "It shows random quotes", "result_statistics_goals_for_handball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handbal Match List or Fixture endpoints.**", "search_for_airplanesdb": "Search airplane by name.", "sentiment_analysis_for_multi_lingual_sentiment_analysis": "Multi-lingual Sentiment Analysis parameter {lang} is optional, we can detect the language but you can define it for better result and accurate", "stochastic_for_qvantana": "Stochastic indicator", "trix_for_qvantana": "TRIX indicator", "v4_sports_for_live_sports_odds": "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints.", "verse_verse_for_uncovered_treasure": "Get treasure by verse", "volume_weighted_average_price_vwap_for_qvantana": "Volume Weighted Average Price (VWAP) indicator"}, "aseqs": [{"api_name": "volume_weighted_average_price_vwap_for_qvantana", "api_action": "\nAction: volume_weighted_average_price_vwap_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"ETHUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}", "api_reaction": null}, {"api_name": "trix_for_qvantana", "api_action": "\nAction: trix_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"ETHUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}", "api_reaction": null}, {"api_name": "stochastic_for_qvantana", "api_action": "\nAction: stochastic_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"ETHUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}", "api_reaction": null}, {"api_name": "stochastic_for_qvantana", "api_action": "\nAction: stochastic_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"ADAUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch sports data for BTC/USDT, ETH/USDT, and ADA/USDT pairs on Binance exchange using the v4_sports_for_live_sports_odds API. However, this endpoint does not support fetching indicators like VWAP, TRIX, or Stochastic directly. I will proceed with the request.\n\t\"api_name\": \"v4_sports_for_live_sports_odds\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "trix_for_qvantana", "api_action": "\nAction: trix_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"ETHUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "volume_weighted_average_price_vwap_for_qvantana", "api_action": "\nAction: volume_weighted_average_price_vwap_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"BTCUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": [{"api_name": "volume_weighted_average_price_vwap_for_qvantana", "api_action": "\nAction: volume_weighted_average_price_vwap_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"BTCUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}"}, {"api_name": "trix_for_qvantana", "api_action": "\nAction: trix_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"BTCUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}"}, {"api_name": "stochastic_for_qvantana", "api_action": "\nAction: stochastic_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"BTCUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}"}]}, {"state": "generated_by_agent", "aseq": [{"api_name": "volume_weighted_average_price_vwap_for_qvantana", "api_action": "\nAction: volume_weighted_average_price_vwap_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"BTCUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}"}, {"api_name": "trix_for_qvantana", "api_action": "\nAction: trix_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"BTCUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}"}, {"api_name": "stochastic_for_qvantana", "api_action": "\nAction: stochastic_for_qvantana\nAction Input: {\n  \"exchange\": \"binance\",\n  \"symbol\": \"BTCUSDT\",\n  \"interval\": \"1d\",\n  \"market\": \"usdt-perpetual\",\n  \"backtracks\": 14\n}"}]}]}
{"URL": "5198", "query": "Can you fetch the latest news stories for the respective tags 'Music' and 'Movies'? I am interested in reading the articles in chronological order. Also, provide me with the list of available page IDs.", "api_names": ["tag_news_for_biztoc", "pages_for_biztoc", "Finish", "rates_for_nitro", "cnn_arabic_for_arabic_news_api", "user_event_timeline_for_dailycred", "fetch_business_data_for_whatsapp_data", "minecraftresources_for_minecraft_forge_optifine", "driver_s_quotes_for_f1_drivers_quotes", "content_for_daily_sec_financial_statement_dataset", "product_for_bigbox", "get_version_for_image_anonymization"], "api_descs": {"Finish": "No description available.", "cnn_arabic_for_arabic_news_api": "مسار يسترجع جميع الأخبار من موقع سي ان ان بالعربية", "content_for_daily_sec_financial_statement_dataset": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan", "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.", "fetch_business_data_for_whatsapp_data": "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account.", "get_version_for_image_anonymization": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "minecraftresources_for_minecraft_forge_optifine": "Same to official source. Used to get resources file for MC 1.6.", "pages_for_biztoc": "Get the list of avilable `{page_id}`s. Akin to the /crypto and /media sites on biztoc.com. Required parameter for endpoints like **Tags/Trending**.", "product_for_bigbox": "The Product Parameters are applicable when making a request with `type=product` to retrieve details of a single product on Home Depot - the product is specified using either the item_id parameter or the url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nProduct details are retrieved from the product page for a single product on Home Depot", "rates_for_nitro": "This endpoint retrieves all rates.", "tag_news_for_biztoc": "Get the latest news stories for the respective `{tag}` in chronological order.", "user_event_timeline_for_dailycred": ""}, "aseqs": [{"api_name": "tag_news_for_biztoc", "api_action": "\nAction: tag_news_for_biztoc\nAction Input: {\n  \"tag\": \"Music\"\n}", "api_reaction": null}, {"api_name": "tag_news_for_biztoc", "api_action": "\nAction: tag_news_for_biztoc\nAction Input: {\n  \"tag\": \"Movies\"\n}", "api_reaction": null}, {"api_name": "pages_for_biztoc", "api_action": "\nAction: pages_for_biztoc\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tag_news_for_biztoc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tag_news_for_biztoc", "api_action": "\nAction: tag_news_for_biztoc\nAction Input: {\n  \"tag\": \"Movies\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "pages_for_biztoc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tag_news_for_biztoc", "api_action": "\nAction: tag_news_for_biztoc\nAction Input: {\n  \"tag\": \"Tech\"\n}", "api_reaction": null}}]}
{"URL": "80942", "query": "As a climate change enthusiast, I would like to access all climate change news articles available. Please provide me with the titles, URLs, and sources of these articles.", "api_names": ["Finish", "get_all_climate_change_news_for_climate_change_api_v2", "get_individual_news_source_for_climate_change_api_v2", "retrieve_compensation_for_co2_offset", "get_engravings_for_lost_ark", "airplanes_ordered_by_descending_for_airplanesdb", "discord_185_225_233_110_30015_for_vrising_server_query_api", "get_news_from_a_specific_source_for_pollution_news_api", "get_token_forwarding_wallets_for_token_forwarding", "getbyuniqueid_for_rest_country_api", "business_details_for_local_business_data", "tickets_for_an_event_for_ticketbud", "getcompanybywebsite_for_returns_company_info_based_on_the_website", "list_movies_json_for_yts_am_torrent", "matches_for_bet_at_home", "v1_hashtag_hashtag_id_for_tokapi_mobile_version", "song_comments_for_genius_song_lyrics", "email_for_marcom_robot_email_validation_bot"], "api_descs": {"Finish": "No description available.", "airplanes_ordered_by_descending_for_airplanesdb": "Get all airplanes ordered by name in descending order.", "business_details_for_local_business_data": "Get full business details including emails and social contacts. Supports batching of up to 20 Business Ids.", "discord_185_225_233_110_30015_for_vrising_server_query_api": "Gets the discord link found in the server description.", "email_for_marcom_robot_email_validation_bot": "Email Validation", "get_all_climate_change_news_for_climate_change_api_v2": "This endpoint returns back all news about the climate changes all over the world", "get_engravings_for_lost_ark": "Endpoint to get all engravings", "get_individual_news_source_for_climate_change_api_v2": "Get climate news from specific news source", "get_news_from_a_specific_source_for_pollution_news_api": "This Endpoint would return news on pollution in african countries from a specific news source", "get_token_forwarding_wallets_for_token_forwarding": "Get token forwarding wallets", "getbyuniqueid_for_rest_country_api": "Returns a single pet", "getcompanybywebsite_for_returns_company_info_based_on_the_website": "For valid response use valid website domain.  Other values will generate exceptions. Subdomains will be removed.", "list_movies_json_for_yts_am_torrent": "Used to list and search through out all the available movies. Can sort, filter, search and order the results", "matches_for_bet_at_home": "Latest matches by Bet-at-Home", "retrieve_compensation_for_co2_offset": "Response contains full compensation details (if exists, and owner is account).", "song_comments_for_genius_song_lyrics": "Song Comments", "tickets_for_an_event_for_ticketbud": "All tickets for an event that you have access to", "v1_hashtag_hashtag_id_for_tokapi_mobile_version": "Search videos by hashtag ID"}, "aseqs": [{"api_name": "get_individual_news_source_for_climate_change_api_v2", "api_action": "\nAction: get_individual_news_source_for_climate_change_api_v2\nAction Input: {\n  \"newspaperid\": \"\"\n}", "api_reaction": null}, {"api_name": "get_all_climate_change_news_for_climate_change_api_v2", "api_action": "\nAction: get_all_climate_change_news_for_climate_change_api_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_news_for_climate_change_api_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_news_for_climate_change_api_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_news_for_climate_change_api_v2"}}]}
{"URL": "21499", "query": "I want to stay updated on the latest news about technology. Can you provide me with the headlines, images, and links to the news articles from 'ntv.com.tr'? Additionally, I need information on the current fuel prices for gasoline, diesel, and LPG.", "api_names": ["akaryak_t_for_kolektifapi", "haber_for_kolektifapi", "Finish", "get_individual_quotes_by_quote_id_for_movie_and_tv_shows_quotes", "coincu_for_crypto_news_v2", "get_categories_for__demo_project_v2", "image_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin", "get_ico_calendar_for_investing_cryptocurrency_markets", "points_point_forecast_for_national_weather_service", "v1_render_for_inkit", "get_all_food_for_ghana_food_recipe_api", "instablogs_comment_maps_for_seeking_alpha_finance"], "api_descs": {"Finish": "No description available.", "akaryak_t_for_kolektifapi": "«haberler.com» Güncel Akaryakıt Verileri", "coincu_for_crypto_news_v2": "Get the latest news from CoinCu.", "get_all_food_for_ghana_food_recipe_api": "This endpoint gets all Ghanaian food along with ingredients and a short description. Each page supplies 5 payload, use the parameter ?page=(page number) to access other pages. Example. url?page=2", "get_categories_for__demo_project_v2": " ", "get_ico_calendar_for_investing_cryptocurrency_markets": "Get ICO calendar", "get_individual_quotes_by_quote_id_for_movie_and_tv_shows_quotes": "This endpoint will return back individual quotes based on the given ID", "haber_for_kolektifapi": "«ntv.com.tr» Son Dakika Haberleri Verileri", "image_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the image in original hd quality by passing pinterest image pin address", "instablogs_comment_maps_for_seeking_alpha_finance": "Get instablogs comments map by instablog_post_id", "points_point_forecast_for_national_weather_service": "Forecast data for a point. The DWML format is a temporary format to aid transition and will be sunset at a later date. This response is derrived from the /gridpoints endpoint and is intentionally less structured. If more structure is required, developers should use the /gridpoints endpoint directly. Example: /points/39.0693,-94.6716/forecast", "v1_render_for_inkit": " "}, "aseqs": [{"api_name": "haber_for_kolektifapi", "api_action": "\nAction: haber_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "akaryak_t_for_kolektifapi", "api_action": "\nAction: akaryak_t_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "haber_for_kolektifapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "haber_for_kolektifapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "haber_for_kolektifapi", "api_action": "\nAction: haber_for_kolektifapi\nAction Input: {}", "api_reaction": null}}]}
{"URL": "64828", "query": "Could you please give me the sign prediction for today? I'm interested in knowing the predictions for Aries. Also, I would like to explore the complete list of zodiac signs.", "api_names": ["get_sign_prediction_for_today_by_name_for_zodiacapi", "get_signs_list_for_zodiacapi", "Finish", "country_location_api_for_country_location_api", "all_pizza_data_for_pizza_and_desserts", "get_specified_users_micros_for_geeklist", "manga_for_anime_manga_and_novels_api", "stocks_get_financials_for_trading_view", "get_list_of_apps_with_pagination_for_google_play", "leaguedetails_for_handballapi", "simulations_by_application_id_for_geolocation_simulation_for_mobile_apps", "top_stories_for_yc_hacker_news_official"], "api_descs": {"Finish": "No description available.", "all_pizza_data_for_pizza_and_desserts": "This will returns all the pizzas data", "country_location_api_for_country_location_api": "The Country Location API is a RESTful API that allows developers to retrieve location data for any country in the world. Using a GET request with a country parameter, the API retrieves information about the specified country, such as its name, capital city, region, subregion, population, languages, and currencies.", "get_list_of_apps_with_pagination_for_google_play": "Returns a list of apps and a pagination token", "get_sign_prediction_for_today_by_name_for_zodiacapi": "Get sign prediction for today  by name", "get_signs_list_for_zodiacapi": "Get signs list", "get_specified_users_micros_for_geeklist": "", "leaguedetails_for_handballapi": "Get details of a handball unique tournament by ID", "manga_for_anime_manga_and_novels_api": "get manga information", "simulations_by_application_id_for_geolocation_simulation_for_mobile_apps": "Enter applicationID in route", "stocks_get_financials_for_trading_view": "Get financials information related to a ticker or symbol", "top_stories_for_yc_hacker_news_official": "Returns the current top 100 stories."}, "aseqs": [{"api_name": "get_sign_prediction_for_today_by_name_for_zodiacapi", "api_action": "\nAction: get_sign_prediction_for_today_by_name_for_zodiacapi\nAction Input: {\n  \"name\": \"Aries\"\n}", "api_reaction": null}, {"api_name": "get_signs_list_for_zodiacapi", "api_action": "\nAction: get_signs_list_for_zodiacapi\nAction Input: {}", "api_reaction": null}, {"api_name": "get_sign_prediction_for_today_by_name_for_zodiacapi", "api_action": "\nAction: get_sign_prediction_for_today_by_name_for_zodiacapi\nAction Input: {\n  \"name\": \"Aries\"\n}", "api_reaction": null}, {"api_name": "get_signs_list_for_zodiacapi", "api_action": "\nAction: get_signs_list_for_zodiacapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_sign_prediction_for_today_by_name_for_zodiacapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_signs_list_for_zodiacapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_sign_prediction_for_today_by_name_for_zodiacapi", "api_action": "{\"name\": \"Aries\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_signs_list_for_zodiacapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_signs_list_for_zodiacapi"}}]}
{"URL": "59941", "query": "I am interested in retrieving alt text for a pet image in multiple languages. Please provide the alt text in German, Spanish, Portuguese, and English. This information will be used to analyze the variations in pet descriptions across different languages.", "api_names": ["get_english_alt_text_for_alt_bichinhos", "get_spanish_alt_text_for_alt_bichinhos", "get_german_alt_text_for_alt_bichinhos", "Finish", "get_portuguese_alt_text_for_alt_bichinhos", "health_check_for_hris", "1_hour_minutely_forecast_nowcast_for_weather", "get_recent_f1_news_from_all_sources_for_f1_latest_news", "get_channel_polls_for_kick_com_api_kick_api", "youtube_search_for_youtube_v2", "summary_detail_for_yh_finance_complete", "request_all_eu_vat_rates_for_vatlayer", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "property_for_sale_for_uk_real_estate_rightmove", "measurements_for_measurement_unit_converter", "tier1_for_proxypage", "loginuser_for_publicapitestinginbox", "user_highlight_detail_for_instagram_v13", "reversegeocode_for_feroeg_reverse_geocoding", "get_reservation_by_id_for_limoucloud"], "api_descs": {"1_hour_minutely_forecast_nowcast_for_weather": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "Finish": "No description available.", "get_channel_polls_for_kick_com_api_kick_api": "Get Channel Polls", "get_english_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **English.**", "get_german_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **German.**", "get_portuguese_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with **Brazilian Portuguese** alt text.", "get_recent_f1_news_from_all_sources_for_f1_latest_news": "This endpoint returns back recent articles from all sources", "get_reservation_by_id_for_limoucloud": "Get Reservation by ID", "get_spanish_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **Spanish.**", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "health_check_for_hris": "Check API Health Status", "loginuser_for_publicapitestinginbox": "", "measurements_for_measurement_unit_converter": "GET enum array of all types of measurement", "property_for_sale_for_uk_real_estate_rightmove": "Property for sale", "request_all_eu_vat_rates_for_vatlayer": "Use the API's \"rate_list\" endpoint to obtain standard & reduced VAT rates for all 28 current member states", "reversegeocode_for_feroeg_reverse_geocoding": "Return a text address from a latitude/longitude location", "summary_detail_for_yh_finance_complete": "This endpoint returns full detail of any public stock", "tier1_for_proxypage": "List our tier 1 proxies with filters\nThis proxies are more comprehensively checked\n\n\nYou can set type which is just your proxy type, either HTTP, HTTPS\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.", "user_highlight_detail_for_instagram_v13": "Get instagram user highlight detail by highlight id.", "youtube_search_for_youtube_v2": "This endpoint will a specific number of videos for a specific keyword, note that the maximum is 40 videos per request"}, "aseqs": [{"api_name": "get_german_alt_text_for_alt_bichinhos", "api_action": "\nAction: get_german_alt_text_for_alt_bichinhos\nAction Input: {}", "api_reaction": null}, {"api_name": "get_spanish_alt_text_for_alt_bichinhos", "api_action": "\nAction: get_spanish_alt_text_for_alt_bichinhos\nAction Input: {}", "api_reaction": null}, {"api_name": "get_portuguese_alt_text_for_alt_bichinhos", "api_action": "\nAction: get_portuguese_alt_text_for_alt_bichinhos\nAction Input: {}", "api_reaction": null}, {"api_name": "get_english_alt_text_for_alt_bichinhos", "api_action": "\nAction: get_english_alt_text_for_alt_bichinhos\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch alt text for pet images in German, Spanish, Portuguese, and English using the available APIs.\n\t\"api_name\": \"get_spanish_alt_text_for_alt_bichinhos\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_spanish_alt_text_for_alt_bichinhos", "api_action": "\nAction: get_spanish_alt_text_for_alt_bichinhos\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_english_alt_text_for_alt_bichinhos", "api_action": "\nAction: get_english_alt_text_for_alt_bichinhos\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_english_alt_text_for_alt_bichinhos", "api_action": "\nAction: get_english_alt_text_for_alt_bichinhos\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_german_alt_text_for_alt_bichinhos"}}]}
{"URL": "2399", "query": "I want to know the details of the game with ID 12345. Give me the date, home team, home team score, visitor team, and visitor team score. Additionally, provide the player statistics for this game.", "api_names": ["get_all_stats_for_free_nba", "get_specific_player_for_free_nba", "get_a_specific_game_for_free_nba", "Finish", "getchannelplaylists_for_youtube_search_v3", "players_photo_for_soccerway_feed", "hashtag_feed_video_posts_for_social_media_data_tt", "playerdetails_for_sportifyapi", "movie_details_json_for_yts_am_torrent", "search_links_in_website_for_advanced_serp_operators", "product_details_for_temu_com_shopping_api_realtime_api_scrapper_from_temu_com_", "list_archives_for_smile", "speechapi_health_for_open", "ttt_for_hellorold", "auctions_for_gsaauction", "hcpassthrough_for_aspose_ocr_cloud", "search_items_for_steam_store_api", "predictions_for_groundhog_day_api", "carbonfootprintfrompublictransit_for_carbonfootprint", "agencies_get_listings_for_bayut"], "api_descs": {"Finish": "No description available.", "agencies_get_listings_for_bayut": "Get listing belonging to an agency", "auctions_for_gsaauction": "this endpoint returns auction listings. \n", "carbonfootprintfrompublictransit_for_carbonfootprint": "Return CO2e in Kg from the use of public transporation.", "get_a_specific_game_for_free_nba": "This endpoint retrieves a specific game", "get_all_stats_for_free_nba": "Retrieves all stats", "get_specific_player_for_free_nba": "This endpoint retrieves a specific player.", "getchannelplaylists_for_youtube_search_v3": "Retrieve a comprehensive list of playlists associated with a specific channel", "hashtag_feed_video_posts_for_social_media_data_tt": "Get current hashtag feed. \n\n- Before testing don't forget to fill out the name **OR** hashtag_id inputs\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "hcpassthrough_for_aspose_ocr_cloud": " ", "list_archives_for_smile": "Get the user's archives.", "movie_details_json_for_yts_am_torrent": "Returns the information about a specific movie", "playerdetails_for_sportifyapi": "Player Details", "players_photo_for_soccerway_feed": "Get player photo", "predictions_for_groundhog_day_api": "Get all predictions for a given year.", "product_details_for_temu_com_shopping_api_realtime_api_scrapper_from_temu_com_": "Returns the product details information based on the given goodsId (product id defined by temu, returned by the /search endpoint)\nResponse includes:\n- price information\n- product reviews\n- offers/availability\n- sku - variants in different options like size, color etc.\n- metadata, image gallery, description ...\n\n-", "search_items_for_steam_store_api": "👉 This is one of the most important endpoints. Retrieve data from the Steam search engine. The filters here have a powerful impact. With their use you can find anything that interests you. If you want to limit the games to a certain amount, read the description of maxPrice parameter below.\n\nMaximum number of results served from one call is 50. But very often the number of results is lower because we skip game packs (bundles) in the search engine. If you're interested in this, let us know.", "search_links_in_website_for_advanced_serp_operators": "Search for all links in a website", "speechapi_health_for_open": " ", "ttt_for_hellorold": "tt"}, "aseqs": [{"api_name": "get_a_specific_game_for_free_nba", "api_action": "\nAction: get_a_specific_game_for_free_nba\nAction Input: {\n  \"is_id\": \"12345\"\n}", "api_reaction": null}, {"api_name": "get_all_stats_for_free_nba", "api_action": "\nAction: get_all_stats_for_free_nba\nAction Input: {}", "api_reaction": null}, {"api_name": "get_specific_player_for_free_nba", "api_action": "\nAction: get_specific_player_for_free_nba\nAction Input: {\n  \"is_id\": 390\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_game_for_free_nba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_stats_for_free_nba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_specific_player_for_free_nba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_game_for_free_nba"}}]}
{"URL": "57954", "query": "My friend is a big fan of Ennio Morricone and I'd like to surprise him with some of his popular tracks. Can you help me find the track details using the 'Search by query' API? Once I have the details, I'd like to get the music links for each track using the 'Search by url' API.", "api_names": ["search_by_url_for_musiclinkssapi", "search_by_query_for_musiclinkssapi", "Finish", "imperial_pounds_for_body_mass_index_bmi_calculator", "region_list_for_tiktok_video_feature_summary", "convert_for_bng2latlong", "directions_for_locationiq", "hashtagmedias_for_instagram_v6", "user_by_screen_name_for_twitter_v2_v2", "new_arrivals_for_ott_details", "get_list_of_apps_with_pagination_for_google_play", "hhside_for_hhside", "getteam_for_boldsign", "smile_for_5970b9b3dcc757e61e53daec3e720974", "search_for_ott_details"], "api_descs": {"Finish": "No description available.", "convert_for_bng2latlong": "Convert easting and northing to latitude and longitude", "directions_for_locationiq": "Finds the fastest route between coordinates in the supplied order.", "get_list_of_apps_with_pagination_for_google_play": "Returns a list of apps and a pagination token", "getteam_for_boldsign": " ", "hashtagmedias_for_instagram_v6": "Get hashtag medias", "hhside_for_hhside": "aaa", "imperial_pounds_for_body_mass_index_bmi_calculator": "This endpoint will calculate the BMI of an individual using the imperial measurement system.", "new_arrivals_for_ott_details": "Get the latest arrivals from different platforms .", "region_list_for_tiktok_video_feature_summary": "the region list use in video search params", "search_by_query_for_musiclinkssapi": "Given a **query** and **type** of element, this returns details about *tracks*, *albums* and *artists*.", "search_by_url_for_musiclinkssapi": "Given a **Spotify url**, this returns details about *tracks*, *albums* and *artists*.", "search_for_ott_details": "This endpoint allows you to search for a movie or tvshow based on the given 'title '.", "smile_for_5970b9b3dcc757e61e53daec3e720974": "smile", "user_by_screen_name_for_twitter_v2_v2": "User By Screen Name"}, "aseqs": [{"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"Ennio Morricone\",\n  \"type\": \"track\"\n}", "api_reaction": null}, {"api_name": "search_by_url_for_musiclinkssapi", "api_action": "\nAction: search_by_url_for_musiclinkssapi\nAction Input: {\n  \"spotify_url\": \"https://open.spotify.com/track/6PrKZUXJPmBiobMN44yR8Y\"\n}", "api_reaction": null}, {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"The Ecstasy Of Gold - 2004 Remaster\",\n  \"type\": \"track\"\n}", "api_reaction": null}, {"api_name": "search_by_url_for_musiclinkssapi", "api_action": "\nAction: search_by_url_for_musiclinkssapi\nAction Input: {\n  \"spotify_url\": \"https://open.spotify.com/track/6PrKZUXJPmBiobMN44yR8Y\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_url_for_musiclinkssapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"Ennio Morricone\",\n  \"type\": \"track\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi"}}]}
{"URL": "10769", "query": "I'm planning a sports-themed party and I need to know the scheduled games for football on October 15, 2021. Additionally, can you provide the game lineup and pregame form for the live games on that day?", "api_names": ["Finish", "get_live_games_for_viperscore", "get_game_lineup_for_viperscore", "get_scheduled_games_for_viperscore", "matchschedules_for_footapi", "series_for_vod_app", "users_by_rest_ids_for_twitter_data", "zois_detail_for_idealista_v2", "reviews_v2_list_for_the_fork_the_spoon", "v1_quotes_for_quotes_by_api_ninjas", "player_stats_for_football_pl", "get_a_list_of_states_for_australian_postcode_to_suburb", "get_username_valorant_for_id_game_checker", "topscorersbyseasontotalpoints_for_nba_statistics_api", "gethistoricalscoresbyyear_for_gaialens_historical_esg_scores", "comments_for_youtube_v3_v3", "list_for_sagenda_v3", "get_currency_for_airbnb_v2", "get_crypto_news_from_single_website_for_crypto_news_v11", "pressure_from_to_number_for_unitconversion"], "api_descs": {"Finish": "No description available.", "comments_for_youtube_v3_v3": "Returns a list of comments that match the API request parameters.", "get_a_list_of_states_for_australian_postcode_to_suburb": "This endpoint return 3 letter states for the passed postcode.", "get_crypto_news_from_single_website_for_crypto_news_v11": "This endpoint allows you to retrieve all the news articles about Crypto from a single website", "get_currency_for_airbnb_v2": "-", "get_game_lineup_for_viperscore": "With \"Get game lineup\" you'll receive the full lineup and if it is confirmed or a forecast", "get_live_games_for_viperscore": "With \"Get live games\" you'll receive a full list of all live games with their current status and score.", "get_scheduled_games_for_viperscore": "With \"Get scheduled games\" you'll receive all games which a scheduled for a specific date.", "get_username_valorant_for_id_game_checker": "Enter the Valorant Riot ID and Tag in the required parameters", "gethistoricalscoresbyyear_for_gaialens_historical_esg_scores": "This API returns historical Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100 based on the year provided in the request.  In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more.", "list_for_sagenda_v3": "A list of bookable items associated with supplied authentication token (account)", "matchschedules_for_footapi": "Get football schedules for a specific day, month, and year.", "player_stats_for_football_pl": "Player Stats", "pressure_from_to_number_for_unitconversion": "Pressure unit conversions", "reviews_v2_list_for_the_fork_the_spoon": "List reviews of specific restaurant by diners", "series_for_vod_app": "Series Endpoint, will have details about series and it's episodes", "topscorersbyseasontotalpoints_for_nba_statistics_api": "## Return top players by total points in descending order.\n\n_Season is specified in the URL._", "users_by_rest_ids_for_twitter_data": "users-by-rest-ids", "v1_quotes_for_quotes_by_api_ninjas": "Returns one (or more) random quotes.", "zois_detail_for_idealista_v2": "Get information about specific zone of interest"}, "aseqs": [{"api_name": "get_scheduled_games_for_viperscore", "api_action": "\nAction: get_scheduled_games_for_viperscore\nAction Input: {\n  \"date\": \"2021-10-15\",\n  \"sport\": \"football\"\n}", "api_reaction": null}, {"api_name": "get_game_lineup_for_viperscore", "api_action": "\nAction: get_game_lineup_for_viperscore\nAction Input: {\n  \"gameid\": \"9576185\"\n}", "api_reaction": null}, {"api_name": "get_live_games_for_viperscore", "api_action": "\nAction: get_live_games_for_viperscore\nAction Input: {\n  \"sport\": \"football\"\n}", "api_reaction": null}, {"api_name": "get_game_lineup_for_viperscore", "api_action": "\nAction: get_game_lineup_for_viperscore\nAction Input: {\n  \"gameid\": \"11067497\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_scheduled_games_for_viperscore"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_live_games_for_viperscore"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_live_games_for_viperscore", "api_action": "\nAction: get_live_games_for_viperscore\nAction Input: {\n  \"date\": \"2021-10-15\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_scheduled_games_for_viperscore", "api_action": "\nAction: get_scheduled_games_for_viperscore\nAction Input: {\n  \"date\": \"2021-10-15\",\n  \"sport\": \"football\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_scheduled_games_for_viperscore\",\n\t\"api_action\": \"\\nAction: get_scheduled_games_for_viperscore\\nAction Input: {\\n  \\\"date\\\": \\\"2021-10-15\\\",\\n  \\\"sport\\\": \\\"football\\\"\\n}\",\n}"}]}
{"URL": "46873", "query": "I want to promote my new mobile app to a wider audience. Can you help me by using endpoint A to gather data on app usage patterns and endpoint B to identify potential advertising channels with high user engagement?", "api_names": ["Finish", "endpint_b_for_putreq", "endpoint_a_for_putreq", "get_horoscope_multilingual_for_horoscopes_ai", "get_stream_game_name_for_gwyo_twitch", "trades_for_cryptocurrency_financial_data", "post_metadata_for_instagram_data", "get_user_pins_for_pinterest_apis", "charts_get_top_songs_in_city_for_shazam_api", "similar_to_property_for_uk_real_estate_rightmove", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb", "place_properties_for_places"], "api_descs": {"Finish": "No description available.", "charts_get_top_songs_in_city_for_shazam_api": "return top songs in city", "endpint_b_for_putreq": "efsdfs", "endpoint_a_for_putreq": "end", "get_all_suburbs_and_postcodes_in_a_radius_for_australian_postcode_to_suburb": "This endpoint takes your epic centre latitude, longitude along with radius in KM and returns all postcodes and suburbs within it.", "get_horoscope_multilingual_for_horoscopes_ai": "Return horoscope information by sign, period, type and languages provided.", "get_stream_game_name_for_gwyo_twitch": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )", "get_user_pins_for_pinterest_apis": "Get User Pins by user name", "place_properties_for_places": "Returns detailed information about the object. Objects can contain different amount of information.", "post_metadata_for_instagram_data": "Get post metadata\n\n**NOTE:** Profile should be public(not private)", "similar_to_property_for_uk_real_estate_rightmove": "Similar to this property", "trades_for_cryptocurrency_financial_data": "Trades endpoint available upon request"}, "aseqs": [{"api_name": "endpoint_a_for_putreq", "api_action": "\nAction: endpoint_a_for_putreq\nAction Input: {}", "api_reaction": null}, {"api_name": "endpint_b_for_putreq", "api_action": "\nAction: endpint_b_for_putreq\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to call endpoint A for app usage patterns data and endpoint B for potential advertising channels with high user engagement,\n\t\"api_name\": \"endpoint_a_for_putreq\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "endpint_b_for_putreq"}}, {"state": "generated_by_agent", "aseq": {"api_name": "endpoint_a_for_putreq"}}]}
{"URL": "47737", "query": "I am planning to play League of Legends and I need information about the champions. Can you provide me with a list of champions and their abilities? Please include the names and descriptions of the passive and standard abilities for each champion.", "api_names": ["Finish", "get_champions_for_league_of_legends_champion_informaion", "boxes_for_woo_temp", "new_search_for_traveldax", "getlivenow_for_sportapi", "gettopics_for_ted_talks_api", "getinventory_for_petstoreapi2_0", "competitions_player_stats_for_livescore_sports", "get_popular_movies_by_year_for_movies_tv_shows_database", "search_for_recipes_for_low_carb_recipes", "get_company_historical_data_for_stoxx", "latest_outcome_for_crazytimeapi"], "api_descs": {"Finish": "No description available.", "boxes_for_woo_temp": "Get all boxes", "competitions_player_stats_for_livescore_sports": "Get competition Player statistics by competition ID", "get_champions_for_league_of_legends_champion_informaion": "Accepts a comma delimited list of champion names or nicknames.\n\nReturns a list of Champions full names and list of passive ability and standard abilities in an on object format.", "get_company_historical_data_for_stoxx": "Provides access to daily historical company pricing data over a given period of months\n\nA sample output for each day:\n`{\n\"changePercent\":0\n\"close\":115.1465\n\"date\":\"2022-05-27\"\n\"high\":115.187\n\"low\":112.628\n\"open\":113.55\n\"symbol\":\"AMZN\"\n\"updated\":1654726813000\n\"volume\":93660160\n}`", "get_popular_movies_by_year_for_movies_tv_shows_database": "return movie results with title , year , id", "getinventory_for_petstoreapi2_0": "Returns a map of status codes to quantities", "getlivenow_for_sportapi": "GetLivenow Api Data", "gettopics_for_ted_talks_api": "Get all the TED talks topics", "latest_outcome_for_crazytimeapi": "Get the last Outcome data and details", "new_search_for_traveldax": "Add a new search to the queue. It will be executed in real time.", "search_for_recipes_for_low_carb_recipes": "Search for recipes that match provided criterions"}, "aseqs": [{"api_name": "get_champions_for_league_of_legends_champion_informaion", "api_action": "\nAction: get_champions_for_league_of_legends_champion_informaion\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_champions_for_league_of_legends_champion_informaion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_champions_for_league_of_legends_champion_informaion"}}]}
{"URL": "50862", "query": "My friend is feeling down and needs some motivation. Can you provide him with a random motivational quote? Also, it would be great if you could fetch him a random motivational picture to lift his spirits.", "api_names": ["get_all_motivational_quotes_for_motivational_content", "get_all_motivational_pictures_for_motivational_content", "Finish", "storageexists_for_groupdocs_signature_cloud", "navigations_get_root_for_unofficial_shein", "api_status_for_vizor_ads", "tennis_match_statistics_for_sports_live_scores", "getpostcode_for_uk_postcode", "capend_for_postcap", "q_study_for_q_study", "gettestwebhookpayloadbounce_for_mailslurp_email_testing", "hotels_search_for_booking_com", "live_aircraft_by_icao_for_fachaapi", "get_current_time_within_a_timezone_for_world_clock", "charts_for_rainforest", "search_for_youtube_data", "get_relatedproducts_by_productid_siteid_zappos_1_6pm_2_for_zappos_2022", "get_english_alt_text_for_alt_bichinhos"], "api_descs": {"Finish": "No description available.", "api_status_for_vizor_ads": "Check API server is running or not", "capend_for_postcap": "It display for on Home", "charts_for_rainforest": "The Charts parameters are applicable when making a request with type=charts to retrieve Charts results. The Charts page can be specified using the url parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nCharts results are retrieved from the charts page on Amazon.", "get_all_motivational_pictures_for_motivational_content": "This endpoint fetches all the pictures. However, you can use 'skip' and 'limit' parameters to do pagination.", "get_all_motivational_quotes_for_motivational_content": "This endpoint fetches all the motivational quotes. However, you can do pagination as well using the 'skip' and 'limit' parameters.", "get_current_time_within_a_timezone_for_world_clock": "Get the Current Time for EST", "get_english_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **English.**", "get_relatedproducts_by_productid_siteid_zappos_1_6pm_2_for_zappos_2022": "Get relatedProducts by siteId & productId", "getpostcode_for_uk_postcode": "Find an exact match for a given post code.", "gettestwebhookpayloadbounce_for_mailslurp_email_testing": "Get webhook test payload for bounce", "hotels_search_for_booking_com": "Get available hotels by the filter. Indicate the `destination_id` and `dest_type` -> use **@Search locations** endpoint, check-in and check-out date, number of adults and children. For possible filters use **@Filters for search** endpoint. Use `page_number` to paginate and navigate through the result pages! <br/> Comparable to: ![Search locations](https://i.imgur.com/PCuK81r.png)", "live_aircraft_by_icao_for_fachaapi": "Get live positioning for an aircraft with a specific ICAO HEX Code", "navigations_get_root_for_unofficial_shein": "Get root categories related to a tab", "q_study_for_q_study": "education", "search_for_youtube_data": "search", "storageexists_for_groupdocs_signature_cloud": " ", "tennis_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Tennis Live Matches endpoint."}, "aseqs": [{"api_name": "get_all_motivational_quotes_for_motivational_content", "api_action": "\nAction: get_all_motivational_quotes_for_motivational_content\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_motivational_pictures_for_motivational_content", "api_action": "\nAction: get_all_motivational_pictures_for_motivational_content\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_motivational_quotes_for_motivational_content", "api_action": "\nAction: get_all_motivational_quotes_for_motivational_content\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_motivational_pictures_for_motivational_content", "api_action": "\nAction: get_all_motivational_pictures_for_motivational_content\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_motivational_quotes_for_motivational_content"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_motivational_pictures_for_motivational_content", "api_action": "\nAction: get_all_motivational_pictures_for_motivational_content\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_motivational_quotes_for_motivational_content"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_motivational_quotes_for_motivational_content"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_motivational_quotes_for_motivational_content", "api_action": "\nAction: get_all_motivational_quotes_for_motivational_content\nAction Input: {}", "api_reaction": null}}]}
{"URL": "58705", "query": "As a real estate developer, I'm interested in analyzing the market trends for a specific area. Can you provide me with a summary of property records and transactions for an address on Central Park S in zipcode 10019? Additionally, I would like to see the detailed historical transactions for that address.", "api_names": ["Finish", "summary_for_real_estate_records", "transactions_for_real_estate_records", "detail_for_real_estate_records", "website_contacts_v1_for_website_contacts", "get_the_stock_history_by_exchange_code_and_stock_code_for_stocks", "daily_predictions_for_today_football_prediction", "bet365_prematch_odds_for_betsapi", "modern_internet_for_thai_lotto_new_api", "descriptions_for_numerology_api", "artist_appears_on_for_spotify_web", "artist_details_for_genius_song_lyrics", "list_services_for_inventory_and_ecommerce_hosted_and_self_hosted_solution", "town_for_mzansi_loadshedding_api_", "synonym_for_gruite", "search_php_for_geokeo_forward_geocoding", "search_for_unofficial_icons8_search", "wisdomoftheday_for_wisdom_api", "get_manager_placeholder_for_baseballapi", "get_the_addresses_by_postal_code_for_location"], "api_descs": {"Finish": "No description available.", "artist_appears_on_for_spotify_web": "Get artist appears on albums (max 50)", "artist_details_for_genius_song_lyrics": "An artist is how Genius represents the creator of one or more songs (or other documents hosted on Genius). It's usually a musician or group of musicians.", "bet365_prematch_odds_for_betsapi": "prematch odds", "daily_predictions_for_today_football_prediction": "Returns **Daily Football Predictions** with pagination support. \nSearch/filter can be used by **date**, **league**, **market-type**.\n\n* Use **predictions/{matchId}/details** endpoint to see more information about any particular match prediction.\n* Use **predictions/scores** endpoint to get score prediction and average goals.", "descriptions_for_numerology_api": " ", "detail_for_real_estate_records": "Return all detailed historical transactions of a given address. To call this API, it requires to call summary API first using address information. Then use the Id value returned from the summary API and call this API with the same Id. This API requires a subscription cost.", "get_manager_placeholder_for_baseballapi": "Get the manager placeholder image in PNG format.", "get_the_addresses_by_postal_code_for_location": "Get the addresses by postal code.", "get_the_stock_history_by_exchange_code_and_stock_code_for_stocks": "Get the stock history by exchange code and stock code.", "list_services_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "List all of the services within your account", "modern_internet_for_thai_lotto_new_api": "ယခု Endpoint မှာတော့ နံနက် ၉ခွဲ နှင့် နေ့လည် ၂နာရီ မော်ဒန်၊ အင်တာနက် ထွက်ဂဏန်း နှင့် 12:01 မိနစ်၊ ညနေ 4:30 ထွက်မယ့် ဂဏန်းများကို တိုက်ရိုက်ပြသဖို့အတွက်ပဲဖြစ်ပါတယ်။", "search_for_unofficial_icons8_search": "Search Icons8 repository", "search_php_for_geokeo_forward_geocoding": "Blazing fast geocoding open service with world wide coverage and 24x7 Support.Quickly start deploying your apps with our affordable and accurate geocoding api.Support for all languages java, python, php, c, c++, React, Angular etc.Sign up without any credit card and get 2500 free api requests daily.", "summary_for_real_estate_records": "Get a summary of property records by units given an address (if it's a multi-unit building). Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. This API requires a subscription cost. \n\nThis API provides details a level further than the \"address\" endpoint. For instance,  for 220 Central Park S, New York, NY 10019 it returns\n  \"data\": [\n    {\n      \"_id\": {\n        \"id\": \"6144a17b3afc5ca06ea0dd95\",\n        \"Loc\": {\n          \"coordinates\": [\n            -73.9802,\n            40.76719\n          ],\n          \"type\": \"Point\"\n        },\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"UNIT\": \"67\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 59500000,\n      \"SQFT\": 0,\n      \"TotalRecords\": 1\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index", "synonym_for_gruite": "Synonyms of the word", "town_for_mzansi_loadshedding_api_": "Returns the schedule for the specific requested town", "transactions_for_real_estate_records": "Show transactions given a zipcode. The API returns 50 records each time in descending order by date and supports pagination. This API requires a subscription cost.\n\nThe returned data shows the summary of information. To get further detail (such as the unit of a building that posts the most recent transaction, use summary API.\n\nSample data of the API when query zipcode 10019 is:\n \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"310\",\n        \"STREET\": \"W 56th St\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL COOP UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"lastSalesDate\": \"2021-07-21T00:00:00.000Z\",\n      \"lastSalesAmount\": 514000,\n      \"maxSalesAmount\": 1359000,\n      \"TotalRecords\": 74\n    },", "website_contacts_v1_for_website_contacts": "Get full contact information from page, domain or web (v1)", "wisdomoftheday_for_wisdom_api": "Daily Wisdom Quote: This API endpoint provides a wise quote that is refreshed everyday between 8-9 AM PT."}, "aseqs": [{"api_name": "summary_for_real_estate_records", "api_action": "\nAction: summary_for_real_estate_records\nAction Input: {\n  \"number\": \"1\",\n  \"street\": \"Central Park S\",\n  \"zipcode\": \"10019\"\n}", "api_reaction": null}, {"api_name": "transactions_for_real_estate_records", "api_action": "\nAction: transactions_for_real_estate_records\nAction Input: {\n  \"zipcode\": \"10019\"\n}", "api_reaction": null}, {"api_name": "detail_for_real_estate_records", "api_action": "\nAction: detail_for_real_estate_records\nAction Input: {\n  \"is_id\": \"6486752def52d29a0b8907e9\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"action": "Request for property records and detailed historical transactions of an address on Central Park S in zipcode 10019"}}, {"state": "generated_by_agent", "aseq": {"api_name": "historical_transactions_for_address", "api_action": "\nAction: historical_transactions_for_address\nAction Input: {\n  \"number\": \"1\",\n  \"street\": \"Central Park S\",\n  \"zipcode\": \"10019\"\n}\n"}}, {"state": "generated_by_agent", "aseq": [{"api_name": "summary_for_real_estate_records", "api_action": "\nAction: summary_for_real_estate_records\nAction Input: {\n  \"number\": \"1\",\n  \"street\": \"Central Park S\",\n  \"zipcode\": \"10019\"\n}"}, {"api_name": "transactions_for_real_estate_records", "api_action": "\nAction: transactions_for_real_estate_records\nAction Input: {\n  \"zipcode\": \"10019\"\n}"}]}, {"state": "generated_by_agent", "aseq": [{"api_name": "summary_for_real_estate_records", "api_action": "\nAction: summary_for_real_estate_records\nAction Input: {\n  \"number\": \"1\",\n  \"street\": \"Central Park S\",\n  \"zipcode\": \"10019\"\n}"}, {"api_name": "transactions_for_real_estate_records", "api_action": "\nAction: transactions_for_real_estate_records\nAction Input: {\n  \"zipcode\": \"10019\"\n}"}]}]}
{"URL": "83264", "query": "I'm planning a romantic dinner for two and I need a recipe that will set the mood. Can you recommend a romantic recipe? Additionally, I would like to know the details of the recipe titled 'articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482.html'.", "api_names": ["get_recipes_details_for_recetas_en_espa_ol", "get_recipes_for_recetas_en_espa_ol", "Finish", "users_by_rest_ids_for_twitter_v2_v2", "logoutuser_for_pet_store", "health_check_for_hris", "games_esports_for_sofasport", "user_s_details_for_tiktok_api", "timezone_by_id_for_referential", "get_all_lgbtq_news_for_lgbtq_world_news_live", "get_anime_detail_for_animes", "random_for_chess_puzzles_v2"], "api_descs": {"Finish": "No description available.", "games_esports_for_sofasport": "Get games (esports) by event_id", "get_all_lgbtq_news_for_lgbtq_world_news_live": "This endpoint will return back all news about LGBTQ+ from all over the world.", "get_anime_detail_for_animes": "This endpoint will allow a user to get the data of a specific anime. It will take the anime's mal_id as a parameter and return the anime's data in JSON format. The data returned will include the anime's title, aired episodes, genre, and a brief synopsis.", "get_recipes_details_for_recetas_en_espa_ol": "Get details of any recipe", "get_recipes_for_recetas_en_espa_ol": "Get all recipes", "health_check_for_hris": "Check API Health Status", "logoutuser_for_pet_store": "", "random_for_chess_puzzles_v2": "Get random chess puzzles", "timezone_by_id_for_referential": "Lookup a time zone", "user_s_details_for_tiktok_api": "Return User Details", "users_by_rest_ids_for_twitter_v2_v2": "Users By Rest IDs"}, "aseqs": [{"api_name": "get_recipes_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_for_recetas_en_espa_ol\nAction Input: {}", "api_reaction": null}, {"api_name": "get_recipes_details_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_details_for_recetas_en_espa_ol\nAction Input: {\n  \"slug\": \"articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482.html\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_details_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_details_for_recetas_en_espa_ol", "api_action": "{\"title\": \"articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482.html\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_details_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_details_for_recetas_en_espa_ol\nAction Input: {\n  \"slug\": \"articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482.html\"\n}", "api_reaction": null}}]}
{"URL": "54363", "query": "I'm a real estate agent helping clients find homes in Toronto. Can you provide me with information about the top ten schools in various neighborhoods? I would like to know their names, addresses, and any additional details available. It would be great if you could provide me with a filtered list based on criteria such as school ratings or proximity to the listed properties.", "api_names": ["get_paginate_for_tdot_school_data", "get_all_locations_for_tdot_school_data", "get_filter_for_tdot_school_data", "Finish", "health_check_for_ip_geolocator", "by_country_for_ambee_air_quality", "rates_for_currencyapi_net", "get_airport_details_for_travel_hacking_tool", "trend_list_for_twitter_pack_v2", "get_raids_for_lost_ark", "news_v2_list_trending_for_cnbc", "list_of_cities_in_one_country_for_weather_forecast_14_days", "livetraffic_for_adsbx_flight_sim_traffic", "alexander_for_marryme", "about_info_for_bulk_whatsapp_validator", "get_population_for_get_population", "trending_for_webit_news_search", "all_belgian_races_for_wonderboyapi", "anime_for_anime_manga_and_novels_api", "historical_rates_for_currency_v3"], "api_descs": {"Finish": "No description available.", "about_info_for_bulk_whatsapp_validator": "This endpoint will return the *About* state of the WA number on the query.", "alexander_for_marryme": "123", "all_belgian_races_for_wonderboyapi": "At this endpoint nothing happens for now", "anime_for_anime_manga_and_novels_api": "Get a list of all anime", "by_country_for_ambee_air_quality": "Provides the air quality data for a country", "get_airport_details_for_travel_hacking_tool": "This endpoint returns the details such as name and location for a specified IATA airport.", "get_all_locations_for_tdot_school_data": "Get all locations", "get_filter_for_tdot_school_data": "Get Filter", "get_paginate_for_tdot_school_data": "Get Paginate", "get_population_for_get_population": "Get world population.", "get_raids_for_lost_ark": "Endpoint to get all guardian raids", "health_check_for_ip_geolocator": "Check if the API is up and running.", "historical_rates_for_currency_v3": "Find currency exchange rates for any day since 1999!", "list_of_cities_in_one_country_for_weather_forecast_14_days": "List of cities in one Country", "livetraffic_for_adsbx_flight_sim_traffic": "Returns all aircraft within 25nm radius of specified Lat/Lon", "news_v2_list_trending_for_cnbc": "List trending news", "rates_for_currencyapi_net": "Get live currency conversion rates of a given currency", "trend_list_for_twitter_pack_v2": " ", "trending_for_webit_news_search": "Get a continuously updated, rich feed of articles finely picked by a sophisticated A.I.\n\nTry it live at: https://webit.re/services/internet-search/news-search-api/tryout"}, "aseqs": [{"api_name": "get_filter_for_tdot_school_data", "api_action": "\nAction: get_filter_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_locations_for_tdot_school_data", "api_action": "\nAction: get_all_locations_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_paginate_for_tdot_school_data", "api_action": "\nAction: get_paginate_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_filter_for_tdot_school_data", "api_action": "\nAction: get_filter_for_tdot_school_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_filter_for_tdot_school_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_paginate_for_tdot_school_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_filter_for_tdot_school_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_filter_for_tdot_school_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_filter_for_tdot_school_data"}}]}
{"URL": "50212", "query": "Please give me the 3D live results for the latest draw. Additionally, provide me with the 2D live results for today and the holidays of 2D.", "api_names": ["daily_live_for_shwe_2d_live_api", "3d_live_for_shwe_2d_live_api", "Finish", "2d_calendar_for_shwe_2d_live_api", "holidays_of_2d_for_shwe_2d_live_api", "get_random_joke_by_category_for_world_of_jokes", "music_search_for_instagram_v2", "get_advisories_by_vendor_for_ics_cert_advisories", "riddle_by_id_for_riddlie_", "getpaymenttypes_for_payment", "retrieving_bundles_for_opensea_data_query", "getpeoplebytopic_for_azure", "get_address_transaction_webhook_for_address_monitor", "get_user_feed_for_instagram_v7", "feeds_search_for_yummly", "recommend_for_optlog_co_optimize_anything", "listing_availability_for_airbnb_listings", "measure_distance_reverse_for_cameroon", "getverses_for_holy_bible", "getusersreservation_for_mybooky_demo"], "api_descs": {"2d_calendar_for_shwe_2d_live_api": "2D Calendar", "3d_live_for_shwe_2d_live_api": "3D Live", "Finish": "No description available.", "daily_live_for_shwe_2d_live_api": "Daily Live Perfect", "feeds_search_for_yummly": "Search for recipes by name and option filters", "get_address_transaction_webhook_for_address_monitor": "Get address transaction webhook", "get_advisories_by_vendor_for_ics_cert_advisories": "This endpoint will return back Advisories by Vendor and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov", "get_random_joke_by_category_for_world_of_jokes": "Get the random joke by category from a collection of most rated and most popular jokes.", "get_user_feed_for_instagram_v7": "Get the feed of a user", "getpaymenttypes_for_payment": "Find Payment Services allowed by tenant", "getpeoplebytopic_for_azure": "Get Azure influencers by topic.", "getusersreservation_for_mybooky_demo": " ", "getverses_for_holy_bible": "", "holidays_of_2d_for_shwe_2d_live_api": "Holidays of 2D", "listing_availability_for_airbnb_listings": "Retrieve listing availability and stay length rules for the requested month.\n**Note**: The fact the available field is true does not means that the listing can be booked. It only tells indicates that it is not taken. To confirm if it is really available for stay you must verify all previous and following day rules for stay length are respected.", "measure_distance_reverse_for_cameroon": "This endpoint calculates the distance between two addresses in Cameroon.", "music_search_for_instagram_v2": "Search music/sound/audio names and get artists cover and sounds url", "recommend_for_optlog_co_optimize_anything": "Recommend", "retrieving_bundles_for_opensea_data_query": "Bundles are groups of items for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the assets inside.", "riddle_by_id_for_riddlie_": "Get a riddle by ID."}, "aseqs": [{"api_name": "3d_live_for_shwe_2d_live_api", "api_action": "\nAction: 3d_live_for_shwe_2d_live_api\nAction Input: {}", "api_reaction": null}, {"api_name": "2d_calendar_for_shwe_2d_live_api", "api_action": "\nAction: 2d_calendar_for_shwe_2d_live_api\nAction Input: {}", "api_reaction": null}, {"api_name": "holidays_of_2d_for_shwe_2d_live_api", "api_action": "\nAction: holidays_of_2d_for_shwe_2d_live_api\nAction Input: {}", "api_reaction": null}, {"api_name": "daily_live_for_shwe_2d_live_api", "api_action": "\nAction: daily_live_for_shwe_2d_live_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "3d_live_for_shwe_2d_live_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_live_for_shwe_2d_live_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "3d_live_for_shwe_2d_live_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "3d_live_for_shwe_2d_live_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "3d_live_for_shwe_2d_live_api"}}]}
{"URL": "4811", "query": "My company is organizing a team-building event in the Rocky Mountains. Please fetch the daily weather report for Mount Elbert, along with the extended 6-day forecast. We need to ensure the weather conditions are suitable for outdoor activities.", "api_names": ["get_daily_report_by_mountain_id_for_peak_conditions", "search_mountain_peak_by_name_for_peak_conditions", "get_extended_report_by_mountain_id_for_peak_conditions", "Finish", "random_for_helper_function", "me_for_ticketbud", "get_all_country_list_for_country_list", "get_markdown_for_heck_yes_markdown", "hot_100_for_billboard", "get_user_info_by_user_id_for_instagram_looter", "paymentcalculatorsimple_calculate_for_simple_interest_payment_calculator", "marks_men_points_for_scoring_tables_api", "originals_genres_list_for_webtoon", "airlines_airlines_and_the_countries_they_operate_in_for_timetable_lookup_", "hello_for_hello_world_v2", "top_collections_today_for_top_nft_sales", "fixtures_by_team_by_season_for_rugby_live_data", "products_list_deprecated_for_asos", "currency_by_country_for_geosource_api", "get_nba_betting_odds_for_tank01_fantasy_stats"], "api_descs": {"Finish": "No description available.", "airlines_airlines_and_the_countries_they_operate_in_for_timetable_lookup_": "Return a list of airlines and the countries they operate in", "currency_by_country_for_geosource_api": "Retrives a currecny and currency symbol of the country", "fixtures_by_team_by_season_for_rugby_live_data": "Fixtures and results for a given team within a given season, across all competitions they play in.", "get_all_country_list_for_country_list": "Nodes:\niso: iso\ncountryname: country name\nnicename: nicename\niso3: iso3\nnumcode: numcode\nphonecode:phonecode", "get_daily_report_by_mountain_id_for_peak_conditions": "Returns a daily report for the mountain peak specified in the request.", "get_extended_report_by_mountain_id_for_peak_conditions": "Returns an extended 6-day report for the mountain peak specified in the request.", "get_markdown_for_heck_yes_markdown": "Enter a url or some HTML code to convert the page to Markdown. One parameter between \"u\" and \"html\" must be submitted with the request.", "get_nba_betting_odds_for_tank01_fantasy_stats": "This grabs NBA betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNBABettingLines?gameDate=20221227\n/getNBABettingLines?gameID=20221227_DEN@SAC", "get_user_info_by_user_id_for_instagram_looter": "Get **Instagram** user info by **user_id**", "hello_for_hello_world_v2": "helloapi", "hot_100_for_billboard": "Provide the Hot 100 chart information", "marks_men_points_for_scoring_tables_api": "This retrieves the men's marks for the point value given as a parameter (0-1400).", "me_for_ticketbud": "Information about the current token holder", "originals_genres_list_for_webtoon": "List genres in originals category", "paymentcalculatorsimple_calculate_for_simple_interest_payment_calculator": " ", "products_list_deprecated_for_asos": "List products, search products with options and filters", "random_for_helper_function": "Generate Random String with custom length\nBASIC: 20 \nPRO: 30\nULTRA: 70\nMEGA: 150", "search_mountain_peak_by_name_for_peak_conditions": "search for mountain peaks by name. returns all mountains with names containing the search query, along with their associated peak_id.", "top_collections_today_for_top_nft_sales": "Top trending collections today"}, "aseqs": [{"api_name": "search_mountain_peak_by_name_for_peak_conditions", "api_action": "\nAction: search_mountain_peak_by_name_for_peak_conditions\nAction Input: {\n  \"query\": \"Mount+Elbert\"\n}", "api_reaction": null}, {"api_name": "get_extended_report_by_mountain_id_for_peak_conditions", "api_action": "\nAction: get_extended_report_by_mountain_id_for_peak_conditions\nAction Input: {\n  \"mountainid\": \"13803\"\n}", "api_reaction": null}, {"api_name": "get_daily_report_by_mountain_id_for_peak_conditions", "api_action": "\nAction: get_daily_report_by_mountain_id_for_peak_conditions\nAction Input: {\n  \"mountainid\": \"13803\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the daily weather report and extended forecast for Mount Elbert, which is located in the Rocky Mountains.\n\t\"api_name\": \"get_daily_report_by_mountain_id_for_peak_conditions\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_daily_report_by_mountain_id_for_peak_conditions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_daily_report_by_mountain_id_for_peak_conditions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_daily_report_by_mountain_id_for_peak_conditions", "api_action": "\nAction: get_daily_report_by_mountain_id_for_peak_conditions\nAction Input: {\n  \"mountainid\": \"13803\"\n}", "api_reaction": null}}]}
{"URL": "43706", "query": "My family and I want to download an Instagram post. Here is the link to the post: https://www.instagram.com/p/CtwqsweyqYB/. Please generate the download link for this post. Also, we want to save the reel from this Instagram link: https://www.instagram.com/reels/CsinDvAgoYA/. Can you provide the download link for the reel as well?", "api_names": ["Finish", "posts_for_instagram_reels_and_post_downloader", "reels_downloader_for_instagram_reels_and_post_downloader", "matches_for_bildbet", "get_bookings_information_for_sagenda_v3", "coins_get_analysis_for_investing_cryptocurrency_markets", "search_for_chapters_containing_terms_for_bible_memory_verse_flashcard", "web_impressive_numbers_for_open_defi", "products_search_by_barcode_for_kohls", "get_openapi_for_aaaa", "health_for_stampr", "teams_get_results_for_unofficial_cricbuzz", "series_get_venues_for_unofficial_cricbuzz", "rate_word_for_humor_jokes_and_memes", "list_category_for_adzuna"], "api_descs": {"Finish": "No description available.", "coins_get_analysis_for_investing_cryptocurrency_markets": "Get analysis opinion from expert for specific cryptocurrency", "get_bookings_information_for_sagenda_v3": "This endpoint lets you request detailed booking information for a given period of time, optionally filtered by bookable item and status.", "get_openapi_for_aaaa": "Get a specified API's OpenAPI file in REST format.", "health_for_stampr": "", "list_category_for_adzuna": "List available categories.", "matches_for_bildbet": "Latest Matches for Bildbet", "posts_for_instagram_reels_and_post_downloader": "Download post using instagram url", "products_search_by_barcode_for_kohls": "Search product by barcode", "rate_word_for_humor_jokes_and_memes": "Rate the funniness of a word.\nSee https://humorapi.com/docs/#Rate-Word for more.", "reels_downloader_for_instagram_reels_and_post_downloader": "You only need to provide the link to your Instagram media, and our API will give you the results in Download links of reels and posts", "search_for_chapters_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns chapters  that contain term(s). Terms are not case sensitive.  Books, operators etc. are NOT CASE SENSITIVE.\n\n**   ONLY SEARCHES 2 BOOKS   (NO RANGE FUNCTION) **", "series_get_venues_for_unofficial_cricbuzz": "Get venues by series", "teams_get_results_for_unofficial_cricbuzz": "Get matched results by team", "web_impressive_numbers_for_open_defi": " "}, "aseqs": [{"api_name": "posts_for_instagram_reels_and_post_downloader", "api_action": "\nAction: posts_for_instagram_reels_and_post_downloader\nAction Input: {\n  \"link\": \"https://www.instagram.com/p/CtwqsweyqYB/\"\n}", "api_reaction": null}, {"api_name": "reels_downloader_for_instagram_reels_and_post_downloader", "api_action": "\nAction: reels_downloader_for_instagram_reels_and_post_downloader\nAction Input: {\n  \"link\": \"https://www.instagram.com/reels/CsinDvAgoYA/\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "reels_downloader_for_instagram_reels_and_post_downloader"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reels_downloader_for_instagram_reels_and_post_downloader", "api_action": "\nAction: reels_downloader_for_instagram_reels_and_post_downloader\nAction Input: {\n  \"link\": \"https://www.instagram.com/reels/CsinDvAgoYA/\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "posts_for_instagram_reels_and_post_downloader", "api_action": "\nAction: posts_for_instagram_reels_and_post_downloader\nAction Input: {\n  \"link\": \"https://www.instagram.com/reels/CsinDvAgoYA/\"\n}", "api_reaction": null}}]}
{"URL": "88657", "query": "I'm planning to start a new business and I'm in need of product ideas. Can you provide me with a list of trending products in the market? It would be helpful if you can include details such as the product category, demand, and market trends. Thanks in advance!", "api_names": ["products_for_prueba", "Finish", "get_all_collections_by_user_for_pulsar", "index_overview_for_investing_financial_stocks", "house_prices_get_points_of_interest_for_zoopla_v2", "get_m1lhao_for_euro_millions", "tweet_id_by_url_for_twitter", "test_for_test_opta", "odds_for_dafabet", "top_collections_today_for_top_nft_sales"], "api_descs": {"Finish": "No description available.", "get_all_collections_by_user_for_pulsar": "Get all collections by user", "get_m1lhao_for_euro_millions": "Get last drawn result of M1lhao (M1lhão (‘The Million’) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of €1 million on Friday evenings.)", "house_prices_get_points_of_interest_for_zoopla_v2": "Get nearest points of interest", "index_overview_for_investing_financial_stocks": "get all overview about index by symbol", "odds_for_dafabet": "Latest Odds for Dafabet", "products_for_prueba": "Prueba de servicio products", "test_for_test_opta": "test", "top_collections_today_for_top_nft_sales": "Top trending collections today", "tweet_id_by_url_for_twitter": "Convert tweet url to id for use in \"getTweetById\" endpoint"}, "aseqs": [{"api_name": "products_for_prueba", "api_action": "\nAction: products_for_prueba\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "products_for_prueba"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_for_prueba"}}]}
{"URL": "8794", "query": "I am a social media manager and I need to analyze a TikTok user's videos. Can you provide me with the details and videos of the user 'abbeychaplain' from the collection 'Recipes & Good Eats'? I want the videos in JSON format and I also need the statistics for each video, including the number of comments, hearts, plays, and reposts.", "api_names": ["collection_videos_details_for_tiktok_api", "video_details_for_tiktok_api", "user_s_videos_for_tiktok_api", "Finish", "highlights_for_ig_private_api", "laravel_jobs_for_usa_jobs_for_it", "stagecompetitorstandings_for_motorsportapi", "api_v1_beyblades_for_beyblade_api", "10_year_historical_daily_prices_for_stock_prices", "v1_covid_for_covid_19_news", "storageexists_for_groupdocs_metadata_cloud", "get_recipe_by_id_for_low_carb_recipes", "metars_in_time_range_for_aviation_weather_center", "search_posts_for_reddit_fast_search", "config_for_score", "staffs_list_by_club_for_transfermarket", "titles_episode_id_for_moviesdatabase", "findpincodebydistrict_for_india_pincode_api", "fetchlatestnav_for_latest_mutual_fund_nav", "kirim_pesan_for_grup_terbuka"], "api_descs": {"10_year_historical_daily_prices_for_stock_prices": "10 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "api_v1_beyblades_for_beyblade_api": " ", "collection_videos_details_for_tiktok_api": "Return a collection details and videos", "config_for_score": "config", "fetchlatestnav_for_latest_mutual_fund_nav": "Fetch Latest NAV", "findpincodebydistrict_for_india_pincode_api": "findpincodebydistrict", "get_recipe_by_id_for_low_carb_recipes": "Get details of the specified recipe", "highlights_for_ig_private_api": "Highlights", "kirim_pesan_for_grup_terbuka": "api untuk kirim pesan", "laravel_jobs_for_usa_jobs_for_it": "Laravel Jobs Api", "metars_in_time_range_for_aviation_weather_center": "Obtain all METARs for a station collected between these start and end times using ISO8601  date/time format, with UTC offset: YYYY-MM-DDThh:mm:ssZ. Please see [W3C date/time formats](http://www.w3.org/TR/NOTE-datetime).", "search_posts_for_reddit_fast_search": "The endpoint utilizes the Reddit API's search functionality to retrieve the posts.\nTo obtain the best results, it is recommended to use appropriate search parameters, including the keyword, sorting order, time range, and limiting the number of results to a reasonable value.\nSetting the limit parameter to its maximum value of 250 allows you to retrieve the maximum number of search results in a single request.", "staffs_list_by_club_for_transfermarket": "List staffs of specific club", "stagecompetitorstandings_for_motorsportapi": "Get the competitor standings for a specific Motorsport stage.", "storageexists_for_groupdocs_metadata_cloud": " ", "titles_episode_id_for_moviesdatabase": " ", "user_s_videos_for_tiktok_api": "Return User Videos", "v1_covid_for_covid_19_news": "Highly customizable search through our database of news only on the next specific keywords: \n`covid`,`covid-19`, `coronavirus`, `коронавирус`, `koronavirüs`, `koronavirüs`, `coronavirüs`, `التاجى`\nAll filters and sorting options are allowed.", "video_details_for_tiktok_api": "Return Video Details"}, "aseqs": [{"api_name": "collection_videos_details_for_tiktok_api", "api_action": "\nAction: collection_videos_details_for_tiktok_api\nAction Input: {\n  \"collection_id\": \"Recipes & Good Eats\",\n  \"username\": \"abbeychaplain\"\n}", "api_reaction": null}, {"api_name": "user_s_videos_for_tiktok_api", "api_action": "\nAction: user_s_videos_for_tiktok_api\nAction Input: {\n  \"username\": \"abbeychaplain\"\n}", "api_reaction": null}, {"api_name": "video_details_for_tiktok_api", "api_action": "\nAction: video_details_for_tiktok_api\nAction Input: {\n  \"video_id\": \"7247288703125556526\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_s_videos_for_tiktok_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_s_videos_for_tiktok_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_s_videos_for_tiktok_api", "api_action": "\nAction: user_s_videos_for_tiktok_api\nAction Input: {\n  \"username\": \"abbeychaplain\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_s_videos_for_tiktok_api", "api_action": "\nAction: user_s_videos_for_tiktok_api\nAction Input: {\n  \"username\": \"abbeychaplain\"\n}", "api_reaction": null}}]}
{"URL": "47149", "query": "I'm a language teacher and I'm looking for news articles in different languages to use in my classes. Can you fetch the list of the current latest news articles in English? It would be great if the response includes information like the title, text, top image, and publish date of each article.", "api_names": ["get_latest_article_list_for_malaysia_kini", "Finish", "team_players_for_trackmania", "user_data_for_instagram_v13", "aliexpress_store_item_search_for_aliexpress_datahub", "get_employee_information_associated_with_a_specific_payment_card_for_human_resources_api", "search_calls_for_hubspot_apis", "user_info_by_username_for_instagram_api_v2"], "api_descs": {"Finish": "No description available.", "aliexpress_store_item_search_for_aliexpress_datahub": "All details of a single item.", "get_employee_information_associated_with_a_specific_payment_card_for_human_resources_api": "This endpoint gets employee record associated with a specific card number that is unique for each card, and displays  the employee information in the response.\nFor example:  employee ID , first name, and  etc...", "get_latest_article_list_for_malaysia_kini": "Return a list of current latest news article with info.", "search_calls_for_hubspot_apis": "Search for calls", "team_players_for_trackmania": "Get Players that are in the Openplanet Team.", "user_data_for_instagram_v13": "Get instagram user info by username.", "user_info_by_username_for_instagram_api_v2": "Get all information of an Instagram account by  username"}, "aseqs": [{"api_name": "get_latest_article_list_for_malaysia_kini", "api_action": "\nAction: get_latest_article_list_for_malaysia_kini\nAction Input: {\n  \"language\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_latest_article_list_for_malaysia_kini"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_latest_article_list_for_malaysia_kini"}}]}
{"URL": "14397", "query": "I'm in Sfax and I need to find the nearest hospital in Manouba. Can you help me with that? I would like to know the address, latitude, and longitude of the hospital.", "api_names": ["Finish", "facilities_lookup_for_tunisia_api", "sources_for_streamlinewatch_streaming_guide", "single_name_long_for_nameforge", "teamplayers_for_baseballapi", "session_for_f1_live_motorsport_data", "au_decode_for_vin_decoder_v4", "getassignments_for_aspose_tasks_cloud", "highlights_tray_by_id_for_instagram_bulk_profile_scrapper", "locales_for_skyscanner_api", "racecards_for_horse_racing", "business_idea_for_business_starter_api"], "api_descs": {"Finish": "No description available.", "au_decode_for_vin_decoder_v4": "AU Decode", "business_idea_for_business_starter_api": "Generate a business idea", "facilities_lookup_for_tunisia_api": "This endpoint allows you to get facilities in Tunisia like hospital, bank, college, etc. by providing optional query parameters for facility type, province and city. It returns a list of facilities that match the query parameters.", "getassignments_for_aspose_tasks_cloud": " ", "highlights_tray_by_id_for_instagram_bulk_profile_scrapper": "Fetch Instagram story highlights tray list by Highlight id", "locales_for_skyscanner_api": "You can use the `/locales` endpoint to retrieve the locales that we support to translate your content. The names of the locales returned are in the native language associated with the locale.", "racecards_for_horse_racing": "Get races list.", "session_for_f1_live_motorsport_data": "Provides session details for a given `session id` found in the Races endpoint. Contains information on drivers times, session weather, speed traps, and session status. Updated throughout each session.", "single_name_long_for_nameforge": "Create single names.\nMax query length is 200 characters.", "sources_for_streamlinewatch_streaming_guide": "Returns a list of all sources covered in a specific region", "teamplayers_for_baseballapi": "Get the players for a specific baseball team using the team ID."}, "aseqs": [{"api_name": "facilities_lookup_for_tunisia_api", "api_action": "\nAction: facilities_lookup_for_tunisia_api\nAction Input: {\n  \"city\": \"Manouba\",\n  \"province\": \"Manouba\",\n  \"type\": \"hospital\",\n  \"limit\": \"1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_tunisia_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_tunisia_api"}}]}
{"URL": "14400", "query": "I want to find the nearest hospital in Manouba. Can you help me with that? I need the address, latitude, and longitude of the hospital.", "api_names": ["Finish", "facilities_lookup_for_tunisia_api", "wrt_transformer_for_walnut_word_completion", "sunction_one_for_kiann_options_project", "get_list_of_available_modes_for_image_anonymization", "geocode_v1_json_for_opencage_geocoder", "ip_lookup_api_for_weatherapi_com", "get_all_api_docs_for_aaaa", "get_the_states_for_location", "get_company_data_by_company_slug_for_get_companies_by_sic_code_api"], "api_descs": {"Finish": "No description available.", "facilities_lookup_for_tunisia_api": "This endpoint allows you to get facilities in Tunisia like hospital, bank, college, etc. by providing optional query parameters for facility type, province and city. It returns a list of facilities that match the query parameters.", "geocode_v1_json_for_opencage_geocoder": "geocode an address", "get_all_api_docs_for_aaaa": "Get information about all of the docs associated with an API, including the docId.", "get_company_data_by_company_slug_for_get_companies_by_sic_code_api": "Using the Company Slug that is provided in the \"Get Companies by SIC code\" endpoint, you will be receiving additional information about a company. \nGet city, state, zip code, estimated annual revenue, years in business, and estimated company size, and company NAICS.", "get_list_of_available_modes_for_image_anonymization": "Service provides server modes that may be used to choose which kind of objects to hide. This endpoint returns list of modes that may be used as query parameters for requests to the `results` endpoint.\n\nThe following modes are supported:\n\n* `hide-clp` – to hide car license plates\n* `hide-face` – to hide faces", "get_the_states_for_location": "Get the states.", "ip_lookup_api_for_weatherapi_com": "IP Lookup API method allows a user to get up to date information for an IP address in json.", "sunction_one_for_kiann_options_project": "N/A", "wrt_transformer_for_walnut_word_completion": "Returns the hidden word in the sentence."}, "aseqs": [{"api_name": "facilities_lookup_for_tunisia_api", "api_action": "\nAction: facilities_lookup_for_tunisia_api\nAction Input: {\n  \"city\": \"Manouba\",\n  \"province\": \"Manouba\",\n  \"type\": \"hospital\",\n  \"limit\": \"1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "geocode_v1_json_for_opencage_geocoder"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_tunisia_api"}}]}
{"URL": "76838", "query": "I am planning to buy a bouquet of flowers for my friend's birthday. Can you show me an image of the African Daisy? Also, I would like to know more about this flower's scientific name and description.", "api_names": ["get_by_id_for_flowers", "Finish", "show_image_for_flowers", "list_for_flowers", "products_for_api_telecom", "getdiscusage_for_groupdocs_conversion_cloud", "statusforonepdffilecrawler_for_carbon_management", "get_a_watchlist_for_tradier", "bd_upazila_for_bd", "ancestry_for_23andme", "sticker_roulette_for_giphy", "user_for_moodring", "ip_geolocation_for_ip_address_geolocation", "projected_pitching_stats_for_mlb_data", "tags_video_id_for_youtube_classification_api", "decrypt_for_cryptocurrency_news", "get_a_daily_horoscope_for_horoscope_api", "search_express_multi_contract_for_priceline_com_provider", "downloadfilewithformat_for_aspose_diagram_cloud", "yearly_cashflow_statements_for_freedom_finance"], "api_descs": {"Finish": "No description available.", "ancestry_for_23andme": "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion — the ancestry we couldn't classify in it.   threshold is optional, default 0.75 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate.", "bd_upazila_for_bd": " ", "decrypt_for_cryptocurrency_news": "Get the top latest news from Decrypt.", "downloadfilewithformat_for_aspose_diagram_cloud": " ", "get_a_daily_horoscope_for_horoscope_api": "Get a daily horoscope for the horoscope sign.", "get_a_watchlist_for_tradier": "", "get_by_id_for_flowers": "Get all info about the flower", "getdiscusage_for_groupdocs_conversion_cloud": " ", "ip_geolocation_for_ip_address_geolocation": "Returns the geolocation of the given IP address", "list_for_flowers": "List all flowers", "products_for_api_telecom": "details products", "projected_pitching_stats_for_mlb_data": "Retrieve a players projected pitching stats for a given season.  Omitting the season parameter will return the actual stats for the players earliest major league season.", "search_express_multi_contract_for_priceline_com_provider": "Provides hotel and multiple rates information per hotel using the getExpress.MultiContract endpoint.", "show_image_for_flowers": "Show image of the flower", "statusforonepdffilecrawler_for_carbon_management": "Get results in details from the task id.", "sticker_roulette_for_giphy": "Returns a spotaneously selected sticker from Giphy's sticker collection. Optionally limit scope of result to a specific tag. Like the GIF random endpoint, Punctuation will be stripped and ignored. Use a hyphen for phrases. Example oops, birthday or thank-you. Search terms should be URL encoded.", "tags_video_id_for_youtube_classification_api": "GET Tags + video_id", "user_for_moodring": "Get a user with userId", "yearly_cashflow_statements_for_freedom_finance": "Annual cashflow statements"}, "aseqs": [{"api_name": "list_for_flowers", "api_action": "\nAction: list_for_flowers\nAction Input: {}", "api_reaction": null}, {"api_name": "show_image_for_flowers", "api_action": "\nAction: show_image_for_flowers\nAction Input: {\n  \"is_id\": \"6383808bff3dde72b0fc34ab\"\n}", "api_reaction": null}, {"api_name": "get_by_id_for_flowers", "api_action": "\nAction: get_by_id_for_flowers\nAction Input: {\n  \"is_id\": \"6383808bff3dde72b0fc34ab\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "show_image_for_flowers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_flowers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_flowers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_flowers"}}]}
{"URL": "38158", "query": "I need to know the maximum number of uses and the creation date of the 'minecraft' invite. Additionally, fetch the user data for the user with ID '25458687581618176'.", "api_names": ["Finish", "get_user_data_for_discord_lookup", "get_invite_data_for_discord_lookup", "eventgames_for_esportapi", "read_text_for_profanity_filter", "stickers_trending_for_mojitok_sticker_store_sdk", "get_signing_links_for_signnow", "user_by_screen_name_for_twitter_v2", "get_ios_app_for_ios_store", "rating_for_hleby6ek", "get_support_languages_for_news_content_extraction_live", "market_get_price_chart_for_bb_finance", "download_verification_results_for_phone_verification", "get_distance_for_great_circle_math_api", "get_cigar_by_id_for_cigars"], "api_descs": {"Finish": "No description available.", "download_verification_results_for_phone_verification": "This endpoint returns the result file to be downloaded.\n\nPass name of file to be downloaded as path param. Result file name is always in format {filename}_output.xlsx Replace {filename} with the name returned from upload file call.\n\nTo download the file with angular follow sample code here\n\nhttps://stackoverflow.com/questions/40240796/angular-2-best-approach-to-use-filesaver-js", "eventgames_for_esportapi": "Get event games for a specific E-Sports event by providing the event ID.", "get_cigar_by_id_for_cigars": "Get a Cigar by it's Database ID", "get_distance_for_great_circle_math_api": "Returns the circle math distance in miles.", "get_invite_data_for_discord_lookup": "Fetches detailed data, including hidden data of invites or vanities", "get_ios_app_for_ios_store": "This endpoint is used to fetch specific app from app Id", "get_signing_links_for_signnow": "The endpoint allows to get all existing signing links and IDs of these signing links.", "get_support_languages_for_news_content_extraction_live": "List of supported Languages.", "get_user_data_for_discord_lookup": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically", "market_get_price_chart_for_bb_finance": "Get related data to draw price chart", "rating_for_hleby6ek": "Rating of the game for the month", "read_text_for_profanity_filter": "Allows you to detect and filter out profanity / offensive form a given text. It is only available for English words. You can also censor out words in text content.", "stickers_trending_for_mojitok_sticker_store_sdk": "API that provides information on creators and stickerpacks of 16 popular stickers", "user_by_screen_name_for_twitter_v2": "Get User By Screen Name"}, "aseqs": [{"api_name": "get_invite_data_for_discord_lookup", "api_action": "\nAction: get_invite_data_for_discord_lookup\nAction Input: {\n  \"invite\": \"minecraft\"\n}", "api_reaction": null}, {"api_name": "get_user_data_for_discord_lookup", "api_action": "\nAction: get_user_data_for_discord_lookup\nAction Input: {\n  \"is_id\": \"25458687581618176\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_invite_data_for_discord_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_data_for_discord_lookup", "api_action": "\nAction: get_user_data_for_discord_lookup\nAction Input: {\n  \"user_id\": \"25458687581618176\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_invite_data_for_discord_lookup", "api_action": "\nAction: get_invite_data_for_discord_lookup\nAction Input: {\n  \"invite\": \"minecraft\"\n}", "api_reaction": null}}]}
{"URL": "31047", "query": "I'm a travel blogger and I'm writing an article about the best places to visit in New Caledonia. Can you give me a list of all the partners in New Caledonia, along with their addresses and contact information? Additionally, can you provide me with the health status of the 'Partenaires Mobilis' API?", "api_names": ["Finish", "get_all_partenaires_for_partenaires_mobilis", "partenaire_par_id_for_partenaires_mobilis", "health_for_partenaires_mobilis", "getinventory_for_swagger_petstore", "team_squad_statistics_for_soccerway_feed", "get_similar_apps_for_google_play_api", "rsi_oversold_for_barpatterns", "series_for_cricket_live_data", "get_top_coins_by_sentiment_change_for_crowdsense", "caisoregion_for_caiso", "profile_regional_settings_available_languages_for_smsapi_com", "get_trader_positions_for_binance_futures_leaderboard", "specific_giveaway_details_for_gamerpower", "search_user_for_tiktok_download_video_", "sdafdasf_for_lets", "get_imbuements_for_vampirism_life_steal_for_tibia_items", "phishing_url_detection_api_for_phishing_url_risk_api", "channel_videos_for_youtube", "historical_engagement_stats_for_chartbeat"], "api_descs": {"Finish": "No description available.", "caisoregion_for_caiso": "Gets Regional Authorities where node prices are tracked by CAISO", "channel_videos_for_youtube": "Channel Videos", "get_all_partenaires_for_partenaires_mobilis": "Récupérer tous les partenaires.", "get_imbuements_for_vampirism_life_steal_for_tibia_items": "This enpoint will get all imbuement for type Vampirism\n\nVampirism (Life steal)\nVampire Teeth \nBloody Pincers \nPiece of Dead Brain", "get_similar_apps_for_google_play_api": "Returns similar apps.", "get_top_coins_by_sentiment_change_for_crowdsense": "Retrieve real time top 10 coins by Sentiment change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Sentiment change value\n\n**Definitions:**\n- Sentiment Change: Percentage change of Democratic Sentiment in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time", "get_trader_positions_for_binance_futures_leaderboard": "Get trader open positions", "getinventory_for_swagger_petstore": "Returns a map of status codes to quantities", "health_for_partenaires_mobilis": "Donne l'état de santé de l'API", "historical_engagement_stats_for_chartbeat": "Returns engaged seconds summarized over the given timespan. You should use this call if you want to discover broad information about your data where we already did the work providing the max or min.", "partenaire_par_id_for_partenaires_mobilis": "Récupérer un partenaire par son id", "phishing_url_detection_api_for_phishing_url_risk_api": "This end point takes a  'GET' request with urll/string as a parameter and retunrs  phishing risk indicators such as :  url Redirecting risk, SubDomains, HTTPS, Domain Regulation Length,\nIframeRedirection, Age of Domain, DNS Recording, WebsiteTraffic.", "profile_regional_settings_available_languages_for_smsapi_com": " ", "rsi_oversold_for_barpatterns": "List of stocks having RSI Oversold signal.", "sdafdasf_for_lets": "adsfdasf", "search_user_for_tiktok_download_video_": "get user list by keywords", "series_for_cricket_live_data": "Lists available cricket series' to query", "specific_giveaway_details_for_gamerpower": "Get details from a specific giveaway (insert giveaway id).", "team_squad_statistics_for_soccerway_feed": "Get Team Squad statistics"}, "aseqs": [{"api_name": "get_all_partenaires_for_partenaires_mobilis", "api_action": "\nAction: get_all_partenaires_for_partenaires_mobilis\nAction Input: {}", "api_reaction": null}, {"api_name": "health_for_partenaires_mobilis", "api_action": "\nAction: health_for_partenaires_mobilis\nAction Input: {}", "api_reaction": null}, {"api_name": "partenaire_par_id_for_partenaires_mobilis", "api_action": "\nAction: partenaire_par_id_for_partenaires_mobilis\nAction Input: {\n  \"is_id\": \"1\"\n}", "api_reaction": null}, {"api_name": "partenaire_par_id_for_partenaires_mobilis", "api_action": "\nAction: partenaire_par_id_for_partenaires_mobilis\nAction Input: {\n  \"is_id\": \"2\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_partenaires_for_partenaires_mobilis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "partenaire_par_id_for_partenaires_mobilis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_partenaires_for_partenaires_mobilis", "api_action": "\nAction: get_all_partenaires_for_partenaires_mobilis\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_partenaires_for_partenaires_mobilis", "api_action": "\nAction: get_all_partenaires_for_partenaires_mobilis\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_partenaires_for_partenaires_mobilis"}}]}
{"URL": "59248", "query": "I'm a car enthusiast, and I'm curious about the manufacturing details of a Tesla Roadster. Can you fetch the manufacturing location, year, and model of the vehicle using its VIN identifier 0f7885c2af1a6ef9?", "api_names": ["Finish", "manufacturing_year_detection_for_tesla_vin_identifier", "manufacturing_location_detection_for_tesla_vin_identifier", "model_detection_for_tesla_vin_identifier", "live_matches_api_for_fantasy_cricket", "flights_get_playback_for_flight_radar", "generate_password_for_password_generator", "bmi_for_bmi_calculator_v2", "colors_for_explor_arc_s_colors_api", "get_a_specific_item_for_shoes_collections", "gethardquestion_for_leetcodeapi", "remove_item_for_catalogapi", "captcha_generator_for_captcha_generator", "list_all_coins_for_is_this_coin_a_scam", "countries_allcontries_for_africa_api_", "get_shop_information_for_taobao_tmall_product_detail"], "api_descs": {"Finish": "No description available.", "bmi_for_bmi_calculator_v2": "Calculate BMI using weight and height.", "captcha_generator_for_captcha_generator": "This is a captcha generator tool that gives you an image of 270x80 pixels and the text solution. It has different settings that allows you to configure the captcha difficulty, and even create a captcha with a custom text solution.", "colors_for_explor_arc_s_colors_api": "The Best API for Effortless Color Inspiration, Unleash Limitless Color Possibilities with The Best API", "countries_allcontries_for_africa_api_": "Returns a json of all countries in Africa. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\"", "flights_get_playback_for_flight_radar": "Get history traveling data of specific flight", "generate_password_for_password_generator": "Generate Password", "get_a_specific_item_for_shoes_collections": "This will return a specific item from the collection ..,simpily write the id of the product and you will get the product", "get_shop_information_for_taobao_tmall_product_detail": "Get shop information", "gethardquestion_for_leetcodeapi": "Get the number of hard questions solved by the user.", "list_all_coins_for_is_this_coin_a_scam": "Get a list of coins. You can search slug, name and symbol. You can perform wildcard searches", "live_matches_api_for_fantasy_cricket": "A list of cricket matches from around the world that are currently Live. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com", "manufacturing_location_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to manufacturing location.\nA few examples:\nLRW-C (Shanghai, China)\nXP7-B (Berlin, Germany)", "manufacturing_year_detection_for_tesla_vin_identifier": "Detects the manufacturing year of the respective vehicle.", "model_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to a model type", "remove_item_for_catalogapi": "Removes items from the cart."}, "aseqs": [{"api_name": "manufacturing_location_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_location_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "manufacturing_year_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_year_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "model_detection_for_tesla_vin_identifier", "api_action": "\nAction: model_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "I need to use the manufacturing_location_detection_for_tesla_vin_identifier and manufacturing_year_detection_for_tesla_vin_identifier endpoints to fetch the manufacturing location and year of manufacture for the Tesla Roadster with VIN 0f7885c2af1a6ef9. Then, I will use the model_detection_for_tesla_vin_identifier endpoint to get the model type.", "api_name": "manufacturing_location_detection_for_tesla_vin_identifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "manufacturing_year_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_year_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "model_detection_for_tesla_vin_identifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "manufacturing_location_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_location_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}}]}
{"URL": "88942", "query": "I recently visited a restaurant called Fuzi and had a fantastic experience. The staff was friendly, the food was delicious, and the ambiance was perfect. I just wanted to express my gratitude for the excellent service. Can you please generate a personalized response for this review?", "api_names": ["get_response_for_automatic_custom_response_creator", "Finish", "get_specific_fighter_for_ufc_fighters_v2", "get_trivia_fact_for_numbers", "ip2proxy_api_for_ip2proxy", "get_item_for_dungeons_and_dragon_5e", "transform_for_unicode_codepoints", "search_states_by_capital_for_us_states", "get_user_info_for_likee_downloader_download_likee_videos", "independence_per_country_for_africa_api_", "getcrops_for_agrofitdata", "word_infos_for_master_dictionary"], "api_descs": {"Finish": "No description available.", "get_item_for_dungeons_and_dragon_5e": "Returns information about the D&D item in JSON format. Only includes magic items, not equipment.", "get_response_for_automatic_custom_response_creator": "There are 3 params necessary : \n\n- First - Add a review \"avis\" (ex. \"Merci pour votre accueil, c'était parfait\")\n- Then - Add a \"business_type\" (ex. \"Restaurant\")\n- Finaly - Add a \"business_brand\" (ex. \"Fuzi\")", "get_specific_fighter_for_ufc_fighters_v2": "endpoint to get specific fighter stats\nFirstname_Lastname\nfirst letter of first name shoud be upper and same for last name\nfirstname and lastname seprated with underscore _", "get_trivia_fact_for_numbers": "Get a trivia fact about a number", "get_user_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific user on Likee.", "getcrops_for_agrofitdata": " ", "independence_per_country_for_africa_api_": "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name>", "ip2proxy_api_for_ip2proxy": "Proxy Detection API", "search_states_by_capital_for_us_states": "Retrieve all fields for states/territories matching the provided capital.  Partial and full name searches are accepted.", "transform_for_unicode_codepoints": "Transform a String, e.g. , to upper-case, NFC, NFD, …", "word_infos_for_master_dictionary": "Get word infos"}, "aseqs": [{"api_name": "get_response_for_automatic_custom_response_creator", "api_action": "\nAction: get_response_for_automatic_custom_response_creator\nAction Input: {\n  \"business_type\": \"Restaurant\",\n  \"business_brand\": \"Fuzi\",\n  \"avis\": \"Merci pour votre accueil, c'était parfait\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_response_for_automatic_custom_response_creator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_response_for_automatic_custom_response_creator", "action_input": {"business_type": "Restaurant", "business_brand": "Fuzi", "avis": "Merci pour votre accueil, c'était parfait"}}}]}
{"URL": "30371", "query": "I am planning a trip to India and I want to gather information about the current events and news in the country. Can you fetch me the latest news articles, videos, and images related to India? It would be helpful if you could provide the tags, titles, content, and sources of these news items.", "api_names": ["get_news_for_india_today_unofficial", "Finish", "get_user_highlights_tray_by_user_id_for_instagram_api_2023", "get_hebrew_month_and_date_for_enoch_calendar", "south_korea_scheduled_flights_growth_for_global_flight_data", "get_top_50_cryptocurrencies_list_for_crypto_update_live", "random_username_generator_for_unique_username_generator_by_pizza_api", "exact_url_for_best_backlink_checker_api", "get_similar_apps_for_ios_store", "hbjdsj_for_yosi"], "api_descs": {"Finish": "No description available.", "exact_url_for_best_backlink_checker_api": "Get backlinks of a specific URL.", "get_hebrew_month_and_date_for_enoch_calendar": "Get Hebrew Month, Date and holydays from supplied date string or today's date", "get_news_for_india_today_unofficial": "All Latest news from India Today Platform", "get_similar_apps_for_ios_store": "This endpoint fetches the similar apps to a given app Id", "get_top_50_cryptocurrencies_list_for_crypto_update_live": "This endpoint gives the list of the top fifty cryptocurrencies.", "get_user_highlights_tray_by_user_id_for_instagram_api_2023": "Get user's all highlight `highlight_id` from this endpoint. To get all medias of a particular highlight please use next endpoint.", "hbjdsj_for_yosi": "sfsdfs", "random_username_generator_for_unique_username_generator_by_pizza_api": "Returns a Random and unique username everytime", "south_korea_scheduled_flights_growth_for_global_flight_data": "Get weekly South Korea scheduled departing flights growth."}, "aseqs": [{"api_name": "get_news_for_india_today_unofficial", "api_action": "\nAction: get_news_for_india_today_unofficial\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_india_today_unofficial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_india_today_unofficial", "api_action": "\nAction: get_news_for_india_today_unofficial\nAction Input: {}", "api_reaction": null}}]}
{"URL": "51225", "query": "I'm planning a surprise birthday party for my friend who loves to travel. Can you fetch the current exchange rate from USD to EUR, GBP, and JPY? Furthermore, suggest other available quotes for currency exchange.", "api_names": ["exchange_for_currency_exchange", "listquotes_for_currency_exchange", "Finish", "odds_for_dafabet", "get_the_addresses_by_ip_for_location", "google_for_tutorial", "tsv_for_odam", "searchjobs_for_indeed_jobs_api", "video_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin", "module_for_berita", "hole_alle_news_beitr_ge_zu_klimawandel_for_klimawandel_live", "get_all_campany_employees_information_for_human_resources_api", "reverse_for__forward_reverse_geocoding_by_googlemap_api", "authenticated_users_data_for_geeklist", "styles_for_flaticon"], "api_descs": {"Finish": "No description available.", "authenticated_users_data_for_geeklist": "", "exchange_for_currency_exchange": "Get Currency Exchange by specifying the quotes of source (from) and destination (to), and optionally the source amount to calculate which to get the destination amount, by default the source amount will be 1.", "get_all_campany_employees_information_for_human_resources_api": "This endpoint gets all the available records in the employees table, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...", "get_the_addresses_by_ip_for_location": "Get the addresses by IP.", "google_for_tutorial": "google", "hole_alle_news_beitr_ge_zu_klimawandel_for_klimawandel_live": "Dieser Endpunkt bringt alle News-Beiträge über Klimawandel von diversen Schweizer Medien.", "listquotes_for_currency_exchange": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.", "module_for_berita": "okeee", "odds_for_dafabet": "Latest Odds for Dafabet", "reverse_for__forward_reverse_geocoding_by_googlemap_api": " ", "searchjobs_for_indeed_jobs_api": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = california (For now this API gets data for USA Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'", "styles_for_flaticon": "Method that allows you to get a paged list with information about Flaticon styles, design formats that icons or packs have. Styles are the different versions in which an icon from a given family may appear. For example, an icon may be available in lineal, color, or lineal color styles.", "tsv_for_odam": "Get the subset list of a dataset along with the metadata\n", "video_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the video in original hd quality by passing pinterest video pin address"}, "aseqs": [{"api_name": "exchange_for_currency_exchange", "api_action": "\nAction: exchange_for_currency_exchange\nAction Input: {\n  \"is_from\": \"USD\",\n  \"to\": \"EUR\"\n}", "api_reaction": null}, {"api_name": "exchange_for_currency_exchange", "api_action": "\nAction: exchange_for_currency_exchange\nAction Input: {\n  \"is_from\": \"USD\",\n  \"to\": \"GBP\"\n}", "api_reaction": null}, {"api_name": "exchange_for_currency_exchange", "api_action": "\nAction: exchange_for_currency_exchange\nAction Input: {\n  \"is_from\": \"USD\",\n  \"to\": \"JPY\"\n}", "api_reaction": null}, {"api_name": "listquotes_for_currency_exchange", "api_action": "\nAction: listquotes_for_currency_exchange\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "exchange_for_currency_exchange"}}, {"state": "generated_by_agent", "aseq": {"api_name": "listquotes_for_currency_exchange"}}, {"state": "generated_by_agent", "aseq": {"api_name": "exchange_for_currency_exchange", "api_action": "\nAction: exchange_for_currency_exchange\nAction Input: {\n  \"is_from\": \"USD\",\n  \"to\": \"JPY\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "listquotes_for_currency_exchange"}}, {"state": "generated_by_agent", "aseq": {"api_name": "exchange_for_currency_exchange", "api_action": "\nAction: exchange_for_currency_exchange\nAction Input: {\n  \"is_from\": \"USD\",\n  \"to\": \"INR\"\n}", "api_reaction": null}}]}
{"URL": "76665", "query": "I'm a journalist working on an article about population growth in developing countries. Can you provide me with the population count of Egypt, India, and Brazil? Additionally, can you give me the current world population?", "api_names": ["get_population_for_get_population", "get_country_population_for_get_population", "Finish", "dictionary_lookup_temporarily_unavailable_for_webit_language", "account_for_finhost", "search_departures_by_route_for_british_airways_flight_info", "rapid_api_of_dung_bui_end_point_for_dung_bui", "object_detection_for_real_time_lens_data", "price_for_test_v3", "leaderboards_for_live_golf_data", "links_finder_for_explorarc_s_link_finder", "view_song_for_view_song", "get_sample_userprofile_for_mocking_rock_", "health_for_numerology_api", "api_days_for_prague_stock_exchange", "footballersbyclub_for_premier_league_stats", "content_analysis_for_seo_analysis", "get_player_list_for_tank01_nfl_live_in_game_real_time_statistics_nfl"], "api_descs": {"Finish": "No description available.", "account_for_finhost": "Return the list of the balances for the client accounts", "api_days_for_prague_stock_exchange": " ", "content_analysis_for_seo_analysis": "Content Analysis endpoint", "dictionary_lookup_temporarily_unavailable_for_webit_language": "Dictionary Lookup", "footballersbyclub_for_premier_league_stats": "Get list of footballers for a given club.", "get_country_population_for_get_population": "Get country population.", "get_player_list_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "Grabs all of this season's players and their IDs.  \n\nONE CALL is all you need to retrieve every player.  No need to call multiple times to get the full list.\n\nRosters are updated multiple times per day during the season.\n\nYou mainly will use this to match a player with his playerID.\n\nThere are no parameters, just a simple call..\n\n/getNFLPlayerList", "get_population_for_get_population": "Get world population.", "get_sample_userprofile_for_mocking_rock_": "Use this API to get fake-generated user Profile sample data.\nBy default, it will generate \"en\"  locale for a single count.\nIf count query is greater than 1 it will randomize the generated profiles \nto a different locale. \nTo set a default locale pass it as the query.List of the locale you can get from locale API.\nIn case of the wrong locale is given it will return the result based on default settings as mentioned above.", "health_for_numerology_api": " ", "leaderboards_for_live_golf_data": "Fetch the most recent leaderboard for a given `tournId`, `year`,  and `roundId`. Query the `schedule` endpoint for the desired `tournId` and `year`.\n\nLeaderboards are available 1-2 days before the event begins.", "links_finder_for_explorarc_s_link_finder": "ExplorArc's Link Finder API simplifies the process of finding relevant links by returning results based on a given query. With this powerful tool, users can easily access the information they need to streamline their workflow and achieve their goals", "object_detection_for_real_time_lens_data": "Detect landmarks, places, plants, animals, products, and other objects in an image, including bounding boxes, labels / types and confidence score.", "price_for_test_v3": "Get current price of a currency.", "rapid_api_of_dung_bui_end_point_for_dung_bui": "lưu webhook call", "search_departures_by_route_for_british_airways_flight_info": "", "view_song_for_view_song": "View song"}, "aseqs": [{"api_name": "get_country_population_for_get_population", "api_action": "\nAction: get_country_population_for_get_population\nAction Input: {\n  \"country\": \"Egypt\"\n}", "api_reaction": null}, {"api_name": "get_country_population_for_get_population", "api_action": "\nAction: get_country_population_for_get_population\nAction Input: {\n  \"country\": \"India\"\n}", "api_reaction": null}, {"api_name": "get_country_population_for_get_population", "api_action": "\nAction: get_country_population_for_get_population\nAction Input: {\n  \"country\": \"Brazil\"\n}", "api_reaction": null}, {"api_name": "get_population_for_get_population", "api_action": "\nAction: get_population_for_get_population\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_country_population_for_get_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_population_for_get_population", "api_action": "\nAction: get_country_population_for_get_population\nAction Input: {\n  \"country\": \"India\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_population_for_get_population", "api_action": "\nAction: get_country_population_for_get_population\nAction Input: {\n  \"country\": \"Brazil\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_population_for_get_population", "api_action": "\nAction: get_country_population_for_get_population\nAction Input: {\n  \"country\": \"Brazil\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_population_for_get_population"}}]}
{"URL": "44094", "query": "I'm planning a surprise golf trip for my dad's birthday. Can you find golf courses near our home? We need a list of courses within a 15-mile radius, along with their zip codes and distances. It would be great if we can get the course details, such as the address, phone number, and website too.", "api_names": ["course_details_for_golf_course_finder", "get_courses_for_golf_course_finder", "Finish", "games_schedule_for_hockey_live_sk_data", "webcams_list_orderby_order_sort_for_webcams_travel", "post_likers_for_instagram_data", "get_foreign_exchange_rates_for_other_major_currencies_for_exchange_rate_provider", "getnfts_metadata_for_nfts_by_address", "me_for__onboarding_project", "statusforkeysentenceextraction_for_carbon_management", "portfolio_for_freefloatus", "football_live_for_football_live_stream_api", "get_balance_history_v2_for_chain49", "get_heightmap_from_two_geopoints_for_heightmap_from_latitude_and_longitude", "get_verify_for_checky_verify_phone_number"], "api_descs": {"Finish": "No description available.", "course_details_for_golf_course_finder": "This endpoint will return the course details from Google Places", "football_live_for_football_live_stream_api": "Live Match", "games_schedule_for_hockey_live_sk_data": "Get games list for certain league and year", "get_balance_history_v2_for_chain49": "Returns a balance history for the specified XPUB or address\n\nThe value of sentToSelf is the amount sent from the same address to the same address or within addresses of xpub.", "get_courses_for_golf_course_finder": "This endpoint will return courses within a mile radius of the passed latitude and longitude", "get_foreign_exchange_rates_for_other_major_currencies_for_exchange_rate_provider": "Get Foreign Exchange Rates for other major currencies. At the moment only GBP and USD are available. More will be added with future updates.\n\nSo as `currencyId` please **use only** `/gbp` or `/usd`.", "get_heightmap_from_two_geopoints_for_heightmap_from_latitude_and_longitude": "you provide two geopoints( latitude, longitude). Server returns image/png with heightmap within this borders.", "get_verify_for_checky_verify_phone_number": "To use this endpoint, you need to make an HTTP GET request to the API with the phone and country parameters in the query string.", "getnfts_metadata_for_nfts_by_address": "Get NFTs metadata, attributes and enclosed media.", "me_for__onboarding_project": " ", "portfolio_for_freefloatus": "Download your freefloat portfolio.", "post_likers_for_instagram_data": "Get users that liked specific post\n\n**NOTE:** Profile should be public(not private)", "statusforkeysentenceextraction_for_carbon_management": "Get results in details from the task id.", "webcams_list_orderby_order_sort_for_webcams_travel": "This is a modifier. Returns the list of webcams ordered by {order}. The optional sorting direction is given by {sort}. Required {order}."}, "aseqs": [{"api_name": "get_courses_for_golf_course_finder", "api_action": "\nAction: get_courses_for_golf_course_finder\nAction Input: {\n  \"lat\": \"37.7749\",\n  \"lng\": \"-122.4194\",\n  \"radius\": \"15\"\n}", "api_reaction": null}, {"api_name": "course_details_for_golf_course_finder", "api_action": "\nAction: course_details_for_golf_course_finder\nAction Input: {\n  \"name\": \"The Olympic Club\",\n  \"zip\": \"94102\"\n}", "api_reaction": null}, {"api_name": "course_details_for_golf_course_finder", "api_action": "\nAction: course_details_for_golf_course_finder\nAction Input: {\n  \"name\": \"Presidio Golf Course\",\n  \"zip\": \"94129\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_courses_for_golf_course_finder"}}, {"state": "generated_by_agent", "aseq": {"api_name": "course_details_for_golf_course_finder"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_courses_for_golf_course_finder", "api_action": "\nAction: get_courses_for_golf_course_finder\nAction Input: {\n  \"lat\": \"37.7749\",\n  \"lng\": \"-122.4194\",\n  \"radius\": \"15\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_courses_for_golf_course_finder"}}]}
{"URL": "11476", "query": "I want to know the real-time volume, liquidity value, and market capitalization of a cryptocurrency. Can you provide me with the current volume, liquidity value, and market capitalization in US Dollars? Additionally, I need the real-time rates of the cryptocurrency.", "api_names": ["get_realtime_rates_for_realtime_crypto_prices", "get_realtime_volume_for_realtime_crypto_prices", "Finish", "get_liquidity_value_for_realtime_crypto_prices", "market_capitalization_for_realtime_crypto_prices", "number_for_refactor_numbers_in_human_readable_form_like_1k_or_1m", "get_random_quote_for__quotes_api", "wnba_standings_for_wnba_api", "leaguemedia_for_handballapi", "fetch_email_of_a_person_for_email_finder", "get_product_reviews_in_turkey_for_amazon_turkey_data_scrapeer", "get_solicitation_for_iherb_product_data_api", "united_states_parks_mobility_for_covid_19_economic_impact", "search_req_for_hanime_python_api", "free_email_lookup_for_viewdns", "checkdisposableemail_for_whois_lookup_v4", "get_tile_json_for_mapilion_vector_and_raster_map_tiles", "artist_appears_on_for_spotify", "getlivemenustreaming_for_sportapi", "get_stream_number_of_viewers_for_gwyo_twitch"], "api_descs": {"Finish": "No description available.", "artist_appears_on_for_spotify": "Get artist appears on albums (max 50)", "checkdisposableemail_for_whois_lookup_v4": "REST API to lookup disposable email", "fetch_email_of_a_person_for_email_finder": "Get email of anyone in the internet. Best for lead generation, prospecting, and cold marketing.", "free_email_lookup_for_viewdns": "Find out if a domain name provides free email addresses. Search is performed on a custom made list of thousands of known free email hosts.", "get_liquidity_value_for_realtime_crypto_prices": "Returns Liquidity value of a coin in US Dollars", "get_product_reviews_in_turkey_for_amazon_turkey_data_scrapeer": "This endpoint can get you product reviews in amazon tr products. This method is required the product id in the amazon tr page if you don't know you can get search with my method to. And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/", "get_random_quote_for__quotes_api": " ", "get_realtime_rates_for_realtime_crypto_prices": "Returns Realtime price of a coin", "get_realtime_volume_for_realtime_crypto_prices": "Returns Realtime volume of a coin in US Dollars.", "get_solicitation_for_iherb_product_data_api": "Retrieves a download link containing all over 30,000 products, in json format in a .zip file. Remember, the protocol expires in 24 hours! Download your .zip ASAP!", "get_stream_number_of_viewers_for_gwyo_twitch": "Get Stream Number of Viewers (using username or id)\n( return an empty JSON object if not currently LIVE )", "get_tile_json_for_mapilion_vector_and_raster_map_tiles": "Returns the tile json for the give style. Currently there are three different types:\n- `v3` the OpenMapTiles compatible vector tiles\n- `hillshading-v1` Hillshading tiles Version 1\n- `hillshading-v2` Hillshading tiles Version 2", "getlivemenustreaming_for_sportapi": "GetLiveMenuStreaming api data", "leaguemedia_for_handballapi": "Get media for a handball unique tournament", "market_capitalization_for_realtime_crypto_prices": "Returns Market Capitalization of a coin in US Dollars.", "number_for_refactor_numbers_in_human_readable_form_like_1k_or_1m": "Send a number to get the refactored human-readable form of the number.\nYou can use this to show the price for your products to your e-commerce website, and many more.", "search_req_for_hanime_python_api": "Search API with Query\n\n**This request is limited, Please Refer to /search for more stuff**", "united_states_parks_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at parks.", "wnba_standings_for_wnba_api": "The endpoint provides you with the team standings for the WNBA"}, "aseqs": [{"api_name": "get_realtime_volume_for_realtime_crypto_prices", "api_action": "\nAction: get_realtime_volume_for_realtime_crypto_prices\nAction Input: {\n  \"symbol\": \"BTC\"\n}", "api_reaction": null}, {"api_name": "get_liquidity_value_for_realtime_crypto_prices", "api_action": "\nAction: get_liquidity_value_for_realtime_crypto_prices\nAction Input: {\n  \"symbol\": \"BTC\"\n}", "api_reaction": null}, {"api_name": "market_capitalization_for_realtime_crypto_prices", "api_action": "\nAction: market_capitalization_for_realtime_crypto_prices\nAction Input: {\n  \"symbol\": \"BTC\"\n}", "api_reaction": null}, {"api_name": "get_realtime_rates_for_realtime_crypto_prices", "api_action": "\nAction: get_realtime_rates_for_realtime_crypto_prices\nAction Input: {\n  \"symbol\": \"BTC\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_realtime_volume_for_realtime_crypto_prices"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_liquidity_value_for_realtime_crypto_prices", "api_action": "\nAction: get_liquidity_value_for_realtime_crypto_prices\nAction Input: {\n  \"symbol\": \"BTC\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_realtime_rates_for_realtime_crypto_prices"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_realtime_rates_for_realtime_crypto_prices"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_realtime_volume_for_realtime_crypto_prices"}}]}
{"URL": "28453", "query": "I am looking for a comprehensive list of currencies to include in my financial research report. Can you provide me with a list of all available currencies, along with their respective symbols? It would be great if the list includes both major and minor currencies.", "api_names": ["Finish", "get_list_of_currency_exchanges_copy_for_currencygenie", "get_list_of_currency_exchanges_copy_copy_for_currencygenie", "get_positions_for_body_for_astronomy", "search_by_name_for_cocktails", "all_strains_for_weed_strain", "transit_for_mymappi", "autocomplete_for_web_search", "get_quote_of_the_day_for_world_of_quotes", "shazam_songs_list_similarities_for_shazam", "statessearchinboundingbox_for_mapreflex", "search_a_food_recipe_item_100g_serving_for_food_nutrional_data"], "api_descs": {"Finish": "No description available.", "all_strains_for_weed_strain": "Provides a list of all available strains.", "autocomplete_for_web_search": "Suggest as-you-type completion.", "get_list_of_currency_exchanges_copy_copy_for_currencygenie": "Performs GET request for getting list of currencies", "get_list_of_currency_exchanges_copy_for_currencygenie": "Performs GET request for getting list of currencies", "get_positions_for_body_for_astronomy": "Returns properties of the given body for the given date range in tabular format.\n\nSupported bodies are \"sun\" ,\"moon\", \"mercury\", \"venus\", \"earth\", \"mars\", \"jupiter\", \"saturn\", \"uranus\", \"neptune\", \"pluto\"", "get_quote_of_the_day_for_world_of_quotes": "This API returns the handpicked quote of the day among 45,000+ quotes based on the highest ratings.\nYou may also get quote of the day of specific *author* or *category*.", "search_a_food_recipe_item_100g_serving_for_food_nutrional_data": "Search a food item and get all its nutritional information", "search_by_name_for_cocktails": "Search Cocktail by name", "shazam_songs_list_similarities_for_shazam": "Get similar (You may also like) songs", "statessearchinboundingbox_for_mapreflex": "Get States boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "transit_for_mymappi": "Calculates a route between an origin and a destination in public transport. It takes into consideration several configuration options in order to customize the response."}, "aseqs": [{"api_name": "get_list_of_currency_exchanges_copy_for_currencygenie", "api_action": "\nAction: get_list_of_currency_exchanges_copy_for_currencygenie\nAction Input: {}", "api_reaction": null}, {"api_name": "get_list_of_currency_exchanges_copy_copy_for_currencygenie", "api_action": "\nAction: get_list_of_currency_exchanges_copy_copy_for_currencygenie\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_currency_exchanges_copy_for_currencygenie"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_currency_exchanges_copy_for_currencygenie"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_currency_exchanges_copy_for_currencygenie"}}]}
{"URL": "12176", "query": "I'm looking for a specific dog breed with white fur. Can you provide me with a list of all dog breeds that have white fur? Also, give me the details of a single dog breed with the id 47.", "api_names": ["fur_color_for_dogbreeddb", "single_dog_breed_for_dogbreeddb", "Finish", "get_top_coins_by_mentions_change_for_crowdsense", "list_of_sources_for_energy_price_news", "flame_for_flames_love_calculator", "get_user_playlists_for_spotify_v2", "playlist_videos_for_youtube_v3_v2", "matrix_for_locationiq", "mailcheck_for_e_mail_check_invalid", "jokes_for__jokester", "market_get_international_for_fidelity_investments", "get_product_for_my_store", "highlight_items_for_instagram_scraper_2023_v2", "instagram_endpoint_copy_for_access_instagram", "params_for_ott_details", "get_airplane_details_for_travel_hacking_tool", "get_horoscope_multilingual_for_horoscopes_ai"], "api_descs": {"Finish": "No description available.", "flame_for_flames_love_calculator": "Pass both name as path parameters.", "fur_color_for_dogbreeddb": "Gives a list of all dogs with the color as provided in the parameter.", "get_airplane_details_for_travel_hacking_tool": "This endpoint returns a list of airplanes and other means of transportation to match GDS responses.", "get_horoscope_multilingual_for_horoscopes_ai": "Return horoscope information by sign, period, type and languages provided.", "get_product_for_my_store": " ", "get_top_coins_by_mentions_change_for_crowdsense": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Mentions change value\n\n**Definitions:**\n- MentionsChange: Percentage change of Mentions in the requested date vs the average of the same metric in the past 14 days.\n\n**Details:**\n- All results are in real time", "get_user_playlists_for_spotify_v2": "Fetch all public playlists of a specific user.", "highlight_items_for_instagram_scraper_2023_v2": "Highlight Items", "instagram_endpoint_copy_for_access_instagram": "Instagram Endpoint", "jokes_for__jokester": " ", "list_of_sources_for_energy_price_news": "See which regions we have news sources from.", "mailcheck_for_e_mail_check_invalid": "☑ Filter domain\n☑ Not start with a special character and must begin with a letter, \ndigit, or certain special characters like +, _, ., -.\n☑ Followed by the @ symbol to separate the username part and the domain part of the email address.\n☑ Domain part does not start or end with a dot or hyphen and only contains alphanumeric characters or dots.\n☑ Email string ends after the domain part and there are no additional characters.", "market_get_international_for_fidelity_investments": "Get international markets information", "matrix_for_locationiq": "Computes duration of the fastest route between all pairs of supplied coordinates. Returns the durations or distances or both between the coordinate pairs. Note that the distances are not the shortest distance between two coordinates, but rather the distances of the fastest routes.", "params_for_ott_details": "Get array of values that can be used as params in Advanced Search .", "playlist_videos_for_youtube_v3_v2": "Get playlist videos", "single_dog_breed_for_dogbreeddb": "Gives details of a single dog breed."}, "aseqs": [{"api_name": "fur_color_for_dogbreeddb", "api_action": "\nAction: fur_color_for_dogbreeddb\nAction Input: {\n  \"furcolor_icontains\": \"white\"\n}", "api_reaction": null}, {"api_name": "single_dog_breed_for_dogbreeddb", "api_action": "\nAction: single_dog_breed_for_dogbreeddb\nAction Input: {\n  \"is_id\": 47\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "fur_color_for_dogbreeddb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fur_color_for_dogbreeddb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fur_color_for_dogbreeddb", "api_action": "{\"furcolor_icontains\": \"white\"}", "api_reaction": null}}]}
{"URL": "87576", "query": "I need to find information about the best restaurants in New York City. Can you search for restaurants in NYC and provide me with the top 10 results? It would be great if you could include their ratings, contact details, and addresses.", "api_names": ["search_for_google_web_search", "Finish", "getroute_for_woosmap", "etablissements_d_une_entreprise_for_ridet_nc", "get_crypto_for_test_crypto_api", "getpastevents_for_azure", "video_comment_replies_for_tiktok_v3", "1_3_analyse_for_working_days", "endpoint_for_01", "agencies_get_listings_for_bayut", "transform_for_unicode_codepoints", "info_for_odam"], "api_descs": {"1_3_analyse_for_working_days": "Analyse a period (you provide a start_date and an end_date over a given calendar, we respond with the period analysis)", "Finish": "No description available.", "agencies_get_listings_for_bayut": "Get listing belonging to an agency", "endpoint_for_01": "01", "etablissements_d_une_entreprise_for_ridet_nc": "Affiche les établissement d'une entreprise en Nouvelle Calédonie.", "get_crypto_for_test_crypto_api": "Get_Crypto", "getpastevents_for_azure": "Get past Azure events.", "getroute_for_woosmap": "Get distance, duration and path (as a polyline) for a pair of origin and destination, based on the recommended route between those two points for a specified travel mode.\n", "info_for_odam": "Get information on the dataset\n", "search_for_google_web_search": "Search", "transform_for_unicode_codepoints": "Transform a String, e.g. , to upper-case, NFC, NFD, …", "video_comment_replies_for_tiktok_v3": "get video comment replies"}, "aseqs": [{"api_name": "search_for_google_web_search", "api_action": "\nAction: search_for_google_web_search\nAction Input: {\n  \"query\": \"best restaurants in New York City\",\n  \"limit\": 10\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_google_web_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_google_web_search"}}]}
{"URL": "25983", "query": "I'm working on a project that requires a random array of numbers. Can you generate a random array with 10 numbers for me? Additionally, I need a random word for a game I'm developing. Can you provide me with a random adjective?", "api_names": ["Finish", "getrandomarray_for_random_chunk_api", "getrandomword_for_random_chunk_api", "api_tracking_for_pack_send", "v1_country_for_country_by_api_ninjas", "users_for_seeding_data", "zipcode_by_city_for_geosource_api", "symbols_get_analyst_ratings_deprecated_for_seeking_alpha", "1_3_add_working_hours_for_working_days", "mrna2dna_for_dna2protein", "getordersbyemail_for_cartify", "new_people_for_watchmode"], "api_descs": {"1_3_add_working_hours_for_working_days": "Add an amount of working time to a given start date/time", "Finish": "No description available.", "api_tracking_for_pack_send": "If you support your Pack & Send Reference Number, we can provide your with some relevant information.", "getordersbyemail_for_cartify": "For a valid response, fill in the email of the user in the path parameter. This is helpful instead of looping from the userId since the users can't have or use the same email. To also verify that it is an authenticated user trying to get his/her order, fill in an authorization header that takes the token of the user.....\nFor example, \n\"Bearer <access_token>", "getrandomarray_for_random_chunk_api": "Generate a random array with numbers, words or mixed values.", "getrandomword_for_random_chunk_api": "Get random words.", "mrna2dna_for_dna2protein": "This endpoint transforms an mRNA sequence to its DNA sequence equivalent.", "new_people_for_watchmode": "Get a listing of the ids of new people added to Watchmode within the date range.", "symbols_get_analyst_ratings_deprecated_for_seeking_alpha": "Get Wall Street analyst ratings for specific symbol", "users_for_seeding_data": "Get 100 users with en_US locale and gender male", "v1_country_for_country_by_api_ninjas": "API Ninjas Country API endpoint.", "zipcode_by_city_for_geosource_api": "Retrives the zip code/codes of the city ( must be in the supported countries list [ 44 countries ])."}, "aseqs": [{"api_name": "getrandomarray_for_random_chunk_api", "api_action": "\nAction: getrandomarray_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandomword_for_random_chunk_api", "api_action": "\nAction: getrandomword_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandomarray_for_random_chunk_api", "api_action": "\nAction: getrandomarray_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandomarray_for_random_chunk_api", "api_action": "\nAction: getrandomarray_for_random_chunk_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getrandomarray_for_random_chunk_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandomword_for_random_chunk_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandomarray_for_random_chunk_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandomarray_for_random_chunk_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandomarray_for_random_chunk_api"}}]}
{"URL": "74917", "query": "I'm looking for a vegan recipe that uses specific ingredients. Can you suggest a dish from the 'List of Foods' API? Then, provide me with a detailed recipe including the ingredients, method, and an image of the final dish.", "api_names": ["detailed_food_recipe_by_id_for_the_vegan_recipes_db", "list_of_foods_for_the_vegan_recipes_db", "Finish", "teamraces_for_motorsportapi", "video_descriptions_for_youtube_classification_api", "global_players_statistics_for_ultimate_tennis", "url_for_news_sentiment", "top_ranking_for_top_nft_collections", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson", "group_invite_link_for_whin", "social_media_news_in_russian_for_onelike", "v1_verify_for_quick_email_verification", "get_user_favorite_videos_for_tiktok_video_feature_summary", "getdraftprospects_for_nhl_stats_and_live_data", "get_captcha_image_captcha_get_for_image"], "api_descs": {"Finish": "No description available.", "detailed_food_recipe_by_id_for_the_vegan_recipes_db": "Food Recipe by ID", "get_captcha_image_captcha_get_for_image": " ", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get Postal areas of specific US state in GeoJSON format", "get_user_favorite_videos_for_tiktok_video_feature_summary": "get user favorite videos list", "getdraftprospects_for_nhl_stats_and_live_data": "Be forewarned that this endpoint returns a **lot** of data and there does not appear to be a way to paginate results.", "global_players_statistics_for_ultimate_tennis": "This endpoint allows you to retrieve global statistics about tennis players. You can customize the statistic (aces, breakpoints converted, 1st serve points won...), the season (all, 2022, 2021...), or the surface(clay, hard, grass).\nYou can find the list of available options under every parameter.", "group_invite_link_for_whin": "the endpoint returns an invite link url for a group you own.", "list_of_foods_for_the_vegan_recipes_db": "This endpoint responds with a list of vegan foods that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Food Recipe by ID\" endpoint to receive the detailed recipe.", "social_media_news_in_russian_for_onelike": "Get social media news in Russian", "teamraces_for_motorsportapi": "Get races for a specific Motorsport team during a stage season.", "top_ranking_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings", "url_for_news_sentiment": "Input news URL", "v1_verify_for_quick_email_verification": "", "video_descriptions_for_youtube_classification_api": "GET Video descriptions"}, "aseqs": [{"api_name": "list_of_foods_for_the_vegan_recipes_db", "api_action": "\nAction: list_of_foods_for_the_vegan_recipes_db\nAction Input: {}", "api_reaction": null}, {"api_name": "detailed_food_recipe_by_id_for_the_vegan_recipes_db", "api_action": "\nAction: detailed_food_recipe_by_id_for_the_vegan_recipes_db\nAction Input: {\n  \"is_id\": \"1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_of_foods_for_the_vegan_recipes_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detailed_food_recipe_by_id_for_the_vegan_recipes_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "detailed_food_recipe_by_id_for_the_vegan_recipes_db"}}]}
{"URL": "40852", "query": "I am working on a webcomic site and I need to list all the episodes of a specific comic. Can you help me fetch the list of episodes for the comic with title number 2113? Also, it would be great if you could provide the episode information and photo links using the 'originals/episodes/list' and 'originals/episodes/get-info' APIs.", "api_names": ["Finish", "originals_episodes_get_info_for_webtoon", "originals_episodes_get_likes_for_webtoon", "originals_episodes_list_for_webtoon", "getsubtitlelanguages_for_ted_talks_api", "get_regions_for_geography", "geteventdetails_for_sport_odds", "properties_list_for_idealista_v2", "get_city_by_filter_for_ranked_crime_cities", "api_v1_types_for_sunnah_fasting", "build_for_odam", "capend_for_postcap", "hourlyweather_for_history", "logoutuser_for_publicapitestinginbox", "main_for_timezonedb_find_local_time_zone_by_coordinate_or_name", "single_product_for_shopify_store_scraper", "odds_for_dreambet", "list_of_deals_for_cheapshark_game_deals", "get_all_recipes_3_for_comfyfood", "fetchlocation_for_sim_based_location_tracking"], "api_descs": {"Finish": "No description available.", "api_v1_types_for_sunnah_fasting": "Get list of types", "build_for_odam": "Building a database and indexing it, allows to accelerate considerably the response times on large files\n", "capend_for_postcap": "It display for on Home", "fetchlocation_for_sim_based_location_tracking": "<p>This endpoint is for fetching location of a trip</p>\n<p><strong>Required Body Parameters</strong></p>\n\n<p><strong>Notes</strong></p>\n<ul>\n<li>Atleast one of the below three parameters should be passed</li>\n</ul>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>invoice</td>\n<td>No</td>\n<td> invoice received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>id</td>\n<td>No</td>\n<td> trip_id received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>lr_number</td>\n<td>No</td>\n<td> lr_number received in response of submit trip API</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>", "get_all_recipes_3_for_comfyfood": "return more recipes", "get_city_by_filter_for_ranked_crime_cities": "Get city by filter", "get_regions_for_geography": "Get list of regions in the world", "geteventdetails_for_sport_odds": "GetEventDetails api data", "getsubtitlelanguages_for_ted_talks_api": "Get all the TED talks subtitle languages", "hourlyweather_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (latitude and longitude)", "list_of_deals_for_cheapshark_game_deals": "Get a paged list of deals matching any number of criteria, all the filtering parameters are optional.\n\nThe deal object is what drives most of what you see on the site. They are price + metadata properties for games for a given store. All dealID’s are encoded on the server. On your website/app, you will use the redirect page to link users to a specific deal:\n\n> https://www.cheapshark.com/redirect?dealID={id}\n\n**Important Note**: The redirect page is not an API endpoint and is not designed for automated access. It is purely a way to link your end users to deals.\n\nThe deal rating property provides a quick way to compare how 'good' a deal is. It is normalized on a scale from 0 to 10.", "logoutuser_for_publicapitestinginbox": "", "main_for_timezonedb_find_local_time_zone_by_coordinate_or_name": "Return country code, GMT offset, daylight saving time, time zone name, and current timestamp.", "odds_for_dreambet": "Latest Odds for Dreambet", "originals_episodes_get_info_for_webtoon": "Get episode and photo links\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "originals_episodes_get_likes_for_webtoon": "Get likes count of a episode", "originals_episodes_list_for_webtoon": "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "properties_list_for_idealista_v2": "List properties for sale or rent in Italy, Spain, Portugal with options and filters", "single_product_for_shopify_store_scraper": "Fetch complete data of single product."}, "aseqs": [{"api_name": "originals_episodes_list_for_webtoon", "api_action": "\nAction: originals_episodes_list_for_webtoon\nAction Input: {\n  \"titleno\": 2113\n}", "api_reaction": null}, {"api_name": "originals_episodes_get_info_for_webtoon", "api_action": "\nAction: originals_episodes_get_info_for_webtoon\nAction Input: {\n  \"titleno\": 2113,\n  \"episodeno\": 1\n}", "api_reaction": null}, {"api_name": "originals_episodes_get_info_for_webtoon", "api_action": "\nAction: originals_episodes_get_info_for_webtoon\nAction Input: {\n  \"titleno\": 2113,\n  \"episodeno\": 1\n}", "api_reaction": null}, {"api_name": "originals_episodes_get_likes_for_webtoon", "api_action": "\nAction: originals_episodes_get_likes_for_webtoon\nAction Input: {\n  \"titleno\": 2113,\n  \"episodeno\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "originals_episodes_list_for_webtoon"}}, {"state": "generated_by_agent", "aseq": {"api_name": "originals_episodes_get_info_for_webtoon", "api_action": "{\"episode_id\": \"[id_from_previous_api_response]\", \"comic_title\": 2113}", "api_reaction": null}}, {"state": "json_error", "aseq": "```json\n{\n\t\"api_name\": \"originals_episodes_list_for_webtoon\",\n\t\"api_action\": \"\\nAction: originals_episodes_list_for_webtoon\\nAction Input: {\\n  \\\"titleno\\\": 2113\\n}\",\n}\n```"}, {"state": "generated_by_agent", "aseq": {"api_name": "originals_episodes_list_for_webtoon", "api_action": "\nAction: originals_episodes_list_for_webtoon\nAction Input: {\n  \"titleno\": 2113\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "originals_episodes_list_for_webtoon", "api_action": "\nAction: originals_episodes_list_for_webtoon\nAction Input: {\n  \"titleno\": 2113\n}", "api_reaction": null}}]}
{"URL": "9467", "query": "I need to find a sign hexagram associated with the 'kongzi' category. Can you provide me with the name, description, and image link for this sign hexagram?", "api_names": ["Finish", "get_categories_for_sign_hexagram", "get_sign_hexagram_for_sign_hexagram", "react_jobs_for_usa_jobs_for_it", "get_for_instagram_media_downloader_v2", "coins_get_brief_chart_for_investing_cryptocurrency_markets", "artists_get_details_for_shazam", "top_free_ipad_apps_for_app_store", "get_standings_for_league_of_legends_esports", "get_quotes_by_anime_title_for_anime_quotes_v4", "dns_for_domain_checker", "remove_profanity_for_auto_profanity_filter"], "api_descs": {"Finish": "No description available.", "artists_get_details_for_shazam": "Get detailed information of an artist", "coins_get_brief_chart_for_investing_cryptocurrency_markets": "Get brief information chart of specific cryptocurrency", "dns_for_domain_checker": "Checks the domain DNS records", "get_categories_for_sign_hexagram": "Return a list of category of sign with description and image link.", "get_for_instagram_media_downloader_v2": "lol world", "get_quotes_by_anime_title_for_anime_quotes_v4": "Get quotes by anime title", "get_sign_hexagram_for_sign_hexagram": "Return one of the sign with full info by given category.", "get_standings_for_league_of_legends_esports": "In this api method you can get all standings for tournaments. You can get tournaments id Get Tournaments From League method.", "react_jobs_for_usa_jobs_for_it": "React Jobs API", "remove_profanity_for_auto_profanity_filter": "Removes Profanity from Text", "top_free_ipad_apps_for_app_store": "Get list of the top free Ipad apps"}, "aseqs": [{"api_name": "get_categories_for_sign_hexagram", "api_action": "\nAction: get_categories_for_sign_hexagram\nAction Input: {}", "api_reaction": null}, {"api_name": "get_sign_hexagram_for_sign_hexagram", "api_action": "\nAction: get_sign_hexagram_for_sign_hexagram\nAction Input: {\n  \"category\": \"kongzi\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_sign_hexagram_for_sign_hexagram"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_sign_hexagram_for_sign_hexagram", "api_action": "\nAction: get_sign_hexagram_for_sign_hexagram\nAction Input: {\"category\": \"kongzi\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_sign_hexagram_for_sign_hexagram"}}]}
{"URL": "26733", "query": "I am writing an article about anime and I need some visually appealing images. Can you provide me with a random link to an anime image and also randomly select around 5000 images for me to choose from?", "api_names": ["5000img_for_random_anime_img", "random_img_anime_for_random_anime_img", "Finish", "get_list_of_currency_exchanges_copy_copy_for_currencygenie", "full_data_for_question_explorer", "metrics_ohlcv_pro_for_cryptocurrency_financial_data", "get_by_imdb_id_for_mdblist", "review_for_worldwide_recipes", "get_all_recipes_3_for_comfyfood", "filter_for_diease_for_east_china_news", "profile_info_for_instagram_scraper_2023_v2", "getsponsorships_for_election2020_smartable", "bestbuyproductdata_for_bestbuy_product_data_api", "year_end_billboard_200_albums_for_billboard_v2", "data_for_indonesian_national_identity_card_validator"], "api_descs": {"5000img_for_random_anime_img": "randomly selects around 5000 images", "Finish": "No description available.", "bestbuyproductdata_for_bestbuy_product_data_api": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)", "data_for_indonesian_national_identity_card_validator": "Check validation and get details of indonesian national identity card such as day, month, year, gender and location", "filter_for_diease_for_east_china_news": "Filters for all diseases in all newspaper sources", "full_data_for_question_explorer": "full data", "get_all_recipes_3_for_comfyfood": "return more recipes", "get_by_imdb_id_for_mdblist": "Returns movie or TV Show info by IMDb ID", "get_list_of_currency_exchanges_copy_copy_for_currencygenie": "Performs GET request for getting list of currencies", "getsponsorships_for_election2020_smartable": "Get sponsorships", "metrics_ohlcv_pro_for_cryptocurrency_financial_data": "Price and volume metrics for spot markets", "profile_info_for_instagram_scraper_2023_v2": "Profile Info", "random_img_anime_for_random_anime_img": "Random link", "review_for_worldwide_recipes": "Get reviews", "year_end_billboard_200_albums_for_billboard_v2": "Get the Year-End Billboard 200 Albums chart."}, "aseqs": [{"api_name": "random_img_anime_for_random_anime_img", "api_action": "\nAction: random_img_anime_for_random_anime_img\nAction Input: {}", "api_reaction": null}, {"api_name": "5000img_for_random_anime_img", "api_action": "\nAction: 5000img_for_random_anime_img\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_img_anime_for_random_anime_img"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_img_anime_for_random_anime_img", "api_action": "\nAction: random_img_anime_for_random_anime_img\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_img_anime_for_random_anime_img"}}]}
{"URL": "7758", "query": "I'm a music journalist and I want to write an article about the top songs of a specific artist. Can you suggest the top songs by Beyoncé? It would be helpful if you could provide me with the song titles, artists, and album names.", "api_names": ["Finish", "artists_get_top_songs_for_shazam", "search_for_shazam", "shazam_songs_get_details_for_shazam", "latest_earthquake_for_indonesia_latest_weather_and_earthquake", "marks_women_points_for_scoring_tables_api", "get_manga_for_mangaverse_api", "reverse_geocode_for_ghana_api", "user_login_for_zipwhip", "gettraderpositions_for_trader_wagon", "get_a_specific_quote_for_motivational_content", "body_fat_percentage_for_fitness_calculator", "latest_observations_for_foreca_weather", "getdisclosedyesterday_for_jp_funda", "blogs_for_spaceflight_news", "get_breed_information_for_dog_breeds", "24_hours_tickers_for_quantaex_market_data", "download_states_for_priceline_com_provider", "search_exchange_for_stock_cryptocurrency_forex_market_data", "get_nft_collections_for_pancakeswap_api_freemium"], "api_descs": {"24_hours_tickers_for_quantaex_market_data": "24 hours trading data", "Finish": "No description available.", "artists_get_top_songs_for_shazam": "Get top songs of an artist", "blogs_for_spaceflight_news": " ", "body_fat_percentage_for_fitness_calculator": "Knowing body fat percentage would be helpful to decide on a well-programmed fitness plan. You can use this endpoint with 7 parameters.", "download_states_for_priceline_com_provider": "Downloads a list of Satets ", "get_a_specific_quote_for_motivational_content": "This endpoint fetches a specific quote using the provided 'id'.", "get_breed_information_for_dog_breeds": "This endpoint will return information for a specific dog breed", "get_manga_for_mangaverse_api": "Get manga details \nid should be manga id", "get_nft_collections_for_pancakeswap_api_freemium": "An Endpoint to get NFT Collections on Pancakeswap", "getdisclosedyesterday_for_jp_funda": "### Return securities report data disclosed yesterday\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.　But you can obtain data instead of consolidated management indicators from non consolidated management indicators", "gettraderpositions_for_trader_wagon": "Get trader positions of a given portfolio id", "latest_earthquake_for_indonesia_latest_weather_and_earthquake": "Latest Earthquake", "latest_observations_for_foreca_weather": "Observations from nearby representative weather stations.", "marks_women_points_for_scoring_tables_api": "This retrieves the women's marks for the point value given as a parameter (0-1400).", "reverse_geocode_for_ghana_api": "This endpoint allows you to perform reverse geocoding in Ghana by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "search_exchange_for_stock_cryptocurrency_forex_market_data": "Search exchanges by query or category", "search_for_shazam": "Search for songs, artists that match input term", "shazam_songs_get_details_for_shazam": "Get mapping id information between systems to use with other endpoints.", "user_login_for_zipwhip": "Takes a username and password and returns json with the account's session key. A sessionkey lasts forever, so it is best to store the sessionkey and use it for future purposes."}, "aseqs": [{"api_name": "artists_get_top_songs_for_shazam", "api_action": "\nAction: artists_get_top_songs_for_shazam\nAction Input: {\n  \"is_id\": \"6512\"\n}", "api_reaction": null}, {"api_name": "search_for_shazam", "api_action": "\nAction: search_for_shazam\nAction Input: {\n  \"term\": \"Beyoncé\"\n}", "api_reaction": null}, {"api_name": "shazam_songs_get_details_for_shazam", "api_action": "\nAction: shazam_songs_get_details_for_shazam\nAction Input: {\n  \"is_id\": \"53537154\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "artists_get_top_songs_for_shazam"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_songs_to_details_for_shazam", "api_action": "\nAction: artist_songs_to_details_for_shazam\nAction Input: {\n  \"artist_id\": \"6512\",\n  \"num_songs\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "artists_get_top_songs_for_shazam"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artists_get_top_songs_for_shazam", "api_action": "\nAction: artists_get_top_songs_for_shazam\nAction Input: {\n  \"artist_id\": \"6512\"\n}", "api_reaction": null}}]}
{"URL": "72438", "query": "Could you please fetch news articles from China and India? I'm particularly interested in news related to technology and general topics. It would be helpful if you could provide a concise summary for each article.", "api_names": ["available_regions_for_ai_news_global", "get_news_for_ai_news_global", "Finish", "nftsearch_for_nft_explorer", "sticker_translate_for_giphy", "songkick_festivals_for_theclique", "webhook_getwebhookconfiguration_for_landr_mastering_v1", "google_place_details_for_value_serp", "channel_videos_for_youtube_v3_v2", "get_major_commodities_by_price_for_global_stock_market_api_data", "cities_by_state_for_geosource_api", "search_business_locations_for_local_rank_tracker", "twitch_for_check_username", "ev_for_ev", "getphonedetails_for_cellphones", "search_by_mbs_or_oib_for_croatia_company_data", "south_korea_scheduled_flights_level_for_global_flight_data", "playlist_details_for_youtube"], "api_descs": {"Finish": "No description available.", "available_regions_for_ai_news_global": "Get all available regions.", "channel_videos_for_youtube_v3_v2": "Get channel videos", "cities_by_state_for_geosource_api": "Retrives a list of  cities of the state.", "ev_for_ev": "get data, place parameter page to paginate list by 1000 object. ex.: *?page=2*", "get_major_commodities_by_price_for_global_stock_market_api_data": "World financial market to get major commodities with respect to price", "get_news_for_ai_news_global": "Get News by region.", "getphonedetails_for_cellphones": "Get all phone specifications & photos by phone id, get the phone id from the endpoint GetPhonesByBrandId", "google_place_details_for_value_serp": "The Google Place Details Parameters are applicable when making a request with search_type=place_details to retrieve place details for a Place. The Place is specified in the data_id parameter, data_id values are returned from search_type=places Places requests.\n\nIf the data_id is not available you may also request a place_details request using a data_cid (a standardised Google Place identifier you may already have access to). However, data_id is the recommended identifier to use.", "nftsearch_for_nft_explorer": "Get NFTs that match a given metadata search in all widely used networks", "playlist_details_for_youtube": "Playlist Details", "search_business_locations_for_local_rank_tracker": "Returns a list of found Google My Business locations based on search query, including Service Area Businesses (SAB).", "search_by_mbs_or_oib_for_croatia_company_data": "Search the Croatian company register by either MBS or OIB company identifiers (osobni identifikacijski broj)", "songkick_festivals_for_theclique": "festivals info", "south_korea_scheduled_flights_level_for_global_flight_data": "Get weekly South Korea scheduled departing flights level.", "sticker_translate_for_giphy": "Using the same alogirithm as the GIF translate endpoint, the sticker translate endpoint turns words into stickers.", "twitch_for_check_username": "Check username on Twitch", "webhook_getwebhookconfiguration_for_landr_mastering_v1": "Get the webhook configuration.\n            "}, "aseqs": [{"api_name": "available_regions_for_ai_news_global", "api_action": "\nAction: available_regions_for_ai_news_global\nAction Input: {}", "api_reaction": null}, {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"cn\",\n  \"version\": \"v1\"\n}", "api_reaction": null}, {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"in\",\n  \"version\": \"v1\"\n}", "api_reaction": null}, {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"au\",\n  \"version\": \"v1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"in\",\n  \"version\": \"v1\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_news_for_ai_news_global\",\n\t\"api_action\": \"\\nAction: get_news_for_ai_news_global\\nAction Input: {\\n  \\\"sources\\\": [\\n    {\\n      \\\"language\\\": \\\"zh-CN\\\",\\n      \\\"name\\\": \\\"techcrunch\\\",\\n      \\\"country\\\": \\\"CN\\\"\\n    },\\n    {\\n      \\\"language\\\": \\\"en-IN\\\",\\n      \\\"name\\\": \\\"cnn\\\",\\n      \\\"country\\\": \\\"IN\\\"\\n    }\\n  ],\\n  \\\"category\\\": [\\n    \"technology\"\\n  ],\\n  \\\"sort_by\\\": \"popularity\",\\n  \\\"version\\\": \"v1\"\\n}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_ai_news_global", "api_action": "\nAction: get_news_for_ai_news_global\nAction Input: {\n  \"region\": \"cn\",\n  \"category\": \"technology,general\",\n  \"version\": \"v1\"\n}", "api_reaction": null}}]}
{"URL": "64234", "query": "My family and I enjoy playing Wordle together, but we're stuck on today's puzzle. Can you provide us with the solution? It would also be great to have access to all the historical solutions to learn from. Thank you!", "api_names": ["all_solutions_for_wordle_answers_solutions", "today_for_wordle_answers_solutions", "Finish", "daily_schedule_for_hockey_datafeeds_by_rolling_insights", "get_album_tracks_for_spotify_data_api", "getprimarychannel_for_ishan", "query_for_city_boundary_by_name_for_de_boundaries_io", "api_information_for_movie_showtimes", "get_all_jokes_in_a_single_category_for_the_dozen_the_yo_mamsa_roast_api", "list_of_deals_for_cheapshark_game_deals", "getdirectdebitinitiationinstructionsummary_for_transaction", "user_s_videos_for_tiktok_api"], "api_descs": {"Finish": "No description available.", "all_solutions_for_wordle_answers_solutions": "Calling this endpoint you will get all the historical solutions of the Wordle game", "api_information_for_movie_showtimes": "Get the sessions for the specified movie (IMDb id)", "daily_schedule_for_hockey_datafeeds_by_rolling_insights": "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET.", "get_album_tracks_for_spotify_data_api": "Get album tracks by album ID", "get_all_jokes_in_a_single_category_for_the_dozen_the_yo_mamsa_roast_api": "This endpoint will return all joke  in a catagory.", "getdirectdebitinitiationinstructionsummary_for_transaction": "Get all direct debit initiation instructions allows to retrieve all direct debit initiation instruction. If the number of results exceeds the default limit, the response will be paginated. The operation allows filtering the results based on the creation from date and creation to date. The result is filtered based on \"creation_date_time\". The endpoint will return an empty array when no resource is found.\n", "getprimarychannel_for_ishan": " ", "list_of_deals_for_cheapshark_game_deals": "Get a paged list of deals matching any number of criteria, all the filtering parameters are optional.\n\nThe deal object is what drives most of what you see on the site. They are price + metadata properties for games for a given store. All dealID’s are encoded on the server. On your website/app, you will use the redirect page to link users to a specific deal:\n\n> https://www.cheapshark.com/redirect?dealID={id}\n\n**Important Note**: The redirect page is not an API endpoint and is not designed for automated access. It is purely a way to link your end users to deals.\n\nThe deal rating property provides a quick way to compare how 'good' a deal is. It is normalized on a scale from 0 to 10.", "query_for_city_boundary_by_name_for_de_boundaries_io": "Query for City Boundary by City Name", "today_for_wordle_answers_solutions": "Calling this endpoint you will todays solution.", "user_s_videos_for_tiktok_api": "Return User Videos"}, "aseqs": [{"api_name": "today_for_wordle_answers_solutions", "api_action": "\nAction: today_for_wordle_answers_solutions\nAction Input: {}", "api_reaction": null}, {"api_name": "all_solutions_for_wordle_answers_solutions", "api_action": "\nAction: all_solutions_for_wordle_answers_solutions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "today_for_wordle_answers_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_solutions_for_wordle_answers_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "today_for_wordle_answers_solutions"}}]}
{"URL": "40694", "query": "I'm conducting research on roulette wheel outcomes and need historical data. Can you give me the history of the last 20 roulette spins, including all the game details? Furthermore, I'm interested in the statistics of the wheel results for the past 3 hours, such as the count, percentage, last occurred time, and hot frequency percentage.", "api_names": ["Finish", "history_for_immersiverouletteapi", "statistics_for_immersiverouletteapi", "get_products_for__demo_project", "petfoods_for_petfood", "get_a_product_offers_for_amazon_scrapper_v4", "nhl_summary_for_nhl_api", "random_for_helper_function", "v1_airquality_for_air_quality_demo_1", "get_country_by_fifa_code_for_geography", "years_for_car_data", "vip_featured_predictions_for_today_football_prediction", "total_live_giveaways_worth_estimation_in_dollars_for_gamerpower", "stock_insider_holders_stock_for_mboum_finance", "fetch_full_metadata_for_phone_validator_api"], "api_descs": {"Finish": "No description available.", "fetch_full_metadata_for_phone_validator_api": "This endpoint will return the full metadata of the number included on the request.", "get_a_product_offers_for_amazon_scrapper_v4": "GET a product offers", "get_country_by_fifa_code_for_geography": "Get Country by FIFA assigned Country Code", "get_products_for__demo_project": " ", "history_for_immersiverouletteapi": "the last 20 spins histories includes all details about the game", "nhl_summary_for_nhl_api": "With this endpoint you can get the game summary data for a specified game.", "petfoods_for_petfood": "petfoods", "random_for_helper_function": "Generate Random String with custom length\nBASIC: 20 \nPRO: 30\nULTRA: 70\nMEGA: 150", "statistics_for_immersiverouletteapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect", "stock_insider_holders_stock_for_mboum_finance": "Get stock insider holders' information.", "total_live_giveaways_worth_estimation_in_dollars_for_gamerpower": "You can also use the \"platform\" and \"type\" parameters to get more specific results, eg: /api/worth?platform=steam?type=game", "v1_airquality_for_air_quality_demo_1": "", "vip_featured_predictions_for_today_football_prediction": "Returns **Daily  Featured Prediction** results which have higher probability and better odds than others. More efficient selections.\n\nCompare its performance from **stats/performance** endpoint.", "years_for_car_data": "get a list of supported years"}, "aseqs": [{"api_name": "history_for_immersiverouletteapi", "api_action": "\nAction: history_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_immersiverouletteapi", "api_action": "\nAction: history_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "history_for_immersiverouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {\n  \"duration\": \"3\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_immersiverouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_immersiverouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_immersiverouletteapi"}}]}
{"URL": "34499", "query": "I am a flower enthusiast and I want to learn more about different types of flowers. Can you provide me with a list of flowers along with their scientific names? Furthermore, I would like to see an image of each flower. Please ensure that the image API call includes the necessary parameters to show the image of each flower in the list.", "api_names": ["get_by_id_for_flowers", "Finish", "show_image_for_flowers", "list_for_flowers", "jobs_search_for_indeed", "get_base_information_for_al_quran", "premium_history_for_betigolo_tips", "get_categories_for__onboarding_project_v3", "videogames_news_search_for_videogames_news", "get_lyrics_for_youtube_music_api_detailed_", "romance_for_disney_worlds", "categories_v2_list_root_deprecated_for_sephora", "get_products_in_category_for__demo_project_v13", "basketball_live_matches_for_sports_live_scores", "rest_api_deep_image_result_jobhash_for_deep_image", "manage_alerts_for_cheapshark_game_deals"], "api_descs": {"Finish": "No description available.", "basketball_live_matches_for_sports_live_scores": "Returns Basketball Live Matches with betting odds", "categories_v2_list_root_deprecated_for_sephora": "List top root categories", "get_base_information_for_al_quran": "Responds with JSON including some properties of the Quran. *(deprecated)*", "get_by_id_for_flowers": "Get all info about the flower", "get_categories_for__onboarding_project_v3": " ", "get_lyrics_for_youtube_music_api_detailed_": "Returns lyrics of a song or video.", "get_products_in_category_for__demo_project_v13": " ", "jobs_search_for_indeed": "Search jobs with by query and location.", "list_for_flowers": "List all flowers", "manage_alerts_for_cheapshark_game_deals": "Send an email containing a link to manage your alerts.", "premium_history_for_betigolo_tips": "Historical result of Premium Tips in past 30 days", "rest_api_deep_image_result_jobhash_for_deep_image": " ", "romance_for_disney_worlds": "get all full movies for romance", "show_image_for_flowers": "Show image of the flower", "videogames_news_search_for_videogames_news": "Returns search results for current and historic news from top sources"}, "aseqs": [{"api_name": "list_for_flowers", "api_action": "\nAction: list_for_flowers\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_id_for_flowers", "api_action": "\nAction: get_by_id_for_flowers\nAction Input: {\n  \"is_id\": \"6383808bff3dde72b0fc34ab\"\n}", "api_reaction": null}, {"api_name": "show_image_for_flowers", "api_action": "\nAction: show_image_for_flowers\nAction Input: {\n  \"is_id\": \"6383808bff3dde72b0fc34ab\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_for_flowers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for__demo_project_v13", "api_action": "{\"category\": \"flowers\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for__demo_project_v13", "api_action": "\nAction: get_products_in_category_for__demo_project_v13\nAction Input: {\n  \"category\": \"flower\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for__demo_project_v13", "api_action": "\nAction: get_products_in_category_for__demo_project_v13\nAction Input: {\n  \"category\": \"flowers\"\n}", "api_reaction": null}}]}
{"URL": "69730", "query": "I am organizing a football tournament and I need to know the matches scheduled for today in the competition with ID 23943. Can you provide me with the details of all the matches? Additionally, I would like to get information about all the competitions.", "api_names": ["get_all_competitions_information_for_match_api", "get_all_match_play_today_by_competitions_for_match_api", "Finish", "get_songs_with_all_metadata_and_stats_play_counts_for_indie_songs_distrokid_unsigned", "get_all_champion_base_stats_for_league_of_legends_stats", "logoutuser_for_privatepublicapi", "social_media_news_in_russian_for_onelike", "url_for_news_sentiment", "random_song_song_s_album_information_out_of_artist_for_halsey_lyric_snippets", "regular_dice_rolls_for_dice_roll_simulator", "leaguedetails_for_handballapi", "jobs_search_for_indeed", "billboard_200_for_billboard_api", "categories_for_basketapi", "news_list_for_flixster"], "api_descs": {"Finish": "No description available.", "billboard_200_for_billboard_api": "Provide the BILLBOARD 200 chart information", "categories_for_basketapi": "Get the list of available basketball categories.", "get_all_champion_base_stats_for_league_of_legends_stats": "This endpoint returns all base stats from every champion in the game.", "get_all_competitions_information_for_match_api": "Retrieve all competitions information", "get_all_match_play_today_by_competitions_for_match_api": "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id.", "get_songs_with_all_metadata_and_stats_play_counts_for_indie_songs_distrokid_unsigned": "Get all tracks with full metadata including recent Spotify play counts.\n\nAlso Apple song URL, Spotify song URL, Composer name, ISRC, Label, Release date, Genres, Apple IDs, Spotify IDs are included.", "jobs_search_for_indeed": "Search jobs with by query and location.", "leaguedetails_for_handballapi": "Get details of a handball unique tournament by ID", "logoutuser_for_privatepublicapi": "Logs out current logged in user session", "news_list_for_flixster": "List latest news", "random_song_song_s_album_information_out_of_artist_for_halsey_lyric_snippets": "Returns album information and random song information", "regular_dice_rolls_for_dice_roll_simulator": "Roll any number of regular dice any number of times.", "social_media_news_in_russian_for_onelike": "Get social media news in Russian", "url_for_news_sentiment": "Input news URL"}, "aseqs": [{"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "\nAction: get_all_match_play_today_by_competitions_for_match_api\nAction Input: {\n  \"competition_id\": 23943\n}", "api_reaction": null}, {"api_name": "get_all_competitions_information_for_match_api", "api_action": "\nAction: get_all_competitions_information_for_match_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_match_play_today_by_competitions_for_match_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_competitions_information_for_match_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_match_play_today_by_competitions_for_match_api", "api_action": "{\"competition_id\": 23943}", "api_reaction": null}}]}
{"URL": "3065", "query": "Retrieve the annual balance sheet for the stock symbol AAPL:NASDAQ. Also, provide the currency exchange rate from USD to EUR.", "api_names": ["company_balance_sheet_for_real_time_finance_data", "currency_exchange_rate_for_real_time_finance_data", "Finish", "reviews_for_axesso_otto_data_service", "latest_news_for_philippine_news", "webhooks_for_searchhook", "top_backlinks_for_best_backlink_checker_api", "getalltech_for_runs_tech", "s_ytd_for_s_ytd", "mentions_tags_notifications_for_scraptik", "get_matches_on_a_specific_date_for_fifa_2022_schedule_and_stats", "user_highlight_detail_for_instagram_v13", "tweet_detail_conversation_for_twitter_v2", "hashtag_info_for_100_success_instagram_api_scalable_robust", "search_tweet_for_twitter_pack_v2"], "api_descs": {"Finish": "No description available.", "company_balance_sheet_for_real_time_finance_data": "Get public company's **quarterly** or **annual** balance sheet. Supports the *stock* type only.", "currency_exchange_rate_for_real_time_finance_data": "Get currency / forex or crypto exchange rates.", "get_matches_on_a_specific_date_for_fifa_2022_schedule_and_stats": "Parameters:\n1.  date - Date to query the matches\n2. utc_offset - Change the utc offset of the date to suit your timezone.\n\nReturns the matches on the specified date and timezone.\nWorks for both historical, live, and future dates.\nMatch data consists of date, time, home team, away team, and many more, see the example response for an example.", "getalltech_for_runs_tech": "returns a list of all of the technology that runs.tech can find", "hashtag_info_for_100_success_instagram_api_scalable_robust": "Get results of hashtag search by keyword", "latest_news_for_philippine_news": "Get the latest news and stories from different sources", "mentions_tags_notifications_for_scraptik": "Show \"Mentions & Tags \" account notifications.", "reviews_for_axesso_otto_data_service": "Query product reviews.", "s_ytd_for_s_ytd": "Download vids", "search_tweet_for_twitter_pack_v2": "search tweet by query", "top_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "tweet_detail_conversation_for_twitter_v2": "Get Tweet Detail & Conversation", "user_highlight_detail_for_instagram_v13": "Get instagram user highlight detail by highlight id.", "webhooks_for_searchhook": "Returns list of saved queries with associated  webhooks."}, "aseqs": [{"api_name": "company_balance_sheet_for_real_time_finance_data", "api_action": "\nAction: company_balance_sheet_for_real_time_finance_data\nAction Input: {\n  \"period\": \"ANNUAL\",\n  \"symbol\": \"AAPL:NASDAQ\"\n}", "api_reaction": null}, {"api_name": "currency_exchange_rate_for_real_time_finance_data", "api_action": "\nAction: currency_exchange_rate_for_real_time_finance_data\nAction Input: {\n  \"from_symbol\": \"USD\",\n  \"to_symbol\": \"EUR\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "company_balance_sheet_for_real_time_finance_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "currency_exchange_rate_for_real_time_finance_data", "api_action": "\nAction: currency_exchange_rate_for_real_time_finance_data\nAction Input: {\n  \"from\": \"USD\",\n  \"to\": \"EUR\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "company_balance_sheet_for_real_time_finance_data", "api_action": "\nAction: company_balance_sheet_for_real_time_finance_data\nAction Input: {\n  \"period\": \"ANNUAL\",\n  \"symbol\": \"AAPL:NASDAQ\"\n}", "api_reaction": null}}]}
{"URL": "42048", "query": "I want to create a diverse group of characters for my video game. Can you generate fake users with different genders and provide their names, locations, and profile pictures? It would be helpful if I could also get their contact information.", "api_names": ["get_user_by_gender_for_fake_users", "user_for_fake_users", "Finish", "continent_by_id_for_referential", "get_all_lgbtq_news_for_lgbtq_world_news_live", "search_for_youtube_v3_lite", "ticker_changes_for_global_ethereum_price_index_gex", "geteventtypes_for_sport_odds", "popular_events_for_os_sports_perform", "template_download_for_xlsx_template", "getbyid_for_house_plants", "getproductbycategory_for_cartify"], "api_descs": {"Finish": "No description available.", "continent_by_id_for_referential": "Lookup a continent by id", "get_all_lgbtq_news_for_lgbtq_world_news_live": "This endpoint will return back all news about LGBTQ+ from all over the world.", "get_user_by_gender_for_fake_users": "get user by gender", "getbyid_for_house_plants": "Returns a single plants data within an object. Information for each plant returned contains (but not limited to) the list below\n\n- Latin name \n- Img \n- Id\n- Family \n- Other names \n- Common name \n- Common name (fr.) \n- Description \n- Categories \n- Origin \n- Climat \n- Temperature max\n- Temperature min\n- Zone \n- Growth \n- Light ideal \n- Light tolered \n- Watering \n- Insects \n- Disease \n- Appeal \n- Color of leaf \n- Color of blooms \n- Blooming season \n- Perfume \n- Avaibility \n- Pot diameter\n- Height at purchase\n- Width at purchase\n- Height potential\n- Width potential\n- Available sizes\n- Bearing \n- Clump\n- Pruning \n- Style \n- Use", "geteventtypes_for_sport_odds": "GetEventTypes data api", "getproductbycategory_for_cartify": "Do you want to search for a product by category?\nUse the category of the product in the path parameter.\n\nFor example,\nAre you looking for Phones? Use Phones in your path parameter", "popular_events_for_os_sports_perform": "Get today's popular events", "search_for_youtube_v3_lite": "Get search results.\nQuota cost is 1.", "template_download_for_xlsx_template": "Download template file from Cloud storage", "ticker_changes_for_global_ethereum_price_index_gex": "Returns ticker values and price changes for specified market and symbol.", "user_for_fake_users": "get one user"}, "aseqs": [{"api_name": "user_for_fake_users", "api_action": "\nAction: user_for_fake_users\nAction Input: {}", "api_reaction": null}, {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"male\"\n}", "api_reaction": null}, {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"male\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"female\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"female\"\n}", "api_reaction": null}}]}
{"URL": "61466", "query": "Provide the current gas price for the Ethereum blockchain. Additionally, estimate the gas required for a transaction to the Binance address 0xab5801a7d398351b8be11c439e05c5b3259aec9b. Can you also generate a new crypto wallet for the Polygon blockchain?", "api_names": ["generate_wallet_for_webit_blockchain", "gas_price_for_webit_blockchain", "estimate_gas_for_webit_blockchain", "Finish", "health_for_localization_services", "weatherendpoin_for_havo", "reverse_geocode_for_uganda_api", "2_year_historical_daily_prices_for_stock_prices", "get_token_balance_for_pancakeswap_api_freemium", "company_description_for_stock_analysis", "getsponsorships_for_azure", "license_plate_lookup_for_license_plate_lookup", "movie_parental_guides_for_list_movies_v3", "gdp_growth_for_u_s_economic_indicators", "stock_getoverview_for_stock_api", "nhl_team_players_for_nhl_api", "flights_detail_for_flight_radar", "get_author_information_by_id_for_hapi_books", "categories_for_moka_news", "get_version_for_people_photo_background_removal"], "api_descs": {"2_year_historical_daily_prices_for_stock_prices": "2 Year historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "categories_for_moka_news": "get the list of Moka News categories ( important if you want later to get data related to a specific category).", "company_description_for_stock_analysis": "Get company description.", "estimate_gas_for_webit_blockchain": "Estimate gas required by send transaction and smart contract method call on multiple blockchains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.", "flights_detail_for_flight_radar": "Get detailed information of specific flight", "gas_price_for_webit_blockchain": "Get current gas price with a single API call on multiple chains.\n\nSupported blockchains:\n- `ethereum`;\n- `binance`;\n- `polygon`;\n- `ethereum-ropsten`;\n- `ethereum-rinkeby`;\n- `ethereum-goerli`;\n- `ethereum-kovan`;\n- `binance-testnet`;\n- `polygon-mumbai`.", "gdp_growth_for_u_s_economic_indicators": "Get quarterly percent change of Gross Domestic Product annualized.", "generate_wallet_for_webit_blockchain": "Generate a new crypto wallet.\n\nSupported blockchains are Ethereum, Polygon, Binance mainnets and Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.", "get_author_information_by_id_for_hapi_books": "Get a large variety of information of an Author such as the name, a brief biography, the list of books, and more.", "get_token_balance_for_pancakeswap_api_freemium": "An endpoint to get Token Balance", "get_version_for_people_photo_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getsponsorships_for_azure": "Get Azure sponsorships", "health_for_localization_services": "Checks health status of services", "license_plate_lookup_for_license_plate_lookup": "License Plate Lookup", "movie_parental_guides_for_list_movies_v3": "Returns all the parental guide ratings for the specified movie", "nhl_team_players_for_nhl_api": "This API endpoint will return the team roster information for a specific NHL team.", "reverse_geocode_for_uganda_api": "This endpoint allows you to perform reverse geocoding in Uganda by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "stock_getoverview_for_stock_api": "Get the Stock Overview information.", "weatherendpoin_for_havo": "ob havo"}, "aseqs": [{"api_name": "gas_price_for_webit_blockchain", "api_action": "\nAction: gas_price_for_webit_blockchain\nAction Input: {}", "api_reaction": null}, {"api_name": "estimate_gas_for_webit_blockchain", "api_action": "\nAction: estimate_gas_for_webit_blockchain\nAction Input: {\n  \"to\": \"0xab5801a7d398351b8be11c439e05c5b3259aec9b\",\n  \"chain\": \"binance\"\n}", "api_reaction": null}, {"api_name": "generate_wallet_for_webit_blockchain", "api_action": "\nAction: generate_wallet_for_webit_blockchain\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gas_price_for_webit_blockchain"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gas_price_for_webit_blockchain", "api_action": "{\"supported_chain\":\"ethereum\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "gas_price_for_webit_blockchain"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gas_price_for_webit_blockchain"}}]}
{"URL": "7495", "query": "I am planning a visit to Viva City and I would like to know the details of the menu at venue 5a76c927bb5d660001e09731. Can you provide me with the menu category, price, availability, rules, items in set, and other important information? Please use the language 'zh-hans' for the menu details.", "api_names": ["menudetails_for_viva_city_documentation", "Finish", "brands_list_for_zappos", "social_media_news_in_japanese_for_onelike", "summarize_for_article_extractor_and_summarizer", "get_case_by_id_for_yardillo", "getstatsbymonth_for_trinidad_covid_19_statistics", "historical_rates_for_metals_prices_rates_api", "currencies_for_currency_converter_v3", "agent_s_active_listings_for_zillow_v2"], "api_descs": {"Finish": "No description available.", "agent_s_active_listings_for_zillow_v2": "Get agent's active listings by zuid", "brands_list_for_zappos": "List all brands from Zappos", "currencies_for_currency_converter_v3": "Endpoint to retrieve all supported currencies.", "get_case_by_id_for_yardillo": "Get the case payload by its Id", "getstatsbymonth_for_trinidad_covid_19_statistics": "This endpoint fetches Trinidad & Tobago Covid 19 statistics by month. For a valid response, the months are input as \"01\" or \"12\" and not the actual month name such as \"January\" or \"December\".", "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.", "menudetails_for_viva_city_documentation": "Get menu details using KV (need resync to get latest data) and filter dynamic multi language data based on query params.", "social_media_news_in_japanese_for_onelike": "Get social media news in Japanese", "summarize_for_article_extractor_and_summarizer": "Summarizes the article after extracting it from the specified url."}, "aseqs": [{"api_name": "menudetails_for_viva_city_documentation", "api_action": "\nAction: menudetails_for_viva_city_documentation\nAction Input: {\n  \"is_id\": \"5a76c927bb5d660001e09731\",\n  \"lang\": \"zh-hans\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "menudetails_for_viva_city_documentation"}}, {"state": "generated_by_agent", "aseq": {"api_name": "menudetails_for_viva_city_documentation", "api_action": "\nAction: menudetails_for_viva_city_documentation\nAction Input: {\n  \"is_id\": \"5a76c927bb5d660001e09731\",\n  \"lang\": \"zh-hans\"\n}", "api_reaction": null}}]}
{"URL": "79915", "query": "I'm planning a TED talk marathon with my friends and we want to explore talks on different topics. Can you recommend talks on topics like psychology, art, and motivation? It would be great if the talks have subtitles available in English.", "api_names": ["gettopics_for_ted_talks_api", "gettalks_for_ted_talks_api", "Finish", "games_list_for_mmo_games", "list_of_sports_for_pinnacle_odds", "test_endpoint_for_test_v18", "number_of_schools_in_indonesian_city_district_kabupaten_kota_for_indonesia_school_list", "stock_insider_holders_stock_for_mboum_finance", "detailed_cocktail_recipe_by_id_for_the_cocktail_db", "matchh2hduel_for_basketapi", "watchlists_index_for_stocktwits", "get_user_orders_for__onboarding_project", "specified_album_information_from_artist_for_halsey_lyric_snippets", "generate_a_random_sentence_for_random_word_generator", "youtoosound_for_youtoosound"], "api_descs": {"Finish": "No description available.", "detailed_cocktail_recipe_by_id_for_the_cocktail_db": "Get Cocktail by ID", "games_list_for_mmo_games": "Live games list.", "generate_a_random_sentence_for_random_word_generator": "Generate a random sentence", "get_user_orders_for__onboarding_project": " ", "gettalks_for_ted_talks_api": "Get info about specific talks based on the provided parameters", "gettopics_for_ted_talks_api": "Get all the TED talks topics", "list_of_sports_for_pinnacle_odds": "Get a list of sports", "matchh2hduel_for_basketapi": "Get head-to-head duel information for a specific basketball match.", "number_of_schools_in_indonesian_city_district_kabupaten_kota_for_indonesia_school_list": "Number of Schools in Indonesian City / District (Kabupaten / Kota), also return kode_wilayah that used in other endpoints (See Example response).", "specified_album_information_from_artist_for_halsey_lyric_snippets": "This endpoint retrieves the specified album by the specified artist and returns it in the response.", "stock_insider_holders_stock_for_mboum_finance": "Get stock insider holders' information.", "test_endpoint_for_test_v18": "test endpoint", "watchlists_index_for_stocktwits": "Returns a list of private watch lists for the authenticating user.", "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome"}, "aseqs": [{"api_name": "gettopics_for_ted_talks_api", "api_action": "\nAction: gettopics_for_ted_talks_api\nAction Input: {}", "api_reaction": null}, {"api_name": "gettalks_for_ted_talks_api", "api_action": "\nAction: gettalks_for_ted_talks_api\nAction Input: {}", "api_reaction": null}, {"api_name": "gettalks_for_ted_talks_api", "api_action": "\nAction: gettalks_for_ted_talks_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gettopics_for_ted_talks_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gettopics_for_ted_talks_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gettopics_for_ted_talks_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gettopics_for_ted_talks_api"}}]}
{"URL": "23206", "query": "I'm curious to know if there are any media posts related to the hashtag '#foodie'. Can you fetch the media for me?", "api_names": ["hashtag_by_name_for_instagram_api", "Finish", "user_followers_for_twitter_data", "timezone_by_area_for_world_time", "shares_float_for_holistic_finance_stock_data", "leaguehometeamevents_for_baseballapi", "random_boy_group_for_k_pop", "cllax_for_cllax"], "api_descs": {"Finish": "No description available.", "cllax_for_cllax": "Cllax - Advice, resources and tools for starting a small business. Information on getting finance, business planning, hiring, IT, marketing and much more.", "hashtag_by_name_for_instagram_api": "Gets a Hashtag by Name", "leaguehometeamevents_for_baseballapi": "This endpoint retrieves the last 5 matches for a specific league in a given season for home events.", "random_boy_group_for_k_pop": "Get random boy-group", "shares_float_for_holistic_finance_stock_data": "Provides the amount of current shares float.", "timezone_by_area_for_world_time": "Request a list of valid locations for an area", "user_followers_for_twitter_data": "user-followers"}, "aseqs": [{"api_name": "hashtag_by_name_for_instagram_api", "api_action": "\nAction: hashtag_by_name_for_instagram_api\nAction Input: {\n  \"name\": \"foodie\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "hashtag_by_name_for_instagram_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "hashtag_by_name_for_instagram_api"}}]}
{"URL": "47482", "query": "I want to print labels using the 'Print your own labels and stickers' tool. Can you provide me with a list of label templates for the Letter paper format? I am specifically looking for Avery brand labels that are square in shape and have a height of 2 inches.", "api_names": ["label_templates_for_print_your_own_labels_and_stickers", "Finish", "peers_for_marketci_analytics", "products_v3_list_similarities_for_asos", "country_for_tapzulecountry", "copy_of_endpoint_google_for_tutorial", "getbycordsadv_for_electric_vehicle_charging_stations", "qrcode_for_qrcode_generator_base64"], "api_descs": {"Finish": "No description available.", "copy_of_endpoint_google_for_tutorial": "google", "country_for_tapzulecountry": "country fetch", "getbycordsadv_for_electric_vehicle_charging_stations": "Uses Latitude & Longitude to get near by electric charging stations", "label_templates_for_print_your_own_labels_and_stickers": "List of label templates filtered by one or more of the following parameters:\npaper format\ntemplate brand\nexact label size\napproximate label size\nlabel shape", "peers_for_marketci_analytics": "Get List of Company Peers", "products_v3_list_similarities_for_asos": "List similar products by product id", "qrcode_for_qrcode_generator_base64": "qrcode to genrate base64 qrcode image"}, "aseqs": [{"api_name": "label_templates_for_print_your_own_labels_and_stickers", "api_action": "\nAction: label_templates_for_print_your_own_labels_and_stickers\nAction Input: {\n  \"format\": \"Letter\",\n  \"brand\": \"Avery\",\n  \"shape\": \"square\",\n  \"height\": \"2\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "label_templates_for_print_your_own_labels_and_stickers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "label_templates_for_print_your_own_labels_and_stickers"}}]}
{"URL": "72036", "query": "I am interested in adopting a pet and would like to know the details of a particular pet. Can you retrieve the information for the pet with ID 98765? Additionally, could you provide the inventory status to check if the pet is available for adoption? Your assistance in this matter would be greatly appreciated.", "api_names": ["getpetbyid_for_privatepublicapi", "getinventory_for_privatepublicapi", "Finish", "activities_transfers_for_rich_nft_api_metadata", "count_for_suivi_colis", "phone_for_phone_validation", "ip_reputation_for_ip_reputation_geoip_and_detect_vpn", "allreviewers_for_acopaer", "player_latest_media_for_sofascores", "getdivision_for_mathaas", "get_the_forecast_for_cloud_cast", "jsrf_characters_for_jet_set_radio_api", "solve_for_captcha", "flame_for_flames_love_calculator", "get_user_feed_for_instagram_v7"], "api_descs": {"Finish": "No description available.", "activities_transfers_for_rich_nft_api_metadata": "**Get collection activity**\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**order_by** \n-time_at\ntime_at\nusd_value\n-usd_value", "allreviewers_for_acopaer": "# Description GET All Reviewers\r\n\r\nThis url is to get all Reviewers created is type `GET`, the url is `BASE_URL/reviewers` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "count_for_suivi_colis": "Compte le nombre d'étapes de l'historique, pratique pour limiter la consommation réseau ou les ressources sur un IoT. Permet par exemple de poller un état de manière optimale.", "flame_for_flames_love_calculator": "Pass both name as path parameters.", "get_the_forecast_for_cloud_cast": "Get the forecast for the current city", "get_user_feed_for_instagram_v7": "Get the feed of a user", "getdivision_for_mathaas": "Divides two numbers (dividend and divisor) provided as parameters", "getinventory_for_privatepublicapi": "Returns a map of status codes to quantities", "getpetbyid_for_privatepublicapi": "Returns a single pet", "ip_reputation_for_ip_reputation_geoip_and_detect_vpn": "Fetch detailed information about the specified IPv4 or IPv6 address. Get the country by geolocation, ISP or hosting provider. You will also find out if this IP address has a history of abuse or malicious activity.", "jsrf_characters_for_jet_set_radio_api": "Returns a list of all JSRF Characters", "phone_for_phone_validation": "Get info on phone number", "player_latest_media_for_sofascores": "Get player's latest media by player_id", "solve_for_captcha": "Solve a Captcha given an image URL"}, "aseqs": [{"api_name": "getpetbyid_for_privatepublicapi", "api_action": "\nAction: getpetbyid_for_privatepublicapi\nAction Input: {\n  \"petid\": 98765\n}", "api_reaction": null}, {"api_name": "getinventory_for_privatepublicapi", "api_action": "\nAction: getinventory_for_privatepublicapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_privatepublicapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_privatepublicapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_privatepublicapi", "api_action": "\nAction: getpetbyid_for_privatepublicapi\nAction Input: {\n  \"petid\": 98765\n}", "api_reaction": null}}]}
{"URL": "50735", "query": "I'm a journalist researching demographic data for a news article. Please provide me with the summary profile, median household income, and average adjusted gross income for ZIP code 90210. Additionally, include the racial majority and public school racial majority.", "api_names": ["get_zip_code_detail_for_zip_code_master", "get_zip_code_summary_for_zip_code_master", "Finish", "google_search_for_value_serp", "search_screen_name_for_twitter_pack_v2", "staffs_list_by_competition_for_transfermarket", "list_a_project_s_jobs_for_textking_translation", "city_details_for_city_and_state_search_api", "get_top_searches_for_gearbest", "getservertime_for_bybit_leaderboard", "get_sku_promotion_for_taobao_tmall_product_detail", "fundid_for_mutual_fund_nav", "get_asn_by_country_for_asn_details", "questionnaire_sentino_for_sentino", "fetch_by_type_and_region_for_magical_taske"], "api_descs": {"Finish": "No description available.", "city_details_for_city_and_state_search_api": "This endpoint allows you to retrieve detailed information about a specific city by ID", "fetch_by_type_and_region_for_magical_taske": "You can make a request finer by combining region and type. This endpoint will return the records requested. You have to provide a limit of the number of records you want.", "fundid_for_mutual_fund_nav": "current Nav", "get_asn_by_country_for_asn_details": "Enter country code (ISO 2 letter code such as US, GB etc) to get all the ASNs associated with that country.", "get_sku_promotion_for_taobao_tmall_product_detail": "Get SKU, Price, Propperties Image", "get_top_searches_for_gearbest": " ", "get_zip_code_detail_for_zip_code_master": "Retrieve a detailed profile and demographic data for the provided ZIP code.", "get_zip_code_summary_for_zip_code_master": "Retrieve a summary profile for the provided ZIP code.", "getservertime_for_bybit_leaderboard": "Returns server time.", "google_search_for_value_serp": "The Google Search Parameters are applicable when making a request to the Search API to retrieve Google search results for a given search term. The search term is specified in the q parameter. The location your search is run from is determined by the location parameter, which can be populated with a full_name value from the Locations API.", "list_a_project_s_jobs_for_textking_translation": "Returns a collection of jobs for a project.", "questionnaire_sentino_for_sentino": "They are sampled from original items so the first 30 are best for Big5, first 60 are best for BFAS and 90 for NEO.  The more items scored the better.", "search_screen_name_for_twitter_pack_v2": " ", "staffs_list_by_competition_for_transfermarket": "List staffs relating to specific competition or league"}, "aseqs": [{"api_name": "get_zip_code_summary_for_zip_code_master", "api_action": "\nAction: get_zip_code_summary_for_zip_code_master\nAction Input: {\n  \"zip\": \"90210\"\n}", "api_reaction": null}, {"api_name": "get_zip_code_detail_for_zip_code_master", "api_action": "\nAction: get_zip_code_detail_for_zip_code_master\nAction Input: {\n  \"zip\": \"90210\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_summary_for_zip_code_master"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_detail_for_zip_code_master"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_summary_for_zip_code_master"}}]}
{"URL": "37535", "query": "I want to explore the history of pageant contests and need a comprehensive list of all the pageant contests that have taken place. Can you provide me with a list of all the pageant contests? Furthermore, I'm interested in knowing the details of the winner of the contest that took place in 1987.", "api_names": ["search_for_pageantdb", "all_pageant_contests_for_pageantdb", "single_contest_for_pageantdb", "Finish", "sport_for_google_news", "low_hold_bets_for_sportsbook_odds", "get_cruises_location_for_tripadvisor", "is_a_business_for_bulk_whatsapp_validator", "matches_for_betano", "get_all_facts_about_cat_for_cat_facts", "searchairports_for_world_airports_directory", "latest_in_chosen_currency_for_live_metal_prices", "list_available_currencies_for_exchangeratespro", "ttt_for_hellorold", "scraper_for_web_scraping_api", "qr_code_generator_for_qr_code_api_generator", "view_a_personalized_greeting_for_pe_demo", "convertir_cantidad_a_letra_moneda_mxn_espa_ol_for_numberstoletters", "get_stream_tags_for_twitch_api", "decode_vin_for_car_utils"], "api_descs": {"Finish": "No description available.", "all_pageant_contests_for_pageantdb": "Get a list of all pageant contests.", "convertir_cantidad_a_letra_moneda_mxn_espa_ol_for_numberstoletters": "Convierte de cantidad a letras pesos Mexicano EndPoind Español\nSe agrego el parametro **moneda**, los tipos aceptados para este parametro son los siguientes (PESOS, DOLARES, EUROS), TODO EN MAYUSCULAS.", "decode_vin_for_car_utils": "Decode VIN, get valuable information for the car you are interested in.", "get_all_facts_about_cat_for_cat_facts": "This endpoint returns all available fact about cats in our database.", "get_cruises_location_for_tripadvisor": "-", "get_stream_tags_for_twitch_api": "Returns stream tags.", "is_a_business_for_bulk_whatsapp_validator": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.", "latest_in_chosen_currency_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, Platinum and 160+ currency rates based on selected Currency", "list_available_currencies_for_exchangeratespro": "Returns a list of all currencies that are available through the API.", "low_hold_bets_for_sportsbook_odds": "This returns the bets that have low hold bets. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.", "matches_for_betano": "Latest matches by Betano.", "qr_code_generator_for_qr_code_api_generator": "This endppint https://qrcodegenerator-47jz.onrender.com/qrcode/download/{text} will take input from user , you can replace {text} with anything and it will generate response as QR code Image.", "scraper_for_web_scraping_api": "The \"Scraper\" endpoint of the Web Scraping API is responsible for extracting data from websites while simulating a real browser. With its Headless Browser capability, the endpoint enables users to bypass restrictions, solve captchas, and scrape dynamic websites with ease. The endpoint can be used for high-level web scraping tasks, making it an ideal choice for businesses, data analysts, and developers who need to extract data from websites quickly and efficiently. By providing the endpoint with the necessary input parameters, users can initiate the scraping process and receive the extracted data in the desired format. This endpoint is a powerful tool for anyone who needs to extract data from websites and can be easily integrated into existing workflows and systems.", "search_for_pageantdb": "Search pageant contest by keyword.", "searchairports_for_world_airports_directory": "Primary API to  get all the matching airports based on the keyword you pass in the params. API runs best matching algorithm to find most relevant airports matching with either city, city code or airport code and so on.\n**BONUS**: It returns complete `Airport Name, Lat, Long, Timezone, Country, Country Code, Airport Code and City Code.`\n\nNOTE: This API is case insensitive.\n\nFor e.g.\n1. When user trying with city `/v1/airports/dubai`\n2. When user trying with Airport Code `/v1/airports/dxb`\n3. When user trying with city code `/v1/airports/omdb`", "single_contest_for_pageantdb": "Get details of a single pageant contest by its ID.", "sport_for_google_news": "This endpoint is used to get sport news from Google News.", "ttt_for_hellorold": "tt", "view_a_personalized_greeting_for_pe_demo": "View a personalized greeting for the specified or guest user."}, "aseqs": [{"api_name": "all_pageant_contests_for_pageantdb", "api_action": "\nAction: all_pageant_contests_for_pageantdb\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_pageantdb", "api_action": "\nAction: search_for_pageantdb\nAction Input: {\n  \"search\": \"1987\"\n}", "api_reaction": null}, {"api_name": "search_for_pageantdb", "api_action": "\nAction: search_for_pageantdb\nAction Input: {\n  \"search\": \"Miss Universe 1987\"\n}", "api_reaction": null}, {"api_name": "single_contest_for_pageantdb", "api_action": "\nAction: single_contest_for_pageantdb\nAction Input: {\n  \"is_id\": 36\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "all_pageant_contests_for_pageantdb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_pageant_contests_for_pageantdb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_pageant_contests_for_pageantdb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_pageant_contests_for_pageantdb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_pageant_contests_for_pageantdb"}}]}
{"URL": "12733", "query": "I need to convert 1200 meters to kilometers and get a detailed answer for the conversion. Can you provide me with the measurement details and the result? Also, give me a list of all available measurements with unit details.", "api_names": ["convert_from_one_unit_to_another_for_measurement_unit_converter", "measurements_detailed_for_measurement_unit_converter", "measurements_for_measurement_unit_converter", "Finish", "get_version_for_people_photo_background_removal", "get_mp3_for_youtube_mp3_download", "measure_distance_for_uganda_api", "team_roster_for_national_football_players", "game_odds_flat_schedule_for_sportsbook_odds", "lista_de_provincias_for_organizaci_n_territorial_de_espa_a", "channel_for_youtube_search_and_download", "course_details_for_golf_course_finder", "listofattributeandvalueoptions_for_sandbox_ecombr_com_01_products", "get_sign_prediction_for_today_by_name_for_zodiacapi", "tirto_search_for_indonesia_news", "transfers_list_for_transfermarket"], "api_descs": {"Finish": "No description available.", "channel_for_youtube_search_and_download": "Channel videos", "convert_from_one_unit_to_another_for_measurement_unit_converter": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.", "course_details_for_golf_course_finder": "This endpoint will return the course details from Google Places", "game_odds_flat_schedule_for_sportsbook_odds": "This is a flat schedule of lines where the keys of \nthe dictionary are tags that fully describe the bet. \nThere is a program in the documentation called \ndecode_hash.py that will break these hashes down into \ndescriptions.\n\nIf the bet has both an over and an under then the \nvf_odds_pct will represent the implied win percent of \nthis bet from the vig free line.\n\nStructure:\n{\n  \"bet_hash Eg. PP^0^(Jaylen Brown)^25.5*O\": {\n    \"Site1 Eg. Fanduel\": {\n      \"site\": \"Fanduel\",\n      \"line\": 25.5,\n      \"dec_odds\": 1.87,\n      \"full_hash\": \"20001x20004@2023-02-09T00_PP^0^(Jaylen Brown)^25.5*O_FanDuel\",\n      \"am_odds\": \"-115\",\n      \"open\": true,\n      \"vf_odds_pct\": 0.50411\n    }\n  }\n}", "get_mp3_for_youtube_mp3_download": "Convert to MP3 at the default bit rate.", "get_sign_prediction_for_today_by_name_for_zodiacapi": "Get sign prediction for today  by name", "get_version_for_people_photo_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "lista_de_provincias_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las provincias de España", "listofattributeandvalueoptions_for_sandbox_ecombr_com_01_products": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html", "measure_distance_for_uganda_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Nansana to Kampala**", "measurements_detailed_for_measurement_unit_converter": "GET a list of all the available measurements with unit details.", "measurements_for_measurement_unit_converter": "GET enum array of all types of measurement", "team_roster_for_national_football_players": "Returns roster of football team. Use team abbreviation when specifying team (i.e. BUF, NE, MIA, etc.). See /teams to get team names and abbreviations", "tirto_search_for_indonesia_news": "search tirto news data", "transfers_list_for_transfermarket": "List transfers information along with player info, and market value"}, "aseqs": [{"api_name": "measurements_detailed_for_measurement_unit_converter", "api_action": "\nAction: measurements_detailed_for_measurement_unit_converter\nAction Input: {}", "api_reaction": null}, {"api_name": "convert_from_one_unit_to_another_for_measurement_unit_converter", "api_action": "\nAction: convert_from_one_unit_to_another_for_measurement_unit_converter\nAction Input: {\n  \"measure\": \"length\",\n  \"value\": 1200,\n  \"is_from\": \"m\",\n  \"to\": \"km\"\n}", "api_reaction": null}, {"api_name": "measurements_for_measurement_unit_converter", "api_action": "\nAction: measurements_for_measurement_unit_converter\nAction Input: {}", "api_reaction": null}, {"api_name": "measurements_detailed_for_measurement_unit_converter", "api_action": "\nAction: measurements_detailed_for_measurement_unit_converter\nAction Input: {}", "api_reaction": null}, {"api_name": "measurements_detailed_for_measurement_unit_converter", "api_action": "\nAction: measurements_detailed_for_measurement_unit_converter\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "convert_from_one_unit_to_another_for_measurement_unit_converter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_from_one_unit_to_another_for_measurement_unit_converter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "measurements_detailed_for_measurement_unit_converter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "measurements_detailed_for_measurement_unit_converter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "measurements_for_measurement_unit_converter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_from_one_unit_to_another_for_measurement_unit_converter", "api_action": "\nAction: convert_from_one_unit_to_another_for_measurement_unit_converter\nAction Input: {\n  \"measure\": \"length\",\n  \"value\": 1200,\n  \"is_from\": \"m\",\n  \"to\": \"km\"\n}", "api_reaction": null}}]}
{"URL": "32086", "query": "My company needs to check if a specific storage exists. The storage name is 'my_storage'. Can you verify its existence? Additionally, we want to know if a file named 'invoice.pdf' exists in this storage. Please check and provide the result.", "api_names": ["Finish", "storageexists_for_aspose_cells_cloud", "objectexists_for_aspose_cells_cloud", "trip_details_for_flixbus", "crime_categories_for_data_police_uk", "getbyuniqueid_for_rest_country_api", "single_name_medium_for_nameforge", "check_for_ssl_snitch", "get_all_restaurants_by_chain_state_for_fast_food_restaurants_usa_top_50_chains", "title_trailers_for_netflix_data", "get_news_from_single_source_for_covid_news_v2", "is_mobile_for_phone_validator_api", "bet365_result_for_betsapi", "get_all_biden_articles_for_pac_api", "location_for_g_search"], "api_descs": {"Finish": "No description available.", "bet365_result_for_betsapi": "to view bet365 event result", "check_for_ssl_snitch": "Takes a domain name and returns SSL information.  Optionally, the extend property can be set for additional information.", "crime_categories_for_data_police_uk": "Returns a list of valid categories for a given data set date.", "get_all_biden_articles_for_pac_api": "This end point will return all articles from each major newspaper for Biden", "get_all_restaurants_by_chain_state_for_fast_food_restaurants_usa_top_50_chains": "**10 results per request. Use page number for Pagination.**", "get_news_from_single_source_for_covid_news_v2": "Get news related to Covid 19 news from a single source which are WHO, CNN, the guardian, etc", "getbyuniqueid_for_rest_country_api": "Returns a single pet", "is_mobile_for_phone_validator_api": "Returns `true` or `false` depending on whether the number is a mobile line or not.", "location_for_g_search": "The Location API lets you search for supported Google search locations. You can pass the `location_name` returned by the Location API as the `location_name` parameter and set the `location_parameters_auto` value to true in a Search API query to retrieve search results localized to that location.", "objectexists_for_aspose_cells_cloud": " ", "single_name_medium_for_nameforge": "Create single name.\nMax query length is 50 characters.", "storageexists_for_aspose_cells_cloud": " ", "title_trailers_for_netflix_data": "title-trailers", "trip_details_for_flixbus": "Get a trip details by trip uid"}, "aseqs": [{"api_name": "storageexists_for_aspose_cells_cloud", "api_action": "\nAction: storageexists_for_aspose_cells_cloud\nAction Input: {\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}, {"api_name": "objectexists_for_aspose_cells_cloud", "api_action": "\nAction: objectexists_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"/invoice.pdf\",\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}, {"api_name": "objectexists_for_aspose_cells_cloud", "api_action": "\nAction: objectexists_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"/invoice.pdf\",\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}, {"api_name": "objectexists_for_aspose_cells_cloud", "api_action": "\nAction: objectexists_for_aspose_cells_cloud\nAction Input: {\n  \"path\": \"/invoice.pdf\",\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_aspose_cells_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_aspose_cells_cloud", "api_action": "{\"storagename\": \"my_storage\", \"filename\": \"invoice.pdf\"}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_aspose_cells_cloud", "api_action": "\nAction: storageexists_for_aspose_cells_cloud\nAction Input: {\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_aspose_cells_cloud", "api_action": "\nAction: storageexists_for_aspose_cells_cloud\nAction Input: {\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_aspose_cells_cloud", "api_action": "\nAction: storageexists_for_aspose_cells_cloud\nAction Input: {\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}}]}
{"URL": "57564", "query": "I'm a manga collector and I'm looking for rare titles. Can you fetch a list of manga with genres like Historical, Martial Arts, and Seinen? Also, provide me with the details and images for each manga.", "api_names": ["Finish", "fetch_latest_for_mangaverse_api", "fetch_manga_for_mangaverse_api", "search_manga_for_mangaverse_api", "group_get_for_zipwhip", "categories_for_cricketapi2", "get_call_for_philippines_voter_card_ocr", "hashtag_info_for_instagram_api_v2", "roll_for_diceforge", "webhooks_for_searchhook", "facilities_lookup_for_tunisia_api", "filter_group_giveaways_for_gamerpower", "flights_list_most_tracked_for_flight_radar", "indexes_intraday_for_quotient", "detect_language_for_quick_language_detector", "view_ip_address_for_pe_demo", "get_all_teas_for_teas", "lqv_for_lqv68", "get_for_cloudways_v2", "get_states_by_fips_for_us_states"], "api_descs": {"Finish": "No description available.", "categories_for_cricketapi2": "Get a list of all cricket categories.", "detect_language_for_quick_language_detector": "Feed this API a few sentences and have it determine what language it is with a confidence score", "facilities_lookup_for_tunisia_api": "This endpoint allows you to get facilities in Tunisia like hospital, bank, college, etc. by providing optional query parameters for facility type, province and city. It returns a list of facilities that match the query parameters.", "fetch_latest_for_mangaverse_api": "This will get the latest of the updated manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy", "fetch_manga_for_mangaverse_api": "This will get the list of manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy", "filter_group_giveaways_for_gamerpower": "Filter and group platforms and giveaway types to get personalized results.", "flights_list_most_tracked_for_flight_radar": "Return the most tracked flights around the world", "get_all_teas_for_teas": "get all type of teas", "get_call_for_philippines_voter_card_ocr": "Used to fetch api result using the request id received in responses.", "get_for_cloudways_v2": "Response Class (Status 200)", "get_states_by_fips_for_us_states": "Retrieve all fields for states matching the provided FIPS code(s).  Multiple FIPS codes can be provided separated by commas.", "group_get_for_zipwhip": "Retreive details about an existing group. This call can be used to review the members of the group.", "hashtag_info_for_instagram_api_v2": "Get all information about a specific hashtag on Instagram", "indexes_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "lqv_for_lqv68": "get whois", "roll_for_diceforge": "Rolls a set of dice and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nsides (integer): A list of integers representing the number of sides for each die.\ncount (integer): A list of integers representing the number of times to roll each die. Defaults to 1 if not provided.\nmodifier (integer): A list of integers representing the modifier to apply to the total of each die roll.\nadvantage (boolean): If set to true, rolls each die twice and takes the higher result.\ndisadvantage (boolean): If set to true, rolls each die twice and takes the lower result.", "search_manga_for_mangaverse_api": "Fetch manga base on the text, text will be include from title and sub title", "view_ip_address_for_pe_demo": "View the IP address of the client in JSON format.", "webhooks_for_searchhook": "Returns list of saved queries with associated  webhooks."}, "aseqs": [{"api_name": "fetch_manga_for_mangaverse_api", "api_action": "\nAction: fetch_manga_for_mangaverse_api\nAction Input: {}", "api_reaction": null}, {"api_name": "search_manga_for_mangaverse_api", "api_action": "\nAction: search_manga_for_mangaverse_api\nAction Input: {}", "api_reaction": null}, {"api_name": "fetch_latest_for_mangaverse_api", "api_action": "\nAction: fetch_latest_for_mangaverse_api\nAction Input: {}", "api_reaction": null}, {"api_name": "fetch_latest_for_mangaverse_api", "api_action": "\nAction: fetch_latest_for_mangaverse_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_manga_for_mangaverse_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_manga_for_mangaverse_api", "api_action": "\nAction: search_manga_for_mangaverse_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_manga_for_mangaverse_api", "api_action": "\nAction: search_manga_for_mangaverse_api\nAction Input: {\"genres\": \"Historical,Martial Arts,Seinen\", \"page\": 1}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_manga_for_mangaverse_api", "api_action": "\nAction: search_manga_for_mangaverse_api\nAction Input: {\"genres\": \"Historical,Martial Arts,Seinen\", \"page\": 1}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_manga_for_mangaverse_api", "api_action": "\nAction: search_manga_for_mangaverse_api\nAction Input: {\"genres\": \"Historical,Martial Arts,Seinen\", \"page\": 1}", "api_reaction": null}}]}
{"URL": "45460", "query": "My family is interested in investing in stocks. Can you provide us with the stock details, including the name, ticker symbol, market capitalization, sector, and industry? Additionally, show us the summary of key financial metrics, such as the price-to-earnings ratio, dividend yield, and earnings per share. Finally, give us the historical data for the past year, including the open, high, low, close, and trading volume.", "api_names": ["Finish", "2_stockdetails_for_stockyapiexchange", "5_history_for_stockyapiexchange", "3_summary_for_stockyapiexchange", "departures_for_irail", "search_quotes_for_semantic_quotes", "team_stats_for_nba_team_stats", "the_universal_cmms_api_for_makini_v2", "tunein_for_tunein", "radio_for_deezer", "getrandommovie_for_random_chunk_api", "qr_code_image_for_variable_size_qr_code_api", "about_for_judge0_extra_ce", "repeat_send_message_for_discord_webhook_api", "schools_list_for_realty_in_au", "proxy_for_proxy", "matches_for_bildbet", "get_user_following_list_for_tiktok_video_feature_summary", "get_movies_by_year_for_imdb_api", "uuidv5_generator_for_uuid_generator"], "api_descs": {"2_stockdetails_for_stockyapiexchange": "Stockdetails: This feature provides detailed information about a specific stock, including its name, ticker symbol, market capitalization, sector, industry, and other key financial metrics such as price-to-earnings ratio (P/E ratio), dividend yield, and earnings per share (EPS)", "3_summary_for_stockyapiexchange": "Summary: This feature gives a quick overview of the performance of a stock, including its current price, percentage change, and trading volume. It also provides a summary of the key financial metrics and news related to the stock", "5_history_for_stockyapiexchange": "This feature provides historical data for a stock, including its open, high, low, close, and trading volume for each day. Users can access data for different time periods, such as daily, weekly, monthly, or yearly.", "Finish": "No description available.", "about_for_judge0_extra_ce": "Get general information.", "departures_for_irail": "Departures of trains in Belgium", "get_movies_by_year_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required", "get_user_following_list_for_tiktok_video_feature_summary": "get user following list", "getrandommovie_for_random_chunk_api": "Returns random movies from over 1000 movie list.", "matches_for_bildbet": "Latest Matches for Bildbet", "proxy_for_proxy": "Proxy your request anywhere.", "qr_code_image_for_variable_size_qr_code_api": "this end point takes a 'GET' request with url / string and an size / integer as parameters and returns a QR Code image of the desired size.", "radio_for_deezer": "A radio object", "repeat_send_message_for_discord_webhook_api": "Enter your webhook URL, enter how many times to send the message, and then specify the message to send. Max 10 messages.", "schools_list_for_realty_in_au": "List schools around a GEO location", "search_quotes_for_semantic_quotes": "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity.", "team_stats_for_nba_team_stats": "Provides team stats for the current league year. Optionally, supply a `leagueYear` or `team` parameter to get results for those options.", "the_universal_cmms_api_for_makini_v2": "The universal\nCMMS API", "tunein_for_tunein": "Radio", "uuidv5_generator_for_uuid_generator": "UUIDv5 generator"}, "aseqs": [{"api_name": "2_stockdetails_for_stockyapiexchange", "api_action": "\nAction: 2_stockdetails_for_stockyapiexchange\nAction Input: {}", "api_reaction": null}, {"api_name": "3_summary_for_stockyapiexchange", "api_action": "\nAction: 3_summary_for_stockyapiexchange\nAction Input: {}", "api_reaction": null}, {"api_name": "5_history_for_stockyapiexchange", "api_action": "\nAction: 5_history_for_stockyapiexchange\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "The user wants stock details, summary of financial metrics, and historical data. I will start by fetching the detailed information for a specific stock using 2_stockdetails_for_stockyapiexchange API.", "api_name": "2_stockdetails_for_stockyapiexchange"}}, {"state": "generated_by_agent", "aseq": {"api_name": "3_summary_for_stockyapiexchange", "api_action": "\nAction: 3_summary_for_stockyapiexchange\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "5_history_for_stockyapiexchange", "api_action": "\nAction: 5_history_for_stockyapiexchange\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "2_stockdetails_for_stockyapiexchange"}}]}
{"URL": "81015", "query": "My company is interested in India's current affairs. Can you fetch the latest news from the India Today platform? Additionally, I need the tag, title, content, and href for each news article. Please provide the information in a structured format.", "api_names": ["get_news_for_india_today_unofficial", "Finish", "get_pricing_for_sms77io", "searchjobs_for_indeed_jobs_api_finland", "data_tournaments_all_for_sports_odds_betapi", "get_amazon_search_results_for_abiola_amazon_data_scraper", "driver_s_quotes_for_f1_drivers_quotes", "message_send_for_zipwhip", "define_for_wordnet_search", "getvideo_for_heywatch_video_encoding"], "api_descs": {"Finish": "No description available.", "data_tournaments_all_for_sports_odds_betapi": "Data Tournaments All Sports & All Countries", "define_for_wordnet_search": "Defines the word", "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.", "get_amazon_search_results_for_abiola_amazon_data_scraper": "This endpoint allows you to search any amazon product description by typing the name of the product.", "get_news_for_india_today_unofficial": "All Latest news from India Today Platform", "get_pricing_for_sms77io": "Retrieves pricing information for a single country or all.", "getvideo_for_heywatch_video_encoding": "Get Information about a specific video", "message_send_for_zipwhip": "Sends a message from the logged in user's phone number.", "searchjobs_for_indeed_jobs_api_finland": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = Helsinki (For now this API gets data for Finland Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'"}, "aseqs": [{"api_name": "get_news_for_india_today_unofficial", "api_action": "\nAction: get_news_for_india_today_unofficial\nAction Input: {}", "api_reaction": null}, {"api_name": "get_news_for_india_today_unofficial", "api_action": "\nAction: get_news_for_india_today_unofficial\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_india_today_unofficial"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_india_today_unofficial", "api_action": "{\"field_limit\": 50, \"filter_by_tag\": true, \"fields\": [\"title\", \"content\", \"href\"]}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_news_for_india_today_unofficial\",\n\t\"api_action\": \"\\nAction: get_news_for_india_today_unofficial\\nAction Input: {}\",\n}"}]}
{"URL": "56992", "query": "Please fetch the discipline records of student 2. I am interested in the date, stage, incidence, and description of each discipline entry. Additionally, can you provide the attendance records of student 2 and retrieve the date, stage, extraprogramatic activities, nonattendance, justification, and comments for each entry?", "api_names": ["inasistencias_2_for_colegiosantaana", "disciplina_2_for_colegiosantaana", "Finish", "api_business_card_fromat_for_business_card_maker", "pack_for_flaticon", "get_chapter_details_by_id_for_bhagavad_gita_v3", "generate_historys_for_xlsx_template", "billboard_200_for_billboard_v2", "get_latest_article_list_for_malaysia_kini", "ideas_list_for_trading_view", "get_a_specific_game_for_free_nba", "get_a_specific_task_record_for_odesk_apis"], "api_descs": {"Finish": "No description available.", "api_business_card_fromat_for_business_card_maker": "Get Business Card.", "billboard_200_for_billboard_v2": "Get the Billboard 200 chart.", "disciplina_2_for_colegiosantaana": "Disciplina alumno 2", "generate_historys_for_xlsx_template": "Generated files history", "get_a_specific_game_for_free_nba": "This endpoint retrieves a specific game", "get_a_specific_task_record_for_odesk_apis": "return details on a specific oTask or set of oTasks, this format can be used within a company (:companyid), team (:teamid) or user (:userid)", "get_chapter_details_by_id_for_bhagavad_gita_v3": "Get chapter details  by id", "get_latest_article_list_for_malaysia_kini": "Return a list of current latest news article with info.", "ideas_list_for_trading_view": "List ideas post with options and filters", "inasistencias_2_for_colegiosantaana": "Inasistencia de alumnos 2", "pack_for_flaticon": "Method that allows you to get detailed information about a pack. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family."}, "aseqs": [{"api_name": "disciplina_2_for_colegiosantaana", "api_action": "\nAction: disciplina_2_for_colegiosantaana\nAction Input: {}", "api_reaction": null}, {"api_name": "inasistencias_2_for_colegiosantaana", "api_action": "\nAction: inasistencias_2_for_colegiosantaana\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "disciplina_2_for_colegiosantaana"}}, {"state": "generated_by_agent", "aseq": {"api_name": "disciplina_2_for_colegiosantaana", "api_action": "\nAction: disciplina_2_for_colegiosantaana\nAction Input: {\n\"student_id\": 2,\n\"includeFields\": [\n\"date\", \"stage\", \"incidence\", \"description\"\n]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "disciplina_2_for_colegiosantaana", "api_action": "\nAction: disciplina_2_for_colegiosantaana\nAction Input: {}", "api_reaction": null}}]}
{"URL": "51090", "query": "I'm a student working on a project about life lessons. Can you suggest three random quotes that offer valuable insights? It would be great if the quotes are related to philosophy and spirituality. Moreover, I want to search for quotes that convey a similar message to 'learn from your mistakes' and filter them based on their length.", "api_names": ["search_quotes_for_semantic_quotes", "random_quote_for_semantic_quotes", "Finish", "single_blog_for_blogsapi", "agent_s_active_listings_for_zillow", "powerball_for_ca_lottery", "get_categories_for_my_store", "get_ip_for_ipinfoapi", "get_device_asset_by_identifier_copy_for_basic_info_vikkon_assets", "get_states_by_time_zone_for_us_states", "get_product_for__onboarding_project", "host_read_for_netlas_all_in_one_host", "financial_statements_disclosures_for_sec_filings", "getlatestbyedinetcode_for_jp_funda", "deprecated_retrieving_orders_for_opensea_data_query", "web_top_momentum_for_open_defi", "balance_sheet_statement_for_financial_statements", "price_prediction_for_crypto_market_data_from_token_metrics"], "api_descs": {"Finish": "No description available.", "agent_s_active_listings_for_zillow": "Agent's active listings", "balance_sheet_statement_for_financial_statements": "Get company balance sheet statement by year.\n\nAll numbers in thousands.", "deprecated_retrieving_orders_for_opensea_data_query": "How to fetch orders from the OpenSea system.", "financial_statements_disclosures_for_sec_filings": "Returns a list of financial statements and disclosures from a company's Annual or Quarterly report.\n<p><i>Use the CIK and Accession Number values returned from the <b>SEC Filings</b> endpoint for this endpoint's Request Parameters.</i></p>", "get_categories_for_my_store": " ", "get_device_asset_by_identifier_copy_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier", "get_ip_for_ipinfoapi": "Get user's IP", "get_product_for__onboarding_project": " ", "get_states_by_time_zone_for_us_states": "get", "getlatestbyedinetcode_for_jp_funda": "### Return latest securities report data of the company specified with edinet code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.　But you can obtain data instead of consolidated management indicators from non consolidated management indicators", "host_read_for_netlas_all_in_one_host": "Both ip address and domain might be used as a search query.", "powerball_for_ca_lottery": "Powerball History", "price_prediction_for_crypto_market_data_from_token_metrics": "Get price prediction for tokens powered by Token Metrics", "random_quote_for_semantic_quotes": "Get random quotes by length and/or tags.  **NOTE:** up to 10 results can be returned, they may have similar meanings. If you want want absolute random, just pick the first result (or set `limit` to 1) and call this API again to get another quote.", "search_quotes_for_semantic_quotes": "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity.", "single_blog_for_blogsapi": "Single blog post details by its ID.", "web_top_momentum_for_open_defi": "\nReturn top up and down 100 price changes for 24h.\n\nThe results are split for all trading pairs and trading pairs with $1M min liquidity.\n"}, "aseqs": [{"api_name": "random_quote_for_semantic_quotes", "api_action": "\nAction: random_quote_for_semantic_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "search_quotes_for_semantic_quotes", "api_action": "\nAction: search_quotes_for_semantic_quotes\nAction Input: {\n  \"q\": \"learn from your mistakes\",\n  \"tags\": \"philosophy,spirituality\",\n  \"limit\": 3,\n  \"max_length\": 100\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_quote_for_semantic_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_semantic_quotes", "api_action": "{\"query\": \"learn from your mistakes\", \"limit\": 10, \"tag_search\": \"philosophy, spirituality\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_semantic_quotes"}}]}
{"URL": "7981", "query": "I'm planning to purchase a pet and I would like to know the details of a specific pet. Can you provide me with the information about the pet with ID 123?", "api_names": ["getpetbyid_for_petstoreapi2_0", "getinventory_for_petstoreapi2_0", "Finish", "get_call_for_email_validation", "general_search_for_crypto_news_v2", "read_user_usage_sum_for_ironwifi", "convert_from_one_unit_to_another_for_measurement_unit_converter", "v1_cars_for_cars_by_api_ninjas", "fixtures_by_series_for_cricket_live_data", "memre_api_v1_concepts_for_learning_engine", "v1_textlanguage_for_text_language_by_api_ninjas", "search_neighbour_countries_by_country_code_for_geography", "example_for_veriphone", "list_of_all_countries_for_weather_forecast_14_days", "us_fl_for_us_gas_prices"], "api_descs": {"Finish": "No description available.", "convert_from_one_unit_to_another_for_measurement_unit_converter": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.", "example_for_veriphone": "Get an example phone number for any country", "fixtures_by_series_for_cricket_live_data": "Lists Fixtures and Results for a given tournament.", "general_search_for_crypto_news_v2": "Can take a single word search that will return any articles with the given keyword.", "get_call_for_email_validation": "Used to fetch api result using the request id received in responses.", "getinventory_for_petstoreapi2_0": "Returns a map of status codes to quantities", "getpetbyid_for_petstoreapi2_0": "Returns a single pet", "list_of_all_countries_for_weather_forecast_14_days": "List of all Countries", "memre_api_v1_concepts_for_learning_engine": "Retrieve a list of concepts for the current customer.", "read_user_usage_sum_for_ironwifi": "READ - USER USAGE SUM", "search_neighbour_countries_by_country_code_for_geography": "Search broder sharing countries for given country code. Country code is ISO 3166 standard alpha code", "us_fl_for_us_gas_prices": "Returns current gas price data for Florida. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.", "v1_cars_for_cars_by_api_ninjas": "API Ninjas Cars API endpoint.", "v1_textlanguage_for_text_language_by_api_ninjas": "API Ninjas Text Language API endpoint"}, "aseqs": [{"api_name": "getpetbyid_for_petstoreapi2_0", "api_action": "\nAction: getpetbyid_for_petstoreapi2_0\nAction Input: {\n  \"petid\": 456\n}", "api_reaction": null}, {"api_name": "getinventory_for_petstoreapi2_0", "api_action": "\nAction: getinventory_for_petstoreapi2_0\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_petstoreapi2_0"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getpetbyid_for_petstoreapi2_0\",\n\t\"api_action\": \"\\nAction: getpetbyid_for_petstoreapi2_0\\nAction Input: {\\n  \\\"petid\\\": 123\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_petstoreapi2_0", "api_action": "{\"petid\": 123}", "api_reaction": null}}]}
{"URL": "86692", "query": "I want to enhance my reading speed and comprehension. Is there an API that can convert text into Bionized Reading format? Can the API be customized for word fixation, language, and text processing model?", "api_names": ["go_for_fast_reading", "Finish", "parser_get_for_scraper_s_proxy", "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france", "provinces_for_canadian_gas_prices", "get_the_places_by_latitude_and_longitude_for_location", "shorts_sequence_for_yt_api", "tangga_lagu_for_kotak7", "user_follower_list_for_tiktok_download_video_", "eventgames_for_esportapi"], "api_descs": {"Finish": "No description available.", "eventgames_for_esportapi": "Get event games for a specific E-Sports event by providing the event ID.", "get_the_places_by_latitude_and_longitude_for_location": "Get the places by latitude and longitude.", "go_for_fast_reading": "Convert raw text to Bionized Reading.", "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france": "Extraire les données du pages jaunes email et téléphone", "parser_get_for_scraper_s_proxy": "Automatically parses html into an easily processable json format", "provinces_for_canadian_gas_prices": "Returns the average price of gas in all Canadian provinces.", "shorts_sequence_for_yt_api": "Get Shorts sequence.\nQuota cost is 2 units.", "tangga_lagu_for_kotak7": "Daftar tangga lagu", "user_follower_list_for_tiktok_download_video_": "get user follower list"}, "aseqs": [{"api_name": "go_for_fast_reading", "api_action": "\nAction: go_for_fast_reading\nAction Input: {\n  \"txt\": \"I want to enhance my reading speed and comprehension. Is there an API that can convert text into Bionized Reading format? Can the API be customized for word fixation, language, and text processing model?\"\n}", "api_reaction": null}, {"api_name": "go_for_fast_reading", "api_action": "\nAction: go_for_fast_reading\nAction Input: {\n  \"txt\": \"I want to enhance my reading speed and comprehension. Is there an API that can convert text into Bionized Reading format? Can the API be customized for word fixation, language, and text processing model?\",\n  \"fix\": 3,\n  \"lng\": \"EN\",\n  \"model\": \"m1\"\n}", "api_reaction": null}, {"api_name": "go_for_fast_reading", "api_action": "\nAction: go_for_fast_reading\nAction Input: {\n  \"txt\": \"I would like to improve my reading speed and comprehension. Is there an API available for converting text into Bionized Reading format? Can the API be customized for word fixation, language preferences, and text processing models?\",\n  \"fix\": 5,\n  \"lng\": \"EN\",\n  \"model\": \"m2\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "go_for_fast_reading"}}, {"state": "generated_by_agent", "aseq": {"api_name": "go_for_fast_reading", "api_action": "\nAction: go_for_fast_reading\nAction Input: {\n  \"txt\": \"I want to enhance my reading speed and comprehension. Is there an API that can convert text into Bionized Reading format? Can the API be customized for word fixation, language, and text processing model?\",\n  \"wordFixation\": false,\n  \"language\": \"en\",\n  \"textProcessingModel\": \"default\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "go_for_fast_reading"}}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to provide Bionized Reading format based on the customization inputs and check if the process can be customized further. The next step is to retrieve more options for customizing the text processing model.\n\t\"api_name\": \"go_for_fast_reading\"\n}"}]}
{"URL": "53620", "query": "I'm a cryptocurrency enthusiast and I'm interested in exploring the TVL of various protocols in the DeFi space. Can you provide me with a list of protocols along with their TVL? Additionally, I would like to know the historical TVL of the Aave protocol and the breakdown by token and chain.", "api_names": ["charts_chain_for_defi_data", "Finish", "chains_for_defi_data", "protocol_for_defi_data", "charts_for_defi_data", "protocols_for_defi_data", "getordertransactions_for_appibase", "tariff_plans_api_for_mobile_recharge_plans_api_tariff_plans_free", "get_the_status_of_your_movie_renders_for_json2video", "roll_for_diceforge", "get_calculate_loan_cost_for_calcx_loan_calculator", "search_for_verses_containing_terms_for_bible_memory_verse_flashcard", "downloadfile_for_groupdocs_translation_cloud", "get_a_translation_for_dictionary_translation_hablaa", "tz_lookup_by_location_for_stadia_maps_time_zone_api", "generate_qr_for_qr_code_wizard", "get_api_by_external_custom_id_for_aaaa", "player_information_for_baseball_datafeeds_by_rolling_insights", "get_upscaled_binary_image_for_midjourney", "facebook_ad_copy_for_facebook_ad"], "api_descs": {"Finish": "No description available.", "chains_for_defi_data": "Get current TVL of all chains", "charts_chain_for_defi_data": "Get historical TVL of a chain", "charts_for_defi_data": "Get historical TVL of DeFi on all chains", "downloadfile_for_groupdocs_translation_cloud": " ", "facebook_ad_copy_for_facebook_ad": "Generate Facebook Ad using AI", "generate_qr_for_qr_code_wizard": "Generate QR codes with ease via API", "get_a_translation_for_dictionary_translation_hablaa": "Get a translation by defining source and destination languages as well as a word to translate.", "get_api_by_external_custom_id_for_aaaa": "Get information on specified API based on a given custom external ID, including `category`, `id`, and `name`", "get_calculate_loan_cost_for_calcx_loan_calculator": "This endpoint calculates the total cost of a loan given the loan amount, interest rate, and repayment term.", "get_the_status_of_your_movie_renders_for_json2video": "Get a list of your movie renders, in what step of the rendering process they are and a link to the resulting video once they finish.", "get_upscaled_binary_image_for_midjourney": "returns requested binary image (\"image/png\") from the set", "getordertransactions_for_appibase": "Get all order transactions", "player_information_for_baseball_datafeeds_by_rolling_insights": "This endpoint returns player demographic information", "protocol_for_defi_data": "Get historical TVL of a protocol and breakdowns by token and chain", "protocols_for_defi_data": "List of protocols along with their tvl", "roll_for_diceforge": "Rolls a set of dice and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nsides (integer): A list of integers representing the number of sides for each die.\ncount (integer): A list of integers representing the number of times to roll each die. Defaults to 1 if not provided.\nmodifier (integer): A list of integers representing the modifier to apply to the total of each die roll.\nadvantage (boolean): If set to true, rolls each die twice and takes the higher result.\ndisadvantage (boolean): If set to true, rolls each die twice and takes the lower result.", "search_for_verses_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns verses that contain term(s). Terms are not case sensitive. \nBooks, operators etc. are NOT CASE SENSITIVE\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **", "tariff_plans_api_for_mobile_recharge_plans_api_tariff_plans_free": "Just send the operator and circle and GET ALL PLANS according to circle and operator our api", "tz_lookup_by_location_for_stadia_maps_time_zone_api": "The Stadia TZ Lookup API provides time zone information, as well as information about any special offset (such as DST) in effect based on the latest IANA TZDB. Note that this API may not be accurate for timestamps in the past and does not claim to report precise nautical times in the open ocean beyond territorial waters."}, "aseqs": [{"api_name": "protocols_for_defi_data", "api_action": "\nAction: protocols_for_defi_data\nAction Input: {}", "api_reaction": null}, {"api_name": "protocol_for_defi_data", "api_action": "\nAction: protocol_for_defi_data\nAction Input: {\n  \"protocol\": \"aave\"\n}", "api_reaction": null}, {"api_name": "charts_for_defi_data", "api_action": "\nAction: charts_for_defi_data\nAction Input: {}", "api_reaction": null}, {"api_name": "chains_for_defi_data", "api_action": "\nAction: chains_for_defi_data\nAction Input: {}", "api_reaction": null}, {"api_name": "charts_chain_for_defi_data", "api_action": "\nAction: charts_chain_for_defi_data\nAction Input: {\n  \"chain\": \"ethereum\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "protocols_for_defi_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "protocol_for_defi_data", "api_action": "{\"protocol\":\"Aave\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "protocols_for_defi_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "protocols_for_defi_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "protocols_for_defi_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "protocols_for_defi_data"}}]}
{"URL": "42545", "query": "I'm writing a novel and I'm in need of some inspiration. Can you give me a random word and a random sentence that I can incorporate into my story?", "api_names": ["generate_a_random_word_for_random_word_generator", "generate_a_random_sentence_for_random_word_generator", "Finish", "stock_getlateststock_for_stock_api", "fetch_by_region_for_magical_taske", "novel_novel_id_cover_for_web_novel_api", "indices_for_crypto_market_data_from_token_metrics", "transcripts_v2_list_for_seeking_alpha", "played_for_csgo_matches_and_tournaments", "generate_image_for_stable_diffusion_v2", "getphonedetails_for_cellphones", "production_years_by_model_id_for_motorcycle_specs_database", "get_continent_by_id_for_geography_v2", "getfileversions_for_groupdocs_metadata_cloud", "insights_for_traveldax"], "api_descs": {"Finish": "No description available.", "fetch_by_region_for_magical_taske": "This endpoint fetches records by region as defined in the `ABOUT` section above. You have to provide region and a limit of the number of records returned.", "generate_a_random_sentence_for_random_word_generator": "Generate a random sentence", "generate_a_random_word_for_random_word_generator": "Scour through thousands of words from the RandomWordGenerator.com database", "generate_image_for_stable_diffusion_v2": "Generate an image with stable diffusion", "get_continent_by_id_for_geography_v2": "get continent by id", "getfileversions_for_groupdocs_metadata_cloud": " ", "getphonedetails_for_cellphones": "Get all phone specifications & photos by phone id, get the phone id from the endpoint GetPhonesByBrandId", "indices_for_crypto_market_data_from_token_metrics": "Get indices data powered by Token Metrics", "insights_for_traveldax": "Access all the processed insights in order to boost revenue on metasearch channels.", "novel_novel_id_cover_for_web_novel_api": "Returns the Cover for the Requested Novel ID", "played_for_csgo_matches_and_tournaments": "Last of played cs:go matches", "production_years_by_model_id_for_motorcycle_specs_database": "Get makeName, modelName, years, by model Id", "stock_getlateststock_for_stock_api": "Get the latest stock information.", "transcripts_v2_list_for_seeking_alpha": "List transcripts of specific symbol"}, "aseqs": [{"api_name": "generate_a_random_word_for_random_word_generator", "api_action": "\nAction: generate_a_random_word_for_random_word_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "generate_a_random_sentence_for_random_word_generator", "api_action": "\nAction: generate_a_random_sentence_for_random_word_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_word_for_random_word_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_sentence_for_random_word_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_a_random_word_for_random_word_generator"}}]}
{"URL": "44050", "query": "I want to organize a friendly betting competition among my friends. Can you give me the latest odds for the matches on Dafabet? We need to analyze the odds to determine the betting rules and prizes.", "api_names": ["odds_for_dafabet", "Finish", "getinterestinglistings_for_etsy", "advanced_for_chess_puzzles_v2", "teams_get_transfers_for_divanscore", "getlatestbyedinetcode_for_jp_funda", "4d_dream_dictionary_for_4d_results", "products_detail_for_wayfair", "categories_list_deprecated_for_forever21", "specific_article_keyword_search_for_crypto_news_v2", "sawyer_test_for_sawyertest", "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france"], "api_descs": {"4d_dream_dictionary_for_4d_results": "Return relevant 4D/3D lucky draw number based on keyword (english/chinese) of your dream.", "Finish": "No description available.", "advanced_for_chess_puzzles_v2": "Advanced search options", "categories_list_deprecated_for_forever21": "List all categories from F21", "getinterestinglistings_for_etsy": "Collects the list of interesting listings", "getlatestbyedinetcode_for_jp_funda": "### Return latest securities report data of the company specified with edinet code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.　But you can obtain data instead of consolidated management indicators from non consolidated management indicators", "odds_for_dafabet": "Latest Odds for Dafabet", "pagesjaunes_for_les_pagesjaunes_les_pagesblanche_france": "Extraire les données du pages jaunes email et téléphone", "products_detail_for_wayfair": "Get detail information of specific product", "sawyer_test_for_sawyertest": "test", "specific_article_keyword_search_for_crypto_news_v2": "Takes a title and keyword that will then return any articles from a specific news source.", "teams_get_transfers_for_divanscore": "Get transfers of specific team"}, "aseqs": [{"api_name": "odds_for_dafabet", "api_action": "\nAction: odds_for_dafabet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_dafabet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_dafabet"}}]}
{"URL": "79017", "query": "My friends and I are interested in investing in the stock market. Can you provide us with a list of undervalued large cap stocks? It would also be helpful to see the aggressive small cap stocks with earnings growth rates better than 25%.", "api_names": ["Finish", "market_aggressive_small_caps_for_mboum_finance", "market_undervalued_large_caps_for_mboum_finance", "2_mensagens_do_chat_chat_message_for_compras_net_api", "majors_performance_for_investing_financial_stocks", "schneetage_for_ecoweather", "findimageduplicates_for_aspose_imaging_cloud", "get_order_for_my_store", "getforecast_ultra_for_the_apophis", "get_jokes_for_world_of_jokes", "squadposition_for_football_v2", "get_region_details_for_gis_engine", "months_on_book_for_credit_card_prediction", "mini_chart_for_chart_img", "full_data_for_question_explorer"], "api_descs": {"2_mensagens_do_chat_chat_message_for_compras_net_api": "Chat", "Finish": "No description available.", "findimageduplicates_for_aspose_imaging_cloud": " ", "full_data_for_question_explorer": "full data", "get_jokes_for_world_of_jokes": "Access our huge collection of jokes and paginate through them based on your desired limit and sorting criteria.", "get_order_for_my_store": " ", "get_region_details_for_gis_engine": "Get the region details by providing the country code and region code", "getforecast_ultra_for_the_apophis": "This endpoint is part of Ultra subscriptions.\n\n**Available Currencies:**\nAll traded coins & tokens on Coinbase.\n\n**Forecast Data:**\n- 10 Periods\n\n**Timeframe:**\n- 1m\n- 5m\n- 15m\n- 1h\n- 6h", "majors_performance_for_investing_financial_stocks": "get all majors performance", "market_aggressive_small_caps_for_mboum_finance": "Small cap stocks with earnings growth rates better than 25%.", "market_undervalued_large_caps_for_mboum_finance": "Large cap stocks that are potentially undervalued.", "mini_chart_for_chart_img": "This endpoint captures TradingView mini chart image.", "months_on_book_for_credit_card_prediction": "Months_on_book, card category  GET request", "schneetage_for_ecoweather": "Beantwortet die Frage, wie viel Schnee und an wie viel Tagen innerhalb eines Zeitraums vorhanden gewesen ist. Wird verwendet zum Beispiel bei der Einsatzplanung im Winterdienst und Hausmeisterservice sowie im Tourismus.", "squadposition_for_football_v2": "Search a squad in a table for its position."}, "aseqs": [{"api_name": "market_undervalued_large_caps_for_mboum_finance", "api_action": "\nAction: market_undervalued_large_caps_for_mboum_finance\nAction Input: {}", "api_reaction": null}, {"api_name": "market_aggressive_small_caps_for_mboum_finance", "api_action": "\nAction: market_aggressive_small_caps_for_mboum_finance\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "market_undervalued_large_caps_for_mboum_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_aggressive_small_caps_for_mboum_finance", "api_action": "\nAction: market_aggressive_small_caps_for_mboum_finance\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_order_for_my_store"}}]}
{"URL": "64184", "query": "My company is developing a new game and we need some inspiration for taboo words. Can you give us a random stored word from any category, along with its forbidden words? Additionally, we would like to know all the stored categories available.", "api_names": ["get_taboo_words_from_word_for_taboo_api", "get_result_from_category_for_taboo_api", "Finish", "get_all_stored_categories_for_taboo_api", "get_stored_word_from_any_category_for_taboo_api", "list_comments_for_tiktok_private", "feeds_for_tiktok_v2", "get_message_status_for_d7sms", "get_greet_for_greet_generator", "movie_comments_json_for_yts_am_torrent", "questions_for_quiz", "event_highlights_video_for_flashlive_sports", "status_for_getting_pdf_urls_for_carbon_management", "ainamematch_for_aspose_email_cloud", "2_thumbnail_ready_for_pagepeeker", "test_for_testing", "echo_for_pragmavantapi", "post_with_cursor_for_instagram_bulk_profile_scrapper", "deprem_for_kolektifapi", "getpaymenttypes_for_payment"], "api_descs": {"2_thumbnail_ready_for_pagepeeker": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds", "Finish": "No description available.", "ainamematch_for_aspose_email_cloud": " ", "deprem_for_kolektifapi": "«afet.gen.tr» Son Depremler Verisi", "echo_for_pragmavantapi": "Echo request", "event_highlights_video_for_flashlive_sports": "Get highlights video by event ID", "feeds_for_tiktok_v2": "Fetch TikToc user recent feeds by username", "get_all_stored_categories_for_taboo_api": "Get a list of all stored categories. Use them to get results for the specified category", "get_greet_for_greet_generator": "Get Greet", "get_message_status_for_d7sms": "Get Message Delivery Status of previously sent messages.", "get_result_from_category_for_taboo_api": "Given a stored category, get a random result which will contain the main phrase and the taboo words.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "get_stored_word_from_any_category_for_taboo_api": "Get a random result which will contain the main phrase and the taboo words, result may come from any of the stored categories.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "get_taboo_words_from_word_for_taboo_api": "Provide your own word and get the taboo words back.\n\nOptionally pass a parameter which will control the amount of taboo words to be returned, \"forbiddenWordLimit\" defaults to 4 and has a max of 10", "getpaymenttypes_for_payment": "Find Payment Services allowed by tenant", "list_comments_for_tiktok_private": "List Comments By Post", "movie_comments_json_for_yts_am_torrent": "Returns all the comments for the specified movie", "post_with_cursor_for_instagram_bulk_profile_scrapper": "This API return time will be faster, As this fetch  profile data directly from userid (pk)\n\nScrap instagram profile by pk or username", "questions_for_quiz": "NOTHING", "status_for_getting_pdf_urls_for_carbon_management": "Get results in details from the task id.", "test_for_testing": "This is my first API that i am testing"}, "aseqs": [{"api_name": "get_all_stored_categories_for_taboo_api", "api_action": "\nAction: get_all_stored_categories_for_taboo_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_stored_word_from_any_category_for_taboo_api", "api_action": "\nAction: get_stored_word_from_any_category_for_taboo_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_result_from_category_for_taboo_api", "api_action": "\nAction: get_result_from_category_for_taboo_api\nAction Input: {\n  \"category\": \"any\"\n}", "api_reaction": null}, {"api_name": "get_taboo_words_from_word_for_taboo_api", "api_action": "\nAction: get_taboo_words_from_word_for_taboo_api\nAction Input: {\n  \"word\": \"inspiration\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_stored_categories_for_taboo_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_stored_word_from_any_category_for_taboo_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_stored_categories_for_taboo_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_stored_categories_for_taboo_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_stored_word_from_any_category_for_taboo_api"}}]}
{"URL": "2362", "query": "My friend is planning to attend an American Football match. Can you provide us with the match details for the match with ID 10060042? Additionally, we would like to see the image of the player with ID 853680 who will be playing in that match.", "api_names": ["Finish", "playerimage_for_americanfootballapi", "matchdetails_for_americanfootballapi", "post_groups_for_ocoya", "v1_urllookup_for_url_lookup_by_api_ninjas", "totlsupply_for_totalsupply", "list_for_cheeses", "marks_women_for_scoring_tables_api", "business_intelligence_jobs_for_usa_jobs_for_it", "get_epic_free_games_for_epic_free_games", "editorial_for_deezer", "get_all_categories_for_ase_s_quiz_api", "summary_for_seo_checker", "data_from_to_number_for_unitconversion", "eredivisie_standings_for_eredivisie_standings", "earnings_estimate_for_stock_analysis", "cnn_arabic_for_arabic_news_api", "getproducturl_for_price_tracker_south_africa"], "api_descs": {"Finish": "No description available.", "business_intelligence_jobs_for_usa_jobs_for_it": "Business Intelligence Jobs Api", "cnn_arabic_for_arabic_news_api": "مسار يسترجع جميع الأخبار من موقع سي ان ان بالعربية", "data_from_to_number_for_unitconversion": "Data unit conversions", "earnings_estimate_for_stock_analysis": "Get earnings estimate.", "editorial_for_deezer": "An editorial object", "eredivisie_standings_for_eredivisie_standings": "Eredivisie Standings", "get_all_categories_for_ase_s_quiz_api": "Get all categories", "get_epic_free_games_for_epic_free_games": "Get Epic Free Games", "getproducturl_for_price_tracker_south_africa": "Return prices based on the url of the product page on the retailers website.\n\nNOTE: replace all / with a +", "list_for_cheeses": "List all cheeses", "marks_women_for_scoring_tables_api": "This retrieves all women's marks from the World Athletics Scoring Tables.", "matchdetails_for_americanfootballapi": "Get detailed information for a specific American Football match by providing the match ID.", "playerimage_for_americanfootballapi": "Get the PNG image of an American Football player using their ID.", "post_groups_for_ocoya": "Returns information about all my created posts.", "summary_for_seo_checker": "Summary SEO", "totlsupply_for_totalsupply": "gets token supply", "v1_urllookup_for_url_lookup_by_api_ninjas": "API Ninjas URL Lookup API endpoint."}, "aseqs": [{"api_name": "matchdetails_for_americanfootballapi", "api_action": "\nAction: matchdetails_for_americanfootballapi\nAction Input: {\n  \"is_id\": 10060042\n}", "api_reaction": null}, {"api_name": "playerimage_for_americanfootballapi", "api_action": "\nAction: playerimage_for_americanfootballapi\nAction Input: {\n  \"is_id\": 853680\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matchdetails_for_americanfootballapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matchdetails_for_americanfootballapi", "api_action": "\nAction: matchdetails_for_americanfootballapi\nAction Input: {\n  \"is_id\": 10060042\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "matchdetails_for_americanfootballapi"}}]}
{"URL": "65325", "query": "I am a web developer working on a project and I need to convert an image to a different format and resize it. Can you convert the image at 'https://example.com/image.jpg' to JPEG format and resize it to a height of 300 pixels and width of 300 pixels using the 'image/convert' API? Additionally, I would like to get the content type of a file from the source URL 'https://example.com' using the 'file/content-type' API.", "api_names": ["image_convert_for_pragmavantapi", "web_pdf_for_pragmavantapi", "Finish", "root_for_pragmavantapi", "file_digest_for_pragmavantapi", "file_content_type_for_pragmavantapi", "getteam_for_nhl_stats_and_live_data", "leagueawaystandings_for_footapi", "income_statement_for_financial_statements", "extract_video_download_links_for_fdown_facebook_video_downloader", "music_info_for_tiktok_v3", "product_details_for_axesso_kaufland_data_service", "teammedia_for_baseballapi", "reverse_for__forward_reverse_geocoding_by_googlemap_api", "song_by_id_for_halsey_lyric_snippets", "hex_to_hsl_for_convexity", "get_all_symbols_for_finance_data", "v1_historicalevents_for_historical_events_by_api_ninjas", "fetch_chapters_for_mangaverse_api", "forex_intraday_for_quotient"], "api_descs": {"Finish": "No description available.", "extract_video_download_links_for_fdown_facebook_video_downloader": "Just provide the url of Video and You will get download links of Video in HD and SD format. :)", "fetch_chapters_for_mangaverse_api": "This will get all the chapters list from the manga \nid should be manga id", "file_content_type_for_pragmavantapi": "File: get content type", "file_digest_for_pragmavantapi": "Get digest/checksum for a file", "forex_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "get_all_symbols_for_finance_data": "Get all available symbols in API", "getteam_for_nhl_stats_and_live_data": " ", "hex_to_hsl_for_convexity": "Converts  hex color code to  hsl color code", "image_convert_for_pragmavantapi": "Convert image to different type and resize to smaller size.", "income_statement_for_financial_statements": "Get company income statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.", "leagueawaystandings_for_footapi": "Get the league's away standings for the given tournament and season ID.", "music_info_for_tiktok_v3": "get music information by music_id", "product_details_for_axesso_kaufland_data_service": "Query product details information.", "reverse_for__forward_reverse_geocoding_by_googlemap_api": " ", "root_for_pragmavantapi": "Root resource", "song_by_id_for_halsey_lyric_snippets": "returns song when searched by id", "teammedia_for_baseballapi": "Get the media for a specific baseball team using the team ID.", "v1_historicalevents_for_historical_events_by_api_ninjas": "API Ninjas Historical Events API endpoint. Returns a list of up to 10 events that match the search parameters. At least one of the following parameters is required: text, year, month, day.", "web_pdf_for_pragmavantapi": "Get webpage snapshot as image"}, "aseqs": [{"api_name": "image_convert_for_pragmavantapi", "api_action": "\nAction: image_convert_for_pragmavantapi\nAction Input: {}", "api_reaction": null}, {"api_name": "file_content_type_for_pragmavantapi", "api_action": "\nAction: file_content_type_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://example.com\"\n}", "api_reaction": null}, {"api_name": "root_for_pragmavantapi", "api_action": "\nAction: root_for_pragmavantapi\nAction Input: {}", "api_reaction": null}, {"api_name": "web_pdf_for_pragmavantapi", "api_action": "\nAction: web_pdf_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://example.com\"\n}", "api_reaction": null}, {"api_name": "file_digest_for_pragmavantapi", "api_action": "\nAction: file_digest_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to convert the image and resize it using the 'image_convert_for_pragmavantapi' API with the provided URL and dimensions.", "api_name": "image_convert_for_pragmavantapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "image_convert_for_pragmavantapi", "api_action": "{\"src\":\"https://example.com/image.jpg\",\"new_format\":\"JPEG\",\"height\":300,\"width\":300}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "image_convert_for_pragmavantapi", "api_action": "\nAction: image_convert_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://example.com/image.jpg\",\n  \"target_format\": \"JPEG\",\n  \"height\": 300,\n  \"width\": 300\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "image_convert_for_pragmavantapi", "api_action": "\nAction: image_convert_for_pragmavantapi\nAction Input: {\n  \"url\": \"https://example.com/image.jpg\",\n  \"newFormat\": \"JPEG\",\n  \"width\": 300,\n  \"height\": 300\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "image_convert_for_pragmavantapi", "api_action": "\nAction: image_convert_for_pragmavantapi\nAction Input: {\n  \"url\": \"https://example.com/image.jpg\",\n  \"output_format\": \"JPEG\",\n  \"height\": 300,\n  \"width\": 300\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "image_convert_for_pragmavantapi", "api_action": "\nAction: image_convert_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://example.com/image.jpg\",\n  \"dest_format\": \"JPEG\",\n  \"height\": 300,\n  \"width\": 300\n}", "api_reaction": null}}]}
{"URL": "10651", "query": "As a horse racing fan, I am interested in races at Cheltenham. Can you provide me with the racecards for today's races? It would be great to know the race details and also check the trainers' win rate in the last 7 days.", "api_names": ["trainers_win_rate_for_horse_racing", "racecards_for_horse_racing", "Finish", "ancestry_for_23andme", "prices_for_redstone", "getallrecordssince_for_360_business_tool", "quote_of_the_day_for_quotes_v2", "uk_new_homes_for_sale_for_zoopla", "brandlist_for_boldsign", "bombed_for_bombsaway", "get_greet_for_greet_generator", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations", "getproductbycategory_for_cartify", "limit_for_list_movies", "aircraft_details_by_reg_for_fachaapi"], "api_descs": {"Finish": "No description available.", "aircraft_details_by_reg_for_fachaapi": "Get Aircraft details for a specific Registration / Tail Number", "ancestry_for_23andme": "Ancestral breakdown for the user's profile. Each population has an absolute proportion of the genome. A population with sub_populations has an unassigned proportion — the ancestry we couldn't classify in it.   threshold is optional, default 0.75 and range (0.5, 1.0) exclusive. 0.51 means a speculative estimate, 0.75 standard, and 0.90 conservative. A higher threshold would increase the unassigned proportions, a lower would speculate.", "bombed_for_bombsaway": "Sends SMS", "brandlist_for_boldsign": " ", "get_greet_for_greet_generator": "Get Greet", "getallrecordssince_for_360_business_tool": "Get all data modified since", "getproductbycategory_for_cartify": "Do you want to search for a product by category?\nUse the category of the product in the path parameter.\n\nFor example,\nAre you looking for Phones? Use Phones in your path parameter", "limit_for_list_movies": "The limit of results per page that has been set", "prices_for_redstone": "Redstone HTTP API currently has a single yet very powerful endpoint, which allows you to fetch prices data.", "quote_of_the_day_for_quotes_v2": "Returns Quote of the Day", "racecards_for_horse_racing": "Get races list.", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get recent anime wallpapers without any categorization:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "trainers_win_rate_for_horse_racing": "Get Trainers stats in the last days.\nRuns, Wins and Win Rate in %.", "uk_new_homes_for_sale_for_zoopla": "UK new homes for sale"}, "aseqs": [{"api_name": "racecards_for_horse_racing", "api_action": "\nAction: racecards_for_horse_racing\nAction Input: {}", "api_reaction": null}, {"api_name": "trainers_win_rate_for_horse_racing", "api_action": "\nAction: trainers_win_rate_for_horse_racing\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "racecards_for_horse_racing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "racecards_for_horse_racing", "api_action": "{\"date\": \"today\", \"venue\": \"Cheltenham\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "racecards_for_horse_racing", "api_action": "\nAction: racecards_for_horse_racing\nAction Input: {\"cheltenham\": true}", "api_reaction": null}}]}
{"URL": "62670", "query": "My sister is conducting a genetics experiment and needs assistance. She wants to convert the mRNA sequence 'AUGUUUCCGAUUGCAGGAUCUCGAUAA' to a DNA sequence and then transform it into a sequence of Amino Acids. Can you provide her with the Amino Acids in the order of appearance?", "api_names": ["dna2aminoacid_for_dna2protein", "mrna2dna_for_dna2protein", "Finish", "fetch_profile_picture_for_whatsapp_data", "getfileversions_for_groupdocs_merger_cloud", "top_posts_by_username_for_reddit", "gs1code128_for_gs1_code128_generator", "health_for_wordle_api", "news_list_by_ticker_for_webull", "web_impressive_numbers_for_open_defi", "languages_for_referential", "userid_for_instagram_v13", "search_case_for_yardillo", "timezone_for_location_for_world_time", "get_user_for_hello_world"], "api_descs": {"Finish": "No description available.", "dna2aminoacid_for_dna2protein": "Transform a DNA sequence into a sequence of Amino Acids", "fetch_profile_picture_for_whatsapp_data": "Gets the whatsapp number profile picture, you can select its resolution (`high` or `low`) and the response format: `png` file, `url` or `base64` encoded file.", "get_user_for_hello_world": "get user by id", "getfileversions_for_groupdocs_merger_cloud": " ", "gs1code128_for_gs1_code128_generator": "it gets data, company_prefix, lot and quantity and it generates a barcode. company_prefix and data is required.", "health_for_wordle_api": " ", "languages_for_referential": "List the world's languages translated into 20 languages", "mrna2dna_for_dna2protein": "This endpoint transforms an mRNA sequence to its DNA sequence equivalent.", "news_list_by_ticker_for_webull": "List news by ticker id", "search_case_for_yardillo": "Search your cases by fields id and its values", "timezone_for_location_for_world_time": "Request the current time for a timezone (in plain text or JSON)", "top_posts_by_username_for_reddit": "Top Posts By Username", "userid_for_instagram_v13": "Get instagram user id by username", "web_impressive_numbers_for_open_defi": " "}, "aseqs": [{"api_name": "mrna2dna_for_dna2protein", "api_action": "\nAction: mrna2dna_for_dna2protein\nAction Input: {\n  \"mrna\": \"AUGUUUCCGAUUGCAGGAUCUCGAUAA\"\n}", "api_reaction": null}, {"api_name": "dna2aminoacid_for_dna2protein", "api_action": "\nAction: dna2aminoacid_for_dna2protein\nAction Input: {\n  \"dna\": \"TACAAAGGCTAACGTCCTAGAGCTATT\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "mrna2dna_for_dna2protein"}}, {"state": "generated_by_agent", "aseq": {"api_name": "dna2aminoacid_for_dna2protein"}}, {"state": "generated_by_agent", "aseq": {"api_name": "dna2aminoacid_for_dna2protein"}}]}
{"URL": "27418", "query": "I am an avid fan of tennis and I am interested in knowing the details of a specific competition. Can you provide me with the competition details for the tournament with id 103? I would like to see the featured competitions in the same sport as well.", "api_names": ["featured_competitions_for_allscores", "competition_details_for_allscores", "Finish", "retrieve_practice_preferences_for_drillster_2_0", "nearby_google_for_nearby_places", "getallrecordssince_for_360_business_tool", "webcams_list_bbox_ne_lat_ne_lng_sw_lat_sw_lng_for_webcams_travel", "query_for_hexagon_by_location_and_resolution_for_ca_boundaries_io", "home_for_magicmirrorapi", "get_cities_by_country_for_cities_cost_of_living_and_average_prices_api", "v1_randomuser_for_random_user_by_api_ninjas", "twitter_space_stream_url_for_twitter_aio", "search_user_for_tiktok_download_video_", "zipcode_for_ap_sample", "navigations_get_root_for_unofficial_shein"], "api_descs": {"Finish": "No description available.", "competition_details_for_allscores": "Get competition details.", "featured_competitions_for_allscores": "Get featured competitions.", "get_cities_by_country_for_cities_cost_of_living_and_average_prices_api": "This endpoint will retrieve all the supported cities in a given country.", "getallrecordssince_for_360_business_tool": "Get all data modified since", "home_for_magicmirrorapi": "Home endpoint", "navigations_get_root_for_unofficial_shein": "Get root categories related to a tab", "nearby_google_for_nearby_places": "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20.", "query_for_hexagon_by_location_and_resolution_for_ca_boundaries_io": "Query for Hexagon by Location and Resolution", "retrieve_practice_preferences_for_drillster_2_0": "Retrieves the user's practice preferences for a given drill.", "search_user_for_tiktok_download_video_": "get user list by keywords", "twitter_space_stream_url_for_twitter_aio": "Receive m3u8 url for Twitter Space stream by mediaId.", "v1_randomuser_for_random_user_by_api_ninjas": "API Ninjas Random User API endpoint. Returns a fake random user profile.", "webcams_list_bbox_ne_lat_ne_lng_sw_lat_sw_lng_for_webcams_travel": "This is a modifier. Returns a list of the webcams in the bounding box given by north-east ({ne_lat},{ne_lng}) and south-west ({sw_lat},{sw_lng}) coordinates. Required: {ne_lat},{ne_lng},{sw_lat},{sw_lng}.", "zipcode_for_ap_sample": "Get locations by zipcode"}, "aseqs": [{"api_name": "competition_details_for_allscores", "api_action": "\nAction: competition_details_for_allscores\nAction Input: {\n  \"competition\": 103,\n  \"langid\": 1,\n  \"timezone\": \"America/New_York\"\n}", "api_reaction": null}, {"api_name": "featured_competitions_for_allscores", "api_action": "\nAction: featured_competitions_for_allscores\nAction Input: {\n  \"timezone\": \"America/New_York\",\n  \"sport\": 2,\n  \"langid\": 1,\n  \"type\": \"featured\",\n  \"withseasons\": true\n}", "api_reaction": null}, {"api_name": "competition_details_for_allscores", "api_action": "\nAction: competition_details_for_allscores\nAction Input: {\n  \"competition\": 103,\n  \"langid\": 1,\n  \"timezone\": \"America/New_York\",\n  \"withseasons\": true\n}", "api_reaction": null}, {"api_name": "featured_competitions_for_allscores", "api_action": "\nAction: featured_competitions_for_allscores\nAction Input: {\n  \"timezone\": \"America/New_York\",\n  \"sport\": 2,\n  \"langid\": 1,\n  \"type\": \"featured\",\n  \"withseasons\": true\n}", "api_reaction": null}, {"api_name": "competition_details_for_allscores", "api_action": "\nAction: competition_details_for_allscores\nAction Input: {\n  \"competition\": 103,\n  \"langid\": 1,\n  \"timezone\": \"America/New_York\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"api_name\": \"competition_details_for_allscores\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "featured_competitions_for_allscores"}}, {"state": "generated_by_agent", "aseq": {"api_name": "competition_details_for_allscores", "api_action": "\nAction: competition_details_for_allscores\nAction Input: {\n  \"competition\": 103,\n  \"langid\": 1,\n  \"timezone\": \"America/New_York\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "competition_details_for_allscores", "api_action": "\nAction: competition_details_for_allscores\nAction Input: {\n  \"competition\": 103,\n  \"langid\": 1,\n  \"timezone\": \"America/New_York\",\n  \"withseasons\": true\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "competition_details_for_allscores", "api_action": "\nAction: competition_details_for_allscores\nAction Input: {\n  \"competition\": 103,\n  \"langid\": 1,\n  \"timezone\": \"America/New_York\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "competition_details_for_allscores", "api_action": "\nAction: competition_details_for_allscores\nAction Input: {\n  \"competition\": 103,\n  \"langid\": 1,\n  \"timezone\": \"America/New_York\"\n}", "api_reaction": null}}]}
{"URL": "54277", "query": "I am a taekwondo coach searching for talented athletes in the under-58kg and under-54kg categories. Can you provide me with the top-ranked athletes' names, ranks, and points? It would be great if you can filter the results by country, specifically South Korea and China.", "api_names": ["Finish", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "products_search_deprecated_for_forever21", "get_animes_for_anime_jokes", "get_app_by_id_for_google_play", "get_channel_broadcaster_type_for_gwyo_twitch", "trend_for_yahoo_finance", "uuid_to_name_for_minecraft_uuid_converter", "template_download_for_xlsx_template", "getfileslist_for_aspose_ocr_cloud", "brands_detail_for_consumer_reports", "symbols_for_exchange_rate", "characters_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_", "get_station_details_for_soundcloud_scraper", "exists_exists_ticket_get_for_ifc_bim_services", "search_domains_websites_on_same_ip_shared_for_websites_on_same_ip", "all_stations_for_nrel_national_renewable_energy_laboratory"], "api_descs": {"Finish": "No description available.", "all_stations_for_nrel_national_renewable_energy_laboratory": "Return a full list of alternative fuel stations that match your query.", "brands_detail_for_consumer_reports": "Get detailed information of a brand", "characters_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_": "Get All 30 Characters", "exists_exists_ticket_get_for_ifc_bim_services": "Check if the key ticket is available or not", "get_animes_for_anime_jokes": "Get all the anime from Anime Jokes", "get_app_by_id_for_google_play": "Returns a single application by its ID", "get_channel_broadcaster_type_for_gwyo_twitch": "Get Channel Broadcaster Type (using username or id)", "get_station_details_for_soundcloud_scraper": "This endpoint fetches full details of a SoundCloud station, including all tracks.", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "getfileslist_for_aspose_ocr_cloud": " ", "products_search_deprecated_for_forever21": "Search for product by name", "search_domains_websites_on_same_ip_shared_for_websites_on_same_ip": "Search domain and get other domains on same IP address, use IP address OR domain name", "symbols_for_exchange_rate": "Get the all available currencies.", "template_download_for_xlsx_template": "Download template file from Cloud storage", "trend_for_yahoo_finance": "This reflects the insurance company's profits over given periods of time.\nThis endpoint also gives **experts** & **AI supported predictions** about stock future behavior", "uuid_to_name_for_minecraft_uuid_converter": "Convert your Mineccraft UUID to a Name"}, "aseqs": [{"api_name": "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "api_action": "\nAction: get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking\nAction Input: {}", "api_reaction": null}, {"api_name": "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking", "api_action": "\nAction: get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking\nAction Input: {}", "api_reaction": null}, {"api_name": "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "api_action": "\nAction: get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking\nAction Input: {}", "api_reaction": null}, {"api_name": "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking", "api_action": "\nAction: get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "api_action": "\nAction: get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking", "api_action": "\nAction: get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking"}}]}
{"URL": "51645", "query": "I'm building a language processing application and I want to extract stopwords from multiple languages. Can you fetch the stopwords for English, Spanish, and French? It would be helpful if you could provide details about each word.", "api_names": ["stopwords_for_free_stopwords", "categories_for_free_stopwords", "languages_for_free_stopwords", "Finish", "get_random_question_for_drinking", "get_order_for_rushtranslate", "tokens_all_market_cap_for_defi_watch", "responses_summary_for_surveymethods", "hashtag_feed_video_posts_v2_for_social_media_data_tt", "get_tide_sea_level_data_for_stormglass_complete", "city_for_canadian_gas_prices", "forecast_weather_api_for_weatherapi_com", "search_for_a_product_for_pricer", "get_open_positions_for_alpaca_trading", "get_raster_tile_for_mapilion_vector_and_raster_map_tiles", "find_places_prefix_for_ai_weather_by_meteosource"], "api_descs": {"Finish": "No description available.", "categories_for_free_stopwords": "Will list all available word categories. Check this before calling /stopwords", "city_for_canadian_gas_prices": "Returns the average price of gas in a specific city in Canada. You must provide both the Province and the specific City you wish to gather the price for.\n\n**Warning you must select a City and Province supported by this API**: To view the current supported locations try out the `/locations-list` endpoint to view all valid Province/City combinations.", "find_places_prefix_for_ai_weather_by_meteosource": "**Search places by beginning of the name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places* endpoint, you can specify only the prefix of the place you are looking for. You can search for cities, mountains, lakes, countries, etc.", "forecast_weather_api_for_weatherapi_com": "Forecast weather API method returns upto next 14 day weather forecast and weather alert as json. It contains astronomy data, day weather forecast and hourly interval weather information for a given city.", "get_open_positions_for_alpaca_trading": "Retrieves a list of the account's open positions.", "get_order_for_rushtranslate": "Get detailed information about a specific order.", "get_random_question_for_drinking": "Allows you to get a random question with optionally specifying the type of the challenge.", "get_raster_tile_for_mapilion_vector_and_raster_map_tiles": "Returns Raster tiles as PNG. These can be used in mapping libraries like Leaflet. The style-name can be one of:\n- `kurviger-liberty` a map style developed for Kurviger.de\n- `osm-bright` the default Osm Bright style", "get_tide_sea_level_data_for_stormglass_complete": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.", "hashtag_feed_video_posts_v2_for_social_media_data_tt": "Get hashtag feed V2. \n\nV2 - returns more data then older version of the endpoint, video without watermark and etc\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "languages_for_free_stopwords": "Will list all available stopword languages including how many words each language contains.", "responses_summary_for_surveymethods": "Using this API call you can retrieve information such as custom field labels & values, date on which  a response was started and when was it completed, the survey response method (email/web), the  email address of the respondent in case of an email response, IP address and the response code  for each individual response of your survey.", "search_for_a_product_for_pricer": "search by product name", "stopwords_for_free_stopwords": "Will return the exact extract words to use in your data analysis or application", "tokens_all_market_cap_for_defi_watch": "Get data about  tokens with market capitalisation and filter them"}, "aseqs": [{"api_name": "languages_for_free_stopwords", "api_action": "\nAction: languages_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "stopwords_for_free_stopwords", "api_action": "\nAction: stopwords_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "categories_for_free_stopwords", "api_action": "\nAction: categories_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "stopwords_for_free_stopwords", "api_action": "\nAction: stopwords_for_free_stopwords\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "stopwords_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stopwords_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "languages_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stopwords_for_free_stopwords"}}, {"state": "generated_by_agent", "aseq": {"api_name": "languages_for_free_stopwords"}}]}
{"URL": "13351", "query": "My company is organizing an event on sustainability and we need to gather relevant climate news articles. Could you fetch individual articles from The Times publication? Also, it would be helpful to access news from all publications to get a broader perspective on the climate.", "api_names": ["get_all_climate_news_for_new_climate", "get_individual_articles_for_new_climate", "Finish", "options_for_translate_it", "super_lig_standings_for_super_lig_standings", "get_bnb_balance_from_specific_network_for_cryptocurrency_balance", "search_event_details_for_mma_stats", "userid_for_instagram_v13", "get_deals_for_amazon_web_scraping_api", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real", "1_availablesymbols_endpoint_for_currenciesexchangerateapi", "getcodestructure_for_flow_study", "get_daily_nfl_schedule_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "get_nfl_team_schedule_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "salad_ingredient_for_recipe_finder", "stations_v2_get_measurements_for_airvisual", "send_single_message_for_branded_sms_pakistan", "driver_s_quotes_for_f1_drivers_quotes"], "api_descs": {"1_availablesymbols_endpoint_for_currenciesexchangerateapi": "Endpoint URL: /availablesymbols\nHTTP Method: GET\nResponse: This endpoint returns a list of all the available currency symbols that can be used for conversion in JSON format.\nsupports 170 symbols for currencies", "Finish": "No description available.", "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real": "Gera Comprovante da Receita Federal em PDF", "get_all_climate_news_for_new_climate": "News from all publications", "get_bnb_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the BNB balance of an address in a specific network.", "get_daily_nfl_schedule_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNFLGamesForDate?gameDate=20221211\nThe above call will return all of the games from December 11th, 2022.  Date must be in that format.  \nThey come back in a list format within the body of the response.", "get_deals_for_amazon_web_scraping_api": "Get amazon deals allowing to filter by category.  The category list is included in the response.", "get_individual_articles_for_new_climate": "Get individual articles from publications", "get_nfl_team_schedule_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call returns the schedule of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nCall needs to look like this:\n/getNFLTeamSchedule?teamID=1\nYou can also use the team Abbreviation:\n/getNFLTeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getNFLTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Good for seasons 2022 and 2023.", "getcodestructure_for_flow_study": " ", "options_for_translate_it": "With this endpoint you can get the supported languages and the possible translations between them", "salad_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random salad recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "search_event_details_for_mma_stats": "This lets you search for specific fights by the names of the fighters involved. The response returned by the API endpoint includes details such as the date of the fight, the name of the fighters involved, and the outcome of the fight.", "send_single_message_for_branded_sms_pakistan": "This API is useful to send a branded sms to single number", "stations_v2_get_measurements_for_airvisual": "Get measurements at specific station by its id", "super_lig_standings_for_super_lig_standings": "Super Lig Standings", "userid_for_instagram_v13": "Get instagram user id by username"}, "aseqs": [{"api_name": "get_individual_articles_for_new_climate", "api_action": "\nAction: get_individual_articles_for_new_climate\nAction Input: {\n  \"newspaperid\": \"The_Times\"\n}", "api_reaction": null}, {"api_name": "get_all_climate_news_for_new_climate", "api_action": "\nAction: get_all_climate_news_for_new_climate\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_individual_articles_for_new_climate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_news_for_new_climate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_news_for_new_climate"}}]}
{"URL": "42400", "query": "I'm a tech blogger and I want to write an article about the most popular iOS apps. Can you fetch the top grossing iOS apps and provide me with their categories and pricing? Additionally, I'm interested in the new iOS apps released recently.", "api_names": ["top_grossing_ios_apps_for_app_store", "Finish", "new_ios_apps_for_app_store", "top_grossing_mac_apps_for_app_store", "top_grossing_ipad_apps_for_app_store", "get_lyrics_for_youtube_music_api_detailed_", "korean_baby_girl_names_for_korean_baby_name_ranking", "zipcode_for_ap_sample", "gets_all_the_meta_data_from_all_champions_based_on_a_rank_for_league_of_legends_champion_meta", "reviewerby_id_for_acopaer", "getcompaniessince_for_360_business_tool", "auto_complete_for_priceline_com_provider", "validationreport_for_appraisalqc", "get_global_indices_by_price_for_global_stock_market_api_data", "get_all_bitcoin_news_for_bitcoin_news", "get_scan_id_for_weblasso", "get_post_retweets_for_twitter_v5", "products_list_for_consumer_reports", "get_joke_for_dark_humor_jokes", "student_property_to_rent_detail_for_uk_real_estate_rightmove"], "api_descs": {"Finish": "No description available.", "auto_complete_for_priceline_com_provider": "Gets airport and city ids for the air product related to words in passed string.", "get_all_bitcoin_news_for_bitcoin_news": "This endpoint will return back all the news across all the major bitcoin news site from all over the world", "get_global_indices_by_price_for_global_stock_market_api_data": "World financial market to get global Indices with respect to price", "get_joke_for_dark_humor_jokes": "Fetch a joke.", "get_lyrics_for_youtube_music_api_detailed_": "Returns lyrics of a song or video.", "get_post_retweets_for_twitter_v5": "Get Post Retweets By Post ID", "get_scan_id_for_weblasso": "Run a scan against a target URL and receive a scan ID to obtain scan results or check scan status at a later time.\n\nProvide an optional callback URL to receive scan results automatically once the scan is completed (ensure that the callback URL accepts POST requests)", "getcompaniessince_for_360_business_tool": "Get companies modified since", "gets_all_the_meta_data_from_all_champions_based_on_a_rank_for_league_of_legends_champion_meta": "Fetches all the Meta Data in a provided rank.\nPossible parameters are:\n- placements\n- iron\n- bronze\n- silver\n- gold\n- platinum\n- diamond\n- master\n- grandmaster\n- challenger\nThey also can be combined with a 'comma-sign': e.g. challenger**,**master", "korean_baby_girl_names_for_korean_baby_name_ranking": "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count.", "new_ios_apps_for_app_store": "Get list of new ios apps", "products_list_for_consumer_reports": "List products from different categories", "reviewerby_id_for_acopaer": "# Description GET Reviewer By id\r\n\r\nThis url is to get a Reviewer by id is type `GET`, the url is `BASE_URL/reviewers/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Reviewer to get details about this Reviewer.", "student_property_to_rent_detail_for_uk_real_estate_rightmove": "Student property to rent for detail", "top_grossing_ios_apps_for_app_store": "Get list of the top grossing ios apps", "top_grossing_ipad_apps_for_app_store": "Get list of the top grossing ipad apps", "top_grossing_mac_apps_for_app_store": "Get list of the top grossing mac apps", "validationreport_for_appraisalqc": "The API returns the XML validation report of the Appraisal Report uploaded", "zipcode_for_ap_sample": "Get locations by zipcode"}, "aseqs": [{"api_name": "top_grossing_ios_apps_for_app_store", "api_action": "\nAction: top_grossing_ios_apps_for_app_store\nAction Input: {}", "api_reaction": null}, {"api_name": "new_ios_apps_for_app_store", "api_action": "\nAction: new_ios_apps_for_app_store\nAction Input: {}", "api_reaction": null}, {"api_name": "top_grossing_ios_apps_for_app_store", "api_action": "\nAction: top_grossing_ios_apps_for_app_store\nAction Input: {}", "api_reaction": null}, {"api_name": "top_grossing_mac_apps_for_app_store", "api_action": "\nAction: top_grossing_mac_apps_for_app_store\nAction Input: {}", "api_reaction": null}, {"api_name": "top_grossing_ipad_apps_for_app_store", "api_action": "\nAction: top_grossing_ipad_apps_for_app_store\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the top grossing iOS apps and their categories and pricing, as well as get information about new iOS apps released recently using the available APIs,\n\t\"api_name\": \"top_grossing_ios_apps_for_app_store\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "top_grossing_ios_apps_for_app_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_grossing_ios_apps_for_app_store", "api_action": "\nAction: top_grossing_ios_apps_for_app_store\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_grossing_ios_apps_for_app_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_grossing_ios_apps_for_app_store", "api_action": "\nAction: top_grossing_ios_apps_for_app_store\nAction Input: {}", "api_reaction": null}}]}
{"URL": "33408", "query": "Greetings! I'm analyzing emission data and need the status and details of the emission table. Can you provide me with that information? Also, I would like to know the status of the key sentence extraction task. Thank you!", "api_names": ["statusforemissiontable_for_carbon_management", "statusforkeysentenceextraction_for_carbon_management", "Finish", "matches_for_fdj", "openid_connecter_for_acrosuite_oauther", "get_cards_collection_for_lost_ark_simple", "search_for_soundcloud", "get_all_domaines_for_domaine_nc", "list_topics_for_textking_translation", "get_one_anime_by_ranking_for_anime_db", "exchanges_list_for_trading_view", "send_message_for_discord_webhook_api", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking", "normal_call_for_kiann_options_project", "eventgames_for_esportapi"], "api_descs": {"Finish": "No description available.", "eventgames_for_esportapi": "Get event games for a specific E-Sports event by providing the event ID.", "exchanges_list_for_trading_view": "List all available and supported exchanges", "get_all_domaines_for_domaine_nc": "Get all domain names", "get_cards_collection_for_lost_ark_simple": "Get List of all** Lost Ark Cards** details", "get_one_anime_by_ranking_for_anime_db": "Get anime by ranking", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "list_topics_for_textking_translation": "Returns a collection of all available topics.", "matches_for_fdj": "Latest Matches for FDJ", "normal_call_for_kiann_options_project": "params = {\"k\": 1.0, \"f\": 1.0, \"t\": 1.0, \"v\":0.3, \"r\":0.0, \"cp\":\"call\"}", "openid_connecter_for_acrosuite_oauther": "OAuth/OpenID Connect(OIDC) authentication information from the third-party providers(**Google/LINE/YahooJP/Azure**) will be available. \nAfter calling the API, you will get an OIDC list without **oAuthCode** or OIDC authentication information with **oAuthCode**.\nWhen you get an OIDC list, you may choose an **OAuthURL** to call it, then you will get OIDC authentication information.\nAnd it is not necessary to input redirectHost/redirectPort parameter here.\nPlease refer to the sample[**OIDC Authentication**] in the following demo page.\nhttps://mars.restgate.net/intro/en/suite_en.html#oauther\n\nサードパティプロバイダー(**Google/LINE/YahooJP/Azure**)からOAuth **OpenID Connect(OIDC)**認証情報を取得します。\nこのAPIを呼び出したら、OIDC一覧(**oAuthCode**付きなしの場合)又は認証情報(**oAuthCode**付きの場合)が戻られます。\nOIDC一覧が戻された場合は、続いて**OAuthURL**を選んで呼び出すと、該当する認証情報を取得できます。\nまたここでは、redirectHost/redirectPortのパラメータを無視してください。\n実際の挙動は、下記のデモページに呼び出しサンプル[**OIDC認証**]をご参考ください。\nhttps://mars.restgate.net/intro/jp/suite_jp.html#oauther\n<hr>\nThe following external document is for directly calling AcroSuite original APIs. Some Auth parameters may be neglected here.\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=2&withTitle=true&apiCode=02301016\n\n下記の外部ドキュメントは、AcroSuiteオリジナルAPIに対する資料であり、ここでは一部の認証パラメータを省略します。\nhttps://mars.acrochannel.com:8443/AcroSuite/v0_1/CstService/apiInfo/doc?appId=10006&language=1&withTitle=true&apiCode=02301016", "search_for_soundcloud": "Search the soundcloud, possible values for type are \"track\", \"user\", \"playlist\", \"all\".", "send_message_for_discord_webhook_api": "Allows you to send a message with a webhook. More information in the docs.", "statusforemissiontable_for_carbon_management": "Get results in details from the task id.", "statusforkeysentenceextraction_for_carbon_management": "Get results in details from the task id."}, "aseqs": [{"api_name": "statusforemissiontable_for_carbon_management", "api_action": "\nAction: statusforemissiontable_for_carbon_management\nAction Input: {}", "api_reaction": null}, {"api_name": "statusforkeysentenceextraction_for_carbon_management", "api_action": "\nAction: statusforkeysentenceextraction_for_carbon_management\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "statusforemissiontable_for_carbon_management"}}, {"state": "generated_by_agent", "aseq": {"api_name": "statusforkeysentenceextraction_for_carbon_management"}}, {"state": "generated_by_agent", "aseq": {"api_name": "statusforemissiontable_for_carbon_management"}}]}
{"URL": "56945", "query": "I am organizing a virtual event and I want to include inspiring quotes from famous authors. Can you suggest some well-known authors and their popular quotes?", "api_names": ["Finish", "author_for_quotes_diffusion", "random_for_quotes_diffusion", "get_geocoding_for_geocoding_places", "getjp2header_for_helioviewer_v1", "getpeople_for_azure", "spam_database_lookup_for_viewdns", "get_the_cities_for_location", "v1_country_for_country_by_api_ninjas", "image_search_for_google_search_results_scraper", "wnba_scoreboard_for_wnba_api", "amenities_for_airbnb_listings", "united_states_small_businesses_revenue_for_covid_19_economic_impact", "getfacelenses_for_snapchat", "player_for_national_football_players"], "api_descs": {"Finish": "No description available.", "amenities_for_airbnb_listings": "Retrieves amenities ids And descriptions. Returns 50 results", "author_for_quotes_diffusion": " ", "get_geocoding_for_geocoding_places": "Get complete readable place info in prefered language based on given coordinate in latitude and longitude.", "get_the_cities_for_location": "Get the cities.", "getfacelenses_for_snapchat": "getFaceLenses", "getjp2header_for_helioviewer_v1": "Get the XML header embedded in a JPEG2000 image. Includes the FITS header as well as a section of Helioviewer-specific metadata.", "getpeople_for_azure": "Get Azure influencers.", "image_search_for_google_search_results_scraper": "Runs a standard image search and parses the output to a clean json object.", "player_for_national_football_players": "Returns player info of player specified (i.e. name, number, position, team). Use hyphenated name with capitals (i.e. Tom-Brady)", "random_for_quotes_diffusion": " ", "spam_database_lookup_for_viewdns": "Find out if your mail server is listed in any spam databases.", "united_states_small_businesses_revenue_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change of small businesses revenue seasonally adjusted relative to January 4 - 31, 2020.", "v1_country_for_country_by_api_ninjas": "API Ninjas Country API endpoint.", "wnba_scoreboard_for_wnba_api": "This endpoint provides you with the WNBA scoreboard data for a specified date if available."}, "aseqs": [{"api_name": "author_for_quotes_diffusion", "api_action": "\nAction: author_for_quotes_diffusion\nAction Input: {}", "api_reaction": null}, {"api_name": "random_for_quotes_diffusion", "api_action": "\nAction: random_for_quotes_diffusion\nAction Input: {}", "api_reaction": null}, {"api_name": "random_for_quotes_diffusion", "api_action": "\nAction: random_for_quotes_diffusion\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_for_quotes_diffusion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "author_for_quotes_diffusion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "author_for_quotes_diffusion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "author_for_quotes_diffusion"}}]}
{"URL": "78181", "query": "I am planning a family trip to watch a football match. Can you provide me with the latest odds and matches available on Dreambet? We want to make sure we choose the best match to attend and place our bets accordingly.", "api_names": ["odds_for_dreambet", "matches_for_dreambet", "Finish", "earthquakes_by_date_for_everyearthquake", "list_of_bodyparts_for_exercisedb", "market_aggressive_small_caps_for_mboum_finance", "get_all_countries_for_world_countries", "free_json_endpoint_for_free_phone_number_lookup_and_validation_api", "domain_search_for_domain_name_search", "nhl_team_list_for_nhl_api", "characters_for_jet_set_radio_api", "create_for_sudoku_all_purpose_pro", "git_all_world_currencies_prices_for_cion_prices_api", "zipcodesbyids_for_mapreflex", "form_check_instance_for_botlibre", "getpetbyid_for_pet_store", "phone_call_qr_code_for_scanova_qr_code", "get_zip_code_by_usps_for_zillow_data_v2"], "api_descs": {"Finish": "No description available.", "characters_for_jet_set_radio_api": "Returns a list of all Characters", "create_for_sudoku_all_purpose_pro": "Image output is base64 encoded! See https://myv.at/api/sudoku/code-examples/ how to decode back to HTML, SVG, JPG, PNG, GIF, WEBP easily!", "domain_search_for_domain_name_search": "Search for domains by keyword / query. Supports all 341 TLDs available on Google Domains. Each result includes availability information, pricing, quality aspects and more data available on Google Domains.", "earthquakes_by_date_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world, within a specified date range.", "form_check_instance_for_botlibre": "The form-check-instance API validates that a bot ID or name exists, and returns the bot's details.", "free_json_endpoint_for_free_phone_number_lookup_and_validation_api": "Please see [https://phone-number-api.com/docs/json](url) for details", "get_all_countries_for_world_countries": "get all countries", "get_zip_code_by_usps_for_zillow_data_v2": "Get zip code by usps", "getpetbyid_for_pet_store": "Returns a single pet", "git_all_world_currencies_prices_for_cion_prices_api": "This end point will return back prices of world currencies", "list_of_bodyparts_for_exercisedb": "Fetch a list of available body parts", "market_aggressive_small_caps_for_mboum_finance": "Small cap stocks with earnings growth rates better than 25%.", "matches_for_dreambet": "Latest Matches for Dreambet", "nhl_team_list_for_nhl_api": "This API endpoint will return the list of all NHL teams", "odds_for_dreambet": "Latest Odds for Dreambet", "phone_call_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with the phone number. When scanned, the QR Code will prompt the scanning device to 'dial the number'.", "zipcodesbyids_for_mapreflex": "Get boundaries of given ZIP Codes (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com"}, "aseqs": [{"api_name": "matches_for_dreambet", "api_action": "\nAction: matches_for_dreambet\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_dreambet", "api_action": "\nAction: odds_for_dreambet\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_dreambet", "api_action": "\nAction: odds_for_dreambet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_dreambet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_dreambet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_dreambet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_dreambet"}}]}
{"URL": "63959", "query": "I'm a filmmaker and I want to explore the latest news and updates in the movie industry. Can you provide me with the top trending movie articles? Additionally, I would like to search for articles published in the last week.", "api_names": ["basic_search_for_kubric_the_comprehensive_movie_news_api", "advanced_search_for_kubric_the_comprehensive_movie_news_api", "trending_for_kubric_the_comprehensive_movie_news_api", "Finish", "view_simulation_for_geolocation_simulation_for_mobile_apps", "solve_for_captcha", "getuserbyname_for_urltest", "stations_get_information_deprecated_for_airvisual", "sky_news_arabic_for_arabic_news_api", "get_item_by_id_for_rpg_items", "findbypincode_for_india_pincode_api", "fb_for_fb_video_reels", "searching_for_videos_for_aol_on_network", "list_of_sources_for_energy_price_news", "properties_detail_for_bayut", "search_by_company_name_for_uganda_company_data", "get_a_random_artistic_director_for_hautecouture_api", "login_for_capitall_fitness", "teams_get_rankings_for_divanscore", "app_reviews_for_steam"], "api_descs": {"Finish": "No description available.", "advanced_search_for_kubric_the_comprehensive_movie_news_api": "The `/news/advanced/search` endpoint allows you to search for movie news articles by applying various filters such as date, source, type, and sentiment. It offers a versatile and customizable way to explore the latest news and updates in the movie industry.", "app_reviews_for_steam": "Get last n reviews of an app", "basic_search_for_kubric_the_comprehensive_movie_news_api": "The `/news/basic/search` endpoint allows you to search for movie news articles.", "fb_for_fb_video_reels": "Get Facebook video", "findbypincode_for_india_pincode_api": "“Find By PinCode” API is JSON API to query India Pincode.", "get_a_random_artistic_director_for_hautecouture_api": "Renders a random artistic director", "get_item_by_id_for_rpg_items": "Get all RPG items", "getuserbyname_for_urltest": "Get user by user name", "list_of_sources_for_energy_price_news": "See which regions we have news sources from.", "login_for_capitall_fitness": "login details", "properties_detail_for_bayut": "Get detail information of a property", "search_by_company_name_for_uganda_company_data": "Perform a search on the Uganda company register by name", "searching_for_videos_for_aol_on_network": "You can search our library using this request:", "sky_news_arabic_for_arabic_news_api": "مسار يسترجع اخر الاخبار من موقع سكاي نيوز عربي", "solve_for_captcha": "Solve a Captcha given an image URL", "stations_get_information_deprecated_for_airvisual": "Get information at specific station by its id", "teams_get_rankings_for_divanscore": "Get rankings of specific team", "trending_for_kubric_the_comprehensive_movie_news_api": "The `/trending` endpoint is a powerful feature of the Kubric Movie News API, designed to provide users with the most recent and popular movie news articles. This endpoint returns the top 50 trending movie articles, ensuring users stay up-to-date with the latest and most engaging content from the world of cinema.", "view_simulation_for_geolocation_simulation_for_mobile_apps": "Enter simulationID in route"}, "aseqs": [{"api_name": "trending_for_kubric_the_comprehensive_movie_news_api", "api_action": "\nAction: trending_for_kubric_the_comprehensive_movie_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "basic_search_for_kubric_the_comprehensive_movie_news_api", "api_action": "\nAction: basic_search_for_kubric_the_comprehensive_movie_news_api\nAction Input: {\n  \"q\": \"movie\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "advanced_search_for_kubric_the_comprehensive_movie_news_api", "api_action": "\nAction: advanced_search_for_kubric_the_comprehensive_movie_news_api\nAction Input: {\n  \"q\": \"movie\",\n  \"maxdate\": \"2023-05-09\",\n  \"mindate\": \"2023-05-02\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "trending_for_kubric_the_comprehensive_movie_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "advanced_search_for_kubric_the_comprehensive_movie_news_api", "api_action": "\nAction: advanced_search_for_kubric_the_comprehensive_movie_news_api\nAction Input: {\r\n\"dateRange\": \"last_week\",\r\n\"filters\": {}\r\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "advanced_search_for_kubric_the_comprehensive_movie_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_kubric_the_comprehensive_movie_news_api", "api_action": "\nAction: trending_for_kubric_the_comprehensive_movie_news_api\nAction Input: {}", "api_reaction": null}}]}
{"URL": "28073", "query": "I'm an avid hiker and I want to explore new trails in a particular region. Can you provide a list of nearby hiking trails along with their details and geographic coordinates? Additionally, I'm interested in finding nearby attractions and facilities.", "api_names": ["Finish", "places_list_by_bounding_box_for_places", "places_list_by_radius_nearby_search_for_places", "verify_pan_card_for_pan_card_verification_at_lowest_price", "get_all_world_footbol_news_live_for_live_world_futbol_news", "product_details_for_axesso_otto_data_service", "fetch_events_for_calendars", "nearby_stores_for_target_com_shopping_api", "get_a_user_s_orders_for_tradier", "sms_for_insafel", "get_city_by_id_for_geography_v2", "latest_mmo_news_for_mmo_games", "getsponsorships_for_election2020_smartable", "get_background_for_dungeons_and_dragon_5e", "deal_lookup_for_cheapshark_game_deals"], "api_descs": {"Finish": "No description available.", "deal_lookup_for_cheapshark_game_deals": "Get info for a specific deal. Response includes game info, any cheaper current deals, and the cheapest historical price. As elsewhere, dealID is encoded", "fetch_events_for_calendars": "Fetches a list of events in either JSON or iCalendar format for the selected calendar", "get_a_user_s_orders_for_tradier": "", "get_all_world_footbol_news_live_for_live_world_futbol_news": "This end point will return back all news about footbol.", "get_background_for_dungeons_and_dragon_5e": "Returns information about the D&D background in JSON format.", "get_city_by_id_for_geography_v2": "get city by id", "getsponsorships_for_election2020_smartable": "Get sponsorships", "latest_mmo_news_for_mmo_games": "Latest MMO News powered by MMOBomb.", "nearby_stores_for_target_com_shopping_api": "Returns the list of stores near to specified ZIP code.", "places_list_by_bounding_box_for_places": "Method returns all objects (or number of objects) in the given boundary box optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.", "places_list_by_radius_nearby_search_for_places": "Method returns objects closest to the selected point optionally filtered by parameters. Only basic information is include in response: xid, name, kinds, osm, wikidata of each object. Depending on the chosen format, the response is either a simple array of objects (with a smaller volume) or an object in GeoJSON format.", "product_details_for_axesso_otto_data_service": "Query product details information.", "sms_for_insafel": "Send", "verify_pan_card_for_pan_card_verification_at_lowest_price": "Instant PAN Card Verification using government database check.\n\nThis PAN Card Verification API instantly verifies details of a PAN Card by confirming them from the Government database.\n\nThis makes your onboarding process faster, safer and smarter. With our PAN verification, you can be confident that the individuals or merchants you onboard hold a valid PAN card and have provided you with the right identity proof."}, "aseqs": [{"api_name": "places_list_by_radius_nearby_search_for_places", "api_action": "\nAction: places_list_by_radius_nearby_search_for_places\nAction Input: {\n  \"lang\": \"en\",\n  \"radius\": 5000,\n  \"lon\": -122.4194,\n  \"lat\": 37.7749,\n  \"kinds\": \"hiking_trail\"\n}", "api_reaction": null}, {"api_name": "places_list_by_bounding_box_for_places", "api_action": "\nAction: places_list_by_bounding_box_for_places\nAction Input: {\n  \"lon_min\": -122.45,\n  \"lat_min\": 37.72,\n  \"lon_max\": -122.38,\n  \"lat_max\": 37.8,\n  \"lang\": \"en\",\n  \"kinds\": \"hiking_trail\"\n}", "api_reaction": null}, {"api_name": "places_list_by_radius_nearby_search_for_places", "api_action": "\nAction: places_list_by_radius_nearby_search_for_places\nAction Input: {\n  \"lang\": \"en\",\n  \"radius\": 5000,\n  \"lon\": -122.4194,\n  \"lat\": 37.7749\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "places_list_by_radius_nearby_search_for_places"}}, {"state": "generated_by_agent", "aseq": {"api_name": "places_list_by_radius_nearby_search_for_places", "api_action": "\nAction: places_list_by_radius_nearby_search_for_places\nAction Input: {\n  \"lang\": \"en\",\n  \"radius\": 10000,\n  \"lon\": -122.4194,\n  \"lat\": 37.7749,\n  \"kinds\": [\n    \"hiking_trail\",\n    \"attraction\",\n    \"facility\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "places_list_by_radius_nearby_search_for_places", "api_action": "\nAction: places_list_by_radius_nearby_search_for_places\nAction Input: {\n  \"lang\": \"en\",\n  \"radius\": 5000,\n  \"lon\": -122.4194,\n  \"lat\": 37.7749,\n  \"kinds\": \"attraction,hiking_facility\"\n}", "api_action_id": "places_list_by_radius_nearby_search_for_places_2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "places_list_by_radius_nearby_search_for_places", "api_action": "\nAction: places_list_by_radius_nearby_search_for_places\nAction Input: {\n  \"lang\": \"en\",\n  \"radius\": 5000,\n  \"lon\": -122.4194,\n  \"lat\": 37.7749,\n  \"kinds\": \"attraction,facility\"\n}", "api_reaction": null}}]}
{"URL": "44630", "query": "Could you check my current mail and provide me with the details of the latest email? I would like to know the sender, subject, and timestamp.", "api_names": ["current_mail_for_apimail10", "Finish", "entreprise_par_rid_for_ridet_nc", "league_markets_straight_for_pinaculo", "user_data_by_name_for_tiktok_solutions", "airlineaircrafts_for_flightera_flight_data", "odds_for_betano", "yesterday_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions"], "api_descs": {"Finish": "No description available.", "airlineaircrafts_for_flightera_flight_data": "A list of plane registrations for a given airline. Can search by ident only.\nOnly returns currently active aircraft", "current_mail_for_apimail10": "Current Mail", "entreprise_par_rid_for_ridet_nc": "Affiche les informations d'une entreprise de la Nouvelle Calédonie à partir de son rid.", "league_markets_straight_for_pinaculo": "Get league markets straight.", "odds_for_betano": "Latest Odds by Betano.", "user_data_by_name_for_tiktok_solutions": "Get** User Data** by** Name**", "yesterday_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers yesterday over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."}, "aseqs": [{"api_name": "current_mail_for_apimail10", "api_action": "\nAction: current_mail_for_apimail10\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "current_mail_for_apimail10"}}, {"state": "generated_by_agent", "aseq": {"api_name": "current_mail_for_apimail10"}}]}
{"URL": "81962", "query": "Get the media information for the media with id '2789566164107201469_25025320'. Also, fetch the user feed for the user with id '25025320'.", "api_names": ["get_user_feed_for_instagram_v7", "get_media_info_for_instagram_v7", "Finish", "list_movies_for_list_movies", "facilities_lookup_for_egypt_api", "get_chatroom_rules_for_kick_com_api_kick_api", "child_comments_for_100_success_instagram_api_scalable_robust", "status_list_for_sitedomain", "free_job_postings_api_for_arbeitnow_free_job_board", "getfileslist_for_aspose_email_cloud", "current_snow_conditions_for_ski_resort_forecast", "match_boxscore_for_basketball_data", "products_list_for_wayfair", "get_all_global_recession_news_for_global_recession_live", "random_quotes_for_quotes_v2"], "api_descs": {"Finish": "No description available.", "child_comments_for_100_success_instagram_api_scalable_robust": "Get child comments list", "current_snow_conditions_for_ski_resort_forecast": "Returns the current snow conditions for a given resort name", "facilities_lookup_for_egypt_api": "This endpoint allows you to get facilities in Egypt like hospital, bank, college, etc. by providing optional query parameters for facility type, gov (governorate)  and city. It returns a list of facilities that match the query parameters.", "free_job_postings_api_for_arbeitnow_free_job_board": "Built in Berlin, Arbeitnow helps companies hire candidates with visa sponsorship / four day work week / remote opportunities.\n\nFour day work weeks - Companies offering better work life balance with a shorter work week results in improved productivity and helps retain candidates. Get your company listed on the [4 day work week jobs](https://arbeitnow.com/4-day-work-week-jobs) page\n\nHiring without Whiteboard - No trivia questions or stress inducing whiteboard interviews? We will include you in our popular section among tech & software developers - [hiring without whiteboard.](https://arbeitnow.com/hiring-without-whiteboard)\n\n[Jobs with Salary / Compensation](https://arbeitnow.com/jobs-with-salary) information helps bring transparency to candidates on what they can expect from an offer.", "get_all_global_recession_news_for_global_recession_live": "This endpoint will return the latest articles from 7 publications about worldwide recession news.", "get_chatroom_rules_for_kick_com_api_kick_api": "Get Chatroom Rules", "get_media_info_for_instagram_v7": "Get information about a media by providing the media id.", "get_user_feed_for_instagram_v7": "Get the feed of a user", "getfileslist_for_aspose_email_cloud": " ", "list_movies_for_list_movies": "Used to list and search through out all the available movies. Can sort, filter, search and order the results", "match_boxscore_for_basketball_data": "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "products_list_for_wayfair": "List products with filters and options", "random_quotes_for_quotes_v2": "Get a Random Quote on Each Request", "status_list_for_sitedomain": "審核狀態清單"}, "aseqs": [{"api_name": "get_media_info_for_instagram_v7", "api_action": "\nAction: get_media_info_for_instagram_v7\nAction Input: {\n  \"is_id\": \"2789566164107201469_25025320\"\n}", "api_reaction": null}, {"api_name": "get_user_feed_for_instagram_v7", "api_action": "\nAction: get_user_feed_for_instagram_v7\nAction Input: {\n  \"is_id\": 25025320\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_media_info_for_instagram_v7"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_feed_for_instagram_v7", "api_action": "{\"user_id\": \"25025320\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_media_info_for_instagram_v7"}}]}
{"URL": "44401", "query": "My family and I enjoy watching football matches together. Can you fetch the latest odds from Admiralbet for the upcoming matches? It would be helpful to have the odds for both the home and away teams, as well as the odds for a draw.", "api_names": ["odds_for_admiralbet", "Finish", "topic_topic_for_uncovered_treasure", "global_metric_for_cryptocurrency_markets", "convert_from_one_unit_to_another_for_measurement_unit_converter", "featuredtournamentsevents_for_sportifyapi", "list_applications_for_geolocation_simulation_for_mobile_apps", "get_workout_plan_for_workout_planner", "total_amount_for_soti_sync", "past_1_week_for_the_sandbox_sand"], "api_descs": {"Finish": "No description available.", "convert_from_one_unit_to_another_for_measurement_unit_converter": "Converts the given quantity in one unit to the equivalent quantity in another, for a given measurement, and returns a detailed answer.", "featuredtournamentsevents_for_sportifyapi": "Featured Tournaments Events", "get_workout_plan_for_workout_planner": "Get Workout Plans\n\nThis api request can be used to get Workout plan based on:\n\n- Time duration\n- Target Muscle\n- Location\n- Equipment\n\nHence api call takes 4 query parameters:\n\n- time\n- muscle\n- location\n- equipment", "global_metric_for_cryptocurrency_markets": "Current cryptocurrency global metrics.", "list_applications_for_geolocation_simulation_for_mobile_apps": "List all your applications", "odds_for_admiralbet": "Latest Odds by Admiralbet.", "past_1_week_for_the_sandbox_sand": "Get price data for past 1 week.\n\n~hourly data points.", "topic_topic_for_uncovered_treasure": "Get entries from a specific topic", "total_amount_for_soti_sync": "Total Amount to be paid"}, "aseqs": [{"api_name": "odds_for_admiralbet", "api_action": "\nAction: odds_for_admiralbet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_admiralbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_admiralbet", "api_action": "{\"match_type\": \"PremierLeague\", \"events_count\": 5}", "api_input": "{}"}}]}
{"URL": "44430", "query": "As a football fan, I want to know the roster of the New England football team and the positions of the players. Can you provide me with the names, positions, and numbers of all the players in the team?", "api_names": ["all_players_for_national_football_players", "positions_for_national_football_players", "Finish", "team_roster_for_national_football_players", "getproductbyid_for_13", "cars_for_car_data_v2", "disposable_domain_and_suggest_domain_for_fast_email_verifier", "special_offers_for_flight_data_v2", "set_contribution_for_mymemory_translation_memory", "products_v3_detail_for_asos", "statroll_for_diceforge", "searchstation_for_radio_world_75_000_worldwide_fm_radio_stations_", "get_social_timestamps_1d_for_finance_social_sentiment_for_twitter_and_stocktwits", "title_get_popular_movies_by_genre_deprecated_for_imdb", "dax_point_changes_for_each_month_january_august_2022_for_dax", "historical_weather_for_ai_weather_by_meteosource", "language_by_id_for_referential", "list_projects_for_textking_translation", "check_a_url_for_exerra_phishing_check", "charts_for_rainforest"], "api_descs": {"Finish": "No description available.", "all_players_for_national_football_players": "Returns all active football players.", "cars_for_car_data_v2": "Retrieve and filter lists of cars", "charts_for_rainforest": "The Charts parameters are applicable when making a request with type=charts to retrieve Charts results. The Charts page can be specified using the url parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nCharts results are retrieved from the charts page on Amazon.", "check_a_url_for_exerra_phishing_check": "Check if a URL is a known phishing attempt", "dax_point_changes_for_each_month_january_august_2022_for_dax": "Gets the actual points, gains and losses for each individual month.", "disposable_domain_and_suggest_domain_for_fast_email_verifier": "Find out if the domain is disposable and get a suggested domain.", "get_social_timestamps_1d_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped by 1 day intervals", "getproductbyid_for_13": "Retrieves an product", "historical_weather_for_ai_weather_by_meteosource": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "language_by_id_for_referential": "Find language by id translated into 20 languages", "list_projects_for_textking_translation": "Returns a collection of projects of the authorized customer.", "positions_for_national_football_players": "Returns all positions (i.e. quarterback: QB)", "products_v3_detail_for_asos": "Get detail information of product by id", "searchstation_for_radio_world_75_000_worldwide_fm_radio_stations_": "Search Radio station by keywords.\n- keyword = radio name, country name\n- limit = item limitation per page ***default 10***\n- page = page number to be displayed ***default 1***\n- order = order by ASCENDING/DISASCENDING  *(use only ASC or DESC)* ***default ASC***", "set_contribution_for_mymemory_translation_memory": "The SET api is used to save a contribution. You can either save a contribution privately with your private TM key or add it to the public collaborative TM.", "special_offers_for_flight_data_v2": "Brings the recent special offers from the airline companies back in the .XML format.", "statroll_for_diceforge": "Rolls 4d6 for generating character stats, dropping the lowest die result from the total, and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nmodifier (integer): An integer representing the modifier to apply to the total of the stat roll.", "team_roster_for_national_football_players": "Returns roster of football team. Use team abbreviation when specifying team (i.e. BUF, NE, MIA, etc.). See /teams to get team names and abbreviations", "title_get_popular_movies_by_genre_deprecated_for_imdb": "Get popular movies by genre\n* This endpoints is deprecated, use .../title/v2/get-popular-movies-by-genre instead"}, "aseqs": [{"api_name": "team_roster_for_national_football_players", "api_action": "\nAction: team_roster_for_national_football_players\nAction Input: {\n  \"team\": \"NE\"\n}", "api_reaction": null}, {"api_name": "positions_for_national_football_players", "api_action": "\nAction: positions_for_national_football_players\nAction Input: {}", "api_reaction": null}, {"api_name": "all_players_for_national_football_players", "api_action": "\nAction: all_players_for_national_football_players\nAction Input: {}", "api_reaction": null}, {"api_name": "team_roster_for_national_football_players", "api_action": "\nAction: team_roster_for_national_football_players\nAction Input: {\n  \"team\": \"NE\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "team_roster_for_national_football_players"}}, {"state": "generated_by_agent", "aseq": {"api_name": "positions_for_national_football_players"}}, {"state": "generated_by_agent", "aseq": {"api_name": "team_roster_for_national_football_players", "api_action": "\nAction: team_roster_for_national_football_players\nAction Input: {\n  \"team\": \"NE\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "team_roster_for_national_football_players", "api_action": "\nAction: team_roster_for_national_football_players\nAction Input: {\n  \"team\": \"NE\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_players_for_national_football_players"}}]}
{"URL": "69109", "query": "My company is interested in sponsoring a Serie A team and we need detailed team statistics. Can you provide us with the team statistics for shots? We need information on goals, shots, assists, crosses, saves, average kilometers traveled, headshot goals, offsides, corners, playing time, posts-crossbars, and ball possession. Additionally, please fetch the match schedule for matchday 34 in the 2022 season.", "api_names": ["team_stats_by_category_for_serie_a", "matches_list_by_season_and_matchday_for_serie_a", "Finish", "next_31_days_for_show_air_dates", "stays_properties_detail_for_booking_com_v2", "venuedetails_for_testing_v2", "downloadfile_for_groupdocs_comparison_cloud", "video_without_watermark_mp4_mp3_cover_for_tiktok_downloader_download_tiktok_videos_without_watermark", "users_for_geospark", "retrieve_user_for_drillster_2_0", "getallaccounts_for_virtual_accounts_api", "trip_details_for_flixbus", "get_other_leaderboard_base_info_for_binance_futures_leaderboard", "c_versions_for_c_code_compiler", "sms_sendernames_sender_for_smsapi_com"], "api_descs": {"Finish": "No description available.", "c_versions_for_c_code_compiler": "C Versions", "downloadfile_for_groupdocs_comparison_cloud": " ", "get_other_leaderboard_base_info_for_binance_futures_leaderboard": "Get the trader information", "getallaccounts_for_virtual_accounts_api": "To get all virtual accounts in your organisation.", "matches_list_by_season_and_matchday_for_serie_a": "Via this endpoint, you can retrieve all the matches that occurred on a given matchday in a given season. Note that we support season starting from **1990** till **2022**, and matchday between **1** and **38**.", "next_31_days_for_show_air_dates": "Shows airing in the next 31 days", "retrieve_user_for_drillster_2_0": "Retrieves (other) user details.", "sms_sendernames_sender_for_smsapi_com": " ", "stays_properties_detail_for_booking_com_v2": "Get detail", "team_stats_by_category_for_serie_a": "This endpoints allows you to retrieve players statistics accross different categories. Possible categories are: goals, shots, assists, crosses, saves, avgkmtraveled, headshotgoals , offsides,  corners , playingtime, posts-crossbars ,ballpossession]", "trip_details_for_flixbus": "Get a trip details by trip uid", "users_for_geospark": "Get users details", "venuedetails_for_testing_v2": "Venue Details", "video_without_watermark_mp4_mp3_cover_for_tiktok_downloader_download_tiktok_videos_without_watermark": "video without watermark mp4 mp3 and cover only\nwith light weight responses between 300-450ms or lower depending on your server geo loc"}, "aseqs": [{"api_name": "team_stats_by_category_for_serie_a", "api_action": "\nAction: team_stats_by_category_for_serie_a\nAction Input: {\n  \"category\": \"shots\"\n}", "api_reaction": null}, {"api_name": "matches_list_by_season_and_matchday_for_serie_a", "api_action": "\nAction: matches_list_by_season_and_matchday_for_serie_a\nAction Input: {\n  \"matchday\": 34,\n  \"year\": 2022\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "team_stats_by_category_for_serie_a"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_list_by_season_and_matchday_for_serie_a"}}, {"state": "generated_by_agent", "aseq": {"api_name": "team_stats_by_category_for_serie_a", "api_action": "\nAction: team_stats_by_category_for_serie_a\nAction Input: {\n  \"category\": \"shots\",\n  \"metrics\": [\n    \"goals\",\n    \"shots\",\n    \"assists\",\n    \"crosses\",\n    \"saves\",\n    \"avgkmtraveled\",\n    \"headshotgoals\",\n    \"offsides\",\n    \"corners\",\n    \"playingtime\",\n    \"posts-crossbars\",\n    \"ballpossession\"\n  ]\n}", "api_reaction": null}}]}
{"URL": "59377", "query": "My friend is working on a design project and needs some Lorem Ipsum text. Can you generate ten sentences using the Sentence API? Also, provide a single word from the generated text using the Word API.", "api_names": ["sentence_for_lorem_ipsum_api", "word_for_lorem_ipsum_api", "Finish", "getuser_for_boldsign", "getimage_for_background_remover", "get_car_makers_for_infocarsapi", "tour_rankings_for_golf_leaderboard_data", "game_for_game", "generate_api_key_for_qr_code_dynamic_and_static", "get_all_competitions_for_viperscore", "stockprice_for_indian_stock_exchange_api", "get_all_global_recession_news_for_global_recession_live"], "api_descs": {"Finish": "No description available.", "game_for_game": "get game", "generate_api_key_for_qr_code_dynamic_and_static": "From this endpoint you can generate a single api key.\n\nIt will be used to link all the qr code created, and allow any changes.\n\nImportant: Keep in mind that once generated, it is necessary that you store this key well, since it is not possible to recover it, and without it, you do not have access to change any of your QR Codes.", "get_all_competitions_for_viperscore": "With \"Get all competitions\" you'll receive a list with top competitions (like NFL, Premier League, ...) and all competitions from every sport.", "get_all_global_recession_news_for_global_recession_live": "This endpoint will return the latest articles from 7 publications about worldwide recession news.", "get_car_makers_for_infocarsapi": "This endpoint will return back all car makers supported.", "getimage_for_background_remover": "Retuns the result of an image that was previously handled by autoremove route for the given image Id.\naccepts two parameters:\n  - imageId: The Id of the image to get.\n  - recompute: bollean, if set to true, asks the server to remove the backgorund again for the specified ID (costs credits).\n", "getuser_for_boldsign": " ", "sentence_for_lorem_ipsum_api": "Create lorem ipsum by defining the number of sentences", "stockprice_for_indian_stock_exchange_api": "Enter the SYMBOL such as TATAMOTORS, M&M etc as a parameter at the endpoint and it will give your the Live Price updates from exchange.", "tour_rankings_for_golf_leaderboard_data": "See player rankings accross the various tours given a `tour_id` and `season`", "word_for_lorem_ipsum_api": "Create lorem ipsum by defining the number of words"}, "aseqs": [{"api_name": "sentence_for_lorem_ipsum_api", "api_action": "\nAction: sentence_for_lorem_ipsum_api\nAction Input: {}", "api_reaction": null}, {"api_name": "word_for_lorem_ipsum_api", "api_action": "\nAction: word_for_lorem_ipsum_api\nAction Input: {\"amount\": 1}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "sentence_for_lorem_ipsum_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "word_for_lorem_ipsum_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "sentence_for_lorem_ipsum_api", "api_action": "\nAction: sentence_for_lorem_ipsum_api\nAction Input: {}", "api_reaction": null}}]}
{"URL": "51451", "query": "I'm trying to solve a pocket cube with the position GBWGYOGYRYOORWROBRWYGWBB. Can you generate a random optimal solution for this cube and also provide all the solutions for this cube position?", "api_names": ["getrandomsolution_for_pocket_cube_solver", "getallsolutions_for_pocket_cube_solver", "Finish", "today_s_international_current_affairs_for_current_affairs_of_india", "search_for_meme_generator_and_template_database", "get_all_active_users_for_pulsar", "analyze_v2_for_seo_checker", "list_a_project_s_jobs_for_textking_translation", "search_video_for_tiktok_video_no_watermark_v2", "get_product_search_results_for_basic_amazon_scraper", "retrieve_bundles_for_opensea_v2", "get_tenant_by_id_for_mongodb_wix", "similar_words_for_dictionary_translation_hablaa", "get_a_value_for_kvstore", "get_a_specific_remote_job_by_id_for_remote_jobs_api"], "api_descs": {"Finish": "No description available.", "analyze_v2_for_seo_checker": "analyze page speed with more results information", "get_a_specific_remote_job_by_id_for_remote_jobs_api": "Using the id of the job returned from /jobs route, get more details about a specific job", "get_a_value_for_kvstore": "Read the value", "get_all_active_users_for_pulsar": "Get all active users in system.", "get_product_search_results_for_basic_amazon_scraper": "GET Product Search Results: Get product offers from a search query.", "get_tenant_by_id_for_mongodb_wix": "Get Tenant by Id", "getallsolutions_for_pocket_cube_solver": "Returns json data consisting of all the solutions of a given cube position.", "getrandomsolution_for_pocket_cube_solver": "Returns json data consisting of a random optimal solution of a given cube position.", "list_a_project_s_jobs_for_textking_translation": "Returns a collection of jobs for a project.", "retrieve_bundles_for_opensea_v2": "Bundles are groups of NFTs for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the NFTs inside.", "search_for_meme_generator_and_template_database": "Returns meme templates that contain a specific string. **searchString is case sensitive**", "search_video_for_tiktok_video_no_watermark_v2": "Search video", "similar_words_for_dictionary_translation_hablaa": "Get translations of similar words.", "today_s_international_current_affairs_for_current_affairs_of_india": "This endpoint provides you the international current affairs of today."}, "aseqs": [{"api_name": "getrandomsolution_for_pocket_cube_solver", "api_action": "\nAction: getrandomsolution_for_pocket_cube_solver\nAction Input: {\n  \"position\": \"GBWGYOGYRYOORWROBRWYGWBB\"\n}", "api_reaction": null}, {"api_name": "getallsolutions_for_pocket_cube_solver", "api_action": "\nAction: getallsolutions_for_pocket_cube_solver\nAction Input: {\n  \"position\": \"GBWGYOGYRYOORWROBRWYGWBB\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "I need to get all solutions and a random solution for the given cube position.", "api_name": "getallsolutions_for_pocket_cube_solver"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getallsolutions_for_pocket_cube_solver"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandomsolution_for_pocket_cube_solver", "api_action": "\nAction: getrandomsolution_for_pocket_cube_solver\nAction Input: {\n  \"position\": \"GBWGYOGYRYOORWROBRWYGWBB\"\n}", "api_reaction": null}}]}
{"URL": "29757", "query": "I want to create a language learning application and need to incorporate text to speech functionality. Can you provide me with a list of available languages for text to speech? Additionally, I would like to stream the text 'How do you say hello in Spanish?' in Spanish (Spain).", "api_names": ["send_text_to_speech_stream_for_text_to_speech", "get_language_for_text_to_speech", "Finish", "user_highlights_list_for_instagram_v13", "product_search_for_temu_com_shopping_api_realtime_api_scrapper_from_temu_com_", "fetchcampaign_for_upcall", "media_id_to_shortcode_for_instagram_api_v2", "year_end_hot_100_songs_for_billboard_v2", "trader_details_for_bybit_leaderboard", "stock_get_press_releases_for_webull", "personal_listener_for_whin", "leaguemedia_for_footapi", "leaguelastmatches_for_americanfootballapi", "search_torrents_for_movie_tv_music_search_and_download", "user_details_for_twitter"], "api_descs": {"Finish": "No description available.", "fetchcampaign_for_upcall": "Get a specific campaign", "get_language_for_text_to_speech": "get list of available language for text to speech", "leaguelastmatches_for_americanfootballapi": "Get the last matches of an American Football league for a specific tournament and season, including match timings, teams, and other relevant information.", "leaguemedia_for_footapi": "Get media for a football league, including images and videos.", "media_id_to_shortcode_for_instagram_api_v2": "Each Media on Instagram has a unique id like 2931558439012794055, but in the Url you will see it this way: https://www.instagram.com/p/Ciu_N9Qpm5d/\nThis endpoint will converts 2931558439012794055 to Ciu_N9Qpm5d", "personal_listener_for_whin": "The response is an url that you have to use as a webhook destination at the origin service. The content sent to it will be routed as a message to a whatsapp group owned by the user, or to the user.\nLearn use-cases on these videos: [grafana alerts](https://youtu.be/RvVgg0qwNDk),[Shelly notifications](https://youtu.be/B6MLlBUkyvo), [synology notifications](https://youtu.be/zeAJNuXYqH4).", "product_search_for_temu_com_shopping_api_realtime_api_scrapper_from_temu_com_": "Search for list of products by providing the keyword.", "search_torrents_for_movie_tv_music_search_and_download": "Get downloadable  torrent link by movie name.", "send_text_to_speech_stream_for_text_to_speech": "text to speech \n\ntext = the text you want to speak\n\nlanguage = default en , get the list of supported language for get /tts/speech/lang\n\n\n```\nconsole.log(response);\n        audio.pause();\n        audio.src = URL.createObjectURL(response.data);\n        audio.play();\n\n```", "stock_get_press_releases_for_webull": "Get press releases", "trader_details_for_bybit_leaderboard": "Returns full trader info.", "user_details_for_twitter": "This endpoint returns the public information about a Twitter profile", "user_highlights_list_for_instagram_v13": "Get instagram user highlights list by user id.", "year_end_hot_100_songs_for_billboard_v2": "Get the Year-End Hot 100 Songs chart."}, "aseqs": [{"api_name": "get_language_for_text_to_speech", "api_action": "\nAction: get_language_for_text_to_speech\nAction Input: {}", "api_reaction": null}, {"api_name": "send_text_to_speech_stream_for_text_to_speech", "api_action": "\nAction: send_text_to_speech_stream_for_text_to_speech\nAction Input: {\n  \"text\": \"How do you say hello in Spanish?\",\n  \"lang\": \"es-es\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_language_for_text_to_speech"}}, {"state": "generated_by_agent", "aseq": {"api_name": "send_text_to_speech_stream_for_text_to_speech", "text": "How do you say hello in Spanish?", "language": "es"}}, {"state": "generated_by_agent", "aseq": {"api_name": "send_text_to_speech_stream_for_text_to_speech", "api_action": "\nAction: send_text_to_speech_stream_for_text_to_speech\nAction Input: {\n  \"text\": \"How do you say hello in Spanish?\",\n  \"lang\": \"es-es\"\n}", "api_reaction": null}}]}
{"URL": "66430", "query": "I am a healthcare professional and I need to analyze a dataset. Please initialize the API session for me. After that, I would like to analyze the provided dataset using the session ID. Finally, fetch the outcomes from the analysis. Thank you.", "api_names": ["Finish", "getoutcomes_for_endlessmedicalapi", "initsession_for_endlessmedicalapi", "analyze_for_endlessmedicalapi", "hashtag_feed_by_name_for_tiktok_solutions", "message_read_for_zipwhip", "get_field_and_field_invite_id_for_signnow", "tradesq_for_xtream", "subscriptions_subscriptionid_teams_for_signl4_critical_mobile_alerting", "get_all_characters_for_new_girl", "get_random_champion_for_league_of_legends_galore", "search_flight_everywhere_for_skyscanner_v2", "10_year_bond_yield_for_u_s_economic_indicators", "generate_avatar_for_avatar_io_modern_avatar_placeholder_api", "autocomplete_for_locationiq", "emails_search_for_bing_search_apis", "hex_to_hsl_for_convexity", "geocode_for_ghana_api", "generate_basic_direct_image_for_qr_code_generator", "get_team_win_data_for_nfl_team_stats_v2"], "api_descs": {"10_year_bond_yield_for_u_s_economic_indicators": "Get monthly 10-Year government bond yields.", "Finish": "No description available.", "analyze_for_endlessmedicalapi": "Analyzes provided data set", "autocomplete_for_locationiq": "The Autocomplete API is a variant of the Search API that returns place predictions in response to an HTTP request.  The request specifies a textual search string and optional geographic bounds.  The service can be used to provide autocomplete functionality for text-based geographic searches, by returning places such as businesses, addresses and points of interest as a user types. The Autocomplete API can match on full words as well as substrings. Applications can therefore send queries as the user types, to provide on-the-fly place predictions.", "emails_search_for_bing_search_apis": "Search emails from search engines for related keywords.", "generate_avatar_for_avatar_io_modern_avatar_placeholder_api": "Generates the desired avatar and returns the image to the client.", "generate_basic_direct_image_for_qr_code_generator": "Generates a QR code as a direct image with limited settings. (NOTE: doesn't show correctly in RapidAPI)", "geocode_for_ghana_api": "This endpoint allows you to lookup locations in Ghana by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_all_characters_for_new_girl": "This will provide the show's characters with a tiny bit of data", "get_field_and_field_invite_id_for_signnow": "The endpoint returns field and field invite ids.", "get_random_champion_for_league_of_legends_galore": "This will go through the list of champions and return a single RANDOM champion!", "get_team_win_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' win/loss data. Parameters include a specific year.\n\nThe year parameter should be a year between these years: 1920 - current year.", "getoutcomes_for_endlessmedicalapi": "GetOutcomes", "hashtag_feed_by_name_for_tiktok_solutions": "Get **Hashtag Feed **by **Name**", "hex_to_hsl_for_convexity": "Converts  hex color code to  hsl color code", "initsession_for_endlessmedicalapi": "Initializes API Session", "message_read_for_zipwhip": "Marks the given message as read in Zipwhip's database.", "search_flight_everywhere_for_skyscanner_v2": "Use this API to get flights when the destination is everywhere or unsure.", "subscriptions_subscriptionid_teams_for_signl4_critical_mobile_alerting": " ", "tradesq_for_xtream": "Collects"}, "aseqs": [{"api_name": "initsession_for_endlessmedicalapi", "api_action": "\nAction: initsession_for_endlessmedicalapi\nAction Input: {}", "api_reaction": null}, {"api_name": "analyze_for_endlessmedicalapi", "api_action": "\nAction: analyze_for_endlessmedicalapi\nAction Input: {\n  \"sessionid\": \"BKa3lGKq8ZUZyYNf\"\n}", "api_reaction": null}, {"api_name": "getoutcomes_for_endlessmedicalapi", "api_action": "\nAction: getoutcomes_for_endlessmedicalapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "initsession_for_endlessmedicalapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "analyze_for_endlessmedicalapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getoutcomes_for_endlessmedicalapi", "api_action": "\nAction: getoutcomes_for_endlessmedicalapi\nAction Input: {\n  \"sessionid\": \"BKa3lGKq8ZUZyYNf\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "analyze_for_endlessmedicalapi", "api_action": "\nAction: analyze_for_endlessmedicalapi\nAction Input: {\n  \"sessionid\": \"BKa3lGKq8ZUZyYNf\"\n}", "api_reaction": null}}]}
{"URL": "66895", "query": "I want to create a personalized voice message for my family members. Can you provide me with a list of available voices and audios? I want to choose a voice that will resonate with each family member.", "api_names": ["get_list_of_audios_for_text_to_speech_pro", "get_list_of_voices_for_text_to_speech_pro", "Finish", "recent_changes_for_supersaas_online_bookings_and_appointment_scheduling", "docs_for_quality_porn", "get_producto_promo_for_pizzaallapala", "list_of_clubs_for_transfermarkt_db", "get_user_for_hello_world", "levels_for_jet_set_radio_api", "is_registered_on_whatsapp_get_free_token_for_whatsapp_scraper", "get_a_bot_category_group_for_lemurbot", "race_calendar_for_fia_formula_1_championship_statistics", "v1_for_versioning_free", "full_grid_search_for_local_rank_tracker", "getallstation_for_radio_world_75_000_worldwide_fm_radio_stations_"], "api_descs": {"Finish": "No description available.", "docs_for_quality_porn": "Get available routs and parameters as json.", "full_grid_search_for_local_rank_tracker": "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-down.", "get_a_bot_category_group_for_lemurbot": "Get a specific bot category group by it's id and view it's details", "get_list_of_audios_for_text_to_speech_pro": "Get List of Audios", "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices", "get_producto_promo_for_pizzaallapala": "Adsa", "get_user_for_hello_world": "get user by id", "getallstation_for_radio_world_75_000_worldwide_fm_radio_stations_": "You will get all recent stations  here, based on.\n- limit (integer)\n- order (string)\n- page (integer)\n- random (boolean)", "is_registered_on_whatsapp_get_free_token_for_whatsapp_scraper": "Free token needed, click [here](https://wa.me/34631428039?text=get-token) to get it. This endpoint returns `true` if the phone is registered on whatsapp.\nLearn how to use this endpoint on this [video](https://youtu.be/txPQ4ROpfuc).", "levels_for_jet_set_radio_api": "Returns a list of all Levels", "list_of_clubs_for_transfermarkt_db": "Get a list of clubs", "race_calendar_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the current championship schedule and information about the **next round**. Time zone is GMT +00:00 Europe/London", "recent_changes_for_supersaas_online_bookings_and_appointment_scheduling": "", "v1_for_versioning_free": "v1"}, "aseqs": [{"api_name": "get_list_of_voices_for_text_to_speech_pro", "api_action": "\nAction: get_list_of_voices_for_text_to_speech_pro\nAction Input: {}", "api_reaction": null}, {"api_name": "get_list_of_audios_for_text_to_speech_pro", "api_action": "\nAction: get_list_of_audios_for_text_to_speech_pro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_voices_for_text_to_speech_pro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_audios_for_text_to_speech_pro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_voices_for_text_to_speech_pro"}}]}
{"URL": "68525", "query": "I'm a journalist writing an article about viral videos. Can you assist me in finding trending videos and provide insights about them, including related videos?", "api_names": ["video_search_for_bing_video_search", "trending_for_bing_video_search", "Finish", "check_for_email_validator_v9", "artist_discovered_on_for_spotify_v3", "equity_daily_for_quotient", "api_v1_for_reverse_ns", "get_synonyms_for_dicolink", "supported_currencies_for_currency_converter_v2", "list_all_images_for_qrcode", "getvideo_for_heywatch_video_encoding", "22_getsendbirduser_for_category_list"], "api_descs": {"22_getsendbirduser_for_category_list": " ", "Finish": "No description available.", "api_v1_for_reverse_ns": "", "artist_discovered_on_for_spotify_v3": "Artist discovered on playlists (max 50)", "check_for_email_validator_v9": "Core api to check your email.", "equity_daily_for_quotient": "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "get_synonyms_for_dicolink": "Get synonyms of a specific word", "getvideo_for_heywatch_video_encoding": "Get Information about a specific video", "list_all_images_for_qrcode": "This endpoint allows you to list images hosted in the LinQR storage. If there are no images hosted, an empty array is returned.", "supported_currencies_for_currency_converter_v2": "get a list of currencies we support", "trending_for_bing_video_search": "Get currently trending videos.", "video_search_for_bing_video_search": "Get videos relevant for a given query."}, "aseqs": [{"api_name": "video_search_for_bing_video_search", "api_action": "\nAction: video_search_for_bing_video_search\nAction Input: {\n  \"q\": \"trending videos\",\n  \"count\": 5\n}", "api_reaction": null}, {"api_name": "trending_for_bing_video_search", "api_action": "\nAction: trending_for_bing_video_search\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "trending_for_bing_video_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_bing_video_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_bing_video_search"}}]}
{"URL": "38824", "query": "I'm conducting research on a specific topic and need comprehensive information. Can you give me an overview of the number of articles and agencies you've analyzed? Additionally, I'd like to know the 100 most popular keywords and the number of news agencies and articles they're cited from.", "api_names": ["overview_for_papercliff", "keywords_for_papercliff", "combinations_for_papercliff", "Finish", "charts_track_for_shazam", "valida_o_de_email_for_emailqualityplus", "get_top_coins_by_followers_change_for_crowdsense", "categories_for_ikea_api", "city_list_for_canadian_gas_prices", "product_reviews_for_real_time_amazon_data", "youtube_trending_overall_for_musicdata_api", "currencies_for_booking_com_v2", "image_search_for_bing_image_search", "get_subcontrol_by_control_for_risk_management_framework", "force_from_to_number_for_unitconversion", "get_product_by_brand_name_for_iherb_product_data_api"], "api_descs": {"Finish": "No description available.", "categories_for_ikea_api": "Obtain a list of all categories available in a specified country.", "charts_track_for_shazam": "Get all popular songs in specific chart", "city_list_for_canadian_gas_prices": "Returns a list of valid cities for this API when provided a valid province. Ex: 'Ontario'", "combinations_for_papercliff": "Returns the 100 most popular combinations/triples of keywords with the corresponding number of news agencies and articles from which they have been cited", "currencies_for_booking_com_v2": "Get currencies", "force_from_to_number_for_unitconversion": "Force unit conversions", "get_product_by_brand_name_for_iherb_product_data_api": "Lists all products by brand, and allows you to filter in all ways!", "get_subcontrol_by_control_for_risk_management_framework": "This endpoint will return all the subcontrols/ccis owned by a control such as AC-1. In the case of AC-1, this endpoint will return AC-1.1, AC-1.2, etc.", "get_top_coins_by_followers_change_for_crowdsense": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers change value\n\n**Definitions:**\n\n- FollowersChange: Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days\n\n\n**Details:**\n- All results are in real time", "image_search_for_bing_image_search": "Get relevant images for a given query.", "keywords_for_papercliff": "Returns the 100 most popular keywords with the corresponding number of news agencies and articles from which they have been cited", "overview_for_papercliff": "Returns summary statistics about how many keywords have been found and how many articles and agencies papercliff looked at", "product_reviews_for_real_time_amazon_data": "Get and paginate through all product reviews on Amazon.", "valida_o_de_email_for_emailqualityplus": "Validação Simples de Email", "youtube_trending_overall_for_musicdata_api": "Treding Youtube (including non-music) videos worldwide"}, "aseqs": [{"api_name": "overview_for_papercliff", "api_action": "\nAction: overview_for_papercliff\nAction Input: {}", "api_reaction": null}, {"api_name": "keywords_for_papercliff", "api_action": "\nAction: keywords_for_papercliff\nAction Input: {}", "api_reaction": null}, {"api_name": "combinations_for_papercliff", "api_action": "\nAction: combinations_for_papercliff\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "overview_for_papercliff"}}, {"state": "generated_by_agent", "aseq": {"api_name": "keywords_for_papercliff"}}, {"state": "generated_by_agent", "aseq": {"api_name": "overview_for_papercliff"}}, {"state": "generated_by_agent", "aseq": {"api_name": "overview_for_papercliff"}}]}
{"URL": "40478", "query": "I'm a film buff and I want to explore the movies playing at different cinemas. Can you give me the film descriptions and names for the cinemas in Rosario? I'm interested in watching films at multiple theaters.", "api_names": ["Finish", "cinemas_for_argentina_movie_theatres", "cinemas_id_films_for_argentina_movie_theatres", "search_places_for_local_businesses_by_outscraper", "card_backs_for_hearthstone", "google_places_for_value_serp", "specific_publication_articles_for_green_gold", "getfaqsbytopic_for_election2020_smartable", "instagram_for_check_username", "leagues_v2_get_table_for_livescore_v2", "filter_carbohydrates_for_keto_diet", "smart_phones_for_amazon_api_v2", "testbook_for_denemeapisi", "search_tags_for_blogsapi", "lista_de_municipios_por_provincia_for_organizaci_n_territorial_de_espa_a"], "api_descs": {"Finish": "No description available.", "card_backs_for_hearthstone": "Returns a list of all the card backs.", "cinemas_for_argentina_movie_theatres": " ", "cinemas_id_films_for_argentina_movie_theatres": " ", "filter_carbohydrates_for_keto_diet": "Gives keto recipes within given range of carbohydrates value.\ncarbohydrates_in_grams__lt = Less than\ncarbohydrates_in_grams__gt = Greater than", "getfaqsbytopic_for_election2020_smartable": "Get FAQs by topic.", "google_places_for_value_serp": "VALUE SERP parses Google Local & Maps results (i.e. local business listings) when the search_type parameter is set to search_type=places. When this parameter is set VALUE SERP provides a places_results array in the result JSON that contains the [Places or Maps results](https://www.valueserp.com/docs/search-api/results/google/places).\n\n**Google Local vs. Google Maps**\n`search_type=places` requests can be executed in two modes to retrieve data from a [Google Local results page](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl) or from a [Google Maps results page](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z).\n\nYou set the Location of the `search_type=places` request using the `location` request parameter and this can be expressed as either a text location name from the [Locations API](https://www.valueserp.com/docs/locations-api/overview) (which will result in a [Google Local result](https://www.google.com/search?q=pizza&gl=us&hl=en&uule=w+CAIQICIgTWFuaGF0dGFuLE5ldyBZb3JrLFVuaXRlZCBTdGF0ZXM&tbm=lcl)), or as a latitude, longitude and zoom level (which will result in a [Google Maps result](https://www.google.com/maps/search/pizza/@43.437677,-3.8392765,15z)).", "instagram_for_check_username": "Check username on Instagram", "leagues_v2_get_table_for_livescore_v2": "Get table league by category (football, cricket, basketball, tennis, hockey) and competition\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png", "lista_de_municipios_por_provincia_for_organizaci_n_territorial_de_espa_a": "Lista todas lps municipios  de una provincia", "search_places_for_local_businesses_by_outscraper": "Returns places from Places Maps based on a given search query (or many queries).\n\nThe results from searches are the same as you would see by visiting a regular Maps site. However, in most cases, it's recommended to use locations inside queries (e.g., bars, NY, USA) as the IP addresses of Outscraper's servers might be located in different countries.\n\nThis endpoint is optimized for fast responses and can be used as a real-time API.", "search_tags_for_blogsapi": "Get all blogs if the term is one of the tags.", "smart_phones_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required", "specific_publication_articles_for_green_gold": "Gets news articles from specific publications", "testbook_for_denemeapisi": "123455"}, "aseqs": [{"api_name": "cinemas_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_for_argentina_movie_theatres\nAction Input: {}", "api_reaction": null}, {"api_name": "cinemas_id_films_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_id_films_for_argentina_movie_theatres\nAction Input: {\n  \"is_id\": \"52edc840-897f-42d7-a786-6bba26dbaeca\"\n}", "api_reaction": null}, {"api_name": "cinemas_id_films_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_id_films_for_argentina_movie_theatres\nAction Input: {\n  \"is_id\": \"ab9bfd6d-6708-427e-ba2c-6bb33b7516ad\"\n}", "api_reaction": null}, {"api_name": "cinemas_id_films_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_id_films_for_argentina_movie_theatres\nAction Input: {\n  \"is_id\": \"3d56b27e-5f43-4fcc-be9d-a57b60b52b6e\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "cinemas_for_argentina_movie_theatres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cinemas_id_films_for_argentina_movie_theatres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cinemas_id_films_for_argentina_movie_theatres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cinemas_id_films_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_id_films_for_argentina_movie_theatres\nAction Input: {\n  \"is_id\": \"85b316ac-9a23-4ef6-b7d1-fbeabf72df04\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "cinemas_id_films_for_argentina_movie_theatres"}}]}
{"URL": "63911", "query": "I'm interested in the latest news about space exploration. Please fetch the top science news articles from reliable sources. It would be great if the articles are in English and cover recent developments in space technology.", "api_names": ["news_for_newsdata", "sources_for_newsdata", "Finish", "get_company_logo_by_domain_for_company_logo", "match_boxscore_for_basketball_data", "video_recommendation_for_youtube_v2", "rapidapigethourlyforecastbylocationname_for_forecast", "artist_discovered_on_for_spotify_v3", "get_a_product_reviews_for_amazon_scrapper_v4", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson", "search_users_for_tiktok_video_no_watermark_v2", "singleoffer_for_avito_scraper", "races_for_f1_live_motorsport_data", "student_property_to_rent_for_uk_real_estate_rightmove", "get_indivisual_news_source_news_for_climate_change_live_v3"], "api_descs": {"Finish": "No description available.", "artist_discovered_on_for_spotify_v3": "Artist discovered on playlists (max 50)", "get_a_product_reviews_for_amazon_scrapper_v4": "GET a product reviews", "get_company_logo_by_domain_for_company_logo": "Fetch company logo by providing domain in query params", "get_indivisual_news_source_news_for_climate_change_live_v3": "Get News about climate change from a specific news resource.", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get Postal areas of specific US state in GeoJSON format", "match_boxscore_for_basketball_data": "Live, detailed team and player statistics.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "news_for_newsdata": "The latest news endpoint provides access to the latest and breaking news for a country, for a specific category in a country, or for a single or multiple domains. The news articles are sorted by the publish date.\n\nRetrieving the latest news allows you to build experience such as showcasing the latest news, breaking news tickers and analyzing News to better understand their content.", "races_for_f1_live_motorsport_data": "Lists races and session details for a given season", "rapidapigethourlyforecastbylocationname_for_forecast": " ", "search_users_for_tiktok_video_no_watermark_v2": "**Search users by keyword**", "singleoffer_for_avito_scraper": "API  that get info for a single offer", "sources_for_newsdata": "News sources endpoint provides access to the subsets of news publishers that the latest news is available from.\n\nIt's mainly a convenience endpoint that you can use to keep track of the publishers available on the API, and you can pipe it straight through to your users", "student_property_to_rent_for_uk_real_estate_rightmove": "Student property to rent", "video_recommendation_for_youtube_v2": "This endpoint returns a list of recommended videos based on a given a video ID"}, "aseqs": [{"api_name": "sources_for_newsdata", "api_action": "\nAction: sources_for_newsdata\nAction Input: {}", "api_reaction": null}, {"api_name": "news_for_newsdata", "api_action": "\nAction: news_for_newsdata\nAction Input: {}", "api_reaction": null}, {"api_name": "sources_for_newsdata", "api_action": "\nAction: sources_for_newsdata\nAction Input: {}", "api_reaction": null}, {"api_name": "news_for_newsdata", "api_action": "\nAction: news_for_newsdata\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "news_for_newsdata"}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_for_newsdata"}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_for_newsdata", "api_action": "\nAction: news_for_newsdata\nAction Input: {'category': 'science', 'country_code': 'US'}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_for_newsdata", "api_action": "\nAction: news_for_newsdata\nAction Input: {}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"news_for_newsdata\",\n\t\"api_action\": \"\\nAction: news_for_newsdata\\nAction Input: {\"category\":\"science\",\"language\":\"English\",\"country\":\"US\",\"limit\":5}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "48625", "query": "My friends and I are starting a new business and we require the services of a professional logo designer. Can you help us find vetted sellers in the 'Graphics & Design: Logo Design' category? We would like a list of sellers and their services, including their names and website URLs. Additionally, we're interested in knowing the available categories we can search for.", "api_names": ["services_for_fiverr_pro_services", "categories_for_fiverr_pro_services", "Finish", "get_analysis_for_similar_web", "top_players_by_royal_for_trackmania", "past_3_months_for_the_sandbox_sand", "tor_get_for_scraper_s_proxy", "image_anime_diffusion_for_image_diffusion", "get_product_detail_for_yiwugo_product_data", "get_qoutes_by_page_for_quotsy", "downloadminecraftjson_for_minecraft_forge_optifine", "latest_retrieve_selected_160_symbols_for_live_metal_prices", "get_adverse_event_info_by_reaction_sex_for_konviere_drugsapi", "get_articles_for_climate_news_feed", "channel_search_for_youtube"], "api_descs": {"Finish": "No description available.", "categories_for_fiverr_pro_services": "List of category names you can search for", "channel_search_for_youtube": "Channel Search", "downloadminecraftjson_for_minecraft_forge_optifine": "Redirect to download Minecraft .json file.", "get_adverse_event_info_by_reaction_sex_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the “reaction” the reaction and “sex” the patient sex (0: unknown, 1: male, 2: female), these input parameters are required.\nAll web method requires the \"api_key\" as query parameter.", "get_analysis_for_similar_web": "Get website traffic, key metrics, including engagement rate, traffic ranking, keyword ranking and traffic source.", "get_articles_for_climate_news_feed": "Gets all articles.\n\nquery examples:\nsource = United Nations, Nasa Climate, The Guardian, Carbon Brief\nLimit = 100 (default)\nexclude=The Guardian", "get_product_detail_for_yiwugo_product_data": "get product detail by item_id,\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "get_qoutes_by_page_for_quotsy": "return quotes for the page no", "image_anime_diffusion_for_image_diffusion": "design to generate weeb stuff.", "latest_retrieve_selected_160_symbols_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, and Platinum provided in 160+ currencies including USD, GBP and EUR.", "past_3_months_for_the_sandbox_sand": "Get price data for the past 3 months.\n\n~hourly data points.", "services_for_fiverr_pro_services": "List of pro sellers for a service category", "top_players_by_royal_for_trackmania": "Get the top players by their royal rank.", "tor_get_for_scraper_s_proxy": "Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints."}, "aseqs": [{"api_name": "categories_for_fiverr_pro_services", "api_action": "\nAction: categories_for_fiverr_pro_services\nAction Input: {}", "api_reaction": null}, {"api_name": "services_for_fiverr_pro_services", "api_action": "\nAction: services_for_fiverr_pro_services\nAction Input: {\n  \"category_name\": \"Graphics & Design: Logo Design\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "services_for_fiverr_pro_services"}}, {"state": "generated_by_agent", "aseq": {"api_name": "services_for_fiverr_pro_services"}}, {"state": "generated_by_agent", "aseq": {"api_name": "services_for_fiverr_pro_services"}}]}
{"URL": "17454", "query": "I am researching the Chilean government structure and need information about the ministries and sub-secretaries. Can you provide me with a comprehensive list of all the ministries and sub-secretaries? I would also like to know the names, positions, cities, addresses, and websites of the sub-secretaries.", "api_names": ["listar_todos_for_dataestado", "Finish", "ministerio_espec_fico_for_dataestado", "allanswersforms_for_acopaer", "status_200_for_daily_ovrll_0822202140642", "stock_sec_filings_for_yahoo_finance_v2", "v1_whois_for_whois_by_api_ninjas", "fixtures_for_msport", "messages_from_telegram_channel_for_telegram_v2", "properties_detail_for_realty_in_au", "mouldinformation_for_dati_comuni", "get_quotes_by_keyword_for__quotes_api", "significant_earthquakes_past_hour_for_everyearthquake", "artis_for_kotak7", "gettestwebhookpayloadnewcontact_for_mailslurp_email_testing", "capital_by_country_for_geosource_api", "keyword_search_for_axesso_otto_data_service", "sms_for_insafel"], "api_descs": {"Finish": "No description available.", "allanswersforms_for_acopaer": "# Description GET All Answers Forms\r\n\r\nThis url is to get all Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "artis_for_kotak7": "Daftar artis", "capital_by_country_for_geosource_api": "Retrives a value of the capital of the country.", "fixtures_for_msport": "*  list of future match up to next 7 days\n*  you can retrieve full list of soccer matches up to next 7 days", "get_quotes_by_keyword_for__quotes_api": " ", "gettestwebhookpayloadnewcontact_for_mailslurp_email_testing": " ", "keyword_search_for_axesso_otto_data_service": "Retrieve keyword search results.", "listar_todos_for_dataestado": "Obtener listado de todos los ministerios y subsecretarías.", "messages_from_telegram_channel_for_telegram_v2": "The endpoint returns last 10 messages  or specific id message from Telegram Channel. \nThe channel must be public.\n\n- Author\n- Photo\n- Message\n- Views \n- DateTime\n- ID", "ministerio_espec_fico_for_dataestado": "Obtiene el listado de un sólo ministerio", "mouldinformation_for_dati_comuni": "test", "properties_detail_for_realty_in_au": "Get detailed information of a property", "significant_earthquakes_past_hour_for_everyearthquake": "Significant Earthquakes, Past Hour", "sms_for_insafel": "Send", "status_200_for_daily_ovrll_0822202140642": "Testing", "stock_sec_filings_for_yahoo_finance_v2": "Get stock SEC filings.", "v1_whois_for_whois_by_api_ninjas": "API Ninjas Whois API endpoint. Returns domain registration details (e.g. registrar, contact information, expiration date, name servers) about a particular domain name."}, "aseqs": [{"api_name": "listar_todos_for_dataestado", "api_action": "\nAction: listar_todos_for_dataestado\nAction Input: {\n  \"todos\": \"true\"\n}", "api_reaction": null}, {"api_name": "ministerio_espec_fico_for_dataestado", "api_action": "\nAction: ministerio_espec_fico_for_dataestado\nAction Input: {\n  \"nombre\": \"Ministerio del Interior y Seguridad Pública\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "listar_todos_for_dataestado"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ministerio_espec_fico_for_dataestado"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ministerio_espec_fico_for_dataestado"}}]}
{"URL": "55867", "query": "I'm planning a gaming night with my friends and we need some inspiration. Can you suggest a game for us to play? Additionally, could you provide the second word for the suggested game and let us know where to find more information about it?", "api_names": ["Finish", "getsecondword_for_contextoguess", "home_for_contextoguess", "docs_for_contextoguess", "latest_10_drawings_for_cash4life", "your_events_for_ticketbud", "getpetbyid_for_my_api_12345", "matches_for_metrx_factory", "gettoken_for_mybooky_demo", "getproductparent_for_appibase", "4_charts_for_stockyapiexchange", "depuertoplata_for_depuertoplata", "articles_v2_list_trending_for_seeking_alpha", "best_stories_for_yc_hacker_news_official", "competition_data_for_soccerway_feed", "api_endpoint_for_esignly", "webcams_list_limit_limit_offset_for_webcams_travel", "leaguemedia_for_rugbyapi2", "get_all_competitions_for_viperscore", "brands_detail_for_consumer_reports"], "api_descs": {"4_charts_for_stockyapiexchange": "This feature provides interactive charts that allow users to visualize the performance of a stock over time. Users can customize the time period and type of chart (line, bar, candlestick, etc.) to get a better understanding of the stock's price movements.", "Finish": "No description available.", "api_endpoint_for_esignly": "main end point to access api", "articles_v2_list_trending_for_seeking_alpha": "List trending articles", "best_stories_for_yc_hacker_news_official": "Returns up to the current best 500 stories.", "brands_detail_for_consumer_reports": "Get detailed information of a brand", "competition_data_for_soccerway_feed": "Get competition data", "depuertoplata_for_depuertoplata": "web", "docs_for_contextoguess": "docs", "get_all_competitions_for_viperscore": "With \"Get all competitions\" you'll receive a list with top competitions (like NFL, Premier League, ...) and all competitions from every sport.", "getpetbyid_for_my_api_12345": "Returns a single pet", "getproductparent_for_appibase": "Get the parent product", "getsecondword_for_contextoguess": "returns the second word for a given game", "gettoken_for_mybooky_demo": " ", "home_for_contextoguess": "Home", "latest_10_drawings_for_cash4life": "Latest 10 Cash4Life drawings", "leaguemedia_for_rugbyapi2": "Get media for a specific Rugby league.", "matches_for_metrx_factory": "Returns a list of matches for given parameters.\n\nBoth historical and upcoming matches are supported. If no parameters are provided then all upcoming matches are returned. The time span covering next matches ranges between 8 hours for *Basic* and 60 hours for paid subscriptions.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 30 seconds`\n`Max. matches returned: 5`", "webcams_list_limit_limit_offset_for_webcams_travel": "This is a modifier. Returns the list of webcams sliced by {limit}. The optional offset is given by {offset}. Required: {limit}. The maximum value for {limit} is 50. {offset} defaults to 0. If limit is not given, then a default of limit=10 is applied.", "your_events_for_ticketbud": "A list of events owned or accessible by the current token holder"}, "aseqs": [{"api_name": "home_for_contextoguess", "api_action": "\nAction: home_for_contextoguess\nAction Input: {}", "api_reaction": null}, {"api_name": "docs_for_contextoguess", "api_action": "\nAction: docs_for_contextoguess\nAction Input: {}", "api_reaction": null}, {"api_name": "getsecondword_for_contextoguess", "api_action": "\nAction: getsecondword_for_contextoguess\nAction Input: {\n  \"game\": \"Fortnite\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getsecondword_for_contextoguess"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getsecondword_for_contextoguess", "api_action": "", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getsecondword_for_contextoguess", "api_action": "\nAction: getsecondword_for_contextoguess\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getproductparent_for_appibase", "api_action": "\nAction: getproductparent_for_appibase\nAction Input: {}", "api_reaction": null}}]}
{"URL": "76042", "query": "My team and I are looking for Power BI learning resources. Can you recommend some articles and tutorials on DAX functions and data visualization?", "api_names": ["Finish", "getsamples_for_power_bi_smartable", "getlearningresources_topic_for_power_bi_smartable", "gettopics_for_power_bi_smartable", "count0_for_spaceflight_news", "download_mp3_for_subtitles_for_youtube_v2", "getuser_for_auth", "matches_for_bet_at_home", "tournament_results_by_id_and_year_wta_for_ultimate_tennis", "get_random_champion_for_league_of_legends_galore", "vehicle_information_for_vehicle_rc_information_v2", "content_for_daily_sec_financial_statement_dataset", "get_list_of_available_modes_for_cars_image_background_removal", "v1_1_for_bdapi", "v1_exercises_for_exercises_by_api_ninjas", "get_call_for_india_pan_card_ocr", "wrt_transformer_for_walnut_topic", "ip_geolocation_for_ip_geolocation_api", "independence_per_country_for_africa_api_", "get_all_models_by_brand_and_family_for_watch_database"], "api_descs": {"Finish": "No description available.", "content_for_daily_sec_financial_statement_dataset": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan", "count0_for_spaceflight_news": " ", "download_mp3_for_subtitles_for_youtube_v2": "Download mp3 from youtube video.", "get_all_models_by_brand_and_family_for_watch_database": "Get All Models By Brand And Family", "get_call_for_india_pan_card_ocr": "Used to fetch api result using the request id received in responses.", "get_list_of_available_modes_for_cars_image_background_removal": "The service provides three options for background removal results:\n* Mask of foreground.\n* Image with foreground object.\n* Image with foreground object with shadow.", "get_random_champion_for_league_of_legends_galore": "This will go through the list of champions and return a single RANDOM champion!", "getlearningresources_topic_for_power_bi_smartable": "Get Power BI learning resources by topic.", "getsamples_for_power_bi_smartable": "Get Power BI samples", "gettopics_for_power_bi_smartable": "Get Power BI topics.", "getuser_for_auth": "Get single user data", "independence_per_country_for_africa_api_": "If you provide the name of a country as a parameter, the api will return information about its independence date and the country or countries that colonized it.\nTakes Parameter: <county_name>", "ip_geolocation_for_ip_geolocation_api": "IP Geolocation", "matches_for_bet_at_home": "Latest matches by Bet-at-Home", "tournament_results_by_id_and_year_wta_for_ultimate_tennis": "Via this endpoint, you can retrieve all the matches played in the selected tournament, in a given year. The results are added instantly for every match that ends. You can Retrieve the list of the IDs from the tournament list WTA endpoint.", "v1_1_for_bdapi": "`/v1.1`\nPrefix endpoint for version 1.1\nResponse provides a list of available endpoints in version 1.1", "v1_exercises_for_exercises_by_api_ninjas": "API Ninjas Exercises API endpoint. Returns up to 10 exercises that satisfy the given parameters.", "vehicle_information_for_vehicle_rc_information_v2": "Fetch Vehicle Information using Registration Number.", "wrt_transformer_for_walnut_topic": "Gets the text and set of possible topics separated by a comma.\n\nReturns the ranking of topics from most relevant to least relevant."}, "aseqs": [{"api_name": "getlearningresources_topic_for_power_bi_smartable", "api_action": "\nAction: getlearningresources_topic_for_power_bi_smartable\nAction Input: {\n  \"topic\": \"DAX functions\",\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "getlearningresources_topic_for_power_bi_smartable", "api_action": "\nAction: getlearningresources_topic_for_power_bi_smartable\nAction Input: {\n  \"topic\": \"data visualization\",\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "gettopics_for_power_bi_smartable", "api_action": "\nAction: gettopics_for_power_bi_smartable\nAction Input: {}", "api_reaction": null}, {"api_name": "getsamples_for_power_bi_smartable", "api_action": "\nAction: getsamples_for_power_bi_smartable\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getlearningresources_topic_for_power_bi_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getsamples_for_power_bi_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getsamples_for_power_bi_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getsamples_for_power_bi_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlearningresources_topic_for_power_bi_smartable", "api_action": "{\"topic\": \"DAX functions\", \"page\": 2}", "api_reaction": null}}]}
{"URL": "55527", "query": "Can you help me find articles about technology and business from the New York Times and the Wall Street Journal? I would like to search for articles related to technology and business, filter the results by these sources, and provide the article count per day.", "api_names": ["v1_aggregation_for_newscatcher", "Finish", "3000_years_for_weeby", "list_finance_rates_for_real_estate_usa", "get_detailed_response_for_advanced_movie_search", "fetchcampaignquestions_for_upcall", "united_states_small_businesses_open_for_covid_19_economic_impact", "the_calendar_of_prices_for_a_week_for_flight_data_v2", "web_for_portfolio", "get_the_account_for_alpaca_trading", "get_the_stock_history_by_exchange_code_and_stock_code_for_stocks", "retrieve_user_collection_bids_for_blur"], "api_descs": {"3000_years_for_weeby": "Generates the 3000 Years Meme.\n**ALL DOCUMENTATION HERE**: [https://weebyapi.ntmnathan.com/api/docs](https://weebyapi.ntmnathan.com/api/docs)", "Finish": "No description available.", "fetchcampaignquestions_for_upcall": "Get campaign's questions", "get_detailed_response_for_advanced_movie_search": "Get detailed response for a movie ID", "get_the_account_for_alpaca_trading": "Returns the account associated with the API key", "get_the_stock_history_by_exchange_code_and_stock_code_for_stocks": "Get the stock history by exchange code and stock code.", "list_finance_rates_for_real_estate_usa": "list finance rates", "retrieve_user_collection_bids_for_blur": "This endpoint is used to retrieve the active collection bids to a user wallet address.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "the_calendar_of_prices_for_a_week_for_flight_data_v2": "Brings the prices for the nearest dates to the target ones back", "united_states_small_businesses_open_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change of small businesses open seasonally adjusted relative to January 4 - 31, 2020.", "v1_aggregation_for_newscatcher": "Searches as `/v1/search` but returns the articles count per hour or day instead of articles' data", "web_for_portfolio": "dsada"}, "aseqs": [{"api_name": "v1_aggregation_for_newscatcher", "api_action": "\nAction: v1_aggregation_for_newscatcher\nAction Input: {\n  \"q\": \"technology AND business\",\n  \"topic\": \"tech\",\n  \"sources\": \"nytimes.com,wsj.com\",\n  \"agg_by\": \"day\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_aggregation_for_newscatcher"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_aggregation_for_newscatcher"}}]}
{"URL": "2283", "query": "I'm planning to attend a Formula 1 race and I need information about the upcoming races. Can you give me the race dates, locations, and names for the current season? Additionally, I would like to know the current driver standings for the season.", "api_names": ["driver_standings_for_formula_1_standings", "races_for_formula_1_standings", "Finish", "get_vehicle_models_for_car_utils", "get_deals_for_amazon_web_scraping_api", "get_products_in_category_for__onboarding_project", "get_the_addresses_by_ip_for_location", "pair_id_for_uniswap_v2_api", "tags_count_for_clickmeter", "neighbours_for_australian_suburbs", "scraper_for_web_scraping_api", "get_pregame_form_for_viperscore", "v1_verify_for_quick_email_verification", "horse_stats_for_horse_racing", "extract_data_for_youtube_video_data_extractor"], "api_descs": {"Finish": "No description available.", "driver_standings_for_formula_1_standings": "Will return the current F1 season driver standings.", "extract_data_for_youtube_video_data_extractor": "Almost all YouTube video urls are supported", "get_deals_for_amazon_web_scraping_api": "Get amazon deals allowing to filter by category.  The category list is included in the response.", "get_pregame_form_for_viperscore": "If you're a detail hunter this is the place for you! Get the information about the last games both teams accomplished.", "get_products_in_category_for__onboarding_project": " ", "get_the_addresses_by_ip_for_location": "Get the addresses by IP.", "get_vehicle_models_for_car_utils": "Get all supported vehicle models for specified make.", "horse_stats_for_horse_racing": "Get horse results history.", "neighbours_for_australian_suburbs": "Find neighbouring suburbs based on the distance in km.", "pair_id_for_uniswap_v2_api": "Return the info of the Par by the address", "races_for_formula_1_standings": "It will return the current season races with basic information.", "scraper_for_web_scraping_api": "The \"Scraper\" endpoint of the Web Scraping API is responsible for extracting data from websites while simulating a real browser. With its Headless Browser capability, the endpoint enables users to bypass restrictions, solve captchas, and scrape dynamic websites with ease. The endpoint can be used for high-level web scraping tasks, making it an ideal choice for businesses, data analysts, and developers who need to extract data from websites quickly and efficiently. By providing the endpoint with the necessary input parameters, users can initiate the scraping process and receive the extracted data in the desired format. This endpoint is a powerful tool for anyone who needs to extract data from websites and can be easily integrated into existing workflows and systems.", "tags_count_for_clickmeter": "Get a count of the tags. You can use the same filters of \"/tags\"", "v1_verify_for_quick_email_verification": ""}, "aseqs": [{"api_name": "races_for_formula_1_standings", "api_action": "\nAction: races_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "driver_standings_for_formula_1_standings", "api_action": "\nAction: driver_standings_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "races_for_formula_1_standings", "api_action": "\nAction: races_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}, {"state": "generated_by_agent", "aseq": {"api_name": "driver_standings_for_formula_1_standings", "api_action": "\nAction: driver_standings_for_formula_1_standings\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}, {"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}]}
{"URL": "28413", "query": "I am conducting a research project and require the basic daily zip files of filed 10-q and 10-k reports. Can you provide me with the basic daily data for the date '2022-11-10'? Furthermore, I would like to check the availability of dates for both basic and premium subscriptions using the content endpoint. Could you also provide the server time using the heartbeat endpoint?", "api_names": ["basic_daily_for_daily_sec_financial_statement_dataset", "heartbeat_for_daily_sec_financial_statement_dataset", "content_for_daily_sec_financial_statement_dataset", "Finish", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats", "statusforemissionreductiontargetbyurl_for_carbon_management", "flag_for_phone", "movies_link_and_name_for_porn_movies", "citizen_profile_for_erpk", "csw21_for_word_tree", "echo_get_for_echo_api", "get_tags_for_pizzaallapala", "word_for_lorem_ipsum_api", "quotes_by_authors_for_quotes_v2", "get_order_status_for_crypto_swap", "gettopics_for_a_i_smartable", "random_joke_for_humor_jokes_and_memes", "get_users_for_feku_json", "group_management_api_access_for_modifying_group_information_for_catchloc", "getreferencerates_for_european_central_bank_reference_rates"], "api_descs": {"Finish": "No description available.", "basic_daily_for_daily_sec_financial_statement_dataset": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. With the basic subcription, you only have access to daily zip files older than 21 days.\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**", "citizen_profile_for_erpk": "", "content_for_daily_sec_financial_statement_dataset": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan", "csw21_for_word_tree": "Search for words using Collins Scrabble Words 2021 lexicon.", "echo_get_for_echo_api": "Make a HTTP GET request with the code you like to get in the response.", "flag_for_phone": "Get the Flag Image from a given Country", "get_nba_games_and_stats_for_a_single_player_for_tank01_fantasy_stats": "This call will grab a map of all of the games a player has played in the season.     \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \nseason is an optional parameter.  Currently only 2022 (last season) and 2023 (this season) are available.  If you do not include season as a parameter, it will return this season's games. \n\nExample:\nCorrect way to get the stats for Nikola Vucevic for his game against the Heat on 10/19/2022 would be this:\n/getNBAGamesForPlayer?playerID=28268405032&gameID=20221019_CHI@MIA\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nIf you want his games from last season, do this..\n/getNBAGamesForPlayer?playerID=28268405032&season=2022\n\nBut if you wanted to get all of his games this season, you don't have to include the season. Simply make this call\n/getNBAGamesForPlayer?playerID=28268405032\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNBABoxScore call with that specific gameID.", "get_order_status_for_crypto_swap": "Get the data and status of a previously created order", "get_tags_for_pizzaallapala": "Adss", "get_users_for_feku_json": "To Get list of all Users", "getreferencerates_for_european_central_bank_reference_rates": "Get the current Reference Rates", "gettopics_for_a_i_smartable": "Get artificial intelligence topics.", "group_management_api_access_for_modifying_group_information_for_catchloc": "API access to modifying location object's group information\n\nrequired parameter : api (api.common.group.set.modify)", "heartbeat_for_daily_sec_financial_statement_dataset": "A simple heartbeat that returns the time of the server to check if the connection to the server is working.", "movies_link_and_name_for_porn_movies": "Movies Link And Name", "quotes_by_authors_for_quotes_v2": "Returns the quotes by specified authors", "random_joke_for_humor_jokes_and_memes": "Get a random joke.\nSee https://humorapi.com/docs/#Random-Joke for more.", "statusforemissionreductiontargetbyurl_for_carbon_management": "Get results in details from the task id.", "word_for_lorem_ipsum_api": "Create lorem ipsum by defining the number of words"}, "aseqs": [{"api_name": "basic_daily_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: basic_daily_for_daily_sec_financial_statement_dataset\nAction Input: {\n  \"date\": \"2022-11-10\"\n}", "api_reaction": null}, {"api_name": "content_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: content_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}, {"api_name": "heartbeat_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: heartbeat_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "basic_daily_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "content_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "basic_daily_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: basic_daily_for_daily_sec_financial_statement_dataset\nAction Input: {\n  \"date\": \"2022-11-10\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "basic_daily_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: basic_daily_for_daily_sec_financial_statement_dataset\nAction Input: {\n  \"date\": \"2022-11-10\"\n}", "api_reaction": null}}]}
{"URL": "19531", "query": "I'm planning a trip to Mexico and I need to find valid zip codes starting with the digits 646. Can you search for valid zip codes in Mexico with those starting digits? Please provide me with the list of zip codes found. Additionally, I would like to retrieve the information for the zip code 64630, including the municipality, state, and list of colonies.", "api_names": ["zip_code_information_for_mexico_zip_codes", "search_zip_codes_for_mexico_zip_codes", "Finish", "search_numbers_for_calltrackingmetrics", "historical_for_fear_and_greed_index", "exchange_for_currency_v2", "year_end_billboard_200_albums_for_billboard_v2", "albums_for_march4", "block_for_binance_smart_chain", "video_recommendation_for_youtube_search", "date_converter_timezone_for_dateclock", "postalcode_for_phone_and_email_validator_v2"], "api_descs": {"Finish": "No description available.", "albums_for_march4": "njnj", "block_for_binance_smart_chain": "Get full data from a specific block on the Binance Smart Chain!", "date_converter_timezone_for_dateclock": "Simply Date  Converter Timezone to complete response report", "exchange_for_currency_v2": "The currency converter service that converts the entered rate into the desired exchange rate.", "historical_for_fear_and_greed_index": "Get the index for the given date.", "postalcode_for_phone_and_email_validator_v2": "Postal Code or Zip Code to Location For USA only", "search_numbers_for_calltrackingmetrics": "", "search_zip_codes_for_mexico_zip_codes": "Search for valid zip codes with starting digits", "video_recommendation_for_youtube_search": "This endpoint returns a list of recommended videos based on a given a video ID", "year_end_billboard_200_albums_for_billboard_v2": "Get the Year-End Billboard 200 Albums chart.", "zip_code_information_for_mexico_zip_codes": "Retrieves the information of a particular zip code"}, "aseqs": [{"api_name": "search_zip_codes_for_mexico_zip_codes", "api_action": "\nAction: search_zip_codes_for_mexico_zip_codes\nAction Input: {\n  \"codigo_postal\": \"646\"\n}", "api_reaction": null}, {"api_name": "zip_code_information_for_mexico_zip_codes", "api_action": "\nAction: zip_code_information_for_mexico_zip_codes\nAction Input: {\n  \"zip_code\": \"64630\"\n}", "api_reaction": null}, {"api_name": "zip_code_information_for_mexico_zip_codes", "api_action": "\nAction: zip_code_information_for_mexico_zip_codes\nAction Input: {\n  \"zip_code\": \"64630\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_for_mexico_zip_codes"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_zip_codes_for_mexico_zip_codes\",\n\t\"api_action\": \"\\nAction: search_zip_codes_for_mexico_zip_codes\\nAction Input: {\\n  \\\"codigo_postal\\\": \\\"646\\\",\\n  \\\"include_information\\\": true\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_for_mexico_zip_codes", "api_action": "\nAction: search_zip_codes_for_mexico_zip_codes\nAction Input: {\n  \"codigo_postal\": \"646\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_for_mexico_zip_codes", "api_action": "\nAction: search_zip_codes_for_mexico_zip_codes\nAction Input: {\n  \"codigo_postal\": \"646\"\n}"}}]}
{"URL": "60946", "query": "I'm a professional sports bettor and I need the latest matches and odds for Cbet. Can you fetch the most recent matches along with their corresponding odds? It would be great if you could provide the team names, match dates, and times.", "api_names": ["odds_for_cbet", "matches_for_cbet", "Finish", "party_for_partydiva", "get_san_francisco_chronicle_news_for_news_in_bay", "year_end_billboard_global_200_for_billboard_api_v2", "fetch_by_region_for_magical_taske", "consumers_get_reviews_for_unofficial_trust_pilot", "equity_earnings_for_quotient", "index_for_global_market_indices_data", "health_for_google_news", "fetch_manga_for_mangaverse_api", "co2_emission_for_electricity_carbon_footprint_germany", "exchanges_for_tardis_dev", "v1_render_renderid_for_inkit"], "api_descs": {"Finish": "No description available.", "co2_emission_for_electricity_carbon_footprint_germany": "The CO2 Emission endpoint will provide carbon emissions in grams per Kilo-Watt-Hour.  To latest and historical footprint information for electricity in Germany.", "consumers_get_reviews_for_unofficial_trust_pilot": "Get reviews belonging to a consumer", "equity_earnings_for_quotient": "Return earnings (EPS, quarterly) history data for a given security.", "exchanges_for_tardis_dev": "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc.", "fetch_by_region_for_magical_taske": "This endpoint fetches records by region as defined in the `ABOUT` section above. You have to provide region and a limit of the number of records returned.", "fetch_manga_for_mangaverse_api": "This will get the list of manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy", "get_san_francisco_chronicle_news_for_news_in_bay": "Get all news titled with keyword (sources via San Francisco Chronicle )", "health_for_google_news": "This endpoint is used to get health  news from Google News.", "index_for_global_market_indices_data": "Get an Index constituents", "matches_for_cbet": "Latest Matches for Cbet", "odds_for_cbet": "Latest Odds for Cbet", "party_for_partydiva": "party", "v1_render_renderid_for_inkit": " ", "year_end_billboard_global_200_for_billboard_api_v2": "Year end Billboard Global 200chart \nis yearly based. \n\nIf `year` is not supplied, will default to last year."}, "aseqs": [{"api_name": "matches_for_cbet", "api_action": "\nAction: matches_for_cbet\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_cbet", "api_action": "\nAction: odds_for_cbet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_cbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_cbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_cbet"}}]}
{"URL": "26647", "query": "My family and I are planning a movie-themed game night. Can you help us by providing quotes from Al Pacino, quotes from 'The Wizard of Oz', and quotes from movies released in 1939? It would be great if you could also give us a random quote.", "api_names": ["get_quotes_by_actor_for_movie_and_tv_shows_quotes", "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes", "get_quote_by_year_for_movie_and_tv_shows_quotes", "Finish", "get_a_random_quote_for_movie_and_tv_shows_quotes", "getfileslist_for_groupdocs_metadata_cloud", "search_users_for_twttrapi", "get_all_m1lhao_draws_dates_for_euro_millions", "makes_for_car_api", "about_for_arespass", "read_appointments_for_supersaas_online_bookings_and_appointment_scheduling", "get_live_streams_livestreamid_for_api_video", "titles_episode_id_for_moviesdatabase", "getweatherforecast_for_apjoy_weather_forecast", "delete_for_tripit", "live_emergency_aircraft_for_fachaapi", "statusforkeysentenceextraction_for_carbon_management", "calculate_geogrid_coordinate_points_for_google_local_rank_tracker", "get_questions_by_category_for_ase_s_quiz_api", "pagesblanches_for_les_pagesjaunes_les_pagesblanche_france"], "api_descs": {"Finish": "No description available.", "about_for_arespass": " ", "calculate_geogrid_coordinate_points_for_google_local_rank_tracker": "Get all grid coordinate points based on a center geocoordinate point and distance arguments.", "delete_for_tripit": "A delete request is used to delete existing objects", "get_a_random_quote_for_movie_and_tv_shows_quotes": "This endpoint will return a random quote", "get_all_m1lhao_draws_dates_for_euro_millions": "Get all M1lhao draws dates (M1lhão (‘The Million’) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of €1 million on Friday evenings.)", "get_live_streams_livestreamid_for_api_video": " ", "get_questions_by_category_for_ase_s_quiz_api": "Get questions by category", "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes": "This endpoint will return quotes by given movie or TV show name", "get_quote_by_year_for_movie_and_tv_shows_quotes": "This endpoint will return back quotes by the given year", "get_quotes_by_actor_for_movie_and_tv_shows_quotes": "This endpoint will return back quotes by the given actor or actress.", "getfileslist_for_groupdocs_metadata_cloud": " ", "getweatherforecast_for_apjoy_weather_forecast": "This endpoint provides weather forecast information based on the user's location. It returns the current weather conditions, daily forecasts, and additional weather data, such as temperature, humidity, and wind speed. The data is sourced from OpenWeatherMap, ensuring accurate and reliable information.", "live_emergency_aircraft_for_fachaapi": "Get live emergency aircraft (Squawk 7500/7600/7700)", "makes_for_car_api": "Search makes by name and year.", "pagesblanches_for_les_pagesjaunes_les_pagesblanche_france": "Extraire les données du Pages Blanches scraping email et téléphone", "read_appointments_for_supersaas_online_bookings_and_appointment_scheduling": "", "search_users_for_twttrapi": "Search users", "statusforkeysentenceextraction_for_carbon_management": "Get results in details from the task id.", "titles_episode_id_for_moviesdatabase": " "}, "aseqs": [{"api_name": "get_quotes_by_actor_for_movie_and_tv_shows_quotes", "api_action": "\nAction: get_quotes_by_actor_for_movie_and_tv_shows_quotes\nAction Input: {\n  \"actor\": \"Al Pacino\"\n}", "api_reaction": null}, {"api_name": "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes", "api_action": "\nAction: get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes\nAction Input: {\n  \"show\": \"The Wizard of Oz\"\n}", "api_reaction": null}, {"api_name": "get_quote_by_year_for_movie_and_tv_shows_quotes", "api_action": "\nAction: get_quote_by_year_for_movie_and_tv_shows_quotes\nAction Input: {\n  \"year\": 1939\n}", "api_reaction": null}, {"api_name": "get_a_random_quote_for_movie_and_tv_shows_quotes", "api_action": "\nAction: get_a_random_quote_for_movie_and_tv_shows_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_quotes_by_actor_for_movie_and_tv_shows_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_quote_by_year_for_movie_and_tv_shows_quotes", "api_action": "\nAction: get_quote_by_year_for_movie_and_tv_shows_quotes\nAction Input: {\n  \"year\": 1939\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_random_quote_for_movie_and_tv_shows_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_quotes_by_actor_for_movie_and_tv_shows_quotes", "api_action": "\nAction: get_quotes_by_actor_for_movie_and_tv_shows_quotes\nAction Input: {\n  \"actor\": \"Al Pacino\"\n}", "api_reaction": null}}]}
{"URL": "57295", "query": "My company is organizing a team-building event and we thought it would be fun to play Lotto America. Can you fetch the latest 10 winning number sets for us? Additionally, we would like to know the statistics for each ball, such as the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. Lastly, could you provide us with a randomized Quick Pick for the game?", "api_names": ["random_quickpick_for_play_for_lotto_america", "latest_10_drawings_for_lotto_america", "general_statistics_for_lotto_america", "Finish", "youtubesearchresults_for_youtube_search_results", "similar_to_property_detail_for_uk_real_estate_rightmove", "matchstatistics_for_icehockeyapi", "supported_languages_for_translate_plus", "create_client_for_ptl", "products_v2_list_recommended_for_target", "models_by_make_id_year_category_for_motorcycle_specs_database", "test_app_deepfry_get_for_image", "filter_games_by_multiple_tags_for_mmo_games", "cinemas_id_showtimes_for_argentina_movie_theatres", "search_tweet_for_twitter_pack_v2", "webcams_list_property_property_property_for_webcams_travel", "charts_for_rainforest", "example_for_veriphone", "user_following_for_twitter_v2", "getsponsorships_for_diablo4_smartable"], "api_descs": {"Finish": "No description available.", "charts_for_rainforest": "The Charts parameters are applicable when making a request with type=charts to retrieve Charts results. The Charts page can be specified using the url parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nCharts results are retrieved from the charts page on Amazon.", "cinemas_id_showtimes_for_argentina_movie_theatres": " ", "create_client_for_ptl": "Receive new users", "example_for_veriphone": "Get an example phone number for any country", "filter_games_by_multiple_tags_for_mmo_games": "Filter Games by multiple tags for personalized results. Insert tag, eg: mmorpg, shooter, pvp, mmofps and more at [https://www.mmobomb.com/api ](url). Optionally you can also use the \"platform\" and \"sort\" parameters", "general_statistics_for_lotto_america": "This endpoint pulls basic statistics of the Lotto America numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber, starBall, bonus) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.", "getsponsorships_for_diablo4_smartable": "Get Diablo 4 sponsorships.", "latest_10_drawings_for_lotto_america": "Get the latest, and last winning 10 Lotto America number sets.", "matchstatistics_for_icehockeyapi": "This operation returns statistics for a specific ice hockey match, including player statistics and other relevant data.", "models_by_make_id_year_category_for_motorcycle_specs_database": "get model by make ID, year and category:\n\nex: /api/v1/model/make-id/55/2010/Sport", "products_v2_list_recommended_for_target": "List more products to consider", "random_quickpick_for_play_for_lotto_america": "Get a randomized Quick Pick for Lotto America. This is a random set of playable Powerball numbers", "search_tweet_for_twitter_pack_v2": "search tweet by query", "similar_to_property_detail_for_uk_real_estate_rightmove": "Similar to this property for detail", "supported_languages_for_translate_plus": "The languages which out api supports.", "test_app_deepfry_get_for_image": " ", "user_following_for_twitter_v2": "Get User Following", "webcams_list_property_property_property_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed {property}. Multiple {property} must be separated by comma. Required: at least one {property}. Possible values are \"editors\" (featured from the editors), \"hd\" (high resolution webcams), and \"live\" (webcams with a live stream).", "youtubesearchresults_for_youtube_search_results": "Get all the YouTube Search Results Items and their Information! No limits and no Google API Key needed!"}, "aseqs": [{"api_name": "latest_10_drawings_for_lotto_america", "api_action": "\nAction: latest_10_drawings_for_lotto_america\nAction Input: {}", "api_reaction": null}, {"api_name": "general_statistics_for_lotto_america", "api_action": "\nAction: general_statistics_for_lotto_america\nAction Input: {}", "api_reaction": null}, {"api_name": "random_quickpick_for_play_for_lotto_america", "api_action": "\nAction: random_quickpick_for_play_for_lotto_america\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_lotto_america"}}, {"state": "generated_by_agent", "aseq": {"api_name": "general_statistics_for_lotto_america", "api_action": "\nAction: general_statistics_for_lotto_america\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_lotto_america"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_lotto_america"}}]}
{"URL": "35642", "query": "My friends and I are planning to attend an ice hockey match. Can you recommend a tournament for us to watch? Also, provide the current standings and the list of teams participating in that tournament.", "api_names": ["tournament_list_for_ice_hockey_data", "tournament_standings_for_ice_hockey_data", "tournament_teams_for_ice_hockey_data", "Finish", "tournament_info_for_ice_hockey_data", "getdiscusage_for_groupdocs_metadata_cloud", "baseball_predictions_by_day_for_betigolo_predictions", "get_entire_surah_chapter_for_al_quran", "get_all_watch_brands_for_watchsignals", "getlearningresources_for_power_bi_smartable", "hashtag_metadata_information_for_social_media_data_tt", "graffiti_tags_for_jet_set_radio_api", "getlearningresources_for_powerbi", "get_epic_free_games_coming_soon_for_epic_free_games", "get_book_information_by_book_id_for_hapi_books", "getdatetimebyaddress_for_date_and_time", "air_quality_history_for_air_quality", "create_user_for_suggestic", "tournament_fixture_for_basketball_data", "list_transactions_for_walletapi_cloud"], "api_descs": {"Finish": "No description available.", "air_quality_history_for_air_quality": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.", "baseball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.", "create_user_for_suggestic": "Each Suggestic partner/client has the ability to create their own set of users.", "get_all_watch_brands_for_watchsignals": "Get all watch brands", "get_book_information_by_book_id_for_hapi_books": "Giving its Id, this endpoint returns a lot of information about that book, such as Name, Published Date, Authors, Synopsis, and many more.", "get_entire_surah_chapter_for_al_quran": "Possible values: ***1-114*** \nResponds with entire Surah/Chapter of the Koran including all verses in the Surah and some additional information.", "get_epic_free_games_coming_soon_for_epic_free_games": "Get Epic Free Games - Coming Soon", "getdatetimebyaddress_for_date_and_time": "This endpoint internally calculates the co-ordinates and timezone to calculate the current date and time", "getdiscusage_for_groupdocs_metadata_cloud": " ", "getlearningresources_for_power_bi_smartable": "Get Power BI learning resources.", "getlearningresources_for_powerbi": "Get Power BI learning resources.", "graffiti_tags_for_jet_set_radio_api": "Returns a list of all Graffiti-Tags", "hashtag_metadata_information_for_social_media_data_tt": "Get hashtag metadata\n\nBasic informations as number of posts and etc", "list_transactions_for_walletapi_cloud": "Retrieve a pageable list of transactions for a time period.", "tournament_fixture_for_basketball_data": "Full match list with quarter, half time and final scores with venue info.", "tournament_info_for_ice_hockey_data": "Current season, stage structure(divisions,conferences etc.), country and many more information about a tournament.", "tournament_list_for_ice_hockey_data": "List of tournaments in your data coverage.", "tournament_standings_for_ice_hockey_data": "Team Rankings for a specific competition.", "tournament_teams_for_ice_hockey_data": "List of teams participating in a specific tournament."}, "aseqs": [{"api_name": "tournament_list_for_ice_hockey_data", "api_action": "\nAction: tournament_list_for_ice_hockey_data\nAction Input: {}", "api_reaction": null}, {"api_name": "tournament_info_for_ice_hockey_data", "api_action": "\nAction: tournament_info_for_ice_hockey_data\nAction Input: {\n  \"tournamentid\": 6\n}", "api_reaction": null}, {"api_name": "tournament_standings_for_ice_hockey_data", "api_action": "\nAction: tournament_standings_for_ice_hockey_data\nAction Input: {\n  \"tournamentid\": 6\n}", "api_reaction": null}, {"api_name": "tournament_teams_for_ice_hockey_data", "api_action": "\nAction: tournament_teams_for_ice_hockey_data\nAction Input: {\n  \"tournamentid\": 6\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tournament_list_for_ice_hockey_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_info_for_ice_hockey_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_teams_for_ice_hockey_data", "api_action": "\nAction: tournament_teams_for_ice_hockey_data\nAction Input: {\n  \"tournamentid\": 6\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_list_for_ice_hockey_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournament_list_for_ice_hockey_data"}}]}
{"URL": "32515", "query": "I'm a software developer working on a gambling simulation program. Can you provide me with the latest outcome details and the history of the last 30 spins? This data will be used to create realistic simulations of the lightning roulette game.", "api_names": ["history_for_xxxtremelightningrouletteapi", "latest_outcome_for_xxxtremelightningrouletteapi", "Finish", "fastsearchfull_for_avito_scraper", "get_exchanges_for_coinlore_cryptocurrency", "telegram_channel_info_for_telegram_v2", "categorylist_for_gtrend", "extract_for_linkedin_profiles", "download_for_boldsign", "create_key_for_mymemory_translation_memory", "get_rich_menu_list_for_line_messaging", "get_news_from_single_source_for_covid_news_v2", "memre_api_v1_study_for_learning_engine", "get_all_stats_for_euro_millions", "deleteaddress_for_chaingateway_io", "united_states_small_businesses_open_for_covid_19_economic_impact", "search_on_ebay_for_ebay_search_result", "hook_receiver_for_whin"], "api_descs": {"Finish": "No description available.", "categorylist_for_gtrend": " ", "create_key_for_mymemory_translation_memory": "MyMemory provides a specific API to create a new private TM key. Such key can be then used in the API call to identify a private TM or to privately contribute to a TM. Every contribution that has been created with a private TM key will be only shown if the same private TM key is used in the GET call; no other users will see private contributions without the right private TM key.", "deleteaddress_for_chaingateway_io": "Deletes an existing ethereum address. Be careful when using this function.", "download_for_boldsign": " ", "extract_for_linkedin_profiles": "Extracts data from Linkedin URL (profile or company page).", "fastsearchfull_for_avito_scraper": "this is a beta test of fast API of Full info Search", "get_all_stats_for_euro_millions": "Provide statistics about the frequency of each number in all draws in EuroMillions history in database. Here you can get the most frequent number or star in the draws.", "get_exchanges_for_coinlore_cryptocurrency": "Get all exchanges", "get_news_from_single_source_for_covid_news_v2": "Get news related to Covid 19 news from a single source which are WHO, CNN, the guardian, etc", "get_rich_menu_list_for_line_messaging": "Gets a list of all uploaded rich menus.", "history_for_xxxtremelightningrouletteapi": "Histories of the last 30 spins", "hook_receiver_for_whin": "This endpoint shall be triggered by the webhook origin and is not intended to be used through this frontend.", "latest_outcome_for_xxxtremelightningrouletteapi": "last spin details and Outcome Data", "memre_api_v1_study_for_learning_engine": "Get items a specific user should study.\n", "search_on_ebay_for_ebay_search_result": "Enter anything you want to search for on Ebay website.", "telegram_channel_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Channel\n\n- Title\n- Photo\n- Description\n- Members", "united_states_small_businesses_open_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change of small businesses open seasonally adjusted relative to January 4 - 31, 2020."}, "aseqs": [{"api_name": "latest_outcome_for_xxxtremelightningrouletteapi", "api_action": "\nAction: latest_outcome_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_xxxtremelightningrouletteapi", "api_action": "\nAction: history_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_xxxtremelightningrouletteapi", "api_action": "\nAction: history_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_xxxtremelightningrouletteapi", "api_action": "\nAction: latest_outcome_for_xxxtremelightningrouletteapi\nAction Input: {}", "api_reaction": null}}]}
{"URL": "85736", "query": "My company is looking to enhance our cybersecurity measures. Is there an API available that allows us to check if any of our employees' email addresses have been compromised in any data breaches? We would like to receive a report with the breach details for each email address.", "api_names": ["data_breach_checker_endpoint_for_data_breach_checker", "Finish", "time_zone_api_for_weatherapi_com", "list_all_api_for_testing_for_my_use", "postcodes_for_postcodejp_api", "by_category_for_moka_news", "yh_historical_for_yh_finance_complete", "getroute_for_woosmap"], "api_descs": {"Finish": "No description available.", "by_category_for_moka_news": "get the recent 50 news by category , EX :   Sport , World  .... etc", "data_breach_checker_endpoint_for_data_breach_checker": "The Data Breach Checker API provides a simple endpoint for users to check if their email has been compromised in any known data breaches.", "getroute_for_woosmap": "Get distance, duration and path (as a polyline) for a pair of origin and destination, based on the recommended route between those two points for a specified travel mode.\n", "list_all_api_for_testing_for_my_use": "list all api", "postcodes_for_postcodejp_api": "postcodes", "time_zone_api_for_weatherapi_com": "Time Zone API method allows a user to get up to date time zone and local time information in json.", "yh_historical_for_yh_finance_complete": "This endpoint returns the history of a public stock."}, "aseqs": [{"api_name": "data_breach_checker_endpoint_for_data_breach_checker", "api_action": "\nAction: data_breach_checker_endpoint_for_data_breach_checker\nAction Input: {\n  \"email\": \"employee1@example.com\"\n}", "api_reaction": null}, {"api_name": "data_breach_checker_endpoint_for_data_breach_checker", "api_action": "\nAction: data_breach_checker_endpoint_for_data_breach_checker\nAction Input: {\n  \"email\": \"employee2@example.com\"\n}", "api_reaction": null}, {"api_name": "data_breach_checker_endpoint_for_data_breach_checker", "api_action": "\nAction: data_breach_checker_endpoint_for_data_breach_checker\nAction Input: {\n  \"email\": \"employee4@example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "data_breach_checker_endpoint_for_data_breach_checker"}}, {"state": "generated_by_agent", "aseq": {"api_name": "data_breach_checker_endpoint_for_data_breach_checker"}}, {"state": "generated_by_agent", "aseq": {"api_name": "data_breach_checker_endpoint_for_data_breach_checker"}}, {"state": "generated_by_agent", "aseq": {"api_name": "data_breach_checker_endpoint_for_data_breach_checker", "data_breach_checker_endpoint_for_data_breach_checker": "\nAction: data_breach_checker_endpoint_for_data_breach_checker\nAction Input: {\n  \"email\": \"employee5@example.com\"\n}"}}]}
{"URL": "37015", "query": "I'm planning to invest in the cryptocurrency market and I need a comprehensive overview. Can you provide me with the latest information on all cryptocurrencies, including the name, slug, icon class, symbol, price, market cap, 24-hour volume, total volume, change in the last 24 hours, and change in the last 7 days? Additionally, fetch the forex information for the USD-EUR pair and the performance details of the forex majors. Finally, give me the latest data for the Saudi Aramco equity.", "api_names": ["info_for_investing_financial_stocks", "majors_price_for_investing_financial_stocks", "get_equity_latest_data_for_investing_financial_stocks", "all_crypto_for_investing_financial_stocks", "Finish", "fetch_business_info_for_whatsapp_scraper", "account_for_ppob", "wifi_qr_code_for_scanova_qr_code", "get_all_questions_for_ase_s_quiz_api", "home_for_contextoguess", "getimage_for_address_to_image", "matches_for_bet_at_home", "player_season_statistics_for_baseball_datafeeds_by_rolling_insights", "get_multiple_coin_details_for_your_choice_for_crypto_update_live", "retrieve_data_for_instant_cameroon_news", "eventlist_for_31events_send_native_calendar_invites", "getmaptilewithspanishlabels_for_maptiles", "speechapi_health_for_open", "detect_for_languagelayer", "generate_captcha_for_captcha"], "api_descs": {"Finish": "No description available.", "account_for_ppob": "API Account is used to display user information according to the Token embedded in the header request.", "all_crypto_for_investing_financial_stocks": "get all datatable of crypto", "detect_for_languagelayer": "API endpoint used to perform standard (single) language detection", "eventlist_for_31events_send_native_calendar_invites": "", "fetch_business_info_for_whatsapp_scraper": "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account.", "generate_captcha_for_captcha": "Generates a captcha and returns a UUID.", "get_all_questions_for_ase_s_quiz_api": "Get all questions without pagination", "get_equity_latest_data_for_investing_financial_stocks": "get equity  latest data by slug", "get_multiple_coin_details_for_your_choice_for_crypto_update_live": "This endpoint gives live detailed information about the current value of multiple cryptocurrencies. Separate coin name using \"_\" underscore symbol.", "getimage_for_address_to_image": "Generates an image for a given address. Images are output in JPEG as a base64 encoded string.", "getmaptilewithspanishlabels_for_maptiles": "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map.", "home_for_contextoguess": "Home", "info_for_investing_financial_stocks": "get forex info", "majors_price_for_investing_financial_stocks": "get all majors  currencies price", "matches_for_bet_at_home": "Latest matches by Bet-at-Home", "player_season_statistics_for_baseball_datafeeds_by_rolling_insights": "Returns Player Season Statistics", "retrieve_data_for_instant_cameroon_news": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range", "speechapi_health_for_open": " ", "wifi_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with WiFi network details. When scanned, the QR Code prompts the scanning device to 'Join the Network'. Note that this QR Code works only for Android devices. iPhones do not allow automatic joining of WiFi networks and will display network details as text."}, "aseqs": [{"api_name": "all_crypto_for_investing_financial_stocks", "api_action": "\nAction: all_crypto_for_investing_financial_stocks\nAction Input: {}", "api_reaction": null}, {"api_name": "info_for_investing_financial_stocks", "api_action": "\nAction: info_for_investing_financial_stocks\nAction Input: {\n  \"symbol\": \"USD-EUR\"\n}", "api_reaction": null}, {"api_name": "majors_price_for_investing_financial_stocks", "api_action": "\nAction: majors_price_for_investing_financial_stocks\nAction Input: {}", "api_reaction": null}, {"api_name": "get_equity_latest_data_for_investing_financial_stocks", "api_action": "\nAction: get_equity_latest_data_for_investing_financial_stocks\nAction Input: {\n  \"slug\": \"saudi-aramco\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_multiple_coin_details_for_your_choice_for_crypto_update_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_multiple_coin_details_for_your_choice_for_crypto_update_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_captcha_for_captcha", "api_action": "\nAction: generate_captcha_for_captcha\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_multiple_coin_details_for_your_choice_for_crypto_update_live", "api_action": "\nAction: get_multiple_coin_details_for_your_choice_for_crypto_update_live\nAction Input: {\n  \"coin_names\": \"all\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_multiple_coin_details_for_your_choice_for_crypto_update_live", "api_action": "\nAction: get_multiple_coin_details_for_your_choice_for_crypto_update_live\nAction Input: {}", "api_reaction": null}}]}
{"URL": "19792", "query": "What is the current market price and trading volume for Tesla Inc? Can you also provide the earnings history data for Apple Inc from January 1, 2019, to April 17, 2020?", "api_names": ["equity_daily_for_quotient", "equity_live_for_quotient", "Finish", "newspapers_for_news_v3", "translate_for_translate_all_languages", "ping_for_stocks_archive", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real", "loginuser_for_teste", "json_rpc_boolean_format_for_test_v2", "all_strains_descending_for_weed_strain", "list_of_champions_for_transfermarkt_db", "all_bps_for_bps", "getmaptilewithfrenchlabels_for_maptiles", "images_for_seo_api", "countries_list_for_similar_web"], "api_descs": {"Finish": "No description available.", "all_bps_for_bps": "Lister toutes les boîtes postales", "all_strains_descending_for_weed_strain": "List of all strains ordered by name in descending order.", "countries_list_for_similar_web": "List countries with meta data", "equity_daily_for_quotient": "Return end of day (daily) time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "equity_live_for_quotient": "Return current market price data given the input parameters.", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real": "Gera Mapa dos Arredores", "getmaptilewithfrenchlabels_for_maptiles": "Raster Map Tiles with French Labels", "images_for_seo_api": "Perform Google Image Search\n\nParameters\n----------\nquery : the string query to perform search. supports advance queries.\n\nReturns\n-------\njson: a list of results with the link, description, title, and image thumbnail for each result", "json_rpc_boolean_format_for_test_v2": "JSON RPC response format with single field of type boolean", "list_of_champions_for_transfermarkt_db": "Get a list of champions", "loginuser_for_teste": "", "newspapers_for_news_v3": "Lists the newspapers currently supported", "ping_for_stocks_archive": "Check that server is still alive", "translate_for_translate_all_languages": "Translates input text, returning translated text"}, "aseqs": [{"api_name": "equity_live_for_quotient", "api_action": "\nAction: equity_live_for_quotient\nAction Input: {\n  \"symbol\": \"TSLA\"\n}", "api_reaction": null}, {"api_name": "equity_daily_for_quotient", "api_action": "\nAction: equity_daily_for_quotient\nAction Input: {\n  \"is_from\": \"2019-01-01\",\n  \"to\": \"2020-04-17\",\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "equity_live_for_quotient"}}, {"state": "generated_by_agent", "aseq": {"api_name": "equity_daily_for_quotient", "api_action": "\nAction: equity_daily_for_quotient\nAction Input: {\n  \"symbol\": \"TSLA\",\n  \"start_date\": \"2019-01-01\",\n  \"end_date\": \"2020-04-17\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "equity_live_for_quotient"}}]}
{"URL": "78631", "query": "Can you fetch the funding rate history for the symbol BTCUSDT from 1652112000000 to 1652544000000? I'm interested in the funding rates generated every 8 hours. Moreover, retrieve the open interest for the symbol BTCUSD with a recording period of 1 day.", "api_names": ["Finish", "open_interest_for_bybit", "get_funding_rate_history_for_bybit", "rr_for_agc", "react_jobs_for_usa_jobs_for_it", "achievement_list_for_steam_store_api", "get_coverage_for_us_cell_coverage_by_zip_code", "test_for_test_v3", "ensure_flight_for_ensureflight", "trims_for_car_api", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits", "similarqueries_for_keyword_analysis", "random_quote_for_semantic_quotes", "recent_match_list_for_handball_data", "form5500_planname_for_form_5500_data"], "api_descs": {"Finish": "No description available.", "achievement_list_for_steam_store_api": "Returns a full list of achievements with information on what needs to be done to get the achievement and what percentage of players have achieved it.", "ensure_flight_for_ensureflight": "Just ensure flight", "form5500_planname_for_form_5500_data": "This will return information about the plan.", "get_coverage_for_us_cell_coverage_by_zip_code": "Get cell coverage for AT&T, T-Mobile, U.S. Cellular and Verizon by zip code", "get_funding_rate_history_for_bybit": "The funding rate is generated every 8 hours at 00:00 UTC, 08:00 UTC and 16:00 UTC. For example, if a request is sent at 12:00 UTC, the funding rate generated earlier that day at 08:00 UTC will be sent.", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 1 week intervals.", "open_interest_for_bybit": "Gets the total amount of unsettled contracts. In other words, the total number of contracts held in open positions.", "random_quote_for_semantic_quotes": "Get random quotes by length and/or tags.  **NOTE:** up to 10 results can be returned, they may have similar meanings. If you want want absolute random, just pick the first result (or set `limit` to 1) and call this API again to get another quote.", "react_jobs_for_usa_jobs_for_it": "React Jobs API", "recent_match_list_for_handball_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Handball Match List or Fixture endpoints.**", "rr_for_agc": "Test", "similarqueries_for_keyword_analysis": "Get **similar queries** for a given search query.", "test_for_test_v3": "this is test", "trims_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"year\", \"op\": \">=\", \"val\": 2010}, {\"field\": \"year\", \"op\": \"<=\", \"val\": 2020}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, bodies.type, engines.cam_type, engines.cylinders, engines.drive_type, engines.engine_type, engines.fuel_type, engines.transmission, engines.valve_timing, engines.valves, make_id, make_model_id, make_model_trim_id, created, and modified."}, "aseqs": [{"api_name": "get_funding_rate_history_for_bybit", "api_action": "\nAction: get_funding_rate_history_for_bybit\nAction Input: {\n  \"interval\": \"8h\",\n  \"start\": 1652112000000,\n  \"category\": \"linear\",\n  \"end\": 1652544000000,\n  \"symbol\": \"BTCUSDT\"\n}", "api_reaction": null}, {"api_name": "open_interest_for_bybit", "api_action": "\nAction: open_interest_for_bybit\nAction Input: {\n  \"symbol\": \"BTCUSD\",\n  \"period\": \"1d\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_funding_rate_history_for_bybit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "open_interest_for_bybit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_funding_rate_history_for_bybit", "api_action": "\nAction: get_funding_rate_history_for_bybit\nAction Input: {\n  \"interval\": \"8h\",\n  \"start\": 1652112000000,\n  \"category\": \"linear\",\n  \"end\": 1652544000000,\n  \"symbol\": \"BTCUSDT\"\n}", "api_reaction": null}}]}
{"URL": "59799", "query": "I'm planning to develop an app for Android and I want to explore the different categories available on the Google Play Store. Can you provide me with a list of all the categories? Additionally, I would like to know the age group recommendations for apps. Thank you!", "api_names": ["Finish", "get_categories_for_google_play_api", "get_ages_for_google_play_api", "commodity_groups_for_investing", "contests_for_contests", "hashtag_videos_for_tiktok_scraper_v2", "teamnextevents_for_mmaapi", "paragraph_for_jibber_jabber", "test_copy_for_test", "orgcode_cards_cardid_for_test2", "sort_games_for_mmo_games", "auto_complete_for_realty_in_au"], "api_descs": {"Finish": "No description available.", "auto_complete_for_realty_in_au": "Get suggestions by term or phrase. The returned data will be used with .../properties/list endpoint", "commodity_groups_for_investing": "Get data for commodity groups", "contests_for_contests": "Get the latest active contests list", "get_ages_for_google_play_api": "Get Ages", "get_categories_for_google_play_api": "Returns categories.", "hashtag_videos_for_tiktok_scraper_v2": "Get hashtag (challenge) videos.", "orgcode_cards_cardid_for_test2": "Returns card information for a given card ID. User authentication is required.", "paragraph_for_jibber_jabber": "Returns a **paragraph** with random sentences", "sort_games_for_mmo_games": "Sort games by release date, alphabetical, popularity or relevance", "teamnextevents_for_mmaapi": "Get information about the next events for a specific team.", "test_copy_for_test": "1"}, "aseqs": [{"api_name": "get_categories_for_google_play_api", "api_action": "\nAction: get_categories_for_google_play_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_categories_for_google_play_api", "api_action": "\nAction: get_categories_for_google_play_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_ages_for_google_play_api", "api_action": "\nAction: get_ages_for_google_play_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_categories_for_google_play_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_ages_for_google_play_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_ages_for_google_play_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "sort_games_for_mmo_games"}}]}
{"URL": "14523", "query": "As an app developer, I require a list of available numbers for receiving SMS messages. Also, change the current tag to 'myapp' and fetch the updates for newly received messages starting from the last message ID plus one.", "api_names": ["getnumbers_for_sms_receive", "gettag_for_sms_receive", "Finish", "getupdates_for_sms_receive", "settag_for_sms_receive", "autocomplete_for_flixbus_v2", "get_by_climate_for_house_plants", "get_best_player_for_viperscore", "hotels_dynamic_for_zumata", "search_for_market_intelligence_by_automata", "regions_for_phone_formatter", "posting_account_for_finhost", "get_variables_variable_id_values_for_ubidots", "users_favorite_get_for_songmeanings", "search_by_name_for_cocktails", "get_trend_keyword_for_trends_keywords_in_different_regions", "get_specific_dog_breed_for_dogbreeds", "detect_language_for_bidirectional_text_language_translation", "search_numbers_for_calltrackingmetrics", "airlines_airlines_and_the_countries_they_operate_in_for_timetable_lookup_"], "api_descs": {"Finish": "No description available.", "airlines_airlines_and_the_countries_they_operate_in_for_timetable_lookup_": "Return a list of airlines and the countries they operate in", "autocomplete_for_flixbus_v2": "Search for Flixbus stations", "detect_language_for_bidirectional_text_language_translation": "If you want to detect language only and not translate you can provide the text parameter and the detected language will be provided in the results", "get_best_player_for_viperscore": "\"Get best player\" will return the best player of each team with their rating.", "get_by_climate_for_house_plants": "Get plants by climate of their natural habitat.", "get_specific_dog_breed_for_dogbreeds": "Get all info from specific dog breed", "get_trend_keyword_for_trends_keywords_in_different_regions": "This API provides the flexibility to filter trending keywords based on a particular date, ensuring that developers receive precise and relevant information. By specifying the date as '2023-05-16', developers can retrieve trending keywords specifically for that day, enabling them to analyze and incorporate the most recent trends into their applications.", "get_variables_variable_id_values_for_ubidots": "This resource returns the values of the specified variable.  Every value will have a timestamp which is a value in milliseconds according to the POSIX standard.", "getnumbers_for_sms_receive": "Get a list of available numbers to receive messages from.", "gettag_for_sms_receive": "Get the current tag.", "getupdates_for_sms_receive": "Get updates about newly received messages.", "hotels_dynamic_for_zumata": "", "posting_account_for_finhost": "List assets transfers for the account", "regions_for_phone_formatter": "Returns a collection of supported regions for the specified\n IETF BCP 47 language tag string.", "search_by_name_for_cocktails": "Search Cocktail by name", "search_for_market_intelligence_by_automata": " ", "search_numbers_for_calltrackingmetrics": "", "settag_for_sms_receive": "Change the current tag.", "users_favorite_get_for_songmeanings": "Get a user’s favorites by specified type."}, "aseqs": [{"api_name": "getnumbers_for_sms_receive", "api_action": "\nAction: getnumbers_for_sms_receive\nAction Input: {}", "api_reaction": null}, {"api_name": "gettag_for_sms_receive", "api_action": "\nAction: gettag_for_sms_receive\nAction Input: {}", "api_reaction": null}, {"api_name": "settag_for_sms_receive", "api_action": "\nAction: settag_for_sms_receive\nAction Input: {\n  \"tag\": \"myapp\"\n}", "api_reaction": null}, {"api_name": "getupdates_for_sms_receive", "api_action": "\nAction: getupdates_for_sms_receive\nAction Input: {\n  \"start_id\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getnumbers_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getupdates_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "settag_for_sms_receive", "api_action": "\nAction: settag_for_sms_receive\nAction Input: {\"newTag\": \"myapp\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getupdates_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getupdates_for_sms_receive"}}]}
{"URL": "59221", "query": "I am planning to sell my property in Santa Monica and need assistance in determining the optimal listing price. Can you provide me with the recent sales data and market trends for this area? Additionally, I would like to see the contact information of agents specialized in selling properties in Santa Monica.", "api_names": ["Finish", "search_properties_for_sale_for_realtor", "property_details_for_realtor", "search_agents_for_realtor", "loginuser_for_erictestpet", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data", "findsubdistrict_for_india_pincode_api", "search_for_channels_for_youtube_media_downloader", "fed_policy_rates_for_u_s_economic_indicators", "email_check_smtp_for_fast_email_verifier", "listcategoriesandsub_categories_for_sandbox_ecombr_com_01_products", "get_session_messages_for_optitalk", "protocols_for__all_in_one_crypto_swiss_knife_", "advanced_search_for_ott_details", "keyword_search_with_ranking_for_google_local_rank_tracker", "simple_pv_power_forecast_for_solcast"], "api_descs": {"Finish": "No description available.", "advanced_search_for_ott_details": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.", "email_check_smtp_for_fast_email_verifier": "An easy way of checking your domain's SMTP.", "fed_policy_rates_for_u_s_economic_indicators": "Get daily interest rates paid by the Federal Reserve System on reserves.", "findsubdistrict_for_india_pincode_api": "findsubdistrict", "get_session_messages_for_optitalk": "Retrieve the message history inside a session.", "keyword_search_with_ranking_for_google_local_rank_tracker": "Make a Keyword search at a Coordinate (lat/lng) for all the business and get the ranking of a specific business at that point. The ranking data is determined by the business place_id or business name.", "listcategoriesandsub_categories_for_sandbox_ecombr_com_01_products": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html", "loginuser_for_erictestpet": "", "metrics_ohlcv_futures_trial_for_cryptocurrency_financial_data": "Limited coverage and availability for tests", "property_details_for_realtor": "Get property details by  property ID  or by Address", "protocols_for__all_in_one_crypto_swiss_knife_": "Get protocols.\nYou can search by adding 'q' query param.\n\nSupported chains:  \"eth, bsc, matic, avax, okt, hmy, heco, klay, op, arb, ftm, xdai, cro, mobm, celo, aurora, fuse, evmos, cfx, kava\";", "search_agents_for_realtor": "Search agents by city/zip", "search_for_channels_for_youtube_media_downloader": "This endpoint searches for YouTube channels. Pagination scraping is supported.", "search_properties_for_sale_for_realtor": "Search properties for sale by Address, School, City, Zip or Neighborhood. Filter the results using different parameter filters", "simple_pv_power_forecast_for_solcast": "The simple PV power request returns a first-guess PV power output forecast, based on your specified latitude and longitude plus some basic PV system characteristics."}, "aseqs": [{"api_name": "search_properties_for_sale_for_realtor", "api_action": "\nAction: search_properties_for_sale_for_realtor\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "search_agents_for_realtor", "api_action": "\nAction: search_agents_for_realtor\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "property_details_for_realtor", "api_action": "\nAction: property_details_for_realtor\nAction Input: {}", "api_reaction": null}, {"api_name": "search_agents_for_realtor", "api_action": "\nAction: search_agents_for_realtor\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_properties_for_sale_for_realtor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_properties_for_sale_for_realtor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_properties_for_sale_for_realtor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_properties_for_sale_for_realtor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_properties_for_sale_for_realtor"}}]}
{"URL": "72641", "query": "I work for a crypto news website and I need to gather tweets, blogs, and announcements from government sources. Can you provide me with a feed that includes all this information? It would be great if I can access everything in one place.", "api_names": ["get_all_feed_for_all_crypto_news_feed", "Finish", "get_ip_geolocation_for_ip_geolocation_find_ip_location_and_ip_info", "fake_weather_for_weathertest", "specs_v1_tier2_for_datamo", "get_sessions_for_optitalk", "metals_futures_prices_for_investing", "url_for_news_sentiment", "workspace_for_ocoya", "total_value_locked_for__all_in_one_crypto_swiss_knife_", "getlensesbyhashtag_for_snapchat", "getzipcodebycounty_for_zillow_base"], "api_descs": {"Finish": "No description available.", "fake_weather_for_weathertest": "Get a fake weather, no date or authentication is necessary", "get_all_feed_for_all_crypto_news_feed": "Returns all feed.\nTweets\nBlogs\nBinance\nUsGov", "get_ip_geolocation_for_ip_geolocation_find_ip_location_and_ip_info": "This endpoint returns geolocation and other useful points from an IP Address. If IP address is provided as query parameter, geolocation is performed on that IP address. If IP address is left empty, geolocation data of client IP is returned.", "get_sessions_for_optitalk": "Get a list of sessions and their corresponding `session_id`.", "getlensesbyhashtag_for_snapchat": "getLensesByHashtag", "getzipcodebycounty_for_zillow_base": "Get zip code by county", "metals_futures_prices_for_investing": "page source : https://www.investing.com/commodities/metals", "specs_v1_tier2_for_datamo": "Pull requested vehicle data for specific field parameters. Tier 2 allows the following to be queried by:  \n1. make\n2. model\n3. engineType\n4. bodyType\n\nAt least one query parameter is required for a successful call.", "total_value_locked_for__all_in_one_crypto_swiss_knife_": "Get TVL  in each chain", "url_for_news_sentiment": "Input news URL", "workspace_for_ocoya": "Returns workspace info."}, "aseqs": [{"api_name": "get_all_feed_for_all_crypto_news_feed", "api_action": "\nAction: get_all_feed_for_all_crypto_news_feed\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_feed_for_all_crypto_news_feed", "api_action": "\nAction: get_all_feed_for_all_crypto_news_feed\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_feed_for_all_crypto_news_feed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_feed_for_all_crypto_news_feed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_feed_for_all_crypto_news_feed"}}]}
{"URL": "25530", "query": "My company is organizing a team-building event in San Francisco, CA, USA. Can you find venues for team-building activities in the city and sort them by the best match? Also, retrieve the reviews for the top 3 venues and include reviews in English.", "api_names": ["business_reviews_for_yelp_reviews", "business_search_for_yelp_reviews", "Finish", "get_single_user_for_uers_api", "ttt_for_funtrip", "teamlastevents_for_mmaapi", "normalize_for_email_utilities", "get_messages_for_smsto", "ping_for_stock_api", "get_country_s_hashtags_for_twitter_hashtags", "get_types_for_horoscopes_ai", "cat_for_kitten_placeholder", "properties_get_details_deprecated_for_hotels", "https_customer_for_customer", "nearby_superchargers_for_nearby_tesla_superchargers"], "api_descs": {"Finish": "No description available.", "business_reviews_for_yelp_reviews": "Fetch a single or multiple business review pages from Yelp (each page includes up to 10 reviews).", "business_search_for_yelp_reviews": "Search for Yelp businesses by query / keyword and location.", "cat_for_kitten_placeholder": "Fetches a random cat picture.", "get_country_s_hashtags_for_twitter_hashtags": "Get hashtags based on country", "get_messages_for_smsto": "Fetch paginated messages.\n\nPlease note that the messages will be sorted by the date of creating (sending) - latest first.", "get_single_user_for_uers_api": "This Endpoint return Individual user data for the  provided user ID", "get_types_for_horoscopes_ai": "Return available types for the particular period.", "https_customer_for_customer": "https://Customer", "nearby_superchargers_for_nearby_tesla_superchargers": "Get nearby superchargers up to 50km away.", "normalize_for_email_utilities": "get normalized form of an email", "ping_for_stock_api": "Ping API", "properties_get_details_deprecated_for_hotels": "Get all available information of a property", "teamlastevents_for_mmaapi": "Get information about the last events for a specific team.", "ttt_for_funtrip": "ttt"}, "aseqs": [{"api_name": "business_search_for_yelp_reviews", "api_action": "\nAction: business_search_for_yelp_reviews\nAction Input: {\n  \"location\": \"San Francisco, CA, USA\",\n  \"query\": \"team-building activities\",\n  \"sort_by\": \"RECOMMENDED\"\n}", "api_reaction": null}, {"api_name": "business_reviews_for_yelp_reviews", "api_action": "\nAction: business_reviews_for_yelp_reviews\nAction Input: {\n  \"business_id\": \"QdNX2RbPe1dlqgnowOcKxQ\",\n  \"num_pages\": \"1\",\n  \"language\": \"en\"\n}", "api_reaction": null}, {"api_name": "business_reviews_for_yelp_reviews", "api_action": "\nAction: business_reviews_for_yelp_reviews\nAction Input: {\n  \"business_id\": \"QdNX2RbPe1dlqgnowOcKxQ\",\n  \"num_pages\": \"1\",\n  \"language\": \"en\"\n}", "api_reaction": null}, {"api_name": "business_search_for_yelp_reviews", "api_action": "\nAction: business_search_for_yelp_reviews\nAction Input: {\n  \"location\": \"San Francisco, CA, USA\",\n  \"query\": \"team-building activities\",\n  \"sort_by\": \"RECOMMENDED\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to find venues for team-building activities in San Francisco, CA, USA and sort them by the best match.", "api_name": "business_search_for_yelp_reviews"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_reviews_for_yelp_reviews"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_search_for_yelp_reviews", "api_action": "{\"location\": \"San Francisco, CA, USA\", \"query\": \"team-building activities\", \"sort_by\": \"BEST_MATCH\", \"radius\": 50000}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_search_for_yelp_reviews", "api_action": "\nAction: business_search_for_yelp_reviews\nAction Input: {\n  \"location\": \"San Francisco, CA, USA\",\n  \"query\": \"team-building activities venues\",\n  \"sort_by\": \"BEST_MATCH\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_superchargers_for_nearby_tesla_superchargers"}}]}
{"URL": "82528", "query": "My company organizes international events and we need information about the countries where the events will take place. Can you provide us with a list of country codes (ISO-3166)? It would be great if you could also give us details about a particular country with the code US, including its name and currency.", "api_names": ["get_country_details_for_travel_hacking_tool", "get_country_list_for_travel_hacking_tool", "Finish", "module_for_berita", "quarterly_income_statements_for_freedom_finance", "leaguemedia_for_esportapi", "getstocklocations_for_appibase", "alerts_active_region_region_for_national_weather_service", "game_lookup_for_cheapshark_game_deals", "decrypt_for_cryptocurrency_news", "billboard_global_200_for_billboard_v2", "watchlists_index_for_stocktwits", "getcompanybywebsite_for_returns_company_info_based_on_the_website", "total_live_tracked_aircraft_for_fachaapi", "getpetbyid_for_petstore_blitz"], "api_descs": {"Finish": "No description available.", "alerts_active_region_region_for_national_weather_service": "A list of active alerts by region. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/region/GL", "billboard_global_200_for_billboard_v2": "Get the Billboard Global 200 chart.", "decrypt_for_cryptocurrency_news": "Get the top latest news from Decrypt.", "game_lookup_for_cheapshark_game_deals": "Gets info for a specific game. Response includes a list of all deals associated with the game.", "get_country_details_for_travel_hacking_tool": "This returns details for a country based on the country codes (ISO-3166).", "get_country_list_for_travel_hacking_tool": "This endpoint returns a list of country codes (ISO-3166).", "getcompanybywebsite_for_returns_company_info_based_on_the_website": "For valid response use valid website domain.  Other values will generate exceptions. Subdomains will be removed.", "getpetbyid_for_petstore_blitz": "Returns a single pet", "getstocklocations_for_appibase": "Get all stock locations", "leaguemedia_for_esportapi": "Get the media related to a specific E-Sports league by providing the tournament ID.", "module_for_berita": "okeee", "quarterly_income_statements_for_freedom_finance": "Quarterly income statements", "total_live_tracked_aircraft_for_fachaapi": "Get total live tracked aircraft", "watchlists_index_for_stocktwits": "Returns a list of private watch lists for the authenticating user."}, "aseqs": [{"api_name": "get_country_list_for_travel_hacking_tool", "api_action": "\nAction: get_country_list_for_travel_hacking_tool\nAction Input: {}", "api_reaction": null}, {"api_name": "get_country_details_for_travel_hacking_tool", "api_action": "\nAction: get_country_details_for_travel_hacking_tool\nAction Input: {\n  \"code\": \"US\"\n}", "api_reaction": null}, {"api_name": "get_country_details_for_travel_hacking_tool", "api_action": "\nAction: get_country_details_for_travel_hacking_tool\nAction Input: {\n  \"code\": \"US\"\n}", "api_reaction": null}, {"api_name": "get_country_details_for_travel_hacking_tool", "api_action": "\nAction: get_country_details_for_travel_hacking_tool\nAction Input: {\n  \"code\": \"US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_country_list_for_travel_hacking_tool"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_details_for_travel_hacking_tool", "api_action": "/getCountryList", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_details_for_travel_hacking_tool", "api_action": "\nAction: get_country_details_for_travel_hacking_tool\nAction Input: {\n  \"code\": \"US\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_list_for_travel_hacking_tool"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_list_for_travel_hacking_tool"}}]}
{"URL": "15503", "query": "I need to update the translations in my Android app. Can you provide me with the translations version and Android version from the sample-app-config.json file? Additionally, I would like to know the current menu version and splash screen duration.", "api_names": ["sample_app_config_copy_for_sample_app_config_json", "Finish", "properties_v2_resolve_url_for_hotels", "calendars_get_economic_calendar_for_trading_view", "japan_filter_for_news_for_east_china_news", "state_for_referential", "blur_for_dagpi", "watchlists_index_for_stocktwits"], "api_descs": {"Finish": "No description available.", "blur_for_dagpi": "Blur Image", "calendars_get_economic_calendar_for_trading_view": "Get economic calendar by specific date range and countries", "japan_filter_for_news_for_east_china_news": "Filters Japan news from all sources", "properties_v2_resolve_url_for_hotels": "Hotels system is being merged with Expedia. This endpoint helps to convert the old hotel ID (embedded in the shared link, Ex : \"ho133528\" in hotels.com/ho133528/) to the new one (423818).", "sample_app_config_copy_for_sample_app_config_json": "test", "state_for_referential": "List the sub-regions/states/provinces/departments of the world's countries", "watchlists_index_for_stocktwits": "Returns a list of private watch lists for the authenticating user."}, "aseqs": [{"api_name": "sample_app_config_copy_for_sample_app_config_json", "api_action": "\nAction: sample_app_config_copy_for_sample_app_config_json\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to find the translations version and Android version from the sample-app-config.json file, as well as the current menu version and splash screen duration. Since there is no specific API call for these details, I will first extract the information using a sample_app_config_copy_for_sample_app_config_json API.\n\t\"api_name\": \"sample_app_config_copy_for_sample_app_config_json\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "sample_app_config_copy_for_sample_app_config_json"}}]}
{"URL": "34727", "query": "My family is planning a movie night and we need some family-friendly movies to watch. Can you recommend some movies suitable for children that are available on streaming services like Netflix, Prime Video, and Disney+? It would be great if you could provide the streaming links for these movies.", "api_names": ["Finish", "search_basic_free_for_streaming_availability", "autocomplete_for_webit_language", "domain_reputation_for_domain_reputation", "gamerounds_for_esportapi", "web_exchanges_for_open_defi", "get_watches_from_reference_number_for_watchsignals", "search_music_for_tiktok_video_no_watermark_v2", "querykeywords_for_keyword_analysis", "get_misinformation_score_account_twitter_account_get_for_mescalc"], "api_descs": {"Finish": "No description available.", "autocomplete_for_webit_language": "This endpoint provides autocomplete (word completion) for 80+ languages.", "domain_reputation_for_domain_reputation": "Evaluate reputation of a domain or IP (v1)", "gamerounds_for_esportapi": "Get game rounds for a specific E-Sports game by providing the game ID.", "get_misinformation_score_account_twitter_account_get_for_mescalc": "Retrieve account misinformation score by Twitter ID", "get_watches_from_reference_number_for_watchsignals": "Get watches from reference number", "querykeywords_for_keyword_analysis": "Get the **main keywords** for a given search query.", "search_basic_free_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "search_music_for_tiktok_video_no_watermark_v2": "Search music", "web_exchanges_for_open_defi": " "}, "aseqs": [{"api_name": "search_basic_free_for_streaming_availability", "api_action": "\nAction: search_basic_free_for_streaming_availability\nAction Input: {\n  \"services\": \"netflix,prime_video,disney_plus\",\n  \"country\": \"US\",\n  \"show_type\": \"movie\",\n  \"keyword\": \"family\"\n}", "api_reaction": null}, {"api_name": "search_basic_free_for_streaming_availability", "api_action": "\nAction: search_basic_free_for_streaming_availability\nAction Input: {\n  \"services\": \"netflix,disney_plus\",\n  \"country\": \"US\",\n  \"show_type\": \"movie\",\n  \"keyword\": \"family\"\n}", "api_reaction": null}, {"api_name": "search_basic_free_for_streaming_availability", "api_action": "\nAction: search_basic_free_for_streaming_availability\nAction Input: {\n  \"services\": \"netflix\",\n  \"country\": \"US\",\n  \"show_type\": \"movie\",\n  \"keyword\": \"family\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_basic_free_for_streaming_availability"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_basic_free_for_streaming_availability"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_basic_free_for_streaming_availability"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_basic_free_for_streaming_availability"}}]}
{"URL": "50106", "query": "I need to gather external information about a specific device-asset. The identifier is '71491234-A'. Can you please assist me in retrieving the code, status, and message associated with this identifier? Also, let me know if there are any optional parameters available for this API call.", "api_names": ["get_device_asset_by_identifier_for_basic_info_vikkon_assets", "get_device_asset_by_identifier_copy_for_basic_info_vikkon_assets", "Finish", "get_abyssal_dungeons_for_lost_ark", "download_airports_for_priceline_com_provider", "rarity_tools_for_opensea_v2", "retrieve_uk_postal_sector_outline_boundaries_for_uk_boundaries_io", "players_photo_for_soccerway_feed", "gettag_for_sms_receive", "global_email_v4_for_global_email_v4", "verse_range_api_for_complete_study_bible", "google_fake_autocomplete_for_memeados", "orderlist_for_13", "get_song_for_youtube_music_api_detailed_", "video_details_for_youtube_data", "video_comments_for_youtube_v3_v2", "getsupportedfileformats_for_groupdocs_metadata_cloud", "constructor_standings_for_formula_1_standings"], "api_descs": {"Finish": "No description available.", "constructor_standings_for_formula_1_standings": "Get the current season constructor standings.", "download_airports_for_priceline_com_provider": "Downloads a list of airports with IATA codes for Flight search", "get_abyssal_dungeons_for_lost_ark": "endpoint to get all abyssal dungeons", "get_device_asset_by_identifier_copy_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier", "get_device_asset_by_identifier_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier", "get_song_for_youtube_music_api_detailed_": "Returns metadata and streaming information about a song or video.", "getsupportedfileformats_for_groupdocs_metadata_cloud": " ", "gettag_for_sms_receive": "Get the current tag.", "global_email_v4_for_global_email_v4": "Define Input Fields", "google_fake_autocomplete_for_memeados": "Generate Fake google autocomplete", "orderlist_for_13": "Retrieves up to 50 orders", "players_photo_for_soccerway_feed": "Get player photo", "rarity_tools_for_opensea_v2": "Rarity Tools Collection Items Endpoint , to  use you need to understand the source code of the webpage and reconstruct.", "retrieve_uk_postal_sector_outline_boundaries_for_uk_boundaries_io": "example: Query by \"W41,W42\" sectors.", "verse_range_api_for_complete_study_bible": "Use when you only want to fetch a passage subset, not the entire chapter.", "video_comments_for_youtube_v3_v2": "Get YouTube video comments.", "video_details_for_youtube_data": "video-details"}, "aseqs": [{"api_name": "get_device_asset_by_identifier_for_basic_info_vikkon_assets", "api_action": "\nAction: get_device_asset_by_identifier_for_basic_info_vikkon_assets\nAction Input: {\n  \"identifier\": \"71491234-A\"\n}", "api_reaction": null}, {"api_name": "get_device_asset_by_identifier_copy_for_basic_info_vikkon_assets", "api_action": "\nAction: get_device_asset_by_identifier_copy_for_basic_info_vikkon_assets\nAction Input: {\n  \"identifier\": \"71491234-A\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_device_asset_by_identifier_for_basic_info_vikkon_assets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_device_asset_by_identifier_for_basic_info_vikkon_assets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_device_asset_by_identifier_for_basic_info_vikkon_assets"}}]}
{"URL": "8713", "query": "I am planning to relocate to a new country. Can you fetch the details of the country's capital, currency, and time zone? Additionally, it would be great to know the list of cities in the country.", "api_names": ["country_details_for_referential_db", "countries_for_referential_db", "Finish", "membersofateam_for_ishan", "get_search_token_for_trulia_real_estate_scraper", "get_channel_description_for_gwyo_twitch", "novel_novel_id_chapters_for_web_novel_api", "auto_complete_for_redfin_base", "users_for_geospark", "emoji_flag_by_country_for_geosource_api", "top_property_managers_for_airdna", "validate_wa_number_for_bulk_whatsapp_validator", "gedetailedtinsiders_for_insiders", "tokens_for_tokenlist", "qrcode_for_qr_code_v18", "get_username_arena_of_valor_for_id_game_checker", "match_embed_link_for_football_live_stream_api", "odds_for_fdj"], "api_descs": {"Finish": "No description available.", "auto_complete_for_redfin_base": "You send a request and receive the following information:\n- `id`: The unique identifier for the city.\n- `type`: The type of the city.\n- `name`: The name of the city.\n- `subName`: The additional description of the city.\n- `url`: The direct URL to access the city's information page on Redfin.com.\n- `active`: The active status of the city.\n- `claimedHome`: The status of claimed home ownership.\n- `invalidMRS`: The invalid MRS (Market Revenue Share) status.\n- `businessMarketIds`: The list of relevant business market IDs.\n- `countryCode`: The country code.\n- `internalSearchVolume`: The internal search volume statistic.", "countries_for_referential_db": "Get the list of countries.", "country_details_for_referential_db": "Get the country details by country code", "emoji_flag_by_country_for_geosource_api": "Retrives  the emoji flag code of the country.", "gedetailedtinsiders_for_insiders": "Get insiders with details", "get_channel_description_for_gwyo_twitch": "Get Channel Description (using username or id)", "get_search_token_for_trulia_real_estate_scraper": "Get search token and use it in **search/for_sale**, **search/for_rent**, **search/sold** endpoints.", "get_username_arena_of_valor_for_id_game_checker": "Enter your Arena of Valor ID  in the required parameters", "match_embed_link_for_football_live_stream_api": "Live Link", "membersofateam_for_ishan": " ", "novel_novel_id_chapters_for_web_novel_api": "Returns the Available Chapter Sources for the Requested Novel ID.", "odds_for_fdj": "Latest Odds for FDJ", "qrcode_for_qr_code_v18": "Get a QR Code from an input text", "tokens_for_tokenlist": "tokens list and contract based on network parameter.", "top_property_managers_for_airdna": "Returns the largest property managers", "users_for_geospark": "Get users details", "validate_wa_number_for_bulk_whatsapp_validator": "enter the number you want to validate.\nLearn how to use it on this [video](https://youtu.be/_h5ybzp9UNU)."}, "aseqs": [{"api_name": "countries_for_referential_db", "api_action": "\nAction: countries_for_referential_db\nAction Input: {}", "api_reaction": null}, {"api_name": "countries_for_referential_db", "api_action": "\nAction: countries_for_referential_db\nAction Input: {}", "api_reaction": null}, {"api_name": "country_details_for_referential_db", "api_action": "\nAction: country_details_for_referential_db\nAction Input: {\n  \"countrycode\": \"CA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "countries_for_referential_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_search_token_for_trulia_real_estate_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "country_details_for_referential_db", "api_action": "\nAction: country_details_for_referential_db\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "emoji_flag_by_country_for_geosource_api", "api_action": "\nAction: emoji_flag_by_country_for_geosource_api\nAction Input: {\n  \"country_code\": \"CA\"\n}", "api_reaction": null}}]}
{"URL": "34404", "query": "My friend is planning to move to Spain. Can you give me a list of all the ASN numbers associated with Spain? It would be helpful to know the organization, country, and IP ranges for each ASN.", "api_names": ["get_asn_by_country_for_asn_details", "Finish", "categorize_website_for_website_categorization_api", "geteventsid_for_wosti_futbol_tv_peru", "comments_for_youtube_v3_alternative", "getrecentanimes_for_gogoanime_data_api", "status_200_for_daily_ovrll_0822202130418", "airqualityhealthindex_for_carbonfootprint", "enrichment_for_tomba", "loginuser_for_freeplanwithhardlimit", "all_divisions_for_bdapi", "yearly_cashflow_statements_for_freedom_finance"], "api_descs": {"Finish": "No description available.", "airqualityhealthindex_for_carbonfootprint": "Return the official air quality health index (1 to 10) bases on key parameters.The national AQHI is based on three-hour average concentrations of ground-level ozone (O3), nitrogen dioxide (NO2), and fine particulate matter (PM2.5). O3 and NO2 are measured in parts per billion (ppb) while PM2.5 is \t measured in micrograms per cubic metre (ug/m3)", "all_divisions_for_bdapi": "`/v1.0/divisions`\nGet all divisions of Bangladesh in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  division: string\n  divisionbn: string\n]\n```", "categorize_website_for_website_categorization_api": "Returns the top 3 categories for any website.", "comments_for_youtube_v3_alternative": "Get Comments of the particular video", "enrichment_for_tomba": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person’s name, location and social handles from an email", "get_asn_by_country_for_asn_details": "Enter country code (ISO 2 letter code such as US, GB etc) to get all the ASNs associated with that country.", "geteventsid_for_wosti_futbol_tv_peru": "Obtener el evento por identificador único  del listado de eventos de partidos de fútbol televisados en Perú.\n\n> Este endpoints requiere de un parámetro denominado Id.", "getrecentanimes_for_gogoanime_data_api": "Get Animes From googanime Recent Page", "loginuser_for_freeplanwithhardlimit": "", "status_200_for_daily_ovrll_0822202130418": "Testing", "yearly_cashflow_statements_for_freedom_finance": "Annual cashflow statements"}, "aseqs": [{"api_name": "get_asn_by_country_for_asn_details", "api_action": "\nAction: get_asn_by_country_for_asn_details\nAction Input: {\n  \"country_code\": \"ES\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_asn_by_country_for_asn_details"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_asn_by_country_for_asn_details"}}]}
{"URL": "55132", "query": "I'm planning a skiing adventure with my friends and we're considering Jackson Hole. Can you provide us with the 5-day forecast for the resort? We would like to know the temperature, wind speed, snowfall, and rain. It would also be great to have the current snow conditions and hourly forecast.", "api_names": ["current_snow_conditions_for_ski_resort_forecast", "hourly_forecast_for_ski_resort_forecast", "5_day_forecast_for_ski_resort_forecast", "Finish", "get_10_random_quotes_for_anime_quotes", "fetch_by_region_for_magical_taske", "ip_locator_for_ip_geolocation_metadata", "hls_for_twitter", "list_of_cakes_for_the_birthday_cake_db", "list_for_surebets", "example_sentences_for_dictionary_translation_hablaa", "icecream_ingredient_for_recipe_finder", "details_for_patreon", "search_for_gearbest", "get_random_named_color_for_colorful", "test_for_ginger", "significant_earthquakes_past_day_for_everyearthquake", "leagues_v2_get_table_for_livescore_v2", "get_your_data_for_request_boomerang", "all_solutions_for_wordle_answers_solutions"], "api_descs": {"5_day_forecast_for_ski_resort_forecast": "Returns the 5 day forecast for a given resort name", "Finish": "No description available.", "all_solutions_for_wordle_answers_solutions": "Calling this endpoint you will get all the historical solutions of the Wordle game", "current_snow_conditions_for_ski_resort_forecast": "Returns the current snow conditions for a given resort name", "details_for_patreon": "Get the details and general information of a Creator with the `creator_id`.", "example_sentences_for_dictionary_translation_hablaa": "Request multiple example sentences containing the word to translate.", "fetch_by_region_for_magical_taske": "This endpoint fetches records by region as defined in the `ABOUT` section above. You have to provide region and a limit of the number of records returned.", "get_10_random_quotes_for_anime_quotes": "Get 10 random quotes", "get_random_named_color_for_colorful": "**quantity** _integer_ (optional) The number of colors to return. Max is 50. If no quantity is specified, returns only one color-object. Quantities above 50 will default to 50.\n\nIf a quantity less than 1 is used, it will default to 0, and an empty array will be returned. If the quantity cannot be parsed to an integer, a 400 error will be returned.\n\nReturns an array of objects, or one object, containing information about random colors from the list of named color keywords that can be used in CSS according to the W3 standard. The color-object contains the color codes in RGB, CMYK, HEX, HSL, and HSV (HSB). In addition the property \"safe\" specifies whether the color is [web-safe](https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors) or not.", "get_your_data_for_request_boomerang": "Returns the data that you provide. The data parameter must be a valid JSON", "hls_for_twitter": "hls => mp4 converter", "hourly_forecast_for_ski_resort_forecast": "Returns the hourly forecast for a given resort name", "icecream_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random icecream recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "ip_locator_for_ip_geolocation_metadata": "The API supports .csv, .xml and .json as output formats.", "leagues_v2_get_table_for_livescore_v2": "Get table league by category (football, cricket, basketball, tennis, hockey) and competition\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png", "list_for_surebets": "Get all available Surebets", "list_of_cakes_for_the_birthday_cake_db": "This endpoint responds with a list of cakes that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cake Recipe by ID\t\n\" endpoint to receive the detailed recipe.", "search_for_gearbest": " ", "significant_earthquakes_past_day_for_everyearthquake": "Significant Earthquakes, Past Day", "test_for_ginger": "-"}, "aseqs": [{"api_name": "5_day_forecast_for_ski_resort_forecast", "api_action": "\nAction: 5_day_forecast_for_ski_resort_forecast\nAction Input: {\n  \"resort\": \"Jackson Hole\"\n}", "api_reaction": null}, {"api_name": "current_snow_conditions_for_ski_resort_forecast", "api_action": "\nAction: current_snow_conditions_for_ski_resort_forecast\nAction Input: {\n  \"resort\": \"Jackson Hole\"\n}", "api_reaction": null}, {"api_name": "hourly_forecast_for_ski_resort_forecast", "api_action": "\nAction: hourly_forecast_for_ski_resort_forecast\nAction Input: {\n  \"resort\": \"Jackson Hole\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the 5-day forecast for Jackson Hole's ski resort first, then get the current snow conditions and hourly forecast.\n\t\"api_name\": \"5_day_forecast_for_ski_resort_forecast\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "all_solutions_for_wordle_answers_solutions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "hourly_forecast_for_ski_resort_forecast"}}, {"state": "generated_by_agent", "aseq": {"api_name": "5_day_forecast_for_ski_resort_forecast", "api_action": "\nAction: 5_day_forecast_for_ski_resort_forecast\nAction Input: {\n  \"resort\": \"Jackson Hole\"\n}", "api_reaction": null}}]}
{"URL": "9769", "query": "I want to know the details of the trading pair with the pair slug 'ETH-USDC' on the Sushiswap exchange. Also, provide me with the trade data for the same pair for the latest hour.", "api_names": ["Finish", "web_pair_trade_data_for_open_defi", "web_pair_details_for_open_defi", "responses_from_a_question_for_moodring", "language_list_for_real_time_news_data", "prediction_for_timeseries_prediction_model", "get_products_for_my_store", "get_ultra_for_streaming_availability", "categories_v2_list_for_forever21", "airport_search_for_flight_fare_search", "property_to_rent_for_uk_real_estate_rightmove", "messages_unlike_for_stocktwits", "120_hour_forecast_for_weather", "forgeversionlist_for_minecraft_forge_optifine", "v1_covid_for_covid_19_news", "languages_for_popular_languages", "menudetails_for_testing_v2", "get_all_cities_in_vietnam_for_viet_nam_administrative_divisions"], "api_descs": {"120_hour_forecast_for_weather": "Returns a forecast for up to 120 hours in the future (default 48 hours)", "Finish": "No description available.", "airport_search_for_flight_fare_search": "An endpoint to search airports", "categories_v2_list_for_forever21": "List all categories from F21", "forgeversionlist_for_minecraft_forge_optifine": "This method return a forge version list in JSON format.", "get_all_cities_in_vietnam_for_viet_nam_administrative_divisions": "This endpoint will return back all names of cities in Vietnam", "get_products_for_my_store": "Get all products in the store", "get_ultra_for_streaming_availability": "Get the details of a show via IMDb or TMDb id, including the global streaming availability info", "language_list_for_real_time_news_data": "Get valid languages for a country code, to be used with all other APIs.", "languages_for_popular_languages": "Get list of most popular  languages", "menudetails_for_testing_v2": "Menu API", "messages_unlike_for_stocktwits": "Unlike a message on StockTwits as the authenticating user.", "prediction_for_timeseries_prediction_model": "predict next period with dates and values", "property_to_rent_for_uk_real_estate_rightmove": "Property to rent", "responses_from_a_question_for_moodring": "Get all responses to a question.", "v1_covid_for_covid_19_news": "Highly customizable search through our database of news only on the next specific keywords: \n`covid`,`covid-19`, `coronavirus`, `коронавирус`, `koronavirüs`, `koronavirüs`, `coronavirüs`, `التاجى`\nAll filters and sorting options are allowed.", "web_pair_details_for_open_defi": " ", "web_pair_trade_data_for_open_defi": " "}, "aseqs": [{"api_name": "web_pair_details_for_open_defi", "api_action": "\nAction: web_pair_details_for_open_defi\nAction Input: {\n  \"chain_slug\": \"ethereum\",\n  \"pair_slug\": \"ETH-USDC\",\n  \"exchange_slug\": \"sushiswap\"\n}", "api_reaction": null}, {"api_name": "web_pair_trade_data_for_open_defi", "api_action": "\nAction: web_pair_trade_data_for_open_defi\nAction Input: {\n  \"pair_id\": 9261,\n  \"period\": \"4h\"\n}", "api_reaction": null}, {"api_name": "web_pair_trade_data_for_open_defi", "api_action": "\nAction: web_pair_trade_data_for_open_defi\nAction Input: {\n  \"pair_id\": 9261,\n  \"period\": \"30m\"\n}", "api_reaction": null}, {"api_name": "web_pair_trade_data_for_open_defi", "api_action": "\nAction: web_pair_trade_data_for_open_defi\nAction Input: {\n  \"pair_id\": 9261,\n  \"period\": \"1d\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "web_pair_trade_data_for_open_defi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_pair_trade_data_for_open_defi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_pair_trade_data_for_open_defi", "api_action": "\nAction: web_pair_trade_data_for_open_defi\nAction Input: {\n  \"pair_id\": 9261,\n  \"period\": \"1h\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_pair_trade_data_for_open_defi", "api_action": "\nAction: web_pair_trade_data_for_open_defi\nAction Input: {\n  \"pair_id\": 9261,\n  \"period\": \"1h\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_pair_trade_data_for_open_defi", "api_action": "\nAction: web_pair_trade_data_for_open_defi\nAction Input: {\n  \"pair_id\": 9261,\n  \"period\": \"1h\"\n}", "api_reaction": null}}]}
{"URL": "2486", "query": "I'm exploring a new city and I need recommendations for nearby landmarks and tourist attractions. Could you please suggest landmarks and tourist attractions within a 1-kilometer radius of the coordinates 48.8566° N, 2.3522° E? It would be great to know the categories of these establishments.", "api_names": ["nearby_for_places_nearby_a_coordinates", "categories_for_places_nearby_a_coordinates", "Finish", "memre_api_v1_concepts_for_learning_engine", "getwebsitesscreenshot_for_images_infos_api1", "search_for_sale_for_trulia_real_estate_scraper", "getassignments_for_aspose_tasks_cloud", "json_rpc_boolean_format_for_test_v2", "calendars_get_economic_calendar_for_trading_view", "find_feed_find_get_for_facebook_user_info", "search_products_all_countries_for_amazon_web_scraping_api", "getstatsbymonth_for_trinidad_covid_19_statistics", "get_season_totals_allstar_for_nba_stats_v2", "video_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin", "tone_for_typography", "get_the_stock_history_by_code_for_stocks", "driver_s_quotes_for_f1_drivers_quotes", "full_data_for_question_explorer"], "api_descs": {"Finish": "No description available.", "calendars_get_economic_calendar_for_trading_view": "Get economic calendar by specific date range and countries", "categories_for_places_nearby_a_coordinates": "Categories of establishments.", "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.", "find_feed_find_get_for_facebook_user_info": "Find Feed by UID or by_object_id(PageID, GroupID) ", "full_data_for_question_explorer": "full data", "get_season_totals_allstar_for_nba_stats_v2": "Api to query season totals allstar", "get_the_stock_history_by_code_for_stocks": "Get the stock history by code.", "getassignments_for_aspose_tasks_cloud": " ", "getstatsbymonth_for_trinidad_covid_19_statistics": "This endpoint fetches Trinidad & Tobago Covid 19 statistics by month. For a valid response, the months are input as \"01\" or \"12\" and not the actual month name such as \"January\" or \"December\".", "getwebsitesscreenshot_for_images_infos_api1": "Capture a screenshot from website", "json_rpc_boolean_format_for_test_v2": "JSON RPC response format with single field of type boolean", "memre_api_v1_concepts_for_learning_engine": "Retrieve a list of concepts for the current customer.", "nearby_for_places_nearby_a_coordinates": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nReturns up to 60 places per request.", "search_for_sale_for_trulia_real_estate_scraper": "To download data from SALE, you must first generate a Token with Get search token and set search_type=ForSale. Then you need to use this generated token by setting the search_token value in this endpoint. Or just use one of our developer libraries. Everything is already implemented there.", "search_products_all_countries_for_amazon_web_scraping_api": "Allows to search products in Amazon using real time data scraping API.", "tone_for_typography": " ", "video_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the video in original hd quality by passing pinterest video pin address"}, "aseqs": [{"api_name": "nearby_for_places_nearby_a_coordinates", "api_action": "\nAction: nearby_for_places_nearby_a_coordinates\nAction Input: {\n  \"lat\": 48.8566,\n  \"lon\": 2.3522,\n  \"radius\": 1000\n}", "api_reaction": null}, {"api_name": "categories_for_places_nearby_a_coordinates", "api_action": "\nAction: categories_for_places_nearby_a_coordinates\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "nearby_for_places_nearby_a_coordinates"}}, {"state": "generated_by_agent", "aseq": {"api_name": "categories_for_places_nearby_a_coordinates"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_for_places_nearby_a_coordinates"}}]}
{"URL": "82124", "query": "Retrieve the TikTok user info for the username 'therock' and display their nickname, avatar, signature, and follower count. Also, retrieve the 30 latest feed items from the TikTok account 'realmadrid' and display the video description, create time, and video cover.", "api_names": ["Finish", "user_feed_for_tiktok_bulletproof", "user_info_for_tiktok_bulletproof", "top_collections_this_week_for_top_nft_sales", "gethighlights_for_sportapi", "get_word_by_contain_for_random_word_api", "ip2currency_api_for_ip2currency", "competitions_for_zeus_api", "latest_for_stapi_showerthoughts", "filter_prep_time_in_minutes_for_keto_diet", "portfolio_for_freefloatus", "get_all_subcategories_for_reuters_business_and_financial_news", "amenities_for_airbnb_listings", "constructorstandingsafterarace_for_formula_1_fixed", "matches_list_live_deprecated_for_livescore_v2"], "api_descs": {"Finish": "No description available.", "amenities_for_airbnb_listings": "Retrieves amenities ids And descriptions. Returns 50 results", "competitions_for_zeus_api": "List all available competitions 🏆.", "constructorstandingsafterarace_for_formula_1_fixed": "To list the constructor standings after a specific race (round) in a season(year), use this endpoint.\n\n", "filter_prep_time_in_minutes_for_keto_diet": "Gives keto recipes within given range of preparation time.\nprep_time_in_minutes__lt = Less than\nprep_time_in_minutes__gt = Greater than", "get_all_subcategories_for_reuters_business_and_financial_news": "Get all SubCategories", "get_word_by_contain_for_random_word_api": "Returns a random word that contains a certain string.\nFor example, if the string is \"le\" then you will get any word that contains the string, whether it's at **the start, the end or the middle**, and you will get for example \"odourless\".", "gethighlights_for_sportapi": "GetHighlights Api Data", "ip2currency_api_for_ip2currency": "Currency by IP Geolocation API", "latest_for_stapi_showerthoughts": "chose a number between 1 to 500 and based on that all the latest showerthoughts on the subReddit will be fetched.\n\nif the number is not specified a total of 100 showerthougts are returned by default.", "matches_list_live_deprecated_for_livescore_v2": "List available live matches at request time", "portfolio_for_freefloatus": "Download your freefloat portfolio.", "top_collections_this_week_for_top_nft_sales": "Top trending collections this week", "user_feed_for_tiktok_bulletproof": "Retrieves 30 latest feed items from TikTok account, by username", "user_info_for_tiktok_bulletproof": "Retrieve TikTok user info by username"}, "aseqs": [{"api_name": "user_info_for_tiktok_bulletproof", "api_action": "\nAction: user_info_for_tiktok_bulletproof\nAction Input: {\n  \"username\": \"therock\"\n}", "api_reaction": null}, {"api_name": "user_feed_for_tiktok_bulletproof", "api_action": "\nAction: user_feed_for_tiktok_bulletproof\nAction Input: {\n  \"username\": \"realmadrid\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_info_for_tiktok_bulletproof"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_feed_for_tiktok_bulletproof", "api_action": "\nAction: user_feed_for_tiktok_bulletproof\nAction Input: {\n  \"username\": \"therock\",\n  \"count\": 30\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_info_for_tiktok_bulletproof", "api_action": "\nAction: user_info_for_tiktok_bulletproof\nAction Input: {\n  \"username\": \"therock\",\n  \"fields\": [\n    \"nickname\",\n    \"avatar\",\n    \"signature\",\n    \"follower_count\"\n  ]\n}", "api_reaction": null}}]}
{"URL": "17062", "query": "I'm looking for a transitaire in New Caledonia to help with customs clearance. Can you provide me with their contact details, including name and phone number?", "api_names": ["transitaires_for_transitaires", "Finish", "redeploy_for_maytapi_whatsapp", "get_car_data_for_infocarsapi", "getmusiclenses_for_snapchat", "get_all_the_latest_articles_for_dev_to_api", "youtube_weekly_for_musicdata_api", "get_all_symbols_for_finance_data", "posts_by_username_for_reddit", "getdocumentrequestparameters_for_groupdocs_translation_cloud", "transit_for_mymappi", "get_ticker_for_specific_coin_for_coinlore_cryptocurrency"], "api_descs": {"Finish": "No description available.", "get_all_symbols_for_finance_data": "Get all available symbols in API", "get_all_the_latest_articles_for_dev_to_api": "It returns all the latest articles present in the dev.to website.", "get_car_data_for_infocarsapi": "You can get specifications, pictures and the average pricing of a car", "get_ticker_for_specific_coin_for_coinlore_cryptocurrency": "Get ticker for specific coin", "getdocumentrequestparameters_for_groupdocs_translation_cloud": " ", "getmusiclenses_for_snapchat": "getMusicLenses", "posts_by_username_for_reddit": "Posts By Username", "redeploy_for_maytapi_whatsapp": "Redeploys docker instance of your phone. If your phone having any unexpected problems you can use this endpoint to reboot the instance.", "transit_for_mymappi": "Calculates a route between an origin and a destination in public transport. It takes into consideration several configuration options in order to customize the response.", "transitaires_for_transitaires": "Renvoie tous les transiatires", "youtube_weekly_for_musicdata_api": "Most viewed Youtube music videos weekly"}, "aseqs": [{"api_name": "transitaires_for_transitaires", "api_action": "\nAction: transitaires_for_transitaires\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "transitaires_for_transitaires"}}, {"state": "generated_by_agent", "aseq": {"api_name": "transitaires_for_transitaires"}}]}
{"URL": "70003", "query": "I'm a student studying abroad in Europe and I need to convert my currency from USD to EUR. Can you help me with the currency conversion from USD to EUR? Moreover, provide me with the latest exchange rate and any other available currencies I can convert to?", "api_names": ["free_exchange_rates_for_currency_v2", "convert_for_currency_v2", "exchange_rates_for_currency_v2", "Finish", "list_user_comments_for_soundcloud_scraper", "get_vehicule_info_for_api_plaque_immatriculation_siv", "convert_ingredient_for_food_ingredient_measurement_conversion", "get_emoji_category_list_for_funny_emojis", "veiculo_tipo_for_veiculos_api", "test_copy_for_test", "v1_randomword_for_random_word_by_api_ninjas", "user_media_for_twitter_v2_v2", "getzone_for_woosmap", "getlatestbysecuritiescode_for_jp_funda", "test_for_vps_tester", "get_quotes_for_quotsy", "player_information_for_basketball_datafeeds_by_rolling_insights", "movie_suggestions_for_list_movies_v3", "webhooklist_for_13", "get_support_languages_for_news_content_extraction_live"], "api_descs": {"Finish": "No description available.", "convert_for_currency_v2": "Convert Currency value from and to.", "convert_ingredient_for_food_ingredient_measurement_conversion": "1. Convert between Weight and Volume, \n     e.g., 1 cup of flour is 120 gram, or  1 ounce of butter is 2 tablespoon\n\n2. Convert in the same category, e.g., 1 cup = 16 tablespoon = 48 teaspoon;  1 ounce = 28.35 gram; or 0°C = 32°F, 100°C = 212°F; or", "exchange_rates_for_currency_v2": "Convert Currency value from and to.", "free_exchange_rates_for_currency_v2": "Convert Currency value from and to.", "get_emoji_category_list_for_funny_emojis": "get emoji category list", "get_quotes_for_quotsy": "return qoutes", "get_support_languages_for_news_content_extraction_live": "List of supported Languages.", "get_vehicule_info_for_api_plaque_immatriculation_siv": "* Récupérer les informations des véhicules simplement avec notre API PLAQUE IMMATRICULATION rapide flexible .\n\nLes données sont demandées à notre api plaque immatriculation en temps réel à partir de sources de données officielles du gouvernement, de sorte que les informations que vous voyez soient en temps réel et non mises en cache, ou stockées.", "getlatestbysecuritiescode_for_jp_funda": "### Return latest securities report data of the company specified with securities code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.　But you can obtain data instead of consolidated management indicators from non consolidated management indicators", "getzone_for_woosmap": "Used to retrieve a zone from his `zone_id`\n", "list_user_comments_for_soundcloud_scraper": "This endpoint lists a user's comments.", "movie_suggestions_for_list_movies_v3": "Returns 4 related movies as suggestions for the user", "player_information_for_basketball_datafeeds_by_rolling_insights": "This endpoint returns player demographic information", "test_copy_for_test": "1", "test_for_vps_tester": "Test", "user_media_for_twitter_v2_v2": "User Media", "v1_randomword_for_random_word_by_api_ninjas": "API Ninjas Random Word API endpoint. Returns a random word.", "veiculo_tipo_for_veiculos_api": "Retorna as marcas do tipo selecionado, os tipos disponíveis são \"carros\", \"motos\" e \"caminhoes\".", "webhooklist_for_13": "Retrieves all webhooks"}, "aseqs": [{"api_name": "free_exchange_rates_for_currency_v2", "api_action": "\nAction: free_exchange_rates_for_currency_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "convert_for_currency_v2", "api_action": "\nAction: convert_for_currency_v2\nAction Input: {\n  \"to\": \"EUR\",\n  \"is_from\": \"USD\",\n  \"amount\": \"1\"\n}", "api_reaction": null}, {"api_name": "exchange_rates_for_currency_v2", "api_action": "\nAction: exchange_rates_for_currency_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "free_exchange_rates_for_currency_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_for_currency_v2", "api_action": "{\"from\":\"USD\",\"to\":\"EUR\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "free_exchange_rates_for_currency_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "free_exchange_rates_for_currency_v2"}}]}
{"URL": "54856", "query": "My company is interested in investing in the forex market and we need historical exchange rate data. Can you provide the exchange rates for USD, EUR, and GBP for the past year? Additionally, we would like to receive the latest news about the forex market to stay informed about any significant changes.", "api_names": ["akaryak_t_for_kolektifapi", "haber_for_kolektifapi", "d_viz_for_kolektifapi", "Finish", "get_requests_for_cloudflare_bypass", "home_team_last_10_matches_for_football_prediction", "get_posts_id_revisions_revisionid_2156a9ee_f3cf_44f0_be60_37fbeb2d9b95_for_the_south_asian_express", "authors_get_details_for_seeking_alpha", "find_zip_codes_by_city_and_district_for_polish_zip_codes", "karenrecommends_com_for_karenrecommends", "game_for_baseball", "match_details_for_dota_2_steam_web", "convert_for_exchanger_currency_rates_provider", "number_for_refactor_numbers_in_human_readable_form_like_1k_or_1m", "allformactions_for_acopaer", "competitions_list_default_for_transfermarket", "random_girl_group_for_k_pop", "events_for_events_linz", "enrichment_for_tomba", "latest_movie_for_disney_worlds"], "api_descs": {"Finish": "No description available.", "akaryak_t_for_kolektifapi": "«haberler.com» Güncel Akaryakıt Verileri", "allformactions_for_acopaer": "# Description GET All Form Actions\r\n\r\nThis url is to get all Form Actions created is type `GET`, the url is `BASE_URL/form-actions` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "authors_get_details_for_seeking_alpha": "Get author details", "competitions_list_default_for_transfermarket": "List most popular competitions", "convert_for_exchanger_currency_rates_provider": "This API with a separate currency conversion endpoint, which can be used to convert any amount from one currency to another. In order to convert currencies, please use the API's convert endpoint, append the from and to parameters and set them to your preferred base and target currency codes.", "d_viz_for_kolektifapi": "«altinkaynak.com» Güncel Döviz Verileri", "enrichment_for_tomba": "The Enrichment API lets you look up person and company data based on an email, For example, you could retrieve a person’s name, location and social handles from an email", "events_for_events_linz": "Retrieves events in Linz, Austria", "find_zip_codes_by_city_and_district_for_polish_zip_codes": "Return all zip codes located in city's district", "game_for_baseball": "Query Baseball games, teams, scores etc...", "get_posts_id_revisions_revisionid_2156a9ee_f3cf_44f0_be60_37fbeb2d9b95_for_the_south_asian_express": "Get single post revisions", "get_requests_for_cloudflare_bypass": "Scrape any website with GET requests\n\nURL: enter full URL required", "haber_for_kolektifapi": "«ntv.com.tr» Son Dakika Haberleri Verileri", "home_team_last_10_matches_for_football_prediction": "Grab the statistics and list of the last 10 matches played by the home team for a certain ID", "karenrecommends_com_for_karenrecommends": "posts news stories", "latest_movie_for_disney_worlds": "Get the latest movies released from disney and other platforms", "match_details_for_dota_2_steam_web": "To retrieve the specific details of a match, use this API:", "number_for_refactor_numbers_in_human_readable_form_like_1k_or_1m": "Send a number to get the refactored human-readable form of the number.\nYou can use this to show the price for your products to your e-commerce website, and many more.", "random_girl_group_for_k_pop": "Get random girl-group"}, "aseqs": [{"api_name": "d_viz_for_kolektifapi", "api_action": "\nAction: d_viz_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "akaryak_t_for_kolektifapi", "api_action": "\nAction: akaryak_t_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "haber_for_kolektifapi", "api_action": "\nAction: haber_for_kolektifapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "convert_for_exchanger_currency_rates_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_for_exchanger_currency_rates_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_for_exchanger_currency_rates_provider", "api_action": "\nAction: convert_for_exchanger_currency_rates_provider\nAction Input: {\"from\":\"USD\",\"to\":\"EUR\",\"amount\":1} \nAction Input: {\"from\":\"USD\",\"to\":\"GBP\",\"amount\":1}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_for_exchanger_currency_rates_provider", "api_action": "\nAction: convert_for_exchanger_currency_rates_provider\nAction Input: {'from': 'USD', 'to': 'AUD'}, {'from': 'EUR', 'to': 'AUD'}, {'from': 'GBP', 'to': 'AUD'}", "api_reaction": null}}]}
{"URL": "54819", "query": "Please provide the track list of the album with ID '6lggWd5q9Rh66OkDE1eNDr' using the Spotify Downloader API. Moreover, I am interested in the metadata of this album, which can be obtained using the Metadata - Album API.", "api_names": ["track_list_album_for_spotify_downloader", "metadata_album_for_spotify_downloader", "Finish", "staffs_list_by_competition_for_transfermarket", "advanced_for_chess_puzzles_v2", "get_district_capital_by_name_for_district_capitals_in_ghana", "get_imbuements_for_vampirism_life_steal_for_tibia_items", "get_holo_balance_from_specific_network_for_cryptocurrency_balance", "audit_for_clinicalmarkers", "get_trending_movies_for_movies_tv_shows_database", "get_chest_item_recipes_for_lost_ark_simple", "best_players_for_sofasport", "originals_episodes_get_likes_for_webtoon", "get_basic_free_for_streaming_availability", "facebook_for_check_username"], "api_descs": {"Finish": "No description available.", "advanced_for_chess_puzzles_v2": "Advanced search options", "audit_for_clinicalmarkers": " ", "best_players_for_sofasport": "Get best players by event_id", "facebook_for_check_username": "Check username on Facebook", "get_basic_free_for_streaming_availability": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.", "get_chest_item_recipes_for_lost_ark_simple": "Get List of **Lost Ark** Chest Item Recipes", "get_district_capital_by_name_for_district_capitals_in_ghana": "This endpoint gets a district capital by district name", "get_holo_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Holo balance of an address in a specific network.", "get_imbuements_for_vampirism_life_steal_for_tibia_items": "This enpoint will get all imbuement for type Vampirism\n\nVampirism (Life steal)\nVampire Teeth \nBloody Pincers \nPiece of Dead Brain", "get_trending_movies_for_movies_tv_shows_database": "return movie results with title , year , id", "metadata_album_for_spotify_downloader": "Get metadata about album", "originals_episodes_get_likes_for_webtoon": "Get likes count of a episode", "staffs_list_by_competition_for_transfermarket": "List staffs relating to specific competition or league", "track_list_album_for_spotify_downloader": "Get track list from album"}, "aseqs": [{"api_name": "track_list_album_for_spotify_downloader", "api_action": "\nAction: track_list_album_for_spotify_downloader\nAction Input: {\n  \"is_id\": \"6lggWd5q9Rh66OkDE1eNDr\"\n}", "api_reaction": null}, {"api_name": "metadata_album_for_spotify_downloader", "api_action": "\nAction: metadata_album_for_spotify_downloader\nAction Input: {\n  \"is_id\": \"6lggWd5q9Rh66OkDE1eNDr\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "track_list_album_for_spotify_downloader"}}, {"state": "generated_by_agent", "aseq": {"api_name": "metadata_album_for_spotify_downloader"}}, {"state": "generated_by_agent", "aseq": {"api_name": "track_list_album_for_spotify_downloader", "api_action": "\nAction: track_list_album_for_spotify_downloader\nAction Input: {\n  \"is_id\": \"6lggWd5q9Rh66OkDE1eNDr\"\n}", "api_reaction": null}}]}
{"URL": "42490", "query": "Please provide me with the most popular videos in the 'Music' category. Include details such as the video title, description, views, and duration. Additionally, give me information about the comments on these videos, including the comment text and the user who posted it.", "api_names": ["commentthreads_for_youtube_v3_v3", "videos_for_youtube_v3_v3", "videocategories_for_youtube_v3_v3", "Finish", "uae_scheduled_flights_level_for_global_flight_data", "getpercentage_for_text_similarity_calculator", "properties_v2_list_similar_rental_homes_deprecated_for_realty_in_us", "artist_featuring_for_spotify_data", "get_specific_nba_franchise_data_for_1977_2022_nba_team_rosters_and_schedules", "get_a_list_of_trending_profiles_for_is_this_coin_a_scam", "emoji_api_instructions_for_funny_emojis", "retrieve_listing_events_for_openblur", "gstin_for_gst_return_status", "getrandomtvshow_for_random_chunk_api", "hls_for_twitter", "get_content_for_url_content_extractor", "whois_lookup_for_whois_lookup_v2", "list_of_countries_for_stocks_for_investing", "advisory_information_for_bart", "title_cast_crew_for_watchmode"], "api_descs": {"Finish": "No description available.", "advisory_information_for_bart": "", "artist_featuring_for_spotify_data": "artist-featuring", "commentthreads_for_youtube_v3_v3": "Returns a list of comment threads that match the API request parameters.", "emoji_api_instructions_for_funny_emojis": "emoji api Instructions", "get_a_list_of_trending_profiles_for_is_this_coin_a_scam": "Get a list of the top 100 crypto projects currently trending on isthiscoinascam.com added to the site. Ordered by most popular first.", "get_content_for_url_content_extractor": "Give a url and it will spit back the content of that url", "get_specific_nba_franchise_data_for_1977_2022_nba_team_rosters_and_schedules": "Grabs all NBA Data for a Franchise from 1977(if applicable)-2022", "getpercentage_for_text_similarity_calculator": "Calculate the percentage of match between two texts.", "getrandomtvshow_for_random_chunk_api": "Returns random TVshows.", "gstin_for_gst_return_status": "Get Details about GSTIN (GST number) and following \n1. Latest Return filing list\n2. GST Compliance Classification\n3. HSN/SAC", "hls_for_twitter": "hls => mp4 converter", "list_of_countries_for_stocks_for_investing": "This is a list of available countries, it is used as a request on another endpoint.", "properties_v2_list_similar_rental_homes_deprecated_for_realty_in_us": "List similar properties for rent\n* This endpoint is deprecating, the official have changed to use .../properties/v2/list.... endpoints to list similar properties.", "retrieve_listing_events_for_openblur": "Retrieve Blur Listing Events", "title_cast_crew_for_watchmode": "Return all people associated with the title, the \"cast\" (actors), and \"crew\" (directors, writers, cinematographers, etc). For more details on a person, pass the person-id to the /person/ endpoint.", "uae_scheduled_flights_level_for_global_flight_data": "Get weekly United Arab Emirates scheduled departing flights level.", "videocategories_for_youtube_v3_v3": "Returns a list of categories that can be associated with YouTube videos.", "videos_for_youtube_v3_v3": "Returns a list of videos that match the API request parameters.", "whois_lookup_for_whois_lookup_v2": "Whois Lookup API returns data in JSON."}, "aseqs": [{"api_name": "videocategories_for_youtube_v3_v3", "api_action": "\nAction: videocategories_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\"\n}", "api_reaction": null}, {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet,statistics,contentDetails\",\n  \"chart\": \"mostPopular\",\n  \"videocategoryid\": \"10\",\n  \"maxresults\": 5\n}", "api_reaction": null}, {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet,statistics,contentDetails\",\n  \"videocategoryid\": \"10\",\n  \"maxresults\": 5\n}", "api_reaction": null}, {"api_name": "commentthreads_for_youtube_v3_v3", "api_action": "\nAction: commentthreads_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"videoid\": \"Q8TXgCzxEnw\",\n  \"maxresults\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "videocategories_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "videos_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "commentthreads_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "videos_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet,statistics,contentDetails\",\n  \"videocategoryid\": \"10\",\n  \"maxresults\": 15\n}", "api_reaction": null}}]}
{"URL": "3303", "query": "I'm a cryptocurrency trader and I want to search for available cryptocurrencies related to the word 'ethereum'. Please fetch the search results in CSV format. Additionally, I'm interested in the analysis opinions from experts for the cryptocurrency with pair ID 1057391. Include the page number in the response.", "api_names": ["coins_search_for_investing_cryptocurrency_markets", "coins_get_analysis_for_investing_cryptocurrency_markets", "Finish", "getmusic_for_tiktok_info", "group_management_api_access_for_registered_group_list_for_catchloc", "random_nonalcoholic_for_cocktails", "exchange_for_currency_v2", "getquotesbycategory_for_quotes_villa", "search_burger_by_there_name_for_burgers_hub", "th_network_for_syamsul_bachri", "getpdf_for_reword_pdf", "get_top_100_county_lists_by_demographic_category_for_us_counties", "v1_folderid_payments_for_sertifi_esignature_and_epayment", "explore_for_fastapi_project", "get_all_feed_for_all_crypto_news_feed"], "api_descs": {"Finish": "No description available.", "coins_get_analysis_for_investing_cryptocurrency_markets": "Get analysis opinion from expert for specific cryptocurrency", "coins_search_for_investing_cryptocurrency_markets": "Search for available cryptocurrencies relating to a word, name, etc...", "exchange_for_currency_v2": "The currency converter service that converts the entered rate into the desired exchange rate.", "explore_for_fastapi_project": "explore api", "get_all_feed_for_all_crypto_news_feed": "Returns all feed.\nTweets\nBlogs\nBinance\nUsGov", "get_top_100_county_lists_by_demographic_category_for_us_counties": "list", "getmusic_for_tiktok_info": "Get all the TikTok videos that are using a specific music along with the information about original music", "getpdf_for_reword_pdf": " ", "getquotesbycategory_for_quotes_villa": "For valid response try these categories listed below:-\n- Quotes Categories are:-\n\n    age   science  success  time  travel\n\n    wisdom   alone  art  attitude  courage\n\n    culture  dreams  friendship  happiness hope\n\n    humour  imagination  inspirational   life   motivational\n\n    nature  philosophy  poetry   popular  psychology", "group_management_api_access_for_registered_group_list_for_catchloc": "API access for group information.\n\nrequired parameter : api (api.common.group.get.list)", "random_nonalcoholic_for_cocktails": "Get a random nonalcoholic cocktail with all ingredients", "search_burger_by_there_name_for_burgers_hub": "Get **Bugers** by searching there **Name**", "th_network_for_syamsul_bachri": "IONPREMIER", "v1_folderid_payments_for_sertifi_esignature_and_epayment": " "}, "aseqs": [{"api_name": "coins_search_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_search_for_investing_cryptocurrency_markets\nAction Input: {\n  \"string\": \"ethereum\"\n}", "api_reaction": null}, {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_analysis_for_investing_cryptocurrency_markets\nAction Input: {\n  \"pair_id\": 1057391,\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_analysis_for_investing_cryptocurrency_markets\nAction Input: {\n  \"pair_id\": 1057391,\n  \"page\": 2\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to search for available cryptocurrencies related to the word 'ethereum' and fetch the results in CSV format using the coins_search_for_investing_cryptocurrency_markets API. Then, I will use the coin's pair ID 1057391 to get the analysis opinion from experts for the cryptocurrency using the coins_get_analysis_for_investing_cryptocurrency_markets API. The page number is not relevant for these tasks.", "api_name": "coins_search_for_investing_cryptocurrency_markets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "coins_search_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_search_for_investiging_cryptocurrency_markets\nAction Input: {\n  \"string\": \"ethereum\",\n  \"format\": \"csv\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "coins_search_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_search_for_investigating_cryptocurrency_market\nAction Input: {\n  \"string\": \"ethereum\"\n}", "api_reaction": null}}]}
{"URL": "50022", "query": "I am searching for a commercial property to open a boutique in France. Can you help me find available properties in different cities? I am interested in properties with a minimum floor area of 100 square meters and a maximum price of 1 million euros. Please include the location, price, and any photos of the properties.", "api_names": ["locations_search_for_seloger", "properties_list_for_seloger", "Finish", "trending_videos_for_youtube_v2", "getstore_for_woosmap", "test_app_deepfry_get_for_image", "get_books_for_bible_search", "getuserbyid_for_user_demo", "airports_nonstop_and_direct_routes_for_an_airport_by_airline_for_timetable_lookup_", "persons_for_seeding_data", "monthly_payment_for_mortgage_monthly_payment_calculator", "detect_language_for_bidirectional_text_language_translation", "google_search_for_value_serp", "stock_get_dividends_splits_for_webull", "stock_get_fund_profile_for_webull", "marine_history_weather_api_for_world_weather_online_api", "dailyweather_for_history", "get_news_for_news_network"], "api_descs": {"Finish": "No description available.", "airports_nonstop_and_direct_routes_for_an_airport_by_airline_for_timetable_lookup_": "Returns a list of nonstop and direct routes for an airport restricted to an airline", "dailyweather_for_history": "This endpoint returns the historical weather for a given day for a given location (latitude and longitude)", "detect_language_for_bidirectional_text_language_translation": "If you want to detect language only and not translate you can provide the text parameter and the detected language will be provided in the results", "get_books_for_bible_search": "Returns a list of the books in the Bible.", "get_news_for_news_network": "Return list of news by selected region and category.\nVisit our [demo site](https://core-api.net/news/news.html)", "getstore_for_woosmap": "Used to retrieve an asset from his `storeId`\n", "getuserbyid_for_user_demo": " ", "google_search_for_value_serp": "The Google Search Parameters are applicable when making a request to the Search API to retrieve Google search results for a given search term. The search term is specified in the q parameter. The location your search is run from is determined by the location parameter, which can be populated with a full_name value from the Locations API.", "locations_search_for_seloger": "Search location by term or phrase", "marine_history_weather_api_for_world_weather_online_api": "The Historical Marine Weather API method allows you to access marine data since 1st Jan, 2015 for a given longitude and latitude, as well as tide data. The Historical Marine Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, Tide data, significant wave height, swell height, swell direction and swell period.", "monthly_payment_for_mortgage_monthly_payment_calculator": "calculate monthly payment. Add all input to the query parameter string.\nloanAmount, interestRate, and terms.", "persons_for_seeding_data": "Get 100 persons with en_US locale and gender female", "properties_list_for_seloger": "List properties with options and filters", "stock_get_dividends_splits_for_webull": "Get stock dividends and splits", "stock_get_fund_profile_for_webull": "Get stock fund profile", "test_app_deepfry_get_for_image": " ", "trending_videos_for_youtube_v2": "This endpoint returns the list of trending videos given a country"}, "aseqs": [{"api_name": "properties_list_for_seloger", "api_action": "\nAction: properties_list_for_seloger\nAction Input: {\n  \"zipcodes\": \"\",\n  \"minimumlivingarea\": 100,\n  \"maximumprice\": 1000000,\n  \"realtytypes\": 16,\n  \"pagesize\": 5\n}", "api_reaction": null}, {"api_name": "locations_search_for_seloger", "api_action": "\nAction: locations_search_for_seloger\nAction Input: {\n  \"searchterm\": \"France\"\n}", "api_reaction": null}, {"api_name": "properties_list_for_seloger", "api_action": "\nAction: properties_list_for_seloger\nAction Input: {\n  \"zipcodes\": \"75000\",\n  \"minimumlivingarea\": 100,\n  \"maximumprice\": 1000000,\n  \"realtytypes\": 16,\n  \"pagesize\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_seloger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_seloger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_seloger"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_seloger"}}]}
{"URL": "29407", "query": "I am exploring the kanji characters with 7 strokes. Can you give me a list of kanji characters along with their meanings and radicals?", "api_names": ["single_kanji_details_for_learn_to_read_and_write_japanese_kanji", "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji", "Finish", "radical_japanese_name_for_learn_to_read_and_write_japanese_kanji", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji", "downloadfile_for_aspose_cells_cloud", "tablenames_for_fitness_calculator", "fantasy_5_recent_for_ca_lottery", "video_comments_for_tiktok_scraper_v2", "get_webhooks_for_sms77io", "v1_rates_landing_for_hryvna_today", "fetch_chapters_for_mangaverse_api", "get_data_with_articles_about_security_for_pluralsight_articles", "random_usr_for_test", "get_qoutes_by_page_for_quotsy", "get_web_detection_for_web_detection", "lookup_for_people_lookup", "search_for_playlists_for_youtube_media_downloader", "7_latest_for_stockyapiexchange", "gen_image_for_thai_lottery_result_image"], "api_descs": {"7_latest_for_stockyapiexchange": "This feature provides the most recent information about a stock, including its current price, percentage change, and trading volume. It's updated in real-time as new data becomes available.", "Finish": "No description available.", "downloadfile_for_aspose_cells_cloud": " ", "fantasy_5_recent_for_ca_lottery": "Most recent draw for Fantasy 5", "fetch_chapters_for_mangaverse_api": "This will get all the chapters list from the manga \nid should be manga id", "gen_image_for_thai_lottery_result_image": "Gen Image", "get_data_with_articles_about_security_for_pluralsight_articles": "This endpoint will return back data with around 30 articles from Pluralsight's  \"security-professional\" section.", "get_qoutes_by_page_for_quotsy": "return quotes for the page no", "get_web_detection_for_web_detection": "the **important** thing is that you should use **image** as a query name\nExample (url?**image**=“image_url”)", "get_webhooks_for_sms77io": "Retrieves all existing webhooks.", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "lookup_for_people_lookup": "Lookup people by name and US state (optional)", "radical_japanese_name_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "random_usr_for_test": "api/users/random_user", "search_for_playlists_for_youtube_media_downloader": "This endpoint searches for YouTube playlists. Pagination scraping is supported. Thumbnails will not be blurred by age safety.", "single_kanji_details_for_learn_to_read_and_write_japanese_kanji": "Language attributes and media files for a single kanji", "tablenames_for_fitness_calculator": "Find the more than 70 main table names of the food database.", "v1_rates_landing_for_hryvna_today": "Notice: this method is temporary return rates for USD and EUR currencies only.", "video_comments_for_tiktok_scraper_v2": "Get video comments."}, "aseqs": [{"api_name": "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"ks\": 7\n}", "api_reaction": null}, {"api_name": "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"kem\": \"車\"\n}", "api_reaction": null}, {"api_name": "single_kanji_details_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: single_kanji_details_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"kanji\": \"車\"\n}", "api_reaction": null}, {"api_name": "radical_japanese_name_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: radical_japanese_name_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"rjn\": \"くるま\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji"}}, {"state": "generated_by_agent", "aseq": {"api_name": "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji"}}, {"state": "generated_by_agent", "aseq": {"api_name": "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"ks\": 7\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"ks\": 7\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji", "api_action": "\nAction: kanji_stroke_number_for_learn_to_read_and_write_japanese_kanji\nAction Input: {\n  \"ks\": 7\n}", "api_reaction": null}}]}
{"URL": "31139", "query": "I am planning a road trip across Canada with my friends. Can you provide me with a list of all postal codes in Canada, along with their cities and provinces? Additionally, could you give me the latitude and longitude coordinates for each postal code to help us navigate?", "api_names": ["get_all_postal_code_for_canada_postal_codes", "Finish", "run_cgi_for_random_word", "get_alerts_list_or_create_for_fluximmo", "top_hashtags_for_hashtag", "get_models_by_make_id_for_car_specs", "search_all_for_mongodb_wix", "check_email_for_email_checker_and_validator"], "api_descs": {"Finish": "No description available.", "check_email_for_email_checker_and_validator": "Just paste the Email Address you want to validate and wait for the results", "get_alerts_list_or_create_for_fluximmo": " ", "get_all_postal_code_for_canada_postal_codes": "Get all postal code", "get_models_by_make_id_for_car_specs": "Returns a list of all models for a given car make.", "run_cgi_for_random_word": "", "search_all_for_mongodb_wix": "Returns all vault keys", "top_hashtags_for_hashtag": "Gets a list of all the top hashtags"}, "aseqs": [{"api_name": "get_all_postal_code_for_canada_postal_codes", "api_action": "\nAction: get_all_postal_code_for_canada_postal_codes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to get the list of all postal codes in Canada and their corresponding cities and provinces.", "api_name": "get_all_postal_code_for_canada_postal_codes"}}, {"state": "generated_by_agent", "aseq": {"Thought": "The user request for postal codes already contains all the cities and provinces, so I will get their latitude and longitude coordinates using Google Maps API.", "api_name": null}}]}
{"URL": "67956", "query": "I am building an e-commerce website and I need to create a list of 100 products with their descriptions, prices, and images. Can you help me with this?", "api_names": ["products_for_seeding_data", "Finish", "redbubble_for_redbubble_scraper", "list_all_bot_category_groups_for_lemurbot", "get_by_origin_for_house_plants", "get_movies_by_name_for_imdb_api", "get_restaurant_logo_by_chain_name_for_fast_food_restaurants_usa_top_50_chains", "converter_for_webit_blockchain"], "api_descs": {"Finish": "No description available.", "converter_for_webit_blockchain": "Convert ETH, BSC, MATIC, SOL currencies to bigger or smaller units with ease.\n\nSupported currencies:\nETH (Ethereum);\nBSC (Binance);\nMATIC (Polygon);\nSOL (Solana).\n\nETH, BSC and MATIC all share the same units, since Binance and Polygon are L2 fork networks built on top of Ethereum.", "get_by_origin_for_house_plants": "Get plants by their origin.", "get_movies_by_name_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required", "get_restaurant_logo_by_chain_name_for_fast_food_restaurants_usa_top_50_chains": "Get Restaurant {Logo} by {Chain} Name", "list_all_bot_category_groups_for_lemurbot": "Get a list of category groups which are linked to user owned bots (not locked bots).", "products_for_seeding_data": "Get 100 products with en_US locale and taxes of 10% and categories type set as string", "redbubble_for_redbubble_scraper": "Get items per page, you can optionally specify a search term, specific categories or ordering"}, "aseqs": [{"api_name": "products_for_seeding_data", "api_action": "\nAction: products_for_seeding_data\nAction Input: {\n  \"categories_type\": \"string\",\n  \"taxes\": 10,\n  \"locale\": \"en_US\",\n  \"quantity\": 100\n}", "api_reaction": null}, {"api_name": "products_for_seeding_data", "api_action": "\nAction: products_for_seeding_data\nAction Input: {\n  \"categories_type\": \"string\",\n  \"taxes\": 10,\n  \"locale\": \"en_US\",\n  \"quantity\": 100\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "products_for_seeding_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_for_seeding_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_for_seeding_data"}}]}
{"URL": "39452", "query": "I'm organizing a trivia night and I need some interesting facts about different countries. Can you fetch the emoji flag codes, phone codes, and currencies for countries like Brazil, Japan, Australia, and South Africa? It would be great if you could also provide the latitude and longitude of each country's capital city.", "api_names": ["phone_code_by_country_for_geosource_api", "currency_by_country_for_geosource_api", "capital_by_country_for_geosource_api", "Finish", "getnews_for_ar_vr_news", "europeancountries_for_gas_price", "supported_countries_for_bing_web_search", "exchanges_list_for_trading_view", "searchtrain_for_irctc", "get_tamil_calendar_date_for_yawin_indian_astrology", "fonts_for_meme_generator_and_template_database", "highlights_tray_by_id_for_instagram_bulk_profile_scrapper", "options_for_stock_and_options_trading_data_provider", "free_access_for_walnuttradingdash", "title_title_abs_for_poetry_db", "get_call_for_mci_nmc_doctor_verification"], "api_descs": {"Finish": "No description available.", "capital_by_country_for_geosource_api": "Retrives a value of the capital of the country.", "currency_by_country_for_geosource_api": "Retrives a currecny and currency symbol of the country", "europeancountries_for_gas_price": "Service that brings up the current gasoline prices at european countries.", "exchanges_list_for_trading_view": "List all available and supported exchanges", "fonts_for_meme_generator_and_template_database": "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins", "free_access_for_walnuttradingdash": "The api call will grant access to a unique URL to access the dashboard (demo [here](https://walnuthillai.com/wp-content/themes/blankslate-child/videos/demo_walnuttradingdash.mp4)). The FREE version grants access to half of the assets and technical indicators / strategies and any time period from 2021/06 to 2022/1.", "get_call_for_mci_nmc_doctor_verification": "Used to fetch api result using the request id received in responses.", "get_tamil_calendar_date_for_yawin_indian_astrology": "Find the Tamil calendar date from the given English calendar date", "getnews_for_ar_vr_news": "Get all news about AR and VR", "highlights_tray_by_id_for_instagram_bulk_profile_scrapper": "Fetch Instagram story highlights tray list by Highlight id", "options_for_stock_and_options_trading_data_provider": "Stock and Options Data", "phone_code_by_country_for_geosource_api": "Retrives a Phone code of the country.", "searchtrain_for_irctc": " ", "supported_countries_for_bing_web_search": "You can search against these countries.", "title_title_abs_for_poetry_db": "All poems with a specific title"}, "aseqs": [{"api_name": "phone_code_by_country_for_geosource_api", "api_action": "\nAction: phone_code_by_country_for_geosource_api\nAction Input: {\n  \"country\": \"Brazil\"\n}", "api_reaction": null}, {"api_name": "currency_by_country_for_geosource_api", "api_action": "\nAction: currency_by_country_for_geosource_api\nAction Input: {\n  \"country\": \"Australia\"\n}", "api_reaction": null}, {"api_name": "capital_by_country_for_geosource_api", "api_action": "\nAction: capital_by_country_for_geosource_api\nAction Input: {\n  \"country\": \"Brazil\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the emoji flag codes, phone codes, and currencies for the specified countries along with their capital cities' latitude and longitude using different APIs.\n\t\"api_name\": \"supported_countries_for_bing_web_search\"\n}"}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch phone codes for Brazil, then proceed with the rest of the details such as emoji flag codes, currencies, and capitals' latitude and longitude for Brazil, Japan, Australia, and South Africa.\n\t\"api_name\": \"phone_code_by_country_for_geosource_api\",\n\t\"api_action\": \"\\nAction: phone_code_by_country_for_geosource_api\\nAction Input: {\\n  \\\"country\\\": \\\"Japan\\\"\\n}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "capital_by_country_for_geosource_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "capital_by_country_for_geosource_api", "api_action": "\nAction: capital_by_country_for_geosource_api\nAction Input: {\n  \"country\": \"Australia\"\n}", "api_reaction": null}}]}
{"URL": "59651", "query": "Please assist me in analyzing the SEO metrics for my company's website. The domain name is 'companywebsite.com'. Additionally, perform a keyword overview for the keyword 'business strategies' and calculate its traffic potential.", "api_names": ["Finish", "serp_analysis_for_domain_seo_analysis", "domain_seo_analysis_for_domain_seo_analysis", "product_fulfillment_for_target_com_shopping_api", "hashtag_feed_for_instagram_api_v2", "income_for_sec_filings", "list_of_leagues_for_pinnacle_odds", "town_for_mzansi_loadshedding_api_", "get_by_decade_for_world_population_by_decade_and_growth_rate", "canvas_episodes_get_info_for_webtoon", "v1_inflation_for_inflation_by_api_ninjas", "team_roster_for_national_football_players"], "api_descs": {"Finish": "No description available.", "canvas_episodes_get_info_for_webtoon": "Get episode and photo links.\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "domain_seo_analysis_for_domain_seo_analysis": "Get popular SEO metrics for a given domain name", "get_by_decade_for_world_population_by_decade_and_growth_rate": "Get by decade", "hashtag_feed_for_instagram_api_v2": "It shows the content which is shared on Instagram with a specific hashtag, the first query does not need maxid, but if you want to get the rest of results you need to send it, and it can be taken from previous call as a next_max_id in Json response.\nfor example:\n\"next_max_id\": \"QVFBeHItQXBZTHZPdEdNM2RLTmFtODJEZXpkUVIwbktBWDFscFQ5SFIyZTlodWU3bFZ6RXJmaURNMGJGYk1BbFk1WjIzdzlITGJzRjBkM2lNZ2lwZ2s2TA==\"", "income_for_sec_filings": "Returns a company's most recent income statement detailing what they earn for providing their goods and services OR a statement of loss explaining where lost income occurred", "list_of_leagues_for_pinnacle_odds": "Get a list of leagues", "product_fulfillment_for_target_com_shopping_api": "Returns product fulfillment information.", "serp_analysis_for_domain_seo_analysis": "SERP Analysis aka keyword overview. Discover thousands of great keyword ideas, analyze their ranking difficulty and calculate their traffic potential.", "team_roster_for_national_football_players": "Returns roster of football team. Use team abbreviation when specifying team (i.e. BUF, NE, MIA, etc.). See /teams to get team names and abbreviations", "town_for_mzansi_loadshedding_api_": "Returns the schedule for the specific requested town", "v1_inflation_for_inflation_by_api_ninjas": "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages."}, "aseqs": [{"api_name": "domain_seo_analysis_for_domain_seo_analysis", "api_action": "\nAction: domain_seo_analysis_for_domain_seo_analysis\nAction Input: {\n  \"domain\": \"companywebsite.com\"\n}", "api_reaction": null}, {"api_name": "serp_analysis_for_domain_seo_analysis", "api_action": "\nAction: serp_analysis_for_domain_seo_analysis\nAction Input: {\n  \"query\": \"business strategies\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "domain_seo_analysis_for_domain_seo_analysis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "serp_analysis_for_domain_seo_analysis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "serp_analysis_for_domain_seo_analysis"}}]}
{"URL": "79192", "query": "I am organizing a conference that will last for 3 days. I need to know the start and end times for each day of the conference. Can you provide me with a schedule of the conference? Additionally, I would like to know the number of hours, minutes, and seconds between the start and end times of the conference.", "api_names": ["sdate_for_date_calculator", "Finish", "now_for_date_calculator", "datedif_for_date_calculator", "edate_for_date_calculator", "tournament_list_wta_for_ultimate_tennis", "one_michellin_restaurant_for_restaurant", "specific_transactions_for_crypto_whale_transactions", "random_quickpick_for_play_for_cash4life", "new_arrivals_for_ott_details", "getmarkets_for_kalshi_trading_api", "advanced_search_for_ott_details", "search_quote_based_on_quote_id_for_10000_anime_quotes_with_pagination_support", "results_for_horse_racing", "get_user_followings_for_twitter_v5", "search_emails_for_email_search", "odds_for_chillybets", "search_for_real_time_product_search", "get_wagon_on_train_mrt_train_no_wagons_wagon_no_get_for_aqls_b2c_system", "get_a_specific_employee_by_employee_id_for_human_resources_api"], "api_descs": {"Finish": "No description available.", "advanced_search_for_ott_details": "This endpoint allows you to search for a movie or tvshow based on various parameters such as release year , imdb rating , genre , language etc.", "datedif_for_date_calculator": "Computes the number of  years, months, days, hours, minutes, seconds or microseconds between two dates (end_date - start_date).", "edate_for_date_calculator": "Computes and returns a date on the same day of the month in the future or past. This resource behave exactly as Excel EDATE function.", "get_a_specific_employee_by_employee_id_for_human_resources_api": "This endpoint gets one record by a specific employee ID that is unique for each employee in the employees table, up to 900 employees with their information.\nFor example:  employee ID , first name, email, and  etc...", "get_user_followings_for_twitter_v5": "Get User Followings By ID. \n\nYou can get the user(rest_id) query from \"Get User By Username\" endpoint", "get_wagon_on_train_mrt_train_no_wagons_wagon_no_get_for_aqls_b2c_system": " ", "getmarkets_for_kalshi_trading_api": "Endpoint for listing and discovering markets on Kalshi.", "new_arrivals_for_ott_details": "Get the latest arrivals from different platforms .", "now_for_date_calculator": "Computes and returns local time zone taking into account Daylight Saving Time (DST).", "odds_for_chillybets": "Latest Odds for Chillybets", "one_michellin_restaurant_for_restaurant": "Only one restaurant.", "random_quickpick_for_play_for_cash4life": "Get a quickpick number for the Cash4Life drawing.", "results_for_horse_racing": "Get results by date.", "sdate_for_date_calculator": "Shifts  a date or a datetime in the future or past.", "search_emails_for_email_search": "Search the web for emails using a query and email domain and get up to 5,000 email addresses.", "search_for_real_time_product_search": "Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter.", "search_quote_based_on_quote_id_for_10000_anime_quotes_with_pagination_support": "Get full quote info based on quote_id.\n\nRequired GET parameter\n**quote_id**:  3702\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`", "specific_transactions_for_crypto_whale_transactions": "get info about single transaction", "tournament_list_wta_for_ultimate_tennis": "Via this endpoint, you can retrieve the list of all tournaments to be played in a selected year (from *1960* to *2022*).  We return some basic info about every row such as tournament venue, surface, prizemoney, etc. Results by Id and Year** endpoint"}, "aseqs": [{"api_name": "now_for_date_calculator", "api_action": "\nAction: now_for_date_calculator\nAction Input: {}", "api_reaction": null}, {"api_name": "sdate_for_date_calculator", "api_action": "\nAction: sdate_for_date_calculator\nAction Input: {\n  \"start_date\": \"2023-07-03\",\n  \"days\": 0\n}", "api_reaction": null}, {"api_name": "edate_for_date_calculator", "api_action": "\nAction: edate_for_date_calculator\nAction Input: {\n  \"months\": 2,\n  \"start_date\": \"2024-06-10\"\n}", "api_reaction": null}, {"api_name": "datedif_for_date_calculator", "api_action": "\nAction: datedif_for_date_calculator\nAction Input: {\n  \"start_date\": \"2024-06-10T09:00:00\",\n  \"end_date\": \"2024-08-10T17:00:00\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "now_for_date_calculator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "datedif_for_date_calculator", "api_action": "{\"start_date\": \"now\", \"end_date\": \"12 days from now\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "datedif_for_date_calculator", "api_action": "\nAction: datedif_for_date_calculator\nAction Input: {\n  \"end_date\": \"2023-07-06\",\n  \"start_date\": \"2023-07-03\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "datedif_for_date_calculator", "api_action": "\nAction: datedif_for_date_calculator\nAction Input: {\n  \"end_date\": \"2024-06-10\",\n  \"start_date\": \"2023-07-03\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "now_for_date_calculator"}}]}
{"URL": "59009", "query": "My company is organizing a conference in New York City next month and we need to find a suitable venue. Can you help us find a list of conference centers in New York City along with their contact information, capacity, and amenities? Additionally, provide us with the current weather conditions in New York City, including the temperature, humidity, wind speed, and cloudiness.", "api_names": ["search_for_g_search", "Finish", "head_to_head_statistics_for_football_dolphin", "update_level_for_riddlie_", "paginated_for_catbreeddb", "getsponsorships_for_azure_smartable", "check_similarity_for_whois_lookup_v3", "5_day_forecast_for_ski_resort_forecast", "sticker_translate_for_giphy", "about_for_judge0_ce"], "api_descs": {"5_day_forecast_for_ski_resort_forecast": "Returns the 5 day forecast for a given resort name", "Finish": "No description available.", "about_for_judge0_ce": "Get general information.", "check_similarity_for_whois_lookup_v3": "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2", "getsponsorships_for_azure_smartable": "Get Azure sponsorships", "head_to_head_statistics_for_football_dolphin": "Head to head statistics", "paginated_for_catbreeddb": "Get all cat breed results in a set of 10 per page.", "search_for_g_search": "Get Real-time Search Result Page", "sticker_translate_for_giphy": "Using the same alogirithm as the GIF translate endpoint, the sticker translate endpoint turns words into stickers.", "update_level_for_riddlie_": "This endpoint enables you to update the level of the Riddle. All the riddles are set to a medium level which is enumerated as \"1\".  You can suggest the level of a riddle by simply calling this endpoint with query parameters \"0\", \"1\", or \"2\". \n\"0\" is Easy\n\"1\" is Medium \n\"2\" is Hard"}, "aseqs": [{"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"conference centers in New York City\",\n  \"num\": \"5\"\n}", "api_reaction": null}, {"api_name": "search_for_g_search", "api_action": "\nAction: search_for_g_search\nAction Input: {\n  \"q\": \"current weather conditions in New York City\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": Analysing the user's request for venues in New York City and weather conditions, I need to initiate both tasks sequentially. First, let's call the search_for_g_search API to get real-time venue results.\n\t\"api_name\": \"search_for_g_search\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_g_search", "api_action": "{\"q\": \"conference centers in New York City contact information capacity amenities\", \"num\": \"5\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_g_search"}}]}
{"URL": "19917", "query": "As a finance student, I am interested in analyzing the financial statements of various companies. Can you help me access the daily zip files of filed 10-q and 10-k reports from the Daily-Sec-Financial-Statement-Dataset tool? Specifically, I need the premium daily zip files for the date '2022-11-10'. Additionally, I would like to know the available dates and subscriptions using the content API.", "api_names": ["basic_daily_for_daily_sec_financial_statement_dataset", "heartbeat_for_daily_sec_financial_statement_dataset", "content_for_daily_sec_financial_statement_dataset", "Finish", "get_colors_for_cigars", "get_all_m1lhao_draws_dates_for_euro_millions", "proxy_get_for_proxy_list", "credit_score_by_name_city_and_or_state_for_business_credit_scores", "d7api_check_balance_for_d7sms", "categories_for_fiverr_pro_services", "time_from_to_number_for_unitconversion", "medium_for_check_username", "d_viz_for_kolektifapi", "list_of_countries_for_stocks_for_investing", "v1_chucknorris_for_chuck_norris_by_api_ninjas", "get_all_advisories_for_ics_cert_advisories"], "api_descs": {"Finish": "No description available.", "basic_daily_for_daily_sec_financial_statement_dataset": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. With the basic subcription, you only have access to daily zip files older than 21 days.\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**", "categories_for_fiverr_pro_services": "List of category names you can search for", "content_for_daily_sec_financial_statement_dataset": "This endpoint delivers the a json that shows which dates are available with which subscription. The format is as follows:\n\n```\n{\n  \"daily\": [\n  {  \n    \"date\": \"2022-01-03\",\n    \"file\": \"20220103.zip\",\n    \"subscription\": \"basic\"\n  },\n...\n  {  \n    \"date\": \"2022-12-02\",\n    \"file\": \"20221202.zip\",\n    \"subscription\": \"premium\"\n  },\n\n```\nEntries marked with \"subscription: premium\" are only accessible with the premium plan. All other entries are available with basic and premium plan", "credit_score_by_name_city_and_or_state_for_business_credit_scores": "Look up credit scores for private companies that do not have a ticker symbol. Almost 8 million companies available. Try searching by city and state first, then look for a name match.", "d7api_check_balance_for_d7sms": "Get information about current balance on your D7API account", "d_viz_for_kolektifapi": "«altinkaynak.com» Güncel Döviz Verileri", "get_all_advisories_for_ics_cert_advisories": "This endpoint will return back all  advisories and provide timely information about current security issues, vulnerabilities, and exploits from CISA.gov", "get_all_m1lhao_draws_dates_for_euro_millions": "Get all M1lhao draws dates (M1lhão (‘The Million’) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of €1 million on Friday evenings.)", "get_colors_for_cigars": "Get Enum of Cigar colors", "heartbeat_for_daily_sec_financial_statement_dataset": "A simple heartbeat that returns the time of the server to check if the connection to the server is working.", "list_of_countries_for_stocks_for_investing": "This is a list of available countries, it is used as a request on another endpoint.", "medium_for_check_username": "Check username on Medium", "proxy_get_for_proxy_list": "Returns the list of proxies based on the given parameters. The list is updated every 1 minute. API returns only working at the time of check proxies.", "time_from_to_number_for_unitconversion": "Temperature unit conversions", "v1_chucknorris_for_chuck_norris_by_api_ninjas": "API Ninjas Chuck Norris API endpoint. Returns a Chuck Norris joke."}, "aseqs": [{"api_name": "basic_daily_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: basic_daily_for_daily_sec_financial_statement_dataset\nAction Input: {\n  \"date\": \"2022-11-10\"\n}", "api_reaction": null}, {"api_name": "heartbeat_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: heartbeat_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}, {"api_name": "content_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: content_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "content_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "content_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "content_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "basic_daily_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: basic_daily_for_daily_sec_financial_statement_dataset\nAction Input: {\n  \"date\": \"2022-11-10\"\n}", "api_reaction": null}}]}
{"URL": "50803", "query": "Can you fetch the list of cities in the country 'Germany' with a population minimum of 1 million and a maximum of 5 million? Moreover, give me the country details for the country name 'France'.", "api_names": ["get_country_details_for_geoapi", "get_cities_in_a_country_for_geoapi", "Finish", "getcountrybyip_for_countrybyip", "get_post_retweets_for_twitter_v5", "author_profile_recipes_for_bbc_good_food_api", "rereer_copy_for_nowyapi", "airports_metro_iata_codes_for_timetable_lookup_", "get_all_page_s_content_for_scrapemaster", "year_end_top_artists_for_billboard_v2", "tag_search_for_india_today_unofficial", "zipcode_for_ap_sample", "get_payment_calculator_for_mypeak_calculator_api", "extracttext_for_images_infos_api2", "getfunctionsbytopic_for_powerbi"], "api_descs": {"Finish": "No description available.", "airports_metro_iata_codes_for_timetable_lookup_": "Returns a list of metro IATA codes", "author_profile_recipes_for_bbc_good_food_api": "Get author recipes and profile info", "extracttext_for_images_infos_api2": "Extract text from an image", "get_all_page_s_content_for_scrapemaster": "This endpoint will return all the page's content from the URL given by the user.", "get_cities_in_a_country_for_geoapi": "Get cities in a country based on population.", "get_country_details_for_geoapi": "Get details of country from its name and prefix.", "get_payment_calculator_for_mypeak_calculator_api": "Calculate payments and schedules", "get_post_retweets_for_twitter_v5": "Get Post Retweets By Post ID", "getcountrybyip_for_countrybyip": "Get Country code by IP address. IPV4 & IPV6 both are supported.", "getfunctionsbytopic_for_powerbi": "Get Power BI DAX functions by topic.", "rereer_copy_for_nowyapi": "rererer", "tag_search_for_india_today_unofficial": "Get news as per the tag", "year_end_top_artists_for_billboard_v2": "Get the Year-End Top Artists chart.", "zipcode_for_ap_sample": "Get locations by zipcode"}, "aseqs": [{"api_name": "get_cities_in_a_country_for_geoapi", "api_action": "\nAction: get_cities_in_a_country_for_geoapi\nAction Input: {\n  \"country_iso2\": \"DEU\",\n  \"population_min\": 1000000,\n  \"population_max\": 5000000\n}", "api_reaction": null}, {"api_name": "get_country_details_for_geoapi", "api_action": "\nAction: get_country_details_for_geoapi\nAction Input: {\n  \"name\": \"France\"\n}", "api_reaction": null}, {"api_name": "get_cities_in_a_country_for_geoapi", "api_action": "\nAction: get_cities_in_a_country_for_geoapi\nAction Input: {\n  \"country_iso2\": \"DE\",\n  \"population_min\": 1000000,\n  \"population_max\": 5000000\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to fetch the list of cities in Germany with population between 1 million and 5 million using the 'get_cities_in_a_country_for_geoapi' API, then fetch the country details for France using the 'get_country_details_for_geoapi' API.", "api_name": "get_cities_in_a_country_for_geoapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_details_for_geoapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cities_in_a_country_for_geoapi", "api_action": "{\"country_iso2\": \"DEU\", \"population_min\": 1000000, \"population_max\": 50000000}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_cities_in_a_country_for_geoapi"}}]}
{"URL": "24878", "query": "I'm doing research on a company and I need to gather information about its financials and events. Can you provide me with the financial key figures and events for the company with the identifier 'DEVFCLQFW054'? Please include the balance sheet total, revenue, profit, and number of employees for each financial key figure, and the type, category, text, source, and timestamp for each event.", "api_names": ["Finish", "companies_id_financials_for_german_company_data_v2", "companies_id_events_for_german_company_data_v2", "simple_radiation_forecast_for_solcast", "get_all_match_play_today_by_competitions_for_match_api", "teams_get_results_for_unofficial_cricbuzz", "logo_for_comparable_companies", "clickbank_for_clickbankuniversity", "search_for_direct_porn_v2", "api_v1_addresses_for_address_validation_nl", "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data", "earthquakes_for_everyearthquake", "games_by_platform_for_mmo_games", "get_wisdom_quotes_by_page_for_wisdom_quotes", "get_order_for__onboarding_project_v3"], "api_descs": {"Finish": "No description available.", "api_v1_addresses_for_address_validation_nl": "Get Address", "clickbank_for_clickbankuniversity": "email marketing", "companies_id_events_for_german_company_data_v2": "This endpoint returns the latest events about the company with the given identifier since the given timestamp. This timestamp is optional and is specified via a query parameter. Events come with a type (companies' register event, blog article, press release, etc.), a category (change in management, finances, merger/acquisition, etc.), a text (the content of the event), a source, and a timestamp.", "companies_id_financials_for_german_company_data_v2": "This endpoint returns the financial key figures (balance sheet total, revenue, profit, number of employees) for the company with the given identifier. For each key figure the endpoint returns a list of values associated with the corresponding year.", "earthquakes_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world. No parameters required.", "games_by_platform_for_mmo_games": "Insert platform, eg: pc, browser or all", "get_all_match_play_today_by_competitions_for_match_api": "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id.", "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data": "Given a company’s LinkedIn URL, the API will return valuable data points in JSON format.", "get_order_for__onboarding_project_v3": " ", "get_wisdom_quotes_by_page_for_wisdom_quotes": "Returns an JSON object that includes:\n\n- the page number requested  (current_page), \n- the amount of all pages (max_pages),\n- the amount of the quotes (quotes_count) (15 per page),\n- the wisdom quotes array (quotes).", "logo_for_comparable_companies": "The Logo API is used to show company logos in the frontend. The API link is already included in results returned by the Similar companies API.", "search_for_direct_porn_v2": "Search videos", "simple_radiation_forecast_for_solcast": "The simple radiation request returns detailed solar radiation data for the next week based only on your latitude and longitude.", "teams_get_results_for_unofficial_cricbuzz": "Get matched results by team"}, "aseqs": [{"api_name": "companies_id_financials_for_german_company_data_v2", "api_action": "\nAction: companies_id_financials_for_german_company_data_v2\nAction Input: {\n  \"is_id\": \"DEVFCLQFW054\"\n}", "api_reaction": null}, {"api_name": "companies_id_events_for_german_company_data_v2", "api_action": "\nAction: companies_id_events_for_german_company_data_v2\nAction Input: {\n  \"is_id\": \"DEVFCLQFW054\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "companies_id_financials_for_german_company_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "companies_id_events_for_german_company_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "companies_id_financials_for_german_company_data_v2", "api_action": "\nAction: companies_id_financials_for_german_company_data_v2\nAction Input: {\n  \"is_id\": \"DEVFCLQFW054\"\n}", "api_reaction": null}}]}
{"URL": "84006", "query": "I am looking for information on a specific company. Can you search for the company 'ESK GLOBAL SERVICES LIMITED' and provide me with the registration number, address, and registration date? Also, fetch all the companies in the database.", "api_names": ["Finish", "search_company_by_name_for_business_and_company_name_api", "get_all_companies_paginated_for_business_and_company_name_api", "search_by_registration_number_for_business_and_company_name_api", "sanction_data_for_database_on_entities_sanctioned_for_compliance_desc_", "getorderbyid_for_urltest", "pack_for_flaticon", "getdisastertypebydate_for_rankiteo_climate_risk_assessment", "getassignments_for_aspose_tasks_cloud", "get_game_statistics_for_viperscore", "get_courses_for_golf_course_finder", "get_categories_for_google_play_api", "current_conditions_detailed_for_easy_weather", "property_details_for_zillow_v2", "leaguelogo_for_americanfootballapi", "get_priorityrows_mrt_train_no_wagons_wagon_no_priorityrow_get_for_aqls_b2c_system", "gives_the_bmi_when_you_input_values_in_imperial_units_feet_inches_pounds_for_bmi_v2", "comments_for_youtube_v3_v3", "get_user_orders_for__onboarding_project_v3", "validate_card_number_for_luhn_algorithm"], "api_descs": {"Finish": "No description available.", "comments_for_youtube_v3_v3": "Returns a list of comments that match the API request parameters.", "current_conditions_detailed_for_easy_weather": "Get (detailed) current conditions for the given latitude and longitude.", "get_all_companies_paginated_for_business_and_company_name_api": "This endpoint gets all the companies and business as in the CAC database.", "get_categories_for_google_play_api": "Returns categories.", "get_courses_for_golf_course_finder": "This endpoint will return courses within a mile radius of the passed latitude and longitude", "get_game_statistics_for_viperscore": "You are a statistics freak? We too! Here you can check all statistics!", "get_priorityrows_mrt_train_no_wagons_wagon_no_priorityrow_get_for_aqls_b2c_system": " ", "get_user_orders_for__onboarding_project_v3": " ", "getassignments_for_aspose_tasks_cloud": " ", "getdisastertypebydate_for_rankiteo_climate_risk_assessment": "Get disaster by type within a time range", "getorderbyid_for_urltest": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "gives_the_bmi_when_you_input_values_in_imperial_units_feet_inches_pounds_for_bmi_v2": "The API generates the BMI in kg/m2 when the height is entered in feet and inches and weight is entered in pounds.", "leaguelogo_for_americanfootballapi": "This operation retrieves the logo image for an American Football league, given its unique tournament ID. The image is returned in PNG format.", "pack_for_flaticon": "Method that allows you to get detailed information about a pack. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.", "property_details_for_zillow_v2": "Get a property's details by its zpid", "sanction_data_for_database_on_entities_sanctioned_for_compliance_desc_": " ", "search_by_registration_number_for_business_and_company_name_api": "Search company information by the company or business' registration number issued by the CAC. It returns a single match if the registration number exists.", "search_company_by_name_for_business_and_company_name_api": "Do you know the company name? you can make a search of company information with just the name. You will get hits of all companies and businesses that are matching that particular name.", "validate_card_number_for_luhn_algorithm": "Validates given card number"}, "aseqs": [{"api_name": "search_company_by_name_for_business_and_company_name_api", "api_action": "\nAction: search_company_by_name_for_business_and_company_name_api\nAction Input: {\n  \"page\": 1,\n  \"limit\": 10,\n  \"companyname\": \"ESK GLOBAL SERVICES LIMITED\"\n}", "api_reaction": null}, {"api_name": "get_all_companies_paginated_for_business_and_company_name_api", "api_action": "\nAction: get_all_companies_paginated_for_business_and_company_name_api\nAction Input: {\n  \"page\": 1,\n  \"limit\": 100\n}", "api_reaction": null}, {"api_name": "search_by_registration_number_for_business_and_company_name_api", "api_action": "\nAction: search_by_registration_number_for_business_and_company_name_api\nAction Input: {\n  \"regnumber\": \"RC - 1855308\"\n}", "api_reaction": null}, {"api_name": "get_all_companies_paginated_for_business_and_company_name_api", "api_action": "\nAction: get_all_companies_paginated_for_business_and_company_name_api\nAction Input: {\n  \"page\": 1,\n  \"limit\": 100\n}", "api_reaction": null}, {"api_name": "search_by_registration_number_for_business_and_company_name_api", "api_action": "\nAction: search_by_registration_number_for_business_and_company_name_api\nAction Input: {\n  \"regnumber\": \"RC - 1855308\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_company_by_name_for_business_and_company_name_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_registration_number_for_business_and_company_name_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_company_by_name_for_business_and_company_name_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_company_by_name_for_business_and_company_name_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_company_by_name_for_business_and_company_name_api", "api_action": "\nAction: search_company_by_name_for_business_and_company_name_api\nAction Input: {\n  \"page\": 1,\n  \"limit\": 10,\n  \"companyname\": \"ESK GLOBAL SERVICES LIMITED\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_company_by_name_for_business_and_company_name_api", "api_action": "\nAction: search_company_by_name_for_business_and_company_name_api\nAction Input: {\n  \"page\": 2,\n  \"limit\": 10,\n  \"companyname\": \"ESK GLOBAL SERVICES LIMITED\"\n}", "api_reaction": null}}]}
{"URL": "2085", "query": "I'm planning a trip to a country for a sports event. Can you provide me with a list of the countries that belong to the tournaments? Additionally, I would like to know the list of sports supported in the global coverage and the global statuses for the sports.", "api_names": ["Finish", "sports_list_for_global_data", "status_list_for_global_data", "country_list_for_global_data", "dictionary_synonyms_temporarily_unavailable_for_webit_language", "deprem_for_kolektifapi", "getmentions_for_track_the_mentions_and_conversations_about_your_business", "all_codes_postaux_for_bps", "cities_for_canadian_gas_prices", "toptier_summary_for_sciphercrypto", "getinventory_for_apfd", "get_chickens_for_kfc_chickens", "artist_overview_for_spotify_data", "about_channel_for_youtube_search_and_download", "domains_list_for_temporary_email", "languagedetection_for_what_s_language"], "api_descs": {"Finish": "No description available.", "about_channel_for_youtube_search_and_download": "Return more info about channel", "all_codes_postaux_for_bps": "Tous les codes postaux.", "artist_overview_for_spotify_data": "artist-overview", "cities_for_canadian_gas_prices": "Returns the average price of gas of major cities in a specific province in Canada.", "country_list_for_global_data": "Provides the list of the countries which belong to the tournaments.", "deprem_for_kolektifapi": "«afet.gen.tr» Son Depremler Verisi", "dictionary_synonyms_temporarily_unavailable_for_webit_language": "Dictionary Synonyms", "domains_list_for_temporary_email": "Get domains list", "get_chickens_for_kfc_chickens": "This Endpoint returns all the chicken dishes", "getinventory_for_apfd": "Returns a map of status codes to quantities", "getmentions_for_track_the_mentions_and_conversations_about_your_business": "Find your brand, competitor, or any other query mentions across the web", "languagedetection_for_what_s_language": "Detect the language of a given text and return the detected language code", "sports_list_for_global_data": "Provides the list of the sports which are supported in the global coverage.", "status_list_for_global_data": "Provides the list of the global statuses for the sports.", "toptier_summary_for_sciphercrypto": "This response returns an ascending crypto coins the rank varies the way you choose limit if you choose 10 as limit you will get the top 10 cryptos\n->limit= Options are: 1-->100\n->page= Options are: 1-->100 based on limit rate \n->assetClass= Options are: ALL,DEFI,NFT\n->tsym\" typically stands for \"to symbol\", which represents the cryptocurrency that the conversion rate is being calculated for."}, "aseqs": [{"api_name": "country_list_for_global_data", "api_action": "\nAction: country_list_for_global_data\nAction Input: {}", "api_reaction": null}, {"api_name": "sports_list_for_global_data", "api_action": "\nAction: sports_list_for_global_data\nAction Input: {}", "api_reaction": null}, {"api_name": "status_list_for_global_data", "api_action": "\nAction: status_list_for_global_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "country_list_for_global_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "sports_list_for_global_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "status_list_for_global_data", "api_action": "\nAction: status_list_for_global_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "sports_list_for_global_data"}}]}
{"URL": "21284", "query": "My family is worried about a suspicious website. Can you check the URL 'suspiciouswebsite.com' and let us know if it is a known phishing attempt? Additionally, we would like to get statistics about the Exerra Phishing API.", "api_names": ["check_a_url_for_exerra_phishing_check", "get_stats_for_exerra_phishing_check", "Finish", "java_versions_for_java_code_compiler", "search_for_ig_private_api", "7_day_forecast_for_ouranos", "search_on_sale_games_for_epic_store_games", "offerinfo_for_google_jobs", "list_applications_for_geolocation_simulation_for_mobile_apps", "search_leaderboard_for_bybit_leaderboard", "get_all_vessels_for_vessel_data", "get_tv_series_seasons_by_id_for_movies_tv_shows_database"], "api_descs": {"7_day_forecast_for_ouranos": "7 Day Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 7 day every 3 hours", "Finish": "No description available.", "check_a_url_for_exerra_phishing_check": "Check if a URL is a known phishing attempt", "get_all_vessels_for_vessel_data": "Return all available on board vessels.\nVisit our [demo site](https://core-api.net/vessel/map.html)", "get_stats_for_exerra_phishing_check": "Get statistics about the Exerra Phishing API", "get_tv_series_seasons_by_id_for_movies_tv_shows_database": "A valid TV Series ID (e.g. tt2741602)\nreturn Season number, season air date, Episode count, Season trailer", "java_versions_for_java_code_compiler": "Java Versions", "list_applications_for_geolocation_simulation_for_mobile_apps": "List all your applications", "offerinfo_for_google_jobs": "get offer data", "search_for_ig_private_api": "Search", "search_leaderboard_for_bybit_leaderboard": "Returns traders that match your search filters.", "search_on_sale_games_for_epic_store_games": "Search On Sale Games"}, "aseqs": [{"api_name": "check_a_url_for_exerra_phishing_check", "api_action": "\nAction: check_a_url_for_exerra_phishing_check\nAction Input: {\n  \"url\": \"suspiciouswebsite.com\"\n}", "api_reaction": null}, {"api_name": "get_stats_for_exerra_phishing_check", "api_action": "\nAction: get_stats_for_exerra_phishing_check\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "check_a_url_for_exerra_phishing_check"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_stats_for_exerra_phishing_check"}}, {"state": "generated_by_agent", "aseq": {"api_name": "check_a_url_for_exerra_phishing_check"}}]}
{"URL": "43108", "query": "I'm feeling down today and could use some uplifting quotes. Can you provide me with random quotes that contain the keyword 'inspiration'? Additionally, I would love to know the quote of the day to start my day on a positive note.", "api_names": ["random_quotes_for_quotes_v2", "quote_of_the_day_for_quotes_v2", "quotes_by_keywords_for_quotes_v2", "Finish", "form_for_sofasport", "get_artists_for_spotify_data", "complete_weather_single_call_for_easy_weather", "currencies_for_skyscanner_api", "geographic_coordinates_by_placename_for_places", "get_phone_image_ids_by_custom_id_for_mobile_phone_specs_database", "get_mark_price_kline_for_bybit", "titles_id_for_moviesdatabase", "placesbyids_for_mapreflex", "get_balance_for_webit_blockchain", "search_for_recipes_for_bbc_good_food_api", "get_top_games_for_twitch"], "api_descs": {"Finish": "No description available.", "complete_weather_single_call_for_easy_weather": "Get current conditions, hourly forecast, daily forecast, and alerts in a single response for the given latitude and longitude (you must supply ISO country code to receive weather alerts).", "currencies_for_skyscanner_api": "You can use the `/currencies` endpoint to retrieve the currencies that we support and information about how we format them in Skyscanner.", "form_for_sofasport": "Get pregame team form by event_id", "geographic_coordinates_by_placename_for_places": "Returns geographic coordinates for the given placename (city, village, etc.). The method returns the place whose name is most similar to the search string.", "get_artists_for_spotify_data": "get-artists", "get_balance_for_webit_blockchain": "Get balance from any wallet on different blockchains, including Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.", "get_mark_price_kline_for_bybit": "Query mark price kline.", "get_phone_image_ids_by_custom_id_for_mobile_phone_specs_database": "Get up to 10 phone images (IDs). \nUse these IDs in the Endpoint:  Get {Image} by {Phone Image id}\nThe image IDs expire after 30 minutes.", "get_top_games_for_twitch": "Returns an array of top games on Twitch by current viewers.", "placesbyids_for_mapreflex": "Get boundaries of given Places (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "quote_of_the_day_for_quotes_v2": "Returns Quote of the Day", "quotes_by_keywords_for_quotes_v2": "Returns Quotes containing specified keyword", "random_quotes_for_quotes_v2": "Get a Random Quote on Each Request", "search_for_recipes_for_bbc_good_food_api": "Search for recipes by keyword or full phrase", "titles_id_for_moviesdatabase": " "}, "aseqs": [{"api_name": "random_quotes_for_quotes_v2", "api_action": "\nAction: random_quotes_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "quote_of_the_day_for_quotes_v2", "api_action": "\nAction: quote_of_the_day_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "quotes_by_keywords_for_quotes_v2", "api_action": "\nAction: quotes_by_keywords_for_quotes_v2\nAction Input: {\n\"word\": \"inspiration\"\n}", "api_reaction": null}, {"api_name": "random_quotes_for_quotes_v2", "api_action": "\nAction: random_quotes_for_quotes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "quotes_by_keywords_for_quotes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_by_keywords_for_quotes_v2", "api_action": "{\"keyword\": \"inspiration\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_by_keywords_for_quotes_v2", "api_action": "\nAction: quotes_by_keywords_for_quotes_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_by_keywords_for_quotes_v2", "api_action": "\nAction: quotes_by_keywords_for_quotes_v2\nAction Input: {\n\"word\": \"inspiration\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_by_keywords_for_quotes_v2", "api_action": "\nAction: quotes_by_keywords_for_quotes_v2\nAction Input: {\n\"word\": \"inspiration\"\n}", "api_reaction": null}}]}
{"URL": "36683", "query": "My company is interested in the latest news about Bitcoin. Can you fetch the news from all major news websites and provide us with the titles, URLs, and sources of the articles? Additionally, we would like to explore a specific news resource like CoinDesk for more detailed information.", "api_names": ["get_all_bitcoin_news_for_bitcoin_news", "Finish", "get_username_higgs_domino_for_id_game_checker", "get_collection_info_for_kvstore", "belajarpostapi_for_trainmyapi27", "getallchannels_for_vimeo", "national_team_statistics_for_sofascores", "last_game_report_by_teams_for_hockey_live_sk_data", "generate_document_resume_for_ai_resume_generator", "health_for_localization_services"], "api_descs": {"Finish": "No description available.", "belajarpostapi_for_trainmyapi27": "belajar post dan get", "generate_document_resume_for_ai_resume_generator": "Endpoint that will generate a large text response containing a Resume document using the provided information", "get_all_bitcoin_news_for_bitcoin_news": "This endpoint will return back all the news across all the major bitcoin news site from all over the world", "get_collection_info_for_kvstore": "Get information about the Collection", "get_username_higgs_domino_for_id_game_checker": "Enter your Higgs Domino ID  in the required parameters", "getallchannels_for_vimeo": "Get a list of all public channels.", "health_for_localization_services": "Checks health status of services", "last_game_report_by_teams_for_hockey_live_sk_data": "Get the last game report of the two teams", "national_team_statistics_for_sofascores": "Get player's stats by national teams"}, "aseqs": [{"api_name": "get_all_bitcoin_news_for_bitcoin_news", "api_action": "\nAction: get_all_bitcoin_news_for_bitcoin_news\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": 'First, I need to fetch the latest Bitcoin news from all major news websites and then fetch detailed information from CoinDesk for further exploration.',\n\t\"api_name\": \"get_all_bitcoin_news_for_bitcoin_news\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_bitcoin_news_for_bitcoin_news"}}]}
{"URL": "74434", "query": "I want to surprise my family with a movie night and I need recommendations for family-friendly films. Can you search for family movies released in the past year and provide their ratings? Additionally, fetch the movie info for the highest rated family movie from the search results.", "api_names": ["get_by_tmdb_id_for_mdblist", "search_by_title_for_mdblist", "get_by_imdb_id_for_mdblist", "Finish", "video_subtitles_for_youtube_v2", "get_amazon_search_results_for_amazon_data_scraper_v2", "user_info_not_stable_for_tiktok_v4", "read_expenses_for_expense_data", "history_price_at_a_point_in_time_for_bitcoinaverage_crypto_ticker_and_historical_price", "metrics_for_testing_for_my_use", "getmasters_for_aspose_diagram_cloud", "properties_detail_for_seloger", "code_for_us_zipcodes", "get_billionaires_for_forbes_worlds_billionaires_list", "find_food_by_id_for_food_nutrition_information", "serp_for_serp_results", "videos_for_youtube_v3_lite", "game_lookup_for_cheapshark_game_deals", "final_four_for_ncaa_final_four", "words2number_for_words_to_numbers"], "api_descs": {"Finish": "No description available.", "code_for_us_zipcodes": "Return a zip code detail", "final_four_for_ncaa_final_four": "Get the Final Four teams for the given year.", "find_food_by_id_for_food_nutrition_information": "Retrieves a single food item by an FDC ID.", "game_lookup_for_cheapshark_game_deals": "Gets info for a specific game. Response includes a list of all deals associated with the game.", "get_amazon_search_results_for_amazon_data_scraper_v2": "Get Amazon Search results", "get_billionaires_for_forbes_worlds_billionaires_list": "This method can get you full list of Forbes billionaires by year.If you want you can search by name or filtered by country or country of citizenship. This api can get list of people page by page and you can search max 100 limit per one request.", "get_by_imdb_id_for_mdblist": "Returns movie or TV Show info by IMDb ID", "get_by_tmdb_id_for_mdblist": "Returns movie or TV Show info", "getmasters_for_aspose_diagram_cloud": " ", "history_price_at_a_point_in_time_for_bitcoinaverage_crypto_ticker_and_historical_price": "Fetch the exact price of a cryptocurrency at a specific timestamp in the past.", "metrics_for_testing_for_my_use": "metrics", "properties_detail_for_seloger": "Get property detailed information", "read_expenses_for_expense_data": "<br /><br />\n<b>Authentication:</b> not required", "search_by_title_for_mdblist": "Search for Movies or TV Shows by title, include option year or mediatype filter to narrow your results", "serp_for_serp_results": "SERP", "user_info_not_stable_for_tiktok_v4": "Get User Information By \"unique_id\",\nand the endpoint will return user data, including => id, nickname, bio, secUid, avatar, statistics", "video_subtitles_for_youtube_v2": "Get the available subtitles of a Youtube Video", "videos_for_youtube_v3_lite": "Get YouTube Video details.\nQuota cost is 1. For statistics part, quota is +1.", "words2number_for_words_to_numbers": "Returns the corresponding number for your input sentence. Specify the language with the associated request parameter (currently available for italian (\"it\") and english (\"en\"))"}, "aseqs": [{"api_name": "search_by_title_for_mdblist", "api_action": "\nAction: search_by_title_for_mdblist\nAction Input: {\n  \"s\": \"family\",\n  \"y\": 2021,\n  \"m\": \"movie\",\n  \"l\": 10\n}", "api_reaction": null}, {"api_name": "get_by_imdb_id_for_mdblist", "api_action": "\nAction: get_by_imdb_id_for_mdblist\nAction Input: {\n  \"i\": \"tt13356884\"\n}", "api_reaction": null}, {"api_name": "get_by_tmdb_id_for_mdblist", "api_action": "\nAction: get_by_tmdb_id_for_mdblist\nAction Input: {\n  \"tm\": 736146,\n  \"m\": \"movie\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to search for family-friendly movies released in the past year, fetch their ratings, and then find the highest rated one's details. First API call will be to search for movies by title 'family' with filters including release_year within the last 12 months.\n\t\"api_name\": \"search_by_title_for_mdblist\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_imdb_id_for_mdblist"}}, {"state": "generated_by_agent", "aseq": {"api_name": "videos_for_youtube_v3_lite"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_title_for_mdblist", "api_action": "\nAction: search_by_title_for_mdblist\nAction Input: {\n  \"s\": \"family\",\n  \"y\": 2021,\n  \"m\": \"movie\",\n  \"l\": 5\n}", "api_reaction": null}}]}
{"URL": "79015", "query": "I'm interested in investing in small cap stocks with high earnings growth rates. Can you provide me with a list of these stocks? It would also be helpful to see the financial data and balance sheet for each stock.", "api_names": ["stock_financial_data_stock_for_mboum_finance", "stock_profile_stock_for_mboum_finance", "market_aggressive_small_caps_for_mboum_finance", "Finish", "stock_balance_sheet_stock_for_mboum_finance", "get_all_active_stream_infos_for_gwyo_twitch", "majors_performance_for_investing_financial_stocks", "get_all_restaurants_by_chain_city_state_for_fast_food_restaurants_usa_top_50_chains", "1_for_notevent", "get_hot_topics_for_news_content_extraction_live", "get_all_latest_nba_articles_for_nba_latest_news", "get_event_logs_filtered_by_topic_for_uniblock", "summary_for_play_to_earn_blockchain_games", "get_country_details_for_geoapi", "mediainfo_for_instagram_v6", "get_channel_emotes_for_kick_com_api_kick_api", "kompas_search_for_indonesia_news", "form_check_user_for_botlibre", "da_laforce_for_giay_tay_nam", "get_users_68a613f6_d503_4942_9c11_e04e59427ec1_for_the_south_asian_express"], "api_descs": {"1_for_notevent": "1", "Finish": "No description available.", "da_laforce_for_giay_tay_nam": "Đồ da Laforce là thương hiệu uy tín tại Hà Nội cũng như trên toàn quốc về sản phẩm đồ da như giày, túi, ví, thắt lưng, găng tay.", "form_check_user_for_botlibre": "The form-check-user API validates user, and returns the user's details.", "get_all_active_stream_infos_for_gwyo_twitch": "Get a Stream Informations if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )", "get_all_latest_nba_articles_for_nba_latest_news": "GET /articles\nReturns a list of all the latest nba articles.\n\nOptional params:\n\nsource returns articles based on chosen source\n\noptions: nba-canada, nba, bleacher-report, yahoo, espn, slam\n\nExample /articles?source=bleacher-report\n\nteam returns articles based on chosen team\n\nExample /articles?team=lakers\n\nlimit returns the maximum number of articles desired\n\nExample /articles?limit=5\n\nplayer returns articles based on chosen player\n\nUse dash to seperate names\n\nSearching by players full name seperated by dash produces best results\n\nExample /articles?player=kevin-durant&limit=10", "get_all_restaurants_by_chain_city_state_for_fast_food_restaurants_usa_top_50_chains": "**10 results per request. Use page number for Pagination.**", "get_channel_emotes_for_kick_com_api_kick_api": "Get Channel Emotes", "get_country_details_for_geoapi": "Get details of country from its name and prefix.", "get_event_logs_filtered_by_topic_for_uniblock": "Gets the event logs by address filtered by topics.", "get_hot_topics_for_news_content_extraction_live": "Hot Topics ranking by Google.", "get_users_68a613f6_d503_4942_9c11_e04e59427ec1_for_the_south_asian_express": "List Tags", "kompas_search_for_indonesia_news": "kompas-search", "majors_performance_for_investing_financial_stocks": "get all majors performance", "market_aggressive_small_caps_for_mboum_finance": "Small cap stocks with earnings growth rates better than 25%.", "mediainfo_for_instagram_v6": "get media info", "stock_balance_sheet_stock_for_mboum_finance": "Get stock balance sheet data.", "stock_financial_data_stock_for_mboum_finance": "Get stock financial data.", "stock_profile_stock_for_mboum_finance": "Get stock profile information such as company name, descriptions, website, etc...", "summary_for_play_to_earn_blockchain_games": "Get games market data summary"}, "aseqs": [{"api_name": "market_aggressive_small_caps_for_mboum_finance", "api_action": "\nAction: market_aggressive_small_caps_for_mboum_finance\nAction Input: {}", "api_reaction": null}, {"api_name": "stock_financial_data_stock_for_mboum_finance", "api_action": "\nAction: stock_financial_data_stock_for_mboum_finance\nAction Input: {\"symbol\": \"AAPL\"}", "api_reaction": null}, {"api_name": "stock_profile_stock_for_mboum_finance", "api_action": "\nAction: stock_profile_stock_for_mboum_finance\nAction Input: {\"symbol\": \"AAPL\"}", "api_reaction": null}, {"api_name": "stock_balance_sheet_stock_for_mboum_finance", "api_action": "\nAction: stock_balance_sheet_stock_for_mboum_finance\nAction Input: {\"symbol\": \"AAPL\"}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "market_aggressive_small_caps_for_mboum_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_financial_data_stock_for_mboum_finance", "api_action": "{\"address\": \"small cap stocks with earnings growth rates better than 25%\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_aggressive_small_caps_for_mboum_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_aggressive_small_caps_for_mboum_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_aggressive_small_caps_for_mboum_finance"}}]}
{"URL": "22133", "query": "My friend is a beginner programmer and I want to recommend some beginner-friendly articles. Can you fetch the top articles of all time, the year's top articles, and the relevant articles? Please include the article titles and URLs in the response.", "api_names": ["get_all_the_year_s_top_articles_for_dev_to_api", "get_all_the_relevant_articles_for_dev_to_api", "get_the_top_articles_of_all_time_for_dev_to_api", "Finish", "get_role_ids_for_template_for_signnow", "get_vessel_info_for_vessel_data", "map_image_get_for_navitime_maps", "get_top_games_for_twitch", "fetchdividends_for_latest_mutual_fund_nav", "get_access_settings_for_hris", "random_for_cocktails", "get_profile_for_outsystems_community_api", "search_users_for_tiktok_video_no_watermark_v2", "get_plus_one_for_plus_one", "getdraft_for_nhl_stats_and_live_data", "titles_id_crew_for_moviesdatabase", "crime_categories_for_data_police_uk", "send_image_for_betarecipes", "search_for_hadiths_with_key_words_for_hadiths_api", "financial_balance_sheet_for_macrotrends_finance"], "api_descs": {"Finish": "No description available.", "crime_categories_for_data_police_uk": "Returns a list of valid categories for a given data set date.", "fetchdividends_for_latest_mutual_fund_nav": "Fetch Dividends data", "financial_balance_sheet_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.", "get_access_settings_for_hris": "Get stored Access Setting for a specific customer", "get_all_the_relevant_articles_for_dev_to_api": "It returns all the relevant articles from dev.to website.", "get_all_the_year_s_top_articles_for_dev_to_api": "It return year's top articles from dev.to website", "get_plus_one_for_plus_one": "Get your integer, incremented by one", "get_profile_for_outsystems_community_api": "Returns the details of a profile.", "get_role_ids_for_template_for_signnow": "The endpoint allows to get role ids for a template.", "get_the_top_articles_of_all_time_for_dev_to_api": "It returns the top articles of all time from dev.to website.", "get_top_games_for_twitch": "Returns an array of top games on Twitch by current viewers.", "get_vessel_info_for_vessel_data": "Individual on board vessel info based on given ship id.\nVisit our [demo site](https://core-api.net/vessel/map.html)", "getdraft_for_nhl_stats_and_live_data": " ", "map_image_get_for_navitime_maps": "Get a static map image of the location, range and zoom value specified in the parameter.", "random_for_cocktails": "Get a random cocktail with all ingredients", "search_for_hadiths_with_key_words_for_hadiths_api": "Searching for hadiths. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database.", "search_users_for_tiktok_video_no_watermark_v2": "**Search users by keyword**", "send_image_for_betarecipes": "Send Image to get prediction and other data", "titles_id_crew_for_moviesdatabase": " "}, "aseqs": [{"api_name": "get_the_top_articles_of_all_time_for_dev_to_api", "api_action": "\nAction: get_the_top_articles_of_all_time_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_the_year_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_year_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_the_relevant_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_relevant_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_the_top_articles_of_all_time_for_dev_to_api,get_all_the_year_s_top_articles_for_dev_to_api,get_all_the_relevant_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_year_s_top_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_relevant_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_relevant_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_relevant_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_relevant_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}}]}
{"URL": "19900", "query": "I would like to know the daily dividend data for the stock symbol AAPL from March 2, 2022, to March 3, 2022. Additionally, fetch the historical price data for this stock symbol and provide the stock profile data.", "api_names": ["Finish", "stock_get_stock_profile_data_for_yh_finance_v2", "stock_get_stock_historical_price_data_for_yh_finance_v2", "stock_get_daily_dividend_data_for_yh_finance_v2", "get_san_francisco_chronicle_news_for_news_in_bay", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius", "search_for_verses_containing_terms_for_bible_memory_verse_flashcard", "spain_scheduled_flights_level_for_global_flight_data", "youtube_topcomments_for_musicdata_api", "aircraft_scatter_data_for_aircraftscatter", "getteams_for_wosti_futbol_tv_spain", "download_source_document_for_textking_translation", "get_playlist_details_for_youtube_media_downloader", "get_all_orders_for_nitro", "collection_info_for_rich_nft_api_metadata", "getcountriesv2_for_getcountries", "get_citations_for_dicolink", "create_qr_code_for_flowcode", "ip_netblock_v2_for_ip_netblocks", "single_product_for_rainforest"], "api_descs": {"Finish": "No description available.", "aircraft_scatter_data_for_aircraftscatter": "Returns all aircraft above 10,000 feet within 1000 kilometres from specified latitude and longitude.", "collection_info_for_rich_nft_api_metadata": "Get info about collection.\nSupported chain_id: eth, bsc, matic, avax, arb, op", "create_qr_code_for_flowcode": "This API takes an endpoint and return and image for a QR Code in either svg, png, jpg, or pdf format", "download_source_document_for_textking_translation": "Downloads the source document for a job.", "get_all_orders_for_nitro": "This endpoint retrieves all account orders.", "get_citations_for_dicolink": "Get citations of a word", "get_playlist_details_for_youtube_media_downloader": "This endpoint fetches details of a YouTube playlist (user created playlist, album or radio playlist).", "get_san_francisco_chronicle_news_for_news_in_bay": "Get all news titled with keyword (sources via San Francisco Chronicle )", "getcountriesv2_for_getcountries": "get all coutries of the world", "getteams_for_wosti_futbol_tv_spain": "Obtener el listado de equipos de fútbol televisados en España.", "ip_netblock_v2_for_ip_netblocks": "Get exhaustive information on IP Range (v2)", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude.", "search_for_verses_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns verses that contain term(s). Terms are not case sensitive. \nBooks, operators etc. are NOT CASE SENSITIVE\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **", "single_product_for_rainforest": "The Product Parameters are applicable when making a request with type=product to retrieve details of a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request", "spain_scheduled_flights_level_for_global_flight_data": "Get weekly Spain scheduled departing flights level.", "stock_get_daily_dividend_data_for_yh_finance_v2": "return daily dividend data", "stock_get_stock_historical_price_data_for_yh_finance_v2": "This method will pull historical pricing data for stocks, currencies, ETFs, mutual funds, U.S. Treasuries, cryptocurrencies, commodities, and indexes.", "stock_get_stock_profile_data_for_yh_finance_v2": "return stock profile data", "youtube_topcomments_for_musicdata_api": "Top Youtube commented videos of all time"}, "aseqs": [{"api_name": "stock_get_daily_dividend_data_for_yh_finance_v2", "api_action": "\nAction: stock_get_daily_dividend_data_for_yh_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\",\n  \"start_date\": \"2022-03-02\",\n  \"end_date\": \"2022-03-03\"\n}", "api_reaction": null}, {"api_name": "stock_get_stock_historical_price_data_for_yh_finance_v2", "api_action": "\nAction: stock_get_stock_historical_price_data_for_yh_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\",\n  \"start_date\": \"2022-03-02\",\n  \"end_date\": \"2022-03-03\",\n  \"time_interval\": \"daily\"\n}", "api_reaction": null}, {"api_name": "stock_get_stock_profile_data_for_yh_finance_v2", "api_action": "\nAction: stock_get_stock_profile_data_for_yh_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "stock_get_daily_dividend_data_for_yh_finance_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_get_stock_historical_price_data_for_yh_finance_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_get_stock_profile_data_for_yh_finance_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_get_daily_dividend_data_for_yh_finance_v2", "api_action": "\nAction: stock_get_daily_dividend_data_for_yh_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\",\n  \"start_date\": \"2022-03-02\",\n  \"end_date\": \"2022-03-03\"\n}", "api_reaction": null}}]}
{"URL": "50939", "query": "I want to stay updated on the latest sports news. Can you provide me with the top headlines for the 'sports' topic? It would be great if I could also search for news articles about my favorite sports team using the Search API.", "api_names": ["search_for_real_time_news_data", "top_headlines_for_real_time_news_data", "Finish", "customer_name_for_soti_sync", "user_media_for_twitter_v2", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a", "tsv2_for_odam", "staticmaps_for_maptoolkit", "get_linkedin_profile_data_for_fresh_linkedin_profile_data", "language_list_for_sitedomain", "1_getapistatus_for_nowpayments", "info_for_unitconversion"], "api_descs": {"1_getapistatus_for_nowpayments": "This is a method to get information about the current state of the API. If everything is OK, you will receive an \"OK\" message. Otherwise, you'll see some error.", "Finish": "No description available.", "customer_name_for_soti_sync": "Fetch Customer Name", "get_linkedin_profile_data_for_fresh_linkedin_profile_data": "Get full profile data, including experience & education history, skillset and company related details. Accept all type of profile urls. **1 credit per call.**", "info_for_unitconversion": "List all supported units", "language_list_for_sitedomain": "系統語系列表", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las Comunidades Autónomas de España", "search_for_real_time_news_data": "Search news articles by query with an option to limit the results to a specific time range.", "staticmaps_for_maptoolkit": "Create a Staticmap.", "top_headlines_for_real_time_news_data": "Get the latest news headlines/top stories for a country.", "tsv2_for_odam": "Get all values of a data subset\n", "user_media_for_twitter_v2": "Get User Media"}, "aseqs": [{"api_name": "top_headlines_for_real_time_news_data", "api_action": "\nAction: top_headlines_for_real_time_news_data\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_real_time_news_data", "api_action": "\nAction: search_for_real_time_news_data\nAction Input: {\n  \"query\": \"favorite sports team\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_headlines_for_real_time_news_data"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_for_real_time_news_data\",\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"top_headlines_for_real_time_news_data\",\n\t\"api_action\": \"\\nAction: top_headlines_for_real_time_news_data\\nAction Input: {\\n  \\\"category\\\": \\\"sports\\\",\\n  \\\"language\\\": \\\"en\\\",\\n  \\\"sort_by\\\": \\\"relevancy\\\"\\n}\",\n}"}]}
{"URL": "20563", "query": "I'm a travel blogger and I want to provide detailed information about airlines on my website. Can you provide me with a list of active carriers, including their names and IATA codes? Additionally, I would like to know the market countries supported by Skyscanner and their default currencies.", "api_names": ["markets_for_skyscanner_api", "currencies_for_skyscanner_api", "carriers_for_skyscanner_api", "Finish", "get_hotel_filters_for_skyscanner_v2", "calculate_for_sales_tax_calculator", "tournament_fixture_for_ice_hockey_data", "get_sign_prediction_for_today_by_name_for_zodiacapi", "get_channel_polls_for_kick_com_api_kick_api", "hhside_for_hhside", "stopwords_for_free_stopwords", "indexes_intraday_for_quotient", "latest_in_chosen_currency_for_live_metal_prices", "get_all_videos_for_likee_downloader_download_likee_videos", "topic_topic_for_uncovered_treasure", "sabr_calib_for_kiann_options_sabr", "fed_funds_overnight_rate_for_u_s_economic_indicators", "aaaaaa_for_test", "getstandardmaptile_for_maptiles", "get_coins_data_for_mineable_coins"], "api_descs": {"Finish": "No description available.", "aaaaaa_for_test": "aaa", "calculate_for_sales_tax_calculator": "Retrieves tax rates applicable to a specific address. This endpoint accepts address inputs to deliver up-to-date, relevant local tax rates instantly.", "carriers_for_skyscanner_api": "The Carriers API returns a full list of active carriers with name and IATA code indexed by their carrierId.", "currencies_for_skyscanner_api": "You can use the `/currencies` endpoint to retrieve the currencies that we support and information about how we format them in Skyscanner.", "fed_funds_overnight_rate_for_u_s_economic_indicators": "Get daily federal funds overnight rate at which commercial banks borrow and lend their excess reserves to each other overnight.", "get_all_videos_for_likee_downloader_download_likee_videos": "This endpoint will return back all videos about a specific user on Likee.", "get_channel_polls_for_kick_com_api_kick_api": "Get Channel Polls", "get_coins_data_for_mineable_coins": "With this endpoint you can get a collection of all coins.\n\n**API alterations**\n- **Get one coin:** https://api.minerstat.com/v2/coins?list=BTC\n- **Get list of coins:** https://api.minerstat.com/v2/coins?list=BTC,BCH,BSV\n- **Get all coins from one algorithm:** https://api.minerstat.com/v2/coins?algo=SHA-256\n- **Get all coins from multiple algorithms:** https://api.minerstat.com/v2/coins?algo=SHA-256,Scrypt,Ethash", "get_hotel_filters_for_skyscanner_v2": "This API is used to get all the available filters for the place to visit.", "get_sign_prediction_for_today_by_name_for_zodiacapi": "Get sign prediction for today  by name", "getstandardmaptile_for_maptiles": "Standard tiles with labels in local language for a place (untranslated and untransliterated) as known from OpenStreetMap", "hhside_for_hhside": "aaa", "indexes_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "latest_in_chosen_currency_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, Platinum and 160+ currency rates based on selected Currency", "markets_for_skyscanner_api": "You can use the `/markets` endpoint to retrieve the market countries that we support. Most suppliers (airlines, travel agents, and car hire dealers) set their fares based on the market (or country of purchase). It is therefore necessary to specify the market country in every query. The names of the markets returned are localised based on a locale passed as a parameter.", "sabr_calib_for_kiann_options_sabr": "A simplistic least-error fit to retrieve sabr parameters given arrays of (lognormal)vols and strikes. Note that, it does not explicitly calibrate to ATMF vols.\n\nParams as per below.\nparams = {\"fwd_\" : 1655, \"shift_\": 0.0, \"time_\": 0.159, \"beta\" : 0.9, \"k_\": [strikes_], \"vols_\": [vols_], \"ret_\": 0}\n\nNote that in the (python) request.get, k_ should be of format [x1, x2, x3,........ ] where there is no \"\", similarly for [vols_]", "stopwords_for_free_stopwords": "Will return the exact extract words to use in your data analysis or application", "topic_topic_for_uncovered_treasure": "Get entries from a specific topic", "tournament_fixture_for_ice_hockey_data": "Full match list with period and final scores."}, "aseqs": [{"api_name": "carriers_for_skyscanner_api", "api_action": "\nAction: carriers_for_skyscanner_api\nAction Input: {}", "api_reaction": null}, {"api_name": "markets_for_skyscanner_api", "api_action": "\nAction: markets_for_skyscanner_api\nAction Input: {\n  \"locale\": \"en-US\"\n}", "api_reaction": null}, {"api_name": "currencies_for_skyscanner_api", "api_action": "\nAction: currencies_for_skyscanner_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "carriers_for_skyscanner_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "markets_for_skyscanner_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_hotel_filters_for_skyscanner_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "markets_for_skyscanner_api", "api_action": "\nAction: markets_for_skyscanner_api\nAction Input: {\n  \"locale\": \"en-US\"\n}", "api_reaction": null}}]}
{"URL": "64691", "query": "I'm a travel blogger and I want to share the top Instagram posts related to travel on my blog. Can you give me the latest Instagram posts with the hashtag 'travel'? I would like to see the media information, including the number of likes and comments. Additionally, provide me with the usernames of the top commenters for each post.", "api_names": ["hashtagmedias_for_instagram_v6", "Finish", "us_ca_for_us_gas_prices", "info_link_data_for_terabox_downloader", "basic_info_for_ott_details", "minimal_exchange_amount_for_changenow_crypto_exchange", "translate_convert_download_subtitle_for_youtube_media_downloader", "prices_and_up_and_down_for_crypto_prices_api", "by_zip_code_for_homeless_shelter", "most_negative_news_for_stock_sentiment_api"], "api_descs": {"Finish": "No description available.", "basic_info_for_ott_details": "Get info on a  cast such as name , profession , birth and death year , bio , poster , best titles  etc.", "by_zip_code_for_homeless_shelter": "Search Homeless Shelters by Zip Code", "hashtagmedias_for_instagram_v6": "Get hashtag medias", "info_link_data_for_terabox_downloader": "Get Data Terabox Share Link", "minimal_exchange_amount_for_changenow_crypto_exchange": "The API endpoint returns minimal payment amount required to make an exchange. If you try to exchange less, the transaction will most likely fail.\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>", "most_negative_news_for_stock_sentiment_api": "Returns a list of the most negative articles related to the given stock. The sentiment scores can be viewed in the compound field and you can change the number of articles returned with the count parameter.\n\nNote: The api parses for 100 articles so any count given over 100, the api will just return all 100 articles", "prices_and_up_and_down_for_crypto_prices_api": "Here you can fetch the data using this rest endpoint", "translate_convert_download_subtitle_for_youtube_media_downloader": "This endpoint lets you translate, convert and download a subtitle of a YouTube video. Before doing this, please call endpoint `Video > Get Video Details` to obtain subtitle URLs.", "us_ca_for_us_gas_prices": "Returns current gas price data for California. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."}, "aseqs": [{"api_name": "hashtagmedias_for_instagram_v6", "api_action": "\nAction: hashtagmedias_for_instagram_v6\nAction Input: {\n  \"hash_tag\": \"travel\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "hashtagmedias_for_instagram_v6"}}, {"state": "generated_by_agent", "aseq": {"api_name": "hashtagmedias_for_instagram_v6"}}]}
{"URL": "57", "query": "I'm interested in learning more about the latest products in the market. Can you perform a product search for the latest iPhone 14? Additionally, I would like to perform a Google search for news articles related to the iPhone 14. Thank you!", "api_names": ["search_b_for_seo_api", "products_for_seo_api", "news_for_seo_api", "Finish", "specificcolorset_for_colorme", "hashtag_for_twitter", "calculate_mortgage_for_real_estate_usa", "by_city_for_ambee_air_quality", "geteventsid_for_wosti_futbol_tv_spain", "api_userinfo_for_tiktok_private_api", "rebootaccount_for_green_api", "defaultroot_for_fortune_cookie", "get_user_pins_for_pinterest_apis", "image_convert_for_pragmavantapi", "getonequestionwithanswers_for_tech_exams", "get_vods_for_league_of_legends_esports", "get_past_results_10_years_for_4d_results", "heroes_for_superhero_search", "getchannelvideos_for_youtube_search_v3", "spac_price_targets_for_spachero_spac_database"], "api_descs": {"Finish": "No description available.", "api_userinfo_for_tiktok_private_api": "Get avatar and followers, likes and videos count of a user by \"id\"", "by_city_for_ambee_air_quality": "Get the latest air quality data for your city", "calculate_mortgage_for_real_estate_usa": "calculate mortgage", "defaultroot_for_fortune_cookie": "default get request to the random fortune endpoint returning a standard response", "get_past_results_10_years_for_4d_results": "Return all company 4D Results within a specific date range.\n(Up to 10 year data and only available for MEGA PLAN subscriber)", "get_user_pins_for_pinterest_apis": "Get User Pins by user name", "get_vods_for_league_of_legends_esports": "In this api method you can get all previous event , match game information. You can search by tournaments id and you can get this value from the Get Tournaments For League endpoint.", "getchannelvideos_for_youtube_search_v3": "Retrieve a comprehensive list of videos associated with a specific channel", "geteventsid_for_wosti_futbol_tv_spain": "Obtener el evento por identificador único  del listado de eventos de partidos de fútbol televisados en España.\n\n> Este endpoints requiere de un parámetro denominado Id.", "getonequestionwithanswers_for_tech_exams": "Get a specific question and corresponding answers", "hashtag_for_twitter": "This endpoint return hashtag results", "heroes_for_superhero_search": "Return a list of 20 random heroes", "image_convert_for_pragmavantapi": "Convert image to different type and resize to smaller size.", "news_for_seo_api": "Perform Google News Search\n\n Parameters\n----------\nquery : the string query to perform search for Google news. A simple query for `president` will be `q=president`. An example of multiple keyword would be `q=news+about+presdient+trump`. News can also be filtered by country and language. For `US` news and in English the query will be `q=trump&ceid=US:en` for news in Great Britian the query will be `q=trump&ceid=GB:en`\n\nReturns\n-------\njson: {\"feed\": { \"title\" : \"trump\" ...} , \"entites\": [ {\"title\" : \"Trump doubles down on divisive messaging in speech to honor Independence Day - CNN\", \"links\": []} ...]}", "products_for_seo_api": "Search for products rankings", "rebootaccount_for_green_api": "Документация [Reboot](https://green-api.com/docs/api/account/Reboot/)", "search_b_for_seo_api": "Perform SEO search for secondary search engine", "spac_price_targets_for_spachero_spac_database": "Get latest SPAC price targets from analysts, filter by SPAC symbol.", "specificcolorset_for_colorme": "Get a set of colors based on input color like - \"yellow\" / \"red\""}, "aseqs": [{"api_name": "products_for_seo_api", "api_action": "\nAction: products_for_seo_api\nAction Input: {\n  \"query\": \"latest iPhone 14\"\n}", "api_reaction": null}, {"api_name": "news_for_seo_api", "api_action": "\nAction: news_for_seo_api\nAction Input: {\n  \"query\": \"iPhone 14\"\n}", "api_reaction": null}, {"api_name": "search_b_for_seo_api", "api_action": "\nAction: search_b_for_seo_api\nAction Input: {\n  \"query\": \"iPhone 14 news\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "products_for_seo_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "news_for_seo_api", "api_action": "{\"query\": \"iPhone 14\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_for_seo_api", "api_action": "\nAction: products_for_seo_api\nAction Input: {\n  \"query\": \"latest iPhone 14\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_for_seo_api", "api_action": "\nAction: products_for_seo_api\nAction Input: {\n  \"query\": \"latest iPhone 14\"\n}", "api_reaction": null}}]}
{"URL": "66200", "query": "I'm a food blogger and I'm looking for new recipe ideas. Can you give me a list of recipe categories and their corresponding images? Additionally, suggest some official recipes from the 'Desserts' category.", "api_names": ["get_all_categories_for_comfyfood", "Finish", "gera_comprovante_simples_for_consulta_cnpj_tempo_real", "companies_balance_sheet_statements_for_financial_modeling_prep", "search_for_playlists_for_youtube_media_downloader", "holder_for_holistic_finance_stock_data", "real_time_hashtag_search_for_tiktok_data", "getportfoliosettlements_for_kalshi_trading_api"], "api_descs": {"Finish": "No description available.", "companies_balance_sheet_statements_for_financial_modeling_prep": "Returns companies balance sheet statements.", "gera_comprovante_simples_for_consulta_cnpj_tempo_real": "Gera Comprovante em PDF do Simples Nacional", "get_all_categories_for_comfyfood": "Returns all categories", "getportfoliosettlements_for_kalshi_trading_api": "Endpoint for getting the logged-in member's settlements historical track.", "holder_for_holistic_finance_stock_data": "Provides information about the current holder structure.", "real_time_hashtag_search_for_tiktok_data": "Search for hashtags by keyword", "search_for_playlists_for_youtube_media_downloader": "This endpoint searches for YouTube playlists. Pagination scraping is supported. Thumbnails will not be blurred by age safety."}, "aseqs": [{"api_name": "get_all_categories_for_comfyfood", "api_action": "\nAction: get_all_categories_for_comfyfood\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_categories_for_comfyfood"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_playlists_for_youtube_media_downloader"}}]}
{"URL": "76393", "query": "I'm organizing a company retreat in Toulouse and I need to know the historical weather data for the past week at 15:00 and 21:00. Can you fetch the temperature during those times?", "api_names": ["history_for_france_2d", "Finish", "world_latest_matches_for_surebets_2", "parse_ogp_meta_data_for_link_preview", "get_book_information_by_book_id_for_hapi_books", "getfileversions_for_groupdocs_signature_cloud", "getquestions_for_asktheworld", "api_for_tnd_exchange_rate"], "api_descs": {"Finish": "No description available.", "api_for_tnd_exchange_rate": "GET the average exchange rate of TND against USD & EUR", "get_book_information_by_book_id_for_hapi_books": "Giving its Id, this endpoint returns a lot of information about that book, such as Name, Published Date, Authors, Synopsis, and many more.", "getfileversions_for_groupdocs_signature_cloud": " ", "getquestions_for_asktheworld": "Gets Questions Asked by Keyword from Search Engines", "history_for_france_2d": "History", "parse_ogp_meta_data_for_link_preview": "Parse link preview", "world_latest_matches_for_surebets_2": "Latest matches international matches by bookie - updated every 24 hours"}, "aseqs": [{"api_name": "history_for_france_2d", "api_action": "\nAction: history_for_france_2d\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "history_for_france_2d"}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_france_2d", "api_action": "{\"city\": \"Toulouse\", \"start_date\": \"-7D\"}", "api_reaction": null}}]}
{"URL": "38417", "query": "I am a photographer and I want to capture the sunrise at the Grand Canyon. Can you provide me with the sunrise time for tomorrow? I need to plan my trip accordingly.", "api_names": ["find_places_for_ai_weather_by_meteosource", "historical_weather_for_ai_weather_by_meteosource", "hourly_for_ai_weather_by_meteosource", "Finish", "symbols_for_exchange_rate", "asoy_for_us_presidential_election", "basketball_predictions_by_day_for_betigolo_predictions", "list_of_special_markets_for_pinnacle_odds", "get_ios_app_for_ios_store", "scrape_appstore_for_apple_app_store_scraper", "get_nfl_teams_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "v1_reversegeocoding_for_geocoding_by_api_ninjas", "game_report_for_hockey_live_sk_data", "salary_estimate_for_adzuna", "search_req_for_hanime_python_api", "search_for_real_time_news_data"], "api_descs": {"Finish": "No description available.", "asoy_for_us_presidential_election": "Returns JSON block of results for All States, One Year (ASOY), for the specified US Presidential Election year (i.e., 2008).", "basketball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.", "find_places_for_ai_weather_by_meteosource": "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc.", "game_report_for_hockey_live_sk_data": "Get game score, goals, penalties and team statistics for a certain game ID", "get_ios_app_for_ios_store": "This endpoint is used to fetch specific app from app Id", "get_nfl_teams_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call will retrieve the list of NFL teams. Included is their name, city, abbreviation, and teamID which can be used in other calls.  Their current record and current W/L streak is included as well. Optional data that can be included are the team rosters and their schedules.      \n\nIncluded in team rosters is all players injuries. \n/getNFLTeams\n\nOptional parameters are ?schedules=true    or    ?rosters=true", "historical_weather_for_ai_weather_by_meteosource": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "hourly_for_ai_weather_by_meteosource": "**Hourly weather** forecast for the next 5 days. **Global** data are based on our **AI technology**, which uses many different models. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.", "list_of_special_markets_for_pinnacle_odds": "Get a list of special markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value. You must always use the since parameter, after the first call. Please note that prematch and live events are different", "salary_estimate_for_adzuna": "Returns an estimate of the salary of a job.", "scrape_appstore_for_apple_app_store_scraper": "Get details of App Store Listing", "search_for_real_time_news_data": "Search news articles by query with an option to limit the results to a specific time range.", "search_req_for_hanime_python_api": "Search API with Query\n\n**This request is limited, Please Refer to /search for more stuff**", "symbols_for_exchange_rate": "Get the all available currencies.", "v1_reversegeocoding_for_geocoding_by_api_ninjas": "API Ninjas Reverse Geocoding API endpoint."}, "aseqs": [{"api_name": "find_places_for_ai_weather_by_meteosource", "api_action": "\nAction: find_places_for_ai_weather_by_meteosource\nAction Input: {\n\"text\": \"Grand Canyon\"\n}", "api_reaction": null}, {"api_name": "hourly_for_ai_weather_by_meteosource", "api_action": "\nAction: hourly_for_ai_weather_by_meteosource\nAction Input: {}", "api_reaction": null}, {"api_name": "historical_weather_for_ai_weather_by_meteosource", "api_action": "\nAction: historical_weather_for_ai_weather_by_meteosource\nAction Input: {\n  \"date\": \"2023-07-04\",\n  \"lat\": \"36.05443N\",\n  \"lon\": \"112.13934W\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "historical_weather_for_ai_weather_by_meteosource"}}, {"state": "generated_by_agent", "aseq": {"api_name": "historical_weather_for_ai_weather_by_meteosource"}}, {"state": "generated_by_agent", "aseq": {"api_name": "find_places_for_ai_weather_by_meteosource", "api_action": "{\"text\": \"Grand Canyon\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "hourly_for_ai_weather_by_meteosource"}}]}
{"URL": "25469", "query": "I'm an OutSystems MVP looking to connect with other community members. Can you help me find profiles of OutSystems MVPs? It would be great to have their names, job titles, companies, and social media profiles such as LinkedIn and Twitter. Please limit the results to 50 profiles per page.", "api_names": ["get_profiles_for_outsystems_community_api", "get_profile_for_outsystems_community_api", "Finish", "search_for_norwegian_license_plate_api", "competitions_matches_for_zeus_api", "yaml_for_stopmodreposts_blocklist", "check_account_balance_for_eazita_com", "list_languages_for_subtitles_for_youtube_v2", "search_jokes_for_humor_jokes_and_memes", "currencies_for_currency_converter_pro", "full_data_for_question_explorer", "planet_currently_visible_for_ouranos", "matchincidents_for_rugbyapi2", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a", "list_all_nps_organization_templates_for_nps_net_promoter_score"], "api_descs": {"Finish": "No description available.", "check_account_balance_for_eazita_com": "Retrieve your current eazita account balance.", "competitions_matches_for_zeus_api": "List the current matches for a league 🆚.", "currencies_for_currency_converter_pro": "List all supported currencies.", "full_data_for_question_explorer": "full data", "get_profile_for_outsystems_community_api": "Returns the details of a profile.", "get_profiles_for_outsystems_community_api": "Returns a list of profiles", "list_all_nps_organization_templates_for_nps_net_promoter_score": "Get a list of all NPS templates of a given Organization by its organization id (oid)", "list_languages_for_subtitles_for_youtube_v2": "List all supported languages", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las Comunidades Autónomas de España", "matchincidents_for_rugbyapi2": "Get incidents for a specific Rugby match.", "planet_currently_visible_for_ouranos": "Planet currently visible", "search_for_norwegian_license_plate_api": " ", "search_jokes_for_humor_jokes_and_memes": "Search for jokes.\nSee https://humorapi.com/docs/#Search-Jokes for more.", "yaml_for_stopmodreposts_blocklist": "YAML Ain't Markup Language endpoint"}, "aseqs": [{"api_name": "get_profiles_for_outsystems_community_api", "api_action": "\nAction: get_profiles_for_outsystems_community_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_profile_for_outsystems_community_api", "api_action": "\nAction: get_profile_for_outsystems_community_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_profiles_for_outsystems_community_api", "api_action": "\nAction: get_profiles_for_outsystems_community_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_profiles_for_outsystems_community_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profiles_for_outsystems_community_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profiles_for_outsystems_community_api", "api_action": "\nAction: get_profiles_for_outsystems_community_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profiles_for_outsystems_community_api"}}]}
{"URL": "35473", "query": "I want to attend Premier League matches during my visit to England. Can you give me a list of upcoming matches, along with the details of the clubs participating in each match? Please include the competition name and season as well.", "api_names": ["competitions_for_premier_league_upcoming_matches", "clubs_for_premier_league_upcoming_matches", "fixtures_for_premier_league_upcoming_matches", "Finish", "get_movies_by_cast_name_for_imdb_api", "evaluate_expression_for_evaluate_expression", "filter_for_unicode_codepoints", "getarchivereport_for_evictions_suits_liens_and_judgments", "api_trades_for_prague_stock_exchange", "gamebans_for_esportapi", "gender_from_name_for_person_app", "get_word_of_the_day_from_multiple_sources_for_word_of_the_day", "chains_for_defi_data", "discounted_cash_flow_models_dcf_s_for_marketci_analytics", "email_id_for_phone_and_email_validator_v2", "balancesofstark_key_for_reddio_nft_token_and_ipfs"], "api_descs": {"Finish": "No description available.", "api_trades_for_prague_stock_exchange": " ", "balancesofstark_key_for_reddio_nft_token_and_ipfs": "The API retrieves the balance of a stark_key, each return value are as the previous field", "chains_for_defi_data": "Get current TVL of all chains", "clubs_for_premier_league_upcoming_matches": "This API will supply client info about all clubs that are playing the First Premier League Competition", "competitions_for_premier_league_upcoming_matches": "This API will return an array of **5 biggest competitions** in which all clubs in* Premier League* are able to participate", "discounted_cash_flow_models_dcf_s_for_marketci_analytics": "Artificial Intelligence-powered DCF's for Cash Flow forecasts and assumptions.", "email_id_for_phone_and_email_validator_v2": "eg: email@example.com", "evaluate_expression_for_evaluate_expression": "Scans the given expression and returns the result of any calculation found, in plain text.", "filter_for_unicode_codepoints": "Filter a String, e.g. , by Unicode version or only uppercase letters", "fixtures_for_premier_league_upcoming_matches": "When making a request to this API, it will return a JSON containing a list of upcoming matches in Premier League", "gamebans_for_esportapi": "Get game bans for a specific E-Sports game by providing the game ID.", "gender_from_name_for_person_app": "Given someones name infer their gender", "get_movies_by_cast_name_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required", "get_word_of_the_day_from_multiple_sources_for_word_of_the_day": "Gets word of the day from mutiple sources in one go easy.", "getarchivereport_for_evictions_suits_liens_and_judgments": " "}, "aseqs": [{"api_name": "fixtures_for_premier_league_upcoming_matches", "api_action": "\nAction: fixtures_for_premier_league_upcoming_matches\nAction Input: {}", "api_reaction": null}, {"api_name": "competitions_for_premier_league_upcoming_matches", "api_action": "\nAction: competitions_for_premier_league_upcoming_matches\nAction Input: {}", "api_reaction": null}, {"api_name": "clubs_for_premier_league_upcoming_matches", "api_action": "\nAction: clubs_for_premier_league_upcoming_matches\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "fixtures_for_premier_league_upcoming_matches"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fixtures_for_premier_league_upcoming_matches"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fixtures_for_premier_league_upcoming_matches"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fixtures_for_premier_league_upcoming_matches"}}]}
{"URL": "87295", "query": "I want to retrieve the address details for the UDPRN 18911184. Could you fetch the building number, premise, line 1, post town, county, and country? It would be really helpful.", "api_names": ["find_by_udprn_for_find_by_udprn", "Finish", "bus_trolley_locations_for_septa", "typical_price_for_qvantana", "locations_v2_search_deprecated_for_hotels", "get_settings_for_smartsync", "get_classes_for_lost_ark", "crime_categories_for_data_police_uk", "weatherendpoin_for_havo", "country_flag_for_allscores"], "api_descs": {"Finish": "No description available.", "bus_trolley_locations_for_septa": "", "country_flag_for_allscores": "Get country flag. It generates image/png.", "crime_categories_for_data_police_uk": "Returns a list of valid categories for a given data set date.", "find_by_udprn_for_find_by_udprn": "“Find By UDPRN” API gets address for the specified UDPRN.\n\nUDPRN stands for ‘Unique Delivery Point Reference Number. A UDPRN is a unique numeric code (e.g. 64983) for any premise on the Postcode Address File.\n\nThis API uses the latest PAF and Multiple Residence data from Royal Mail.UDPRN are unique identifiers for every address in the UK that Royal Mail has in its database.", "get_classes_for_lost_ark": "Get all classes and subclasses", "get_settings_for_smartsync": "smartsync settings", "locations_v2_search_deprecated_for_hotels": "Search for related locations and suggestions", "typical_price_for_qvantana": "Typical price indicator", "weatherendpoin_for_havo": "ob havo"}, "aseqs": [{"api_name": "find_by_udprn_for_find_by_udprn", "api_action": "\nAction: find_by_udprn_for_find_by_udprn\nAction Input: {\n  \"udprn\": \"18911184\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "find_by_udprn_for_find_by_udprn"}}, {"state": "generated_by_agent", "aseq": {"api_name": "find_by_udprn_for_find_by_udprn"}}]}
{"URL": "79764", "query": "I'm planning to start a new business selling house plants online. Can you give me a list of house plants that are popular and highly sought after? It would be great if you could provide their ideal temperature, light requirements, and watering needs.", "api_names": ["get_all_plants_for_house_plants", "Finish", "rotateflipimage_for_aspose_imaging_cloud", "get_user_orders_for__demo_project", "basal_metabolic_rate_bmr_for_health_calculator_api", "app_detail_for_steam", "the_universal_cmms_api_for_makini_v2", "getarchivereport_for_experian_credit_report_score", "summery_copy_for_summery", "search_location_for_instagram_v5", "caisonode_for_caiso", "search_for_a_product_for_pricer"], "api_descs": {"Finish": "No description available.", "app_detail_for_steam": "Get detailed info of the app", "basal_metabolic_rate_bmr_for_health_calculator_api": "This endpoint allows you to calculate the Basal Metabolic Rate (BMR) based on age, weight, height, and gender parameters. The BMR represents the number of calories needed to maintain basic bodily functions at rest.", "caisonode_for_caiso": "Returns nodes where prices are tracked by CAISO", "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.", "get_user_orders_for__demo_project": " ", "getarchivereport_for_experian_credit_report_score": " ", "rotateflipimage_for_aspose_imaging_cloud": " ", "search_for_a_product_for_pricer": "search by product name", "search_location_for_instagram_v5": "Get Instagram locations by keyword.", "summery_copy_for_summery": "dahsboard summery", "the_universal_cmms_api_for_makini_v2": "The universal\nCMMS API"}, "aseqs": [{"api_name": "get_all_plants_for_house_plants", "api_action": "\nAction: get_all_plants_for_house_plants\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_plants_for_house_plants"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_plants_for_house_plants"}}]}
{"URL": "86009", "query": "Could you assist me in converting the number 23879908709817834 into words? I would greatly appreciate your help in translating this numerical value.", "api_names": ["numbers_translator_for_numbers_translator", "Finish", "address_autocomplete_for_navitime_geocoding", "recent_current_affairs_for_current_affairs_of_india", "request_random_quote_for_random_quote_generator", "list_of_all_countries_for_weather_forecast_14_days", "ranking_current_for_sofascores", "quote_for_twelve_data", "nearby_arcgis_for_nearby_places", "new_homes_for_sale_for_uk_real_estate_rightmove", "burned_calorie_from_activity_for_fitness_calculator", "get_awesome_product_details_for_amazon_data_scraper_v2"], "api_descs": {"Finish": "No description available.", "address_autocomplete_for_navitime_geocoding": "Return address predictions from the specified keyword of request parameters.", "burned_calorie_from_activity_for_fitness_calculator": "Calculate the burned calorie for a specific activity.", "get_awesome_product_details_for_amazon_data_scraper_v2": "Get awesome product details", "list_of_all_countries_for_weather_forecast_14_days": "List of all Countries", "nearby_arcgis_for_nearby_places": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50.", "new_homes_for_sale_for_uk_real_estate_rightmove": "New homes for sale", "numbers_translator_for_numbers_translator": "Numbers Translator", "quote_for_twelve_data": "Quote endpoint is an efficient method to retrieve the latest quote of the selected instrument.", "ranking_current_for_sofascores": "Get the current rating", "recent_current_affairs_for_current_affairs_of_india": "This will provide you with the recent current affairs of India.", "request_random_quote_for_random_quote_generator": "A simple get request."}, "aseqs": [{"api_name": "numbers_translator_for_numbers_translator", "api_action": "\nAction: numbers_translator_for_numbers_translator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "numbers_translator_for_numbers_translator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "numbers_translator_for_numbers_translator", "api_action": "{\"number\": 23879908709817834}"}}]}
{"URL": "18692", "query": "I'm interested in starting a dropshipping business and need to find reliable suppliers. Please search for products related to fashion accessories and provide details like product name, price, and supplier. Additionally, search for shops in Yiwu that sell beauty products and provide their contact information.", "api_names": ["Finish", "search_products_for_yiwugo_product_data", "search_shops_for_yiwugo_product_data", "api_key_validation_for_adcopy_ai_google_ads_ai_text_generation", "search_tweet_for_twitter_pack_v2", "getproducts_for_etsy_products_api_allows_you_to_scrape_the_products_from_etsy", "hashtag_info_for_tiktok_scraper_v2", "full_access_for_walnuttradingdash", "blur_for_dagpi", "image_stable_prompter_for_image_diffusion", "autocomplete_pincodes_for_autocomplete_india", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment"], "api_descs": {"Finish": "No description available.", "api_key_validation_for_adcopy_ai_google_ads_ai_text_generation": "This endpoint is used only to validate API Keys, it simply returns a status of 200 and a message of 'OK'. \nThe use of this endpoint is Free, and is useful for server-to-server FREE API validation.", "autocomplete_pincodes_for_autocomplete_india": "Autocomplete PinCodes", "blur_for_dagpi": "Blur Image", "full_access_for_walnuttradingdash": "The api call will grant access to a unique URL to access the dashboard (demo [here](https://walnuthillai.com/wp-content/themes/blankslate-child/videos/demo_walnuttradingdash.mp4)). The PRO version grants access to 60 minutes of use per request, unlimited access to all assets and technical indicators, and any time period up to the previous date.", "getdisasterbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get disasters which have address falling into a specific radius for a specific date range", "getproducts_for_etsy_products_api_allows_you_to_scrape_the_products_from_etsy": "Get Etsy products", "hashtag_info_for_tiktok_scraper_v2": "Get hashtag (challenge) info.", "image_stable_prompter_for_image_diffusion": "generate prompt from image url for stable diffusion", "search_products_for_yiwugo_product_data": "search products\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "search_shops_for_yiwugo_product_data": "search shops by keyword.\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "search_tweet_for_twitter_pack_v2": "search tweet by query"}, "aseqs": [{"api_name": "search_products_for_yiwugo_product_data", "api_action": "\nAction: search_products_for_yiwugo_product_data\nAction Input: {\n  \"keyword\": \"fashion accessories\",\n  \"pagesize\": 5\n}", "api_reaction": null}, {"api_name": "search_shops_for_yiwugo_product_data", "api_action": "\nAction: search_shops_for_yiwugo_product_data\nAction Input: {\n  \"keyword\": \"beauty products\",\n  \"pagesize\": 3\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_yiwugo_product_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_shops_for_yiwugo_product_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_products_for_yiwugo_product_data", "api_action": "\nAction: search_products_for_yiwugo_product_data\nAction Input: {\n  \"keyword\": \"fashion accessories\",\n  \"pagesize\": 5,\n  \"lan\": \"en\"\n}", "api_reaction": null}}]}
{"URL": "49042", "query": "Is the system functioning properly? I need to check the health status of the system and ensure that all the APIs are working fine. Additionally, I would like to get a list of ongoing contests and their details.", "api_names": ["health_for_demo1", "contests_for_demo1", "Finish", "listofattributeandvalueoptions_for_sandbox_ecombr_com_01_products", "get_all_city_names_for_restaurants_near_me_usa", "get_list_of_github_repo_for_ruby_web_scrapping_for_leo_github_api_scraper", "get_apps_from_dev_for_google_play_api", "performer_model_info_for_onlyfans", "list_customers_for_walletapi_cloud", "flights_detail_for_flight_radar", "game_odds_by_category_schedule_for_sportsbook_odds", "image_search_for_image_search_api"], "api_descs": {"Finish": "No description available.", "contests_for_demo1": "Get list of contests", "flights_detail_for_flight_radar": "Get detailed information of specific flight", "game_odds_by_category_schedule_for_sportsbook_odds": "If you query the category schedule and do not include a \"sport\" and \"category\" parameter it will return all possible values of sport and their respective categories. If you do include those parameters it will return a schedule of all sites for that sport and category. Remember that the categories are hashes, 0 is moneylines, 1 is spreads, 2 is over under, etc. There are a lot of categories, refer to the deconstruct ID code to determine which is which.", "get_all_city_names_for_restaurants_near_me_usa": "GET all City names", "get_apps_from_dev_for_google_play_api": "Returns dev's apps.", "get_list_of_github_repo_for_ruby_web_scrapping_for_leo_github_api_scraper": "Get list of Github repo for ruby web scrapping", "health_for_demo1": "Get health info", "image_search_for_image_search_api": "Returns the list of images and related searches based on the **q** keyword.\nIf you want to make your search more specific based on a color use the **imgc** param, otherwise don't add it or leave it blank.", "list_customers_for_walletapi_cloud": "Retrieve a list of your customers with pagination. Specify current page and page size as query parameters.", "listofattributeandvalueoptions_for_sandbox_ecombr_com_01_products": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html", "performer_model_info_for_onlyfans": "Get detail info about a performer / model"}, "aseqs": [{"api_name": "health_for_demo1", "api_action": "\nAction: health_for_demo1\nAction Input: {}", "api_reaction": null}, {"api_name": "contests_for_demo1", "api_action": "\nAction: contests_for_demo1\nAction Input: {}", "api_reaction": null}, {"api_name": "contests_for_demo1", "api_action": "\nAction: contests_for_demo1\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "health_for_demo1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "contests_for_demo1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_demo1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_demo1"}}]}
{"URL": "74717", "query": "I'm planning a family movie night and we want to watch an anime that is suitable for all ages. Can you recommend a family-friendly anime? Please provide the title, main picture, and a brief synopsis of the anime. Thank you!", "api_names": ["get_animes_for_animes", "Finish", "get_crypto_for_test_crypto_api", "projected_pitching_stats_for_mlb_data", "v1_feeds_for_awesome_rss", "supported_symbols_for_commodity_rates_api", "transcripts_v2_list_for_seeking_alpha", "latest_earth_quake_happened_on_indonesia_bmkg_for_indonesia_most_accurate_weather_and_earthquake", "fixtures_by_date_for_cricket_live_data", "france24_arabic_for_arabic_news_api", "verify_for_email_utilities", "comment_list_by_video_for_tiktok_video_feature_summary"], "api_descs": {"Finish": "No description available.", "comment_list_by_video_for_tiktok_video_feature_summary": "get comment list by video", "fixtures_by_date_for_cricket_live_data": "Lists fixtures for a given date", "france24_arabic_for_arabic_news_api": "مسار يقوم باسترجاع اخر الأخبار من موقع فرانس 24 بالعربية", "get_animes_for_animes": "This endpoint allows for the retrieval of data about anime. The query parameters include q (the search query), limit (the number of results per page), offset (the number of results to skip), ascending (sort order), order (sort order), `media_type `(anime type), studio (studio name), source (source material), status (`currently_airing `or `finished_airing`), genre, season, `year_equal `(equal to a year specified), `year_less `(less than a year specified), `year_greater `(greater than a year specified), language, and nsfw (not safe for work content).", "get_crypto_for_test_crypto_api": "Get_Crypto", "latest_earth_quake_happened_on_indonesia_bmkg_for_indonesia_most_accurate_weather_and_earthquake": "Latest earth quake happened on Indonesia", "projected_pitching_stats_for_mlb_data": "Retrieve a players projected pitching stats for a given season.  Omitting the season parameter will return the actual stats for the players earliest major league season.", "supported_symbols_for_commodity_rates_api": "Check all the available symbols for your queries. This endpoint retrieves all the supported commodities and currencies as well.", "transcripts_v2_list_for_seeking_alpha": "List transcripts of specific symbol", "v1_feeds_for_awesome_rss": "List your current RSS", "verify_for_email_utilities": "get normalized form of an email"}, "aseqs": [{"api_name": "get_animes_for_animes", "api_action": "\nAction: get_animes_for_animes\nAction Input: {}", "api_reaction": null}, {"api_name": "get_animes_for_animes", "api_action": "\nAction: get_animes_for_animes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_animes_for_animes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_animes_for_animes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_animes_for_animes", "api_action": "\nAction: get_animes_for_animes\nAction Input: {\"status\": \"currently_airing\", \"media_type\": \"ANIME\", \"nsfw\": false}", "api_reaction": null}}]}
{"URL": "50657", "query": "I am planning a road trip across multiple cities and I need to know the weather forecast for each city. Can you provide me with a 5-day forecast for each city, including the temperature, precipitation, and wind speed? Also, please check if there are any severe weather alerts for any of the cities.", "api_names": ["Finish", "get_country_list_for_travel_hacking_tool", "pesquisa_por_campo_for_lista_de_empresas_por_segmento", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api", "nhl_team_players_for_nhl_api"], "api_descs": {"Finish": "No description available.", "get_country_list_for_travel_hacking_tool": "This endpoint returns a list of country codes (ISO-3166).", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api": "Get list of available telephone numbers for a country and given prefix", "nhl_team_players_for_nhl_api": "This API endpoint will return the team roster information for a specific NHL team.", "pesquisa_por_campo_for_lista_de_empresas_por_segmento": "Busque uma lista de empresas utilizando outros campos, como:  **nome, email, telefone, socio, cep**.\nCampos retornados: CNPJ, localização, UF, Cidade, bairro, nome fantasia e razão social."}, "aseqs": [{"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_country_list_for_travel_hacking_tool"}}]}
{"URL": "81806", "query": "I'm planning a road trip from Madrid to Barcelona. Can you provide me with the step-by-step directions, distance, and estimated duration of the journey? Also, let me know the speed limit on the route.", "api_names": ["speed_limit_for_mymappi", "route_calculation_for_mymappi", "Finish", "get_id_for_similar_movies", "select_race_based_on_race_number_for_f1_race_schedule", "v1_textlanguage_for_text_language_by_api_ninjas", "results_for_greyhound_racing_uk", "driver_s_quotes_with_pagination_of_10_quotes_each_page_for_f1_drivers_quotes", "feriados_das_cidades_for_feriados_brasileiros", "get_token_forwarding_transaction_webhook_for_token_forwarding", "ticker_for_joj_finance", "sentence_for_lorem_ipsum_api", "address_for_real_estate_records", "get_podcast_metadata_for_spotify_scraper", "api_nutrition_data_for_edamam_nutrition_analysis"], "api_descs": {"Finish": "No description available.", "address_for_real_estate_records": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index", "api_nutrition_data_for_edamam_nutrition_analysis": "This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, “rice” will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat ‘cooked rice.’ \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data", "driver_s_quotes_with_pagination_of_10_quotes_each_page_for_f1_drivers_quotes": "Gets 10 quotes of the driver depending on which page you input.", "feriados_das_cidades_for_feriados_brasileiros": "Retorna os feriados de certa cidade brasileira. Os parâmetros necessários são: 1. Cidade - Nome da cidade sem acentos ou símbolos especiais, com exceção do hífen (\"-\") que deve ser mantido. 2. Estado - Unidade Federativa correspondente à cidade. Usar a sigla e em letra maíuscula. 3. Ano", "get_id_for_similar_movies": "get the id of your movie", "get_podcast_metadata_for_spotify_scraper": "This endpoint fetches full details of a podcast.", "get_token_forwarding_transaction_webhook_for_token_forwarding": "Get token forwarding transaction webhook", "results_for_greyhound_racing_uk": "Get results races by date", "route_calculation_for_mymappi": "Calculates a route between an origin and a destination, possibly passing through many waypoints. It takes into consideration several configuration options in order to customize the response.", "select_race_based_on_race_number_for_f1_race_schedule": "Returns the details for the race based on the race number for the track in the F1 season.", "sentence_for_lorem_ipsum_api": "Create lorem ipsum by defining the number of sentences", "speed_limit_for_mymappi": "Given a coordinate, it retrieves speed limit info about the nearest road segment, in km/h.", "ticker_for_joj_finance": "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more", "v1_textlanguage_for_text_language_by_api_ninjas": "API Ninjas Text Language API endpoint"}, "aseqs": [{"api_name": "route_calculation_for_mymappi", "api_action": "\nAction: route_calculation_for_mymappi\nAction Input: {\n  \"orig\": \"Madrid\",\n  \"dest\": \"Barcelona\",\n  \"profile\": \"driving-car\",\n  \"apikey\": \"YOUR_API_KEY\",\n  \"steps\": true,\n  \"geometries\": \"geojson\"\n}", "api_reaction": null}, {"api_name": "speed_limit_for_mymappi", "api_action": "\nAction: speed_limit_for_mymappi\nAction Input: {\n  \"lat\": 40.4449904,\n  \"lon\": -3.6148206,\n  \"apikey\": \"YOUR_API_KEY\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "route_calculation_for_mymappi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "speed_limit_for_mymappi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "route_calculation_for_mymappi"}}]}
{"URL": "69401", "query": "I'm planning to attend a tennis tournament. Please provide me with the list of tours and their associated information, as well as the schedule of all tournaments for the ATP tour in the year 2020.", "api_names": ["tournaments_for_tennis_live_data", "tours_for_tennis_live_data", "Finish", "onpage_seo_analyze_for_website_analyze_and_seo_audit_pro_", "email_validator_health_for_email_validator", "facebook_for_check_username", "search_for_region_for_realtor", "get_car_versions_for_infocarsapi", "game_details_for_allscores", "tags_for_mcapi", "devices_getasingledeviceinfofromaccount_for_trumpetbox_cloud", "areas_id_for_zeus_api"], "api_descs": {"Finish": "No description available.", "areas_id_for_zeus_api": "List one area given by id 🔍.", "devices_getasingledeviceinfofromaccount_for_trumpetbox_cloud": " ", "email_validator_health_for_email_validator": "Return the health status of the API. Returns current UTC time.", "facebook_for_check_username": "Check username on Facebook", "game_details_for_allscores": "Get game details.", "get_car_versions_for_infocarsapi": "Get the different versions of a car model", "onpage_seo_analyze_for_website_analyze_and_seo_audit_pro_": "Get Website audit data", "search_for_region_for_realtor": "Get location suggestions by keyword", "tags_for_mcapi": "Retrieve blocks and items tags", "tournaments_for_tennis_live_data": "Lists a schedule of all tournaments for a given `tour_code` and `season_id`", "tours_for_tennis_live_data": "Lists the various tours and associated available to query on the other endpoints"}, "aseqs": [{"api_name": "tours_for_tennis_live_data", "api_action": "\nAction: tours_for_tennis_live_data\nAction Input: {}", "api_reaction": null}, {"api_name": "tournaments_for_tennis_live_data", "api_action": "\nAction: tournaments_for_tennis_live_data\nAction Input: {\n  \"tour_code\": \"ATP\",\n  \"season_id\": 2020\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tournaments_for_tennis_live_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournaments_for_tennis_live_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tours_for_tennis_live_data"}}]}
{"URL": "52915", "query": "I am an avid Formula 1 fan and I want to stay updated on the current season's races. Can you provide me with the races' basic information like race name, date, and location? Also, it would be great if you could give me the constructor standings and the driver standings for the current season.", "api_names": ["driver_standings_for_formula_1_standings", "constructor_standings_for_formula_1_standings", "races_for_formula_1_standings", "Finish", "check_a_url_for_fraudfreeze_phishing_check", "reddit_for_check_username", "by_filter_for_netflix_original_series_top_100_ranked_", "categorias_for_capacitacionangular", "get_half_staff_events_for_given_flag_for_flag_status", "search_for_currents_news", "getzipcodebycounty_for_zillow_base", "pagination_for_remote_jobs_for_remote_jobs_api", "artist_albums_for_spotify_web", "matchbestplayers_for_icehockeyapi", "get_a_product_offers_for_amazon_scrapper_v4", "get_tickers_v2_for_chain49", "getendpointdata_for_endpoint_monitor_tool", "profanity_filter_health_for_profanity_filter_v2", "gethospitalsbyid_for_us_hospitals", "get_major_global_indices_by_technical_for_global_stock_market_api_data"], "api_descs": {"Finish": "No description available.", "artist_albums_for_spotify_web": "Get artist albums", "by_filter_for_netflix_original_series_top_100_ranked_": "by using search filter", "categorias_for_capacitacionangular": "Categorias", "check_a_url_for_fraudfreeze_phishing_check": "Check if a URL is a known phishing or scam attempt", "constructor_standings_for_formula_1_standings": "Get the current season constructor standings.", "driver_standings_for_formula_1_standings": "Will return the current F1 season driver standings.", "get_a_product_offers_for_amazon_scrapper_v4": "GET a product offers", "get_half_staff_events_for_given_flag_for_flag_status": "Get all half-staff events for the provided flag", "get_major_global_indices_by_technical_for_global_stock_market_api_data": "World financial market to get major global Indices with respect to technical", "get_tickers_v2_for_chain49": "Returns currency rate for the specified currency and date. If the currency is not available for that specific timestamp, the next closest rate will be returned. All responses contain an actual rate timestamp.", "getendpointdata_for_endpoint_monitor_tool": "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId.", "gethospitalsbyid_for_us_hospitals": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.", "getzipcodebycounty_for_zillow_base": "Get zip code by county", "matchbestplayers_for_icehockeyapi": "Get the best players for a specific Ice Hockey match using the match id.", "pagination_for_remote_jobs_for_remote_jobs_api": "Paginate over the remote jobs by using the pageId parameter", "profanity_filter_health_for_profanity_filter_v2": "Return the health status of the API. Returns current UTC time.", "races_for_formula_1_standings": "It will return the current season races with basic information.", "reddit_for_check_username": "Check username on Reddit", "search_for_currents_news": "This endpoint allow you to search through ten millions of article over 14,000 large and small news sources and blogs. This includes breaking news, blog articles, forum content. This endpoint is well suited for article discovery and analysis, but can be used to retrieve articles for display, too."}, "aseqs": [{"api_name": "races_for_formula_1_standings", "api_action": "\nAction: races_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "constructor_standings_for_formula_1_standings", "api_action": "\nAction: constructor_standings_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "driver_standings_for_formula_1_standings", "api_action": "\nAction: driver_standings_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}, {"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}, {"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}, {"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}]}
{"URL": "51754", "query": "My company is developing a movie recommendation system and we need a dataset of movies. Can you provide us with the details of the top 100 movies in the 'drama' genre? We would also like to have the trailers for these movies. Thank you in advance!", "api_names": ["search_for_netflix_v2", "Finish", "m_for_barbaraaa", "dlc_list_for_steam_store_api", "clubs_get_header_info_for_transfermarket", "match_play_by_play_for_football_data", "converter_for_currency_exchange_fx", "user_posts_for_tiktok_v4", "get_chapter_by_bookid_for_bible_search", "get_regions_for_geography", "get_all_plants_for_house_plants", "get_airline_alliance_list_for_travel_hacking_tool"], "api_descs": {"Finish": "No description available.", "clubs_get_header_info_for_transfermarket": "Get header info of club", "converter_for_currency_exchange_fx": "This endpoint will return the converted amount in a specified currency.", "dlc_list_for_steam_store_api": "Returns full DLC list for selected item.", "get_airline_alliance_list_for_travel_hacking_tool": "This endpoint returns a list of airline alliances.", "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.", "get_chapter_by_bookid_for_bible_search": "Returns a chapter of a book in the Bible.", "get_regions_for_geography": "Get list of regions in the world", "m_for_barbaraaa": "crypto", "match_play_by_play_for_football_data": "Provides all match drives and plays during the match with their detailed informations.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Football Match List or Fixture endpoints.**", "search_for_netflix_v2": "Search", "user_posts_for_tiktok_v4": "Get User Posts by 'user_id',\nand the endpoint will return 30 posts by cursor."}, "aseqs": [{"api_name": "search_for_netflix_v2", "api_action": "\nAction: search_for_netflix_v2\nAction Input: {\n  \"query\": \"drama\",\n  \"limit_titles\": 100\n}", "api_reaction": null}, {"api_name": "search_for_netflix_v2", "api_action": "\nAction: search_for_netflix_v2\nAction Input: {\n  \"query\": \"genre:drama\",\n  \"limit_titles\": 100\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_netflix_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_netflix_v2", "api_action": "\nAction: search_for_netflix_v2\nAction Input: {\n  \"query\": \"drama\",\n  \"limit_titles\": 100,\n  \"include\": [\n    \"trailer\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_netflix_v2", "api_action": "{\"query\": \"genre:drama\", \"limit_titles\": 100, \"include_trailer\": true}", "api_reaction": null}}]}
{"URL": "81770", "query": "I am planning a road trip and would like to explore different places. Could you provide me with the boundaries of places within a specified radius? The latitude of the center is 40.61, and the longitude is -74.72. I am looking for places within a radius of 10 miles.", "api_names": ["placesbyids_for_mapreflex", "placessearchinradius_for_mapreflex", "Finish", "alerts_for_ai_weather_by_meteosource", "tweet_id_by_url_for_twitter", "getbookbyid_for_feku_json", "getrandomtvshow_for_random_chunk_api", "recent_current_affairs_for_current_affairs_of_india", "year_end_top_artists_for_billboard_api_v2", "24hkhoedep_for_24hkhoedep", "address_reverse_geocoding_for_navitime_geocoding", "live_matches_api_for_fantasy_cricket"], "api_descs": {"24hkhoedep_for_24hkhoedep": "24hkhoedep.com là trang bán lẻ trực tuyến trực thuộc Công Ty TNHH Chăm Sóc Khoẻ Và Đẹp Việt Nam – một công ty chuyên nhập khẩu và phân phối độc quyền cho các hãng dược mỹ phẩm và trang thiết bị y tế từ Châu  u.\n#khoedep #khoedepvietnam #mypham #myphamchauau #duocphamchauau #duocmypham\n#mụn thịt #rối loạn tiêu hóa #ngực chảy xệ\nĐịa chỉ : 40/19 Bàu Cát 2, Phường 14, Quận Tân Bình, TP. HCM, Việt Nam\nHotline 028 - 6296 2262 | 0931320062\nEmail: hbcvn@healthbeautycare.com.vn\nGoogle map https://www.google.com/maps?cid=5320003827413062825 \nWebsite https://24hkhoedep.com/ \nhttps://24hkhoedep.com/mun-thit-la-gi-nguyen-nhan-va-cach-chua-mun-thit-an-toan-hieu-qua/ \nhttps://24hkhoedep.com/roi-loan-tieu-hoa-la-gi/ \nhttps://24hkhoedep.com/nguc-chay-xe-phai-lam-gi-cach-nang-nguc-chay-xe-tai-nha/ \nhttps://www.facebook.com/24hkhoedepHBC \nhttps://twitter.com/24hkhoedep \nhttps://community.opengroup.org/24hkhoedep \nhttps://www.pinterest.com/24hkhoedep/ \nhttps://www.instagram.com/comem_homelab \nhttps://www.beatstars.com/24hkhoedep/about \nhttps://gifyu.com/24hkhoedep\nhttps://folkd.com/user/24hkhoedep\nhttps://www.blogger.com/profile/06161746755325811075 \nhttps://www.youtube.com/channel/UCk-noRhYKMPmPdKN2s1mIlQ \nhttps://soundcloud.com/24hkhoedep\nhttps://www.behance.net/24hkhoedep\nhttps://www.openstreetmap.org/user/24hkhoedep\nhttps://issuu.com/24hkhoedep\nhttps://profile.hatena.ne.jp/hkhoedep/profile\nhttps://ko-fi.com/24hkhoedep\nhttps://gitlab-test.eclipse.org/24hkhoedep \nhttps://www.twitch.tv/24hkhoedep/about\nhttps://dribbble.com/24hkhoedep/about\nhttps://onlyfans.com/khoedep24h \nhttps://myspace.com/24hkhoedep\nhttps://www.goodreads.com/user/show/151102363-24hkhoedep\nhttps://linktr.ee/24hkhoedep\nhttps://www.deviantart.com/24hkhoedep\nhttps://about.me/dep.24hkhoe \nhttps://www.yumpu.com/xx/document/view/66823841/24hkhoedep\nhttps://tawk.to/24hkhoedep \nhttps://gallery.autodesk.com/users/5EB2PJGRPF8CEZU6 \nhttps://sketchfab.com/24hkhoedep \nhttps://li.sten.to/24hkhoedep\nhttps://connect.garmin.com/modern/profile/7b87f84b-717b-463c-9760-9a2f431f11c7", "Finish": "No description available.", "address_reverse_geocoding_for_navitime_geocoding": "逆ジオコーディング\n緯度経度を指定して住所情報を取得します。", "alerts_for_ai_weather_by_meteosource": "**Severe weather alerts** for the USA, Europe, and Canada. **Define your location** using GPS coordinates or `place_id` from `Location` endpoints.", "getbookbyid_for_feku_json": "get Specific Book by ID", "getrandomtvshow_for_random_chunk_api": "Returns random TVshows.", "live_matches_api_for_fantasy_cricket": "A list of cricket matches from around the world that are currently Live. Any issues, queries, api integration, custom plan or to **Create your own Fantasy Sports Application**  contact us at support@techflinch.com", "placesbyids_for_mapreflex": "Get boundaries of given Places (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "placessearchinradius_for_mapreflex": "Get Places boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "recent_current_affairs_for_current_affairs_of_india": "This will provide you with the recent current affairs of India.", "tweet_id_by_url_for_twitter": "Convert tweet url to id for use in \"getTweetById\" endpoint", "year_end_top_artists_for_billboard_api_v2": "Year end Top Artists\nis yearly based. \n\nIf `year` is not supplied, will default to last year."}, "aseqs": [{"api_name": "placessearchinradius_for_mapreflex", "api_action": "\nAction: placessearchinradius_for_mapreflex\nAction Input: {\n  \"latitude\": 40.61,\n  \"longitude\": -74.72,\n  \"radius\": 10\n}", "api_reaction": null}, {"api_name": "placesbyids_for_mapreflex", "api_action": "\nAction: placesbyids_for_mapreflex\nAction Input: {\n  \"ids\": \"3423700,3424965\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "placessearchinradius_for_mapreflex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "placessearchinradius_for_mapreflex", "api_action": "\nAction: placessearchinradius_for_mapreflex\nAction Input: {\n  \"latitude\": 40.61,\n  \"longitude\": -74.72,\n  \"radius\": 10\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "placessearchinradius_for_mapreflex", "api_action": "\nAction: placessearchinradius_for_mapreflex\nAction Input: {\n  \"latitude\": 40.61,\n  \"longitude\": -74.72,\n  \"radius\": 10\n}"}}]}
{"URL": "65946", "query": "I want to read my horoscope for today in Spanish. Can you provide me with the general horoscope information for my sign? Also, tell me the available types for today's horoscope.", "api_names": ["get_period_for_horoscopes_ai", "get_types_for_horoscopes_ai", "Finish", "get_signs_for_horoscopes_ai", "get_horoscope_multilingual_for_horoscopes_ai", "distance_for_geowide", "get_products_in_category_for__demo_project_v12", "peers_for_marketci_analytics", "articles_list_for_morning_star", "matches_for_bet_at_home", "trix_for_qvantana", "get_music_info_for_tiktok_video_feature_summary", "mass_from_to_number_for_unitconversion", "image_search_for_neo_google_search", "lista_de_municipios_por_provincia_for_organizaci_n_territorial_de_espa_a", "get_media_download_link_for_instagram_looter", "historical_weather_for_ai_weather_by_meteosource", "repeat_send_message_for_discord_webhook_api", "cointelegraph_for_cryptocurrency_news", "hotel_slug_convert_for_hotels_com_provider"], "api_descs": {"Finish": "No description available.", "articles_list_for_morning_star": "List latest articles", "cointelegraph_for_cryptocurrency_news": "Get the top latest news from Cointelegraph.", "distance_for_geowide": "This API endpoint takes latitude and longitude coordinates for two points and calculates the geodesic and great circle distances between them. It returns a json object with formatted coordinate information for each point, along with the distances in miles, kilometres, meters, feet, and nautical miles for both geodesic and great circle measurements.", "get_horoscope_multilingual_for_horoscopes_ai": "Return horoscope information by sign, period, type and languages provided.", "get_media_download_link_for_instagram_looter": "Get **Instagram** media download link by **/p/** - **/tv/** - **/reel/**", "get_music_info_for_tiktok_video_feature_summary": "get music info base on id", "get_period_for_horoscopes_ai": "Return available period for Horoscope.", "get_products_in_category_for__demo_project_v12": " ", "get_signs_for_horoscopes_ai": "Return 12 horoscope sign names.", "get_types_for_horoscopes_ai": "Return available types for the particular period.", "historical_weather_for_ai_weather_by_meteosource": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "hotel_slug_convert_for_hotels_com_provider": "Get Hotel ID from Hotel Site slug, (https://hotels.com/ho219115) `ho219115` -> `1105156`", "image_search_for_neo_google_search": "This endpoint is used for image searches", "lista_de_municipios_por_provincia_for_organizaci_n_territorial_de_espa_a": "Lista todas lps municipios  de una provincia", "mass_from_to_number_for_unitconversion": "Mass unit conversions", "matches_for_bet_at_home": "Latest matches by Bet-at-Home", "peers_for_marketci_analytics": "Get List of Company Peers", "repeat_send_message_for_discord_webhook_api": "Enter your webhook URL, enter how many times to send the message, and then specify the message to send. Max 10 messages.", "trix_for_qvantana": "TRIX indicator"}, "aseqs": [{"api_name": "get_period_for_horoscopes_ai", "api_action": "\nAction: get_period_for_horoscopes_ai\nAction Input: {}", "api_reaction": null}, {"api_name": "get_signs_for_horoscopes_ai", "api_action": "\nAction: get_signs_for_horoscopes_ai\nAction Input: {}", "api_reaction": null}, {"api_name": "get_horoscope_multilingual_for_horoscopes_ai", "api_action": "\nAction: get_horoscope_multilingual_for_horoscopes_ai\nAction Input: {\n  \"language\": \"es\",\n  \"period\": \"today\",\n  \"sign\": \"cancer\",\n  \"type\": \"general\"\n}", "api_reaction": null}, {"api_name": "get_types_for_horoscopes_ai", "api_action": "\nAction: get_types_for_horoscopes_ai\nAction Input: {\n  \"period\": \"today\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_horoscope_multilingual_for_horoscopes_ai"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_signs_for_horoscopes_ai"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_period_for_horoscopes_ai"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_types_for_horoscopes_ai"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_horoscope_multilingual_for_horoscopes_ai", "api_action": "\nAction: get_horoscope_multialanguage_for_horoscopes_ai\nAction Input: {\n  \"language\": \"es\",\n  \"period\": \"today\",\n  \"sign\": \"cancer\",\n  \"type\": \"general\"\n}", "api_reaction": null}}]}
{"URL": "70023", "query": "I'm planning to invest in stocks and I need some information. Can you give me the most active stocks in the US? Moreover, I would like to know the current price, charts, and news for the ticker symbol AAPL:NASDAQ. Thank you!", "api_names": ["market_trends_for_joj_finance", "ticker_for_joj_finance", "Finish", "getfunctions_for_powerbi", "api_bestsales_product_productid_saleshistory_for_magic_aliexpress", "youtube_search_for_youtube_v2", "team_stats_by_category_for_serie_a", "get_channel_chatroom_for_kick_com_api_kick_api", "place_properties_for_places", "realtoragentlist_for_realtor_data_api_for_real_estate", "lives_for_soccer_app", "season_wins_leaderboard_mw_2_for_cod_api_2_0", "market_breadth_for_360miq", "search_places_for_spott", "get_equations_for_physical_quantities_constants_and_equations_", "articles_list_for_morning_star", "open_high_low_close_ohlc_price_for_metals_prices_rates_api", "crime_categories_for_data_police_uk"], "api_descs": {"Finish": "No description available.", "api_bestsales_product_productid_saleshistory_for_magic_aliexpress": "This resource returns the historic of sales", "articles_list_for_morning_star": "List latest articles", "crime_categories_for_data_police_uk": "Returns a list of valid categories for a given data set date.", "get_channel_chatroom_for_kick_com_api_kick_api": "Get Channel Chatroom", "get_equations_for_physical_quantities_constants_and_equations_": "This endpoint return back data of equations formatted as JSON", "getfunctions_for_powerbi": "Get Power BI DAX functions.", "lives_for_soccer_app": "All Live matches", "market_breadth_for_360miq": "Stock Market Breadth API for the US and Global Stock Markets", "market_trends_for_joj_finance": "Explore market trends", "open_high_low_close_ohlc_price_for_metals_prices_rates_api": "Allows you to query the API to get the open, high, low, and close price.\nThis endpoint has a limitation of one symbol per request.", "place_properties_for_places": "Returns detailed information about the object. Objects can contain different amount of information.", "realtoragentlist_for_realtor_data_api_for_real_estate": "This endpoint will give you the Realtor Agent List with the data as given below, if you provide the city, state_code and page.\nParameters:\ncity: San Jose or New York\nstate_code: CA or NY\npage: min = 1 and max can be depends on the total number of results. \n\n`{\n    \"agent_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"agent_bio\": \"Mark Lafferty Office: 925-216-6203 nEmail Me Keller Williams Tri-Valley Realtyn2300 First St. #316nLivermore, CA 94550nnExperiencenAs an agent who's an expert in this local area, I bring a wealth of knowledge and expertise about buying and selling real estate here. It's not the same everywhere, so you need someone you can trust for up-to-date information. I am eager to serve you. Here are some of the things I can do for you:nnFind Your Next HomenYou need someone who knows this area inside and out! I can work with you to find the right home at the right price for you, including all the neighborhood amenities that matter - not to mention the essential criteria you have for your ideal homennSell a HomenWhen it's time to move, you need someone who will advertise your home, show to prospective buyers, negotiate the purchase contract, arrange financing, oversee the inspections, handle all necessary paperwork and supervise the closing. I can take care of everything you need, from start to close.nnConsult on Home Selling TacticsnOftentimes buyers don't visualize living in your home the way you do. I can make your home attractive to its ideal audience - which can help you get top dollar. Things like staging the home, making repairs or minor improvements, or even simply painting the walls can be the difference between a home resting on the market and one that's sold fast.n..\",\n    \"agent_languages\": [],\n    \"agent_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_1399152E133D152E0030\"\n        },\n        \"primary\": true,\n        \"type\": \"A\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"01344268\",\n        \"member\": {\n          \"id\": \"FAR_12D2140114631531\"\n        },\n        \"primary\": false,\n        \"type\": \"A\"\n      }\n    ],\n    \"agent_photo\": \"http://p.rdcpix.com/v01/aaa120200-c0o.jpg\",\n    \"agent_rating\": 0,\n    \"agent_recommendations_count\": 0,\n    \"agent_reviews_count\": 0,\n    \"agent_served_areas\": [\n      {\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"agent_slogan\": \"\",\n    \"agent_specializations\": [\n      {\n        \"name\": \"Buyer\"\n      },\n      {\n        \"name\": \"Commercial\"\n      },\n      {\n        \"name\": \"First Time\"\n      },\n      {\n        \"name\": \"Golf\"\n      },\n      {\n        \"name\": \"Investment Properties\"\n      },\n      {\n        \"name\": \"Land\"\n      },\n      {\n        \"name\": \"Ranch\"\n      },\n      {\n        \"name\": \"Seller\"\n      },\n      {\n        \"name\": \"Vinyard\"\n      },\n      {\n        \"name\": \"Winery\"\n      }\n    ],\n    \"agent_team_details\": {\n      \"is_team_member\": false\n    },\n    \"agent_type\": [\n      \"buyer\",\n      \"seller\"\n    ],\n    \"agent_website\": \"http://www.marklafferty.com\",\n    \"for_sale\": {\n      \"count\": 4,\n      \"last_listing_date\": \"2023-01-31T01:52:43Z\",\n      \"max\": 1970000,\n      \"min\": 849950\n    },\n    \"is_realtor\": true,\n    \"joined\": [\n      0,\n      0\n    ],\n    \"license\": [\n      {\n        \"country\": \"US\",\n        \"license_number\": \"01344268\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"marketing_areas\": [\n      {\n        \"city_state\": \"Fremont_CA\",\n        \"name\": \"Fremont\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Sunol_CA\",\n        \"name\": \"Sunol\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Livermore_CA\",\n        \"name\": \"Livermore\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Pleasanton_CA\",\n        \"name\": \"Pleasanton\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Milpitas_CA\",\n        \"name\": \"Milpitas\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"San Jose_CA\",\n        \"name\": \"San Jose\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"East Foothills_CA\",\n        \"name\": \"East Foothills\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Alum Rock_CA\",\n        \"name\": \"Alum Rock\",\n        \"state_code\": \"CA\"\n      },\n      {\n        \"city_state\": \"Mount Hamilton_CA\",\n        \"name\": \"Mount Hamilton\",\n        \"state_code\": \"CA\"\n      }\n    ],\n    \"office_address\": {\n      \"city\": \"PLEASANTON\",\n      \"country\": \"US\",\n      \"line\": \"\",\n      \"line2\": \"\",\n      \"postal_code\": \"94588\",\n      \"state\": \"\",\n      \"state_code\": \"CA\"\n    },\n    \"office_fulfillment_id\": 1424399,\n    \"office_mls\": [\n      {\n        \"abbreviation\": \"FAR_19911A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_19ED1A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_1A021A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_2098221F12D3\"\n        },\n        \"primary\": true,\n        \"type\": \"O\"\n      },\n      {\n        \"abbreviation\": \"FAR_20971A4E\",\n        \"license_number\": \"\",\n        \"member\": {\n          \"id\": \"FAR_153013A10033\"\n        },\n        \"primary\": false,\n        \"type\": \"O\"\n      }\n    ],\n    \"office_name\": \"KELLER WILLIAMS TRI-VALLEY\",\n    \"office_party_id\": \"3145631\",\n    \"office_phone\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 397-4200\",\n        \"type\": \"Office\"\n      }\n    ],\n    \"office_website\": \"WWW.PIERCETHEMARKET.COM\",\n    \"party_id\": 4232697,\n    \"person_name\": \"MARK M. LAFFERTY\",\n    \"phones\": [\n      {\n        \"ext\": \"\",\n        \"number\": \"(925) 216-6203\",\n        \"type\": \"Mobile\"\n      }\n    ],\n    \"position\": \"Agent\",\n    \"profile_url\": \"https://www.realtor.com/realestateagents/MARK-M.-LAFFERTY_PLEASANTON_CA_135850_943184397\",\n    \"profile_url_id\": \"https://www.realtor.com/realestateagents/56b01aefbb954c01006a3382\",\n    \"recently_sold\": {\n      \"count\": 30,\n      \"last_sold_date\": \"2023-01-13\",\n      \"max\": 2850000,\n      \"min\": 630000\n    },\n    \"served_zip_codes\": [\n      \"94539\",\n      \"94550\",\n      \"94551\",\n      \"94566\",\n      \"94586\",\n      \"95035\",\n      \"95036\",\n      \"95101\",\n      \"95103\",\n      \"95106\",\n      \"95108\",\n      \"95109\",\n      \"95110\",\n      \"95111\",\n      \"95112\",\n      \"95113\",\n      \"95115\",\n      \"95116\",\n      \"95121\",\n      \"95122\",\n      \"95127\",\n      \"95131\",\n      \"95132\",\n      \"95133\",\n      \"95134\",\n      \"95135\",\n      \"95138\",\n      \"95140\",\n      \"95148\",\n      \"95150\",\n      \"95151\",\n      \"95152\",\n      \"95153\",\n      \"95154\",\n      \"95155\",\n      \"95156\",\n      \"95157\",\n      \"95158\",\n      \"95159\"\n    ],\n    \"types\": \"agent\",\n    \"video_url\": null\n  }`", "search_places_for_spott": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.", "season_wins_leaderboard_mw_2_for_cod_api_2_0": "Get season wins information for up to 2000 players on the MW 2 leaderboard.", "team_stats_by_category_for_serie_a": "This endpoints allows you to retrieve players statistics accross different categories. Possible categories are: goals, shots, assists, crosses, saves, avgkmtraveled, headshotgoals , offsides,  corners , playingtime, posts-crossbars ,ballpossession]", "ticker_for_joj_finance": "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more", "youtube_search_for_youtube_v2": "This endpoint will a specific number of videos for a specific keyword, note that the maximum is 40 videos per request"}, "aseqs": [{"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"most-active\",\n  \"gl\": \"us\"\n}", "api_reaction": null}, {"api_name": "ticker_for_joj_finance", "api_action": "\nAction: ticker_for_joj_finance\nAction Input: {\n  \"t\": \"AAPL:NASDAQ\",\n  \"hl\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": [{"action": "Fetch the list of most active stocks in the US from financial news APIs."}, {"action": "Retrieve real-time stock price, recent charts, and news related to ticker symbol AAPL:NASDAQ (Apple Inc. listed on NASDAQ) from financial data providers like Yahoo Finance or Google Finance."}]}, {"state": "generated_by_agent", "aseq": {"api_name": "fetch_stock_info", "api_action": "\nAction: fetch_stock_info\nAction Input: {\n  \"ticker\": \"AAPL\",\n  \"market\": \"NASDAQ\",\n  \"details\": [\n    \"price\",\n    \"charts\",\n    \"news\"\n  ]\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_stock_info_for_joj_finance", "api_action": "\nAction: get_stock_info_for_joj_finance\nAction Input: {\n  \"ticker\": \"AAPL\",\n  \"source\": \"NASDAQ\"\n}"}}]}
{"URL": "48751", "query": "I'm a tech-savvy person and I'm interested in the latest phone models from a specific brand. Can you provide me with the list of phone models available for brand ID 237? Additionally, I would like to know the specifications and features of each phone model.", "api_names": ["getphonesbybrandid_for_cellphones", "getphonedetails_for_cellphones", "Finish", "https_mp3downy_com_twitter_video_downloader_api_for_twitter_video_downloader_mp4", "index_for_global_market_indices_data", "leagueeventsbyroundandslug_for_handballapi", "user_info_for_100_success_instagram_api_scalable_robust", "get_individual_news_from_source_for_lgbtq_world_news_live", "rental_settings_for_airdna", "getallrecordssince_for_360_business_tool", "map_image_get_for_navitime_maps", "send_sms_for_smslink"], "api_descs": {"Finish": "No description available.", "get_individual_news_from_source_for_lgbtq_world_news_live": "Get News about LGBTQ+ from a specific news resource.", "getallrecordssince_for_360_business_tool": "Get all data modified since", "getphonedetails_for_cellphones": "Get all phone specifications & photos by phone id, get the phone id from the endpoint GetPhonesByBrandId", "getphonesbybrandid_for_cellphones": "Use this end point to load all phone ids for a specific brand. get the brand id from the endpoint GetBrands", "https_mp3downy_com_twitter_video_downloader_api_for_twitter_video_downloader_mp4": "New twitter video downloader https://mp3downy.com/twitter-video-downloader-API", "index_for_global_market_indices_data": "Get an Index constituents", "leagueeventsbyroundandslug_for_handballapi": "Get matches by round and slug for a handball unique tournament season", "map_image_get_for_navitime_maps": "Get a static map image of the location, range and zoom value specified in the parameter.", "rental_settings_for_airdna": "Returns rental settings.", "send_sms_for_smslink": "Send SMS", "user_info_for_100_success_instagram_api_scalable_robust": "Get data of user profile"}, "aseqs": [{"api_name": "getphonesbybrandid_for_cellphones", "api_action": "\nAction: getphonesbybrandid_for_cellphones\nAction Input: {\n  \"brandid\": 237\n}", "api_reaction": null}, {"api_name": "getphonedetails_for_cellphones", "api_action": "\nAction: getphonedetails_for_cellphones\nAction Input: {\n  \"phoneid\": 1859\n}", "api_reaction": null}, {"api_name": "getphonedetails_for_cellphones", "api_action": "\nAction: getphonedetails_for_cellphones\nAction Input: {\n  \"phoneid\": 1861\n}", "api_reaction": null}, {"api_name": "getphonedetails_for_cellphones", "api_action": "\nAction: getphonedetails_for_cellphones\nAction Input: {\n  \"phoneid\": 1859\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getphonesbybrandid_for_cellphones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getphonedetails_for_cellphones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getallrecordssince_for_360_business_tool"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getallrecordssince_for_360_business_tool\",\n\t\"api_action\": \"\\nAction: getallrecordssince_for_360_business_tool\\nAction Input: {\\n  \\\"since\\\": \\\"last_update\\\"\\}\",\n\t\"api_reaction\": null\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"getallrecordssince_for_360_business_tool\",\n\t\"api_action\": \"\\nAction: getallrecordssince_for_360_business_tool\\nAction Input: {\\n  \\\"source\\\": \\\"getphonesbybrandid_for_cellphones\\\",\\n  \\\"since_id\\\": \\\"latest\\\"\\}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "88713", "query": "My company is developing a data mining tool and we require a rotating proxy service to ensure efficient and reliable data extraction. Is there an API available that can provide a random proxy from the active pool for each request? It should support customization to meet our specific requirements.", "api_names": ["rotating_proxy_api_for_rotating_proxies", "Finish", "measure_distance_for_ghana_api", "get_social_timestamps_1d_for_finance_social_sentiment_for_twitter_and_stocktwits", "type_sustainability_get_product_involvement_for_morning_star", "products_v2_list_for_asos", "get_current_time_within_a_timezone_for_world_clock", "get_media_story_post_reel_other_info_by_shortcode_for_instagram_api_2023", "standard_get_for_scraper_s_proxy", "options_for_meowfacts", "search_ultra_for_streaming_availability", "get_worldwide_hashtags_for_twitter_hashtags"], "api_descs": {"Finish": "No description available.", "get_current_time_within_a_timezone_for_world_clock": "Get the Current Time for EST", "get_media_story_post_reel_other_info_by_shortcode_for_instagram_api_2023": "Get brief media (story, post, reel & other) info by shortcode.", "get_social_timestamps_1d_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped by 1 day intervals", "get_worldwide_hashtags_for_twitter_hashtags": "Returns a list of all recent hashtags worldwide", "measure_distance_for_ghana_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Kumasi to Accra**", "options_for_meowfacts": "This endpoint will list all languages available to the root endpoint.   \n", "products_v2_list_for_asos": "List products, search products with options and filters version 2", "rotating_proxy_api_for_rotating_proxies": "API will respond with a random proxy currently active in the pool upon each request.", "search_ultra_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "standard_get_for_scraper_s_proxy": "Basic proxy GET request", "type_sustainability_get_product_involvement_for_morning_star": "Get product involvement in the Sustainability tab"}, "aseqs": [{"api_name": "rotating_proxy_api_for_rotating_proxies", "api_action": "\nAction: rotating_proxy_api_for_rotating_proxies\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "rotating_proxy_api_for_rotating_proxies"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rotating_proxy_api_for_rotating_proxies"}}]}
{"URL": "2846", "query": "Could you please convert 200 EUR to USD? Additionally, I would like to know the available currencies using the Symbols API and the latest foreign exchange rates.", "api_names": ["convert_for_exchange_rate", "latest_for_exchange_rate", "symbols_for_exchange_rate", "Finish", "get_config_issues_for_iotvas", "get_all_competitions_information_for_match_api", "search_case_for_yardillo", "obama_image_obama_get_for_image", "get_data_by_tag_for_scrapemaster", "get_quotes_by_source_for__quotes_api", "v1_validatephone_for_validate_phone_by_api_ninjas", "get_languages_for_rapid_translate", "product_categorization_for_product_categorization", "blogs_for_spaceflight_news", "youtube_topviews_artist_nationality_for_musicdata_api", "get_food_replacement_options_in_diet_for_bespoke_diet_generator"], "api_descs": {"Finish": "No description available.", "blogs_for_spaceflight_news": " ", "convert_for_exchange_rate": "Currency conversion endpoint, can be used to convert any amount from one currency to another.", "get_all_competitions_information_for_match_api": "Retrieve all competitions information", "get_config_issues_for_iotvas": " ", "get_data_by_tag_for_scrapemaster": "This endpoint will return all data from a specific tag.", "get_food_replacement_options_in_diet_for_bespoke_diet_generator": "Retrieve the list of ingredients that can replace another ingredient in an existing diet.", "get_languages_for_rapid_translate": "Returns supported language  list.", "get_quotes_by_source_for__quotes_api": " ", "latest_for_exchange_rate": "Get the latest foreign exchange rates.", "obama_image_obama_get_for_image": " ", "product_categorization_for_product_categorization": "Return category of product base on the product title.", "search_case_for_yardillo": "Search your cases by fields id and its values", "symbols_for_exchange_rate": "Get the all available currencies.", "v1_validatephone_for_validate_phone_by_api_ninjas": "API Ninjas Validate Phone API endpoint. Returns metadata (including whether it is valid) for a given phone number.", "youtube_topviews_artist_nationality_for_musicdata_api": "Youtube top viewed music video by X artist. (X: nationality of the artist). For example: \"/youtube/topviews/vietnamese\""}, "aseqs": [{"api_name": "latest_for_exchange_rate", "api_action": "\nAction: latest_for_exchange_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "symbols_for_exchange_rate", "api_action": "\nAction: symbols_for_exchange_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "convert_for_exchange_rate", "api_action": "\nAction: convert_for_exchange_rate\nAction Input: {\n  \"is_from\": \"EUR\",\n  \"to\": \"USD\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "convert_for_exchange_rate"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"convert_for_exchange_rate\",\n\t\"api_action\": \"\\nAction: convert_for_exchange_rate\\nAction Input: {\"amount\": 200, \"source_currency\": \"EUR\", \"target_currency\": \"USD\"}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_for_exchange_rate", "api_action": "\nAction: convert_for_exchange_rate\nAction Input: {'from_currency': 'EUR', 'to_currency': 'USD', 'amount': 200}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_for_exchange_rate", "api_action": "\nAction: convert_for_exchange_rate\nAction Input: {\n  \"from\": \"EUR\",\n  \"to\": \"USD\"\n}", "api_reaction": null}}]}
{"URL": "3674", "query": "I need some ideas for my web development project. Could you provide me with a list of web projects from your portfolio? I'm particularly interested in the ones built with modern frameworks.", "api_names": ["api_for_portfolio", "work_for_portfolio", "Finish", "get_by_id_for_manatee_jokes", "latest_for_suivi_colis", "description_for_numerology_api", "matches_for_betcity", "top_paid_mac_apps_for_app_store", "current_conditions_basic_for_easy_weather", "characters_for_jet_set_radio_api", "exchange_by_id_for_crypto_exchanges", "v1_urllookup_for_url_lookup_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "api_for_portfolio": "Auto generated using Swagger Inspector", "characters_for_jet_set_radio_api": "Returns a list of all Characters", "current_conditions_basic_for_easy_weather": "Get (basic) current conditions for the given latitude and longitude.", "description_for_numerology_api": " ", "exchange_by_id_for_crypto_exchanges": "Get Exchange by ID", "get_by_id_for_manatee_jokes": "gets a specific joke by id", "latest_for_suivi_colis": "L'état courant (ie. le dernier état du colis).", "matches_for_betcity": "Latest matches by Betcity", "top_paid_mac_apps_for_app_store": "Get list of the top paid mac apps", "v1_urllookup_for_url_lookup_by_api_ninjas": "API Ninjas URL Lookup API endpoint.", "work_for_portfolio": "sdad"}, "aseqs": [{"api_name": "api_for_portfolio", "api_action": "\nAction: api_for_portfolio\nAction Input: {}", "api_reaction": null}, {"api_name": "work_for_portfolio", "api_action": "\nAction: work_for_portfolio\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "api_for_portfolio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "work_for_portfolio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "work_for_portfolio"}}]}
{"URL": "44180", "query": "I'm planning to place arbitrage bets and low hold bets for the NBA games. Can you fetch the relevant bets for me?", "api_names": ["arbitrage_low_hold_for_sportsbook_odds", "Finish", "last_year_summary_for_os_sports_perform", "video_without_watermark_mp4_mp3_cover_for_tiktok_downloader_download_tiktok_videos_without_watermark", "get_all_hadiths_for_hadiths_api", "get_quotes_by_character_name_for_anime_quotes", "artist_discography_overview_for_spotify_data", "orgcode_cardart_bins_for_test2", "get_multiple_coin_details_for_your_choice_for_crypto_update_live", "drakelikehate_for_memeados"], "api_descs": {"Finish": "No description available.", "arbitrage_low_hold_for_sportsbook_odds": "This returns the bets that have arbitrage and all bets that have low holds. It may be a bit confusing at the moment so if you have questions feel free to ask. Just as a basic overview, all of the lines for each side of the bet are shown in \"outcomes\", in \"alt_low_hold\" it shows the combinations of 2 sites that make up low hold bets from those outcomes, in \"alt_arb\" it likewise shows the combinations that are arbitrage.", "artist_discography_overview_for_spotify_data": "artist-discography-overview", "drakelikehate_for_memeados": "Generate Drake Likes and Hates meme", "get_all_hadiths_for_hadiths_api": "Get all hadiths from the database, by default limit is 10 and page is 1. the limit and page can be altered to suit your taste.", "get_multiple_coin_details_for_your_choice_for_crypto_update_live": "This endpoint gives live detailed information about the current value of multiple cryptocurrencies. Separate coin name using \"_\" underscore symbol.", "get_quotes_by_character_name_for_anime_quotes": "Get quotes by character name", "last_year_summary_for_os_sports_perform": "Get last year summary of the player", "orgcode_cardart_bins_for_test2": "Returns card art URLs by BINs. Different URLs can be defined for each BIN/range of BINs. User authentication is not required.", "video_without_watermark_mp4_mp3_cover_for_tiktok_downloader_download_tiktok_videos_without_watermark": "video without watermark mp4 mp3 and cover only\nwith light weight responses between 300-450ms or lower depending on your server geo loc"}, "aseqs": [{"api_name": "arbitrage_low_hold_for_sportsbook_odds", "api_action": "\nAction: arbitrage_low_hold_for_sportsbook_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "arbitrage_low_hold_for_sportsbook_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "arbitrage_low_hold_for_sportsbook_odds"}}]}
{"URL": "42772", "query": "I'm a Minecraft enthusiast and I want to know if there are any blocklists available for preventing mod reposting. Can you fetch the ublacklist.txt, hosts.txt, plain text, YAML, XML, and JSON versions of the blocklist? It would be great to have them for my personal use.", "api_names": ["hosts_txt_for_stopmodreposts_blocklist", "yaml_for_stopmodreposts_blocklist", "ublacklist_txt_for_stopmodreposts_blocklist", "Finish", "genres_free_for_streaming_availability", "totaliconspremium_for_flaticon", "get_list_of_algorithms_for_ocr", "eff_diceware_for_mad_libs_diceware", "planetaryoverview_for_horostory", "stock_quote_price_for_financial_modeling_prep", "news_list_for_flixster", "search_for_direct_porn_v2", "query_for_hexagon_by_h3index_for_ca_boundaries_io", "profiles_for_bogieapis", "search_countries_by_population_for_geography", "bombed_for_bombsaway", "get_a_list_of_most_watched_profiles_for_is_this_coin_a_scam", "gst_number_search_tool_gstin_verification_online_for_gst_details_api_documentation", "user_media_for_twttrapi", "get_tags_id_b45ea222_6d54_4156_b9e6_5630c4edffe7_for_the_south_asian_express"], "api_descs": {"Finish": "No description available.", "bombed_for_bombsaway": "Sends SMS", "eff_diceware_for_mad_libs_diceware": "**Generate password using plain diceware**\n\nUse query string parameter *nwords* to change number of words in the password\n\nAccepted values for *nwords* parameter: 4 to 7", "genres_free_for_streaming_availability": "Get the id to name mapping of supported genres.", "get_a_list_of_most_watched_profiles_for_is_this_coin_a_scam": "Get a list of the most watched 100 crypto projects on isthiscoinascam.com over the past 7 days. Ordered by most most watched first.", "get_list_of_algorithms_for_ocr": "Service provides alternative algorithms that may be used for OCR.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.", "get_tags_id_b45ea222_6d54_4156_b9e6_5630c4edffe7_for_the_south_asian_express": "Get Single Tag", "gst_number_search_tool_gstin_verification_online_for_gst_details_api_documentation": "GST Number Search Tool & GSTIN Verification Online", "hosts_txt_for_stopmodreposts_blocklist": "Hosts file endpoint", "news_list_for_flixster": "List latest news", "planetaryoverview_for_horostory": "get the Planetary Overview of the day", "profiles_for_bogieapis": "asd", "query_for_hexagon_by_h3index_for_ca_boundaries_io": "Create a h3 hexagon with any h3Index value in the world.", "search_countries_by_population_for_geography": "Search countries by minimum population or maximum population or between minimum and maximum population. Search operation will include both upper and lower limit.", "search_for_direct_porn_v2": "Search videos", "stock_quote_price_for_financial_modeling_prep": "This API returns stock price in real time", "totaliconspremium_for_flaticon": "Method that allows you to get a number stating the full quantity of PREMIUM icons available at Flaticon. The number refreshes periodically according to the content available at flaticon.com.", "ublacklist_txt_for_stopmodreposts_blocklist": "ublacklist.txt endpoint", "user_media_for_twttrapi": "Get user's images", "yaml_for_stopmodreposts_blocklist": "YAML Ain't Markup Language endpoint"}, "aseqs": [{"api_name": "hosts_txt_for_stopmodreposts_blocklist", "api_action": "\nAction: hosts_txt_for_stopmodreposts_blocklist\nAction Input: {}", "api_reaction": null}, {"api_name": "ublacklist_txt_for_stopmodreposts_blocklist", "api_action": "\nAction: ublacklist_txt_for_stopmodreposts_blocklist\nAction Input: {}", "api_reaction": null}, {"api_name": "yaml_for_stopmodreposts_blocklist", "api_action": "\nAction: yaml_for_stopmodreposts_blocklist\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch ublacklist.txt, hosts.txt, plain text, YAML, XML, and JSON versions of the blocklist based on the user query,\n\t\"api_name\": \"ublacklist_txt_for_stopmodreposts_blocklist\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "ublacklist_txt_for_stopmodreposts_blocklist", "api_action": "\nAction: ublacklist_txt_for_stopmodreposts_blocklist\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "yaml_for_stopmodreposts_blocklist", "api_action": "\nAction: yaml_for_stopmodreposts_blocklist\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_media_for_twttrapi", "api_action": "\nAction: user_media_for_twttrapi\nAction Input: {}", "api_reaction": null}}]}
{"URL": "14518", "query": "I need to receive SMS messages in my app. Can you provide me with a list of available numbers? Also, please change the current tag to 'myapp'.", "api_names": ["getnumbers_for_sms_receive", "settag_for_sms_receive", "Finish", "getcurrentbyvaluegrowthmomentum_for_earningsdata", "months_on_book_for_credit_card_prediction", "getlensesbyhashtag_for_snapchat", "rereer_copy_for_nowyapi", "team_stats_for_nba_team_stats", "git_all_world_currencies_prices_for_cion_prices_api", "api_status_for_sagenda_v3", "get_assets_for_alpaca_trading", "get_call_for_email_validation"], "api_descs": {"Finish": "No description available.", "api_status_for_sagenda_v3": "Receive an API status. Responds with HTTP 200 OK and API version in body if functional", "get_assets_for_alpaca_trading": "", "get_call_for_email_validation": "Used to fetch api result using the request id received in responses.", "getcurrentbyvaluegrowthmomentum_for_earningsdata": "Get list of stocks according to current value, growth and momentum information.", "getlensesbyhashtag_for_snapchat": "getLensesByHashtag", "getnumbers_for_sms_receive": "Get a list of available numbers to receive messages from.", "git_all_world_currencies_prices_for_cion_prices_api": "This end point will return back prices of world currencies", "months_on_book_for_credit_card_prediction": "Months_on_book, card category  GET request", "rereer_copy_for_nowyapi": "rererer", "settag_for_sms_receive": "Change the current tag.", "team_stats_for_nba_team_stats": "Provides team stats for the current league year. Optionally, supply a `leagueYear` or `team` parameter to get results for those options."}, "aseqs": [{"api_name": "getnumbers_for_sms_receive", "api_action": "\nAction: getnumbers_for_sms_receive\nAction Input: {}", "api_reaction": null}, {"api_name": "settag_for_sms_receive", "api_action": "\nAction: settag_for_sms_receive\nAction Input: {\n\"tag\": \"myapp\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getnumbers_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnumbers_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnumbers_for_sms_receive"}}]}
{"URL": "56662", "query": "I am currently working on a project that requires searching for visually similar images. Can you help me find visually similar images to the one with the image ID '7TJ6HT2DAUMDFITP4LSIJLWICKWRCQOE'? Additionally, I would like to perform a reverse search by image using the URL 'https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg' and get the top 5 results.", "api_names": ["similar_for_webit_image_search", "reverse_search_by_image_for_webit_image_search", "Finish", "list_revisions_for_rushtranslate", "caiso_for_caiso", "get_all_categories_for_ase_s_quiz_api", "download_translated_document_for_textking_translation", "matches_v2_list_by_league_for_livescore_v2", "tracking_correo_argentino_create_task_service_tracking_code_for_transportistas_de_argentina", "tours_for_tennis_live_data", "gettextrequestparameters_for_groupdocs_translation_cloud", "search_for_creators_for_patreon", "properties_get_facilities_for_booking", "similar_results_nearby_for_zillow_data_v2", "timeframe_for_currencyapi_net", "artist_discography_overview_for_spotify_data", "getfaqs_for_election2020_smartable", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks"], "api_descs": {"Finish": "No description available.", "artist_discography_overview_for_spotify_data": "artist-discography-overview", "caiso_for_caiso": "Gets standard CAISO data", "download_translated_document_for_textking_translation": "Downloads the translated document for a job.", "get_all_categories_for_ase_s_quiz_api": "Get all categories", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks": "Get the current stock by exchange code and stock code.", "getfaqs_for_election2020_smartable": "Get election 2020 FAQs.", "gettextrequestparameters_for_groupdocs_translation_cloud": " ", "list_revisions_for_rushtranslate": "Get a paginated list of your revisions sorted in descending order by requested_at date.", "matches_v2_list_by_league_for_livescore_v2": "List all matches by specific league and table\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png", "properties_get_facilities_for_booking": "Get facilities of property by id", "reverse_search_by_image_for_webit_image_search": "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint.", "search_for_creators_for_patreon": "Search for Creators on Patreon using the `search_query`.", "similar_for_webit_image_search": "Search for Visually Similar images to an image from a previous Search result.", "similar_results_nearby_for_zillow_data_v2": "Similar results nearby", "timeframe_for_currencyapi_net": "Display a currency conversion's historical rates within a given timeframe", "tours_for_tennis_live_data": "Lists the various tours and associated available to query on the other endpoints", "tracking_correo_argentino_create_task_service_tracking_code_for_transportistas_de_argentina": "Create task to get the history.\nThe result of the trace can be obtained after approximately 20-60 seconds by calling the endpoint: /tracking/correo_argentino/result_task/:task_id\n**IMPORTANT: ** The result will only be stored for approx 1 hour."}, "aseqs": [{"api_name": "similar_for_webit_image_search", "api_action": "\nAction: similar_for_webit_image_search\nAction Input: {\n\"image_id\": \"7TJ6HT2DAUMDFITP4LSIJLWICKWRCQOE\",\n\"number\": 5\n}", "api_reaction": null}, {"api_name": "reverse_search_by_image_for_webit_image_search", "api_action": "\nAction: reverse_search_by_image_for_webit_image_search\nAction Input: {\n\"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg\",\n\"number\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "similar_for_webit_image_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "similar_for_webit_image_search", "api_action": "\nAction: similar_for_webit_image_search\nAction Input: {\n\"url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg/260px-Eq_it-na_pizza-margherita_sep2005_sml.jpg\",\n\"number\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "similar_for_webit_image_search", "api_action": "\nAction: similar_for_webit_image_search\nAction Input: {\n\"image_id\": \"8TJ6HT2DAUMDFITP4LSIJLWICKWRCQOE\",\n\"number\": 5\n}", "api_reaction": null}}]}
{"URL": "80436", "query": "I want to protect my privacy while signing up for newsletters and online services. Can you recommend a temporary email address that I can use? I prefer a domain that allows for easy customization of the email address.", "api_names": ["domains_list_for_temporary_email", "get_email_for_temporary_email", "Finish", "state_by_id_for_referential", "album_for_apple_music", "api_soa_domain_for_dns_lookup", "get_country_s_hashtags_for_twitter_hashtags", "create_qr_code_for_flowcode", "articlesbylaunch_for_spaceflight_news", "search_result_for_webtoon_s_query_for_manga_scrapper", "username_to_user_id_for_tiktok_private", "latest_for_suivi_colis", "getlearningresources_for_powerbi", "manufacturing_year_detection_for_tesla_vin_identifier", "stores_list_for_kohls", "statistics_for_yahoo_finance", "fixtures_for_allscores", "search_for_chapters_containing_terms_for_bible_memory_verse_flashcard"], "api_descs": {"Finish": "No description available.", "album_for_apple_music": "Get entire Playlist data of any album from Apple Music.", "api_soa_domain_for_dns_lookup": "Sample request:\r\nGET /api/soa/oxog.net", "articlesbylaunch_for_spaceflight_news": " ", "create_qr_code_for_flowcode": "This API takes an endpoint and return and image for a QR Code in either svg, png, jpg, or pdf format", "domains_list_for_temporary_email": "Get domains list", "fixtures_for_allscores": "Get fixtures for competitors or competitions.", "get_country_s_hashtags_for_twitter_hashtags": "Get hashtags based on country", "get_email_for_temporary_email": "Get Email", "getlearningresources_for_powerbi": "Get Power BI learning resources.", "latest_for_suivi_colis": "L'état courant (ie. le dernier état du colis).", "manufacturing_year_detection_for_tesla_vin_identifier": "Detects the manufacturing year of the respective vehicle.", "search_for_chapters_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns chapters  that contain term(s). Terms are not case sensitive.  Books, operators etc. are NOT CASE SENSITIVE.\n\n**   ONLY SEARCHES 2 BOOKS   (NO RANGE FUNCTION) **", "search_result_for_webtoon_s_query_for_manga_scrapper": "Make request to find webtoons based on the provided query.", "state_by_id_for_referential": "Lookup sub-regions/states/provinces/departments by iso 3166-2 code", "statistics_for_yahoo_finance": "Key Statistics are **important points of financial data that allow you to quickly view and ascertain transaction history**, as well as provide insight into donation trends. These statistics can be found both on the Dashboard as entire database summaries and on an individual basis at the top of each entity record.", "stores_list_for_kohls": "List stores near a provided GEO location", "username_to_user_id_for_tiktok_private": "Get User By Username"}, "aseqs": [{"api_name": "domains_list_for_temporary_email", "api_action": "\nAction: domains_list_for_temporary_email\nAction Input: {}", "api_reaction": null}, {"api_name": "get_email_for_temporary_email", "api_action": "\nAction: get_email_for_temporary_email\nAction Input: {\n  \"email\": \"1secmail.org\"\n}", "api_reaction": null}, {"api_name": "get_email_for_temporary_email", "api_action": "\nAction: get_email_for_temporary_email\nAction Input: {\n  \"email\": \"kzccv.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "domains_list_for_temporary_email"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_email_for_temporary_email\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_email_for_temporary_email", "api_action": "\nAction: get_email_for_temporary_email\nAction Input: {\n  \"email\": \"{domain}\",\n  \"customization\": true\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_email_for_temporary_email", "api_action": "\nAction: get_email_for_temporary_email\nAction Input: {\n  \"email\": \"example.org\"\n}", "api_reaction": null}}]}
{"URL": "58477", "query": "I'm planning a surprise party for my best friend and I want to send out invitations via WhatsApp. Can you help me create a group and generate an invite link for the group? Additionally, I need to set up a webhook to receive RSVPs. Please provide me with the necessary URLs and instructions.", "api_names": ["list_groups_for_whin", "create_a_group_for_whin", "Finish", "group_invite_link_for_whin", "show_url_for_whin", "game_odds_flat_schedule_for_sportsbook_odds", "bycountryname_for_country_information_and_conversion_api", "deprecated_retrieving_offers_for_opensea_data_query", "api_for_business_card_maker", "get_profile_for_instagram_api_media_downloader", "getaccount_for_heywatch_video_encoding", "similar_results_nearby_for_zillow_data_v2", "get_processing_status_of_file_for_phone_verification", "get_basic_free_for_streaming_availability", "youtube_search_for_youtube_v2", "trades_for_cryptocurrency_financial_data", "slot_and_betting_games_for_slot_and_betting_games", "getlensitem_for_snapchat", "nearest_airport_from_postal_code_for_carbonsutra", "get_user_id_for_twitch_api"], "api_descs": {"Finish": "No description available.", "api_for_business_card_maker": "Get version number.", "bycountryname_for_country_information_and_conversion_api": "# Country Information and Conversion API\n\nThe Country Information and Conversion API provides comprehensive country-related data and conversion capabilities, allowing developers to access detailed information about countries worldwide and seamlessly convert between country names and country codes.\n\n## Endpoints\n\n### Get Country Code by Name\n\nRetrieve the country code based on the country name.\n\n- **URL:** `/api/country/code/:name`\n- **Method:** `GET`\n- **Parameters:**\n  - `:name` - The name of the country.\n\nExample Request:\n```\nGET /api/country/code/United States\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n### Get Country Name by Code\n\nRetrieve the country name based on the country code.\n\n- **URL:** `/api/country/name/:code`\n- **Method:** `GET`\n- **Parameters:**\n  - `:code` - The country code.\n\nExample Request:\n```\nGET /api/country/name/US\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n## Additional Country Information\n\nIn addition to the country code and name, both endpoints provide the following additional information about each country:\n\n- `capital`: The capital city of the country.\n- `population`: The population count of the country.\n- `language`: The official language(s) spoken in the country.\n- `currency`: The currency used in the country.\n- `timezone`: The time zone(s) observed in the country.\n\nPlease note that the additional country information is included in the example responses for both endpoints.\n\n## Error Handling\n\nThe API returns appropriate HTTP status codes and error responses to indicate various scenarios:\n\n- `200 OK`: Successful request and response.\n- `400 Bad Request`: Invalid request parameters or missing required parameters.\n- `404 Not Found`: Country not found or invalid country name/code.\n- `500 Internal Server Error`: An unexpected error occurred.\n\nPlease make sure to handle these status codes appropriately in your application.", "create_a_group_for_whin": "This API will create a group, it will add you, and will promote you to Admin of the group. Check this [video](https://youtu.be/wD0DWoua0L4) to learn how to use it.", "deprecated_retrieving_offers_for_opensea_data_query": "Used to fetch active offers for a given asset.", "game_odds_flat_schedule_for_sportsbook_odds": "This is a flat schedule of lines where the keys of \nthe dictionary are tags that fully describe the bet. \nThere is a program in the documentation called \ndecode_hash.py that will break these hashes down into \ndescriptions.\n\nIf the bet has both an over and an under then the \nvf_odds_pct will represent the implied win percent of \nthis bet from the vig free line.\n\nStructure:\n{\n  \"bet_hash Eg. PP^0^(Jaylen Brown)^25.5*O\": {\n    \"Site1 Eg. Fanduel\": {\n      \"site\": \"Fanduel\",\n      \"line\": 25.5,\n      \"dec_odds\": 1.87,\n      \"full_hash\": \"20001x20004@2023-02-09T00_PP^0^(Jaylen Brown)^25.5*O_FanDuel\",\n      \"am_odds\": \"-115\",\n      \"open\": true,\n      \"vf_odds_pct\": 0.50411\n    }\n  }\n}", "get_basic_free_for_streaming_availability": "Get the details of a show via IMDb or TMDb id, including the streaming availability info in the given country.", "get_processing_status_of_file_for_phone_verification": "This endpoint gives you status of file uploaded for verification.", "get_profile_for_instagram_api_media_downloader": "Get all general profile informations", "get_user_id_for_twitch_api": "Returns user id.", "getaccount_for_heywatch_video_encoding": "Get account information", "getlensitem_for_snapchat": "getLensItem", "group_invite_link_for_whin": "the endpoint returns an invite link url for a group you own.", "list_groups_for_whin": "This endpoint returns a list of the groups you created through whin.", "nearest_airport_from_postal_code_for_carbonsutra": "This is an advanced algorithm which takes a postal code and country code as input and returns the nearest airport its lat-long value. It is important to note that the straight line distance between the lat-long of postal code and airport is measured. The returned value is in kilometers. The source of 1.5 million postal code data is taken as it is from https://public.opendatasoft.com/explore/dataset/geonames-postal-code/. For airports, the publicly available database of IATA codes and airport names is used.", "show_url_for_whin": "This endpoint is used to request the webhook routes created on your account. \nLearn how to use it on this [video](https://youtu.be/8WyG_becZXM)", "similar_results_nearby_for_zillow_data_v2": "Similar results nearby", "slot_and_betting_games_for_slot_and_betting_games": "Games for your online casino.", "trades_for_cryptocurrency_financial_data": "Trades endpoint available upon request", "youtube_search_for_youtube_v2": "This endpoint will a specific number of videos for a specific keyword, note that the maximum is 40 videos per request"}, "aseqs": [{"api_name": "create_a_group_for_whin", "api_action": "\nAction: create_a_group_for_whin\nAction Input: {}", "api_reaction": null}, {"api_name": "group_invite_link_for_whin", "api_action": "\nAction: group_invite_link_for_whin\nAction Input: {\n  \"gid\": \"<group_id>\"\n}", "api_reaction": null}, {"api_name": "list_groups_for_whin", "api_action": "\nAction: list_groups_for_whin\nAction Input: {}", "api_reaction": null}, {"api_name": "show_url_for_whin", "api_action": "\nAction: show_url_for_whin\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "group_invite_link_for_whin"}}, {"state": "generated_by_agent", "aseq": {"api_name": "group_invite_link_for_whin"}}, {"state": "generated_by_agent", "aseq": {"api_name": "set_up_webhook_for_rsvps", "api_action": "\nAction: set_up_webhook_for_rsvps\nAction Input: {\n  \"group_id\": \"{group_id}\",\n  \"url\": \"https://yourserver.com/webhook\",\n  \"event_types\": [\n    \"newmember\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "rsvp_webhook_setup_for_whin", "api_action": "\nAction: rsvp_webhook_setup_for_whin\nAction Input: {\n  \"gid\": \"<group_id>\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "create_a_group_for_whin", "api_action": "\nAction: create_a_group_for_whin\nAction Input: {}"}}]}
{"URL": "16299", "query": "I need some hot products from AliExpress. Can you fetch up to 50 hot products related to 'xiaomi'? Set the maximum search price to 5000. Provide me with the product details, including the product title, original price, sale price, and product image URLs.", "api_names": ["Finish", "hot_products_for_aliexpress_true_api", "v1_hashtag_hashtag_id_for_tokapi_mobile_version", "fetchcalls_for_upcall", "category_for_bigbox", "json_rpc_boolean_format_for_test_v2", "autocomplete_results_for_google_search_2", "search_for_currents_news"], "api_descs": {"Finish": "No description available.", "autocomplete_results_for_google_search_2": "Use this API to get suggestions based on the entered keyword.", "category_for_bigbox": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results from Home Depot. The category is specified in the category_id parameter. The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nCategory results are retrieved from the Category results page on Home Depot.", "fetchcalls_for_upcall": "Get all calls", "hot_products_for_aliexpress_true_api": "Get hot products by search value, you can set maximum search price too. You will get up to 50 results.", "json_rpc_boolean_format_for_test_v2": "JSON RPC response format with single field of type boolean", "search_for_currents_news": "This endpoint allow you to search through ten millions of article over 14,000 large and small news sources and blogs. This includes breaking news, blog articles, forum content. This endpoint is well suited for article discovery and analysis, but can be used to retrieve articles for display, too.", "v1_hashtag_hashtag_id_for_tokapi_mobile_version": "Search videos by hashtag ID"}, "aseqs": [{"api_name": "hot_products_for_aliexpress_true_api", "api_action": "\nAction: hot_products_for_aliexpress_true_api\nAction Input: {\n  \"search_value\": \"xiaomi\",\n  \"max_price\": 5000\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "hot_products_for_aliexpress_true_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "hot_products_for_aliexpress_true_api", "api_action": "\nAction: hot_products_for_aliexpress_true_api\nAction Input: {\n  \"search_value\": \"xiaomi\",\n  \"max_price\": 5000,\n  \"product_details\": [\n    \"title\",\n    \"original_price\",\n    \"sale_price\",\n    \"image_url\"\n  ]\n}", "api_reaction": null}}]}
{"URL": "83688", "query": "I'm curious to know on which playlists the artist '2w9zwq3AktTeYYMuhMjju8' has been discovered. Can you provide me with a list of playlists where '2w9zwq3AktTeYYMuhMjju8' appears? Also, please suggest some playlists where I can discover new artists similar to '2w9zwq3AktTeYYMuhMjju8'.", "api_names": ["artist_related_for_spotify", "get_artists_for_spotify", "artist_discovered_on_for_spotify", "Finish", "following_for_instagram_v6", "leagueseasons_for_handballapi", "get_a_list_of_highest_community_rated_profiles_for_is_this_coin_a_scam", "get_coin_price_difference_for_crypto_arbitrage_trading", "autocomplete_for_place_autocomplete", "world_climate_change_for_climate_change_v31", "business_units_search_by_domain_for_unofficial_trust_pilot", "countries_allcontries_for_africa_api_", "search_properties_for_adzuna", "continents_for_geography_v2", "getfileslist_for_aspose_ocr_cloud", "billboard_200_for_billboard_api"], "api_descs": {"Finish": "No description available.", "artist_discovered_on_for_spotify": "Artist discovered on playlists (max 50)", "artist_related_for_spotify": "Artist related", "autocomplete_for_place_autocomplete": "Auto-complete input text, returning matched places", "billboard_200_for_billboard_api": "Provide the BILLBOARD 200 chart information", "business_units_search_by_domain_for_unofficial_trust_pilot": "Search for exact business unit by domain name", "continents_for_geography_v2": "get a list of all the continents filtering by name", "countries_allcontries_for_africa_api_": "Returns a json of all countries in Africa. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\"", "following_for_instagram_v6": "get someone's following", "get_a_list_of_highest_community_rated_profiles_for_is_this_coin_a_scam": "Get a list of the most highly community rated crypto projects on isthiscoinascam.com over the past 7 days. Ordered by highest rating first.", "get_artists_for_spotify": "Get one or more artists", "get_coin_price_difference_for_crypto_arbitrage_trading": "returns the object with all the required data", "getfileslist_for_aspose_ocr_cloud": " ", "leagueseasons_for_handballapi": "Get seasons of a handball unique tournament by ID", "search_properties_for_adzuna": "Search Adzuna properties", "world_climate_change_for_climate_change_v31": "Endpoint showing Climate changes all over the the world"}, "aseqs": [{"api_name": "artist_related_for_spotify", "api_action": "\nAction: artist_related_for_spotify\nAction Input: {\n  \"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "get_artists_for_spotify", "api_action": "\nAction: get_artists_for_spotify\nAction Input: {\n  \"ids\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "artist_discovered_on_for_spotify", "api_action": "\nAction: artist_discovered_on_for_spotify\nAction Input: {\n  \"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "artist_discovered_on_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_discovered_on_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_discovered_on_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_discovered_on_for_spotify"}}]}
{"URL": "76651", "query": "I am a food blogger and I need information about restaurants in London. Can you search for popular restaurants in the city and provide their reviews, photos, and contact details? It would be great if the results are sorted by the newest.", "api_names": ["business_details_for_local_business_data", "business_reviews_for_local_business_data", "Finish", "business_photos_for_local_business_data", "search_for_local_business_data", "get_websites_for_amazon_web_scraping_api", "veiculo_tipo_for_veiculos_api", "all_albums_from_artist_for_halsey_lyric_snippets", "get_predictions_performance_statistics_for_daily_betting_tips", "linecount_linecount_for_poetry_db", "video_and_recommendations_for_fastytapi", "get_live_for_league_of_legends_esports", "get_an_answer_for_english_talking", "get_weather_for_weather_with_ai", "getnewemail10_for_apimail10", "top_100_movies_list_for_imdb_top_100_movies", "git_all_world_currencies_prices_for_cion_prices_api", "texts_for_seeding_data", "artist_albums_for_genius_song_lyrics", "m_t_o_d_aujourd_hui_niamey_niger_for_qwiper_weather"], "api_descs": {"Finish": "No description available.", "all_albums_from_artist_for_halsey_lyric_snippets": "This endpoint retrieves all albums by the specified artist and returns them in the response.\nUse \"Halsey\" for Halsey's music", "artist_albums_for_genius_song_lyrics": "Get artist albums", "business_details_for_local_business_data": "Get full business details including emails and social contacts. Supports batching of up to 20 Business Ids.", "business_photos_for_local_business_data": "Get all business photos.", "business_reviews_for_local_business_data": "Get all business reviews. Supports pagination, query and several sort options.", "get_an_answer_for_english_talking": "Get an answer", "get_live_for_league_of_legends_esports": "In this method you can get all live events score", "get_predictions_performance_statistics_for_daily_betting_tips": "This Endpoint is used to check the predictions performance for a given date.\nThe date format for a given date should be \"dd.MM.yyyy\", else response from API will be empty.", "get_weather_for_weather_with_ai": "Return weather in current, hourly and daily info.", "get_websites_for_amazon_web_scraping_api": "Get the available websites available by country to extract amazon product data.", "getnewemail10_for_apimail10": "get New Email 10", "git_all_world_currencies_prices_for_cion_prices_api": "This end point will return back prices of world currencies", "linecount_linecount_for_poetry_db": "All poems on Poetry DB with a specific number of lines", "m_t_o_d_aujourd_hui_niamey_niger_for_qwiper_weather": "Obtenez la température, les conditions du ciel, les vents, l'humidité, etc. pour la ville de Niamey.", "search_for_local_business_data": "Search local businesses on Google Maps.", "texts_for_seeding_data": "Get 100 texts with it_IT locale and 250 characters length", "top_100_movies_list_for_imdb_top_100_movies": "The Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and IMDb ID of The Top 100 Movies of All Time.", "veiculo_tipo_for_veiculos_api": "Retorna as marcas do tipo selecionado, os tipos disponíveis são \"carros\", \"motos\" e \"caminhoes\".", "video_and_recommendations_for_fastytapi": "Returns details about a video and the first page or recommendations.\nPass the returned `pagination` of this endpoint into the \"Recommended videos (w/ pagination)\" endpoint to obtain the next recommendations."}, "aseqs": [{"api_name": "search_for_local_business_data", "api_action": "\nAction: search_for_local_business_data\nAction Input: {\n  \"query\": \"restaurants in London\",\n  \"limit\": \"5\",\n  \"sort_by\": \"newest\"\n}", "api_reaction": null}, {"api_name": "search_for_local_business_data", "api_action": "\nAction: search_for_local_business_data\nAction Input: {\n  \"query\": \"restaurants in London\",\n  \"limit\": \"5\"\n}", "api_reaction": null}, {"api_name": "business_reviews_for_local_business_data", "api_action": "\nAction: business_reviews_for_local_business_data\nAction Input: {\n  \"business_id\": \"0x487604d166820d93:0x718867b7c5412382\",\n  \"sort_by\": \"newest\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "business_photos_for_local_business_data", "api_action": "\nAction: business_photos_for_local_business_data\nAction Input: {\n  \"business_id\": \"0x487604d166820d93:0x718867b7c5412382\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "business_details_for_local_business_data", "api_action": "\nAction: business_details_for_local_business_data\nAction Input: {\n  \"business_id\": \"0x487604d166820d93:0x718867b7c5412382\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_local_business_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_reviews_for_local_business_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_details_for_local_business_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_details_for_local_business_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_details_for_local_business_data", "api_action": "\nAction: business_details_for_local_business_data\nAction Input: {\n  \"query\": \"restaurants in London\",\n  \"sort_by\": \"newest\",\n  \"limit\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_reviews_for_local_business_data", "api_action": "\nAction: business_reviews_for_local_business_data\nAction Input: {\n  \"business_id\": \"0x487604d166820d93:0x718867b7c5412382\",\n  \"sort_by\": \"newest\",\n  \"limit\": 5\n}", "api_reaction": null}}]}
{"URL": "35128", "query": "I'm planning a family trip to Ikea and I want to make sure we find everything we need. Can you suggest some Ikea products based on a keyword search for 'kitchen appliances'? I would like to see the product details, including the price and availability in my country. It would also be great if you could provide me with the filters available for this keyword.", "api_names": ["Finish", "search_by_keyword_filters_for_ikea_api", "search_by_keyword_for_ikea_api", "get_all_bitcoin_news_for_bitcoin_news", "get_animes_for_animes", "tunein_for_tunein", "tokens_all_for_defi_watch", "detail_info_for_suggestuse", "leaguemedia_for_esportapi", "ro_car_averages_for_car_averages", "exchange_information_for_crypto_markets", "trader_positions_for_bybit_leaderboard"], "api_descs": {"Finish": "No description available.", "detail_info_for_suggestuse": "Get detail info by application name", "exchange_information_for_crypto_markets": "Current exchange trading rules and symbol information", "get_all_bitcoin_news_for_bitcoin_news": "This endpoint will return back all the news across all the major bitcoin news site from all over the world", "get_animes_for_animes": "This endpoint allows for the retrieval of data about anime. The query parameters include q (the search query), limit (the number of results per page), offset (the number of results to skip), ascending (sort order), order (sort order), `media_type `(anime type), studio (studio name), source (source material), status (`currently_airing `or `finished_airing`), genre, season, `year_equal `(equal to a year specified), `year_less `(less than a year specified), `year_greater `(greater than a year specified), language, and nsfw (not safe for work content).", "leaguemedia_for_esportapi": "Get the media related to a specific E-Sports league by providing the tournament ID.", "ro_car_averages_for_car_averages": "RO Car averages", "search_by_keyword_filters_for_ikea_api": "Complimentary to the \"Search By Keyword\" endpoint. Obtain a list of filters available based on a keyword.", "search_by_keyword_for_ikea_api": "Obtain a list of Ikea products information based on a keyword.", "tokens_all_for_defi_watch": "Get data about all tokens and filter them", "trader_positions_for_bybit_leaderboard": "Returns all trader positions.", "tunein_for_tunein": "Radio"}, "aseqs": [{"api_name": "search_by_keyword_for_ikea_api", "api_action": "\nAction: search_by_keyword_for_ikea_api\nAction Input: {\n  \"countrycode\": \"us\",\n  \"keyword\": \"kitchen appliances\"\n}", "api_reaction": null}, {"api_name": "search_by_keyword_filters_for_ikea_api", "api_action": "\nAction: search_by_keyword_filters_for_ikea_api\nAction Input: {\n  \"countrycode\": \"us\",\n  \"keyword\": \"kitchen appliances\"\n}", "api_reaction": null}, {"api_name": "search_by_keyword_filters_for_ikea_api", "api_action": "\nAction: search_by_keyword_filters_for_ikea_api\nAction Input: {\n  \"countrycode\": \"us\",\n  \"keyword\": \"kitchen appliances\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to find Ikea products related to 'kitchen appliances' and also get the filters available for this keyword, then suggest one product with its details such as price and availability in my country.\n\t\"api_name\": \"search_by_keyword_filters_for_ikea_api\"\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_by_keyword_filters_for_ikea_api\",\n\t\"api_action\": \"{\\\"countrycode\\\": \\\"us\\\", \\\"keyword\\\": \\\"kitchen appliances\\\"}\",\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_by_keyword_for_ikea_api\",\n\t\"api_action\": \"\\nAction: search_by_keyword_for_ikea_api\\nAction Input: {\\n  \\\"countrycode\\\": \\\"us\\\",\\n  \\\"keyword\\\": \\\"kitchen appliances\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_keyword_for_ikea_api"}}]}
{"URL": "58713", "query": "I'm working on a project that requires scraping data from multiple websites. Can you recommend the best API calls and parameters to use for efficient and reliable scraping? Also, I need to specify URL query parameters for some websites. Please guide me on how to do this.", "api_names": ["Finish", "javascript_rendered_page_get_for_scraper_s_proxy", "tor_get_for_scraper_s_proxy", "verify_the_captcha_for_captcha", "business_reviews_for_local_business_data", "get_pnr_status_v3_for_irctc", "youtube_global_countryid_timeframe_for_musicdata_api", "getdiscusage_for_groupdocs_metadata_cloud", "list_of_countries_with_income_level_for_world_bank_gdp", "seasonal_statistics_quarter_analysis_for_basketball_data", "compare_route_names_for_compare_route_names", "qr_code_for_qr_code_generator_v5", "searchvideos_for_vimeo", "property_details_for_zillow", "get_zipcode_by_city_for_redfin_base"], "api_descs": {"Finish": "No description available.", "business_reviews_for_local_business_data": "Get all business reviews. Supports pagination, query and several sort options.", "compare_route_names_for_compare_route_names": "Calculates the coefficient of how similar are 2 strings containing the name (and type) of the route. With a value of 0.9 and higher, it is possible to do auto-matching,at 0.2-0.9 - visual matching.", "get_pnr_status_v3_for_irctc": "-", "get_zipcode_by_city_for_redfin_base": "Get ZipCode by City", "getdiscusage_for_groupdocs_metadata_cloud": " ", "javascript_rendered_page_get_for_scraper_s_proxy": "Render html using a real browser. Useful for if content is loaded asynchronously or generated dynamically in the browser. JavaScript rendering is usually required to scrape websites that use React, Angular or Vue. For websites that do not need javascript rendering use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability.", "list_of_countries_with_income_level_for_world_bank_gdp": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/V2/incomeLevel/LIC/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json", "property_details_for_zillow": "Property details", "qr_code_for_qr_code_generator_v5": "Qr Generator", "searchvideos_for_vimeo": "Search for videos.", "seasonal_statistics_quarter_analysis_for_basketball_data": "Provides the seasonal quater analysis and statistics of the team in the tournament.", "tor_get_for_scraper_s_proxy": "Send request to the [Tor network](//www.torproject.org/). Use [Standard GET](//rapidapi.com/scapers-proxy-scapers-proxy-default/api/scrapers-proxy2) instead for better performance and reliability for normal websites. Only recommended to access websites that are only accessible from the Tor network (e.g. websites with a \".onion\" top level domain), since this enpoint is slower than other endpoints.", "verify_the_captcha_for_captcha": "Verify the captcha", "youtube_global_countryid_timeframe_for_musicdata_api": "Weekly/Daily country Youtube chart for a specific country. Read external docs for more information"}, "aseqs": [{"api_name": "javascript_rendered_page_get_for_scraper_s_proxy", "api_action": "\nAction: javascript_rendered_page_get_for_scraper_s_proxy\nAction Input: {\n  \"url\": \"https://example.com\"\n}", "api_reaction": null}, {"api_name": "tor_get_for_scraper_s_proxy", "api_action": "\nAction: tor_get_for_scraper_s_proxy\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "javascript_rendered_page_get_for_scraper_s_proxy"}}, {"state": "generated_by_agent", "aseq": {"Thought": "The user is looking for guidelines on efficient and reliable scraping, including specifying URL query parameters. They have already attempted to use the javascript_rendered_page_get_for_scraper_s_proxy API. Now, I need to find other relevant APIs and guide the user on how to specify query parameters.", "api_name": "javascript_rendered_page_get_for_scraper_s_proxy"}}, {"state": "json_error", "aseq": "{\n\t\"Thought\": Based on the history actions and observations, we have already used `javascript_rendered_page_get_for_scraper_s_proxy` for JavaScript-rendered content and `tor_get_for_scraper_s_proxy` to access websites that are only accessible from the Tor network. To answer the question about URL query parameters, I will demonstrate how to add query parameters using a different API call.\n\t\"api_name\": \"youtube_global_countryid_timeframe_for_musicdata_api\"\n}"}]}
{"URL": "2115", "query": "My company is hosting a sports tournament and we need to analyze the odds for the upcoming matches. Can you fetch the latest odds from Admiralbet for all the matches? It would be helpful if the odds are provided in a structured format such as a spreadsheet.", "api_names": ["odds_for_admiralbet", "Finish", "spac_summary_for_spachero_spac_database", "currencies_for_geodb_cities", "getcode_relatedproperties_for_flow_study", "best_stories_for_yc_hacker_news_official", "get_draw_dates_2023_for_4d_results", "latest_contracts_for_symbol_for_futures", "get_tenant_for_mongodb_wix", "feriados_dos_estados_for_feriados_brasileiros", "search_by_query_for_musiclinkssapi", "2_getavailablecurrencies_for_nowpayments"], "api_descs": {"2_getavailablecurrencies_for_nowpayments": "This is a method for obtaining information about the cryptocurrencies available for payments. This depends on the cryptocurrency you choose for your particular store.\nOptional parameters:\n- fixed_rate(optional) - boolean, can be **true** or **false**. Returns avaliable currencies with minimum and maximum amount of the exchange.", "Finish": "No description available.", "best_stories_for_yc_hacker_news_official": "Returns up to the current best 500 stories.", "currencies_for_geodb_cities": "Get currencies, filtering by optional criteria. If no criteria are set, you will get back all known currencies.", "feriados_dos_estados_for_feriados_brasileiros": "Retorna os feriados de certo estado. Os parâmetros necessários são: 1. Estado - Sigla da Unidade Federativa em letra maíuscula. 2. Ano", "get_draw_dates_2023_for_4d_results": "List of draw dates in 2023.", "get_tenant_for_mongodb_wix": "Use this call to get the Tenant name, This name will be used in the configuration section on wix. e.g. {\"Yauthtenantname\":\"<TENANT_NAME>\"}", "getcode_relatedproperties_for_flow_study": " ", "latest_contracts_for_symbol_for_futures": "This endpoint returns each of the latest futures contracts for a given symbol for the next twelve months.\n\nUse the optional *<month>* parameter to return the latest contract for a given month.", "odds_for_admiralbet": "Latest Odds by Admiralbet.", "search_by_query_for_musiclinkssapi": "Given a **query** and **type** of element, this returns details about *tracks*, *albums* and *artists*.", "spac_summary_for_spachero_spac_database": "Retrieve SPAC summary including important dates, status and target names."}, "aseqs": [{"api_name": "odds_for_admiralbet", "api_action": "\nAction: odds_for_admiralbet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_admiralbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_admiralbet"}}]}
{"URL": "74029", "query": "I need to determine the best algorithm for image classification. Can you give me a list of available algorithms and their respective versions?", "api_names": ["Finish", "get_list_of_algorithms_for_general_classification", "get_version_for_general_classification", "token_id_for_uniswap_v2_api", "whatsmyip_for_networking", "get_balance_for_webit_blockchain", "tickets_for_each_day_of_month_for_flight_data_v2", "company_jobs_for_indeed", "get_company_competition_for_stoxx", "findsubdistrict_for_india_pincode_api", "endpoint_a_for_putreq", "getstatus_for_maytapi_whatsapp", "ad_for_constructioness", "korean_baby_boy_names_for_korean_baby_name_ranking", "api_v2_activities_before_2014_07_24t18_00_00z_after_2014_07_14t18_00_00z_for_2peak_com_dynamic_training_plans_for_cycling_running_and_triathlon", "get_tickers_v2_for_chain49", "match_details_for_dota_2_steam_web", "market_get_sectors_for_schwab"], "api_descs": {"Finish": "No description available.", "ad_for_constructioness": "ad", "api_v2_activities_before_2014_07_24t18_00_00z_after_2014_07_14t18_00_00z_for_2peak_com_dynamic_training_plans_for_cycling_running_and_triathlon": "Get Activities", "company_jobs_for_indeed": "Search jobs by company.", "endpoint_a_for_putreq": "end", "findsubdistrict_for_india_pincode_api": "findsubdistrict", "get_balance_for_webit_blockchain": "Get balance from any wallet on different blockchains, including Ethereum, Polygon, Binance, Solana mainnets, including Ropsten, Rinkey, Goerly, Kovan, Mumbai testnets.", "get_company_competition_for_stoxx": "Retrieve a company's known competitors", "get_list_of_algorithms_for_general_classification": "Service provides alternative algorithms that may be used for image classification.\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.", "get_tickers_v2_for_chain49": "Returns currency rate for the specified currency and date. If the currency is not available for that specific timestamp, the next closest rate will be returned. All responses contain an actual rate timestamp.", "get_version_for_general_classification": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getstatus_for_maytapi_whatsapp": "Returns the status of the current session.", "korean_baby_boy_names_for_korean_baby_name_ranking": "This endpoint will return the most popular Korean baby name in Korea.\nIt will show you the name, rank and total count.", "market_get_sectors_for_schwab": "Get brief information about all sectors", "match_details_for_dota_2_steam_web": "To retrieve the specific details of a match, use this API:", "tickets_for_each_day_of_month_for_flight_data_v2": "Returns the cheapest non-stop, one-stop, and two-stop flights for the selected route for each day of the selected month", "token_id_for_uniswap_v2_api": "Return the info of the Token by the address", "whatsmyip_for_networking": "This will fetch your public IP."}, "aseqs": [{"api_name": "get_list_of_algorithms_for_general_classification", "api_action": "\nAction: get_list_of_algorithms_for_general_classification\nAction Input: {}", "api_reaction": null}, {"api_name": "get_version_for_general_classification", "api_action": "\nAction: get_version_for_general_classification\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_algorithms_for_general_classification"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_algorithms_for_general_classification"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_algorithms_for_general_classification"}}]}
{"URL": "78288", "query": "I'm a professional bettor looking for a reliable source of odds. Can you provide me with the latest odds from Betano? It would be helpful if the response includes information about the teams, match timings, and the corresponding odds. Additionally, can you provide insights or predictions based on the historical performance of the teams?", "api_names": ["matches_for_betano", "odds_for_betano", "Finish", "singleoffer_for_lbc_shark", "usa_latest_odds_for_surebets_2", "api_ns_domain_for_dns_lookup", "user_event_timeline_for_dailycred", "getsupportedfileformats_for_groupdocs_classification_cloud", "list_of_sports_for_pinnacle_odds", "by_postal_code_for_ambee_air_quality", "get_all_chemical_elements_for_chemical_elements", "artist_featuring_for_spotify_data", "searchcities_for_world_cities_and_countries", "get_genres_for_50k_radio_stations", "get_all_match_play_today_by_competitions_for_match_api", "info_for_unit_converter", "store_for_rainforest", "taobao_search_by_keyword_for_taobao_tmall_product_detail"], "api_descs": {"Finish": "No description available.", "api_ns_domain_for_dns_lookup": "Sample request:\r\nGET /api/ns/oxog.net", "artist_featuring_for_spotify_data": "artist-featuring", "by_postal_code_for_ambee_air_quality": "Check air quality for your postal code", "get_all_chemical_elements_for_chemical_elements": "This endpoint will return back data of all Chemical Elements of the periodic table", "get_all_match_play_today_by_competitions_for_match_api": "Retrieve all matches info (teams, time,result) that are scheduled to be played today by competition id.", "get_genres_for_50k_radio_stations": "Get genre list", "getsupportedfileformats_for_groupdocs_classification_cloud": " ", "info_for_unit_converter": "info", "list_of_sports_for_pinnacle_odds": "Get a list of sports", "matches_for_betano": "Latest matches by Betano.", "odds_for_betano": "Latest Odds by Betano.", "searchcities_for_world_cities_and_countries": "API to search cities based on the matching search keyword passed in url param.\ne.g. \n`/v1/locations/cities/new y`: This will return all the matching cities whose name starts from `new y`.\nYou can also filter the cities or narrow down results for specific country by passing its 2 letter country code in query param which can be found from our searchCountry API.", "singleoffer_for_lbc_shark": "get single offer by ID", "store_for_rainforest": "The Store parameters are applicable when making a request with type=store to retrieve Brand Store results for a Brand Store. The Brand Store can be specified either by the url parameter, or by a combination of the store_id and amazon_domain parameters. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.", "taobao_search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword", "usa_latest_odds_for_surebets_2": "Latest odds for matches in the USA - updated every 6 hours", "user_event_timeline_for_dailycred": ""}, "aseqs": [{"api_name": "odds_for_betano", "api_action": "\nAction: odds_for_betano\nAction Input: {}", "api_reaction": null}, {"api_name": "matches_for_betano", "api_action": "\nAction: matches_for_betano\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_betano", "api_action": "\nAction: odds_for_betano\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_betano", "api_action": "\nAction: odds_for_betano\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_betano"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betano"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betano"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betano"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betano"}}]}
{"URL": "42117", "query": "I am looking for a specific mobile device with the name 'iphone 14'. Can you help me search for this device and provide me with its details, including the name, image, and description? It would be great to have multiple search results in case there are similar devices.", "api_names": ["Finish", "search_devices_for_mobile_phones", "search_restaurants_by_town_for_wyre_data", "facilities_lookup_for_uganda_api", "get_videos_by_channel_for_follow_youtube_channel", "getplatformlist_for_evosis_s_game_database", "locales_for_skyscanner_api", "tsv1_for_odam", "bd_upazila_for_bd", "generate_for_tiktok_hashtag_generator", "getdocumenttypessince_for_360_business_tool", "stock_institution_ownership_for_yahoo_finance_v2"], "api_descs": {"Finish": "No description available.", "bd_upazila_for_bd": " ", "facilities_lookup_for_uganda_api": "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "generate_for_tiktok_hashtag_generator": "to Generate the best Tiktok Hashtags", "get_videos_by_channel_for_follow_youtube_channel": "This endpoint will return the last 30 videos. Just specify the channel id (cid).", "getdocumenttypessince_for_360_business_tool": "Get document types modified since", "getplatformlist_for_evosis_s_game_database": "Returns the id and names of the platforms as Json.", "locales_for_skyscanner_api": "You can use the `/locales` endpoint to retrieve the locales that we support to translate your content. The names of the locales returned are in the native language associated with the locale.", "search_devices_for_mobile_phones": "Params\n\n1. query", "search_restaurants_by_town_for_wyre_data": "Find all Restaurants within a Town/City", "stock_institution_ownership_for_yahoo_finance_v2": "Get stock institution ownership.", "tsv1_for_odam": "Get all attribute metadata for all subsets of a dataset\n"}, "aseqs": [{"api_name": "search_devices_for_mobile_phones", "api_action": "\nAction: search_devices_for_mobile_phones\nAction Input: {\n  \"query\": \"iphone 14\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_devices_for_mobile_phones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_devices_for_mobile_phones"}}]}
{"URL": "45927", "query": "I am planning a vacation with my friends and we would like to rent a villa in Bali. Could you help us search for available rentals for a two-week stay from 2023-09-01 to 2023-09-15? Sort the results by price and provide the currency conversion rate for USD.", "api_names": ["rental_search_for_tripadvisor", "Finish", "teams_get_players_for_unofficial_cricbuzz", "getgamedetailpro_for_evosis_s_game_database", "get_questions_by_category_for_ase_s_quiz_api", "leagues_ep1_for_football_test", "angle_from_to_number_for_unitconversion", "matches_for_chillybets", "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io", "jfjfked_for_futboleta"], "api_descs": {"Finish": "No description available.", "angle_from_to_number_for_unitconversion": "Angle unit conversions", "get_questions_by_category_for_ase_s_quiz_api": "Get questions by category", "getgamedetailpro_for_evosis_s_game_database": "Returns the game's information as Json.", "jfjfked_for_futboleta": "sadscdv", "leagues_ep1_for_football_test": "leagues description", "matches_for_chillybets": "Latest Matches for Chillybets", "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io": "Query for Postal Unit Boundary by H3Index\n\nIf  a Postal Unit code exists within this hexagon a boundary is returned.\nadjusting the resolution(0-16) increases the hexagon area.\n\nhttps://eng.uber.com/", "rental_search_for_tripadvisor": "-", "teams_get_players_for_unofficial_cricbuzz": "Get players by team"}, "aseqs": [{"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"arrival\": \"2023-09-01\",\n  \"departure\": \"2023-09-15\",\n  \"geoid\": \"294226\"\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"arrival\": \"2023-09-01\",\n  \"departure\": \"2023-09-15\",\n  \"geoid\": \"294226\",\n  \"sortorder\": \"price\"\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"arrival\": \"2023-09-01\",\n  \"departure\": \"2023-09-15\",\n  \"geoid\": \"294226\",\n  \"sortorder\": \"PRICELOW\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "rental_search_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io"}}]}
{"URL": "53765", "query": "I am planning a trip to South Korea next month and I need to know the scheduled departing flights growth for that week. Can you provide me with the weekly growth data for South Korea? Additionally, I would like to know the scheduled departing flights level for Spain during the same week.", "api_names": ["south_korea_scheduled_flights_level_for_global_flight_data", "spain_scheduled_flights_growth_for_global_flight_data", "south_korea_scheduled_flights_growth_for_global_flight_data", "spain_scheduled_flights_level_for_global_flight_data", "Finish", "api_information_for_movie_showtimes", "v1_hashtag_posts_hashtag_id_for_tokapi_mobile_version", "qrcode_for_qrcode_generator_base64", "equity_intraday_for_quotient", "getting_full_details_by_url_for_tiktok_full_video_info", "read_expenses_for_expense_data", "check_usernames_on_all_platforms_for_check_username", "sports_list_for_global_data", "vat_validation_api_endpoint_for_vat_validation_and_tax_rates", "test_for_wraws_load_test", "player_data_for_os_sports_perform", "getvideofromuser_for_vimeo", "islamiblockchain_islamicoin_main_cs_txt_for_islamicoin", "user_endpoint_for_asd", "get_team_rushing_data_for_nfl_team_stats_v2"], "api_descs": {"Finish": "No description available.", "api_information_for_movie_showtimes": "Get the sessions for the specified movie (IMDb id)", "check_usernames_on_all_platforms_for_check_username": "Check if a username is available on all platforms at once!\ntrue if available, false if not", "equity_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "get_team_rushing_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' rushingdata. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.", "getting_full_details_by_url_for_tiktok_full_video_info": "Url must be encoded", "getvideofromuser_for_vimeo": "Get all videos credited to a user (both uploaded and appears).", "islamiblockchain_islamicoin_main_cs_txt_for_islamicoin": "ISLAMICOIN Circulation Supply", "player_data_for_os_sports_perform": "Get player data by player ID", "qrcode_for_qrcode_generator_base64": "qrcode to genrate base64 qrcode image", "read_expenses_for_expense_data": "<br /><br />\n<b>Authentication:</b> not required", "south_korea_scheduled_flights_growth_for_global_flight_data": "Get weekly South Korea scheduled departing flights growth.", "south_korea_scheduled_flights_level_for_global_flight_data": "Get weekly South Korea scheduled departing flights level.", "spain_scheduled_flights_growth_for_global_flight_data": "Get weekly Spain scheduled departing flights growth.", "spain_scheduled_flights_level_for_global_flight_data": "Get weekly Spain scheduled departing flights level.", "sports_list_for_global_data": "Provides the list of the sports which are supported in the global coverage.", "test_for_wraws_load_test": "Test", "user_endpoint_for_asd": "user", "v1_hashtag_posts_hashtag_id_for_tokapi_mobile_version": "Search videos by hashtag ID", "vat_validation_api_endpoint_for_vat_validation_and_tax_rates": "The Validate Endpoint takes a VAT number in the request, checks if that number is valid, and if it is valid, returns addition details about the company associated with that VAT number."}, "aseqs": [{"api_name": "south_korea_scheduled_flights_growth_for_global_flight_data", "api_action": "\nAction: south_korea_scheduled_flights_growth_for_global_flight_data\nAction Input: {}", "api_reaction": null}, {"api_name": "spain_scheduled_flights_level_for_global_flight_data", "api_action": "\nAction: spain_scheduled_flights_level_for_global_flight_data\nAction Input: {}", "api_reaction": null}, {"api_name": "south_korea_scheduled_flights_level_for_global_flight_data", "api_action": "\nAction: south_korea_scheduled_flights_level_for_global_flight_data\nAction Input: {}", "api_reaction": null}, {"api_name": "spain_scheduled_flights_growth_for_global_flight_data", "api_action": "\nAction: spain_scheduled_flights_growth_for_global_flight_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "spain_scheduled_flights_level_for_global_flight_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "south_korea_scheduled_flights_level_for_global_flight_data", "api_action": "", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "south_korea_scheduled_flights_growth_for_global_flight_data", "api_action": "\nAction: south_korea_scheduled_flights_growth_for_global_flight_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "south_korea_scheduled_flights_growth_for_global_flight_data", "api_action": "\nAction: south_korea_scheduled_flights_growth_for_global_flight_data\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "south_korea_scheduled_flights_growth_for_global_flight_data"}}]}
{"URL": "14786", "query": "Please provide me with the profile information of the user 'nasa'. Additionally, fetch the pin information for the pin with shortcode '39Nfim2'.", "api_names": ["get_profile_info_for_pinterest_scraper", "get_pin_info_for_pinterest_scraper", "Finish", "get_stream_title_for_gwyo_twitch", "cards_by_class_for_hearthstone", "getcollectionvalues_for_the_cancer_imaging_archive", "me_for__onboarding_project_v3", "getmostrecentday_for_trinidad_covid_19_statistics", "webhooklist_for_13", "get_nfl_games_and_stats_for_a_single_player_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "statroll_for_diceforge", "gold_standard_sports_for_gold_standard_sports", "getlanguagepairs_for_groupdocs_translation_cloud", "getfunctions_for_powerbi", "chains_for_defi_data", "to_get_a_list_all_the_supported_languages_by_this_api_endpoint_for_simple_elegant_translation_service", "capture_for_giflayer", "mailboxvalidator_api_for_mailboxvalidator"], "api_descs": {"Finish": "No description available.", "capture_for_giflayer": "Main API endpoint used to generate GIFs", "cards_by_class_for_hearthstone": "Returns all the cards of a class. Example values: Mage, Paladin.", "chains_for_defi_data": "Get current TVL of all chains", "get_nfl_games_and_stats_for_a_single_player_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call will grab a map of all of the games a player has played this season.   \nplayerID is a required parameter.\nYou can also use gameID if you want to only pull back a specific game. \n\nExample:\nCorrect way to get the stats for Justin Fields for his game against Detroit on 11/13/2022 would be this:\n/getNFLGamesForPlayer?playerID=4362887&gameID=20221113_DET@CHI\n\nBut if you wanted to get all of his games this season, you'd make this call\n/getNFLGamesForPlayer?playerID=4362887\n\nThis call will not work without playerID.  If you want stats for all players during a game, then use the getNFLBoxScore call with that specific gameID.\n\nYou can choose which season you pull games from with parameter: season .   \nNFL Season that runs from 2022-2023 is season 2022.  And so on.\nIf you call without season parameter then it will pull back current season's games.\n\nYou can limit the amount of games returned with parameter: numberOfGames.   For example: &numberOfGames=5 will return the last 5 games this player has an entry for.", "get_pin_info_for_pinterest_scraper": "Get Pin Info", "get_profile_info_for_pinterest_scraper": "Get Profile Info", "get_stream_title_for_gwyo_twitch": "Get Stream Title (using username or id)\n( return an empty JSON object if not currently LIVE )", "getcollectionvalues_for_the_cancer_imaging_archive": "Set of all TCIA collection names", "getfunctions_for_powerbi": "Get Power BI DAX functions.", "getlanguagepairs_for_groupdocs_translation_cloud": " ", "getmostrecentday_for_trinidad_covid_19_statistics": "This endpoint fetches the most recent Trinidad & Tobago Covid 19 statistics.  It returns data for that specific day alone.", "gold_standard_sports_for_gold_standard_sports": "For sports feeds", "mailboxvalidator_api_for_mailboxvalidator": "Email validation API", "me_for__onboarding_project_v3": " ", "statroll_for_diceforge": "Rolls 4d6 for generating character stats, dropping the lowest die result from the total, and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nmodifier (integer): An integer representing the modifier to apply to the total of the stat roll.", "to_get_a_list_all_the_supported_languages_by_this_api_endpoint_for_simple_elegant_translation_service": "To get a list all the supported languages, execute this API, https://translate.pregnya.com/getSupportedLanguages", "webhooklist_for_13": "Retrieves all webhooks"}, "aseqs": [{"api_name": "get_profile_info_for_pinterest_scraper", "api_action": "\nAction: get_profile_info_for_pinterest_scraper\nAction Input: {\n  \"username\": \"nasa\"\n}", "api_reaction": null}, {"api_name": "get_pin_info_for_pinterest_scraper", "api_action": "\nAction: get_pin_info_for_pinterest_scraper\nAction Input: {\n  \"shortcode\": \"39Nfim2\"\n}", "api_reaction": null}, {"api_name": "get_pin_info_for_pinterest_scraper", "api_action": "\nAction: get_pin_info_for_pinterest_scraper\nAction Input: {\n  \"shortcode\": \"39Nfim2\"\n}", "api_reaction": null}, {"api_name": "get_pin_info_for_pinterest_scraper", "api_action": "\nAction: get_pin_info_for_pinterest_scraper\nAction Input: {\n  \"shortcode\": \"39Nfim2\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_profile_info_for_pinterest_scraper", "playerID": "nasa"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_pin_info_for_pinterest_scraper", "api_action": "\nAction: get_pin_info_for_pinterest_scraper\nAction Input: {\n  \"shortcode\": \"39Nfim2\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profile_info_for_pinterest_scraper", "api_action": "\nAction: get_profile_info_for_pinterest_scraper\nAction Input: {\n  \"username\": \"nasa\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profile_info_for_pinterest_scraper", "api_action": "\nAction: get_profile_info_for_pinterest_scraper\nAction Input: {\n  \"username\": \"nasa\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profile_info_for_pinterest_scraper", "api_action": "\nAction: get_profile_info_for_pinterest_scraper\nAction Input: {\n  \"username\": \"nasa\"\n}", "api_reaction": null}}]}
{"URL": "30115", "query": "I'm a photographer and I want to capture the sunset at a specific location. Can you give me the time of sunset for the next five days? Also, provide me with the local weather conditions at that time, including the temperature, wind speed, and weather description.", "api_names": ["Finish", "astronomy_api_for_world_weather_online_api", "local_weather_api_for_world_weather_online_api", "search_api_for_world_weather_online_api", "country_by_iso_code_for_referential", "getthelistofcountriesregistered_for_sandbox_ecombr_com_04_orders", "message_send_for_sendsms", "business_units_get_web_links_for_unofficial_trust_pilot", "competition_image_for_soccerway_feed", "getbycategory_for_house_plants", "properties_get_description_for_booking", "products_for_interceptor_sample", "news_list_flash_for_webull", "getarchive_for_punto_61", "depuertoplata_for_depuertoplata", "get_response_for_fast_recaptcha_v2_solver", "teamimage_for_mmaapi", "provider3_live_list_for_football_betting_odds", "full_grid_search_for_local_rank_tracker", "get_symbols_for_ohlc_history_forex"], "api_descs": {"Finish": "No description available.", "astronomy_api_for_world_weather_online_api": "The Astronomy and Lunar API method allows you to access astronomy information for any given date.", "business_units_get_web_links_for_unofficial_trust_pilot": "Get web link of a business unit", "competition_image_for_soccerway_feed": "Get competition image", "country_by_iso_code_for_referential": "Get country by 2 letter iso code localized to a given language", "depuertoplata_for_depuertoplata": "web", "full_grid_search_for_local_rank_tracker": "Make a full grid search and get the ranking of a specific business in every coordinate point in the grid. The grid cells / entires in the results are ordered left-to-right then top-down.", "get_response_for_fast_recaptcha_v2_solver": "Get response based on the input received from create request\nOnly numeric values are accepted.", "get_symbols_for_ohlc_history_forex": "Get all available forex pairs", "getarchive_for_punto_61": "getarchive", "getbycategory_for_house_plants": "Get all item based on a category", "getthelistofcountriesregistered_for_sandbox_ecombr_com_04_orders": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html", "local_weather_api_for_world_weather_online_api": "The Local Weather REST API (also called City and Town Weather API) method allows you to access current weather conditions, the next 14 days of accurate and reliable weather forecast, Air Quality Data, Weather Alerts and Monthly Climate Averages for over 4 million cities and towns worldwide. The Local Weather API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon, wind speed, etc.", "message_send_for_sendsms": "", "news_list_flash_for_webull": "List flash 27/4 news", "products_for_interceptor_sample": "list of products", "properties_get_description_for_booking": "Get description of property by id", "provider3_live_list_for_football_betting_odds": "get all matches", "search_api_for_world_weather_online_api": "The Location search API method takes a query value and returns information about the location, including area name, country, latitude/longitude, population, and a URL for the weather information.", "teamimage_for_mmaapi": "Get player image in PNG format for a specific team."}, "aseqs": [{"api_name": "search_api_for_world_weather_online_api", "api_action": "\nAction: search_api_for_world_weather_online_api\nAction Input: {\n  \"q\": \"specific location\"\n}", "api_reaction": null}, {"api_name": "astronomy_api_for_world_weather_online_api", "api_action": "\nAction: astronomy_api_for_world_weather_online_api\nAction Input: {\n  \"q\": \"Molepos Location\",\n  \"date\": \"2022-09-26\"\n}", "api_reaction": null}, {"api_name": "astronomy_api_for_world_weather_online_api", "api_action": "\nAction: astronomy_api_for_world_weather_online_api\nAction Input: {\n  \"q\": \"Molepos Location\",\n  \"date\": \"2022-09-27\"\n}", "api_reaction": null}, {"api_name": "local_weather_api_for_world_weather_online_api", "api_action": "\nAction: local_weather_api_for_world_weather_online_api\nAction Input: {\n  \"q\": \"Molepos Location\",\n  \"num_of_days\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "local_weather_api_for_world_weather_online_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "astronomy_api_for_world_weather_online_api", "api_action": "{\"q\": \"specific location\",\"endDay\": 5,\"day\": 0}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "local_weather_api_for_world_weather_online_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_api_for_world_weather_online_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "astronomy_api_for_world_weather_online_api", "api_action": "\nAction: astronomy_api_for_world_weather_online_api\nAction Input: {\n  \"q\": \"Molepos Location\",\n  \"date\": \"2022-09-28\"\n}", "api_reaction": null}}]}
{"URL": "55671", "query": "I want to track the leads generated from my website campaign. Can you provide me with the lead information for the campaign with ID 'lead123' on my website 'example.com'?", "api_names": ["get_campaign_from_url_for_fomoapi", "Finish", "get_alerts_for_septa", "matchdetails_for_americanfootballapi", "api_v2_estimated_exchange_amount_for_changenow_crypto_exchange", "qr_code_for_qr_code_generator_v5", "predictions_list_for_canadian_gas_prices", "tournamentdetailsbyid_for_sportifyapi", "fantasy_5_recent_for_ca_lottery", "get_timetable_for_flixbus_v2", "categorieslist_onlyforthoseservicekeythatincludethisoption_for_afterbanks_psd2_payments_and_bank_reader", "comunicado_2_for_colegiosantaana"], "api_descs": {"Finish": "No description available.", "api_v2_estimated_exchange_amount_for_changenow_crypto_exchange": "This API endpoint returns estimated exchange amount for the exchange and some additional fields. Accepts to and from currencies, currencies' networks, exchange flow, and RateID.\n\n<h3>Successful response:</h3>\n\n<h5>Successful response fields</h5>\n\n<table>\n\t<tr>\n        <td><b>Name</b></td>\n        <td><b>Type</b></td>\n        <td><b>Description</b></td>\n    </tr>\n    <tr>\n        <td><b><i>fromCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>fromNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to exchange</td>\n    </tr>\n    <tr>\n        <td><b><i>toCurrency</i></b></td>\n        <td><i>String</i></td>\n        <td>Ticker of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>toNetwork</i></b></td>\n        <td><i>String</i></td>\n        <td>Network of the currency you want to receive</td>\n    </tr>\n    <tr>\n        <td><b><i>flow</i></b></td>\n        <td><i>String</i></td>\n        <td>Type of exchange flow. Enum: [\"standard\", \"fixed-rate\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>type</i></b></td>\n        <td><i>String</i></td>\n        <td>Direction of exchange flow. Use \"direct\" value to set amount for currencyFrom and get amount of currencyTo. Use \"reverse\" value to set amount for currencyTo and get amount of currencyFrom. Enum: [\"direct\", \"reverse\"]</td>\n    </tr>\n    <tr>\n        <td><b><i>rateId</i></b></td>\n        <td><i>String || null</i></td>\n        <td>RateId is needed for fixed-rate flow. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Current estimated amount would be valid until time in field \"validUntil\"</td>\n    </tr>\n    <tr>\n        <td><b><i>validUntil</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Date and time before estimated amount would be freezed in case of using rateId. If you set param \"useRateId\" to true, you could use returned field \"rateId\" in next method for creating transaction to freeze estimated amount that you got in this method. Estimated amount would be valid until this date and time</td>\n    </tr>\n    <tr>\n        <td><b><i>transactionSpeedForecast</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Dash-separated min and max estimated time in minutes</td>\n    </tr>\n    <tr>\n        <td><b><i>warningMessage</i></b></td>\n        <td><i>String || null</i></td>\n        <td>Some warnings like warnings that transactions on this network take longer or that the currency has moved to another network</td>\n    </tr>\n    <tr>\n        <td><b><i>fromAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of fromCurrency (in case when type=reverse it is an estimated value)</td>\n    </tr>\n    <tr>\n        <td><b><i>toAmount</i></b></td>\n        <td><i>Number</i></td>\n        <td>Exchange amount of toCurrency (in case when type=direct it is an estimated value)</td>\n    </tr>\n</table>\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>", "categorieslist_onlyforthoseservicekeythatincludethisoption_for_afterbanks_psd2_payments_and_bank_reader": "Returns a list with all the categories retrieved by Afterbanks own categorizer.", "comunicado_2_for_colegiosantaana": "Comunicados del alumno 2", "fantasy_5_recent_for_ca_lottery": "Most recent draw for Fantasy 5", "get_alerts_for_septa": "", "get_campaign_from_url_for_fomoapi": "Get lead from Specific website  Campaign", "get_timetable_for_flixbus_v2": "Returns timetable for a given station id and date", "matchdetails_for_americanfootballapi": "Get detailed information for a specific American Football match by providing the match ID.", "predictions_list_for_canadian_gas_prices": "Returns valid cities that can be used for the `/city-prediction` endpoint.", "qr_code_for_qr_code_generator_v5": "Qr Generator", "tournamentdetailsbyid_for_sportifyapi": "Tournament Details By ID"}, "aseqs": [{"api_name": "get_campaign_from_url_for_fomoapi", "api_action": "\nAction: get_campaign_from_url_for_fomoapi\nAction Input: {\n  \"is_id\": \"lead123\",\n  \"url\": \"example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_campaign_from_url_for_fomoapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_campaign_from_url_for_fomoapi", "api_action": "\nAction: get_campaign_from_url_for_fomoapi\nAction Input: {\n  \"id\": \"lead123\",\n  \"url\": \"example.com\"\n}", "api_reaction": null}}]}
{"URL": "81395", "query": "I need to add 4 working hours to my start date of December 31, 2022, in the United States. Can you also provide the end date and time after adding the working hours? Thank you.", "api_names": ["1_3_add_working_hours_for_working_days", "Finish", "upc_api_for_dietagram", "world_coordinate_to_income_for_world_coordinates_to_income", "objectexists_for_groupdocs_watermark_cloud", "related_videos_for_youtube_v3_alternative", "getchapter_for_holy_bible", "comment_info_for_youtube_v3_v2", "stock_get_stock_earnings_data_for_yh_finance_v2", "united_states_parks_mobility_for_covid_19_economic_impact", "items_by_tag_for_steam_store_api", "all_songs_from_a_specified_artist_and_specified_album_for_halsey_lyric_snippets"], "api_descs": {"1_3_add_working_hours_for_working_days": "Add an amount of working time to a given start date/time", "Finish": "No description available.", "all_songs_from_a_specified_artist_and_specified_album_for_halsey_lyric_snippets": "This endpoint retrieves all songs from the specified album by the specified artist and returns them in the response.", "comment_info_for_youtube_v3_v2": "Get comments info.", "getchapter_for_holy_bible": "", "items_by_tag_for_steam_store_api": "👉 This is one of the most important endpoints. It returns games and other products based on the provided **TagID** . You can find the **TagID** by calling the **Tag list** endpoint from the **Tags** section. You can also specify which tab you're interested in by setting the appropriate **tab** value.", "objectexists_for_groupdocs_watermark_cloud": " ", "related_videos_for_youtube_v3_alternative": "Get the videos related to the provided video.", "stock_get_stock_earnings_data_for_yh_finance_v2": "return stock earning data", "united_states_parks_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at parks.", "upc_api_for_dietagram": "Find food info by UPC (barcode)", "world_coordinate_to_income_for_world_coordinates_to_income": "Granular city per capita income"}, "aseqs": [{"api_name": "1_3_add_working_hours_for_working_days", "api_action": "\nAction: 1_3_add_working_hours_for_working_days\nAction Input: {\n  \"start_date\": \"2022-12-31\",\n  \"country_code\": \"US\",\n  \"start_time\": \"00:00\",\n  \"increment_time\": \"4:00\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "1_3_add_working_hours_for_working_days"}}, {"state": "generated_by_agent", "aseq": {"api_name": "1_3_add_working_hours_for_working_days"}}]}
{"URL": "5136", "query": "My friend is a blogger and wants to analyze the popularity of articles on the dev.to website. Can you help him retrieve the year's top articles, the month's top articles, and the latest articles? He needs the titles and URLs of these articles for his analysis. Please guide him on using the appropriate API functions.", "api_names": ["get_all_the_year_s_top_articles_for_dev_to_api", "get_the_month_s_top_articles_for_dev_to_api", "get_all_the_latest_articles_for_dev_to_api", "Finish", "projected_pga_rankings_for_golf_leaderboard_data", "hashtag_feed_video_posts_for_tiktok_data", "get_tenant_for_mongodb_wix", "ping_for_quizapp", "past_1_week_for_the_sandbox_sand", "availability_for_kayuloweather", "pair_id_for_uniswap_v2_api", "fetch_birthday_groups_for_zigatext_global_bulk_sms_otp", "keyword_search_for_axesso_kaufland_data_service", "is_whatsapp_for_business_for_whatsapp_scraper", "get_specific_nba_franchise_data_for_1977_2022_nba_team_rosters_and_schedules", "get_result_for_face_animer", "get_generation_status_for_midjourney", "addressdetails_for_woosmap", "validate_a_token_for_token2go", "storageexists_for_aspose_diagram_cloud"], "api_descs": {"Finish": "No description available.", "addressdetails_for_woosmap": "Provides details of an address autocomplete suggestion (using the suggestion’s `public_id`).\n", "availability_for_kayuloweather": "Determine the data sets available for the specified location.", "fetch_birthday_groups_for_zigatext_global_bulk_sms_otp": "Fetch Birthday Groups", "get_all_the_latest_articles_for_dev_to_api": "It returns all the latest articles present in the dev.to website.", "get_all_the_year_s_top_articles_for_dev_to_api": "It return year's top articles from dev.to website", "get_generation_status_for_midjourney": "Get status of the previously posted job.\n\n- outcome - if Failure, then it comes from MJ, like censorship.\n- estimated_time - in seconds. based on previous generation.\n- percent - available when actual generation started", "get_result_for_face_animer": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.", "get_specific_nba_franchise_data_for_1977_2022_nba_team_rosters_and_schedules": "Grabs all NBA Data for a Franchise from 1977(if applicable)-2022", "get_tenant_for_mongodb_wix": "Use this call to get the Tenant name, This name will be used in the configuration section on wix. e.g. {\"Yauthtenantname\":\"<TENANT_NAME>\"}", "get_the_month_s_top_articles_for_dev_to_api": "It returns the month's top articles from dev.to website.", "hashtag_feed_video_posts_for_tiktok_data": "Get hashtag feed\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "is_whatsapp_for_business_for_whatsapp_scraper": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.", "keyword_search_for_axesso_kaufland_data_service": "Retrieve keyword search results.", "pair_id_for_uniswap_v2_api": "Return the info of the Par by the address", "past_1_week_for_the_sandbox_sand": "Get price data for past 1 week.\n\n~hourly data points.", "ping_for_quizapp": "Ping for Health Check", "projected_pga_rankings_for_golf_leaderboard_data": "This endpoint allows you to see the projected PGA rankings throughout a PGA event", "storageexists_for_aspose_diagram_cloud": " ", "validate_a_token_for_token2go": "Submit a token (t=token) or a link (t=link) id in order to check if  it is a valid one. To be a valid token it must have a valid signature and not expired."}, "aseqs": [{"api_name": "get_all_the_year_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_year_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_the_month_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_the_month_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_the_latest_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_latest_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_year_s_top_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_month_s_top_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_latest_articles_for_dev_to_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_the_year_s_top_articles_for_dev_to_api", "api_action": "\nAction: get_all_the_year_s_top_articles_for_dev_to_api\nAction Input: {}", "api_reaction": null}}]}
{"URL": "57394", "query": "What are the statistics of the wheel results for the past 8 hours? Furthermore, fetch the outcome of the latest spin and the history of the last 6 spins.", "api_names": ["Finish", "latest_outcome_for_immersiverouletteapi", "history_for_immersiverouletteapi", "statistics_for_immersiverouletteapi", "get_profile_by_slug_for_is_this_coin_a_scam", "get_colors_for_cigars", "search_by_location_for_ev_charge_finder", "balance_for_locationiq", "warzone_for_warzone_2", "analyze_v2_for_seo_checker", "movies_for_simapi_movies", "game_odds_by_site_schedule_for_sportsbook_odds", "category_for_vod_app", "wrt_transformer_for_walnut_entity", "commentthreads_for_youtube_v3_v3", "get_district_capital_by_name_for_district_capitals_in_ghana"], "api_descs": {"Finish": "No description available.", "analyze_v2_for_seo_checker": "analyze page speed with more results information", "balance_for_locationiq": "The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC).", "category_for_vod_app": "Category", "commentthreads_for_youtube_v3_v3": "Returns a list of comment threads that match the API request parameters.", "game_odds_by_site_schedule_for_sportsbook_odds": "This is a schedule that is separated by site. Upper and lower case doesn't matter as long as it has the correct letters for the request (DraftKings is same as draftkings)\n\nThe Sites:\n1. Fanduel\n2. DraftKings\n3. Caesars\n4. WynnBet\n5. PointsBet\n6. BetMGM\n7. SuperBook\n8. FoxBet\n9. Kambis    (SugarHouse/BetRivers/Barstool)", "get_colors_for_cigars": "Get Enum of Cigar colors", "get_district_capital_by_name_for_district_capitals_in_ghana": "This endpoint gets a district capital by district name", "get_profile_by_slug_for_is_this_coin_a_scam": "Get a specific coin profile by slug", "history_for_immersiverouletteapi": "the last 20 spins histories includes all details about the game", "latest_outcome_for_immersiverouletteapi": "Last Spin data", "movies_for_simapi_movies": "", "search_by_location_for_ev_charge_finder": "Search for EV charging stations near a specific location specified as a free-form location query (e.g. *San Francisco, CA, USA*).", "statistics_for_immersiverouletteapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect", "warzone_for_warzone_2": "Activision ID :", "wrt_transformer_for_walnut_entity": "Get the text input and returns the entities identified."}, "aseqs": [{"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_outcome_for_immersiverouletteapi", "api_action": "\nAction: latest_outcome_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_immersiverouletteapi", "api_action": "\nAction: history_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "statistics_for_immersiverouletteapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_outcome_for_immersiverouletteapi", "api_action": "Action: latest_outcome_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_immersiverouletteapi", "api_action": "\nAction: history_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "statistics_for_immersiverouletteapi", "api_action": "\nAction: statistics_for_immersiverouletteapi\nAction Input: {}", "api_reaction": null}}]}
{"URL": "68830", "query": "I am a researcher and I'm studying customer reviews on Amazon. Can you help me fetch all the product reviews for a specific ASIN, such as B07ZPKN6YR? Additionally, I would like to see the product details, such as the product information table data, for each product. Finally, can you fetch the product offers for each product, showing only the offers with a specific product condition, such as new or used like new?", "api_names": ["product_offers_for_real_time_amazon_data", "product_details_experimental_for_real_time_amazon_data", "product_reviews_for_real_time_amazon_data", "Finish", "random_joke_for_joke1", "getplaylist_for_youtube_search_v3", "gettopsportmenu_for_sportapi", "get_language_for_countries", "search_exact_phrase_api_for_complete_study_bible", "fixtures_for_golf_leaderboard_data", "search_for_uk_postcode", "prediction_for_timeseries_prediction_model", "getorderbyid_for_swagger_petstore", "all_strains_ascending_for_weed_strain", "in_radius_for_dargan", "get_attributes_for_musclewiki"], "api_descs": {"Finish": "No description available.", "all_strains_ascending_for_weed_strain": "List of all strains ordered by name in ascending order.", "fixtures_for_golf_leaderboard_data": "Lists tournament fixtures for a given tour_id and season_id. You'll need to query the \"Tours\" endpoint to get the correct tour_id and season_id you're looking for.", "get_attributes_for_musclewiki": "Get Attributes you can use to filter exercises", "get_language_for_countries": "This gets language data on a country. Use ISO2 for country_code.", "getorderbyid_for_swagger_petstore": "For valid response try integer IDs with value >= 1 and <= 10.         Other values will generated exceptions", "getplaylist_for_youtube_search_v3": "The \"getPlaylistDetails\" endpoint provides detailed information and metadata about a specific playlist on YouTube.", "gettopsportmenu_for_sportapi": "GetTopSportMenu Api Data", "in_radius_for_dargan": "Find all postcodes within a certain radius (in KM) of a postcode", "prediction_for_timeseries_prediction_model": "predict next period with dates and values", "product_details_experimental_for_real_time_amazon_data": "Get product details. Currently returns the Product Information table data, as seen on specific product pages on Amazon.com (e.g. https://www.amazon.com/dp/B09TBLBFXC).", "product_offers_for_real_time_amazon_data": "Get top 10 offers of a specific product on Amazon by its asin, the first offer in the list is the pinned offer returned by the **Search** endpoint. Supports filtering by product condition.", "product_reviews_for_real_time_amazon_data": "Get and paginate through all product reviews on Amazon.", "random_joke_for_joke1": "Returns a random joke", "search_exact_phrase_api_for_complete_study_bible": "Searches the KJV for the exact phrase supplied", "search_for_uk_postcode": "Find an street or post code using one of more key words"}, "aseqs": [{"api_name": "product_reviews_for_real_time_amazon_data", "api_action": "\nAction: product_reviews_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B07ZPKN6YR\"\n}", "api_reaction": null}, {"api_name": "product_details_experimental_for_real_time_amazon_data", "api_action": "\nAction: product_details_experimental_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B07ZPKN6YR\"\n}", "api_reaction": null}, {"api_name": "product_offers_for_real_time_amazon_data", "api_action": "\nAction: product_offers_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B07ZPKN6YR\",\n  \"product_condition\": \"new,used_like_new\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "product_details_experimental_for_real_time_amazon_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_details_experimental_for_real_time_amazon_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_offers_for_real_time_amazon_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_reviews_for_real_time_amazon_data", "api_action": "\nAction: product_reviews_for_real_time_amazon_data\nAction Input: {\n  \"asin\": \"B07ZPKN6YR\"\n}", "api_reaction": null}}]}
{"URL": "4080", "query": "I am developing a language learning app and I need to incorporate a translation feature. Can you provide me with an API that can translate any input text from English to French? Additionally, I would like to detect the language of the text if it is not specified. It would be great if the API could also provide a list of supported languages for translation.", "api_names": ["languages_for_translate_all_languages", "translate_for_translate_all_languages", "Finish", "channel_details_for_youtube_v3_v2", "verse_range_api_for_complete_study_bible", "tweet_retweeters_for_twitter_v4", "hotspot_for_indonesia_hotspot_and_fire_location_data", "getsupportedfileformats_for_groupdocs_editor_cloud", "something_for_test_v14", "get_subdivisions_by_abbreviation_for_us_states", "solve_for_sudoku_all_purpose_pro", "weather_statistics_for_ai_weather_by_meteosource"], "api_descs": {"Finish": "No description available.", "channel_details_for_youtube_v3_v2": "Get channel details", "get_subdivisions_by_abbreviation_for_us_states": "Retrieve all state subdivisions for the provided state abbreviation.", "getsupportedfileformats_for_groupdocs_editor_cloud": " ", "hotspot_for_indonesia_hotspot_and_fire_location_data": "Indonesian Realtime Hotspot", "languages_for_translate_all_languages": "Returns a list of supported languages for translation.", "solve_for_sudoku_all_purpose_pro": "Solve every Sudoku. Simply make an API call with missing digits and receive the answer back immediately. Choose from different output formats to display your Sudoku perfectly.", "something_for_test_v14": "ad", "translate_for_translate_all_languages": "Translates input text, returning translated text", "tweet_retweeters_for_twitter_v4": "Tweet Retweeters", "verse_range_api_for_complete_study_bible": "Use when you only want to fetch a passage subset, not the entire chapter.", "weather_statistics_for_ai_weather_by_meteosource": "Get average weather: **long-term normals** for a given place for the next 30 days. Define your location using GPS coordinates or `place_id` from `Location endpoints`."}, "aseqs": [{"api_name": "languages_for_translate_all_languages", "api_action": "\nAction: languages_for_translate_all_languages\nAction Input: {}", "api_reaction": null}, {"api_name": "translate_for_translate_all_languages", "api_action": "\nAction: translate_for_translate_all_languages\nAction Input: {\n  \"text\": \"Hello\",\n  \"tolang\": \"fr\"\n}", "api_reaction": null}, {"api_name": "languages_for_translate_all_languages", "api_action": "\nAction: languages_for_translate_all_languages\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use the translate_for_translate_all_languages API to get translated text from English to French and also detect the source language if not specified. Then, I will use the languages_for_translate_all_languages API to get the list of supported languages for translation.\n\t\"api_name\": \"translate_for_translate_all_languages\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_all_languages"}}, {"state": "generated_by_agent", "aseq": {"api_name": "languages_for_translate_all_languages"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_all_languages"}}]}
{"URL": "26460", "query": "I'm planning a romantic date night and I need to find nearby cinemas and fine dining restaurants within a 500-meter radius of our location. Can you help me find a list of these facilities along with their location coordinates, type, and distance from our location? It would be useful to have their email and phone contacts if available.", "api_names": ["places_in_radius_places_in_radius_get_for_places_in_radius", "Finish", "user_likes_for_twitter_v2", "season_hitting_stats_for_mlb_data", "get_game_details_for_viperscore", "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes", "getforecast_free_for_the_apophis", "inn_general_director_for_dimondevosint"], "api_descs": {"Finish": "No description available.", "get_game_details_for_viperscore": "With \"Get game details\" you'll get the basic information about the game you were looking for.", "get_quote_by_movie_or_tv_show_name_for_movie_and_tv_shows_quotes": "This endpoint will return quotes by given movie or TV show name", "getforecast_free_for_the_apophis": "This endpoint is part of Basic (Free) subscriptions.\n\n**Available Currencies:**\n- BTC\n- ETH\n\n**Forecast Data:**\n- 3 Periods\n\n**Timeframe:**\n- 1h", "inn_general_director_for_dimondevosint": "Returns the general director of a company by INN nymber.", "places_in_radius_places_in_radius_get_for_places_in_radius": "This endpoint returns:\n-  all the facilities that meet specified category (grocery_store, gym, railway_station etc.)\n- are within specified radius from starting_point\n\nReturned data (please let us know, what additional data to provide to your plan):\n - unique place_id\n- location (lat,lng)\n- type\n- distance data (walking and driving, counting from origin)\n- business details : email (if provided), phone", "season_hitting_stats_for_mlb_data": "Retrieve a players hitting stats for a given season.", "user_likes_for_twitter_v2": "Get User Likes"}, "aseqs": [{"api_name": "places_in_radius_places_in_radius_get_for_places_in_radius", "api_action": "\nAction: places_in_radius_places_in_radius_get_for_places_in_radius\nAction Input: {\n  \"location_types\": \"cinema,restaurant\",\n  \"distance\": 500,\n  \"starting_point\": \"latitude,longitude\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "places_in_radius_places_in_radius_get_for_places_in_radius"}}, {"state": "generated_by_agent", "aseq": {"api_name": "places_in_radius_places_in_radius_get_for_places_in_radius"}}]}
{"URL": "11620", "query": "Can you please find the credit score for IBM? I want to know if it's a good investment. Additionally, can you give me a list of tickers for which credit scores exist?", "api_names": ["Finish", "credit_score_by_ticker_for_business_credit_scores", "distinct_tickers_for_business_credit_scores", "get_order_for__demo_project_v13", "get_nft_transfers_for_user_for_uniblock", "middle_east_for_nomad_list_cities", "bet365_upcoming_events_for_betsapi", "get_profile_for_outsystems_community_api", "get_digibyte_balance_for_cryptocurrency_balance", "geteventdetails_for_sport_odds", "getuserbyname_for_platformbil", "get_artists_for_spotify_web", "parse_data_for_5ka_porocila", "weekly_schedule_for_basketball_datafeeds_by_rolling_insights", "category_list_for_fortune_cookie"], "api_descs": {"Finish": "No description available.", "bet365_upcoming_events_for_betsapi": "get bet365 fixtures", "category_list_for_fortune_cookie": "List of fortune categories", "credit_score_by_ticker_for_business_credit_scores": "Provide a ticker and receive a score: 1- 10. \n1 is the best and 10 is the worst.", "distinct_tickers_for_business_credit_scores": "Get list of tickers for which credit scores exist.", "get_artists_for_spotify_web": "Get one or more artists", "get_digibyte_balance_for_cryptocurrency_balance": "This endpoint will return back the DigiByte balance of an address", "get_nft_transfers_for_user_for_uniblock": "Gets NFT transfer records for a specified user.", "get_order_for__demo_project_v13": " ", "get_profile_for_outsystems_community_api": "Returns the details of a profile.", "geteventdetails_for_sport_odds": "GetEventDetails api data", "getuserbyname_for_platformbil": "", "middle_east_for_nomad_list_cities": "Get Middle East cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "parse_data_for_5ka_porocila": "description", "weekly_schedule_for_basketball_datafeeds_by_rolling_insights": "Returns all events from the date specified plus 7 days in advance"}, "aseqs": [{"api_name": "credit_score_by_ticker_for_business_credit_scores", "api_action": "\nAction: credit_score_by_ticker_for_business_credit_scores\nAction Input: {\n  \"where\": \"IBM\"\n}", "api_reaction": null}, {"api_name": "distinct_tickers_for_business_credit_scores", "api_action": "\nAction: distinct_tickers_for_business_credit_scores\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "credit_score_by_ticker_for_business_credit_scores"}}, {"state": "generated_by_agent", "aseq": {"api_name": "credit_score_by_ticker_for_business_credit_scores"}}, {"state": "generated_by_agent", "aseq": {"api_name": "credit_score_by_ticker_for_business_credit_scores", "api_action": "\nAction: credit_score_by_ticker_for_business_credit_scores\nAction Input: {\n  \"ticker\": \"IBM\"\n}", "api_reaction": null}}]}
{"URL": "28410", "query": "I am a financial analyst and I need to access the daily zip files of filed 10-q and 10-k reports. Please provide me with the premium daily data for the date '2022-11-10'. Additionally, I would like to check the availability of dates for both basic and premium subscriptions using the content endpoint. Can you also provide the server time using the heartbeat endpoint?", "api_names": ["Finish", "heartbeat_for_daily_sec_financial_statement_dataset", "premium_daily_for_daily_sec_financial_statement_dataset", "getplayer_for_nhl_stats_and_live_data", "fish_api_group_for_fish_species", "categorytournaments_for_handballapi", "regular_dice_for_dice_roll_simulator", "get_a_list_of_domains_for_url_link_shortener", "get_random_joke_by_category_for_world_of_jokes", "get_media_links_for_watch_database", "search_trader_for_binance_futures_leaderboard", "estimate_market_value_for_car_utils"], "api_descs": {"Finish": "No description available.", "categorytournaments_for_handballapi": "Get tournaments by category.", "estimate_market_value_for_car_utils": "Estimate market value of the car with specified VIN.", "fish_api_group_for_fish_species": "This endpoint will group the available data by the <code>property_value</code> parameter. The available URL query parameters are <code>meta_property</code>,  <code>meta_property_attribute</code>, and <code>property_value</code>. The API will group and return all fishes that are matching the <code>property_value</code> that is given in the meta-object.", "get_a_list_of_domains_for_url_link_shortener": "Get a list of domains", "get_media_links_for_watch_database": "Get Media Links", "get_random_joke_by_category_for_world_of_jokes": "Get the random joke by category from a collection of most rated and most popular jokes.", "getplayer_for_nhl_stats_and_live_data": " ", "heartbeat_for_daily_sec_financial_statement_dataset": "A simple heartbeat that returns the time of the server to check if the connection to the server is working.", "premium_daily_for_daily_sec_financial_statement_dataset": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. The files are published daily (resp. once or twice a week during the beta phase).\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**", "regular_dice_for_dice_roll_simulator": "Roll any number of regular dice.", "search_trader_for_binance_futures_leaderboard": "Search for traders by nickname"}, "aseqs": [{"api_name": "premium_daily_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: premium_daily_for_daily_sec_financial_statement_dataset\nAction Input: {\n  \"date\": \"2022-11-10\"\n}", "api_reaction": null}, {"api_name": "heartbeat_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: heartbeat_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}, {"api_name": "premium_daily_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: premium_daily_for_daily_sec_financial_statement_dataset\nAction Input: {\n  \"date\": \"2022-11-10\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "premium_daily_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "heartbeat_for_daily_sec_financial_statement_dataset"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_list_of_domains_for_url_link_shortener"}}, {"state": "generated_by_agent", "aseq": {"api_name": "heartbeat_for_daily_sec_financial_statement_dataset", "api_action": "\nAction: heartbeat_for_daily_sec_financial_statement_dataset\nAction Input: {}", "api_reaction": null}}]}
{"URL": "4205", "query": "I'm feeling down and need some motivation. Fetch me a random quote from the 'inspirational' category and then provide me with the list of available categories.", "api_names": ["list_categories_for_famous_quotes", "get_random_quotes_for_famous_quotes", "Finish", "search_for_swedish_vehicle_license_plate_lookup", "indisciplina_1_for_csa_v2", "fixtures_for_rugby_live_data", "search_torrents_for_movie_tv_music_search_and_download", "bmr_index_for_bmr_and_tmr", "allchannel_for_tvview", "airports_direct_routes_for_an_airport_for_timetable_lookup_", "asset_markets_by_id_for_crypto_exchanges", "get_news_from_a_specific_source_for_pollution_news_api", "uthmani_text_for_quran_com", "canvas_episodes_get_info_for_webtoon", "generate_for_token_api", "cointelegraph_for_crypto_news_v2", "get_all_verse_of_chapter_by_chapter_id_for_bhagavad_gita_v3", "newlyregistereddomains_for_whois_lookup_v4"], "api_descs": {"Finish": "No description available.", "airports_direct_routes_for_an_airport_for_timetable_lookup_": "Returns a list of direct routes for an airport", "allchannel_for_tvview": "Get All the Channel", "asset_markets_by_id_for_crypto_exchanges": "Get Asset Markets by Asset ID", "bmr_index_for_bmr_and_tmr": "Endpoint allows you to calculate the Basal Metabolic Rate", "canvas_episodes_get_info_for_webtoon": "Get episode and photo links.\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "cointelegraph_for_crypto_news_v2": "Get the latest news from CoinTelegraph.", "fixtures_for_rugby_live_data": "Lists fixtures for entire season using competion_id and season_id combination", "generate_for_token_api": "Generate a new token for Language API", "get_all_verse_of_chapter_by_chapter_id_for_bhagavad_gita_v3": "Get all verse of chapter by chapter id", "get_news_from_a_specific_source_for_pollution_news_api": "This Endpoint would return news on pollution in african countries from a specific news source", "get_random_quotes_for_famous_quotes": "Get multiple random quotes from chosen category or send **all** to get results from multiple categories.\nYou can view all categories on the Category endpoint", "indisciplina_1_for_csa_v2": "Indisciplina alumno 1", "list_categories_for_famous_quotes": "List all available categories", "newlyregistereddomains_for_whois_lookup_v4": "REST API to lookup newly registered domains", "search_for_swedish_vehicle_license_plate_lookup": " ", "search_torrents_for_movie_tv_music_search_and_download": "Get downloadable  torrent link by movie name.", "uthmani_text_for_quran_com": "Get Uthmani script of ayah. Use query strings to filter results, leave all query string blank if you want to fetch Uthmani script of whole Quran."}, "aseqs": [{"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 1,\n  \"category\": \"inspirational\"\n}", "api_reaction": null}, {"api_name": "list_categories_for_famous_quotes", "api_action": "\nAction: list_categories_for_famous_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_random_quotes_for_famous_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_categories_for_famous_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_quotes_for_famous_quotes", "api_action": "\nAction: get_random_quotes_for_famous_quotes\nAction Input: {\n  \"count\": 1,\n  \"category\": \"inspirational\"\n}", "api_reaction": null}}]}
{"URL": "8658", "query": "My family and I are planning a Diablo 4 gaming marathon. Can you provide us with the top news articles, gameplays, and communities? Additionally, fetch the details of the influencers and topics associated with Diablo 4.", "api_names": ["getnews_for_diablo4_smartable", "getcommunities_for_diablo4_smartable", "Finish", "getpeople_for_diablo4_smartable", "getgames_for_diablo4_smartable", "gettopics_for_diablo4_smartable", "get_social_timestamps_1d_for_finance_social_sentiment_for_twitter_and_stocktwits", "dashboard_for_surveymethods", "summery_copy_for_summery", "followers_for_instagram_v6", "get_all_plants_for_house_plants", "tweet_retweets_for_twitter_aio", "billboard_global_excl_us_for_billboard", "competitions_for_zeus_api", "get_all_controls_for_risk_management_framework", "crypto_convert_for_currencies_and_countries", "get_channel_broadcaster_type_for_gwyo_twitch", "api_for_portfolio", "get_car_specs_for_car_specs", "baseball_predictions_by_day_for_betigolo_predictions"], "api_descs": {"Finish": "No description available.", "api_for_portfolio": "Auto generated using Swagger Inspector", "baseball_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.", "billboard_global_excl_us_for_billboard": "Billboard Global Excl. US. Available from SEPTEMBER 19, 2020", "competitions_for_zeus_api": "List all available competitions 🏆.", "crypto_convert_for_currencies_and_countries": "You can convert crypto currencies.", "dashboard_for_surveymethods": "Get the deployment and response dashboard", "followers_for_instagram_v6": "get someone's followers", "get_all_controls_for_risk_management_framework": "Returns a complete list of all Risk Management Framework (RMF) controls.", "get_all_plants_for_house_plants": "This endpoint retrieves all the plants.", "get_car_specs_for_car_specs": "Returns detailed specs for the chosen car by trim id.", "get_channel_broadcaster_type_for_gwyo_twitch": "Get Channel Broadcaster Type (using username or id)", "get_social_timestamps_1d_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the total posts, comments, likes, impressions over a specified timeframe. Social activity is grouped by 1 day intervals", "getcommunities_for_diablo4_smartable": "Get Diablo 4 communities", "getgames_for_diablo4_smartable": "Get Diablo 4 gameplays.", "getnews_for_diablo4_smartable": "Get Diablo 4 news.", "getpeople_for_diablo4_smartable": "Get Diablo 4 influencers and top players.", "gettopics_for_diablo4_smartable": "Get Diablo 4 topics.", "summery_copy_for_summery": "dahsboard summery", "tweet_retweets_for_twitter_aio": "Receive all retweets for a tweet."}, "aseqs": [{"api_name": "getnews_for_diablo4_smartable", "api_action": "\nAction: getnews_for_diablo4_smartable\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "getgames_for_diablo4_smartable", "api_action": "\nAction: getgames_for_diablo4_smartable\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "getcommunities_for_diablo4_smartable", "api_action": "\nAction: getcommunities_for_diablo4_smartable\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "getpeople_for_diablo4_smartable", "api_action": "\nAction: getpeople_for_diablo4_smartable\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "gettopics_for_diablo4_smartable", "api_action": "\nAction: gettopics_for_diablo4_smartable\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"api_name\": \"getnews_for_diablo4_smartable\",\n\t\"Thought\": I need to fetch the top news articles associated with Diablo 4 first, as per the user's request.\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getgames_for_diablo4_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpeople_for_diablo4_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpeople_for_diablo4_smartable", "api_action": "{\"page\": 1}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnews_for_diablo4_smartable", "api_action": "\nAction: getnews_for_diablo4_smartable\nAction Input: {\n  \"page\": 2\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnews_for_diablo4_smartable", "api_action": "\nAction: getnews_for_diablo4_smartable\nAction Input: {\n  \"page\": 2\n}", "api_reaction": null}}]}
{"URL": "52837", "query": "My friends and I are planning to attend a cricket match. Can you provide us with the match results for the previous matches of the home team? Also, fetch the player details for the away team.", "api_names": ["teams_get_players_for_unofficial_cricbuzz", "teams_get_results_for_unofficial_cricbuzz", "Finish", "facilities_lookup_for_egypt_api", "get_user_stories_by_id_for_instagram_fast", "getpetbyid_for_tes", "hashtagmedias_for_instagram_v6", "get_other_trade_record_for_binance_futures_leaderboard", "fixtures_for_football_v2", "getcodecontent_for_flow_study", "fixtures_by_team_for_rugby_live_data", "checkconcent_for_sim_based_location_tracking", "stores_get_details_for_target", "languages_for_spellout", "teamlastmatches_for_cricketapi2", "weather_for_currencyconverter", "app_reviews_for_steam", "stock_company_overview_for_real_time_finance_data"], "api_descs": {"Finish": "No description available.", "app_reviews_for_steam": "Get last n reviews of an app", "checkconcent_for_sim_based_location_tracking": "<p>This endpoint is responsible for refreshing the tracking concent of provided number, i.e. whether location tracking is allowed or not yet</p>\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>tel</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n\n<p>\n<h4>Wrong or not added mobile number passed</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">\n{\n    \"status\": \"invalid_mobile\"\n}\n</code></pre>", "facilities_lookup_for_egypt_api": "This endpoint allows you to get facilities in Egypt like hospital, bank, college, etc. by providing optional query parameters for facility type, gov (governorate)  and city. It returns a list of facilities that match the query parameters.", "fixtures_by_team_for_rugby_live_data": "Lists only upcoming/in play fixtures for a given team. \n\n**Note** it will not list any results, so when a match reaches result status it drops off. Use Fixtures and Results By Team OR Fixtures  And Results by Team by Season endpoint for this functionality.", "fixtures_for_football_v2": "Get all the fixtures from a championship", "get_other_trade_record_for_binance_futures_leaderboard": "Get the other trade record", "get_user_stories_by_id_for_instagram_fast": "Get instagram stories by user id", "getcodecontent_for_flow_study": " ", "getpetbyid_for_tes": "Returns a single pet", "hashtagmedias_for_instagram_v6": "Get hashtag medias", "languages_for_spellout": "List ISO 639 languages", "stock_company_overview_for_real_time_finance_data": "Get stock / public company details. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*. Returns company details for the *stock* type.", "stores_get_details_for_target": "Get detail information of specific store", "teamlastmatches_for_cricketapi2": "Get the last matches for a cricket team by specifying the team ID and the page number (starting from 0).", "teams_get_players_for_unofficial_cricbuzz": "Get players by team", "teams_get_results_for_unofficial_cricbuzz": "Get matched results by team", "weather_for_currencyconverter": "aaaaaaaa"}, "aseqs": [{"api_name": "teams_get_results_for_unofficial_cricbuzz", "api_action": "\nAction: teams_get_results_for_unofficial_cricbuzz\nAction Input: {\n  \"teamid\": 1\n}", "api_reaction": null}, {"api_name": "teams_get_results_for_unofficial_cricbuzz", "api_action": "\nAction: teams_get_results_for_unofficial_cricbuzz\nAction Input: {\n  \"teamid\": 2\n}", "api_reaction": null}, {"api_name": "teams_get_players_for_unofficial_cricbuzz", "api_action": "\nAction: teams_get_players_for_unofficial_cricbuzz\nAction Input: {\n  \"teamid\": 2\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "teams_get_results_for_unofficial_cricbuzz"}}, {"state": "generated_by_agent", "aseq": {"api_name": "teams_get_players_for_unofficial_cricbuzz", "api_action": "\nAction: teams_get_players_for_unofficial_cricbuzz\nAction Input: {\n  \"teamid\": \"away_team_id\",\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "teams_get_players_for_unofficial_cricbuzz", "api_action": "\nAction: teams_get_players_for_unofficial_cricbuzz\nAction Input: {\n  \"teamid\": <away_team_id>\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "teams_get_results_for_unofficial_cricbuzz", "api_action": "\nAction: teams_get_results_for_unofficial_cricbuzz\nAction Input: {\n  \"teamid\": 1\n}", "api_reaction": null}}]}
{"URL": "34053", "query": "I want to watch videos from the 'Music' category that are trending in the United States. Retrieve the video details, including the title, description, and statistics. Additionally, fetch the comment threads for these videos.", "api_names": ["commentthreads_for_youtube_v3_v3", "videos_for_youtube_v3_v3", "videocategories_for_youtube_v3_v3", "Finish", "get_teams_by_id_for_nba_stats_v2", "domain_analysis_for_domain_analysis", "video_search_for_quality_porn", "marks_men_points_for_scoring_tables_api", "driver_s_quotes_for_f1_drivers_quotes", "fake_credit_card_number_generator_for_fake_credit_card_number_generator_api", "get_city_for_wgd_places", "random_meme_for_memes", "getinventory_for_freeplanhardlimitexternal", "facebook_ad_copy_for_facebook_ad", "get_emoji_category_list_for_funny_emojis", "gettest_for_testapi_v4"], "api_descs": {"Finish": "No description available.", "commentthreads_for_youtube_v3_v3": "Returns a list of comment threads that match the API request parameters.", "domain_analysis_for_domain_analysis": "For a given domain, get analysis ranging from domain length all the way to past sales and number of mentions.", "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.", "facebook_ad_copy_for_facebook_ad": "Generate Facebook Ad using AI", "fake_credit_card_number_generator_for_fake_credit_card_number_generator_api": "Pass in one of the following card networks as a parameter:\n\n- amex\n- diners\n- discover\n- jcb\n- mastercard\n- visa", "get_city_for_wgd_places": "Gets city information from a country id", "get_emoji_category_list_for_funny_emojis": "get emoji category list", "get_teams_by_id_for_nba_stats_v2": "Api to query teams", "getinventory_for_freeplanhardlimitexternal": "Returns a map of status codes to quantities", "gettest_for_testapi_v4": "get", "marks_men_points_for_scoring_tables_api": "This retrieves the men's marks for the point value given as a parameter (0-1400).", "random_meme_for_memes": "Get Random Meme from genre\n\n**Default Type:**  top\n**Available Type**\n- Top\n- Hot\n- New\n\n**Default Genre: ** memes\n**Available Genres**\n- \"anime\"\n- \"dnd\"\n- \"history\"\n- \"historyani\"\n- \"memes\"\n- \"politics\"\n- \"science\"\n- \"lotr\"\n- \"ww2\"", "video_search_for_quality_porn": "Search for quality porn and get a provider-subdivided list of the best matching videos.\n\n### Examples\n\nSearch only HD videos that have been rated best with the search term \"amateur\".\n`/search?quality=hd&filter=rating&query=amateur'`\n\nSearch for \"amateur\" only. Filters and quality are optional.\n`/search?query=amateur'`\n\nSearch for \"amateur\" on page 2.\n`/search?query=amateur&page=2'`\n\nSearch for \"amateur\" and set a timeout for 5 seconds for each site request.\n`/search?query=amateur&timeout=5000`\n\nFilter only by the page you need. Here for example by PornHub. It can be filtered by any name part or part URL. For example \"porn\", \".com\" or complete names \"pornhub\", \"youporn.com\".\n`/search?query=amateur&site=pornhub`", "videocategories_for_youtube_v3_v3": "Returns a list of categories that can be associated with YouTube videos.", "videos_for_youtube_v3_v3": "Returns a list of videos that match the API request parameters."}, "aseqs": [{"api_name": "videocategories_for_youtube_v3_v3", "api_action": "\nAction: videocategories_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\"\n}", "api_reaction": null}, {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet, statistics\",\n  \"chart\": \"mostPopular\",\n  \"videocategoryid\": \"10\",\n  \"regioncode\": \"US\",\n  \"maxresults\": 5\n}", "api_reaction": null}, {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet, statistics\",\n  \"videocategoryid\": \"10\",\n  \"regioncode\": \"US\",\n  \"maxresults\": 5\n}", "api_reaction": null}, {"api_name": "commentthreads_for_youtube_v3_v3", "api_action": "\nAction: commentthreads_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet\",\n  \"videoid\": \"Q8TXgCzxEnw\",\n  \"maxresults\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "videocategories_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet,statistics\",\n  \"chart\": \"mostPopular\",\n  \"regionCode\": \"US\",\n  \"type\": \"video\",\n  \"categoryType\": \"Music\",\n  \"maxResults\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "commentthreads_for_youtube_v3_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet, statistics\",\n  \"videocategoryid\": \"10\",\n  \"regioncode\": \"US\",\n  \"maxresults\": 5,\n  \"pageToken\": \"videos_for_youtube_v3_v3_2\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "videos_for_youtube_v3_v3", "api_action": "\nAction: videos_for_youtube_v3_v3\nAction Input: {\n  \"part\": \"snippet, statistics\",\n  \"videocategoryid\": \"10\",\n  \"regioncode\": \"US\",\n  \"maxresults\": 5,\n  \"chart\": \"mostPopular\"\n}", "api_reaction": null}}]}
{"URL": "46990", "query": "I am planning a trip to Amsterdam and I want to know the current air quality measurements in the city. Can you provide me with the hourly air quality measurements for today? Additionally, I would like to know the air quality forecasts for the next 24 hours.", "api_names": ["air_quality_forecasts_for_air_quality_api", "air_quality_measurements_for_air_quality_api", "Finish", "get_ratings_by_restaurant_for_wyre_data", "employee_for_dd", "current_weather_data_for_vision_weather_map", "get_feat_for_dungeons_and_dragon_5e", "races_for_formula_1_standings", "youtube_channel_details_for_youtube_channel_details", "yh_historical_for_yh_finance_complete", "solve_for_captcha", "aljazeera_for_arabic_news_api", "get_image_for_sendapic_api", "check_domain_info_for_domain_info", "getbodypartvalues_for_the_cancer_imaging_archive"], "api_descs": {"Finish": "No description available.", "air_quality_forecasts_for_air_quality_api": "Gives hourly air quality forecast for a given city!", "air_quality_measurements_for_air_quality_api": "Gives current air quality measurements per hour for a given city!", "aljazeera_for_arabic_news_api": "مسار يقوم باسترجاع الاخبار من موقع الجزيرة", "check_domain_info_for_domain_info": "This endpoint returns the domain information.", "current_weather_data_for_vision_weather_map": "With this type of request you can get weather data anywhere on earth. The current weather data is updated online based on data from more than 40,000 weather stations.", "employee_for_dd": "get employee id", "get_feat_for_dungeons_and_dragon_5e": "Returns information about the feat. Mainly full text description.", "get_image_for_sendapic_api": "Retrieve the image by ID.", "get_ratings_by_restaurant_for_wyre_data": "Find a Food Hygiene Rating for a restaurant", "getbodypartvalues_for_the_cancer_imaging_archive": "Set of all body part names filtered by query keys", "races_for_formula_1_standings": "It will return the current season races with basic information.", "solve_for_captcha": "Solve a Captcha given an image URL", "yh_historical_for_yh_finance_complete": "This endpoint returns the history of a public stock.", "youtube_channel_details_for_youtube_channel_details": "YouTube Channel Details"}, "aseqs": [{"api_name": "air_quality_measurements_for_air_quality_api", "api_action": "\nAction: air_quality_measurements_for_air_quality_api\nAction Input: {\n  \"country\": \"Netherlands\",\n  \"city\": \"Amsterdam\"\n}", "api_reaction": null}, {"api_name": "air_quality_forecasts_for_air_quality_api", "api_action": "\nAction: air_quality_forecasts_for_air_quality_api\nAction Input: {\n  \"country\": \"Netherlands\",\n  \"city\": \"Amsterdam\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "air_quality_measurements_for_air_quality_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "air_quality_forecasts_for_air_quality_api", "api_action": "\nAction: air_quality_forecasts_for_air_quality_api\nAction Input: {\n  \"country\": \"Netherlands\",\n  \"city\": \"Amsterdam\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "air_quality_measurements_for_air_quality_api", "api_action": "\nAction: air_quality_measurements_for_air_quality_api\nAction Input: {\n  \"country\": \"Netherlands\",\n  \"city\": \"Amsterdam\"\n}", "api_reaction": null}}]}
{"URL": "25215", "query": "I am planning a surprise party for my friend and I want to send invitations to all the guests through WhatsApp. Can you create a group, add me as an admin, and provide me with the invite link?", "api_names": ["group_invite_link_for_whin", "create_a_group_for_whin", "Finish", "versions_for_darko_androcec_example", "get_exchange_rates_for_watchsignals", "social_media_news_in_hindi_for_onelike", "getlocationinfobyzipcode_for_zillow_base", "eventlist_for_31events_send_native_calendar_invites", "get_nft_collections_for_pancakeswap_api_freemium", "search_for_ios_store", "posts_for_instagram_reels_and_post_downloader", "getqrcode_for_maytapi_whatsapp"], "api_descs": {"Finish": "No description available.", "create_a_group_for_whin": "This API will create a group, it will add you, and will promote you to Admin of the group. Check this [video](https://youtu.be/wD0DWoua0L4) to learn how to use it.", "eventlist_for_31events_send_native_calendar_invites": "", "get_exchange_rates_for_watchsignals": "Return latest exchange rates", "get_nft_collections_for_pancakeswap_api_freemium": "An Endpoint to get NFT Collections on Pancakeswap", "getlocationinfobyzipcode_for_zillow_base": "Get location information by zip code", "getqrcode_for_maytapi_whatsapp": "Gets the image of QR-Code.", "group_invite_link_for_whin": "the endpoint returns an invite link url for a group you own.", "posts_for_instagram_reels_and_post_downloader": "Download post using instagram url", "search_for_ios_store": "The endpoint is used to search iOS application", "social_media_news_in_hindi_for_onelike": "Get social media news in Hindi", "versions_for_darko_androcec_example": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root."}, "aseqs": [{"api_name": "create_a_group_for_whin", "api_action": "\nAction: create_a_group_for_whin\nAction Input: {}", "api_reaction": null}, {"api_name": "group_invite_link_for_whin", "api_action": "\nAction: group_invite_link_for_whin\nAction Input: {\n  \"gid\": \"my_created_group_id\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "create_a_group_for_whin"}}, {"state": "generated_by_agent", "aseq": {"api_name": "group_invite_link_for_whin"}}, {"state": "generated_by_agent", "aseq": {"api_name": "create_a_group_for_whin"}}]}
{"URL": "32195", "query": "I'm a TV show addict and want to discover the top-rated shows of all time. Can you assist me in finding TV shows using the 'Search by Title' API? It would be great if you could provide details such as ratings, genres, and release years. Additionally, I would like to know if these shows are available on TVDB using the 'Get by TVDB ID' API.", "api_names": ["search_by_title_for_mdblist", "get_by_imdb_id_for_mdblist", "get_by_trakt_tv_id_for_mdblist", "Finish", "get_by_tvdb_id_for_mdblist", "cities_for_geography_v2", "billboard_hot_100_for_billboard_api_v2", "new_arrivals_for_ott_details", "string_captcha_for_captcha_v2", "validate_username_for_instagram_v2", "retrieve_the_latest_blogs_for_unofficial_efteling_api", "responses_summary_for_surveymethods", "simplifybasic_for_mathematical_symbolic_expression_manipulator", "reverse_geocode_for_uganda_api", "v1_ownersearch_for_uspto_trademark", "get_players_playerid_for_api_video", "jsr_character_by_id_for_jet_set_radio_api", "health_for_wordle_api", "estrelabet_aviator_latest_for_estrelabet_aviator_api", "get_version_for_nsfw"], "api_descs": {"Finish": "No description available.", "billboard_hot_100_for_billboard_api_v2": "Billboard Hot 100 chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week", "cities_for_geography_v2": "get a list of all the cities filtering by name", "estrelabet_aviator_latest_for_estrelabet_aviator_api": "Will retrieve the latest results from Aviator at Estrelabet.\n\n- The first result is the most recent\n- The last result is the oldest", "get_by_imdb_id_for_mdblist": "Returns movie or TV Show info by IMDb ID", "get_by_trakt_tv_id_for_mdblist": "Returns movie or TV Show info", "get_by_tvdb_id_for_mdblist": "Returns TV Show info", "get_players_playerid_for_api_video": " ", "get_version_for_nsfw": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "health_for_wordle_api": " ", "jsr_character_by_id_for_jet_set_radio_api": "Returns a single Character by ID", "new_arrivals_for_ott_details": "Get the latest arrivals from different platforms .", "responses_summary_for_surveymethods": "Using this API call you can retrieve information such as custom field labels & values, date on which  a response was started and when was it completed, the survey response method (email/web), the  email address of the respondent in case of an email response, IP address and the response code  for each individual response of your survey.", "retrieve_the_latest_blogs_for_unofficial_efteling_api": "Retrieve the latest blogs, these are updated once every hour", "reverse_geocode_for_uganda_api": "This endpoint allows you to perform reverse geocoding in Uganda by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "search_by_title_for_mdblist": "Search for Movies or TV Shows by title, include option year or mediatype filter to narrow your results", "simplifybasic_for_mathematical_symbolic_expression_manipulator": " ", "string_captcha_for_captcha_v2": "captcha code is string format.\n\n- params: length is number (from 1 to 8, default is 6)", "v1_ownersearch_for_uspto_trademark": "Does a search on **owner name** or **postcode** and returns details about the trademarks found for that owner. Duplicate owner results can be returned by this endpoint, especially when an owner had an address change.\n\nYou can use literal 'null' if you don't want to use a param. So you can either search just for a keyword or just for a postcode or together if you want to filter by both.", "validate_username_for_instagram_v2": "Instagram Username validation"}, "aseqs": [{"api_name": "search_by_title_for_mdblist", "api_action": "\nAction: search_by_title_for_mdblist\nAction Input: {\n  \"s\": \"TV Show\"\n}", "api_reaction": null}, {"api_name": "get_by_trakt_tv_id_for_mdblist", "api_action": "\nAction: get_by_trakt_tv_id_for_mdblist\nAction Input: {\n  \"t\": \"tt0101178\"\n}", "api_reaction": null}, {"api_name": "get_by_imdb_id_for_mdblist", "api_action": "\nAction: get_by_imdb_id_for_mdblist\nAction Input: {\n  \"i\": \"tt0101178\"\n}", "api_reaction": null}, {"api_name": "get_by_tvdb_id_for_mdblist", "api_action": "\nAction: get_by_tvdb_id_for_mdblist\nAction Input: {\n  \"tv\": 76088\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_title_for_mdblist"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_tvdb_id_for_mdblist"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_tvdb_id_for_mdblist"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_title_for_mdblist", "api_action": "\nAction: search_by_title_for_mdblist\nAction Input: {\n  \"s\": \"TV Show\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_by_title_for_mdblist\",\n\t\"api_action\": \"\\nAction: search_by_title_for_mdblist\\nAction Input: {\\n  \\\"title\\\": \\\"TV Show\\\",\\n  \\\"year_min\\\": null,\\n  \" year_max: null,\n  \"media_type\": \"tvshow\"\n}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "27155", "query": "I am looking for a specific product on Taobao, but I am not sure about the keyword. Can you help me search for products related to 'fashion' on both Tmall and Taobao? Please provide me with the search results for page 5.", "api_names": ["search_by_keyword_for_taobao_tmall_product_detail", "Finish", "posts_by_username_for_reddit", "highlight_items_for_ig_private_api", "alerts_for_ai_weather_by_meteosource", "search_departures_by_route_for_british_airways_flight_info", "test_endpoint_for_test_v18", "cities_search_for_city_and_state_search_api", "charts_for_rainforest", "getfileversions_for_groupdocs_comparison_cloud"], "api_descs": {"Finish": "No description available.", "alerts_for_ai_weather_by_meteosource": "**Severe weather alerts** for the USA, Europe, and Canada. **Define your location** using GPS coordinates or `place_id` from `Location` endpoints.", "charts_for_rainforest": "The Charts parameters are applicable when making a request with type=charts to retrieve Charts results. The Charts page can be specified using the url parameter. The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nCharts results are retrieved from the charts page on Amazon.", "cities_search_for_city_and_state_search_api": "This endpoint allows you to search for specific cities by name. It returns a list of cities that match the specified search query.", "getfileversions_for_groupdocs_comparison_cloud": " ", "highlight_items_for_ig_private_api": "Highlight Items", "posts_by_username_for_reddit": "Posts By Username", "search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword", "search_departures_by_route_for_british_airways_flight_info": "", "test_endpoint_for_test_v18": "test endpoint"}, "aseqs": [{"api_name": "search_by_keyword_for_taobao_tmall_product_detail", "api_action": "\nAction: search_by_keyword_for_taobao_tmall_product_detail\nAction Input: {\n  \"keyword\": \"fashion\",\n  \"page\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_keyword_for_taobao_tmall_product_detail"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_keyword_for_taobao_tmall_product_detail", "api_action": "\nAction: search_by_keyword_for_taobao_tmall_product_detail\nAction Input: {\n  \"keyword\": \"fashion\",\n  \"page\": 5\n}", "api_reaction": null}}]}
{"URL": "74726", "query": "As the CEO of my company, I want to inspire my employees with famous quotes during our team meeting. Can you provide me with quotes from authors like Shakespeare, Einstein, and Gandhi? I'm particularly interested in quotes related to leadership and perseverance.", "api_names": ["authors_for_words_of_wisdom_the_famous_quotes_api", "quotes_for_words_of_wisdom_the_famous_quotes_api", "Finish", "series_get_stats_for_unofficial_cricbuzz", "enterprise_customer_for_soti_sync", "company_by_name_for_company_consultation_reportero_industrial_mexicano_api", "location_ip_for_ip_geo", "social_media_caption_for_social_media_caption", "get_track_details_single_for_spotify_v2", "search_for_steam", "get_blobs_json_for_quickblox", "tweet_user_favoriters_for_twitter", "comments_for_youtube_v3_alternative", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api", "stock_get_stock_profile_data_for_yh_finance_v2"], "api_descs": {"Finish": "No description available.", "authors_for_words_of_wisdom_the_famous_quotes_api": "Returns a list of authors", "comments_for_youtube_v3_alternative": "Get Comments of the particular video", "company_by_name_for_company_consultation_reportero_industrial_mexicano_api": "Return company data", "enterprise_customer_for_soti_sync": "Is he a Enterprise Customer?", "get_blobs_json_for_quickblox": "Get list of files for the current user. The ID of the user is taken from the token specified in the request", "get_track_details_single_for_spotify_v2": "Get track_name, thumbnail, duration & artist_name of any Spotify Track. Album/Podcast/Show not supported.", "list_available_numbers_for_a_country_prefix_for_melrose_labs_voice_api": "Get list of available telephone numbers for a country and given prefix", "location_ip_for_ip_geo": "Location IP", "quotes_for_words_of_wisdom_the_famous_quotes_api": "Get inspired by the words of history's greatest thinkers. Get your daily dose of motivation", "search_for_steam": "Search in steam shop", "series_get_stats_for_unofficial_cricbuzz": "Get stats", "social_media_caption_for_social_media_caption": "Generate catchy captions for social media", "stock_get_stock_profile_data_for_yh_finance_v2": "return stock profile data", "tweet_user_favoriters_for_twitter": "This endpoint returns a list of user who favorited the tweet"}, "aseqs": [{"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "authors_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: authors_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "{\"author\": \"Shakespeare\", \"quote\": {\"topic\": \"leadership\"}, \"limit\": 2}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api"}}]}
{"URL": "19310", "query": "My family and I are planning to attend an ice hockey match. Could you please provide us with the match schedules for November 28, 2022? Additionally, we would like to know the managers for the match with ID 10745761.", "api_names": ["matchschedules_for_icehockeyapi", "matchmanagers_for_icehockeyapi", "matchstatistics_for_icehockeyapi", "Finish", "get_coordinates_for_geolocate", "get_dream_number_for_4d_dream_dictionary", "geteventsid_for_wosti_futbol_tv_spain", "esg_for_yahoo_finance", "stock_get_dividends_splits_for_webull", "tags_for_mlemapi", "get_company_full_data_for_b2bhint", "getdisclosedtoday_for_jp_funda", "matches_list_by_season_and_matchday_for_serie_a", "batch_for_sigue_payout", "free_games_for_epic_games_store_free_games", "get_battle_item_recipes_for_lost_ark_simple", "getprimarychannel_for_ishan", "mass_from_to_number_for_unitconversion", "companies_for_kargom_nerede", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "batch_for_sigue_payout": "batch process to retrieve payout transaction data", "companies_for_kargom_nerede": "Companies", "esg_for_yahoo_finance": "Simply explained, an ESG score is a measure of a company's exposure to long-term environmental, social, and governance risks that are often overlooked during traditional financial analyses.", "free_games_for_epic_games_store_free_games": "Return All Free Games on Offer on the Epic Games Store. Also returns upcoming Free Games.", "get_battle_item_recipes_for_lost_ark_simple": "Get List of Lost Ark Battle Item Recipes", "get_company_full_data_for_b2bhint": "The Get company details endpoint will return all full company data, including company contacts, financial reports and other data", "get_coordinates_for_geolocate": "GET request to the \"/geocode\" endpoint with an \"address\" parameter containing the address or place you want to geocode", "get_dream_number_for_4d_dream_dictionary": "Return relevant 4/3 digits lucky draw number based on your dream keyword in english or chinese.", "getdisclosedtoday_for_jp_funda": "### Return securities report data disclosed today\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.　But you can obtain data instead of consolidated management indicators from non consolidated management indicators", "geteventsid_for_wosti_futbol_tv_spain": "Obtener el evento por identificador único  del listado de eventos de partidos de fútbol televisados en España.\n\n> Este endpoints requiere de un parámetro denominado Id.", "getprimarychannel_for_ishan": " ", "mass_from_to_number_for_unitconversion": "Mass unit conversions", "matches_list_by_season_and_matchday_for_serie_a": "Via this endpoint, you can retrieve all the matches that occurred on a given matchday in a given season. Note that we support season starting from **1990** till **2022**, and matchday between **1** and **38**.", "matchmanagers_for_icehockeyapi": "Get the managers for a specific Ice Hockey match using the match id.", "matchschedules_for_icehockeyapi": "Get the schedules of ice hockey matches for a given date, including match timings, teams, and other relevant information.", "matchstatistics_for_icehockeyapi": "This operation returns statistics for a specific ice hockey match, including player statistics and other relevant data.", "stock_get_dividends_splits_for_webull": "Get stock dividends and splits", "tags_for_mlemapi": "Returns all tags in JSON", "v1_mortgagecalculator_for_mortgage_calculator_by_api_ninjas": "API Ninjas Mortgage Calculator API endpoint. Either **loan_amount** or (**home_value** + **downpayment**) parameters must be set."}, "aseqs": [{"api_name": "matchschedules_for_icehockeyapi", "api_action": "\nAction: matchschedules_for_icehockeyapi\nAction Input: {\n  \"day\": 28,\n  \"month\": 11,\n  \"year\": 2022\n}", "api_reaction": null}, {"api_name": "matchmanagers_for_icehockeyapi", "api_action": "\nAction: matchmanagers_for_icehockeyapi\nAction Input: {\n  \"is_id\": 10745761\n}", "api_reaction": null}, {"api_name": "matchmanagers_for_icehockeyapi", "api_action": "\nAction: matchmanagers_for_icehockeyapi\nAction Input: {\n  \"is_id\": 10745761\n}", "api_reaction": null}, {"api_name": "matchstatistics_for_icehockeyapi", "api_action": "\nAction: matchstatistics_for_icehockeyapi\nAction Input: {\n  \"is_id\": 10745761\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matchschedules_for_icehockeyapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matchmanagers_for_icehockeyapi", "api_action": "{\"id\": 10745761}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"matchschedules_for_icehockeyapi\",\n\t\"api_action\": \"\\nAction: matchschedules_for_icehockeyapi\\nAction Input: {\\n  \\\"day\\\": 28,\\n  \\\"month\\\": 11,\\n  \\\"year\\\": 2022,\\n  \\\"type\\\": \"scheduled\"\\n}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_list_by_season_and_matchday_for_serie_a"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_list_by_season_and_matchday_for_serie_a"}}]}
{"URL": "81861", "query": "I need to integrate SMS functionality into my app. Can you provide me with a list of available numbers to receive messages from? Additionally, I would like to change the current tag for my messages and retrieve the details of a specific message using its ID.", "api_names": ["getnumbers_for_sms_receive", "Finish", "settag_for_sms_receive", "getmessage_for_sms_receive", "input_test_for_testing_out_sharing_w_rachael", "revenue_estimate_for_stock_analysis", "v1_sticker_posts_sticker_id_for_tokapi_mobile_version", "gettest_for_testapi_v4", "get_filter_for_tdot_school_data", "get_random_riddle_for_riddlie_", "burned_calorie_from_activity_for_fitness_calculator", "songs_list_recommendations_for_shazam_api", "highlights_for_ig_private_api", "download_rich_menu_image_for_line_messaging", "supported_languages_for_translate_plus", "competitor_small_image_for_allscores", "new_mlem_for_mlemapi", "tournaments_for_rocket_league", "get_wisdom_quotes_by_page_for_wisdom_quotes", "get_product_for__demo_project_v2"], "api_descs": {"Finish": "No description available.", "burned_calorie_from_activity_for_fitness_calculator": "Calculate the burned calorie for a specific activity.", "competitor_small_image_for_allscores": "Get competitor small image. It generates image/png.", "download_rich_menu_image_for_line_messaging": "Downloads an image associated with a rich menu.", "get_filter_for_tdot_school_data": "Get Filter", "get_product_for__demo_project_v2": " ", "get_random_riddle_for_riddlie_": "This endpoint responds with a new random riddle with an answer and other details.", "get_wisdom_quotes_by_page_for_wisdom_quotes": "Returns an JSON object that includes:\n\n- the page number requested  (current_page), \n- the amount of all pages (max_pages),\n- the amount of the quotes (quotes_count) (15 per page),\n- the wisdom quotes array (quotes).", "getmessage_for_sms_receive": "Get message details.", "getnumbers_for_sms_receive": "Get a list of available numbers to receive messages from.", "gettest_for_testapi_v4": "get", "highlights_for_ig_private_api": "Highlights", "input_test_for_testing_out_sharing_w_rachael": "description of the endpoint", "new_mlem_for_mlemapi": "Returns one most recently published mlem image in JSON", "revenue_estimate_for_stock_analysis": "Get revenue estimate.", "settag_for_sms_receive": "Change the current tag.", "songs_list_recommendations_for_shazam_api": "Similar songs based on song id", "supported_languages_for_translate_plus": "The languages which out api supports.", "tournaments_for_rocket_league": "Check the scheduled tournaments:\n`rocket-league1.p.rapidapi.com/tournaments/:region`", "v1_sticker_posts_sticker_id_for_tokapi_mobile_version": "Video by effect ID (look at stickers field in video response)"}, "aseqs": [{"api_name": "getnumbers_for_sms_receive", "api_action": "\nAction: getnumbers_for_sms_receive\nAction Input: {}", "api_reaction": null}, {"api_name": "settag_for_sms_receive", "api_action": "\nAction: settag_for_sms_receive\nAction Input: {\n  \"tag\": \"SMS_APP\"\n}", "api_reaction": null}, {"api_name": "getmessage_for_sms_receive", "api_action": "\nAction: getmessage_for_sms_receive\nAction Input: {\n  \"message_id\": 12345\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getnumbers_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getmessage_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getmessage_for_sms_receive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "settag_for_sms_receive", "api_action": "\nAction: settag_for_sms_receive\nAction Input: {\n  \"tag\": \"SMS_APP_NEW\"\n}", "api_reaction": null}}]}
{"URL": "58863", "query": "Could you please provide me with the available websites to extract Amazon product data in the United States? Additionally, I would like to search for AMD Ryzen products on Amazon and retrieve the first page of results, including the product names, images, ratings, and prices. Finally, I'm curious about the categories of the searched products.", "api_names": ["get_product_reviews_all_countries_for_amazon_web_scraping_api", "search_products_all_countries_for_amazon_web_scraping_api", "get_product_details_all_countries_for_amazon_web_scraping_api", "get_deals_for_amazon_web_scraping_api", "Finish", "get_websites_for_amazon_web_scraping_api", "global_search_by_query_for_instagram_looter", "api_nutrition_data_for_edamam_nutrition_analysis", "form_check_instance_for_botlibre", "get_word_of_the_day_from_multiple_sources_for_word_of_the_day", "gets_the_meta_data_from_one_given_champion_based_on_a_rank_for_league_of_legends_champion_meta", "current_for_ai_weather_by_meteosource", "retrieve_test_question_for_drillster_2_0", "validate_cpf_number_for_cpf_validator", "getfileslist_for_groupdocs_conversion_cloud", "get_songs_with_all_metadata_and_stats_play_counts_for_indie_songs_distrokid_unsigned", "history_for_crazytimeapi", "get_ios_app_for_ios_store", "product_details_for_shopeeapi", "getcharacterbyname_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_"], "api_descs": {"Finish": "No description available.", "api_nutrition_data_for_edamam_nutrition_analysis": "This returns the nutritional analysis for the specified food text by extracting information from a short unstructured food text (usually an ingredient line and returns the following structured data for the text: quantity, measure and food,) and if available: diet, health and allergen labels for the text.  With the built in food logging feature, this allows for change of context. For example, “rice” will normally be matched to raw rice while, with the food logging feature on, it will match to ready to eat ‘cooked rice.’ \n \n <b>Access Point:</b> https://api.edamam.com/api/nutrition-data", "current_for_ai_weather_by_meteosource": "**Current weather** conditions based on weather stations around the world.  Updated every 10 minutes. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.", "form_check_instance_for_botlibre": "The form-check-instance API validates that a bot ID or name exists, and returns the bot's details.", "get_deals_for_amazon_web_scraping_api": "Get amazon deals allowing to filter by category.  The category list is included in the response.", "get_ios_app_for_ios_store": "This endpoint is used to fetch specific app from app Id", "get_product_details_all_countries_for_amazon_web_scraping_api": "Get the detail of a specific product from Amazon using the ASIN code.", "get_product_reviews_all_countries_for_amazon_web_scraping_api": "Get the reviews for specific product using the ASIN code.", "get_songs_with_all_metadata_and_stats_play_counts_for_indie_songs_distrokid_unsigned": "Get all tracks with full metadata including recent Spotify play counts.\n\nAlso Apple song URL, Spotify song URL, Composer name, ISRC, Label, Release date, Genres, Apple IDs, Spotify IDs are included.", "get_websites_for_amazon_web_scraping_api": "Get the available websites available by country to extract amazon product data.", "get_word_of_the_day_from_multiple_sources_for_word_of_the_day": "Gets word of the day from mutiple sources in one go easy.", "getcharacterbyname_for_marvel_heroic_api_unlock_the_mcu_legendary_characters_": "Get specific Character by name", "getfileslist_for_groupdocs_conversion_cloud": " ", "gets_the_meta_data_from_one_given_champion_based_on_a_rank_for_league_of_legends_champion_meta": "Fetches the Data from the provided League of Legends Champion based on a rank.\nWill return a list of Objects, because a Champion can be played in multiple roles\n\nPossible rank parameters are: \n- placements\n- iron\n- bronze\n- silver\n- gold\n- platinum\n- diamond\n- master\n- grandmaster\n- challenger\nThey also be combined with a \"comma-sign\": e.g challenger,master", "global_search_by_query_for_instagram_looter": "Global search in **Instagram** by **query**", "history_for_crazytimeapi": "Get the last 10 spins Histories and details", "product_details_for_shopeeapi": "Get shopee product details", "retrieve_test_question_for_drillster_2_0": "Returns the next question for a predefined test.", "search_products_all_countries_for_amazon_web_scraping_api": "Allows to search products in Amazon using real time data scraping API.", "validate_cpf_number_for_cpf_validator": "Checks if a CPF number is valid."}, "aseqs": [{"api_name": "get_websites_for_amazon_web_scraping_api", "api_action": "\nAction: get_websites_for_amazon_web_scraping_api\nAction Input: {}", "api_reaction": null}, {"api_name": "search_products_all_countries_for_amazon_web_scraping_api", "api_action": "\nAction: search_products_all_countries_for_amazon_web_scraping_api\nAction Input: {\n  \"criteria\": \"AMD Ryzen\",\n  \"countrycode\": \"us\",\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "get_product_details_all_countries_for_amazon_web_scraping_api", "api_action": "\nAction: get_product_details_all_countries_for_amazon_web_scraping_api\nAction Input: {\n  \"asin\": \"B091J3NYVF\",\n  \"countrycode\": \"us\"\n}", "api_reaction": null}, {"api_name": "get_deals_for_amazon_web_scraping_api", "api_action": "\nAction: get_deals_for_amazon_web_scraping_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_product_reviews_all_countries_for_amazon_web_scraping_api", "api_action": "\nAction: get_product_reviews_all_countries_for_amazon_web_scraping_api\nAction Input: {\n  \"asin\": \"B091J3NYVF\",\n  \"countrycode\": \"us\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_websites_for_amazon_web_scraping_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_products_all_countries_for_amazon_web_scraping_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_websites_for_amazon_web_scraping_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_websites_for_amazon_web_scraping_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_websites_for_amazon_web_scraping_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_websites_for_amazon_web_scraping_api"}}]}
{"URL": "26184", "query": "I need to know the details of a particular house plant with the ID 53417c12-4824-5995-bce0-b81984ebbd1d. Can you provide me with its Latin name, family, description, and other relevant information? Furthermore, I am interested in finding house plants that belong to the same category as the plant with the given ID.", "api_names": ["getbycategory_for_house_plants", "getbyid_for_house_plants", "Finish", "book_list_and_chapter_counts_api_for_complete_study_bible", "generating_provider_specific_reports_for_odesk_apis", "get_news_for_india_today_unofficial", "timeseries_for_hedonometer", "get_token_forwarding_wallets_for_token_forwarding", "properties_sale_for_real_estate", "vin_decoder_for_car_api", "revise_for_ai_writer", "travelopro_for_travelopro_", "posts_for_instagram_reels_and_post_downloader", "api_about_version_for_prague_stock_exchange", "summary_for_play_to_earn_blockchain_games", "today_best_for_crypto_gem_finder", "getuserbyname_for_petstore_blitz", "tournament_results_by_id_and_year_wta_for_ultimate_tennis"], "api_descs": {"Finish": "No description available.", "api_about_version_for_prague_stock_exchange": " ", "book_list_and_chapter_counts_api_for_complete_study_bible": "Lists all books of the Bible, abbreviations, and chapter counts. Can be used as a reference for a chapter selection screen", "generating_provider_specific_reports_for_odesk_apis": "This API allows callers to fetch data source of themselves. No monetary fields, such as charges or earnings, are supported. The caller of this API must be the provider himself.", "get_news_for_india_today_unofficial": "All Latest news from India Today Platform", "get_token_forwarding_wallets_for_token_forwarding": "Get token forwarding wallets", "getbycategory_for_house_plants": "Get all item based on a category", "getbyid_for_house_plants": "Returns a single plants data within an object. Information for each plant returned contains (but not limited to) the list below\n\n- Latin name \n- Img \n- Id\n- Family \n- Other names \n- Common name \n- Common name (fr.) \n- Description \n- Categories \n- Origin \n- Climat \n- Temperature max\n- Temperature min\n- Zone \n- Growth \n- Light ideal \n- Light tolered \n- Watering \n- Insects \n- Disease \n- Appeal \n- Color of leaf \n- Color of blooms \n- Blooming season \n- Perfume \n- Avaibility \n- Pot diameter\n- Height at purchase\n- Width at purchase\n- Height potential\n- Width potential\n- Available sizes\n- Bearing \n- Clump\n- Pruning \n- Style \n- Use", "getuserbyname_for_petstore_blitz": " ", "posts_for_instagram_reels_and_post_downloader": "Download post using instagram url", "properties_sale_for_real_estate": "U.S properties for sale", "revise_for_ai_writer": "Revise and correct any text", "summary_for_play_to_earn_blockchain_games": "Get games market data summary", "timeseries_for_hedonometer": "Call the happiness timeseries", "today_best_for_crypto_gem_finder": "Get Today most popular coins", "tournament_results_by_id_and_year_wta_for_ultimate_tennis": "Via this endpoint, you can retrieve all the matches played in the selected tournament, in a given year. The results are added instantly for every match that ends. You can Retrieve the list of the IDs from the tournament list WTA endpoint.", "travelopro_for_travelopro_": "Travelopro is the best leading travel technology company ", "vin_decoder_for_car_api": "Decodes Vehicle Identification Numbers. The result will include a list of specifications in the specs property and a list of all possible trims matching the VIN in the trims property."}, "aseqs": [{"api_name": "getbyid_for_house_plants", "api_action": "\nAction: getbyid_for_house_plants\nAction Input: {\n  \"is_id\": \"53417c12-4824-5995-bce0-b81984ebbd1d\"\n}", "api_reaction": null}, {"api_name": "getbycategory_for_house_plants", "api_action": "\nAction: getbycategory_for_house_plants\nAction Input: {\n  \"category\": \"Dracaena\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbyid_for_house_plants"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbyid_for_house_plants"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbyid_for_house_plants"}}]}
{"URL": "55938", "query": "Retrieve the addresses for the UK PostCode 'PL11DN' and suggest address results for the search term 'Bridge'. Additionally, provide the addresses matching the search term 'Farringdon Road'.", "api_names": ["postcodes_postcode_for_uk_postcode_api", "Finish", "addresses_for_uk_postcode_api", "addresses_autocomplete_for_uk_postcode_api", "get_worldwide_hashtags_for_twitter_hashtags", "search_for_recash", "search_master_traders_for_bybit_leaderboard", "actors_get_awards_summary_for_online_movie_database", "get_infringement_v1_infringement_research_predict_get_for_stacks_patent_similarity", "isochrone_for_mymappi", "feeds_list_similarities_for_yummly", "last_menstrual_period_lmp_for_pregnancy_calculator_api", "leaderboards_for_live_golf_data", "spain_scheduled_flights_growth_for_global_flight_data", "get_all_questions_for_ase_s_quiz_api", "interests_for_fastapi_project", "go_for_recipe_v2", "time_zone_api_for_weatherapi_com", "hashtag_feed_video_posts_for_tiktok_data", "objectexists_for_groupdocs_conversion_cloud"], "api_descs": {"Finish": "No description available.", "actors_get_awards_summary_for_online_movie_database": "Get awards summary of actor or actress", "addresses_autocomplete_for_uk_postcode_api": "Suggests address results for a given search term.", "addresses_for_uk_postcode_api": "Gets addresses for given search term.", "feeds_list_similarities_for_yummly": "List similar recipes by name and author", "get_all_questions_for_ase_s_quiz_api": "Get all questions without pagination", "get_infringement_v1_infringement_research_predict_get_for_stacks_patent_similarity": "Create a request item with the following information:\n\n- **text**: could be the description of a company asset or a product explanation. It should be minimum length of `20` words for better performance. Note that GET queries are limited to `2048` characters (_required_).\n- **patent_number**: should start with a country code and end with the _Kind_ _Code_. You can enter as many as `5` patent numbers, each separated with a comma (_required_).\n- **model_name**: is the name of the model empowering Stacks Patent Similarity engine. Defaults to `stk_nova`.", "get_worldwide_hashtags_for_twitter_hashtags": "Returns a list of all recent hashtags worldwide", "go_for_recipe_v2": "Creative recipes. The API provides access to 231,637 creative recipes from all cuisines around the world.", "hashtag_feed_video_posts_for_tiktok_data": "Get hashtag feed\n\n- Before testing don't forget to fill out the **name** query\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "interests_for_fastapi_project": "Gets interests", "isochrone_for_mymappi": "The Isochrone API allows you to request polygon or line features that show areas that are reachable within a few specified amounts of time from a certain location in different routing profiles (car, on foot and soon bike and public transport).", "last_menstrual_period_lmp_for_pregnancy_calculator_api": "This endpoint calculates the estimated due date based on the user's last menstrual period (LMP)", "leaderboards_for_live_golf_data": "Fetch the most recent leaderboard for a given `tournId`, `year`,  and `roundId`. Query the `schedule` endpoint for the desired `tournId` and `year`.\n\nLeaderboards are available 1-2 days before the event begins.", "objectexists_for_groupdocs_conversion_cloud": " ", "postcodes_postcode_for_uk_postcode_api": "Gets addresses for the given UK PostCode", "search_for_recash": "This will filter what you want from the products on the data base", "search_master_traders_for_bybit_leaderboard": "Returns MASTER traders that match your search filters.", "spain_scheduled_flights_growth_for_global_flight_data": "Get weekly Spain scheduled departing flights growth.", "time_zone_api_for_weatherapi_com": "Time Zone API method allows a user to get up to date time zone and local time information in json."}, "aseqs": [{"api_name": "postcodes_postcode_for_uk_postcode_api", "api_action": "\nAction: postcodes_postcode_for_uk_postcode_api\nAction Input: {\n  \"postcode\": \"PL11DN\"\n}", "api_reaction": null}, {"api_name": "addresses_autocomplete_for_uk_postcode_api", "api_action": "\nAction: addresses_autocomplete_for_uk_postcode_api\nAction Input: {\n  \"query\": \"Bridge\"\n}", "api_reaction": null}, {"api_name": "addresses_for_uk_postcode_api", "api_action": "\nAction: addresses_for_uk_postcode_api\nAction Input: {\n  \"query\": \"Farringdon Road\"\n}", "api_reaction": null}, {"api_name": "postcodes_postcode_for_uk_postcode_api", "api_action": "\nAction: postcodes_postcode_for_uk_postcode_api\nAction Input: {\n  \"postcode\": \"PL11DN\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_uk_postcode_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_uk_postcode_api", "api_action": "{\n  \"postcode\": \"PL11DN\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_uk_postcode_api", "api_action": "{\"postcode\": \"PL11DN\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_uk_postcode_api", "api_action": "\nAction: addresses_for_uk_postcode_api\nAction Input: {\n  \"query\": \"Bridge\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "addresses_for_uk_postcode_api", "api_action": "\nAction: addresses_for_uk_postcode_api\nAction Input: {\n  \"query\": \"Bridge\"\n}", "api_reaction": null}}]}
{"URL": "55947", "query": "I am organizing a virtual meeting with colleagues from different time zones in Europe. Can you give me a list of valid locations in Europe along with their time zones? I also need to determine the current time at my current IP address. Please provide me with the current time for my IP.", "api_names": ["timezone_by_area_for_world_time", "current_time_by_ip_for_world_time", "Finish", "search_for_revdl", "get_user_following_list_for_tiktok_video_feature_summary", "autocomplete_results_for_google_search_2", "random_joke_for_joke1", "seasonendconstructorstanding_for_formula_1_fixed", "gay_image_gay_get_for_image", "index_for_fear_and_greed_index", "route_information_for_bart", "leaguemedia_for_handballapi", "teams_get_performance_for_divanscore", "user_feed_for_100_success_instagram_api_scalable_robust", "getcompanynames_for_gaialens_company_names"], "api_descs": {"Finish": "No description available.", "autocomplete_results_for_google_search_2": "Use this API to get suggestions based on the entered keyword.", "current_time_by_ip_for_world_time": "Request the current time based on your public IP", "gay_image_gay_get_for_image": " ", "get_user_following_list_for_tiktok_video_feature_summary": "get user following list", "getcompanynames_for_gaialens_company_names": "This API returns a list of all company names available to the user. It can be used as a pre-step before invoking other GaiaLens APIs such as GaiaLens ESG Scores, Gaialens Historical ESG Scores and GaiaLens ESG News.", "index_for_fear_and_greed_index": "Actual Fear and Greed index", "leaguemedia_for_handballapi": "Get media for a handball unique tournament", "random_joke_for_joke1": "Returns a random joke", "route_information_for_bart": "", "search_for_revdl": "Eto no mirecherche", "seasonendconstructorstanding_for_formula_1_fixed": "Constructor Standings at the end of the season(year).", "teams_get_performance_for_divanscore": "Get performance of specific team", "timezone_by_area_for_world_time": "Request a list of valid locations for an area", "user_feed_for_100_success_instagram_api_scalable_robust": "Get user feed"}, "aseqs": [{"api_name": "timezone_by_area_for_world_time", "api_action": "\nAction: timezone_by_area_for_world_time\nAction Input: {\n  \"area\": \"Europe\"\n}", "api_reaction": null}, {"api_name": "current_time_by_ip_for_world_time", "api_action": "\nAction: current_time_by_ip_for_world_time\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "timezone_by_area_for_world_time"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"timezone_by_area_for_world_time\",\n\t\"api_action\": \"{\\\"area\\\": \\\"Europe\\\"}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "timezone_by_area_for_world_time", "api_action": "\nAction: timezone_by_area_for_world_time\nAction Input: {\n  \"area\": \"Europe\"\n}", "api_reaction": null}}]}
{"URL": "44148", "query": "I want to analyze the play-by-play events, game matrix, and probability data for the baseball game with game ID 633282. Can you also provide the schedule and boxscore information? Thank you in advance!", "api_names": ["game_boxscore_gamepk_for_baseball", "game_matrix_gamepk_for_baseball", "Finish", "game_probability_gamepk_for_baseball", "schedule_for_baseball", "game_playbyplay_gamepk_for_baseball", "avatar_for_initials_avatar", "autocomplete_for_zillow_data_v2", "admin_divisions_near_location_for_geodb_cities", "actors_list_born_today_for_imdb", "get_company_data_by_id_for_fresh_linkedin_profile_data", "search_for_superhero_search", "petfoods_for_petfood", "getgeneration_for_dream_diffusion", "get_the_states_for_location", "consumer_name_search_for_data_axle_consumer_search", "searchoffers_for_google_jobs", "get_team_info_for_valorant_esports_v2", "table_tennis_live_matches_for_sports_live_scores", "get_media_data_for_instagram_fast"], "api_descs": {"Finish": "No description available.", "actors_list_born_today_for_imdb": "List all actors and actresses by day and month", "admin_divisions_near_location_for_geodb_cities": "Get administrative divisions near the given location, filtering by optional criteria.", "autocomplete_for_zillow_data_v2": "Find location for search", "avatar_for_initials_avatar": "Generates initials avatar", "consumer_name_search_for_data_axle_consumer_search": "Find relevant People in the Data Axle database", "game_boxscore_gamepk_for_baseball": "Query Baseball games, teams, scores etc...", "game_matrix_gamepk_for_baseball": "Query Baseball scores, stats, betting information etc...", "game_playbyplay_gamepk_for_baseball": "Query Baseball games, teams, scores etc...", "game_probability_gamepk_for_baseball": "Query Baseball probability data.", "get_company_data_by_id_for_fresh_linkedin_profile_data": "Given a company’s LinkedIn internal ID, the API will return valuable data points in JSON format. **1 credit per call.**", "get_media_data_for_instagram_fast": "Get media data by post short code or url", "get_team_info_for_valorant_esports_v2": "Get comprehensive information about a team, including player details, events, results, and more.", "get_the_states_for_location": "Get the states.", "getgeneration_for_dream_diffusion": "Gets the generation status and generated images", "petfoods_for_petfood": "petfoods", "schedule_for_baseball": "Baseball schedule", "search_for_superhero_search": "This endpoint searches through our superhero database", "searchoffers_for_google_jobs": "get all offers url", "table_tennis_live_matches_for_sports_live_scores": "Returns Table Tennis Live Matches with betting odds"}, "aseqs": [{"api_name": "game_playbyplay_gamepk_for_baseball", "api_action": "\nAction: game_playbyplay_gamepk_for_baseball\nAction Input: {\n  \"gamepk\": \"633282\"\n}", "api_reaction": null}, {"api_name": "game_matrix_gamepk_for_baseball", "api_action": "\nAction: game_matrix_gamepk_for_baseball\nAction Input: {\n  \"gamepk\": \"633282\"\n}", "api_reaction": null}, {"api_name": "game_probability_gamepk_for_baseball", "api_action": "\nAction: game_probability_gamepk_for_baseball\nAction Input: {\n  \"gamepk\": \"633282\"\n}", "api_reaction": null}, {"api_name": "schedule_for_baseball", "api_action": "\nAction: schedule_for_baseball\nAction Input: {}", "api_reaction": null}, {"api_name": "game_boxscore_gamepk_for_baseball", "api_action": "\nAction: game_boxscore_gamepk_for_baseball\nAction Input: {\n  \"gamepk\": \"633282\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "game_playbyplay_gamepk_for_baseball"}}, {"state": "generated_by_agent", "aseq": {"api_name": "game_matrix_gamepk_for_baseball"}}, {"state": "generated_by_agent", "aseq": {"api_name": "game_boxscore_gamepk_for_baseball"}}, {"state": "generated_by_agent", "aseq": {"api_name": "game_boxscore_gamepk_for_baseball"}}, {"state": "generated_by_agent", "aseq": {"api_name": "game_boxscore_gamepk_for_baseball"}}, {"state": "generated_by_agent", "aseq": {"api_name": "game_playbyplay_gamepk_for_baseball"}}]}
{"URL": "28902", "query": "I'm planning a trip to Boston and would like to know the hospitals in the area. Can you give me the names, addresses, and phone numbers of these hospitals?", "api_names": ["gethospitalsbyname_for_us_hospitals", "Finish", "cashabck_for_free_cashback", "course_name_for_udemy_course_scrapper_api", "top_losers_for_cryptocurrency_markets", "facilities_lookup_for_uganda_api", "check_balance_for_d7_verify", "novel_novel_id_for_web_novel_api", "getcatalogtenant_for_auth", "bd_upazila_for_bd"], "api_descs": {"Finish": "No description available.", "bd_upazila_for_bd": " ", "cashabck_for_free_cashback": "Access this for cashback feed", "check_balance_for_d7_verify": "Get information about current balance on your D7API account", "course_name_for_udemy_course_scrapper_api": "Provide course name", "facilities_lookup_for_uganda_api": "This endpoint allows you to get facilities in Uganda like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "getcatalogtenant_for_auth": "Get tenant information. Internal endpoint only available to other services.", "gethospitalsbyname_for_us_hospitals": "###Find US Hospitals by name.\nSimply add your search string to the \"name\" parameter in the url.\nTip:  The API also works if your search for *name='pr'* instead of *name='presbyterian'.* \n\n**Note**: The API only returns the first 30 results.", "novel_novel_id_for_web_novel_api": "Returns the full Details Page for the Requested Novel ID.", "top_losers_for_cryptocurrency_markets": "Cryptocurrencies with the most losses today."}, "aseqs": [{"api_name": "gethospitalsbyname_for_us_hospitals", "api_action": "\nAction: gethospitalsbyname_for_us_hospitals\nAction Input: {\n  \"name\": \"Boston\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gethospitalsbyname_for_us_hospitals"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gethospitalsbyname_for_us_hospitals"}}]}
{"URL": "69125", "query": "I'm a sports blogger and I want to create engaging content about the latest sports events and odds on Dafabet. Can you fetch the matches and odds for football, basketball, and tennis? I want to provide insights and predictions to my readers.", "api_names": ["odds_for_dafabet", "matches_for_dafabet", "Finish", "eventresponses_for_31events_send_native_calendar_invites", "show_all_series_for_vod_app", "get_latest_news_for_global_stock_market_api_data", "instagram_account_verifyer_for_account_verifyer", "get_country_list_for_travel_hacking_tool", "get_top_50_cryptocurrencies_details_for_crypto_update_live", "getyourstoreinformation_for_ecartapi", "get_basic_details_dp_for_instagram_dp_download", "wnba_teams_for_wnba_api", "mentions_tags_notifications_for_scraptik", "get_holo_balance_from_specific_network_for_cryptocurrency_balance", "is_sabbath_day_for_enoch_calendar"], "api_descs": {"Finish": "No description available.", "eventresponses_for_31events_send_native_calendar_invites": "", "get_basic_details_dp_for_instagram_dp_download": "get basic details and Instagram DP download link", "get_country_list_for_travel_hacking_tool": "This endpoint returns a list of country codes (ISO-3166).", "get_holo_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the Holo balance of an address in a specific network.", "get_latest_news_for_global_stock_market_api_data": "View the latest financial news articles published on Investing.com. Read the most recent stories and breaking news, covering all aspects of financial markets worldwide, including commodities, stocks, currencies, indices and more.", "get_top_50_cryptocurrencies_details_for_crypto_update_live": "This endpoint gives all the details of the top fifty cryptocurrencies.", "getyourstoreinformation_for_ecartapi": "Access store information fast with the access token we provided.", "instagram_account_verifyer_for_account_verifyer": "to verify Instagram account", "is_sabbath_day_for_enoch_calendar": "Is supplied date string or today a Sabbath day", "matches_for_dafabet": "Latest Matches for Dafabet", "mentions_tags_notifications_for_scraptik": "Show \"Mentions & Tags \" account notifications.", "odds_for_dafabet": "Latest Odds for Dafabet", "show_all_series_for_vod_app": "Show all series", "wnba_teams_for_wnba_api": "The endpoint provides you with a list of all WNBA teams."}, "aseqs": [{"api_name": "matches_for_dafabet", "api_action": "\nAction: matches_for_dafabet\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_dafabet", "api_action": "\nAction: odds_for_dafabet\nAction Input: {}", "api_reaction": null}, {"api_name": "matches_for_dafabet", "api_action": "\nAction: matches_for_dafabet\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_dafabet", "api_action": "\nAction: odds_for_dafabet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_dafabet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_dafabet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_dafabet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_dafabet", "api_action": "\nAction: matches_for_dafabet\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_dafabet"}}]}
{"URL": "69699", "query": "My company is organizing a Formula 1 event and we want to showcase the current season races and the constructor standings. Can you fetch the race information and the constructor standings for the current season? We need the race name, date, location, team name, position, and points.", "api_names": ["constructor_standings_for_formula_1_standings", "races_for_formula_1_standings", "Finish", "hashtagmedias_for_instagram_v6", "leaguetotalteamevents_for_esportapi", "earning_call_transcript_api_premium_for_financial_modeling_prep", "search_quotes_for_tronald_dump", "scramble_word_for_word_scramble", "token_for_cpf_format_validation", "get_ip_for_ipinfoapi", "get_castes_for_matrimony_profiles", "categoryschedules_for_esportapi", "getphonenumbers_for_mailslurp_email_testing", "flights_list_most_tracked_for_flight_radar", "get_album_tracks_for_spotify_data_api", "get_all_restaurants_by_chain_city_state_for_fast_food_restaurants_usa_top_50_chains", "actors_get_all_videos_for_imdb", "event_commentary_alt_cricket_for_flashlive_sports"], "api_descs": {"Finish": "No description available.", "actors_get_all_videos_for_imdb": "Get all videos of actor or actress", "categoryschedules_for_esportapi": "Get e-sports schedules for a specific day from a specific category.", "constructor_standings_for_formula_1_standings": "Get the current season constructor standings.", "earning_call_transcript_api_premium_for_financial_modeling_prep": "Analyzing Earnings Conference Call With NLP", "event_commentary_alt_cricket_for_flashlive_sports": "Get a comment on an event (cricket) by event ID", "flights_list_most_tracked_for_flight_radar": "Return the most tracked flights around the world", "get_album_tracks_for_spotify_data_api": "Get album tracks by album ID", "get_all_restaurants_by_chain_city_state_for_fast_food_restaurants_usa_top_50_chains": "**10 results per request. Use page number for Pagination.**", "get_castes_for_matrimony_profiles": "Get All Castes", "get_ip_for_ipinfoapi": "Get user's IP", "getphonenumbers_for_mailslurp_email_testing": " ", "hashtagmedias_for_instagram_v6": "Get hashtag medias", "leaguetotalteamevents_for_esportapi": "Get last 5 events for a specific E-Sports league by providing the tournament ID and season ID.", "races_for_formula_1_standings": "It will return the current season races with basic information.", "scramble_word_for_word_scramble": "Call scramble with {word} parameter", "search_quotes_for_tronald_dump": "Free text search for quotes.", "token_for_cpf_format_validation": "Returns the authentication token."}, "aseqs": [{"api_name": "races_for_formula_1_standings", "api_action": "\nAction: races_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "constructor_standings_for_formula_1_standings", "api_action": "\nAction: constructor_standings_for_formula_1_standings\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}, {"state": "generated_by_agent", "aseq": {"api_name": "constructor_standings_for_formula_1_standings"}}, {"state": "generated_by_agent", "aseq": {"api_name": "races_for_formula_1_standings"}}]}
{"URL": "40853", "query": "I am building a webcomic site and I want to display the likes count for a specific episode. Can you help me fetch the likes count for episode number 5 of the comic with title number 300138? Also, it would be great if you could provide the episode information and photo links using the 'canvas/episodes/get-likes' and 'canvas/episodes/get-info' APIs.", "api_names": ["canvas_episodes_get_likes_for_webtoon", "Finish", "canvas_episodes_get_info_for_webtoon", "originals_episodes_get_likes_for_webtoon", "get_social_moving_averages_1m_for_finance_social_sentiment_for_twitter_and_stocktwits", "weather_for_kayuloweather", "description_for_numerology_api", "job_details_for_jsearch", "wallets_assets_by_chain_for_defi_watch", "get_all_ai_news_for_ai_news_v2", "yesterday_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions", "product_details_experimental_for_real_time_amazon_data", "get_supported_timezones_for_location_and_time", "get_property_type_filters_for_airbnb_v2", "email_for_mailcheck", "get_user_activity_pins_for_pinterest_scraper"], "api_descs": {"Finish": "No description available.", "canvas_episodes_get_info_for_webtoon": "Get episode and photo links.\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "canvas_episodes_get_likes_for_webtoon": "Get likes count of a episode", "description_for_numerology_api": " ", "email_for_mailcheck": "Check if an email is disposable", "get_all_ai_news_for_ai_news_v2": "This endpoint will return back all news about artificial intelligence around the world", "get_property_type_filters_for_airbnb_v2": "-", "get_social_moving_averages_1m_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by monthly intervals.", "get_supported_timezones_for_location_and_time": "Get all supported timezones.", "get_user_activity_pins_for_pinterest_scraper": "Get User Activity Pins", "job_details_for_jsearch": "Get all job details, including additional application options / links, employer reviews and estimated salaries for similar jobs.", "originals_episodes_get_likes_for_webtoon": "Get likes count of a episode", "product_details_experimental_for_real_time_amazon_data": "Get product details. Currently returns the Product Information table data, as seen on specific product pages on Amazon.com (e.g. https://www.amazon.com/dp/B09TBLBFXC).", "wallets_assets_by_chain_for_defi_watch": "Get all assets on wallet by chain", "weather_for_kayuloweather": "Obtain weather data for the specified location.\n\nThe `dataSets` query parameter is used to obtain different data, like forecasts and current weather. Thus not all query parameters are needed for every data set. See the description of the query parameters to identify, which parameter is needed for which data set.", "yesterday_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions": "This endpiont delivers yesterday BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."}, "aseqs": [{"api_name": "originals_episodes_get_likes_for_webtoon", "api_action": "\nAction: originals_episodes_get_likes_for_webtoon\nAction Input: {\n  \"titleno\": 300138,\n  \"episodeno\": 5\n}", "api_reaction": null}, {"api_name": "canvas_episodes_get_info_for_webtoon", "api_action": "\nAction: canvas_episodes_get_info_for_webtoon\nAction Input: {\n  \"titleno\": 300138,\n  \"episodeno\": 5\n}", "api_reaction": null}, {"api_name": "canvas_episodes_get_likes_for_webtoon", "api_action": "\nAction: canvas_episodes_get_likes_for_webtoon\nAction Input: {\n  \"titleno\": 300138,\n  \"episodeno\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get the likes count for episode number 5 of webtoon with title number 300138 and also fetch the episode information and photo links using the respective APIs called 'canvas_episodes_get_likes_for_webtoon' and 'canvas_episodes_get_info_for_webtoon'.\n\t\"api_name\": \"canvas_episodes_get_likes_for_webtoon\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "canvas_episodes_get_info_for_webtoon"}}, {"state": "generated_by_agent", "aseq": {"api_name": "originals_episodes_get_likes_for_webtoon", "api_action": "\nAction: originals_episodes_get_likes_for_webtoon\nAction Input: {\n  \"titleno\": 300138,\n  \"episodeno\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "originals_episodes_get_likes_for_webtoon"}}]}
{"URL": "47936", "query": "I'm organizing a team building event in Lagos and I need to find nearby facilities. Can you fetch me a list of nearby colleges, restaurants, and banks? Also, I'd like to know the distance between the event venue and the nearest hospital. Finally, can you provide me with the reverse geocode of the event venue?", "api_names": ["reverse_geocode_for_nigeria_api", "facilities_lookup_for_nigeria_api", "measure_distance_for_nigeria_api", "Finish", "get_your_data_for_request_boomerang", "subtitlelist_for_youtube_video_subtitles_list", "ip_to_location_for_ip_to_location", "teams_by_competition_season_for_rugby_live_data", "fetch_message_for_zigatext_global_bulk_sms_otp", "latest_rates_for_commodity_rates_api", "iex_short_interest_list_for_investors_exchange_iex_trading", "getcasessince_for_360_business_tool", "trending_feed_video_posts_for_social_media_data_tt", "type_parent_get_highest_rated_investments_for_morning_star", "getaccount_for_background_remover", "walk_transit_and_bike_score_for_zillow_v2", "remove_profanity_for_purgomalum", "get_player_placeholder_for_cricketapi2", "get_nfts_for_felina_multisig_wallet_api", "check_user_exists_for_waifu"], "api_descs": {"Finish": "No description available.", "check_user_exists_for_waifu": "Check user exists", "facilities_lookup_for_nigeria_api": "This endpoint allows you to get facilities in Nigeria like hospital, bank, college, etc. by providing optional query parameters for facility type, state and city. It returns a list of facilities that match the query parameters.", "fetch_message_for_zigatext_global_bulk_sms_otp": "Fetch Message", "get_nfts_for_felina_multisig_wallet_api": "Fetch the list of owned NFTs by the wallet", "get_player_placeholder_for_cricketapi2": "Get the player placeholder image in PNG format.", "get_your_data_for_request_boomerang": "Returns the data that you provide. The data parameter must be a valid JSON", "getaccount_for_background_remover": "Returns a description of your user account information.\nUseful to get the remaining credits on your account\n", "getcasessince_for_360_business_tool": "Get cases modified since", "iex_short_interest_list_for_investors_exchange_iex_trading": "Consolidated market short interest positions in all IEX-listed securities", "ip_to_location_for_ip_to_location": "Get location details from IP address", "latest_rates_for_commodity_rates_api": "Check the real-time exchange rate data updated every 60 seconds with this endpoint. \n \n\nNote: All the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD", "measure_distance_for_nigeria_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Lagos and Abuja**", "remove_profanity_for_purgomalum": "Calling the web service involves a simple HTTP GET request. The only two requirements for using PurgoMalum are the \"text\" parameter on the query string and the request-type name as part of the path in the request", "reverse_geocode_for_nigeria_api": "This endpoint allows you to perform reverse geocoding in Nigeria by providing query parameters for latitude and longitude. It returns the name of the city where the location is located.", "subtitlelist_for_youtube_video_subtitles_list": "Get list of subtitle for video", "teams_by_competition_season_for_rugby_live_data": "Lists teams for a given competition and season", "trending_feed_video_posts_for_social_media_data_tt": "Get current trending feed. \n\n- Due to nature of this endpoint the **max_cursor** is not required. Each request can return different data by default\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "type_parent_get_highest_rated_investments_for_morning_star": "Get highest rated investments as displayed in the Parent tab", "walk_transit_and_bike_score_for_zillow_v2": "Get Walk, Transit and Bike Score of a property by zpid"}, "aseqs": [{"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"college\",\n  \"limit\": \"5\"\n}", "api_reaction": null}, {"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"restaurant\",\n  \"limit\": \"5\"\n}", "api_reaction": null}, {"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"bank\",\n  \"limit\": \"5\"\n}", "api_reaction": null}, {"api_name": "measure_distance_for_nigeria_api", "api_action": "\nAction: measure_distance_for_nigeria_api\nAction Input: {\n  \"lat1\": 6.4537028,\n  \"lon1\": 3.3947981,\n  \"lat2\": 6.4362325,\n  \"lon2\": 3.426210638956216,\n  \"unit\": \"km\"\n}", "api_reaction": null}, {"api_name": "reverse_geocode_for_nigeria_api", "api_action": "\nAction: reverse_geocode_for_nigeria_api\nAction Input: {\n  \"lat\": \"6.4537028\",\n  \"lon\": \"3.3947981\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": The user wants to find nearby colleges, restaurants, and banks in Lagos along with the distance between these facilities and the nearest hospital. Additionally, they want to know the reverse geocode of their event venue.\n\t\"api_name\": \"facilities_lookup_for_nigeria_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"restaurant,bar\",\n  \"limit\": \"5\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"bank\",\n  \"limit\": \"5\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"hospital\",\n  \"limit\": \"1\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"hospital\",\n  \"limit\": \"5\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_nigeria_api", "api_action": "\nAction: facilities_lookup_for_nigeria_api\nAction Input: {\n  \"state\": \"Lagos\",\n  \"type\": \"hospitals\",\n  \"limit\": \"1\"\n}", "api_reaction": null}}]}
{"URL": "57583", "query": "I'm a football enthusiast and always looking for the latest football highlights. Can you recommend a website or app that offers embedded links to the best live football highlights? It would be great if the platform supports multiple sources like YouTube and Ok.RU. Thank you!", "api_names": ["ok_ru_emb_link_for_football_highlight", "elhighlights_for_football_highlight", "Finish", "getdiscusage_for_groupdocs_signature_cloud", "getfaqs_for_election2020_smartable", "get_all_tenants_for_yardillo", "monthly_volume_by_gallery_for_most_expensive_nft_artworks", "ep1_for_8prd2t1api1", "generate_qr_code_for_free_qr_code_generator", "search_multi_for_soccerway_feed", "sample_predictions_for_betigolo_predictions", "searchinventory_for_fortnitecosmetics", "v1_caloriesburned_for_calories_burned_by_api_ninjas", "getaccountinfos_for_4bro_1337x", "seller_profile_for_rainforest"], "api_descs": {"Finish": "No description available.", "elhighlights_for_football_highlight": "Elhighlights", "ep1_for_8prd2t1api1": "ep1 test", "generate_qr_code_for_free_qr_code_generator": "Turn Word to QR Code with just one request", "get_all_tenants_for_yardillo": "This returns all your Tenants", "getaccountinfos_for_4bro_1337x": "GetAccountInfos", "getdiscusage_for_groupdocs_signature_cloud": " ", "getfaqs_for_election2020_smartable": "Get election 2020 FAQs.", "monthly_volume_by_gallery_for_most_expensive_nft_artworks": "Get list of monthly volume by gallery", "ok_ru_emb_link_for_football_highlight": "Ok.RU Emb Link", "sample_predictions_for_betigolo_predictions": "Get a list of a sample of matches of the previous day, including predictions for many markets.", "search_multi_for_soccerway_feed": "Search team, player by query", "searchinventory_for_fortnitecosmetics": "By passing in the appropriate options, you can search for\navailable inventory in the system\n", "seller_profile_for_rainforest": "The Seller Profile Parameters are applicable when making a request with type=seller_profile to retrieve seller profile details for a single seller on Amazon - the seller is specified using either the seller_id and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon seller profile page). The parameters should be appended as querystring parameters to the Product Data APIGETHTTP request.\n\nSeller profile details are retrieved from the seller profile page for a single seller on Amazon. You can retrieve the seller_id value for a given seller from other Rainforest requests, such as type=offers requests.\n\nYou can use subsequent seller products and seller feedback requests to retrieve iterate all of the products and customer feedback from a given seller.", "v1_caloriesburned_for_calories_burned_by_api_ninjas": "API Ninjas Calories Burned API endpoint."}, "aseqs": [{"api_name": "ok_ru_emb_link_for_football_highlight", "api_action": "\nAction: ok_ru_emb_link_for_football_highlight\nAction Input: {}", "api_reaction": null}, {"api_name": "elhighlights_for_football_highlight", "api_action": "\nAction: elhighlights_for_football_highlight\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ok_ru_emb_link_for_football_highlight"}}, {"state": "generated_by_agent", "aseq": {"api_name": "elhighlights_for_football_highlight"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ok_ru_emb_link_for_football_highlight"}}]}
{"URL": "12795", "query": "I'm planning a family reunion and I need help with the color scheme for the event. Can you suggest a random set of colors for the decorations? Additionally, I would like to see a specific color set based on the input color 'purple'. Your assistance is greatly appreciated.", "api_names": ["Finish", "specificcolorset_for_colorme", "randomcolorset_for_colorme", "flightstatistics_for_flightera_flight_data", "all_citites_for_nomad_list_cities", "all_german_cities_for_locations_languages_countries_german_cities", "top_grossing_ios_apps_for_app_store", "profiles_for_bogieapis", "getlearningresources_for_power_bi_smartable", "user_story_highlight_metadata_for_instagram_data", "generate_league_of_legends_champion_for_league_of_legends_champion_generator", "tmall_search_by_keyword_for_taobao_tmall_product_detail", "entreprise_par_rid_for_ridet_nc", "converting_currencies_for_currency_exchange_rates", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car"], "api_descs": {"Finish": "No description available.", "all_citites_for_nomad_list_cities": "Get all cities sorted by overall score.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "all_german_cities_for_locations_languages_countries_german_cities": "Get all German cities", "converting_currencies_for_currency_exchange_rates": "The /convert/ endpoint is similar to the /live/ and /historical/ endpoints, except it allows you to convert an arbitrary amount of currency.\n\nFor example, it calculates how many EUR you would get for 1,337.99 USD today, or how many GBP and CAD you'd get for that amount on January 1, 2020.", "entreprise_par_rid_for_ridet_nc": "Affiche les informations d'une entreprise de la Nouvelle Calédonie à partir de son rid.", "flightstatistics_for_flightera_flight_data": "Returns statistics for a flight number with one entry per route flown. Statistics are updated daily.\nThe query can be filtered by route.\nStatistics are always as of today, please contact us if you require historical statistics.", "generate_league_of_legends_champion_for_league_of_legends_champion_generator": "Will generate a new champion along with its passive and standard abilities.", "getlearningresources_for_power_bi_smartable": "Get Power BI learning resources.", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car": "Pluses and minuses of the car", "profiles_for_bogieapis": "asd", "randomcolorset_for_colorme": "Get a random set of colors", "specificcolorset_for_colorme": "Get a set of colors based on input color like - \"yellow\" / \"red\"", "tmall_search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword", "top_grossing_ios_apps_for_app_store": "Get list of the top grossing ios apps", "user_story_highlight_metadata_for_instagram_data": "Get user story highlight metadata from a direct url to a story"}, "aseqs": [{"api_name": "randomcolorset_for_colorme", "api_action": "\nAction: randomcolorset_for_colorme\nAction Input: {}", "api_reaction": null}, {"api_name": "specificcolorset_for_colorme", "api_action": "\nAction: specificcolorset_for_colorme\nAction Input: {\"colorname\": \"purple\"}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "randomcolorset_for_colorme"}}, {"state": "generated_by_agent", "aseq": {"api_name": "specificcolorset_for_colorme", "api_action": "{\"input_color\": \"purple\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "randomcolorset_for_colorme"}}]}
{"URL": "21157", "query": "Can you retrieve the population and growth rate data for the year 2020? I'm interested in studying the recent trends.", "api_names": ["Finish", "get_by_filter_for_world_population_by_decade_and_growth_rate", "get_by_decade_for_world_population_by_decade_and_growth_rate", "checkthatphone_for_checkthatphone", "ip2proxy_api_for_ip2proxy", "personasapi_for_personas", "matches_for_official_world_cup", "getmusic_for_tiktok_info", "get_supported_languages_for_aibit_translator", "uuid_to_name_for_minecraft_uuid_converter", "getlenscreators_for_snapchat", "senses_for_lexicala", "get_all_subcategories_for_reuters_business_and_financial_news", "recipes_list_for_tasty", "consumer_address_search_for_data_axle_consumer_address_search", "locations_for_jet_set_radio_api", "football_predictions_by_day_for_betigolo_predictions", "trending_stocks_for_sec_filings"], "api_descs": {"Finish": "No description available.", "checkthatphone_for_checkthatphone": "Validation, carrier look-up, line type, portability status, geoIP and timezone, routing.\nSimply provide a United States phone number and an ip (optional) to get a result.", "consumer_address_search_for_data_axle_consumer_address_search": "Find relevant People in the Data Axle database", "football_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.", "get_all_subcategories_for_reuters_business_and_financial_news": "Get all SubCategories", "get_by_decade_for_world_population_by_decade_and_growth_rate": "Get by decade", "get_by_filter_for_world_population_by_decade_and_growth_rate": "Get by filter", "get_supported_languages_for_aibit_translator": "Get list support languages by AIbit", "getlenscreators_for_snapchat": "getLensCreators", "getmusic_for_tiktok_info": "Get all the TikTok videos that are using a specific music along with the information about original music", "ip2proxy_api_for_ip2proxy": "Proxy Detection API", "locations_for_jet_set_radio_api": "Returns a list of all Locations in JSR/JSRF", "matches_for_official_world_cup": "", "personasapi_for_personas": "RapidAPI’s official API that allows you to add or update your API’s definition.", "recipes_list_for_tasty": "List recipes by option filters or name", "senses_for_lexicala": "get specific sense by its unique ID", "trending_stocks_for_sec_filings": "Returns the top  trending stocks on Last10K.com right now with the most viewed <strong>10-K / 20-F / 40-F Annual Reports</strong> and <strong>10-Q Quarterly SEC Filings</strong>.\n\nView live data at: https://last10k.com/stock-screeners/trending", "uuid_to_name_for_minecraft_uuid_converter": "Convert your Mineccraft UUID to a Name"}, "aseqs": [{"api_name": "get_by_filter_for_world_population_by_decade_and_growth_rate", "api_action": "\nAction: get_by_filter_for_world_population_by_decade_and_growth_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_decade_for_world_population_by_decade_and_growth_rate", "api_action": "\nAction: get_by_decade_for_world_population_by_decade_and_growth_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_decade_for_world_population_by_decade_and_growth_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_decade_for_world_population_by_decade_and_growth_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_decade_for_world_population_by_decade_and_growth_rate"}}]}
{"URL": "67952", "query": "I want to create a list of 100 fake users with their personal details, such as names, birthdays, addresses, and VAT IDs. Can you help me with this?", "api_names": ["persons_for_seeding_data", "Finish", "query_horses_for_horse_racing", "by_zip_code_for_homeless_shelter", "random_girl_group_for_k_pop", "get_inboxes_for_intelligent_automation_ocr_ai_", "compressed_aggregate_trades_list_for_crypto_markets", "get_all_ethereum_news_for_crypto_news_v11"], "api_descs": {"Finish": "No description available.", "by_zip_code_for_homeless_shelter": "Search Homeless Shelters by Zip Code", "compressed_aggregate_trades_list_for_crypto_markets": "Compressed/Aggregate Trades List", "get_all_ethereum_news_for_crypto_news_v11": "This endpoint will return news articles from over 70 different websites about Ethereum", "get_inboxes_for_intelligent_automation_ocr_ai_": "Get a list of inboxes with their ids", "persons_for_seeding_data": "Get 100 persons with en_US locale and gender female", "query_horses_for_horse_racing": "Search horses by name. \nOnce you get \"*id_horse*\" from this query, you can get horses stats from \"**Horse stats**\" endpoint.", "random_girl_group_for_k_pop": "Get random girl-group"}, "aseqs": [{"api_name": "persons_for_seeding_data", "api_action": "\nAction: persons_for_seeding_data\nAction Input: {\n\"locale\": \"en_US\",\n\"quantity\": 100,\n\"gender\": \"female\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "persons_for_seeding_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "persons_for_seeding_data"}}]}
{"URL": "37784", "query": "I would like to translate a document from English to German. Could you please provide me with the list of supported languages for translation? Also, I want to know all the available languages supported by this translation tool.", "api_names": ["translate_languages_for_cheap_translate", "goo_translate_languages_for_cheap_translate", "Finish", "difference_calendar_for_daysapi", "indonesia_credit_pricelist_for_ppob", "get_the_market_calendar_for_tradier", "get_car_models_for_infocarsapi", "title_get_overview_details_for_imdb", "getbooksbytitlesearch_for_reading_home_apis", "get_media_story_post_reel_other_info_by_shortcode_for_instagram_api_2023", "api_schedulechangeaccept_mfref_flightid_for_asr_hub", "searchbusiness_for_google_reviews_scraper"], "api_descs": {"Finish": "No description available.", "api_schedulechangeaccept_mfref_flightid_for_asr_hub": "Accept Schedule Change based on the UserInputs\r\n - MFRef\r\n - Flight Id", "difference_calendar_for_daysapi": "This endpoint takes in two dates and calculates the difference for\nyou with the queries you enter.", "get_car_models_for_infocarsapi": "This endpoint will return back all the models of a respective car maker", "get_media_story_post_reel_other_info_by_shortcode_for_instagram_api_2023": "Get brief media (story, post, reel & other) info by shortcode.", "get_the_market_calendar_for_tradier": "", "getbooksbytitlesearch_for_reading_home_apis": "Get Paginated List of Books on Title Searched", "goo_translate_languages_for_cheap_translate": "Get all Goog supported language", "indonesia_credit_pricelist_for_ppob": "This Endpoint is for Indonesia only.\nThe Credit & Data Pricelist API is used to display the list of available credit and data prices on PulsaXpress. This information can be used to know the price of the products you want to buy before making a transaction. This price information can be updated according to the current prices and can be used to determine the prices offered on your application.", "searchbusiness_for_google_reviews_scraper": "with this endpoint you can search the business you want to get their reviews and ratings", "title_get_overview_details_for_imdb": "Get overview information of the title", "translate_languages_for_cheap_translate": "Get all supported language"}, "aseqs": [{"api_name": "translate_languages_for_cheap_translate", "api_action": "\nAction: translate_languages_for_cheap_translate\nAction Input: {}", "api_reaction": null}, {"api_name": "goo_translate_languages_for_cheap_translate", "api_action": "\nAction: goo_translate_languages_for_cheap_translate\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "translate_languages_for_cheap_translate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_languages_for_cheap_translate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_languages_for_cheap_translate"}}]}
{"URL": "78716", "query": "Fetch the ticker records for the 'gold' ticker from April 12, 2010, at 2:30 PM to April 20, 2010, at 12:30 PM. Additionally, I would like to know the server uptime and version.", "api_names": ["ping_for_stocks_archive", "tickerdata_for_stocks_archive", "Finish", "topscorersbyseasontotalpoints_for_nba_statistics_api", "get_all_cities_for_biggest_cities", "get_all_joke_categories_for_the_dozen_the_yo_mamsa_roast_api", "uniquestageimage_for_motorsportapi", "get_supported_coins_handler_for_fan_crypto_coins", "get_invite_data_for_discord_lookup", "get_vault_by_name_for_mongodb_wix", "properties_list_deprecated_for_hotels", "getchannelvideos_for_vimeo"], "api_descs": {"Finish": "No description available.", "get_all_cities_for_biggest_cities": "Get all cites", "get_all_joke_categories_for_the_dozen_the_yo_mamsa_roast_api": "Returns a list of all joke categories, whose as values can be used as a path or query parameter in other endpoints.", "get_invite_data_for_discord_lookup": "Fetches detailed data, including hidden data of invites or vanities", "get_supported_coins_handler_for_fan_crypto_coins": " ", "get_vault_by_name_for_mongodb_wix": "Get Vault by name", "getchannelvideos_for_vimeo": "Get a list of the videos in a channel.", "ping_for_stocks_archive": "Check that server is still alive", "properties_list_deprecated_for_hotels": "List properties with options and filters", "tickerdata_for_stocks_archive": "Returns a list of ticker records", "topscorersbyseasontotalpoints_for_nba_statistics_api": "## Return top players by total points in descending order.\n\n_Season is specified in the URL._", "uniquestageimage_for_motorsportapi": "Get image for a specific Motorsport unique stage."}, "aseqs": [{"api_name": "tickerdata_for_stocks_archive", "api_action": "\nAction: tickerdata_for_stocks_archive\nAction Input: {\n  \"tickername\": \"gold\",\n  \"period\": \"minute\",\n  \"startdate\": \"2010-04-12T14:30:00\",\n  \"enddate\": \"2010-04-20T12:30:00\"\n}", "api_reaction": null}, {"api_name": "ping_for_stocks_archive", "api_action": "\nAction: ping_for_stocks_archive\nAction Input: {}", "api_reaction": null}, {"api_name": "tickerdata_for_stocks_archive", "api_action": "\nAction: tickerdata_for_stocks_archive\nAction Input: {\n  \"tickername\": \"gold\",\n  \"period\": \"hourly\",\n  \"startdate\": \"2010-04-12T14:30:00\",\n  \"enddate\": \"2010-04-20T12:30:00\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tickerdata_for_stocks_archive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tickerdata_for_stocks_archive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tickerdata_for_stocks_archive"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_deprecated_for_hotels"}}]}
{"URL": "6863", "query": "I'm organizing a dog show and I need to create a comprehensive program that includes all dog breeds. Can you please provide me with a list of all dog breeds available? Additionally, I would like to display a single random image of a dog from the collection to showcase the breed diversity. Thank you!", "api_names": ["getbreeds_for_dog_api", "getrandom_for_dog_api", "Finish", "drawings_between_dates_for_lotto_america", "recent_changes_for_supersaas_online_bookings_and_appointment_scheduling", "products_v3_detail_for_asos", "validate_access_using_basic_authentication_for_pe_demo", "search_on_sale_games_for_epic_store_games", "search_for_videos_movies_for_youtube_media_downloader", "show_account_for_flowplayer_drive", "languages_for_hackerrank", "regions_for_google_trends", "cash_flow_statement_for_financial_statements", "getdiscloseddaterange_for_jp_funda", "api_bestsales_sortedbynewest_for_magic_aliexpress", "results_by_date_for_cricket_live_data", "makes_for_car_data", "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io"], "api_descs": {"Finish": "No description available.", "api_bestsales_sortedbynewest_for_magic_aliexpress": "Retrieves the last best product added in the system", "cash_flow_statement_for_financial_statements": "Get company cash flow statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.", "drawings_between_dates_for_lotto_america": "Get all Lotto America winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date.", "getbreeds_for_dog_api": "LIST ALL BREEDS", "getdiscloseddaterange_for_jp_funda": "### Return securities report data Specified by the date range.\nNote: This endpoint requires the 2 query parameters, start_date and end_date\nNote: max date range is 31 days. if you want longer date range data, need to requesting API twice or more.", "getrandom_for_dog_api": "DISPLAY SINGLE RANDOM IMAGE FROM ALL DOGS COLLECTION", "languages_for_hackerrank": "This method provides you with information regarding the language codes which our code checker supports", "makes_for_car_data": "get a list of supported makes", "products_v3_detail_for_asos": "Get detail information of product by id", "query_for_postal_unit_boundary_by_h3index_for_uk_boundaries_io": "Query for Postal Unit Boundary by H3Index\n\nIf  a Postal Unit code exists within this hexagon a boundary is returned.\nadjusting the resolution(0-16) increases the hexagon area.\n\nhttps://eng.uber.com/", "recent_changes_for_supersaas_online_bookings_and_appointment_scheduling": "", "regions_for_google_trends": "The endpoint to retrieve a list of supported regions", "results_by_date_for_cricket_live_data": "Lists results for given date", "search_for_videos_movies_for_youtube_media_downloader": "This endpoint searches for YouTube videos (movies) with optional filters. Pagination scraping is supported. Thumbnails will not be blurred by age safety.", "search_on_sale_games_for_epic_store_games": "Search On Sale Games", "show_account_for_flowplayer_drive": "Shows the account", "validate_access_using_basic_authentication_for_pe_demo": "Validate access using basic authentication."}, "aseqs": [{"api_name": "getbreeds_for_dog_api", "api_action": "\nAction: getbreeds_for_dog_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getrandom_for_dog_api", "api_action": "\nAction: getrandom_for_dog_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbreeds_for_dog_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandom_for_dog_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getrandom_for_dog_api"}}]}
{"URL": "63901", "query": "Give me all the news related to cryptocurrencies and Bitcoin from various sources. Include articles from Cryptoslate and Forbes.", "api_names": ["specific_article_keyword_search_for_crypto_news_v2", "get_all_crypto_news_for_crypto_news_v2", "get_individual_news_source_for_crypto_news_v2", "Finish", "qanda_for_real_estate_exam", "generate_fake_credit_card_number_for_card_validator", "get_voices_for_speechnoted", "hashtag_challenge_info_for_tiktok_v4", "search_autocomplete_for_target_com_shopping_api", "tag_search_for_india_today_unofficial", "communes_par_code_commune_for_bps", "passage_of_the_day_api_for_complete_study_bible", "listofsupportedbanks_for_afterbanks_psd2_payments_and_bank_reader", "get_litecoin_block_hash_for_litecoin_wallet", "create_file_for_rushtranslate", "pl_decode_for_vin_decoder_v4", "create_a_group_for_whin", "c_14_versions_for_cpp_14_code_compiler", "songs_get_details_for_shazam_api", "search_cars_for_adzuna"], "api_descs": {"Finish": "No description available.", "c_14_versions_for_cpp_14_code_compiler": "C++ 14 Versions", "communes_par_code_commune_for_bps": "Récupérer les détails d'une commune depuis son code.", "create_a_group_for_whin": "This API will create a group, it will add you, and will promote you to Admin of the group. Check this [video](https://youtu.be/wD0DWoua0L4) to learn how to use it.", "create_file_for_rushtranslate": "Creates a new file. File uploads are limited to 100Mb in size. Each file may be attached to only one resource after creation.", "generate_fake_credit_card_number_for_card_validator": "This endpoint create a fake and valid credit card number with desired length.", "get_all_crypto_news_for_crypto_news_v2": "This endpoint will return all news with crypto and bitcoin from many different websites across the internet.", "get_individual_news_source_for_crypto_news_v2": "Get news about crypto from a specific news source. There are 18 news sources to choose from cryptonews, coindesk, crypto.news, yahoo, fxstreet, cointelegraph, businessinsider, cryptopotato, ambcrypto, cryptonewsline, cryptoglobe, coingecko, cryptoslate, bitcoinist, forbes, nulltx, blockonomi, and coinspeaker.", "get_litecoin_block_hash_for_litecoin_wallet": "Get Litecoin Block hash. Returns hash of the block to get the block detail.", "get_voices_for_speechnoted": "Get available voice", "hashtag_challenge_info_for_tiktok_v4": "Get Hashtag/Challenge Information By \"challenge_name\" or \"challenge_id\",\nand the endpoint will return Challenge Information.  //Notice: it will not return the challenge posts", "listofsupportedbanks_for_afterbanks_psd2_payments_and_bank_reader": "Get a complete list of supported banks, as well as the names of the fields needed to draw a login form similar to the bank's original.", "passage_of_the_day_api_for_complete_study_bible": "Responds with a passage of the day, KJV translation. Can be a single verse or multiple verses. Passages are pre-selected by the API owner and updated every 24 hours.", "pl_decode_for_vin_decoder_v4": "PL Decode", "qanda_for_real_estate_exam": "Returns all multiple choice and true or false questions with answers and feedback.", "search_autocomplete_for_target_com_shopping_api": "Product autocompletion based on search keyword.", "search_cars_for_adzuna": "Search Adzuna cars.", "songs_get_details_for_shazam_api": "get details about song", "specific_article_keyword_search_for_crypto_news_v2": "Takes a title and keyword that will then return any articles from a specific news source.", "tag_search_for_india_today_unofficial": "Get news as per the tag"}, "aseqs": [{"api_name": "get_all_crypto_news_for_crypto_news_v2", "api_action": "\nAction: get_all_crypto_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"cryptoslate\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_source_for_crypto_news_v2", "api_action": "\nAction: get_individual_news_source_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"forbes\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_crypto_news_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"forbes\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_article_keyword_search_for_crypto_news_v2", "api_action": "\nAction: specific_article_keyword_search_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"forbes\"\n}", "api_reaction": null}}]}
{"URL": "56285", "query": "I'm a fashion enthusiast and I need some outfit inspiration. Can you provide me with the list of media posted by user ID 25025320? I want to browse through their photos and videos to get ideas for my next fashion look. Additionally, fetch the list of users who liked each media to discover new fashion influencers.", "api_names": ["medias_for_instagram_v6", "getuserstories_for_instagram_v6", "followers_for_instagram_v6", "Finish", "overview_of_channels_for_youtube_classification_api", "all_for_getguidelines", "cards_for_card_draw_simulator", "course_name_for_udemy_course_scrapper_api", "channel_details_for_youtube_v3_v2", "details_for_patreon", "channel_videos_playlists_for_youtube_v3_lite", "playlists_for_youtube_v3_v3", "gives_the_bmi_when_you_input_values_in_imperial_units_feet_inches_pounds_for_bmi_v2", "auto_complete_for_idealista_v2", "user_information_for_opensea_v2", "all_desserts_data_for_pizza_and_desserts"], "api_descs": {"Finish": "No description available.", "all_desserts_data_for_pizza_and_desserts": "This will return s all the desserts data", "all_for_getguidelines": "All guidelines", "auto_complete_for_idealista_v2": "Get auto complete suggestion by term or phrase", "cards_for_card_draw_simulator": "Draw multiple cards from a regular 52-card playing deck.", "channel_details_for_youtube_v3_v2": "Get channel details", "channel_videos_playlists_for_youtube_v3_lite": "Get channel videos or playlists.\nQuota cost is 1.", "course_name_for_udemy_course_scrapper_api": "Provide course name", "details_for_patreon": "Get the details and general information of a Creator with the `creator_id`.", "followers_for_instagram_v6": "get someone's followers", "getuserstories_for_instagram_v6": "get stories by user id", "gives_the_bmi_when_you_input_values_in_imperial_units_feet_inches_pounds_for_bmi_v2": "The API generates the BMI in kg/m2 when the height is entered in feet and inches and weight is entered in pounds.", "medias_for_instagram_v6": "Get someone's medias, batch_size range from 1 to 50", "overview_of_channels_for_youtube_classification_api": "GET Overview of channels", "playlists_for_youtube_v3_v3": "Returns a collection of playlists that match the API request parameters. For example, you can retrieve all playlists that the authenticated user owns, or you can retrieve one or more playlists by their unique IDs.", "user_information_for_opensea_v2": "Scrape all the HTML information from the NFT asset page without having to use chrome , scrape 10,000  NFTs images, & metadata in under 11min (*using top plan)"}, "aseqs": [{"api_name": "medias_for_instagram_v6", "api_action": "\nAction: medias_for_instagram_v6\nAction Input: {\n  \"user_id\": \"25025320\",\n  \"batch_size\": 50\n}", "api_reaction": null}, {"api_name": "getuserstories_for_instagram_v6", "api_action": "\nAction: getuserstories_for_instagram_v6\nAction Input: {\n  \"user_id\": 25025320\n}", "api_reaction": null}, {"api_name": "followers_for_instagram_v6", "api_action": "\nAction: followers_for_instagram_v6\nAction Input: {\n  \"user_id\": \"25025320\",\n  \"batch_size\": 50\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "medias_for_instagram_v6"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getuserstories_for_instagram_v6"}}, {"state": "generated_by_agent", "aseq": {"api_name": "medias_for_instagram_v6", "api_action": "\nAction: medias_for_instagram_v6\nAction Input: {\n  \"user_id\": \"25025320\",\n  \"batch_size\": 50\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "medias_for_instagram_v6", "api_action": "\nAction: medias_for_instagram_v6\nAction Input: {\n  \"user_id\": \"25025320\",\n  \"batch_size\": 50\n}", "api_reaction": null}}]}
{"URL": "9728", "query": "My family is planning a vacation abroad and we need to convert 1000 EUR to all available currencies. Can you provide the names and symbols of the exchange rates? Additionally, fetch the current bitcoin and altcoin prices.", "api_names": ["cripto_for_currency_v2", "symbols_for_currency_v2", "currencytoall_for_currency_v2", "Finish", "case_record_for_get_docs", "americas_for_vct_global_contract_database", "rental_search_for_tripadvisor", "3_month_historical_daily_prices_for_stock_prices", "search_event_details_for_mma_stats", "categoryflag_for_motorsportapi", "fee_plans_for_finhost", "crimes_at_location_for_data_police_uk", "languages_versions_for_online_code_compiler", "stories_detail_for_bb_finance", "scholar_for_seo_api", "regions_for_phone_formatter"], "api_descs": {"3_month_historical_daily_prices_for_stock_prices": "3 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "americas_for_vct_global_contract_database": "Returns a json of all teams inside AMERICAS.", "case_record_for_get_docs": "case", "categoryflag_for_motorsportapi": "Get the flag image of a specific category in PNG format.", "crimes_at_location_for_data_police_uk": "Returns just the crimes which occurred at the specified location, rather than those within a radius. If given latitude and longitude, finds the nearest pre-defined location and returns the crimes which occurred there.", "cripto_for_currency_v2": "Bitcoin and Altcoins prices, changes in the instant service.", "currencytoall_for_currency_v2": "Service that converts the entered exchange rate to other currencies.", "fee_plans_for_finhost": "Describes fee payments for the services", "languages_versions_for_online_code_compiler": "Languages & Versions", "regions_for_phone_formatter": "Returns a collection of supported regions for the specified\n IETF BCP 47 language tag string.", "rental_search_for_tripadvisor": "-", "scholar_for_seo_api": "Perform Scholar Search\n\nParameters\n----------\nquery : A url encoded query string, for reference checkout https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters\n\nReturns\n-------\njson: a list of results with the link, description, and title for each result", "search_event_details_for_mma_stats": "This lets you search for specific fights by the names of the fighters involved. The response returned by the API endpoint includes details such as the date of the fight, the name of the fighters involved, and the outcome of the fight.", "stories_detail_for_bb_finance": "Get full story information", "symbols_for_currency_v2": "Service that brings the names and symbols of exchange rates."}, "aseqs": [{"api_name": "symbols_for_currency_v2", "api_action": "\nAction: symbols_for_currency_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "cripto_for_currency_v2", "api_action": "\nAction: cripto_for_currency_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "currencytoall_for_currency_v2", "api_action": "\nAction: currencytoall_for_currency_v2\nAction Input: {\n  \"base\": \"EUR\",\n  \"int\": \"1000\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "cripto_for_currency_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cripto_for_currency_v2", "api_action": "\nAction: cripto_for_currency_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "currencytoall_for_currency_v2", "api_action": "\nAction: currencytoall_for_currency_v2\nAction Input: {\"amount\": 1000, \"fromCurrency\": \"EUR\", \"toCurrencies\": [\"USD\", \"JPY\", \"CAD\", \"AUD\", \"GBP\"]}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "currencytoall_for_currency_v2", "api_action": "\nAction: currencytoall_for_currency_v2\nAction Input: {\n  \"base\": \"EUR\",\n  \"int\": \"1000\"\n}", "api_reaction": null}}]}
{"URL": "64717", "query": "I'm a Twitch streamer and I want to know the game name, mature content status, number of viewers, language, and stream title of my favorite streamer xqcow. Can you provide me with this information?", "api_names": ["get_stream_game_name_for_gwyo_twitch", "get_all_active_stream_infos_for_gwyo_twitch", "get_all_channel_infos_for_gwyo_twitch", "Finish", "job_salary_for_job_salary_data", "getinventory_for_thisisapublicapi_v2", "max_historical_daily_prices_for_stock_prices", "available_region_list_for_news_network", "users_for_geospark", "topic_news_by_section_for_real_time_news_data", "list_topics_for_textking_translation", "get_brands_for_cigars", "ip_netblock_v2_for_ip_netblocks", "email_validate_regex_for_email_validator_v3", "aircraftsearch_for_flightera_flight_data", "get_a_specific_remote_job_by_id_for_remote_jobs_api", "get_all_the_news_in_english_for_kenyan_news_api", "unknown_for_reqres", "get_playlist_metadata_for_spotify_scraper", "getpeople_for_powerbi"], "api_descs": {"Finish": "No description available.", "aircraftsearch_for_flightera_flight_data": "A list of plane registrations for a given search criteria.\nCan search by airline ident, country, model\nIf multiple arguments are provided, they will be chained as AND\nReturns only currently active aircraft", "available_region_list_for_news_network": "Return list of available regions.", "email_validate_regex_for_email_validator_v3": "Email Validate Regex", "get_a_specific_remote_job_by_id_for_remote_jobs_api": "Using the id of the job returned from /jobs route, get more details about a specific job", "get_all_active_stream_infos_for_gwyo_twitch": "Get a Stream Informations if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )", "get_all_channel_infos_for_gwyo_twitch": "Get Channel Infos (by username or id)", "get_all_the_news_in_english_for_kenyan_news_api": "This endpoint will return back all news about climate change from all over the world", "get_brands_for_cigars": "Get Cigar brands, paginated and searchable.", "get_playlist_metadata_for_spotify_scraper": "This endpoint fetches full details of a playlist.", "get_stream_game_name_for_gwyo_twitch": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )", "getinventory_for_thisisapublicapi_v2": "Returns a map of status codes to quantities", "getpeople_for_powerbi": "Get Power BI influencers.", "ip_netblock_v2_for_ip_netblocks": "Get exhaustive information on IP Range (v2)", "job_salary_for_job_salary_data": "Get estimated job salaries/pay by job title and location.", "list_topics_for_textking_translation": "Returns a collection of all available topics.", "max_historical_daily_prices_for_stock_prices": "Max historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "topic_news_by_section_for_real_time_news_data": "Get topic news article in a specific section.", "unknown_for_reqres": "List of unknown resources", "users_for_geospark": "Get users details"}, "aseqs": [{"api_name": "get_all_active_stream_infos_for_gwyo_twitch", "api_action": "\nAction: get_all_active_stream_infos_for_gwyo_twitch\nAction Input: {\n  \"userid\": \"xqcow\"\n}", "api_reaction": null}, {"api_name": "get_stream_game_name_for_gwyo_twitch", "api_action": "\nAction: get_stream_game_name_for_gwyo_twitch\nAction Input: {\n  \"userid\": \"xqcow\"\n}", "api_reaction": null}, {"api_name": "get_all_channel_infos_for_gwyo_twitch", "api_action": "\nAction: get_all_channel_infos_for_gwyo_twitch\nAction Input: {\n  \"userid\": \"xqcow\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_active_stream_infos_for_gwyo_twitch"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_stream_game_name_for_gwyo_twitch"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_active_stream_infos_for_gwyo_twitch", "api_action": "{\"userid\": \"xqcow\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_active_stream_infos_for_gwyo_twitch", "api_action": "\nAction: get_all_active_stream_infos_for_gwyo_twitch\nAction Input: {\n  \"userid\": \"xqcow\"\n}"}}]}
{"URL": "200", "query": "I'm creating a playlist and I need to include the tracks from a particular album. Can you provide me with the tracks of the album with ID '3IBcauSj5M2A6lTeffJzdv'? I would like to know the names, durations, and artists of these tracks. Additionally, please provide the cover art of the album.", "api_names": ["album_metadata_for_spotify_data", "album_tracks_for_spotify_data", "Finish", "rate_word_for_humor_jokes_and_memes", "title_similars_for_netflix_v2", "get_authors_for_world_of_quotes", "nftsearch_for_nft_explorer", "view_api_affirmation_for_pe_demo", "license_plate_to_vin_for_license_plate_to_vin", "statistics_for_immersiverouletteapi", "getcompanynames_for_gaialens_company_names", "getbooks_for_feku_json", "matches_for_betcity", "artist_albums_for_genius_song_lyrics", "weatherendpoin_for_havo"], "api_descs": {"Finish": "No description available.", "album_metadata_for_spotify_data": "album-metadata", "album_tracks_for_spotify_data": "album-tracks", "artist_albums_for_genius_song_lyrics": "Get artist albums", "get_authors_for_world_of_quotes": "This API returns array of over 10,000 authors we have in our library.\nThis returns an array of strings.", "getbooks_for_feku_json": "get list of all books", "getcompanynames_for_gaialens_company_names": "This API returns a list of all company names available to the user. It can be used as a pre-step before invoking other GaiaLens APIs such as GaiaLens ESG Scores, Gaialens Historical ESG Scores and GaiaLens ESG News.", "license_plate_to_vin_for_license_plate_to_vin": "License Plate to VIN", "matches_for_betcity": "Latest matches by Betcity", "nftsearch_for_nft_explorer": "Get NFTs that match a given metadata search in all widely used networks", "rate_word_for_humor_jokes_and_memes": "Rate the funniness of a word.\nSee https://humorapi.com/docs/#Rate-Word for more.", "statistics_for_immersiverouletteapi": "Stats of wheelResults:\n\"count\"\n\"percentage\"\n\"lastOccurredAt\"\n\"lastSeenBefore\"\n\"hotFrequencyPercentage\": 1.11\nNote that Duration is Hourly basis 1,2,3,.......72 ect", "title_similars_for_netflix_v2": "Title Similars", "view_api_affirmation_for_pe_demo": "View API affirmation in HTML format.", "weatherendpoin_for_havo": "ob havo"}, "aseqs": [{"api_name": "album_tracks_for_spotify_data", "api_action": "\nAction: album_tracks_for_spotify_data\nAction Input: {\n  \"is_id\": \"3IBcauSj5M2A6lTeffJzdv\"\n}", "api_reaction": null}, {"api_name": "album_metadata_for_spotify_data", "api_action": "\nAction: album_metadata_for_spotify_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "album_tracks_for_spotify_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "album_metadata_for_spotify_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "album_tracks_for_spotify_data"}}]}
{"URL": "84079", "query": "I'm working on an educational project that requires the conversion of text into speech. Can you please provide me with the available voices and audios generated by the 'Text to Speech PRO' tool? This information will help me evaluate the quality and variety of voices offered.", "api_names": ["get_list_of_audios_for_text_to_speech_pro", "get_list_of_voices_for_text_to_speech_pro", "Finish", "get_misinformation_score_account_twitter_account_get_for_mescalc", "apps_for_ignition", "price_all_for_latest_stock_price", "getresult_for_videogrammer", "searchtrain_for_irctc", "veiculo_tipo_for_veiculos_api", "ttt_for_funtrip", "best_quote_for_morpheus_predictions_", "getname_for_leetcodeapi"], "api_descs": {"Finish": "No description available.", "apps_for_ignition": "Apps ", "best_quote_for_morpheus_predictions_": "The best predictions with good odds", "get_list_of_audios_for_text_to_speech_pro": "Get List of Audios", "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices", "get_misinformation_score_account_twitter_account_get_for_mescalc": "Retrieve account misinformation score by Twitter ID", "getname_for_leetcodeapi": "Get the name of the user", "getresult_for_videogrammer": "get result of previous requested rendering with job_id", "price_all_for_latest_stock_price": "Fetch latest stock price", "searchtrain_for_irctc": " ", "ttt_for_funtrip": "ttt", "veiculo_tipo_for_veiculos_api": "Retorna as marcas do tipo selecionado, os tipos disponíveis são \"carros\", \"motos\" e \"caminhoes\"."}, "aseqs": [{"api_name": "get_list_of_voices_for_text_to_speech_pro", "api_action": "\nAction: get_list_of_voices_for_text_to_speech_pro\nAction Input: {}", "api_reaction": null}, {"api_name": "get_list_of_audios_for_text_to_speech_pro", "api_action": "\nAction: get_list_of_audios_for_text_to_speech_pro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_voices_for_text_to_speech_pro"}}, {"state": "generated_by_agent", "aseq": {"Thought": "The voices have already been fetched, now I need to get the list of audios for text to speech.", "api_name": "get_list_of_audios_for_text_to_speech_pro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_voices_for_text_to_speech_pro"}}]}
{"URL": "26812", "query": "I'm a currency trader and need to analyze the performance of the CHF-USD currency pair. Can you fetch the OHLC history for this pair? Additionally, I would like to know all the available forex pairs to explore potential trading opportunities.", "api_names": ["get_ohlc_history_for_ohlc_history_forex", "get_symbols_for_ohlc_history_forex", "Finish", "shorten_for_bitly", "username_to_pk_convert_for_instagram_api_v2", "get_assets_for_alpaca_trading", "anikuendpoint_for_aniku", "get_channel_emotes_for_kick_com_api_kick_api", "song_download_convert_for_miza", "chat_gpt_detector_for_ai_content_detector_v2", "get_company_quarterly_ratios_for_finance_data", "get_rich_menu_id_of_user_for_line_messaging", "get_latest_updates_for_covid_19_india", "rotating_proxy_api_for_rotating_proxies", "get_airbnb_listing_ratings_for_vrm_str_tools"], "api_descs": {"Finish": "No description available.", "anikuendpoint_for_aniku": "Storage", "chat_gpt_detector_for_ai_content_detector_v2": "detector", "get_airbnb_listing_ratings_for_vrm_str_tools": "Returns the ratings from a listing on Airbnb\n\n**Where to find your Airbnb Listing ID**\n![](https://vitesa.com/rapidAPI_Images/airbnb_listingID.png)", "get_assets_for_alpaca_trading": "", "get_channel_emotes_for_kick_com_api_kick_api": "Get Channel Emotes", "get_company_quarterly_ratios_for_finance_data": "Get Company Ratios Latest Data", "get_latest_updates_for_covid_19_india": "Coronavirus India Live Guidelines, Bills, etc", "get_ohlc_history_for_ohlc_history_forex": "Get  OHLC for the requested currency pair", "get_rich_menu_id_of_user_for_line_messaging": "Gets the ID of the rich menu linked to a user.", "get_symbols_for_ohlc_history_forex": "Get all available forex pairs", "rotating_proxy_api_for_rotating_proxies": "API will respond with a random proxy currently active in the pool upon each request.", "shorten_for_bitly": "Given a long URL, returns a bitly short URL.", "song_download_convert_for_miza": "Searches, downloads, converts, and uploads the song URL simultaneously, streaming the file with very little delay. Song URL may be from any platform supported by Youtube-DL/FFmpeg, which are used as part of the backend.\nThis endpoint is the fastest to respond out of all the available ones for song downloading, but will only support *mp3*, *opus*, *ogg*, and *wav* as output formats (no video downloading). Quality will be maximum by default, or 224kbps if conversion is required. For those wishing to use this API as a backend for their own Discord bot, the opus format output is compatible with direct playback through Discord's voice websocket.\nFor testing purposes, the *download* query key may be changed to *view*, which will stream the same file, but without the attachment disposition, allowing it to play as audio in a browser while being downloaded.", "username_to_pk_convert_for_instagram_api_v2": "it converts any username on instagram to the unique id which is called pk"}, "aseqs": [{"api_name": "get_ohlc_history_for_ohlc_history_forex", "api_action": "\nAction: get_ohlc_history_for_ohlc_history_forex\nAction Input: {\n  \"symbol\": \"CHF-USD\"\n}", "api_reaction": null}, {"api_name": "get_symbols_for_ohlc_history_forex", "api_action": "\nAction: get_symbols_for_ohlc_history_forex\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_ohlc_history_for_ohlc_history_forex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_symbols_for_ohlc_history_forex"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_ohlc_history_for_ohlc_history_forex", "api_action": "\nAction: get_ohlc_history_for_ohlc_history_forex\nAction Input: {\n  \"symbol\": \"CHF-USD\"\n}", "api_reaction": null}}]}
{"URL": "87448", "query": "I'm attending a family reunion next week, and I want to make sure there are plenty of engaging conversations. Can you recommend an API that offers a wide range of random conversation starters? It would be great if the conversation starters could be suitable for all age groups and help create a lively and enjoyable atmosphere. Additionally, it would be helpful if the API could provide conversation starters related to family and shared memories.", "api_names": ["random_for_conversation_starters_api", "Finish", "strommix_for_regionalkonzept_strom_herkunft", "history_for_xxxtremelightningrouletteapi", "video_details_for_bing_video_search", "account_transaction_history_for_optimism", "playmovie_for_helioviewer_v1", "tracking_correo_argentino_result_task_task_id_for_transportistas_de_argentina", "seasonal_advanced_team_statistics_for_basketball_data", "iso2_for_countries"], "api_descs": {"Finish": "No description available.", "account_transaction_history_for_optimism": "Get an array of all transactions of an address on the Optimism blockchain.", "history_for_xxxtremelightningrouletteapi": "Histories of the last 30 spins", "iso2_for_countries": "This gets country name on a country. Use ISO2 for country_code.", "playmovie_for_helioviewer_v1": "Output an HTML web page with the requested movie embedded within.", "random_for_conversation_starters_api": "Get a random conversation starter", "seasonal_advanced_team_statistics_for_basketball_data": "Provides the season-wide advanced team statistics with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "strommix_for_regionalkonzept_strom_herkunft": "Resultierender Strommix nach Anwendung der regionalen Ökostromerzeugung im Gebiet einer Postleitzahl.", "tracking_correo_argentino_result_task_task_id_for_transportistas_de_argentina": "Result for one Task ID.", "video_details_for_bing_video_search": "Get insights about a video, such as related videos."}, "aseqs": [{"api_name": "random_for_conversation_starters_api", "api_action": "\nAction: random_for_conversation_starters_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_for_conversation_starters_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_for_conversation_starters_api"}}]}
{"URL": "55505", "query": "I need to find all the news articles that mention Bitcoin. Can you fetch all the crypto news from various websites? It would be great if the articles are sorted by date.", "api_names": ["general_search_for_crypto_news_v2", "get_all_crypto_news_for_crypto_news_v2", "get_individual_news_source_for_crypto_news_v2", "Finish", "get_addresses_by_postcode_for_pt_postcodes", "read_text_for_profanity_filter", "get_list_of_apps_with_pagination_for_google_play", "reddit_for_check_username", "clubs_list_by_competition_for_transfermarket", "starting_grid_for_fia_formula_1_championship_statistics", "abuse_contact_lookup_for_viewdns", "search_basic_free_for_streaming_availability", "true_range_for_qvantana", "event_statistics_alt_for_flashlive_sports", "transactions_feed_for_crypto_whale_transactions", "api_v1_fastings_for_sunnah_fasting"], "api_descs": {"Finish": "No description available.", "abuse_contact_lookup_for_viewdns": "Used to find the abuse contact address for a domain name. This is where you would send complaints about spam originating from that domain.", "api_v1_fastings_for_sunnah_fasting": "Get list of sunnah fasting", "clubs_list_by_competition_for_transfermarket": "List clubs in specific competition", "event_statistics_alt_for_flashlive_sports": "Get event statistics by event ID (darts)", "general_search_for_crypto_news_v2": "Can take a single word search that will return any articles with the given keyword.", "get_addresses_by_postcode_for_pt_postcodes": "Get the list of addresses/street by specifying the postcode", "get_all_crypto_news_for_crypto_news_v2": "This endpoint will return all news with crypto and bitcoin from many different websites across the internet.", "get_individual_news_source_for_crypto_news_v2": "Get news about crypto from a specific news source. There are 18 news sources to choose from cryptonews, coindesk, crypto.news, yahoo, fxstreet, cointelegraph, businessinsider, cryptopotato, ambcrypto, cryptonewsline, cryptoglobe, coingecko, cryptoslate, bitcoinist, forbes, nulltx, blockonomi, and coinspeaker.", "get_list_of_apps_with_pagination_for_google_play": "Returns a list of apps and a pagination token", "read_text_for_profanity_filter": "Allows you to detect and filter out profanity / offensive form a given text. It is only available for English words. You can also censor out words in text content.", "reddit_for_check_username": "Check username on Reddit", "search_basic_free_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "starting_grid_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about a specific race starting grid by passing path parameters for year & location. The parameters are required.", "transactions_feed_for_crypto_whale_transactions": "Get latest huge whale transactions for most popular blockchains.\n\n**Filter by txn value. Add parameters as below:**\n<_amount_usd=10000 \nOR\n>amount_usd=10000\n\n**Filter by blockchain:**\n t_blockchain=bitcoin\n\nAvailable blockchains: bitcoin, bitcoin-cash, ethereum, bitcoin-sv, litecoin, tron, ripple, zcash, dogecoin, neo, eos, dash, ethereum-classic, tezos, binancechain, stellar, groestlcoin, icon, steem, cosmos, decred, verge, hypercash, siacoin\n\n\n**Pagination:**\nAdd parameter: size=100", "true_range_for_qvantana": "True range indicator"}, "aseqs": [{"api_name": "get_all_crypto_news_for_crypto_news_v2", "api_action": "\nAction: get_all_crypto_news_for_crypto_news_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "general_search_for_crypto_news_v2", "api_action": "\nAction: general_search_for_crypto_news_v2\nAction Input: {\n  \"searchid\": \"Bitcoin\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_source_for_crypto_news_v2", "api_action": "\nAction: get_individual_news_source_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"crypto.news\"\n}", "api_reaction": null}, {"api_name": "general_search_for_crypto_news_v2", "api_action": "\nAction: general_search_for_crypto_news_v2\nAction Input: {\n  \"searchid\": \"Bitcoin\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "general_search_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_crypto_news_for_crypto_news_v2", "api_action": "{\"keyword\":\"Bitcoin\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_crypto_news_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_crypto_news_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "general_search_for_crypto_news_v2", "api_action": "\nAction: general_search_for_crypto_news_v2\nAction Input: {\n  \"searchid\": \"Bitcoin\"\n}", "api_reaction": null}}]}
{"URL": "4901", "query": "I'm conducting research on the recent political developments in Indonesia. Can you fetch the search results for 'government policies' from the Vivanews and Detik news sources? Additionally, please provide me with the details of a specific news article from the Kompas source, with the GUID '.xml.2023.06.20.114935178'.", "api_names": ["detik_search_for_indonesia_news", "vivanews_search_for_indonesia_news", "kompas_detail_for_indonesia_news", "Finish", "logoutuser_for_pet_store", "latest_movie_for_disney_worlds", "search_for_verses_containing_terms_for_bible_memory_verse_flashcard", "sweden_scheduled_flights_level_for_global_flight_data", "getorderbyid_for_multipleteamscallingtest", "get_a_specific_item_for_shoes_collections", "navigations_get_root_for_unofficial_shein", "search_users_for_tiktok_apis", "new_releases_for_spotify_v2", "group_management_api_access_for_modifying_group_information_for_catchloc", "getinventory_for_pet_store", "get_version_for_people_photo_background_removal", "rapidata_services_for_direct_debit_managed_service", "blockchains_for_crypto_whale_transactions", "get_player_placeholder_for_cricketapi2", "status_200_for_daily_ovrll_0822202130837"], "api_descs": {"Finish": "No description available.", "blockchains_for_crypto_whale_transactions": "Get list of all supported blockchains", "detik_search_for_indonesia_news": "search detik.com news", "get_a_specific_item_for_shoes_collections": "This will return a specific item from the collection ..,simpily write the id of the product and you will get the product", "get_player_placeholder_for_cricketapi2": "Get the player placeholder image in PNG format.", "get_version_for_people_photo_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getinventory_for_pet_store": "Returns a map of status codes to quantities", "getorderbyid_for_multipleteamscallingtest": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "group_management_api_access_for_modifying_group_information_for_catchloc": "API access to modifying location object's group information\n\nrequired parameter : api (api.common.group.set.modify)", "kompas_detail_for_indonesia_news": "kompas-detail", "latest_movie_for_disney_worlds": "Get the latest movies released from disney and other platforms", "logoutuser_for_pet_store": "", "navigations_get_root_for_unofficial_shein": "Get root categories related to a tab", "new_releases_for_spotify_v2": "Get new releases based on country code.", "rapidata_services_for_direct_debit_managed_service": "Direct Debit Managed Service API", "search_for_verses_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns verses that contain term(s). Terms are not case sensitive. \nBooks, operators etc. are NOT CASE SENSITIVE\n\n**  CAN SEARCH A RANGE OF BOOKS.  \n(first_book = 'matthew' , second_book = 'john' MEANS ENDPOINT SEARCHES  'matthew'  'mark'  'luke' 'john')    **", "search_users_for_tiktok_apis": "Search user by keyword", "status_200_for_daily_ovrll_0822202130837": "Testing", "sweden_scheduled_flights_level_for_global_flight_data": "Get weekly Sweden scheduled departing flights level.", "vivanews_search_for_indonesia_news": "vivanews-search"}, "aseqs": [{"api_name": "vivanews_search_for_indonesia_news", "api_action": "\nAction: vivanews_search_for_indonesia_news\nAction Input: {\n  \"page\": 1,\n  \"keyword\": \"government policies\"\n}", "api_reaction": null}, {"api_name": "detik_search_for_indonesia_news", "api_action": "\nAction: detik_search_for_indonesia_news\nAction Input: {\n  \"page\": 1,\n  \"limit\": 5,\n  \"keyword\": \"government policies\"\n}", "api_reaction": null}, {"api_name": "kompas_detail_for_indonesia_news", "api_action": "\nAction: kompas_detail_for_indonesia_news\nAction Input: {\n  \"guid\": \".xml.2023.06.20.114935178\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch search results for 'government policies' from both Vivanews and Detik news sources first, then provide the details for the specific Kompas article with the given GUID.\n\t\"api_name\": \"vivanews_search_for_indonesia_news\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "detik_search_for_indonesia_news", "api_action": "\nAction: detik_search_for_indonesia_news\nAction Input: {\n  \"page\": 1,\n  \"keyword\": \"government policies\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "kompas_detail_for_indonesia_news", "api_action": "\nAction: kompas_detail_for_indonesia_news\nAction Input: {\n  \"guid\": \"xml.2023.06.20.114935178\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "vivanews_search_for_indonesia_news", "api_action": "\nAction: vivanews_search_for_indonesia_news\nAction Input: {\n  \"page\": 2,\n  \"keyword\": \"government policies\"\n}", "api_reaction": null}}]}
{"URL": "87184", "query": "My family and I are planning a vacation and we would like to know the human-readable addresses for some specific locations. Can you provide us with reverse geocoding services? The coordinates we have are 48.8566° N, 2.3522° E. It would be helpful if you could give us the address, city, country code, and postal code for those locations.", "api_names": ["reverse_geocoding_for_reverse_geocoding_v3", "Finish", "get_standings_for_league_of_legends_esports", "leaguedetails_for_icehockeyapi", "youtoosound_for_youtoosound", "top_collections_today_for_top_nft_sales", "transcripts_v2_list_for_seeking_alpha", "search_agents_for_realtor", "mp4_for_youtube_videos", "search_for_playlists_for_youtube_media_downloader", "getvoiceslist_for_microsoft_edge_text_to_speech", "translate_for_giphy"], "api_descs": {"Finish": "No description available.", "get_standings_for_league_of_legends_esports": "In this api method you can get all standings for tournaments. You can get tournaments id Get Tournaments From League method.", "getvoiceslist_for_microsoft_edge_text_to_speech": "Voices list for the param \"voice_name\" of the function \"GetDownloadUrl\"", "leaguedetails_for_icehockeyapi": "Get the details of a specific Ice Hockey league by providing the tournament ID.", "mp4_for_youtube_videos": "Returns a list of MP4 files with different qualities and other details.", "reverse_geocoding_for_reverse_geocoding_v3": "Translate locations on the map into human-readable addresses.", "search_agents_for_realtor": "Search agents by city/zip", "search_for_playlists_for_youtube_media_downloader": "This endpoint searches for YouTube playlists. Pagination scraping is supported. Thumbnails will not be blurred by age safety.", "top_collections_today_for_top_nft_sales": "Top trending collections today", "transcripts_v2_list_for_seeking_alpha": "List transcripts of specific symbol", "translate_for_giphy": "This is prototype endpoint for using Giphy as a translation engine for a GIF dialect. The translate API draws on search, but uses the Giphy \"special sauce\" to handle translating from one vocabulary to another. In this case, words and phrases to GIFs. Use a plus or url encode for phrases.", "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome"}, "aseqs": [{"api_name": "reverse_geocoding_for_reverse_geocoding_v3", "api_action": "\nAction: reverse_geocoding_for_reverse_geocoding_v3\nAction Input: {\n  \"query\": \"48.8566,2.3522\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "reverse_geocoding_for_reverse_geocoding_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reverse_geocoding_for_reverse_geocoding_v3"}}]}
{"URL": "26781", "query": "I am interested in using the Luhn algorithm for card number validation. Could you please explain how the algorithm works and provide an example of a valid card number?", "api_names": ["validate_card_number_for_luhn_algorithm", "Finish", "general_search_for_crypto_news_v2", "gethistoricalscoresbyyear_for_gaialens_historical_esg_scores", "healthcare_mailing_for_healthcaremailing", "get_laws_for_all_states_for_us_gun_laws", "social_media_news_in_spanish_for_onelike", "get_sample_data_for_minecraft_servers_list"], "api_descs": {"Finish": "No description available.", "general_search_for_crypto_news_v2": "Can take a single word search that will return any articles with the given keyword.", "get_laws_for_all_states_for_us_gun_laws": "This endpoint will provide links to gun law documentation for all 50 states.", "get_sample_data_for_minecraft_servers_list": "Get 10 Servers List with Free Plan", "gethistoricalscoresbyyear_for_gaialens_historical_esg_scores": "This API returns historical Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100 based on the year provided in the request.  In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more.", "healthcare_mailing_for_healthcaremailing": "Healthcare mailing, a direct marketing business founded on a base of many successful years of experience building list.", "social_media_news_in_spanish_for_onelike": "Get social media news in Spanish", "validate_card_number_for_luhn_algorithm": "Validates given card number"}, "aseqs": [{"api_name": "validate_card_number_for_luhn_algorithm", "api_action": "\nAction: validate_card_number_for_luhn_algorithm\nAction Input: {\n  \"number\": \"4321876543218765\"\n}", "api_reaction": null}, {"api_name": "validate_card_number_for_luhn_algorithm", "api_action": "\nAction: validate_card_number_for_luhn_algorithm\nAction Input: {\n  \"number\": \"378282246310005\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "validate_card_number_for_luhn_algorithm"}}, {"state": "generated_by_agent", "aseq": {"api_name": "validate_card_number_for_luhn_algorithm"}}, {"state": "generated_by_agent", "aseq": {"api_name": "validate_card_number_for_luhn_algorithm"}}]}
{"URL": "5094", "query": "I am a blogger focusing on environmental issues in African countries. Can you fetch all the news articles available on pollution in African countries? It would be great if you could provide me with the title, URL, and source of each article. Also, I would like to get news from a specific source, the 'sei' newspaper.", "api_names": ["Finish", "get_news_from_a_specific_source_for_pollution_news_api", "get_all_news_on_pollution_for_pollution_news_api", "get_quote_by_character_for_movie_and_tv_shows_quotes", "search_nearby_for_local_business_data", "recipes_get_more_info_for_tasty", "get_user_id_from_username_for_instagram_v7", "leaguemedia_for_footapi", "constructorstandingsafterarace_for_formula_1_fixed", "get_support_languages_for_news_content_extraction_live", "getproductoptions_for_appibase", "get_contacts_by_tag_for_churchapp", "video_and_recommendations_for_fastytapi", "yesterday_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions", "pursuit_for_filepursuit", "get_artists_for_spotify_v3", "mgs_products_for_mgs", "uuid_to_name_for_minecraft_uuid_converter"], "api_descs": {"Finish": "No description available.", "constructorstandingsafterarace_for_formula_1_fixed": "To list the constructor standings after a specific race (round) in a season(year), use this endpoint.\n\n", "get_all_news_on_pollution_for_pollution_news_api": "This endpoint would return all news on pollution in african countries available in our database.", "get_artists_for_spotify_v3": "Get one or more artists", "get_contacts_by_tag_for_churchapp": "This will return data for all contacts with the tag", "get_news_from_a_specific_source_for_pollution_news_api": "This Endpoint would return news on pollution in african countries from a specific news source", "get_quote_by_character_for_movie_and_tv_shows_quotes": "This end point will return back quotes delivered by the given character", "get_support_languages_for_news_content_extraction_live": "List of supported Languages.", "get_user_id_from_username_for_instagram_v7": "Finds user id by username", "getproductoptions_for_appibase": "Get all product options", "leaguemedia_for_footapi": "Get media for a football league, including images and videos.", "mgs_products_for_mgs": "MGS Products", "pursuit_for_filepursuit": "Search for a query in file names and path", "recipes_get_more_info_for_tasty": "Get  more information of recipe if available, such as : ingredients, nutrition info, preparation, etc... This endpoint returns 404 status code, it means there is no more information to obtain.\n* .../recipes/list already returns ingredients, nutrition info, preparation, etc...", "search_nearby_for_local_business_data": "Search businesses near by specific geographic coordinates. To see it in action, right click on a specific point in the map on Google Maps and select \"Search nearby\", enter a query and search.", "uuid_to_name_for_minecraft_uuid_converter": "Convert your Mineccraft UUID to a Name", "video_and_recommendations_for_fastytapi": "Returns details about a video and the first page or recommendations.\nPass the returned `pagination` of this endpoint into the \"Recommended videos (w/ pagination)\" endpoint to obtain the next recommendations.", "yesterday_sure_vip_over_1_5_goals_for_168predict_vip_football_predictions": "This endpiont delivers yesterday over 1.5 goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."}, "aseqs": [{"api_name": "get_all_news_on_pollution_for_pollution_news_api", "api_action": "\nAction: get_all_news_on_pollution_for_pollution_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_news_from_a_specific_source_for_pollution_news_api", "api_action": "\nAction: get_news_from_a_specific_source_for_pollution_news_api\nAction Input: {\n  \"newspaperid\": \"sei\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_news_from_a_specific_source_for_pollution_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_from_a_specific_source_for_pollution_news_api", "api_action": "\nAction: get_news_from_a_specific_source_for_pollution_news_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_news_on_pollution_for_pollution_news_api"}}]}
{"URL": "20728", "query": "I'm planning a movie night for my family and we need some movie suggestions suitable for all age groups. Can you recommend four family-friendly movies? It would be great if the suggestions include information about the cast and images of the movies.", "api_names": ["Finish", "list_movies_for_list_movies_v3", "movie_suggestions_for_list_movies_v3", "movie_details_for_list_movies_v3", "cities_v2_get_measurements_for_airvisual", "search_for_youtube_v3_v3", "account_for_finhost", "ice_hockey_predictions_by_day_for_betigolo_predictions", "blog_for_serverless_blogging", "raceresult_for_formula_1_fixed", "me_for_ocoya", "ip_address_check_for_miza", "opt_gamma_for_kiann_options_project", "pass_a_cloudflare_protected_site_for_manga_scrapper", "retrieve_listings_for_openblur", "get_history_for_web_image_storage", "get_players_playerid_for_api_video", "get_user_info_for_likee_downloader_download_likee_videos", "get_time_series_metadata_for_quandl", "medialikers_for_instagram_v6"], "api_descs": {"Finish": "No description available.", "account_for_finhost": "Return the list of the balances for the client accounts", "blog_for_serverless_blogging": "Open Individual blog", "cities_v2_get_measurements_for_airvisual": "Get measurements in specific city by its id", "get_history_for_web_image_storage": "Returns the history as pages", "get_players_playerid_for_api_video": " ", "get_time_series_metadata_for_quandl": "This call returns metadata for a specified time-series.", "get_user_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific user on Likee.", "ice_hockey_predictions_by_day_for_betigolo_predictions": "Get a list of all matches for a specific day, including predictions for many markets.", "ip_address_check_for_miza": "Retrieves the host (server) and remote (your) IP addresses. A fast and responsive endpoint that is also handy for checking whether the service is online.", "list_movies_for_list_movies_v3": "Used to list and search through out all the available movies. Can sort, filter, search and order the results", "me_for_ocoya": "Returns information about authenticated user.", "medialikers_for_instagram_v6": "Get one media's likers, batch_size range from 1 to 50.", "movie_details_for_list_movies_v3": "Returns the information about a specific movie", "movie_suggestions_for_list_movies_v3": "Returns 4 related movies as suggestions for the user", "opt_gamma_for_kiann_options_project": "option lognormal greeks : gamma calculates the gamma, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), cp  =call (c) /put (p) (string), type_ = 0 (default) for use in rapidAPI.com", "pass_a_cloudflare_protected_site_for_manga_scrapper": "Make a request to fetch a website protected with Cloudflare's IUAM (I'm Under Attack Mode). This endpoint returns HTML document ready for data scraping purposes.", "raceresult_for_formula_1_fixed": "This endpoint gives the result for a specific race (round) in a season(year).\n\n\nIf the results for the specified race are not yet available the RaceTable element in the response will be empty.\n\n", "retrieve_listings_for_openblur": "Retrieve Top 100 Blur Listings", "search_for_youtube_v3_v3": "Returns a collection of search results that match the query parameters specified in the API request. By default, a search result set identifies matching `video`, `channel` and `playlist` resources, but you can also configure queries to only retrieve a specific type of resource."}, "aseqs": [{"api_name": "movie_suggestions_for_list_movies_v3", "api_action": "\nAction: movie_suggestions_for_list_movies_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "movie_details_for_list_movies_v3", "api_action": "\nAction: movie_details_for_list_movies_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "list_movies_for_list_movies_v3", "api_action": "\nAction: list_movies_for_list_movies_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "movie_suggestions_for_list_movies_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "movie_details_for_list_movies_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "movie_suggestions_for_list_movies_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "movie_suggestions_for_list_movies_v3"}}]}
{"URL": "42233", "query": "I am building a product comparison website and I need to gather product details from Amazon. Can you retrieve the details of a specific product using its ASIN code? Please provide the details for the product with ASIN 'B091J3NYVF' in the 'US' store, including the name, description, price, features, and main image URL. Additionally, return the currently supported languages in the API.", "api_names": ["get_product_details_all_countries_for_amazon_web_scraping_api", "get_languages_for_amazon_web_scraping_api", "Finish", "healthcheck_for_hapihub", "top_property_managers_for_airdna", "webcams_list_property_property_property_for_webcams_travel", "template_download_for_xlsx_template", "team_stats_for_nba_team_stats", "search_sex_offenders_for_sex_offenders", "stories_detail_for_bb_finance", "get_all_country_list_for_country_list", "search_for_recipes_for_low_carb_recipes"], "api_descs": {"Finish": "No description available.", "get_all_country_list_for_country_list": "Nodes:\niso: iso\ncountryname: country name\nnicename: nicename\niso3: iso3\nnumcode: numcode\nphonecode:phonecode", "get_languages_for_amazon_web_scraping_api": "Return the list of currently supported languages in the API.", "get_product_details_all_countries_for_amazon_web_scraping_api": "Get the detail of a specific product from Amazon using the ASIN code.", "healthcheck_for_hapihub": "Service healtcheck endpoint", "search_for_recipes_for_low_carb_recipes": "Search for recipes that match provided criterions", "search_sex_offenders_for_sex_offenders": "Params:\n@lat: latitude\n@lng: longitude\n@radius: search radius in Miles (Mi), e.g. radius = 0.2 means the API will search for sex offenders within 0.2 miles of the given lat and lng\n\nResponse:\n@offenders: List of Offender Object; If no offenders are found, it will return empty list `offenders: []`.\n\nExtensive database of National Registered Sex Offenders API for the United States. This API covers 750k+ offender records, 1M+ crime records, 19k+ cities, and all 50 states. Supports lat/lng search with radius.", "stories_detail_for_bb_finance": "Get full story information", "team_stats_for_nba_team_stats": "Provides team stats for the current league year. Optionally, supply a `leagueYear` or `team` parameter to get results for those options.", "template_download_for_xlsx_template": "Download template file from Cloud storage", "top_property_managers_for_airdna": "Returns the largest property managers", "webcams_list_property_property_property_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed {property}. Multiple {property} must be separated by comma. Required: at least one {property}. Possible values are \"editors\" (featured from the editors), \"hd\" (high resolution webcams), and \"live\" (webcams with a live stream)."}, "aseqs": [{"api_name": "get_product_details_all_countries_for_amazon_web_scraping_api", "api_action": "\nAction: get_product_details_all_countries_for_amazon_web_scraping_api\nAction Input: {\n  \"asin\": \"B091J3NYVF\",\n  \"countrycode\": \"US\"\n}", "api_reaction": null}, {"api_name": "get_languages_for_amazon_web_scraping_api", "api_action": "\nAction: get_languages_for_amazon_web_scraping_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_languages_for_amazon_web_scraping_api", "api_action": "\nAction: get_languages_for_amazon_web_scraping_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_languages_for_amazon_web_scraping_api", "api_action": "\nAction: get_languages_for_amazon_web_scraping_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_product_details_all_countries_for_amazon_web_scraping_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_languages_for_amazon_web_scraping_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_product_details_all_countries_for_amazon_web_scraping_api", "api_action": "\nAction: get_product_details_all_countries_for_amazon_web_scraping_api\nAction Input: {\n  \"asin\": \"B091J3NYVF\",\n  \"countrycode\": \"US\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_product_details_all_countries_for_amazon_web_scraping_api", "api_action": "\nAction: get_product_details_all_countries_for_amazon_web_scraping_api\nAction Input: {\n  \"asin\": \"B091J3NYVF\",\n  \"countrycode\": \"US\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_product_details_all_countries_for_amazon_web_scraping_api", "api_action": "\nAction: get_product_details_all_countries_for_amazon_web_scraping_api\nAction Input: {\n  \"asin\": \"B091J3NYVF\",\n  \"countrycode\": \"US\"\n}", "api_reaction": null}}]}
{"URL": "60922", "query": "I'm a football enthusiast and I want to keep track of the televised matches in Peru. Can you provide me with the list of teams and competitions that will be broadcasted? Also, I'm interested in knowing the dates, channels, and images of the upcoming events. It would be really helpful for my football schedule.", "api_names": ["getcompetitions_for_wosti_futbol_tv_peru", "geteventsid_for_wosti_futbol_tv_peru", "getevents_for_wosti_futbol_tv_peru", "Finish", "getteams_for_wosti_futbol_tv_peru", "obtain_a_new_datacenter_proxy_for_ephemeral_proxies", "take_screenshot_for_screenshot_maker", "get_user_info_by_user_id_for_instagram_looter", "symbol_price_ticker_for_crypto_markets", "get_metal_prices_for_gold_price_live_v2", "getallaccounts_for_virtual_accounts_api", "list_video_comments_for_youtube_media_downloader", "getstorestatuslist_for_evosis_s_game_database", "get_crypto_news_from_single_website_for_crypto_news_v11", "helloworld_for_mydailyinspiration", "match_history_for_dota_2_steam_web", "products_v2_list_similarities_deprecating_for_asos", "title_similars_for_netflix_data", "opt_rho_for_kiann_options_project", "6_month_historical_daily_prices_for_stock_prices"], "api_descs": {"6_month_historical_daily_prices_for_stock_prices": "6 Month historically adjusted Open, High, Low, and Close prices.  Daily Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "get_crypto_news_from_single_website_for_crypto_news_v11": "This endpoint allows you to retrieve all the news articles about Crypto from a single website", "get_metal_prices_for_gold_price_live_v2": "Get the current latest metals price.\nIncluding gold and silver.", "get_user_info_by_user_id_for_instagram_looter": "Get **Instagram** user info by **user_id**", "getallaccounts_for_virtual_accounts_api": "To get all virtual accounts in your organisation.", "getcompetitions_for_wosti_futbol_tv_peru": "Obtener el listado de competiciones de partidos de fútbol televisados en Perú.\n\n> Este endpoints no requiere de ningún parámetro.", "getevents_for_wosti_futbol_tv_peru": "Obtener el listado de eventos de partidos de fútbol televisados en Perú.\n\n> Este endpoints no requiere de ningún parámetro.", "geteventsid_for_wosti_futbol_tv_peru": "Obtener el evento por identificador único  del listado de eventos de partidos de fútbol televisados en Perú.\n\n> Este endpoints requiere de un parámetro denominado Id.", "getstorestatuslist_for_evosis_s_game_database": "Returns as Json of store status list.", "getteams_for_wosti_futbol_tv_peru": "Obtener el listado de equipos de fútbol televisados en Perú.", "helloworld_for_mydailyinspiration": "Test the API", "list_video_comments_for_youtube_media_downloader": "This endpoint lists comments of a YouTube video. Pagination scraping is supported.", "match_history_for_dota_2_steam_web": "will return the latest 25 public matches in JSON format. You can request it in XML format", "obtain_a_new_datacenter_proxy_for_ephemeral_proxies": "The connection proxy details are `proxy.host` and `proxy.port` from the response fields.\nThe proxy will allow connections from the same source IP as the one making this API call. Make use of the `whitelist_ip` parameter to allow an additional ip.\nCountries can be selected by using the `countries` parameter, otherwise the country is randomly selected. A list of countries is available on *Service Status* endpoint.\nThe proxy is available for 30 mins.\n", "opt_rho_for_kiann_options_project": "option lognormal greeks : delta calculates the delta, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_= 0 (default) for use in rapidAPI.com", "products_v2_list_similarities_deprecating_for_asos": "List similar products by product id", "symbol_price_ticker_for_crypto_markets": "Symbol Price Ticker", "take_screenshot_for_screenshot_maker": "collect all parameteres, load the webpage and take screenshot at the end.\nThis API save on a S3 bucket and return the url.", "title_similars_for_netflix_data": "title-similars"}, "aseqs": [{"api_name": "getteams_for_wosti_futbol_tv_peru", "api_action": "\nAction: getteams_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}, {"api_name": "getcompetitions_for_wosti_futbol_tv_peru", "api_action": "\nAction: getcompetitions_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}, {"api_name": "getevents_for_wosti_futbol_tv_peru", "api_action": "\nAction: getevents_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}, {"api_name": "geteventsid_for_wosti_futbol_tv_peru", "api_action": "\nAction: geteventsid_for_wosti_futbol_tv_peru\nAction Input: {\n  \"is_id\": 419483\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getevents_for_wosti_futbol_tv_peru"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcompetitions_for_wosti_futbol_tv_peru"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getevents_for_wosti_futbol_tv_peru"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getteams_for_wosti_futbol_tv_peru"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getteams_for_wosti_futbol_tv_peru"}}]}
{"URL": "75674", "query": "I have a brilliant business idea and I need your help to bring it to life. Can you generate a business plan for my idea and provide me with a catchy business name and a creative slogan to go along with it? I'm excited to see what you come up with!", "api_names": ["business_name_for_for_business_starter_api", "business_slogan_for_business_starter_api", "Finish", "business_idea_for_business_starter_api", "businessplan_for_business_starter_api", "get_scan_results_for_weblasso", "historical_dividends_for_finshorts", "sources_for_jailbase", "search_by_keyword_filters_for_ikea_api", "cointelegraph_for_cryptocurrency_news", "europeancountries_for_gas_price", "read_appointments_for_supersaas_online_bookings_and_appointment_scheduling", "asoy_for_us_presidential_election", "feed_for_hummingbird_apiv1", "prematchform_for_cricketapi2", "world_climate_change_for_climate_change_v31", "getpopulationbycountrycode_for_world_population", "get_a_random_word_for_random_words", "historical_rates_for_metals_prices_rates_api", "get_nfl_team_roster_for_tank01_nfl_live_in_game_real_time_statistics_nfl"], "api_descs": {"Finish": "No description available.", "asoy_for_us_presidential_election": "Returns JSON block of results for All States, One Year (ASOY), for the specified US Presidential Election year (i.e., 2008).", "business_idea_for_business_starter_api": "Generate a business idea", "business_name_for_for_business_starter_api": "Generate a Business name for existing idea", "business_slogan_for_business_starter_api": "Generate a slogan for you Business name", "businessplan_for_business_starter_api": "Generate a Businessplan for your idea", "cointelegraph_for_cryptocurrency_news": "Get the top latest news from Cointelegraph.", "europeancountries_for_gas_price": "Service that brings up the current gasoline prices at european countries.", "feed_for_hummingbird_apiv1": "Get the latest posts on a user's feed", "get_a_random_word_for_random_words": "Returns a random words from a list of more than 5500+ words\n\nImportant Note: \n1. *wordLength* must not be used with minLength and/or maxLength", "get_nfl_team_roster_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nRosters are updated a few times throughout the day.  Usually every hour.  \n \nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nCall needs to look like this:\n/getNFLTeamRoster?teamID=6\nor\n/getNFLTeamRoster?teamAbv=CHI\n\nThat will return a list of the team's current roster players in the body.\n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505.", "get_scan_results_for_weblasso": "Obtain the scan results from a given scan ID.", "getpopulationbycountrycode_for_world_population": "Get the population's data of a country by its country code (ISO 3166-1 alpha-3 format). More information at https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3.", "historical_dividends_for_finshorts": "Finshorts provide companies historical dividends data in realtime", "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.", "prematchform_for_cricketapi2": "Get pre-match form information for a specific cricket match.", "read_appointments_for_supersaas_online_bookings_and_appointment_scheduling": "", "search_by_keyword_filters_for_ikea_api": "Complimentary to the \"Search By Keyword\" endpoint. Obtain a list of filters available based on a keyword.", "sources_for_jailbase": "All the organizations we collect information for", "world_climate_change_for_climate_change_v31": "Endpoint showing Climate changes all over the the world"}, "aseqs": [{"api_name": "business_idea_for_business_starter_api", "api_action": "\nAction: business_idea_for_business_starter_api\nAction Input: {}", "api_reaction": null}, {"api_name": "business_name_for_for_business_starter_api", "api_action": "\nAction: business_name_for_for_business_starter_api\nAction Input: {\"idea\": \"Start a mobile pet grooming business\"}", "api_reaction": null}, {"api_name": "business_slogan_for_business_starter_api", "api_action": "\nAction: business_slogan_for_business_starter_api\nAction Input: {\"name\": \"PawSpa Mobile Grooming\"}", "api_reaction": null}, {"api_name": "businessplan_for_business_starter_api", "api_action": "\nAction: businessplan_for_business_starter_api\nAction Input: {\"idea\": \"Start a mobile pet grooming business\"}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to generate a business idea, then subsequently find a catchy name and create a creative slogan for the idea. After that, I will get the business plan using the businessplan_for_business_starter_api,\n\t\"api_name\": \"business_idea_for_business_starter_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "businessplan_for_business_starter_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "businessplan_for_business_starter_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "businessplan_for_business_starter_api", "api_action": "\nAction: businessplan_for_business_starter_api\nAction Input: {\"idea\": \"Start a mobile pet grooming business\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "businessplan_for_business_starter_api"}}]}
{"URL": "531", "query": "I am a travel agent and I want to provide my clients with accurate weather forecasts for their trip to France. Can you provide me with the current weather conditions, including the temperature, wind speed, and humidity? It would be helpful to know the weather status for popular tourist destinations like Paris, Nice, and Bordeaux.", "api_names": ["live_for_france_2d", "Finish", "get_quote_by_id_for_quotes_v2", "social_profiles_for_ocoya", "check_similarity_for_whois_lookup_v3", "get_property_by_id_for_real_estate_usa", "regions_for_phone_formatter", "remove_profanity_for_auto_profanity_filter", "hashtag_info_for_tiktok_scraper_v2", "title_details_for_ott_details", "manual_token_list_for_ironwifi", "province_list_for_canadian_gas_prices"], "api_descs": {"Finish": "No description available.", "check_similarity_for_whois_lookup_v3": "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2", "get_property_by_id_for_real_estate_usa": "get property by id", "get_quote_by_id_for_quotes_v2": "Get quote information by id", "hashtag_info_for_tiktok_scraper_v2": "Get hashtag (challenge) info.", "live_for_france_2d": "Live", "manual_token_list_for_ironwifi": "MANUAL TOKEN LIST", "province_list_for_canadian_gas_prices": "Returns list of valid provinces for this API.", "regions_for_phone_formatter": "Returns a collection of supported regions for the specified\n IETF BCP 47 language tag string.", "remove_profanity_for_auto_profanity_filter": "Removes Profanity from Text", "social_profiles_for_ocoya": "Returns information about connected social profiles.", "title_details_for_ott_details": "Get basic information on a movie or tv show such as imdbid , title , genre , runtime , imdbrating , language , synopsis , type , imageurl  , Streaming platforms info etc."}, "aseqs": [{"api_name": "live_for_france_2d", "api_action": "\nAction: live_for_france_2d\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "live_for_france_2d"}}, {"state": "generated_by_agent", "aseq": {"api_name": "live_for_france_2d", "api_action": "\nAction: live_for_france_2d\nAction Input: {}", "api_reaction": null}}]}
{"URL": "448", "query": "I want to surprise my friends with the Thai lottery results for a specific date. Can you fetch the results for March 16, 2022? Additionally, I would like to know the latest draw date and a listing of all the draw dates. It would be great if you could generate a visually appealing report. Thank you very much!", "api_names": ["Finish", "latest_draw_date_for_thai_lottery_result", "draw_date_listing_for_thai_lottery_result", "lottery_results_by_date_id_for_thai_lottery_result", "v1_iplookup_for_ip_lookup_by_api_ninjas", "personasapi_for_personas", "movies_link_and_name_for_porn_movies", "top_news_for_google_search_results_scraper", "web_for_portfolio", "get_movies_by_title_for_movies_tv_shows_database", "list_stories_by_section_for_ny_times_top_stories", "icecream_ingredient_for_recipe_finder", "getteamroster_for_nhl_stats_and_live_data", "getlearningresourcesbytopic_for_azure", "live_giveaways_by_type_for_gamerpower", "playlist_for__cheap_youtube_api_"], "api_descs": {"Finish": "No description available.", "draw_date_listing_for_thai_lottery_result": "Draw Date Listing - รายการข้อมูลวันหวยออก", "get_movies_by_title_for_movies_tv_shows_database": "Result set includes all search results\nEach item includes fields:\nTitle\nYear\nMovie  ID", "getlearningresourcesbytopic_for_azure": "Get Azure learning resources by topic.", "getteamroster_for_nhl_stats_and_live_data": " ", "icecream_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random icecream recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "latest_draw_date_for_thai_lottery_result": "Get latest draw date information - รายการข้อมูลวันหวยออกล่าสุด", "list_stories_by_section_for_ny_times_top_stories": "The Top Stories API returns an array of articles currently on the specified section.", "live_giveaways_by_type_for_gamerpower": "Get live giveaways by type, eg: game, loot, beta", "lottery_results_by_date_id_for_thai_lottery_result": "Lottery Results by date id - ผลการออกรางวัล", "movies_link_and_name_for_porn_movies": "Movies Link And Name", "personasapi_for_personas": "RapidAPI’s official API that allows you to add or update your API’s definition.", "playlist_for__cheap_youtube_api_": "Get playlist\nexample:\n/playlists/PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb", "top_news_for_google_search_results_scraper": "Returns current top news by region and language as a clean json object.", "v1_iplookup_for_ip_lookup_by_api_ninjas": "API Ninjas IP Lookup API endpoint.", "web_for_portfolio": "dsada"}, "aseqs": [{"api_name": "lottery_results_by_date_id_for_thai_lottery_result", "api_action": "\nAction: lottery_results_by_date_id_for_thai_lottery_result\nAction Input: {\n  \"dateid\": \"20220316\"\n}", "api_reaction": null}, {"api_name": "latest_draw_date_for_thai_lottery_result", "api_action": "\nAction: latest_draw_date_for_thai_lottery_result\nAction Input: {}", "api_reaction": null}, {"api_name": "draw_date_listing_for_thai_lottery_result", "api_action": "\nAction: draw_date_listing_for_thai_lottery_result\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "lottery_results_by_date_id_for_thai_lottery_result"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_draw_date_for_thai_lottery_result"}}, {"state": "generated_by_agent", "aseq": {"api_name": "draw_date_listing_for_thai_lottery_result"}}, {"state": "generated_by_agent", "aseq": {"api_name": "lottery_results_by_date_id_for_thai_lottery_result", "api_action": "\nAction: lottery_results_by_date_id_for_thai_lottery_result\nAction Input: {\n  \"dateid\": \"20220316\"\n}", "api_reaction": null}}]}
{"URL": "31929", "query": "I want to surprise my sister with some quotes from her favorite author. Can you fetch me quotes by J.K. Rowling? It would be helpful to have the quotes paginated with a limit of 5 quotes per page. Also, please provide the list of available categories for quotes.", "api_names": ["Finish", "get_quotes_by_specific_category_for_world_of_quotes", "get_quotes_by_specific_author_for_world_of_quotes", "get_quotes_category_for_world_of_quotes", "get_quote_of_the_day_for_world_of_quotes", "getnumbers_for_sms_receive", "get_option_delivery_price_for_bybit", "titles_id_for_moviesdatabase", "stations_list_for_irail", "demand_sensing_for_e2open_llc_", "order_book_for_crypto_markets", "fetch_company_details_for_comany_details_search_online", "playerdetails_for_americanfootballapi", "search_video_list_by_keywords_for_tiktok_download_video_", "flask_app_for_flask", "get_list_of_voices_for_text_to_speech_pro", "severe_weather_alerts_for_weather", "get_all_questions_for_ase_s_quiz_api", "list_replies_by_comment_for_tiktok_private", "brandlist_for_boldsign"], "api_descs": {"Finish": "No description available.", "brandlist_for_boldsign": " ", "demand_sensing_for_e2open_llc_": "Creates accurate near-term forecasts that reflect current market realities using real-time data, automation and machine learning algorithms.", "fetch_company_details_for_comany_details_search_online": "Fetch Company Details by company name", "flask_app_for_flask": "flask application", "get_all_questions_for_ase_s_quiz_api": "Get all questions without pagination", "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices", "get_option_delivery_price_for_bybit": "Get option delivery price", "get_quote_of_the_day_for_world_of_quotes": "This API returns the handpicked quote of the day among 45,000+ quotes based on the highest ratings.\nYou may also get quote of the day of specific *author* or *category*.", "get_quotes_by_specific_author_for_world_of_quotes": "This API returns the collection of quotes by author you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param.", "get_quotes_by_specific_category_for_world_of_quotes": "This API returns the collection of quotes by category you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param.", "get_quotes_category_for_world_of_quotes": "This API returns array of over 350 types of categories we have in our library.\nThis returns an array of strings. Real response will have more categories but in mock response we displayed a few.", "getnumbers_for_sms_receive": "Get a list of available numbers to receive messages from.", "list_replies_by_comment_for_tiktok_private": "List Replies By Comment", "order_book_for_crypto_markets": "Order Book", "playerdetails_for_americanfootballapi": "Get the details of an American Football player using their ID.", "search_video_list_by_keywords_for_tiktok_download_video_": "search video list by keywords", "severe_weather_alerts_for_weather": "Get servere weather alerts from local meteorlogical agencies (US, EU, and Isreal supported )", "stations_list_for_irail": "", "titles_id_for_moviesdatabase": " "}, "aseqs": [{"api_name": "get_quotes_by_specific_author_for_world_of_quotes", "api_action": "\nAction: get_quotes_by_specific_author_for_world_of_quotes\nAction Input: {\n  \"author\": \"J.K. Rowling\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "get_quotes_category_for_world_of_quotes", "api_action": "\nAction: get_quotes_category_for_world_of_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "get_quote_of_the_day_for_world_of_quotes", "api_action": "\nAction: get_quote_of_the_day_for_world_of_quotes\nAction Input: {}", "api_reaction": null}, {"api_name": "get_quotes_by_specific_category_for_world_of_quotes", "api_action": "\nAction: get_quotes_by_specific_category_for_world_of_quotes\nAction Input: {\n  \"category\": \"Inspiration\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_quotes_by_specific_author_for_world_of_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_quotes_category_for_world_of_quotes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_quotes_by_specific_author_for_world_of_quotes", "api_action": "{\"author\": \"J.K. Rowling\", \"limit\": 5, \"page\": 1}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_quotes_by_specific_author_for_world_of_quotes", "api_action": "\nAction: get_quotes_by_specific_author_for_world_of_quotes\nAction Input: {\n  \"author\": \"J.K. Rowling\",\n  \"limit\": 5,\n  \"page\": 1\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_quotes_by_specific_category_for_world_of_quotes", "api_action": "\nAction: get_quotes_by_specific_category_for_world_of_quotes\nAction Input: {\n  \"category\": \"Fantasy\",\n  \"limit\": 5\n}", "api_reaction": null}}]}
{"URL": "81101", "query": "I'm organizing a cultural event and I need to promote it on social media. Can you provide me with the headlines, content, and images from France24 Arabic, Aljazeera, and RT Arabic? It would be great if the news could be shared directly to social media platforms.", "api_names": ["rt_arabic_for_arabic_news_api", "aljazeera_for_arabic_news_api", "france24_arabic_for_arabic_news_api", "Finish", "get_anime_news_list_for_anime_news_net", "settag_for_sms_receive", "get_team_schedule_for_tank01_fantasy_stats", "retrieve_listing_events_for_openblur", "set_address_for_catalogapi", "list_of_cakes_for_the_birthday_cake_db", "th_network_for_syamsul_bachri", "stations_list_for_irail", "media_by_id_for_instagram_api", "list_of_champions_for_transfermarkt_db", "vat_rates_categories_api_endpoint_for_vat_validation_and_tax_rates", "products_detail_deprecated_for_forever21", "s_p_500_verticals_for_fancyoptions", "user_s_followers_for_twitter", "pack_for_flaticon", "schoolname_for_dcps_project"], "api_descs": {"Finish": "No description available.", "aljazeera_for_arabic_news_api": "مسار يقوم باسترجاع الاخبار من موقع الجزيرة", "france24_arabic_for_arabic_news_api": "مسار يقوم باسترجاع اخر الأخبار من موقع فرانس 24 بالعربية", "get_anime_news_list_for_anime_news_net": "Get the most up-to-date anime list up to date and in real time", "get_team_schedule_for_tank01_fantasy_stats": "This call returns the schedule of any team, using the teamID that can be found in \"getNBATeams\" call.\n\nCall needs to look like this:\n\n/getNBATeamSchedule?teamID=1\n\nYou can also use the team Abbreviation:\n\n/getNBATeamSchedule?teamAbv=CHI   \n\nThat will return a list of the team's games in the body. \n\nTo get a list of appropriate team abbreviations, use the getTeams call.\n\nYou can also add the \"season\" parameter if you want to specify season.  Right now we only have season 2022 and 2023.   \nDefault season is current season.", "list_of_cakes_for_the_birthday_cake_db": "This endpoint responds with a list of cakes that includes their names and images, as well as their IDs, which must be provided in the \"Detailed Cake Recipe by ID\t\n\" endpoint to receive the detailed recipe.", "list_of_champions_for_transfermarkt_db": "Get a list of champions", "media_by_id_for_instagram_api": "Get a media by Id", "pack_for_flaticon": "Method that allows you to get detailed information about a pack. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.", "products_detail_deprecated_for_forever21": "Get detail information of product by id", "retrieve_listing_events_for_openblur": "Retrieve Blur Listing Events", "rt_arabic_for_arabic_news_api": "مسار يسترجع اخر الاخبار المضافة الى موقع روسيا اليوم", "s_p_500_verticals_for_fancyoptions": "This endpoint returns the call and put spreads from the S&P 500 with the highest credits. The verticals that are returned have a 70% chance of being out of the money at time of expirations. This endpoint is updated hourly.", "schoolname_for_dcps_project": "gets all data from a specific school through input of its name", "set_address_for_catalogapi": "Adds a shipping address to the cart", "settag_for_sms_receive": "Change the current tag.", "stations_list_for_irail": "", "th_network_for_syamsul_bachri": "IONPREMIER", "user_s_followers_for_twitter": "This endpoint return a list of user's followers given a user ID", "vat_rates_categories_api_endpoint_for_vat_validation_and_tax_rates": "The /categories/ endpoint makes it easy to get the latest VAT rates, including the reduced rates for certain categories, for a specific country."}, "aseqs": [{"api_name": "france24_arabic_for_arabic_news_api", "api_action": "\nAction: france24_arabic_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "aljazeera_for_arabic_news_api", "api_action": "\nAction: aljazeera_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "rt_arabic_for_arabic_news_api", "api_action": "\nAction: rt_arabic_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "france24_arabic_for_arabic_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "aljazeera_for_arabic_news_api", "api_action": "\nAction: aljazeera_for_arabic_news_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_media_for_social_media_direct_to_platforms"}}, {"state": "generated_by_agent", "aseq": {"api_name": "france24_arabic_for_arabic_news_api"}}]}
{"URL": "14642", "query": "My company is launching a new product and we need to create a marketing campaign. Can you fetch us some trending marketing ideas and strategies from Pinterest? Additionally, it would be great if you can provide us with the profiles of marketing experts who have successfully executed similar campaigns.", "api_names": ["get_user_profile_for_pinterest_apis", "search_user_for_pinterest_apis", "get_user_pins_for_pinterest_apis", "Finish", "offers_for_price_comparison", "wait_for_message_for_gettestmail", "v1_interestrate_for_interest_rate_by_api_ninjas", "get_crypto_news_from_single_website_for_crypto_news_v11", "get_space_news_for_news_space", "view_xml_response_for_pe_demo", "download_airports_for_priceline_com_provider", "marine_weather_api_for_world_weather_online_api", "order_list_for_catalogapi", "search_for_gearbest", "provider2_live_list_for_football_betting_odds", "random_historic_event_for_world_history_timeline", "twitter_space_stream_url_for_twitter_aio", "connect_test_for_airbnb_listings", "daily_match_list_results_for_ice_hockey_data", "get_phone_number_for_countries"], "api_descs": {"Finish": "No description available.", "connect_test_for_airbnb_listings": "No parameters needed. Useful to test connectivity and authentication", "daily_match_list_results_for_ice_hockey_data": "Daily match list including finished matches.\n\n**The data will return for only -+7 days period, so endpoint can be tested with date range of today - 7 days.**", "download_airports_for_priceline_com_provider": "Downloads a list of airports with IATA codes for Flight search", "get_crypto_news_from_single_website_for_crypto_news_v11": "This endpoint allows you to retrieve all the news articles about Crypto from a single website", "get_phone_number_for_countries": "This gets phone codes on a country. Use ISO2 for country_code.", "get_space_news_for_news_space": "Get Space News", "get_user_pins_for_pinterest_apis": "Get User Pins by user name", "get_user_profile_for_pinterest_apis": "Get User Profile by username", "marine_weather_api_for_world_weather_online_api": "Marine Weather API provides worldwide marine weather forecast and tide data for upto 7-days.", "offers_for_price_comparison": "list offers for the product", "order_list_for_catalogapi": "This method returns a list of order numbers (the Catalog API order numbers, not external_order_number) that match a given external_user_id.", "provider2_live_list_for_football_betting_odds": "get all matches", "random_historic_event_for_world_history_timeline": "Returns a Random World Historic Event with the year and the event", "search_for_gearbest": " ", "search_user_for_pinterest_apis": "Search user by keyword", "twitter_space_stream_url_for_twitter_aio": "Receive m3u8 url for Twitter Space stream by mediaId.", "v1_interestrate_for_interest_rate_by_api_ninjas": "API Ninjas Interest Rate API endpoint.", "view_xml_response_for_pe_demo": "View a sample response in XML format.", "wait_for_message_for_gettestmail": " "}, "aseqs": [{"api_name": "search_user_for_pinterest_apis", "api_action": "\nAction: search_user_for_pinterest_apis\nAction Input: {\n  \"keyword\": \"marketing expert\"\n}", "api_reaction": null}, {"api_name": "get_user_profile_for_pinterest_apis", "api_action": "\nAction: get_user_profile_for_pinterest_apis\nAction Input: {\n  \"username\": \"agenlinak\"\n}", "api_reaction": null}, {"api_name": "search_user_for_pinterest_apis", "api_action": "\nAction: search_user_for_pinterest_apis\nAction Input: {\n  \"keyword\": \"marketing ideas\"\n}", "api_reaction": null}, {"api_name": "get_user_pins_for_pinterest_apis", "api_action": "\nAction: get_user_pins_for_pinterest_apis\nAction Input: {\n  \"username\": \"Marketingideas01\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_user_for_pinterest_apis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_pins_for_pinterest_apis", "api_action": "{\"keyword\": \"marketing expert\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_user_for_pinterest_apis", "api_action": "\nAction: search_user_for_pinterest_apis\nAction Input: {\n  \"keyword\": \"marketing trends\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_pins_for_pinterest_apis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_pins_for_pinterest_apis"}}]}
{"URL": "55810", "query": "Roll a regular die and let me know the result. Additionally, roll five custom dice, one with eight sides and the others with ten sides each, and provide the individual results as well as the total. I would greatly appreciate your assistance!", "api_names": ["custom_dice_rolls_for_dice_roll_simulator", "regular_die_for_dice_roll_simulator", "custom_dice_for_dice_roll_simulator", "Finish", "search_php_for_geokeo_forward_geocoding", "buscar_empresas_for_enotas_gateway", "search_by_registration_number_for_business_and_company_name_api", "get_products_in_category_for__demo_project_v13", "holder_for_holistic_finance_stock_data", "exact_url_non_english_for_best_backlink_checker_api", "get_statuses_for_judge0_extra_ce", "api_bestsales_sortedbynewest_for_magic_aliexpress", "get_manga_by_id_for_anime_manga_and_novels_api", "viewrecords_for_zohocreator", "similar_words_for_dictionary_translation_hablaa", "storageexists_for_groupdocs_annotation_cloud", "location_for_g_search", "search_req_for_hanime_python_api", "shows_id_episodes_for_streamlinewatch_streaming_guide", "detail2_for_spaceflight_news"], "api_descs": {"Finish": "No description available.", "api_bestsales_sortedbynewest_for_magic_aliexpress": "Retrieves the last best product added in the system", "buscar_empresas_for_enotas_gateway": "Buscar empresas emissoras", "custom_dice_for_dice_roll_simulator": "Roll any number of dice with any number of sides.", "custom_dice_rolls_for_dice_roll_simulator": "Roll any number of dice with any number of sides any number of times.", "detail2_for_spaceflight_news": " ", "exact_url_non_english_for_best_backlink_checker_api": "Get backlinks of a specific URL. Non English URL's only", "get_manga_by_id_for_anime_manga_and_novels_api": "Get Manga Information by id", "get_products_in_category_for__demo_project_v13": " ", "get_statuses_for_judge0_extra_ce": "Get statuses.", "holder_for_holistic_finance_stock_data": "Provides information about the current holder structure.", "location_for_g_search": "The Location API lets you search for supported Google search locations. You can pass the `location_name` returned by the Location API as the `location_name` parameter and set the `location_parameters_auto` value to true in a Search API query to retrieve search results localized to that location.", "regular_die_for_dice_roll_simulator": "Roll one regular die.", "search_by_registration_number_for_business_and_company_name_api": "Search company information by the company or business' registration number issued by the CAC. It returns a single match if the registration number exists.", "search_php_for_geokeo_forward_geocoding": "Blazing fast geocoding open service with world wide coverage and 24x7 Support.Quickly start deploying your apps with our affordable and accurate geocoding api.Support for all languages java, python, php, c, c++, React, Angular etc.Sign up without any credit card and get 2500 free api requests daily.", "search_req_for_hanime_python_api": "Search API with Query\n\n**This request is limited, Please Refer to /search for more stuff**", "shows_id_episodes_for_streamlinewatch_streaming_guide": "List all the episodes from the show", "similar_words_for_dictionary_translation_hablaa": "Get translations of similar words.", "storageexists_for_groupdocs_annotation_cloud": " ", "viewrecords_for_zohocreator": "Replace https://zohocreator.p.rapidapi.com/ with https://creator.zoho.com/api/ if you're using native system\n\nGet Records from a Zoho View/Report"}, "aseqs": [{"api_name": "regular_die_for_dice_roll_simulator", "api_action": "\nAction: regular_die_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "custom_dice_for_dice_roll_simulator", "api_action": "\nAction: custom_dice_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "custom_dice_rolls_for_dice_roll_simulator", "api_action": "\nAction: custom_dice_rolls_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "custom_dice_rolls_for_dice_roll_simulator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "custom_dice_rolls_for_dice_roll_simulator", "api_action": "{\"number_of_regular_dice\": 1, \"sides_per_regular_die\": 6, \"number_of_custom_dice\": [8, 10, 10], \"return_format\": \"individual\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "regular_die_for_dice_roll_simulator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "regular_die_for_dice_roll_simulator"}}]}
{"URL": "70653", "query": "I am a beginner in forex trading and I want to learn about the strength of individual currencies. Can you fetch the symbol strength for the h1 timeframe and also provide the current market status?", "api_names": ["symbol_strength_for_currency_quake", "market_status_for_currency_quake", "Finish", "currencies_for_skyscanner_api", "listoforders_for_sandbox_mktplace_eu_04_orders", "endpint_b_for_putreq", "get_detailed_data_for_all_counties_for_a_single_state_for_us_counties", "gameweekgamesbyclub_for_premier_league_stats", "api_stocks_for_prague_stock_exchange", "recipient_for_finhost", "get_indivisual_news_source_news_for_climate_change_live_v3", "get_category_tree_category_tree_get_for_shopee_v2"], "api_descs": {"Finish": "No description available.", "api_stocks_for_prague_stock_exchange": " ", "currencies_for_skyscanner_api": "You can use the `/currencies` endpoint to retrieve the currencies that we support and information about how we format them in Skyscanner.", "endpint_b_for_putreq": "efsdfs", "gameweekgamesbyclub_for_premier_league_stats": "Get all games from a particular gameweek and club.", "get_category_tree_category_tree_get_for_shopee_v2": "Get shopee category tree", "get_detailed_data_for_all_counties_for_a_single_state_for_us_counties": "county", "get_indivisual_news_source_news_for_climate_change_live_v3": "Get News about climate change from a specific news resource.", "listoforders_for_sandbox_mktplace_eu_04_orders": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html", "market_status_for_currency_quake": "Is the market open?", "recipient_for_finhost": "List of the recipients for the client", "symbol_strength_for_currency_quake": "Exposes the combined strength of 8 individual currencies using calculations applied to 28 Forex pairs."}, "aseqs": [{"api_name": "symbol_strength_for_currency_quake", "api_action": "\nAction: symbol_strength_for_currency_quake\nAction Input: {\n  \"timeframe\": \"h1\"\n}", "api_reaction": null}, {"api_name": "market_status_for_currency_quake", "api_action": "\nAction: market_status_for_currency_quake\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "symbol_strength_for_currency_quake"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_status_for_currency_quake"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"symbol_strength_for_currency_quake\",\n\t\"api_action\": \"\\nAction: symbol_strength_for_currency_quake\\nAction Input: {\\n  \\\"timeframe\\\": \\\"h1\\\"\\n}\",\n}"}]}
{"URL": "26253", "query": "I want to improve the SEO of my website and need to analyze its backlinks. Can you provide me with the top backlinks, poor backlinks, and new backlinks? For each backlink, I would like to know the URLs of the referring pages, the anchor texts, and whether the links are image links or nofollow links. It would be helpful if you could also provide the inlink ranks and first seen dates for these backlinks.", "api_names": ["exact_url_non_english_for_best_backlink_checker_api", "top_backlinks_for_best_backlink_checker_api", "Finish", "new_backlinks_for_best_backlink_checker_api", "list_all_bot_category_groups_for_lemurbot", "search_for_youtube_v3_alternative", "media_sources_statistics_for_public_url_share", "downloadoptimize_for_minecraft_forge_optifine", "all_news_for_crypto_news_v2", "live_tags_for_quality_porn", "get_app_datasafety_for_google_play_api", "history_prices_for_macrotrends_finance", "v1_sticker_sticker_id_for_tokapi_mobile_version", "get_coupons_for_get_promo_codes", "tags_list_for_tasty", "sky_news_arabic_for_arabic_news_api", "detect_for_languagelayer", "trending_for_cryptocurrency_markets", "products_v2_list_similarities_deprecating_for_asos", "daily_schedule_for_hockey_datafeeds_by_rolling_insights"], "api_descs": {"Finish": "No description available.", "all_news_for_crypto_news_v2": "Get news from all supported sources.", "daily_schedule_for_hockey_datafeeds_by_rolling_insights": "Returns season schedule for the specified date or \"now\" returns current day's schedule. Daily schedule is changed at 10 AM ET.", "detect_for_languagelayer": "API endpoint used to perform standard (single) language detection", "downloadoptimize_for_minecraft_forge_optifine": "Redirect to download Optimize.", "exact_url_non_english_for_best_backlink_checker_api": "Get backlinks of a specific URL. Non English URL's only", "get_app_datasafety_for_google_play_api": "Returns datasafety.", "get_coupons_for_get_promo_codes": "Get Coupons", "history_prices_for_macrotrends_finance": "This gives you the Date, Open, High, Low, Close, Adj Close, Volume prices of the stock\n\nQUERY PARAMETER: symbol the ticker symbol of the company you want to see.\n\nQUERY PARAMETER: range = ['1y', '5y', 'max']", "list_all_bot_category_groups_for_lemurbot": "Get a list of category groups which are linked to user owned bots (not locked bots).", "live_tags_for_quality_porn": "Search for live tags and the associated data.", "media_sources_statistics_for_public_url_share": "Search and find details or statistics on media sources", "new_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "products_v2_list_similarities_deprecating_for_asos": "List similar products by product id", "search_for_youtube_v3_alternative": "Search videos, playlist, channel.", "sky_news_arabic_for_arabic_news_api": "مسار يسترجع اخر الاخبار من موقع سكاي نيوز عربي", "tags_list_for_tasty": "List supported tags name for filtering in recipes/list API", "top_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "trending_for_cryptocurrency_markets": "Current cryptocurrencies trending today.", "v1_sticker_sticker_id_for_tokapi_mobile_version": "Effect information by ID (look at stickers field in video response)"}, "aseqs": [{"api_name": "top_backlinks_for_best_backlink_checker_api", "api_action": "\nAction: top_backlinks_for_best_backlink_checker_api\nAction Input: {\n  \"domain\": \"mywebsite.com\"\n}", "api_reaction": null}, {"api_name": "exact_url_non_english_for_best_backlink_checker_api", "api_action": "\nAction: exact_url_non_english_for_best_backlink_checker_api\nAction Input: {\n  \"domain\": \"mywebsite.com\"\n}", "api_reaction": null}, {"api_name": "new_backlinks_for_best_backlink_checker_api", "api_action": "\nAction: new_backlinks_for_best_backlink_checker_api\nAction Input: {\n  \"domain\": \"mywebsite.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "top_backlinks_for_best_backlink_checker_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_backlinks_for_best_backlink_checker_api", "api_action": "\nAction: top_backlinks_for_best_backlink_checker_api\nAction Input: {\n  \"domain\": \"mywebsite.com\",\n  \"details\": true, \n  \"linkType\": \"both\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_backlinks_for_best_backlink_checker_api", "api_action": "\nAction: top_backlinks_for_best_backlink_checker_api\nAction Input: {\n  \"domain\": \"mywebsite.com\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_backlinks_for_best_backlink_checker_api", "api_action": "\nAction: top_backlinks_for_best_backlink_checker_api\nAction Input: {\n  \"domain\": \"mywebsite.com\"\n}", "api_reaction": null}}]}
{"URL": "43580", "query": "My friends and I are interested in the cryptocurrency market. Can you assist us in generating a candlestick chart for the trading pair 'DOGEUSDT' on Binance? We would like a chart with the default settings. Additionally, perform a health check to ensure the API is working fine.", "api_names": ["binance_charts_for_candlestick_chart", "health_for_candlestick_chart", "Finish", "loginuser_for_urltest", "api_index_name_for_finanzoo_api_fundamentals", "provider4_live_inplaying_for_football_betting_odds", "get_assigned_vehicle_for_limoucloud", "testendpoint_for_test_v20", "get_for_tripit", "api_analyze_for_tiktok_private_api", "bsc_news_for_cryptocurrency_news", "categories_for_facebook_marketplace", "udprn_udprn_for_uk_postcode_api", "get_categories_v1_for_shapeways", "retrieve_text_for_melrose_labs_voice_api"], "api_descs": {"Finish": "No description available.", "api_analyze_for_tiktok_private_api": "Analyze user data : engagement, hashtags, mentions, and recent videos.", "api_index_name_for_finanzoo_api_fundamentals": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name", "binance_charts_for_candlestick_chart": "This endpoint creates candlestick charts for any cryptocurrency listed on [Binance](https://www.binance.com) that you want!", "bsc_news_for_cryptocurrency_news": "Get the top latest news from BSC News.", "categories_for_facebook_marketplace": "Facebook items categories", "get_assigned_vehicle_for_limoucloud": "Get the Assigned vehicle to add its id in Checklist creation", "get_categories_v1_for_shapeways": "", "get_for_tripit": "A get request is used to retrieve a specific object from the TripIt API given its TripIt object ID. Since get requests do not change data they are all made via an HTTP GET request for a URL that takes the following form:", "health_for_candlestick_chart": "Health check", "loginuser_for_urltest": "Logs user into the system", "provider4_live_inplaying_for_football_betting_odds": "get inplaying matches list", "retrieve_text_for_melrose_labs_voice_api": "Retrieve text from previously converted speech-to-text.", "testendpoint_for_test_v20": "test", "udprn_udprn_for_uk_postcode_api": "Gets addresses for given search term."}, "aseqs": [{"api_name": "binance_charts_for_candlestick_chart", "api_action": "\nAction: binance_charts_for_candlestick_chart\nAction Input: {\n  \"symbol\": \"DOGEUSDT\"\n}", "api_reaction": null}, {"api_name": "health_for_candlestick_chart", "api_action": "\nAction: health_for_candlestick_chart\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "binance_charts_for_candlestick_chart"}}, {"state": "generated_by_agent", "aseq": {"api_name": "binance_charts_for_candlestick_chart", "api_action": "\nAction: binance_charts_for_candlestick_chart\nAction Input: {\n  \"symbol\": \"DOGEUSDT\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "binance_charts_for_candlestick_chart", "api_action": "\nAction: binance_charts_for_candlestick_chart\nAction Input: {\n  \"symbol\": \"DOGEUSDT\"\n}", "api_reaction": null}}]}
{"URL": "30316", "query": "I am a trader and I want to monitor the sentiment of the crypto market. Please fetch me the latest news articles and tweets about bitcoin. Additionally, it would be great to extract the keywords from these sources to identify the trending topics.", "api_names": ["latest_tweets_for_crypto_news_v3", "latest_articles_for_crypto_news_v3", "Finish", "get_quotes_category_for_world_of_quotes", "prefereces_for_getbs", "gameweekgamesbyclub_for_premier_league_stats", "artist_top_tracks_for_shazam", "getsamples_for_powerbi", "matches_v2_get_statistics_for_livescore_v2", "balansheet_financials_for_yh_finance_complete", "password_generation_for_explorarc_s_password_generation_api", "get_filter_for_tdot_school_data"], "api_descs": {"Finish": "No description available.", "artist_top_tracks_for_shazam": "This endpoint will return the top tracks of the artist", "balansheet_financials_for_yh_finance_complete": "This endpoint returns a company/ stock financials", "gameweekgamesbyclub_for_premier_league_stats": "Get all games from a particular gameweek and club.", "get_filter_for_tdot_school_data": "Get Filter", "get_quotes_category_for_world_of_quotes": "This API returns array of over 350 types of categories we have in our library.\nThis returns an array of strings. Real response will have more categories but in mock response we displayed a few.", "getsamples_for_powerbi": "Get Power BI samples", "latest_articles_for_crypto_news_v3": "This endpoint provides the latest crypto news articles scraped from the web  incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nFor historical cryptonews data check out our open source dataset on [Kaggle](https://www.kaggle.com/oliviervha/crypto-news)\n\nParameters:\n- **[REQUIRED] subject** e.g. bitcoin, altcoin, ethereum, nft, blockchain, defi\n- **[OPTIONAL] last_n_hours**: Only news articles from the last *n* hours are provided (default: 24).\n- **[OPTIONAL] max_articles**: Maximum number of articles in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract from article (default:10)\n\nCurrently news is scraped from:\n- [CryptoNews](cryptonews.com)\n- [CoinTelegraph](https://cointelegraph.com/)\n- [CryptoPotato](https://cryptopotato.com/)\n\nIf you have suggestions for more sources to add, please get in contact.\n\nMore information:\n- Get the [historical Crypto News dataset](https://www.kaggle.com/oliviervha/crypto-news) from Kaggle!\n- Click [here](https://app.swaggerhub.com/apis-docs/CryptoAdvisor/CryptoNews/1.0.0#/developers/cryptonews) for the API Swagger documentation.\n- Keep up-to-date with our [CryptoNews+ Twitter](https://twitter.com/cryptonews_plus) account!", "latest_tweets_for_crypto_news_v3": "This endpoint provides the latest crypto news tweets incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nParameters:\n- **[OPTIONAL] last_n_hours**: Only tweets from the last *n* hours are provided (default: 12).\n- **[OPTIONAL] max_articles**: Maximum number of tweets in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract form tweet (default:10)\n\nCurrently, we make use of the following sources:\n- [@BTCTN](https://twitter.com/BTCTN) \n- [@CryptoBoomNews](https://twitter.com/CryptoBoomNews)\n- [@cryptocom](https://twitter.com/cryptocom)\n- [@Crypto_Potato](https://twitter.com/crypto_potato)\n\nIf you have any suggestions for twitter accounts to add, please get in touch.", "matches_v2_get_statistics_for_livescore_v2": "Get statistics of a match", "password_generation_for_explorarc_s_password_generation_api": "The Best API to Generate Random Password with your desired length and as a response you get an set of 10 Passwords", "prefereces_for_getbs": "Prefereces"}, "aseqs": [{"api_name": "latest_articles_for_crypto_news_v3", "api_action": "\nAction: latest_articles_for_crypto_news_v3\nAction Input: {\n  \"subject\": \"bitcoin\",\n  \"top_n_keywords\": 5,\n  \"max_articles\": 5,\n  \"last_n_hours\": 24\n}", "api_reaction": null}, {"api_name": "latest_articles_for_crypto_news_v3", "api_action": "\nAction: latest_articles_for_crypto_news_v3\nAction Input: {\n  \"subject\": \"bitcoin\",\n  \"top_n_keywords\": 5,\n  \"max_articles\": 5,\n  \"last_n_hours\": 24\n}", "api_reaction": null}, {"api_name": "latest_tweets_for_crypto_news_v3", "api_action": "\nAction: latest_tweets_for_crypto_news_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_articles_for_crypto_news_v3", "subject": "bitcoin", "last_n_hours": 24, "max_articles": 100, "top_n_keywords": 10}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_tweets_for_crypto_news_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_tweets_for_crypto_news_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_articles_for_crypto_news_v3", "api_action": "\nAction: latest_articles_for_crypto_news_v3\nAction Input: {\n  \"subject\": \"bitcoin\",\n  \"top_n_keywords\": 5,\n  \"max_articles\": 5,\n  \"last_n_hours\": 12\n}", "api_reaction": null}}]}
{"URL": "1352", "query": "My family is interested in investing in the stock market and we want to know the current stock status of GOOG. Can you provide the current stock data of GOOG? Additionally, please provide the stock history of GOOG on February 1, 2023, including the opening price, closing price, high price, low price, volume, and currency.", "api_names": ["get_the_stock_history_by_code_for_stocks", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks", "get_the_current_stock_by_code_for_stocks", "Finish", "search_track_for_shazam", "total_count_for_mcapi", "user_followings_for_tiktok_scraper_v2", "articles_for_news_v3", "get_word_for_random_word_api", "units_for_yoonit", "sending_voice_otp_auto_generated_otp_for_2factor_authentication_india", "played_for_csgo_matches_and_tournaments", "google_maps_data_id_for_google_search_2", "get_company_quarterly_balance_sheet_for_finance_data", "title_seasons_for_netflix_data", "popular_airline_routes_for_flight_data_v2", "player_injuries_for_basketball_datafeeds_by_rolling_insights", "get_detect_for_xss_shield", "list_revisions_for_rushtranslate", "locations_list_deprecated_for_the_fork_the_spoon"], "api_descs": {"Finish": "No description available.", "articles_for_news_v3": "Fetches articles from one specific newspaper", "get_company_quarterly_balance_sheet_for_finance_data": "Get Company Quarterly Balance Sheet", "get_detect_for_xss_shield": "This endpoint detects and prevents XSS attacks in input data sent via query parameters.", "get_the_current_stock_by_code_for_stocks": "Get the current stock by code.", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks": "Get the current stock by exchange code and stock code.", "get_the_stock_history_by_code_for_stocks": "Get the stock history by code.", "get_word_for_random_word_api": "Returns a random word. No parameters. Just randomness.", "google_maps_data_id_for_google_search_2": "Using this API you can get the JSON results of the data ID of a particular place.", "list_revisions_for_rushtranslate": "Get a paginated list of your revisions sorted in descending order by requested_at date.", "locations_list_deprecated_for_the_fork_the_spoon": "List relating locations by Google place id", "played_for_csgo_matches_and_tournaments": "Last of played cs:go matches", "player_injuries_for_basketball_datafeeds_by_rolling_insights": "Returns a record of each player's injury on a team", "popular_airline_routes_for_flight_data_v2": "Returns routes for which an airline operates flights, sorted by popularity.", "search_track_for_shazam": "This endpoint will search for the name of any song and return similar songs with the name.", "sending_voice_otp_auto_generated_otp_for_2factor_authentication_india": "This endpoint is used to send Auto Generated VOICE OTP to India", "title_seasons_for_netflix_data": "title-seasons", "total_count_for_mcapi": "Get total count of entries", "units_for_yoonit": " ", "user_followings_for_tiktok_scraper_v2": "Get user followings."}, "aseqs": [{"api_name": "get_the_current_stock_by_code_for_stocks", "api_action": "\nAction: get_the_current_stock_by_code_for_stocks\nAction Input: {\n  \"stockcode\": \"GOOG\"\n}", "api_reaction": null}, {"api_name": "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks", "api_action": "\nAction: get_the_current_stock_by_exchange_code_and_stock_code_for_stocks\nAction Input: {\n  \"exchangecode\": \"NYSE\",\n  \"stockcode\": \"GOOG\"\n}", "api_reaction": null}, {"api_name": "get_the_stock_history_by_code_for_stocks", "api_action": "\nAction: get_the_stock_history_by_code_for_stocks\nAction Input: {\n  \"date\": \"2023-02-01\",\n  \"stockcode\": \"GOOG\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_the_current_stock_by_code_for_stocks"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_stock_history_by_code_for_stocks"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_current_stock_by_code_for_stocks", "api_action": "\nAction: get_the_current_stock_by_code_for_stocks\nAction Input: {\n  \"stockcode\": \"GOOG\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_current_stock_by_code_for_stocks", "api_action": "\nAction: get_the_current_stock_by_code_for_stocks\nAction Input: {\n  \"stockcode\": \"GOOG\"\n}", "api_reaction": null}}]}
{"URL": "30254", "query": "I'm a student working on a project about climate change. Can you provide me with all the latest news articles about climate change? It would be helpful to have news from different sources like The Guardian and CNN.", "api_names": ["get_individual_news_from_source_news_for_live_climate_change_v2", "get_all_climate_change_news_for_live_climate_change_v2", "Finish", "search_for_dogbreeddb", "versions_for_darko_androcec_example", "wallets_balance_by_chain_for_defi_watch", "get_assigned_vehicle_for_limoucloud", "quantum4u_for_find_vehicle", "search_videos_channels_playlists_for_youtube_search_and_download", "all_belgian_races_for_wonderboyapi", "game_probability_gamepk_for_baseball", "updates_for_yc_hacker_news_official", "post_details_for_axesso_facebook_data_service", "q_a_notifications_for_scraptik", "findallcurrentfeaturedlistings_for_etsy"], "api_descs": {"Finish": "No description available.", "all_belgian_races_for_wonderboyapi": "At this endpoint nothing happens for now", "findallcurrentfeaturedlistings_for_etsy": "Finds FeaturedTreasury listings that are currently displayed on a regional homepage.", "game_probability_gamepk_for_baseball": "Query Baseball probability data.", "get_all_climate_change_news_for_live_climate_change_v2": "This endpoint will return news from climate change from all over the world", "get_assigned_vehicle_for_limoucloud": "Get the Assigned vehicle to add its id in Checklist creation", "get_individual_news_from_source_news_for_live_climate_change_v2": "Get news about climate change from a specific source news", "post_details_for_axesso_facebook_data_service": "Fetch post details for a single post", "q_a_notifications_for_scraptik": "Show \"Q&A\" account notifications.", "quantum4u_for_find_vehicle": "test", "search_for_dogbreeddb": "Search dog breed by keyword.", "search_videos_channels_playlists_for_youtube_search_and_download": "Search any youtube content with all available filters", "updates_for_yc_hacker_news_official": "Get the changed items and profiles", "versions_for_darko_androcec_example": "Lists summary information about each Salesforce version currently available, including the version, label, and a link to each version's root.", "wallets_balance_by_chain_for_defi_watch": "Get wallet balance in USD by chain"}, "aseqs": [{"api_name": "get_all_climate_change_news_for_live_climate_change_v2", "api_action": "\nAction: get_all_climate_change_news_for_live_climate_change_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_climate_change_news_for_live_climate_change_v2", "api_action": "\nAction: get_all_climate_change_news_for_live_climate_change_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "get_individual_news_from_source_news_for_live_climate_change_v2", "api_action": "\nAction: get_individual_news_from_source_news_for_live_climate_change_v2\nAction Input: {\n  \"newspaperid\": \"the_guardian\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_news_for_live_climate_change_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_from_source_news_for_live_climate_change_v2", "api_action": "\nAction: get_individual_news_from_source_news_for_live_climate_change_v2\nAction Input: {}\ngoogletypedeveloper", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_from_source_news_for_live_climate_change_v2", "api_action": "\nAction: get_individual_news_from_source_news_for_live_climate_change_v2\nAction Input: {\"sources\": \"The Guardian, CNN\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_climate_change_news_for_live_climate_change_v2", "api_action": "\nAction: get_all_climate_change_news_for_live_climate_change_v2\nAction Input: {}", "api_reaction": null}}]}
{"URL": "42483", "query": "My family and I are planning a vacation to Massachusetts and we need the zip code details for the city of Belmont. Can you retrieve the place name, postal code, longitude, and latitude for us? Additionally, we would like to know the country abbreviation and state abbreviation.", "api_names": ["get_info_by_city_for_zippopotam_us", "get_zip_code_info_for_zippopotam_us", "Finish", "get_by_filter_for_world_population_by_decade_and_growth_rate", "get_categories_categoryid_v1_for_shapeways", "teams_get_transfers_for_divanscore", "stock_key_statistics_stock_for_mboum_finance", "fixtures_by_team_for_rugby_live_data", "total_population_for_countries_population", "get_tide_station_area_data_for_stormglass_complete", "video_post_comments_for_tiktok_data", "comments_by_username_for_reddit", "get_show_facts_rotten_tomato_scores_for_new_girl", "getpositions_for_kalshi_trading_api", "get_user_dialog_json_for_waifu", "get_campaign_from_url_for_fomoapi", "signup_for_whin", "sustainable_development_goals_en_json_for_daily_knowledge"], "api_descs": {"Finish": "No description available.", "comments_by_username_for_reddit": "Comments By Username", "fixtures_by_team_for_rugby_live_data": "Lists only upcoming/in play fixtures for a given team. \n\n**Note** it will not list any results, so when a match reaches result status it drops off. Use Fixtures and Results By Team OR Fixtures  And Results by Team by Season endpoint for this functionality.", "get_by_filter_for_world_population_by_decade_and_growth_rate": "Get by filter", "get_campaign_from_url_for_fomoapi": "Get lead from Specific website  Campaign", "get_categories_categoryid_v1_for_shapeways": "", "get_info_by_city_for_zippopotam_us": "", "get_show_facts_rotten_tomato_scores_for_new_girl": "You can find show data including season by season rotten tomato scores by hitting the home route.", "get_tide_station_area_data_for_stormglass_complete": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.", "get_user_dialog_json_for_waifu": "Get user dialog json", "get_zip_code_info_for_zippopotam_us": "", "getpositions_for_kalshi_trading_api": "Endpoint for getting all market positions for the logged-in member.", "signup_for_whin": "This endpoint is **ONLY** used to enter the code you received to signup. Follow this [video](https://youtu.be/uOZ-oH4kP58), or read the [tutorial](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/what-to-do-to-start-using-whin%3F-1), to learn how to start using whin.", "stock_key_statistics_stock_for_mboum_finance": "Get stock key statistics data.", "sustainable_development_goals_en_json_for_daily_knowledge": "The UN global goals for sustainable development.", "teams_get_transfers_for_divanscore": "Get transfers of specific team", "total_population_for_countries_population": "Returns the estimated total population\n\n- Number in millions.", "video_post_comments_for_tiktok_data": "Get video post comments."}, "aseqs": [{"api_name": "get_info_by_city_for_zippopotam_us", "api_action": "\nAction: get_info_by_city_for_zippopotam_us\nAction Input: {\n  \"country\": \"us\",\n  \"state\": \"massachusetts\",\n  \"city\": \"Belmont\"\n}", "api_reaction": null}, {"api_name": "get_zip_code_info_for_zippopotam_us", "api_action": "\nAction: get_zip_code_info_for_zippopotam_us\nAction Input: {\n  \"country\": \"us\",\n  \"postal_code\": \"02478\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_info_for_zippopotam_us"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_info_for_zippopotam_us"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_info_by_city_for_zippopotam_us"}}]}
{"URL": "32670", "query": "I'm writing a keto cookbook and need some inspiration. Can you provide me with a list of available categories for keto recipes? Additionally, can you suggest some recipes that include the word 'beef' in the search term?", "api_names": ["Finish", "categories_for_keto_diet", "search_keto_recipe_for_keto_diet", "all_keto_recipes_by_category_for_keto_diet", "get_highlight_item_for_instagram_profile", "tokens_for_crypto_market_data_from_token_metrics", "get_epic_free_games_for_epic_free_games", "get_attributes_for_musclewiki", "metrics_for_testing_for_my_use", "getpestsbycrop_for_agrofitdata", "gethomepage_for_radio_world_75_000_worldwide_fm_radio_stations_", "getsurfbreaksbycountry_for_simple_surf_forecast_api", "get_inboxes_for_intelligent_automation_ocr_ai_", "recent_match_list_for_soccer_data", "subscriptions_subscriptionid_for_signl4_critical_mobile_alerting", "china_and_us_relation_filter_for_east_china_news", "dns_record_lookup_for_viewdns", "get_the_current_stock_by_code_for_stocks", "custom_die_for_dice_roll_simulator", "get_names_for_indian_names"], "api_descs": {"Finish": "No description available.", "all_keto_recipes_by_category_for_keto_diet": "Gives all keto recipes by category ID.", "categories_for_keto_diet": "Lists all available categories of keto recipe.", "china_and_us_relation_filter_for_east_china_news": "Filters all news for US and China", "custom_die_for_dice_roll_simulator": "Roll one die with any number of sides.", "dns_record_lookup_for_viewdns": "View all configured DNS records (A, MX, CNAME etc.) for a specified domain name.", "get_attributes_for_musclewiki": "Get Attributes you can use to filter exercises", "get_epic_free_games_for_epic_free_games": "Get Epic Free Games", "get_highlight_item_for_instagram_profile": "Highlight item", "get_inboxes_for_intelligent_automation_ocr_ai_": "Get a list of inboxes with their ids", "get_names_for_indian_names": "Fetch a random list of indian names", "get_the_current_stock_by_code_for_stocks": "Get the current stock by code.", "gethomepage_for_radio_world_75_000_worldwide_fm_radio_stations_": "*We have made an option for you to display result in your landing/home page. So you don't have to work hard to achieve this.*\nGet limited radios to show in landing/home page, based on.\n- limit", "getpestsbycrop_for_agrofitdata": " ", "getsurfbreaksbycountry_for_simple_surf_forecast_api": " ", "metrics_for_testing_for_my_use": "metrics", "recent_match_list_for_soccer_data": "Provides the result list of the last 20 matches between the two teams in overall, with home and away filters.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.\n\nP.S.\nFull data is available at Recent Match List endpoint but can not be shown in mock response.", "search_keto_recipe_for_keto_diet": "Gives all recipes by the search term.", "subscriptions_subscriptionid_for_signl4_critical_mobile_alerting": " ", "tokens_for_crypto_market_data_from_token_metrics": "Get tokens"}, "aseqs": [{"api_name": "categories_for_keto_diet", "api_action": "\nAction: categories_for_keto_diet\nAction Input: {}", "api_reaction": null}, {"api_name": "search_keto_recipe_for_keto_diet", "api_action": "\nAction: search_keto_recipe_for_keto_diet\nAction Input: {\n\"search\": \"beef\"\n}", "api_reaction": null}, {"api_name": "all_keto_recipes_by_category_for_keto_diet", "api_action": "\nAction: all_keto_recipes_by_category_for_keto_diet\nAction Input: {\n\"category\": 3\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "categories_for_keto_diet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_keto_recipe_for_keto_diet", "api_action": "\nAction: search_keto_recipe_for_keto_diet\nAction Input: {\"term\": \"beef\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_keto_recipes_by_category_for_keto_diet", "api_action": "\nAction: all_keto_recipes_by_category_for_keto_diet\nAction Input: {\n\"category_id\": \"meat\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_keto_recipes_by_category_for_keto_diet", "api_action": "\nAction: all_keto_recipes_by_category_for_keto_diet\nAction Input: {\n\"category\": 12\n}", "api_reaction": null}}]}
{"URL": "2246", "query": "I'm organizing a sports tournament and I need to know the results of a particular event. Can you provide me with the event result for the event with ID '987654'? Also, fetch the list of leagues and the prematch events.", "api_names": ["prematch_for_sports_betting_api", "leagues_for_sports_betting_api", "result_for_sports_betting_api", "Finish", "market_auto_complete_for_bb_finance", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau", "get_all_climate_news_for_new_climate", "movie_details_for_disney_worlds", "gettemplatedetails_for_nexweave", "getoutgoingmessagesjournal_for_green_api", "trending_for_cryptocurrency_markets", "getmarkethistory_for_kalshi_trading_api", "search_place_id_api_for_complete_study_bible", "search_users_for_tiktok_apis", "getinventory_for_petstore_blitz", "2_get_account_information_for_rewards_as_a_service"], "api_descs": {"2_get_account_information_for_rewards_as_a_service": "Get the information for an account created under a Customer", "Finish": "No description available.", "geocoding_and_geolookup_for_an_address_for_geocoder_united_states_census_bureau": "Returns a geocode and a geolookup for a specified address", "get_all_climate_news_for_new_climate": "News from all publications", "getinventory_for_petstore_blitz": "Returns a map of status codes to quantities", "getmarkethistory_for_kalshi_trading_api": "Endpoint for getting the statistics history for a market.\n\nThe value for the ticker path parameter should match the ticker of the target market.\nThe min_ts parameter is optional, and will restrict statistics to those after provided timestamp.\nThe min_ts is inclusive, which means a market history point at min_ts will be returned.", "getoutgoingmessagesjournal_for_green_api": "Документация [LastOutgoingMessages](https://green-api.com/docs/api/journals/LastOutgoingMessages/)", "gettemplatedetails_for_nexweave": "This API will return the template details including variables for a valid template.", "leagues_for_sports_betting_api": "League List", "market_auto_complete_for_bb_finance": "Query suggestion by term and phrase", "movie_details_for_disney_worlds": "Get movie details by searching movie name", "prematch_for_sports_betting_api": "Prematch List", "result_for_sports_betting_api": "Event Result", "search_place_id_api_for_complete_study_bible": "Used in conjuction with Chapter and Verse API, Place Detail API. Receives a Place Unique ID, returns a list of all verses in the Bible that mention the place. Helpful for studying the Biblical history of a particular place.", "search_users_for_tiktok_apis": "Search user by keyword", "trending_for_cryptocurrency_markets": "Current cryptocurrencies trending today."}, "aseqs": [{"api_name": "result_for_sports_betting_api", "api_action": "\nAction: result_for_sports_betting_api\nAction Input: {\n  \"lang\": \"en\",\n  \"evt\": 987654\n}", "api_reaction": null}, {"api_name": "leagues_for_sports_betting_api", "api_action": "\nAction: leagues_for_sports_betting_api\nAction Input: {\n  \"lang\": \"en\",\n  \"sp\": 1\n}", "api_reaction": null}, {"api_name": "prematch_for_sports_betting_api", "api_action": "\nAction: prematch_for_sports_betting_api\nAction Input: {\n  \"sp\": 1,\n  \"lang\": \"en\",\n  \"lid\": 2779\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "result_for_sports_betting_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "prematch_for_sports_betting_api", "api_action": "\nAction: prematch_for_sports_betting_api\nAction Input: {\n  \"lang\": \"en\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "prematch_for_sports_betting_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "result_for_sports_betting_api", "api_action": "\nAction: result_for_sports_betting_api\nAction Input: {\n  \"lang\": \"en\",\n  \"evt\": 987654\n}", "api_reaction": null}}]}
{"URL": "68948", "query": "I am a data analyst working for XYZ company, and I need comprehensive information about products on Amazon to analyze customer preferences and market trends. Can you provide me with pricing data, customer reviews, and product descriptions for a specific category of products? It would also be helpful to know the available marketplaces for data retrieval.", "api_names": ["categories_list_for_amazon_data_v2", "marketplace_list_for_amazon_data_v2", "Finish", "get_access_settings_for_hris", "getdistancematrix_for_woosmap", "getyourstoreinformation_for_ecartapi", "custom_dice_rolls_for_dice_roll_simulator", "riddle_by_keyword_for_riddlie_", "consulta_cep_for_viacep", "matches_for_betcity", "get_a_list_of_states_for_australian_postcode_to_suburb", "list_all_otask_records_for_odesk_apis", "event_highlights_video_for_flashlive_sports", "balance_sheet_for_sec_filings", "detail_page_for_ebay_de_product_details_page_scraper", "search_for_serp_api", "user_for_23andme", "quarter_analysis_for_basketball_data"], "api_descs": {"Finish": "No description available.", "balance_sheet_for_sec_filings": "Returns a company's most recent balance sheet summarizing their liabilities, assets and shareholders' equity", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "consulta_cep_for_viacep": "Consulta CEP", "custom_dice_rolls_for_dice_roll_simulator": "Roll any number of dice with any number of sides any number of times.", "detail_page_for_ebay_de_product_details_page_scraper": "Get all Data from https://www.ebay.de/itm/ITEM_ID\n\n**Payload:** ITEM_ID", "event_highlights_video_for_flashlive_sports": "Get highlights video by event ID", "get_a_list_of_states_for_australian_postcode_to_suburb": "This endpoint return 3 letter states for the passed postcode.", "get_access_settings_for_hris": "Get stored Access Setting for a specific customer", "getdistancematrix_for_woosmap": "Get distances and durations for a matrix of origins and destinations, based on the recommended route between start and end points for a specified travel mode.\n", "getyourstoreinformation_for_ecartapi": "Access store information fast with the access token we provided.", "list_all_otask_records_for_odesk_apis": "returns all task records under the company", "marketplace_list_for_amazon_data_v2": "This endpoint lists down the market places we use to fetch data!", "matches_for_betcity": "Latest matches by Betcity", "quarter_analysis_for_basketball_data": "Provides the analyst data for each quarters including Quarter Winning Avereages, Quarter Winning Counts, Quarter Winning Percentages with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "riddle_by_keyword_for_riddlie_": "Get one random riddle around a specific subject or keyword. For example, a riddle on a \"cat\".", "search_for_serp_api": "Perform Google search and get results", "user_for_23andme": "Gets the user id, and a list of profiles (an account can have multiple genotyped people) with ids and whether or not they're genotyped. This endpoint is great for using an app anonymously because there is no personally identifying information."}, "aseqs": [{"api_name": "categories_list_for_amazon_data_v2", "api_action": "\nAction: categories_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "marketplace_list_for_amazon_data_v2", "api_action": "\nAction: marketplace_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "marketplace_list_for_amazon_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marketplace_list_for_amazon_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_serp_api"}}]}
{"URL": "76538", "query": "My company is looking to expand its user base and we need more data. Please fetch the user details from the Reqres tool, specifically for page 2. Also, provide a list of unknown resources available.", "api_names": ["users_for_reqres", "unknown_for_reqres", "Finish", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks", "user_data_by_secuid_for_tiktok_solutions", "get_generations_by_model_id_for_car_specs", "getasinglewebhoook_for_ecartapi", "get_chain_id_for_token_scanner_multichain_honeypot_checker_multichain", "get_datasources_datasource_id_variables_for_ubidots", "north_america_for_nomad_list_cities", "search_users_for_tiktok_apis", "v1_inflation_for_inflation_by_api_ninjas", "match_details_for_dota_2_steam_web", "dns_request_for_dns_records_lookup", "specific_force_for_data_police_uk", "countiessearchinradius_for_mapreflex", "getstore_for_woosmap", "get_spell_for_dungeons_and_dragon_5e"], "api_descs": {"Finish": "No description available.", "countiessearchinradius_for_mapreflex": "Get Counties boundaries in circle with given radius (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "dns_request_for_dns_records_lookup": "DNS Request\n\nType can be one of:\n'A', 'AAAA', 'AFSDB', 'APL', 'CAA', 'CDNSKEY', 'CDS', 'CERT', 'CNAME', 'CSYNC', 'DHCID', 'DLV', 'DNAME', 'DNSKEY', 'DS', 'EUI48', 'EUI64', 'HINFO', 'HIP', 'HTTPS', 'IPSECKEY', 'KEY', 'KX', 'LOC', 'MX', 'NAPTR', 'NS', 'NSEC', 'NSEC3', 'NSEC3PARAM', 'OPENPGPKEY', 'PTR', 'RP', 'SMIMEA', 'SOA', 'SPF', 'SRV', 'SSHFP', 'SVCB', 'TA', 'TKEY', 'TLSA', 'TXT', 'URI', 'ZONEMD'\n\nIDN domains should be converted before requesting.\n\nUse **xn--fuball-cta.de** instead of **fußball.de**", "get_chain_id_for_token_scanner_multichain_honeypot_checker_multichain": "Returns chainId from chain name.", "get_datasources_datasource_id_variables_for_ubidots": "This resource list the variables of a specified data source, showing all the fields of the variables.", "get_generations_by_model_id_for_car_specs": "Returns a list of generations of a car model.", "get_spell_for_dungeons_and_dragon_5e": "Get information about a D&D spell like the school of magic, spell level and the full description.", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks": "Get the current stock by exchange code and stock code.", "getasinglewebhoook_for_ecartapi": " ", "getstore_for_woosmap": "Used to retrieve an asset from his `storeId`\n", "match_details_for_dota_2_steam_web": "To retrieve the specific details of a match, use this API:", "north_america_for_nomad_list_cities": "Get North America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "search_users_for_tiktok_apis": "Search user by keyword", "specific_force_for_data_police_uk": "Provides detailed information about a specific force.", "unknown_for_reqres": "List of unknown resources", "user_data_by_secuid_for_tiktok_solutions": "Get User Data by SecUID", "users_for_reqres": "Users", "v1_inflation_for_inflation_by_api_ninjas": "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages."}, "aseqs": [{"api_name": "users_for_reqres", "api_action": "\nAction: users_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "unknown_for_reqres", "api_action": "\nAction: unknown_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "users_for_reqres", "api_action": "\nAction: users_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "unknown_for_reqres", "api_action": "\nAction: unknown_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "users_for_reqres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_data_by_secuid_for_tiktok_solutions", "api_action": "\nAction: user_data_by_secuid_for_tiktok_solutions\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_data_by_secuid_for_tiktok_solutions", "api_action": "\nAction: user_data_by_secuid_for_tiktok_solutions\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "unknown_for_reqres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_data_by_secuid_for_tiktok_solutions"}}]}
{"URL": "55960", "query": "My family and I are looking for a place to have lunch near our current location. Please find the nearest cafes, restaurants, and fast food places within a radius of 500 meters. Our current latitude is 49.2803703 and longitude is -123.0413988.", "api_names": ["nearby_google_for_nearby_places", "Finish", "custom_die_for_dice_roll_simulator", "read_a_survey_nlp_for_nps_net_promoter_score", "message_read_for_zipwhip", "teams_teamid_eventsources_for_signl4_critical_mobile_alerting", "subscriptions_subscriptionid_teams_for_signl4_critical_mobile_alerting", "get_next_predictions_for_predictx"], "api_descs": {"Finish": "No description available.", "custom_die_for_dice_roll_simulator": "Roll one die with any number of sides.", "get_next_predictions_for_predictx": "\"Get Next Predictions\" is a powerful feature offered by the predictX API that allows developers to retrieve accurate predictions for upcoming events happening on the current day. This feature provides users with valuable insights and helps them make informed decisions about upcoming matches.\n\n These predictions are generated using advanced algorithms and statistical models that take into account various factors such as team performance, player statistics, historical data, and other relevant parameters.", "message_read_for_zipwhip": "Marks the given message as read in Zipwhip's database.", "nearby_google_for_nearby_places": "Returns a **JSON array of nearby places** sorted by distance from the origin coordinates in ascending order.\n\nOnly values from **/types (Google)** are valid types.\n\nMaximum places returned per request is 20.", "read_a_survey_nlp_for_nps_net_promoter_score": "Get a detail of customer survey answer by its survey id (sid), and applies to the third answer (a3) the sentiment analysis feature.", "subscriptions_subscriptionid_teams_for_signl4_critical_mobile_alerting": " ", "teams_teamid_eventsources_for_signl4_critical_mobile_alerting": " "}, "aseqs": [{"api_name": "nearby_google_for_nearby_places", "api_action": "\nAction: nearby_google_for_nearby_places\nAction Input: {\n  \"lat\": 49.2803703,\n  \"lng\": -123.0413988,\n  \"radius\": 500,\n  \"type\": \"cafe\"\n}", "api_reaction": null}, {"api_name": "nearby_google_for_nearby_places", "api_action": "\nAction: nearby_google_for_nearby_places\nAction Input: {\n  \"lat\": 49.2803703,\n  \"lng\": -123.0413988,\n  \"radius\": 500,\n  \"type\": \"restaurant\"\n}", "api_reaction": null}, {"api_name": "nearby_google_for_nearby_places", "api_action": "\nAction: nearby_google_for_nearby_places\nAction Input: {\n  \"lat\": 49.2803703,\n  \"lng\": -123.0413988,\n  \"radius\": 500,\n  \"type\": \"fast_food\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "nearby_google_for_nearby_places"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_google_for_nearby_places", "api_action": "\nAction: nearby_google_for_nearby_places\nAction Input: {\n  \"lat\": 49.2803703,\n  \"lng\": -123.0413988,\n  \"radius\": 500,\n  \"type\": \"restaurant\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_google_for_nearby_places", "api_action": "\nAction: nearby_google_for_nearby_places\nAction Input: {\n  \"lat\": 49.2803703,\n  \"lng\": -123.0413988,\n  \"radius\": 500,\n  \"type\": \"fast_food\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_google_for_nearby_places", "api_action": "\nAction: nearby_google_for_nearby_places\nAction Input: {\n  \"lat\": 49.2803703,\n  \"lng\": -123.0413988,\n  \"radius\": 500,\n  \"type\": \"cafe,restaurant,fast_food\"\n}", "api_reaction": null}}]}
{"URL": "8456", "query": "I work for XYZ Company and we need to monitor the transactions happening on the Polygon Mainnet. Can you fetch the address transactions for the network 'POLYGON_MAINNET'? Also, provide the webhook status for the transaction with ID '4753498e-5ee1-45b2-a18c-a7ef3c9f71cd'.", "api_names": ["Finish", "get_service_status_for_address_monitor", "get_address_transaction_webhook_for_address_monitor", "get_address_transactions_for_address_monitor", "get_comments_from_product_id_for__i_eksepeti_data", "get_version_for_face_detection_v3", "getimage_for_florida_realty_api", "querytranslator_for_indic_translator", "checkseatavailability_for_irctc", "company_info_for_finshorts", "list_archives_for_smile", "get_channel_polls_for_kick_com_api_kick_api", "get_place_by_my_ip_for_spott", "provinces_and_municipalities_for_58_provinces_of_algeria", "channel_videos_playlists_for_youtube_v3_lite", "available_for_supersaas_online_bookings_and_appointment_scheduling"], "api_descs": {"Finish": "No description available.", "available_for_supersaas_online_bookings_and_appointment_scheduling": "", "channel_videos_playlists_for_youtube_v3_lite": "Get channel videos or playlists.\nQuota cost is 1.", "checkseatavailability_for_irctc": "-", "company_info_for_finshorts": "Finshorts provide company Info in realtime", "get_address_transaction_webhook_for_address_monitor": "Get address transaction webhook", "get_address_transactions_for_address_monitor": "Get address transactions", "get_channel_polls_for_kick_com_api_kick_api": "Get Channel Polls", "get_comments_from_product_id_for__i_eksepeti_data": "Retrieve comments based on a product id.", "get_place_by_my_ip_for_spott": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.", "get_service_status_for_address_monitor": "Get service status", "get_version_for_face_detection_v3": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getimage_for_florida_realty_api": "Load images of cities you retrieve by calling getCities().", "list_archives_for_smile": "Get the user's archives.", "provinces_and_municipalities_for_58_provinces_of_algeria": "All Algeria provinces and ther municipalities.", "querytranslator_for_indic_translator": "For translating an English sentence (query) to Hindi."}, "aseqs": [{"api_name": "get_address_transactions_for_address_monitor", "api_action": "\nAction: get_address_transactions_for_address_monitor\nAction Input: {}", "api_reaction": null}, {"api_name": "get_service_status_for_address_monitor", "api_action": "\nAction: get_service_status_for_address_monitor\nAction Input: {}", "api_reaction": null}, {"api_name": "get_address_transaction_webhook_for_address_monitor", "api_action": "\nAction: get_address_transaction_webhook_for_address_monitor\nAction Input: {\n  \"transactionid\": \"4753498e-5ee1-45b2-a18c-a7ef3c9f71cd\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_address_transactions_for_address_monitor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_address_transactions_for_address_monitor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_address_transactions_for_address_monitor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_address_transactions_for_address_monitor"}}]}
{"URL": "48360", "query": "I'm a political analyst and I need to gather quotes for my research. Can you provide me with a quote by Tronald Dump using the Quote API? Also, I would like to search for quotes related to 'immigration' using the Search quotes API.", "api_names": ["random_quote_for_tronald_dump", "search_quotes_for_tronald_dump", "Finish", "aliexpress_item_detail_2_for_aliexpress_datahub", "getorderbyid_for_firstapi_v2", "get_result_for_face_animer", "leaguetotalteamevents_for_cricketapi2", "group_invite_link_for_whin", "download_translated_document_for_textking_translation", "styles_for_flaticon", "parser_get_for_scraper_s_proxy", "album_for_deezer"], "api_descs": {"Finish": "No description available.", "album_for_deezer": "An album object", "aliexpress_item_detail_2_for_aliexpress_datahub": "All details of a single item. This Endpoint needs an additional request to the \"Item Description\" endpoint to fill the *Properties* and *Description* gaps.", "download_translated_document_for_textking_translation": "Downloads the translated document for a job.", "get_result_for_face_animer": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.", "getorderbyid_for_firstapi_v2": "for testing purpose only", "group_invite_link_for_whin": "the endpoint returns an invite link url for a group you own.", "leaguetotalteamevents_for_cricketapi2": "Get the total team events for a specific Cricket league for a given season by providing its unique tournament ID and season ID.", "parser_get_for_scraper_s_proxy": "Automatically parses html into an easily processable json format", "random_quote_for_tronald_dump": "Retrieve a random quote.", "search_quotes_for_tronald_dump": "Free text search for quotes.", "styles_for_flaticon": "Method that allows you to get a paged list with information about Flaticon styles, design formats that icons or packs have. Styles are the different versions in which an icon from a given family may appear. For example, an icon may be available in lineal, color, or lineal color styles."}, "aseqs": [{"api_name": "random_quote_for_tronald_dump", "api_action": "\nAction: random_quote_for_tronald_dump\nAction Input: {}", "api_reaction": null}, {"api_name": "search_quotes_for_tronald_dump", "api_action": "\nAction: search_quotes_for_tronald_dump\nAction Input: {\n  \"query\": \"Tronald Dump\"\n}", "api_reaction": null}, {"api_name": "random_quote_for_tronald_dump", "api_action": "\nAction: random_quote_for_tronald_dump\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_tronald_dump"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_tronald_dump", "api_action": "{\"query\": \"immigration\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_tronald_dump", "api_action": "\nAction: search_quotes_for_tronald_dump\nAction Input: {\n  \"query\": \"immigration\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_quotes_for_tronald_dump", "api_action": "\nAction: search_quotes_for_tronald_dump\nAction Input: {\n  \"query\": \"immigration\"\n}", "api_reaction": null}}]}
{"URL": "86811", "query": "What is the temperature and UV index in Hong Kong right now? I want to know the current conditions.", "api_names": ["current_weather_report_for_hourly_weather_report_of_hong_kong", "Finish", "get_list_of_currency_exchanges_copy_for_currencygenie", "islamiblockchain_islamicoin_main_cs_txt_for_islamicoin", "get_status_cat_image_for_http_status_cats", "public_holidays_for_public_holiday", "proxies_example_json_for_proxy_spider_proxies", "eff_wordlist_for_mad_libs_diceware", "get_litecoin_balance_for_cryptocurrency_balance", "get_quotes_by_specific_category_for_world_of_quotes", "vehicles_makes_for_carbonsutra", "season_wins_leaderboard_mw_2_for_cod_api_2_0"], "api_descs": {"Finish": "No description available.", "current_weather_report_for_hourly_weather_report_of_hong_kong": "Current Weather Report", "eff_wordlist_for_mad_libs_diceware": "**Get the wordlist used by plain diceware in JSON format**", "get_list_of_currency_exchanges_copy_for_currencygenie": "Performs GET request for getting list of currencies", "get_litecoin_balance_for_cryptocurrency_balance": "This endpoint will return back the Litecoin balance of an address", "get_quotes_by_specific_category_for_world_of_quotes": "This API returns the collection of quotes by category you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param.", "get_status_cat_image_for_http_status_cats": "", "islamiblockchain_islamicoin_main_cs_txt_for_islamicoin": "ISLAMICOIN Circulation Supply", "proxies_example_json_for_proxy_spider_proxies": "This is a free sample of ten proxies. Sign up and receive the full list.", "public_holidays_for_public_holiday": "Returns the public holidays from a given year and country.", "season_wins_leaderboard_mw_2_for_cod_api_2_0": "Get season wins information for up to 2000 players on the MW 2 leaderboard.", "vehicles_makes_for_carbonsutra": "List of Vehicle Makes. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html"}, "aseqs": [{"api_name": "current_weather_report_for_hourly_weather_report_of_hong_kong", "api_action": "\nAction: current_weather_report_for_hourly_weather_report_of_hong_kong\nAction Input: {\n  \"lang\": \"en\",\n  \"datatype\": \"current\"\n}", "api_reaction": null}, {"api_name": "current_weather_report_for_hourly_weather_report_of_hong_kong", "api_action": "\nAction: current_weather_report_for_hourly_weather_report_of_hong_kong\nAction Input: {\n  \"lang\": \"en\",\n  \"datatype\": \"flw\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "current_weather_report_for_hourly_weather_report_of_hong_kong"}}, {"state": "generated_by_agent", "aseq": {"api_name": "current_weather_report_for_hourly_weather_report_of_hong_kong"}}, {"state": "generated_by_agent", "aseq": {"api_name": "current_weather_report_for_hourly_weather_report_of_hong_kong"}}]}
{"URL": "71108", "query": "Can you assist me in retrieving the work details from my portfolio, including the title, image URL, framework, and link? Additionally, I would like to explore the API section of my portfolio to gather auto-generated data.", "api_names": ["Finish", "api_for_portfolio", "work_for_portfolio", "web_for_portfolio", "products_get_details_deprecated_for_target", "url_for_news_sentiment", "is_a_coordinate_water_for_isitwater_com", "parse_for_us_address_parser", "get_user_info_for_likee_downloader_download_likee_videos", "user_by_screen_name_for_twitter_v2", "video_post_metadata_for_social_media_data_tt", "detik_search_for_indonesia_news", "567_live_t_i_app_m_i_nh_t_2022_t_i_trang_ch_ch_nh_th_c_for_567_live_app_2022", "detail_for_worldwide_recipes", "item_by_id_for_yc_hacker_news_official", "transfermarkt_details_for_theclique"], "api_descs": {"567_live_t_i_app_m_i_nh_t_2022_t_i_trang_ch_ch_nh_th_c_for_567_live_app_2022": "567 Live có trang chủ 567live.io duy nhất chính xác. Cung cấp đủ link tải 567 live app an toàn cho bạn phiên bản mới nhất.\nĐịa chỉ : 99 Giải Phóng, Đồng Tâm, Hai Bà Trưng, Hà Nội\nGoogle map https://www.google.com/maps?cid=7118718670140148249 \nHotline 0978720550\nGmail:  567liveapp@gmail.com\nWebsite https://567live.io/ \nhttps://sites.google.com/view/567live-app/\nhttps://567live.io/tai-ve/567live-apk \nhttps://567live.io/tai-ve/567live-ios\nhttps://567live.io/thu-muc/app-live/ \nhttps://folkd.com/user/567liveapp\nhttps://sketchfab.com/567liveapp\nhttps://forums.iis.net/members/567liveapp.aspx\nhttps://wefunder.com/567live\nhttps://www.ultimate-guitar.com/u/567liveapp\nhttps://www.thingiverse.com/567liveapp/designs\nhttps://www.tickaroo.com/user/61fe0be0ed68b63b06bd40d5\nhttps://www.goodreads.com/user/show/147284265-567live\nhttps://gifyu.com/567liveapp\nhttps://ignitiondeck.com/id/dashboard/?backer_profile=153894\nhttps://www.sqlservercentral.com/forums/user/567liveapp\nhttps://abroadsanjal.com/index.php?qa=user&qa_1=567live\nhttps://beermapping.com/account/567liveapp\nhttps://www.zoimas.com/profile/567liveapp1/about\nhttps://www.eduvision.edu.pk/counseling/index.php?qa=user&qa_1=567liveapp\nhttps://567live.hpage.com/\nhttps://www.leetchi.com/en/c/5Yj6J40r\nhttps://public.tableau.com/app/profile/567live\nhttps://www.brownbook.net/user-profile/4782891\nhttps://amara.org/en/profiles/profile/MndaPixiSx4HXYOyjdeCtoryc1vYtjp933bdJZs6MYo/\nhttps://cycling74.com/author/6201cfb5d540c65659fc25e7\nhttps://api.rakuten.net/user/567liveapp\nhttps://lnk.bio/567live\nhttps://www.pozible.com/profile/567live\nhttps://new.edmodo.com/home\nhttp://www.nfomedia.com/profile?uid=rKfQfiD&result=ep5dbp81\nhttps://degreed.com/profile/567liveapp/overview\nhttps://bittube.tv/profile/567live\nhttps://git.feneas.org/567liveapp\nhttps://forum.singaporeexpats.com/memberlist.php?mode=viewprofile&u=370389\nhttps://sallatunturinkoulu.purot.net/profile/567liveapp\nhttps://liveviewsports.com/community/profile/567live/\nhttp://q2a.sydt.com.tw/index.php?qa=user&qa_1=567live", "Finish": "No description available.", "api_for_portfolio": "Auto generated using Swagger Inspector", "detail_for_worldwide_recipes": "Get detail of recipe", "detik_search_for_indonesia_news": "search detik.com news", "get_user_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific user on Likee.", "is_a_coordinate_water_for_isitwater_com": "Given a latitude and longitude, return if that coordinate on Earth is water.", "item_by_id_for_yc_hacker_news_official": "Stories, comments, jobs, Ask HNs and even polls are just items. They're identified by their ids, which are unique integers.", "parse_for_us_address_parser": "Parses US Address as String and Returns JSON", "products_get_details_deprecated_for_target": "Get detail information of product", "transfermarkt_details_for_theclique": "Enter **SLUG ** from Transfermarkt search API.\n\nIt os working for all types (players, clubs, managers, referees, etc)", "url_for_news_sentiment": "Input news URL", "user_by_screen_name_for_twitter_v2": "Get User By Screen Name", "video_post_metadata_for_social_media_data_tt": "Get single post metadata", "web_for_portfolio": "dsada", "work_for_portfolio": "sdad"}, "aseqs": [{"api_name": "work_for_portfolio", "api_action": "\nAction: work_for_portfolio\nAction Input: {}", "api_reaction": null}, {"api_name": "api_for_portfolio", "api_action": "\nAction: api_for_portfolio\nAction Input: {}", "api_reaction": null}, {"api_name": "web_for_portfolio", "api_action": "\nAction: web_for_portfolio\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "web_for_portfolio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "work_for_portfolio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "work_for_portfolio"}}, {"state": "generated_by_agent", "aseq": {"api_name": "work_for_portfolio"}}]}
{"URL": "554", "query": "I am planning a trip to Europe and I want to gather information about the population of countries in Europe. Can you provide me with the countries' data according to the continent 'Europe'? Also, order the countries in descending order of rank. Additionally, I would like to know the population of Spain. Please fetch the population data of Spain using its country code 'ESP'.", "api_names": ["getpopulationbycountrycode_for_world_population", "getcountriesbycontinent_for_world_population", "Finish", "hashtag_metadata_information_v2_for_social_media_data_tt", "signup_for_whin", "search_for_searchhook", "get_all_draws_results_for_euro_millions", "getgeolocationposition_for_woosmap", "quiz_for_moodring", "card_backs_for_hearthstone", "movie_comments_json_for_yts_am_torrent", "get_binary_image_set_for_midjourney"], "api_descs": {"Finish": "No description available.", "card_backs_for_hearthstone": "Returns a list of all the card backs.", "get_all_draws_results_for_euro_millions": "Get the results of all draws in history of EuroMillions since 2004", "get_binary_image_set_for_midjourney": "returns requested binary image (\"image/png\"). Full image set", "getcountriesbycontinent_for_world_population": "Obtain countries' data according to the continent.", "getgeolocationposition_for_woosmap": "The `/position` returns JSON location of your users thanks to IP address of their devices.\n", "getpopulationbycountrycode_for_world_population": "Get the population's data of a country by its country code (ISO 3166-1 alpha-3 format). More information at https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3.", "hashtag_metadata_information_v2_for_social_media_data_tt": "Get hashtag metadata V2\n\nV2 - returns more data then older version of the endpoint", "movie_comments_json_for_yts_am_torrent": "Returns all the comments for the specified movie", "quiz_for_moodring": "Get one quiz by quizId.", "search_for_searchhook": "Search endpoint - Parameters compatible to SEARXNG  (see linked external documentation). \nIn addition, a parameter `url` might be given to specify a webhook URL (POST request will be sent).", "signup_for_whin": "This endpoint is **ONLY** used to enter the code you received to signup. Follow this [video](https://youtu.be/uOZ-oH4kP58), or read the [tutorial](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/what-to-do-to-start-using-whin%3F-1), to learn how to start using whin."}, "aseqs": [{"api_name": "getcountriesbycontinent_for_world_population", "api_action": "\nAction: getcountriesbycontinent_for_world_population\nAction Input: {\n  \"continent\": \"Europe\",\n  \"rank\": -1\n}", "api_reaction": null}, {"api_name": "getpopulationbycountrycode_for_world_population", "api_action": "\nAction: getpopulationbycountrycode_for_world_population\nAction Input: {\n  \"countrycode\": \"ESP\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getcountriesbycontinent_for_world_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpopulationbycountrycode_for_world_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountriesbycontinent_for_world_population", "api_action": "\nAction: getcountriesbycontinent_for_world_population\nAction Input: {\n  \"continent\": \"Europe\",\n  \"rank\": -1\n}", "api_reaction": null}}]}
{"URL": "60256", "query": "My family is planning a vacation and we want to make the most of our budget. Can you provide us with a list of stores that offer coupons for travel-related expenses such as flights, hotels, and car rentals? Please include the store name, coupon code, and the terms and conditions for each coupon.", "api_names": ["get_coupons_for_get_promo_codes", "get_stores_for_get_promo_codes", "Finish", "most_expensive_for_most_expensive_nft_artworks", "shorts_sound_attribution_for_yt_api", "user_media_for_twitter", "article_page_for_climate_news_feed", "get_a_specific_champion_s_base_stats_for_league_of_legends_stats", "get_supported_coins_handler_for_fan_crypto_coins", "paginated_for_dogbreeddb", "search_all_words_api_for_complete_study_bible", "getcurrentipaddress_for_dns_propagation_and_domain_checker", "evaluaciones_2_for_colegiosantaana", "get_indivisual_news_source_news_for_climate_change_live_v3", "api_for_portfolio"], "api_descs": {"Finish": "No description available.", "api_for_portfolio": "Auto generated using Swagger Inspector", "article_page_for_climate_news_feed": "Get articles in pages", "evaluaciones_2_for_colegiosantaana": "Evaluaciones alumnos 2", "get_a_specific_champion_s_base_stats_for_league_of_legends_stats": "This endpoint returns the base stats of a specific champion.", "get_coupons_for_get_promo_codes": "Get Coupons", "get_indivisual_news_source_news_for_climate_change_live_v3": "Get News about climate change from a specific news resource.", "get_stores_for_get_promo_codes": "Get Stores", "get_supported_coins_handler_for_fan_crypto_coins": " ", "getcurrentipaddress_for_dns_propagation_and_domain_checker": " ", "most_expensive_for_most_expensive_nft_artworks": "Get most expensive artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare", "paginated_for_dogbreeddb": "Get all dog breed results in a set of 10 per page.", "search_all_words_api_for_complete_study_bible": "Returns KJV verses containing all of the supplied words, in any order. Words are separated by '%20' i.e., spaces. Words are not case-sensitive.", "shorts_sound_attribution_for_yt_api": "Get the Shorts original sound attribution listing.\nQuota cost is 1 unit.", "user_media_for_twitter": "User Media"}, "aseqs": [{"api_name": "get_stores_for_get_promo_codes", "api_action": "\nAction: get_stores_for_get_promo_codes\nAction Input: {}", "api_reaction": null}, {"api_name": "get_coupons_for_get_promo_codes", "api_action": "\nAction: get_coupons_for_get_promo_codes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_coupons_for_get_promo_codes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_coupons_for_get_promo_codes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_stores_for_get_promo_codes"}}]}
{"URL": "400", "query": "I'm a filmmaker and I need to extract the subtitles from a YouTube video. Please fetch the subtitles in SRT format for the video with the ID 'Wrald_EZgDQ'. Additionally, I would like to have the subtitles in JSON format.", "api_names": ["get_subtitle_in_json_format_for_subtitles_for_youtube_v3", "get_subtitle_in_srt_format_for_subtitles_for_youtube_v3", "Finish", "russian_premier_league_standings_for_russian_premier_league_standings", "getproductbycategory_for_cartify", "operations_for_sec_filings", "check_if_text_contains_profanity_for_purgomalum", "get_all_teams_for_aaaa", "accept_charset_for_testing_out_sharing_w_rachael", "capital_by_country_for_geosource_api", "emailverifications_for_fast_email_verifier", "get_all_active_stream_infos_for_gwyo_twitch", "get_banks_in_a_country_for_forecast_crypto_and_fiat_currency_exchange_rates", "statroll_for_diceforge", "linecount_linecount_for_poetry_db", "user_search_for_instagram_v5", "supported_locations_for_linkedin_live_data", "publications_for_ig_private_api"], "api_descs": {"Finish": "No description available.", "accept_charset_for_testing_out_sharing_w_rachael": "accepting character set", "capital_by_country_for_geosource_api": "Retrives a value of the capital of the country.", "check_if_text_contains_profanity_for_purgomalum": "", "emailverifications_for_fast_email_verifier": "He is  a simple way  to verify a list of email addresses with different dimensions.", "get_all_active_stream_infos_for_gwyo_twitch": "Get a Stream Informations if the status is Online (by username or id)\n( return an empty JSON object if not currently LIVE )", "get_all_teams_for_aaaa": "Get information about all of the Teams in a specific Organization, including the `name`, `status`, and `description` for each Team. ", "get_banks_in_a_country_for_forecast_crypto_and_fiat_currency_exchange_rates": "Free subscribe plan available! Check it in pricing and subscribe for tests!\nThis endpoint gives list of banks in selected country.\n\nExample 1\n` /api/get_all_banks_in_country?country_code=eu`\n\nExample 2\n `/api/get_all_banks_in_country?country_code=md`\n\nExample 3\n `/api/get_all_banks_in_country?country_code=bitcoin`\nwell... I hope you've got the idea:) The currency must have it's country and bank and for cryptocurrencies it is just imaginable bank \"Bitcoin\" and imaginable country \"Bitcoin\". This request will show you JSON\n{... \"is_central\": 1, \"name\": \"Bitcoin\", \"name_short\": \"Bitcoin\",...}\n\nTo get all available `country_code` use free endpoint `/api/info/countries`", "get_subtitle_in_json_format_for_subtitles_for_youtube_v3": "Get Subtitle in JSON format", "get_subtitle_in_srt_format_for_subtitles_for_youtube_v3": "Get subtitle in SRT format", "getproductbycategory_for_cartify": "Do you want to search for a product by category?\nUse the category of the product in the path parameter.\n\nFor example,\nAre you looking for Phones? Use Phones in your path parameter", "linecount_linecount_for_poetry_db": "All poems on Poetry DB with a specific number of lines", "operations_for_sec_filings": "Returns a company's most recent statement of operations showing how they balance costs with revenue", "publications_for_ig_private_api": "Publications", "russian_premier_league_standings_for_russian_premier_league_standings": "Russian Premier League Standings", "statroll_for_diceforge": "Rolls 4d6 for generating character stats, dropping the lowest die result from the total, and returns the results.\n\nMethods: GET, POST\n\nParameters:\n\nmodifier (integer): An integer representing the modifier to apply to the total of the stat roll.", "supported_locations_for_linkedin_live_data": "Get a list of the supported LinkedIn locations. You can use these locations to get personalized search results when using an API endpoint that supports location parameter.", "user_search_for_instagram_v5": "Get Instagram users by keyword."}, "aseqs": [{"api_name": "get_subtitle_in_srt_format_for_subtitles_for_youtube_v3", "api_action": "\nAction: get_subtitle_in_srt_format_for_subtitles_for_youtube_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "get_subtitle_in_json_format_for_subtitles_for_youtube_v3", "api_action": "\nAction: get_subtitle_in_json_format_for_subtitles_for_youtube_v3\nAction Input: {\n  \"video_id\": \"Wrald_EZgDQ\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_subtitle_in_srt_format_for_subtitles_for_youtube_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_subtitle_in_json_format_for_subtitles_for_youtube_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_subtitle_in_json_format_for_subtitles_for_youtube_v3", "api_action": "\nAction: get_subtitle_in_json_format_for_subtitles_for_youtube_v3\nAction Input: {\n  \"video_id\": \"Wrald_EZgDQ\"\n}", "api_reaction": null}}]}
{"URL": "4662", "query": "I am planning a trip to Paris next week with my family. Can you provide me with the weather forecast for the next seven days? I'm particularly interested in the hourly temperature and precipitation data. It would be great if you can also give me the historical weather records for the same period last year. Please organize the data in a csv format. Thank you!", "api_names": ["weather_forecast_data_for_visual_crossing_weather", "historical_weather_record_for_visual_crossing_weather", "Finish", "get_a_full_list_of_conversions_with_statistics_for_clickmeter", "players_at_position_for_national_football_players", "get_all_trump_articles_for_pac_api", "http_newexch_com_for_a56219609685dd9033d060cdbb60093c", "checkdisposableemail_for_newly_registered_domains", "reverse_geocoding_for_mymappi", "gethomepage_for_radio_world_75_000_worldwide_fm_radio_stations_", "get_base_information_for_al_quran", "all_tags_for_rapid_porn"], "api_descs": {"Finish": "No description available.", "all_tags_for_rapid_porn": "", "checkdisposableemail_for_newly_registered_domains": "REST API to lookup disposable email", "get_a_full_list_of_conversions_with_statistics_for_clickmeter": "Get a full list of conversions with statistics", "get_all_trump_articles_for_pac_api": "This endpoint returns all newspaper artices for Trump", "get_base_information_for_al_quran": "Responds with JSON including some properties of the Quran. *(deprecated)*", "gethomepage_for_radio_world_75_000_worldwide_fm_radio_stations_": "*We have made an option for you to display result in your landing/home page. So you don't have to work hard to achieve this.*\nGet limited radios to show in landing/home page, based on.\n- limit", "historical_weather_record_for_visual_crossing_weather": "The weather history data is suitable for retrieving hourly or daily historical weather records.", "http_newexch_com_for_a56219609685dd9033d060cdbb60093c": "betting exchange", "players_at_position_for_national_football_players": "Returns all of the players at specified position. Only use abbreviated position names for position (i.e. QB, RB, WR, etc). See list of current positions @ /position", "reverse_geocoding_for_mymappi": "Translates a coordinate as input into its postal address.", "weather_forecast_data_for_visual_crossing_weather": "Provides access to weather forecast information. The forecast is available for up to seven days at the hourly, 12 hour and daily summary level."}, "aseqs": [{"api_name": "weather_forecast_data_for_visual_crossing_weather", "api_action": "\nAction: weather_forecast_data_for_visual_crossing_weather\nAction Input: {\n  \"aggregatehours\": 1,\n  \"location\": \"Paris\",\n  \"contenttype\": \"csv\",\n  \"unitgroup\": \"metric\",\n  \"shortcolumnnames\": true\n}", "api_reaction": null}, {"api_name": "historical_weather_record_for_visual_crossing_weather", "api_action": "\nAction: historical_weather_record_for_visual_crossing_weather\nAction Input: {\n  \"location\": \"Paris\",\n  \"enddatetime\": \"2022-07-17T23:59:59\",\n  \"startdatetime\": \"2022-07-10T00:00:00\",\n  \"aggregatehours\": 1,\n  \"unitgroup\": \"metric\",\n  \"contenttype\": \"csv\",\n  \"shortcolumnnames\": true\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "weather_forecast_data_for_visual_crossing_weather"}}, {"state": "generated_by_agent", "aseq": {"api_name": "historical_weather_record_for_visual_crossing_weather"}}, {"state": "generated_by_agent", "aseq": {"api_name": "Finish"}}]}
{"URL": "44363", "query": "Please fetch the race details for the race with the ID '207660'. I am particularly interested in knowing the horses, jockeys, and trainers participating in the race. Also, can you fetch the horse statistics for a specific horse with the ID '230380'?", "api_names": ["race_detail_info_for_horse_racing", "horse_stats_for_horse_racing", "Finish", "getcampaigndetails_for_nexweave", "breakfast_ingredient_for_recipe_finder", "getsponsorships_for_election2020_smartable", "streams_mentions_for_stocktwits", "get_basic_data_for_all_counties_in_a_single_state_for_us_counties", "domain_check_for_bulk_domain_check", "stockprice_for_us_stock_prices_live_", "user_tweets_for_twitter_v2_v2", "v1_list_bank_types_for_hryvna_today"], "api_descs": {"Finish": "No description available.", "breakfast_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random breakfast  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "domain_check_for_bulk_domain_check": "Returns domain availability status", "get_basic_data_for_all_counties_in_a_single_state_for_us_counties": "counties", "getcampaigndetails_for_nexweave": "This API will return the Campaign details including variables used in the overall Campaign.", "getsponsorships_for_election2020_smartable": "Get sponsorships", "horse_stats_for_horse_racing": "Get horse results history.", "race_detail_info_for_horse_racing": "**Get racecard detailed info** and **Odds comparator**\nHorses, Jockeys, Trainers, Form, OR, Owner, Sire, Dam, Age, Weight and more information.", "stockprice_for_us_stock_prices_live_": "Enter the SYMBOL/TICKER such as TSLA, AAPL etc as a parameter at the endpoint and it will give your the Live Price updates from exchange.", "streams_mentions_for_stocktwits": "Returns the most recent 30 messages containing mentions of the authenticating user's handle. These are considered public replies", "user_tweets_for_twitter_v2_v2": "User Tweets", "v1_list_bank_types_for_hryvna_today": ""}, "aseqs": [{"api_name": "race_detail_info_for_horse_racing", "api_action": "\nAction: race_detail_info_for_horse_racing\nAction Input: {\n  \"id_race\": \"207660\"\n}", "api_reaction": null}, {"api_name": "race_detail_info_for_horse_racing", "api_action": "\nAction: race_detail_info_for_horse_racing\nAction Input: {\n  \"id_race\": \"207660\"\n}", "api_reaction": null}, {"api_name": "horse_stats_for_horse_racing", "api_action": "\nAction: horse_stats_for_horse_racing\nAction Input: {\n  \"id_horse\": \"230380\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "race_detail_info_for_horse_racing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "race_detail_info_for_horse_racing", "api_action": "\nAction: race_detail_info_for_horse_racing\nAction Input: {\n  \"id_race\": \"207660\",\n  \"fields\": [\n    \"Horses\",\n    \"Jockeys\",\n    \"Trainers\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "race_detail_info_for_horse_racing", "api_action": "\nAction: race_detail_info_for_horse_racing\nAction Input: {\n  \"id_race\": \"207660\",\n  \"fields\": [\n    \"Horses\",\n    \"Jockeys\",\n    \"Trainers\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "race_detail_info_for_horse_racing", "api_action": "\nAction: race_detail_info_for_horse_racing\nAction Input: {\n  \"id_race\": \"207660\"\n}", "api_reaction": null}}]}
{"URL": "49318", "query": "I'm a Game of Thrones enthusiast and I want to test my knowledge of the show's characters. Can you provide me with a random character profile, including their name, family, and image? It would be great if I could also get a list of all the characters in the show to check my answers.", "api_names": ["get_all_characters_for_game_of_thrones", "get_character_by_id_for_game_of_thrones", "get_continents_for_game_of_thrones", "Finish", "companies_by_exchange_for_freedom_finance", "new_backlinks_for_best_backlink_checker_api", "see_about_the_exchanges_for_crypto_currency_scraper_api", "4_date_endpoint_for_currenciesexchangerateapi", "list_of_school_in_sub_disctrict_kecamatan_for_indonesia_school_list", "region_for_phone", "fal_for_hafez", "get_list_of_languages_for_businessmate", "viewrecords_for_zohocreator", "app_details_for_store_apps", "account_for_myapi", "tsv5_for_odam", "get_all_the_desserts_for_beverages_and_desserts", "get_email_for_temporary_email", "ideal_weight_for_fitness_calculator", "convertir_cantidad_a_letra_moneda_mxn_ingles_for_numberstoletters"], "api_descs": {"4_date_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'date': \n'symbols': \n'base': \nResponse: This endpoint returns the exchange rates for the specified currencies on the specified date in JSON format.", "Finish": "No description available.", "account_for_myapi": "show account details", "app_details_for_store_apps": "Get full app details.", "companies_by_exchange_for_freedom_finance": "Convenient User-Friendly Manually Populated List Of Common Stocks Per Exchange Code. Not Guaranteed To Be Up To Date.", "convertir_cantidad_a_letra_moneda_mxn_ingles_for_numberstoletters": "Convertir cantidad a letra Moneda MXN en Ingles", "fal_for_hafez": "get a random a poem(Fal) and it's meaning!", "get_all_characters_for_game_of_thrones": "Returns all of the GOT characters", "get_all_the_desserts_for_beverages_and_desserts": "This endpoint will returns all the** Desserts**", "get_character_by_id_for_game_of_thrones": "Returns a character by their ID", "get_continents_for_game_of_thrones": "Returns all GOT continents", "get_email_for_temporary_email": "Get Email", "get_list_of_languages_for_businessmate": "Get list of languages", "ideal_weight_for_fitness_calculator": "Find four different ideal weight scores according to four different well-known equations which are Hamwi, Devine, Miller, Robinson.  There are two parameters which are age and height(cm) values.", "list_of_school_in_sub_disctrict_kecamatan_for_indonesia_school_list": "List of School in Sub-Disctrict (Kecamatan), this endpoint has school NPSN, and sekolah_id_enkrip field to lookup school detail in other endpoint.  See Example Result", "new_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "region_for_phone": "Get the Geographic Region information", "see_about_the_exchanges_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top exchanges including names and prices even rank and more!", "tsv5_for_odam": "Get all values of a merged data subsets\n", "viewrecords_for_zohocreator": "Replace https://zohocreator.p.rapidapi.com/ with https://creator.zoho.com/api/ if you're using native system\n\nGet Records from a Zoho View/Report"}, "aseqs": [{"api_name": "get_continents_for_game_of_thrones", "api_action": "\nAction: get_continents_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "get_character_by_id_for_game_of_thrones", "api_action": "\nAction: get_character_by_id_for_game_of_thrones\nAction Input: {\n  \"is_id\": 123456789\n}", "api_reaction": null}, {"api_name": "get_all_characters_for_game_of_thrones", "api_action": "\nAction: get_all_characters_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_character_by_id_for_game_of_thrones", "api_action": "\nAction: get_character_by_id_for_game_of_thrones\nAction Input: {\n  \"is_id\": \"random\"\n}", "api_reaction": null}}]}
{"URL": "31688", "query": "I'm a huge fan of this TikTok user called 'tiktok'. Can you give me some information about this user? Also, could you provide me with their favorite videos?", "api_names": ["get_info_user_for_tiktok_video_no_watermark_v2", "Finish", "today_s_international_current_affairs_for_current_affairs_of_india", "eventsdetails_for_sportifyapi", "vehicles_models_for_carbonsutra", "dns_propagation_checker_for_viewdns", "getcompanies_for_a_i_smartable", "reviews_list_for_kohls", "za_car_averages_for_car_averages", "search_for_g_search"], "api_descs": {"Finish": "No description available.", "dns_propagation_checker_for_viewdns": "Check whether recent changes to DNS entries have propagated to DNS servers all over the world. Useful in troubleshooting DNS issues that appear to be isolated to one geographic region. Provides a status report on DNS propagation globally.", "eventsdetails_for_sportifyapi": "Events Details", "get_info_user_for_tiktok_video_no_watermark_v2": "Get tiktok user info", "getcompanies_for_a_i_smartable": "Get artificial intelligence companies.", "reviews_list_for_kohls": "List reviews relating to a product", "search_for_g_search": "Get Real-time Search Result Page", "today_s_international_current_affairs_for_current_affairs_of_india": "This endpoint provides you the international current affairs of today.", "vehicles_models_for_carbonsutra": "List of Vehicle Models for a Make. A list of every make and model used by this API is at https://www.carbonsutra.com/data-vehicle-make-model.html", "za_car_averages_for_car_averages": "ZA  Car averages"}, "aseqs": [{"api_name": "get_info_user_for_tiktok_video_no_watermark_v2", "api_action": "\nAction: get_info_user_for_tiktok_video_no_watermark_v2\nAction Input: {\n  \"username\": \"tiktok\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_info_user_for_tiktok_video_no_watermark_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_info_user_for_tiktok_video_no_watermark_v2", "api_action": "\nAction: get_info_user_for_tiktok_video_no_watermark_v2\nAction Input: {\n  \"username\": \"tiktok\"\n}"}}]}
{"URL": "68201", "query": "Can you help me generate a street view of a business establishment with tax ID 37335118000180? Additionally, I need to view the map of the surrounding area and generate a PDF proof of registration with the Brazilian Federal Revenue Service.", "api_names": ["gera_vis_o_da_rua_for_consulta_cnpj_tempo_real", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real", "Finish", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real", "get_geocoding_for_geocoding_places", "api_v1_for_reverse_ip", "get_list_of_currency_exchanges_for_currencygenie", "anime_details_for_hummingbird_v2", "get_version_for_general_classification", "3_for_thai_lotto_new_api", "employee_for_dd", "documentation_environment_for_wordle_api", "sms_for_insafel", "address_for_real_estate_records", "geteventdetails_for_sport_odds", "get_product_offers_for_basic_amazon_scraper", "query_by_date_for_vietnamese_news", "get_categories_for__onboarding_project_v3", "get_user_for_instagram_media_downloader", "get_trains_mrt_get_for_aqls_b2c_system"], "api_descs": {"3_for_thai_lotto_new_api": "ယခု နေရာကနေတစ်ဆင့် ယခင်ထွက်ရှိခဲ့တဲ့ 3D ဂဏန်းများကို ကြည့်ရှုနိုင်မှာပဲဖြစ်ပါတယ်။", "Finish": "No description available.", "address_for_real_estate_records": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index", "anime_details_for_hummingbird_v2": "", "api_v1_for_reverse_ip": "Reverse IP API", "documentation_environment_for_wordle_api": " ", "employee_for_dd": "get employee id", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real": "Gera Comprovante da Receita Federal em PDF", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real": "Gera Mapa dos Arredores", "gera_vis_o_da_rua_for_consulta_cnpj_tempo_real": "Gera Visão da Rua", "get_categories_for__onboarding_project_v3": " ", "get_geocoding_for_geocoding_places": "Get complete readable place info in prefered language based on given coordinate in latitude and longitude.", "get_list_of_currency_exchanges_for_currencygenie": "Performs GET request for getting list of currencies", "get_product_offers_for_basic_amazon_scraper": "GET Product Offers: Get all offers available for a product.", "get_trains_mrt_get_for_aqls_b2c_system": " ", "get_user_for_instagram_media_downloader": "Retrieve valuable user information including username, name, alternate name, description, profile image, post count, and follower count.", "get_version_for_general_classification": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "geteventdetails_for_sport_odds": "GetEventDetails api data", "query_by_date_for_vietnamese_news": "- Show all articles and all of their metadata fields that have the publish date match the provided string.\n- For the URL, `date` can be shortened to `d`.\n- Each query will return **10 results**, sorted by date incrementally. Add `/1`, `/2`, etc. at the end of the URL to fetch more. Default is equal to `/0`.", "sms_for_insafel": "Send"}, "aseqs": [{"api_name": "gera_vis_o_da_rua_for_consulta_cnpj_tempo_real", "api_action": "\nAction: gera_vis_o_da_rua_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"cnpj\": \"37335118000180\",\n  \"width\": 640,\n  \"height\": 480\n}", "api_reaction": null}, {"api_name": "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real", "api_action": "\nAction: gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"cnpj\": \"37335118000180\",\n  \"width\": 640,\n  \"height\": 480,\n  \"zoom\": 15\n}", "api_reaction": null}, {"api_name": "gera_comprovante_rfb_for_consulta_cnpj_tempo_real", "api_action": "\nAction: gera_comprovante_rfb_for_consulta_cnpj_tempo_real\nAction Input: {\n  \"taxid\": \"37335118000180\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gera_vis_o_da_rua_for_consulta_cnpj_tempo_real"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gera_comprovante_rfb_for_consulta_cnpj_tempo_real"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_version_for_general_classification"}}]}
{"URL": "67982", "query": "My company is expanding and we're looking for potential employees in different countries. Can you give me a list of supported countries for employee searches? Also, I would like to know the supported industries for the same purpose.", "api_names": ["get_supported_industries_for_fresh_linkedin_profile_data", "get_supported_countries_for_fresh_linkedin_profile_data", "Finish", "top_100_movies_list_for_imdb_top_100_movies", "all_communes_for_bps", "location_by_city_for_geosource_api", "python_env_for_pragmavantapi", "bmi_imperial_for_health_calculator_api", "bacterialmeningitisscoreforchildren_for_clinicalmarkers", "fetch_distance_between_two_pincodes_for_pincode_distance_measurement_", "youtube_topviews_year_for_musicdata_api", "getcodecontent_for_flow_study"], "api_descs": {"Finish": "No description available.", "all_communes_for_bps": "La liste des communes", "bacterialmeningitisscoreforchildren_for_clinicalmarkers": " ", "bmi_imperial_for_health_calculator_api": "This endpoint calculates the BMI based on the provided height and weight parameters in imperial units.", "fetch_distance_between_two_pincodes_for_pincode_distance_measurement_": "Enter two valid pincodes.", "get_supported_countries_for_fresh_linkedin_profile_data": "Get supported countries. Use the country codes in your \"Search employees\" endpoint.", "get_supported_industries_for_fresh_linkedin_profile_data": "Get supported industries. Use the industry_id in your \"Search employees\" endpoint.", "getcodecontent_for_flow_study": " ", "location_by_city_for_geosource_api": "Retrives  the lat and lng of the city.", "python_env_for_pragmavantapi": "Get python env", "top_100_movies_list_for_imdb_top_100_movies": "The Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and IMDb ID of The Top 100 Movies of All Time.", "youtube_topviews_year_for_musicdata_api": "Top Youtube viewed videos all time / on a specific year (2007 - now). Leave {year} blank for all time results"}, "aseqs": [{"api_name": "get_supported_countries_for_fresh_linkedin_profile_data", "api_action": "\nAction: get_supported_countries_for_fresh_linkedin_profile_data\nAction Input: {}", "api_reaction": null}, {"api_name": "get_supported_industries_for_fresh_linkedin_profile_data", "api_action": "\nAction: get_supported_industries_for_fresh_linkedin_profile_data\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_supported_countries_for_fresh_linkedin_profile_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_supported_industries_for_fresh_linkedin_profile_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_supported_countries_for_fresh_linkedin_profile_data"}}]}
{"URL": "59884", "query": "My friend is having trouble logging into their account. Can you help me with the API call to login the user? The username is 'emma90' and the password is 'password123'. Additionally, I would like to retrieve the inventory status of the store and get the order details by order ID '54321'.", "api_names": ["loginuser_for_tes", "getinventory_for_tes", "getorderbyid_for_tes", "Finish", "get_time_series_data_and_metadata_for_quandl", "status_for_tweesky", "premium_tips_for_betigolo_tips", "companies_by_exchange_for_freedom_finance", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real", "query_for_ldu_boundary_by_location_and_resolution_for_ca_boundaries_io", "teamplayers_for_baseballapi", "artist_appears_on_for_spotify_web", "url_download_for_ytconvert", "app_detail_for_steam", "get_call_for_epfo_employee_verification", "list_groups_for_whin", "get_the_awarded_books_of_a_year_for_hapi_books", "facts_for_cat_facts", "get_products_for_asdfadsf", "list_album_tracks_for_spotify_scraper"], "api_descs": {"Finish": "No description available.", "app_detail_for_steam": "Get detailed info of the app", "artist_appears_on_for_spotify_web": "Get artist appears on albums (max 50)", "companies_by_exchange_for_freedom_finance": "Convenient User-Friendly Manually Populated List Of Common Stocks Per Exchange Code. Not Guaranteed To Be Up To Date.", "facts_for_cat_facts": "Retrieve and query facts", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real": "Gera Comprovante da Receita Federal em PDF", "get_call_for_epfo_employee_verification": "Used to fetch api result using the request id received in responses.", "get_products_for_asdfadsf": " ", "get_the_awarded_books_of_a_year_for_hapi_books": "Returns the list of the best books of a year by its winning category.\nEach returned book has its Name, Winning Category, Cover Image and more.", "get_time_series_data_and_metadata_for_quandl": "This call returns data and metadata for a given time-series.", "getinventory_for_tes": "Returns a map of status codes to quantities", "getorderbyid_for_tes": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "list_album_tracks_for_spotify_scraper": "This endpoint lists tracks of an album. Pagination scraping is supported.", "list_groups_for_whin": "This endpoint returns a list of the groups you created through whin.", "loginuser_for_tes": "", "premium_tips_for_betigolo_tips": "List of active Premium Tips", "query_for_ldu_boundary_by_location_and_resolution_for_ca_boundaries_io": "Query for LDU H3 Boundary by Location and Resolution", "status_for_tweesky": "Endpoint to verify API is working and available<br/>", "teamplayers_for_baseballapi": "Get the players for a specific baseball team using the team ID.", "url_download_for_ytconvert": "Gets a url to download the file"}, "aseqs": [{"api_name": "loginuser_for_tes", "api_action": "\nAction: loginuser_for_tes\nAction Input: {\n  \"username\": \"emma90\",\n  \"password\": \"password123\"\n}", "api_reaction": null}, {"api_name": "getinventory_for_tes", "api_action": "\nAction: getinventory_for_tes\nAction Input: {}", "api_reaction": null}, {"api_name": "getorderbyid_for_tes", "api_action": "\nAction: getorderbyid_for_tes\nAction Input: {\n  \"orderid\": 54321\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": Deciding to start by trying to login the user and then retrieve inventory status and order details,\n\t\"api_name\": \"loginuser_for_tes\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_tes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getorderbyid_for_tes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "loginuser_for_tes"}}]}
{"URL": "10455", "query": "I am a sports blogger and would like to provide my readers with detailed information about upcoming matches. Can you help me by providing the special competitions and their corresponding matches using the getSpecialCompetitionView and getTspMatches APIs? Additionally, I would like to include the odds count and participants' details for each match. It would be great if the response includes the competition names, match details, and odds count.", "api_names": ["gettspmatches_for_betsports", "getspecialcompetitionview_for_betsports", "Finish", "v3_auto_complete_for_fidelity_investments", "get_the_current_stock_by_code_for_stocks", "get_user_data_for_discord_lookup", "storageexists_for_groupdocs_watermark_cloud", "competitions_player_stats_for_livescore_sports", "lastest_drawing_for_cash4life", "list_of_leagues_for_pinnacle_odds", "api_customer_for_quickbooks", "video_search_for_quality_porn", "get_user_info_for_instagram_v7", "get_list_of_apps_with_pagination_for_google_play", "results_for_msport", "get_product_for_my_store", "single_name_long_for_nameforge", "getfileversions_for_groupdocs_metadata_cloud"], "api_descs": {"Finish": "No description available.", "api_customer_for_quickbooks": " ", "competitions_player_stats_for_livescore_sports": "Get competition Player statistics by competition ID", "get_list_of_apps_with_pagination_for_google_play": "Returns a list of apps and a pagination token", "get_product_for_my_store": " ", "get_the_current_stock_by_code_for_stocks": "Get the current stock by code.", "get_user_data_for_discord_lookup": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically", "get_user_info_for_instagram_v7": "Get information about a user", "getfileversions_for_groupdocs_metadata_cloud": " ", "getspecialcompetitionview_for_betsports": "getSpecialCompetitionView data", "gettspmatches_for_betsports": "getTspMatches data", "lastest_drawing_for_cash4life": "Get the latest, and last winning Cash4Life winning number set.", "list_of_leagues_for_pinnacle_odds": "Get a list of leagues", "results_for_msport": "Msport  Soccer results at date - a comprehensive soccer match archive", "single_name_long_for_nameforge": "Create single names.\nMax query length is 200 characters.", "storageexists_for_groupdocs_watermark_cloud": " ", "v3_auto_complete_for_fidelity_investments": "Auto suggestion by input name or quote", "video_search_for_quality_porn": "Search for quality porn and get a provider-subdivided list of the best matching videos.\n\n### Examples\n\nSearch only HD videos that have been rated best with the search term \"amateur\".\n`/search?quality=hd&filter=rating&query=amateur'`\n\nSearch for \"amateur\" only. Filters and quality are optional.\n`/search?query=amateur'`\n\nSearch for \"amateur\" on page 2.\n`/search?query=amateur&page=2'`\n\nSearch for \"amateur\" and set a timeout for 5 seconds for each site request.\n`/search?query=amateur&timeout=5000`\n\nFilter only by the page you need. Here for example by PornHub. It can be filtered by any name part or part URL. For example \"porn\", \".com\" or complete names \"pornhub\", \"youporn.com\".\n`/search?query=amateur&site=pornhub`"}, "aseqs": [{"api_name": "getspecialcompetitionview_for_betsports", "api_action": "\nAction: getspecialcompetitionview_for_betsports\nAction Input: {}", "api_reaction": null}, {"api_name": "getspecialcompetitionview_for_betsports", "api_action": "\nAction: getspecialcompetitionview_for_betsports\nAction Input: {}", "api_reaction": null}, {"api_name": "gettspmatches_for_betsports", "api_action": "\nAction: gettspmatches_for_betsports\nAction Input: {}", "api_reaction": null}, {"api_name": "gettspmatches_for_betsports", "api_action": "\nAction: gettspmatches_for_betsports\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getspecialcompetitionview_for_betsports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gettspmatches_for_betsports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gettspmatches_for_betsports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getspecialcompetitionview_for_betsports"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getspecialcompetitionview_for_betsports"}}]}
{"URL": "10585", "query": "My company is organizing a sports event and we want to provide the participants with the latest odds and matches. Can you help us by providing the updated odds for different sports and the schedule of upcoming matches? It would be great if we could get the odds for popular sports like football, basketball, and cricket.", "api_names": ["matches_for_betmaster", "Finish", "top_collections_today_for_top_nft_sales", "get_call_for_icmai_verification", "house_prices_get_sales_history_for_zoopla_v2", "direct_geocoding_for_mymappi", "question_endpoint_for_ai_endpoint", "get_top_coins_by_followers_change_for_crowdsense", "get_the_calendar_for_alpaca_trading", "streams_mentions_for_stocktwits", "teams_list_for_cricbuzz_cricket", "v1_weather_for_weather_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "direct_geocoding_for_mymappi": "Translates an address as input into geographic coordinates. If there are multiple possible results, it retrieves the list of possible results ordered by the distance to the provided source coordinate (if any), in ascending order.", "get_call_for_icmai_verification": "Used to fetch api result using the request id received in responses.", "get_the_calendar_for_alpaca_trading": "Returns the market calendar", "get_top_coins_by_followers_change_for_crowdsense": "Retrieve real time top 10 coins by Mentions change in the last 24 hours\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers change value\n\n**Definitions:**\n\n- FollowersChange: Percentage change of Followers Reach in the requested date vs the average of the same metric in the past 14 days\n\n\n**Details:**\n- All results are in real time", "house_prices_get_sales_history_for_zoopla_v2": "Get sales history", "matches_for_betmaster": "Latest Matches by Betmaster", "question_endpoint_for_ai_endpoint": "Ask this endpoint any question", "streams_mentions_for_stocktwits": "Returns the most recent 30 messages containing mentions of the authenticating user's handle. These are considered public replies", "teams_list_for_cricbuzz_cricket": "List teams", "top_collections_today_for_top_nft_sales": "Top trending collections today", "v1_weather_for_weather_by_api_ninjas": "API Ninjas Weather API endpoint."}, "aseqs": [{"api_name": "matches_for_betmaster", "api_action": "\nAction: matches_for_betmaster\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the latest odds for popular sports like football, basketball, and cricket using the matches_for_betmaster API.\n\t\"api_name\": \"matches_for_betmaster\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betmaster"}}]}
{"URL": "51804", "query": "Can you give me the details of the episode with the IMDb ID tt2468135? Also, provide the crew details and additional information for the same episode.", "api_names": ["titles_episode_id_for_moviesdatabase", "titles_id_crew_for_moviesdatabase", "Finish", "tsv6_for_odam", "house_prices_for_detail_for_zoopla", "find_places_for_ai_weather_by_meteosource", "getorderbyid_for_petstore", "auto_complete_for_shazam", "nearby_superchargers_for_nearby_tesla_superchargers", "search_for_real_time_product_search", "api_shipping_productid_for_magic_aliexpress", "api_days_for_prague_stock_exchange", "creditcards_for_seeding_data", "baseball_league_rankings_for_sports_live_scores", "languages_allcountries_for_africa_api_", "email_validation_api_for_email_validation_and_verification", "get_top_30_of_github_repos_based_on_a_query_for_leo_github_data_scraper", "ideas_list_for_trading_view"], "api_descs": {"Finish": "No description available.", "api_days_for_prague_stock_exchange": " ", "api_shipping_productid_for_magic_aliexpress": "This ressource displays the shipping information for one product", "auto_complete_for_shazam": "Get suggestions by word or phrase", "baseball_league_rankings_for_sports_live_scores": "Returns the standings for a given league ID. You can retrieve League IDs from the Baseball Live Matches endpoint.", "creditcards_for_seeding_data": "Get 100 credit cards with en_US locale", "email_validation_api_for_email_validation_and_verification": "Email Validation and Verification API requires only a single email.\nChecking a misspelled email.\nChecking a malformed email.", "find_places_for_ai_weather_by_meteosource": "**Search places by name** to get **place_id** for the `Weather Forecast Endpoints` and detailed **geographical information** (country, region, elevation, timezone, etc.) for a given location.\n\nThe response can contain multiple places, sorted by relevance. You can then identify the one you want by coordinates, country, region, or type.\n\nUnlike the *find_places_prefix* endpoint, complete words are required here. You can search for cities, mountains, lakes, countries, etc.", "get_top_30_of_github_repos_based_on_a_query_for_leo_github_data_scraper": "Get top 30 of Github repos based on a query", "getorderbyid_for_petstore": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "house_prices_for_detail_for_zoopla": "House-prices for detail", "ideas_list_for_trading_view": "List ideas post with options and filters", "languages_allcountries_for_africa_api_": "Returns a json of all languages spoken in each country in Africa\nTakes parameter <country_name> with value <all>\nResponse example:\n{54 items\n\"Chad\":{2 items\n\"other_languages\":[11 items\n0:\n\"Sara\"\n1:\n\"Maba\"\n2:\n\"Kanembu\"\n3:\n\"Kotoko\"\n4:\n\"Bagirmi\"\n5:\n\"Boulala\"\n6:\n\"Gorane\"\n7:\n\"Marba\"\n8:\n\"Masalit\"\n9:\n\"Tama\"\n10:\n\"Teda\"\n]\n\"national_language\":[2 items\n0:\n\"French\"\n1:\n\"Arabic\"\n]\n}\n]", "nearby_superchargers_for_nearby_tesla_superchargers": "Get nearby superchargers up to 50km away.", "search_for_real_time_product_search": "Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter.", "titles_episode_id_for_moviesdatabase": " ", "titles_id_crew_for_moviesdatabase": " ", "tsv6_for_odam": "Get the variable list within the specified category of a merged data subsets along with the metadata\n"}, "aseqs": [{"api_name": "titles_episode_id_for_moviesdatabase", "api_action": "\nAction: titles_episode_id_for_moviesdatabase\nAction Input: {\n  \"is_id\": \"tt2468135\",\n  \"info\": \"base_info\"\n}", "api_reaction": null}, {"api_name": "titles_id_crew_for_moviesdatabase", "api_action": "\nAction: titles_id_crew_for_moviesdatabase\nAction Input: {\n  \"is_id\": \"tt2468135\"\n}", "api_reaction": null}, {"api_name": "titles_episode_id_for_moviesdatabase", "api_action": "\nAction: titles_episode_id_for_moviesdatabase\nAction Input: {\n  \"is_id\": \"tt2468135\",\n  \"info\": \"base_info\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "titles_episode_id_for_moviesdatabase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "titles_id_crew_for_moviesdatabase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "titles_episode_id_for_moviesdatabase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "titles_id_crew_for_moviesdatabase"}}]}
{"URL": "10747", "query": "My company is organizing a charity event, and we want to include a sports betting activity. Can you provide us with the latest odds and matches for FDJ? It would be great to have the odds for both teams and the match details to engage our participants.", "api_names": ["matches_for_fdj", "odds_for_fdj", "Finish", "latest_coupons_for_27coupons", "code_for_you_for_code_for_you", "account_for_nitro", "get_cigar_average_ring_gauge_for_cigars", "user_id_by_username_for_twitter", "markets_for_airbnb_listings", "prematchform_for_cricketapi2", "market_get_top_mentions_for_schwab", "retrieving_a_collection_for_opensea_data_query", "getuserbyname_for_petstoreapi2_0", "getquotesbycategory_for_quotes_villa", "getallcampaigns_for_nexweave"], "api_descs": {"Finish": "No description available.", "account_for_nitro": "This endpoint retrieves an account.", "code_for_you_for_code_for_you": "Code For You", "get_cigar_average_ring_gauge_for_cigars": "Get the average ring gauge of cigars, filter supported", "getallcampaigns_for_nexweave": "The API will return all the CSV Campaigns associated with the user's account, including Images, Videos &  Image+Video Campaign.\n\nNote: The campaigns must be in Success state.", "getquotesbycategory_for_quotes_villa": "For valid response try these categories listed below:-\n- Quotes Categories are:-\n\n    age   science  success  time  travel\n\n    wisdom   alone  art  attitude  courage\n\n    culture  dreams  friendship  happiness hope\n\n    humour  imagination  inspirational   life   motivational\n\n    nature  philosophy  poetry   popular  psychology", "getuserbyname_for_petstoreapi2_0": "", "latest_coupons_for_27coupons": "", "market_get_top_mentions_for_schwab": "List top mentions stock quotes", "markets_for_airbnb_listings": "Retrieve Market names to be used in Listing by market endpoint. Returns 50 results", "matches_for_fdj": "Latest Matches for FDJ", "odds_for_fdj": "Latest Odds for FDJ", "prematchform_for_cricketapi2": "Get pre-match form information for a specific cricket match.", "retrieving_a_collection_for_opensea_data_query": "Used for retrieving more in-depth information about individual collections, including real time statistics like floor price.", "user_id_by_username_for_twitter": "this returns twitter user id based on twitter username."}, "aseqs": [{"api_name": "odds_for_fdj", "api_action": "\nAction: odds_for_fdj\nAction Input: {}", "api_reaction": null}, {"api_name": "matches_for_fdj", "api_action": "\nAction: matches_for_fdj\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_fdj"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_fdj"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_fdj"}}]}
{"URL": "56024", "query": "Can you find the facilities in Arusha? Also, provide me with the latitude and longitude of the nearest college.", "api_names": ["facilities_lookup_for_tanzania_api", "Finish", "parser_get_for_scraper_s_proxy", "get_ecoindex_analysis_by_id_version_ecoindexes_id_get_for_ecoindex", "users_by_rest_ids_for_twitter_v2_v2", "between_checker_for_dateclock", "get_for_test_pg_prod", "getgamesbyid_for_unigamer_api", "get_all_tenants_for_yardillo", "delete_delete_a_webhook_for_calltrackingmetrics", "get_api_by_external_custom_id_for_aaaa", "prueb_for_deepsound"], "api_descs": {"Finish": "No description available.", "between_checker_for_dateclock": "Check if given date is between two dates", "delete_delete_a_webhook_for_calltrackingmetrics": "", "facilities_lookup_for_tanzania_api": "This endpoint allows you to get facilities in Tanzania like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "get_all_tenants_for_yardillo": "This returns all your Tenants", "get_api_by_external_custom_id_for_aaaa": "Get information on specified API based on a given custom external ID, including `category`, `id`, and `name`", "get_ecoindex_analysis_by_id_version_ecoindexes_id_get_for_ecoindex": "This returns an ecoindex given by its unique identifier", "get_for_test_pg_prod": "gfd", "getgamesbyid_for_unigamer_api": " ", "parser_get_for_scraper_s_proxy": "Automatically parses html into an easily processable json format", "prueb_for_deepsound": "Prueb", "users_by_rest_ids_for_twitter_v2_v2": "Users By Rest IDs"}, "aseqs": [{"api_name": "facilities_lookup_for_tanzania_api", "api_action": "\nAction: facilities_lookup_for_tanzania_api\nAction Input: {\n  \"type\": \"restaurant\",\n  \"region\": \"Arusha\"\n}", "api_reaction": null}, {"api_name": "facilities_lookup_for_tanzania_api", "api_action": "\nAction: facilities_lookup_for_tanzania_api\nAction Input: {\n  \"type\": \"pharmacy\",\n  \"region\": \"Arusha\"\n}", "api_reaction": null}, {"api_name": "facilities_lookup_for_tanzania_api", "api_action": "\nAction: facilities_lookup_for_tanzania_api\nAction Input: {\n  \"type\": \"bank\",\n  \"region\": \"Arusha\"\n}", "api_reaction": null}, {"api_name": "facilities_lookup_for_tanzania_api", "api_action": "\nAction: facilities_lookup_for_tanzania_api\nAction Input: {\n  \"type\": \"hospital\",\n  \"region\": \"Arusha\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_tanzania_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_tanzania_api", "api_action": "\nAction: facilities_lookup_for_tanzania_api\nAction Input: {\n  \"type\": \"college\",\n  \"region\": \"Arusha\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_tenants_for_yardillo"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_tanzania_api", "api_action": "\nAction: facilities_lookup_for_tanzania_api\nAction Input: {\n  \"type\": \"college\",\n  \"region\": \"Arusha\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "facilities_lookup_for_tanzania_api", "api_action": "\nAction: facilities_lookup_for_tanzania_api\nAction Input: {\n  \"type\": \"college\",\n  \"region\": \"Arusha\"\n}"}}]}
{"URL": "15069", "query": "My company is organizing a marketing campaign and we need some inspiration. Can you show us a variety of images related to marketing strategies, along with their titles, sizes, and links to the original images? Additionally, we would like to see web search results for articles about successful marketing campaigns, including their titles, snippets, and links.", "api_names": ["search_image_for_google_search_json", "search_web_for_google_search_json", "Finish", "get_available_companies_for_generate_linkedin_leads", "get_option_delivery_price_for_bybit", "twitter_space_stream_url_for_twitter_aio", "get_results_for_soft_cat_quiz", "get_profile_data_for_linkedin_profile_data_api", "user_agenda_for_supersaas_online_bookings_and_appointment_scheduling", "search_for_go_tracks_for_soundcloud_scraper", "subdomains_lookup_for_subdomains_lookup", "scala_versions_for_scala_code_compiler", "rates_for_nitro", "send_sms_for_broadnet_sms", "main_for_legend_of_takada_kenshi", "get_call_for_ip_and_location_spoofing_detection", "query_joke_using_id_for_anime_jokes", "tirto_search_for_indonesia_news"], "api_descs": {"Finish": "No description available.", "get_available_companies_for_generate_linkedin_leads": "Get Available Companies which could be used in /leads/leads/ endpoint", "get_call_for_ip_and_location_spoofing_detection": "Used to fetch api result using the request id received in responses.", "get_option_delivery_price_for_bybit": "Get option delivery price", "get_profile_data_for_linkedin_profile_data_api": "get profile data", "get_results_for_soft_cat_quiz": "This endpoint returns the result of the users who attempted the quiz", "main_for_legend_of_takada_kenshi": "クエリパラメータは不要です.そのままアクセスしてください.\n**API認証等は特に設けておりませんが, プログラムによるAPIアクセスの場合はUser-Agentにリクエスト元のサービス名・アプリケーションを入力して下さい.**", "query_joke_using_id_for_anime_jokes": "Search anime joke using joke ID", "rates_for_nitro": "This endpoint retrieves all rates.", "scala_versions_for_scala_code_compiler": "Scala Versions", "search_for_go_tracks_for_soundcloud_scraper": "This endpoint searches for SoundCloud (Go+) tracks with optional filters. Pagination scraping is supported.", "search_image_for_google_search_json": "This endpoint is used to perform image search using the Google Search JSON API. You can send a request with parameters like **q** (search query), **num** (desired number of images), **start** (starting index of results), and others. The request will generate a JSON response containing information about images that match the search query", "search_web_for_google_search_json": "This endpoint is used to perform text search on the web using the Google Search JSON API. You can send a request with various parameters such as **q** (search query), **num** (desired number of results), **start** (starting index of results),  and more. The request will return search results in JSON format containing information such as titles, URLs, and descriptions of the search results.", "send_sms_for_broadnet_sms": "Message Submission", "subdomains_lookup_for_subdomains_lookup": "Query API with root domain to retrieve all known subdomains", "tirto_search_for_indonesia_news": "search tirto news data", "twitter_space_stream_url_for_twitter_aio": "Receive m3u8 url for Twitter Space stream by mediaId.", "user_agenda_for_supersaas_online_bookings_and_appointment_scheduling": ""}, "aseqs": [{"api_name": "search_image_for_google_search_json", "api_action": "\nAction: search_image_for_google_search_json\nAction Input: {\n  \"q\": \"marketing strategies\",\n  \"num\": 5\n}", "api_reaction": null}, {"api_name": "search_web_for_google_search_json", "api_action": "\nAction: search_web_for_google_search_json\nAction Input: {\n  \"q\": \"successful marketing campaigns\",\n  \"num\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_image_for_google_search_json"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_web_for_google_search_json\",\n\t\"api_action\": \"\\nAction: search_web_for_google_search_json\\nAction Input: {\\n  \\\"q\\\": \\\"marketing campaigns\\\",\\n  \\\"num\\\": 5,\\n  \\\"cx\\\": \\\"xxxx\", // Replace with a valid custom search engine id\n\t\\\"searchType\\\": \\\"image\\\"\\t\\t// This parameter is not used in this case, but it's required to specify the type of results needed (image)\n}\",\n\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_image_for_google_search_json"}}]}
{"URL": "79776", "query": "I'm working on a project and I need to gather information about various car models. Can you provide me with the HSN and TSN numbers, power, and engine displacement for Audi, BMW, and Mercedes-Benz models? It would be great if you could include the insurance classes as well.", "api_names": ["get_models_for_hsn_tsn", "Finish", "2_get_account_information_for_rewards_as_a_service", "ymm_for_autoymm", "get_quotes_by_specific_author_for_world_of_quotes", "artist_discography_overview_for_spotify", "devices_getasingledeviceinfofromaccount_for_trumpetbox_cloud", "bus_detours_for_septa", "get_exercises_for_musclewiki", "opt_gamma_for_kiann_options_project"], "api_descs": {"2_get_account_information_for_rewards_as_a_service": "Get the information for an account created under a Customer", "Finish": "No description available.", "artist_discography_overview_for_spotify": "Get artist discography overview", "bus_detours_for_septa": "", "devices_getasingledeviceinfofromaccount_for_trumpetbox_cloud": " ", "get_exercises_for_musclewiki": "Get all Exercises", "get_models_for_hsn_tsn": "Returns all models based on manufacturer.", "get_quotes_by_specific_author_for_world_of_quotes": "This API returns the collection of quotes by author you pass in the query params. Maximum you can get 20 quotes at a time and can be customized by *limit*. Our API support pagination and records can be paginated by *page* query param.", "opt_gamma_for_kiann_options_project": "option lognormal greeks : gamma calculates the gamma, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), cp  =call (c) /put (p) (string), type_ = 0 (default) for use in rapidAPI.com", "ymm_for_autoymm": "Year Make Model"}, "aseqs": [{"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"BMW\"\n}", "api_reaction": null}, {"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"Mercedes-Benz\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_models_for_hsn_tsn"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_models_for_hsn_tsn"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_models_for_hsn_tsn", "api_action": "{\"manufacturer\": \"Audi\"}", "api_reaction": null}}]}
{"URL": "7996", "query": "I'm curious about the reviews for an application with the ID 'com.example.app'. Can you retrieve the reviews and ratings given by users? Also, fetch the permissions required by this application.", "api_names": ["get_permissions_by_app_id_for_google_play", "get_reviews_by_app_id_for_google_play", "Finish", "product_category_list_for_real_time_amazon_data", "auto_complete_for_zoopla_v2", "public_holidays_for_public_holiday", "packages_v2_track_for_trackingmore_v2", "authentication_status_for_sagenda_v3", "domain_type_for_sitedomain", "zois_detail_for_idealista_v2", "rebootaccount_for_green_api", "subdomains_lookup_for_subdomains_lookup", "get_video_info_for_youtube_video_download_info", "get_global_indices_by_price_for_global_stock_market_api_data", "getorderbyid_for_thisisapublicapi_v2", "cheapest_tickets_for_flight_data_v2", "premier_league_standings_for_premier_league_standings", "javascript_jobs_for_usa_jobs_for_it"], "api_descs": {"Finish": "No description available.", "authentication_status_for_sagenda_v3": "You can use this endpoint to check whether your authentication token is valid. Responds with HTTP 200, API version and list of available claims for a token (for reference)", "auto_complete_for_zoopla_v2": "Get auto complete suggestion by term or phrase", "cheapest_tickets_for_flight_data_v2": "Returns the cheapest non-stop tickets, as well as tickets with 1 or 2 stops, for the selected route with departure/return date filters. Important: Old dates may be specified in a query. No error will be generated, but no data will be returned.", "domain_type_for_sitedomain": "展別類型", "get_global_indices_by_price_for_global_stock_market_api_data": "World financial market to get global Indices with respect to price", "get_permissions_by_app_id_for_google_play": "Returns the permissions of a single application by its ID", "get_reviews_by_app_id_for_google_play": "Returns the reviews of a single application by its ID", "get_video_info_for_youtube_video_download_info": "Provides the video download links and other relevant information in the JSON format.", "getorderbyid_for_thisisapublicapi_v2": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "javascript_jobs_for_usa_jobs_for_it": "JavaScript Jobs Api", "packages_v2_track_for_trackingmore_v2": "Get tracking information of specific package", "premier_league_standings_for_premier_league_standings": "Premier League Standings", "product_category_list_for_real_time_amazon_data": "Get Amazon product categories (per country / marketplace).", "public_holidays_for_public_holiday": "Returns the public holidays from a given year and country.", "rebootaccount_for_green_api": "Документация [Reboot](https://green-api.com/docs/api/account/Reboot/)", "subdomains_lookup_for_subdomains_lookup": "Query API with root domain to retrieve all known subdomains", "zois_detail_for_idealista_v2": "Get information about specific zone of interest"}, "aseqs": [{"api_name": "get_reviews_by_app_id_for_google_play", "api_action": "\nAction: get_reviews_by_app_id_for_google_play\nAction Input: {\n  \"appid\": \"com.example.app\"\n}", "api_reaction": null}, {"api_name": "get_permissions_by_app_id_for_google_play", "api_action": "\nAction: get_permissions_by_app_id_for_google_play\nAction Input: {\n  \"appid\": \"com.example.app\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_permissions_by_app_id_for_google_play"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_permissions_by_app_id_for_google_play"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_reviews_by_app_id_for_google_play", "api_action": "\nAction: get_reviews_by_app_id_for_google_play\nAction Input: {\n  \"appid\": \"com.example.app\"\n}", "api_reaction": null}}]}
{"URL": "81215", "query": "I'm a software developer working on a cryptocurrency project. Can you help me find news articles about cryptocurrencies from CoinGecko and CryptoSlate? I need to stay updated on the latest industry news and technological advancements.", "api_names": ["general_search_for_crypto_news_v2", "get_individual_news_source_for_crypto_news_v2", "Finish", "get_amazon_product_reviews_for_ag_amazon_data_web_scraper", "get_users_detail_info_for_tiktok_video_feature_summary", "sms_for_insafel", "countrieslist_for_geosource_api", "hotel_reviews_for_priceline_com_provider", "get_company_data_by_id_for_fresh_linkedin_profile_data", "get_monthly_top_100_games_torrents_for_movie_tv_music_search_and_download", "get_all_languages_for_thefluentme", "enterprise_customer_for_soti_sync", "all_earthquakes_past_hour_for_everyearthquake", "latest_coupons_for_27coupons", "products_search_for_wayfair"], "api_descs": {"Finish": "No description available.", "all_earthquakes_past_hour_for_everyearthquake": "All Earthquakes, Past Hour", "countrieslist_for_geosource_api": "Retrives a list of all countries and some basic information of them", "enterprise_customer_for_soti_sync": "Is he a Enterprise Customer?", "general_search_for_crypto_news_v2": "Can take a single word search that will return any articles with the given keyword.", "get_all_languages_for_thefluentme": "Returns a list of all supported languages. The API supports 40 different languages and 80 different voices for the ai_reading. This is used to define the post language when a post is added. It also defines the voice for the sound file that is generated for the user to listen to.", "get_amazon_product_reviews_for_ag_amazon_data_web_scraper": "It Helps You To Get Reviews Of Any Product By Entering Its Product Id.", "get_company_data_by_id_for_fresh_linkedin_profile_data": "Given a company’s LinkedIn internal ID, the API will return valuable data points in JSON format. **1 credit per call.**", "get_individual_news_source_for_crypto_news_v2": "Get news about crypto from a specific news source. There are 18 news sources to choose from cryptonews, coindesk, crypto.news, yahoo, fxstreet, cointelegraph, businessinsider, cryptopotato, ambcrypto, cryptonewsline, cryptoglobe, coingecko, cryptoslate, bitcoinist, forbes, nulltx, blockonomi, and coinspeaker.", "get_monthly_top_100_games_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Games Torrents", "get_users_detail_info_for_tiktok_video_feature_summary": "get users detail info\nunique_id or user_id is not empty", "hotel_reviews_for_priceline_com_provider": "This API returns a list of reviews", "latest_coupons_for_27coupons": "", "products_search_for_wayfair": "Search for products by term or phrase", "sms_for_insafel": "Send"}, "aseqs": [{"api_name": "get_individual_news_source_for_crypto_news_v2", "api_action": "\nAction: get_individual_news_source_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"coingecko\"\n}", "api_reaction": null}, {"api_name": "get_individual_news_source_for_crypto_news_v2", "api_action": "\nAction: get_individual_news_source_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"coingecko\"\n}", "api_reaction": null}, {"api_name": "general_search_for_crypto_news_v2", "api_action": "\nAction: general_search_for_crypto_news_v2\nAction Input: {\n  \"searchid\": \"cryptoslate\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_for_crypto_news_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_for_crypto_news_v2", "api_action": "\nAction: get_individual_news_source_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"cryptoslate\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_individual_news_source_for_crypto_news_v2", "api_action": "\nAction: get_individual_news_source_for_crypto_news_v2\nAction Input: {\n  \"newspaperid\": \"coingecko\",\n  \"news_source\": \"crypto_slate\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "general_search_for_crypto_news_v2", "api_action": "\nAction: general_search_for_crypto_news_v2\nAction Input: {\n  \"searchid\": \"coingecko\",\n  \"keyword\": \"crypto"}}]}
{"URL": "51054", "query": "I'm planning a family trip and we need to locate charging stations along our route. Can you help us find the nearest charging stations within a 30-mile radius of our current location? We prefer stations with public access and J1772 connectors. Please provide the station names, addresses, and contact numbers.", "api_names": ["Finish", "getbycordsadv_for_electric_vehicle_charging_stations", "getoutgoingmessagesjournal_for_green_api", "basic_search_for_kubric_the_comprehensive_movie_news_api", "login_for_appointment_system_api", "cities_v2_get_measurements_for_airvisual", "getcurrentbysymbol_for_earningsdata", "hls_for_twitter"], "api_descs": {"Finish": "No description available.", "basic_search_for_kubric_the_comprehensive_movie_news_api": "The `/news/basic/search` endpoint allows you to search for movie news articles.", "cities_v2_get_measurements_for_airvisual": "Get measurements in specific city by its id", "getbycordsadv_for_electric_vehicle_charging_stations": "Uses Latitude & Longitude to get near by electric charging stations", "getcurrentbysymbol_for_earningsdata": "Get the current value, growth and momentum information for a single stock.", "getoutgoingmessagesjournal_for_green_api": "Документация [LastOutgoingMessages](https://green-api.com/docs/api/journals/LastOutgoingMessages/)", "hls_for_twitter": "hls => mp4 converter", "login_for_appointment_system_api": "This Endpoint is use for login to the system and getting the Api Key for the clinic. It needs username and password as query parameters. \nParameter Descriptions:\nusername --> parameter for username in the system. It is the same with username while creating the account.\npassword --> password for the username. It is same with the password while creating the acoount.\n\nReturn Value\nThis Endpoint returns string value.\nIf you get a sting with 6+ long this means that you have successfully passed username and password check and you are getting the Accesskey fort he system.\nIf you get “W1” it means a warning that your username doesn’t exists\nIf you get “W2” it means a warning that your password is not correct.\nIt you get “E1” it means a programmatic internal error. If you get E1 in the next calls you can get help from us."}, "aseqs": [{"api_name": "getbycordsadv_for_electric_vehicle_charging_stations", "api_action": "\nAction: getbycordsadv_for_electric_vehicle_charging_stations\nAction Input: {\n  \"radius\": 30,\n  \"lat\": 37.7749,\n  \"lng\": -122.4194,\n  \"access_param\": \"public\",\n  \"ev_connector_type_param\": \"J1772\",\n  \"per_page\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbycordsadv_for_electric_vehicle_charging_stations"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbycordsadv_for_electric_vehicle_charging_stations", "api_action": "\nAction: getbycordsadv_for_electric_vehicle_charging_stations\nAction Input: {\n  \"radius\": 30,\n  \"lat\": 37.7749,\n  \"lng\": -122.4194,\n  \"access_param\": \"public\",\n  \"ev_connector_type_param\": \"J1772\",\n  \"per_page\": 5\n}", "api_reaction": null}}]}
{"URL": "51368", "query": "I am building a travel website and I need information about popular destinations. Can you fetch 100 places with their latitude and longitude coordinates? Additionally, I would like to include 100 products with descriptions, prices, categories, and images to showcase travel-related items.", "api_names": ["places_for_seeding_data", "products_for_seeding_data", "Finish", "download_reverbnation_song_for_reverbnation_song_downloader", "ocean_conditions_closest_to_latitude_longitude_for_wavebase", "getsmsmessagespaginated_for_mailslurp_email_testing", "gets_the_data_from_all_league_champions_for_league_of_legends_champion_meta", "message_send_for_zipwhip", "stores_info_for_cheapshark_game_deals", "get_server_time_for_yandex_video_api", "group_profile_for_steam_community", "tags_for_mcapi", "api_for_demo", "locationsuggestions_v2_for_zillow_base", "get_time_diff_by_city_for_location_and_time", "generate_captcha_for_captcha", "aircraftsearch_for_flightera_flight_data", "get_id_for_fastingcenters"], "api_descs": {"Finish": "No description available.", "aircraftsearch_for_flightera_flight_data": "A list of plane registrations for a given search criteria.\nCan search by airline ident, country, model\nIf multiple arguments are provided, they will be chained as AND\nReturns only currently active aircraft", "api_for_demo": "to get the location", "download_reverbnation_song_for_reverbnation_song_downloader": "Get song data & download URL of any paid song.\n(Fetch song name, artist, thumbnail, duration & mp3 downloadable link)", "generate_captcha_for_captcha": "Generates a captcha and returns a UUID.", "get_id_for_fastingcenters": "Get ID", "get_server_time_for_yandex_video_api": "Gets server time.", "get_time_diff_by_city_for_location_and_time": "Find out time difference from `from_time` to `to_time` for specified cities. Daylight saving time are taken care of.  **Note**: the fuzzy search of provided city may not be the one you want due to multiple cities may have the same name, the most common one will be used. In this case, use a geocoding service to find the exact geolocation of the city, use `/timediff/bylocation` endpoint instead.", "gets_the_data_from_all_league_champions_for_league_of_legends_champion_meta": "Fetches the Meta Data for all available League of Legends Champions", "getsmsmessagespaginated_for_mailslurp_email_testing": "By default returns all SMS messages across all phone numbers sorted by ascending created at date. Responses are paginated. You can restrict results to a list of phone number IDs. You can also filter out read messages", "group_profile_for_steam_community": "An overview of a steamcommunity group.", "locationsuggestions_v2_for_zillow_base": "Search for a location", "message_send_for_zipwhip": "Sends a message from the logged in user's phone number.", "ocean_conditions_closest_to_latitude_longitude_for_wavebase": "​https://api.wavebase.app/v4/conditions/search/{latitude}/{longitude}\n\nSearch for current and predicted ocean conditions closest to a given latitude/longitude.\n\nReturned conditions include the closest point found, along with Waves, Tides and Weather conditions are the location.", "places_for_seeding_data": "Get 100 places", "products_for_seeding_data": "Get 100 products with en_US locale and taxes of 10% and categories type set as string", "stores_info_for_cheapshark_game_deals": "Returns a full list of store IDs and names, a flag specifying if store is active, and an array of image/logo sizes (relative URLs)", "tags_for_mcapi": "Retrieve blocks and items tags"}, "aseqs": [{"api_name": "places_for_seeding_data", "api_action": "\nAction: places_for_seeding_data\nAction Input: {\n  \"quantity\": 100\n}", "api_reaction": null}, {"api_name": "products_for_seeding_data", "api_action": "\nAction: products_for_seeding_data\nAction Input: {\n  \"quantity\": 100,\n  \"locale\": \"en_US\",\n  \"taxes\": 10,\n  \"categories_type\": \"string\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "places_for_seeding_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "products_for_seeding_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "Finish"}}]}
{"URL": "3643", "query": "I'm currently studying the Middle Ages and would like to enhance my understanding by learning about specific events. Can you help me find a random historic event and its corresponding year? Additionally, I'm curious about events that happened in the year 1300 CE. Please provide me with the details.", "api_names": ["Finish", "historic_event_by_year_for_world_history_timeline", "random_historic_event_for_world_history_timeline", "all_crypto_for_investing_financial_stocks", "word_of_the_day_from_cd_for_word_of_the_day", "articlesbyevent_for_spaceflight_news", "hotel_info_for_hotels_com_provider", "get_products_in_category_for__demo_project_v12", "odds_for_upcoming_fixtures_for_football_xg_statistics", "user_groups_list_for_steam_community", "random_for_manatee_jokes", "matchhighlights_for_icehockeyapi", "statusforonepdffilecrawler_for_carbon_management", "artist_discography_overview_for_spotify_web", "carriers_list_for_trackingmore_v2"], "api_descs": {"Finish": "No description available.", "all_crypto_for_investing_financial_stocks": "get all datatable of crypto", "articlesbyevent_for_spaceflight_news": " ", "artist_discography_overview_for_spotify_web": "Get artist discography overview", "carriers_list_for_trackingmore_v2": "List all supported carriers", "get_products_in_category_for__demo_project_v12": " ", "historic_event_by_year_for_world_history_timeline": "Give an year in the query and it returns all the available events from that year", "hotel_info_for_hotels_com_provider": "Get hotel info", "matchhighlights_for_icehockeyapi": "Get the highlights for a specific Ice Hockey match using the match id.", "odds_for_upcoming_fixtures_for_football_xg_statistics": "Get odds of future fixtures. \nUpdates every minute.", "random_for_manatee_jokes": "retrieves a random manatee joke", "random_historic_event_for_world_history_timeline": "Returns a Random World Historic Event with the year and the event", "statusforonepdffilecrawler_for_carbon_management": "Get results in details from the task id.", "user_groups_list_for_steam_community": "Get a listing of all the public and private groups a user is apart of.", "word_of_the_day_from_cd_for_word_of_the_day": "Get word of the day from cd."}, "aseqs": [{"api_name": "random_historic_event_for_world_history_timeline", "api_action": "\nAction: random_historic_event_for_world_history_timeline\nAction Input: {}", "api_reaction": null}, {"api_name": "historic_event_by_year_for_world_history_timeline", "api_action": "\nAction: historic_event_by_year_for_world_history_timeline\nAction Input: {\n  \"year\": \"1300\"\n}", "api_reaction": null}, {"api_name": "historic_event_by_year_for_world_history_timeline", "api_action": "\nAction: historic_event_by_year_for_world_history_timeline\nAction Input: {\n  \"year\": \"1300\"\n}", "api_reaction": null}, {"api_name": "random_historic_event_for_world_history_timeline", "api_action": "\nAction: random_historic_event_for_world_history_timeline\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}, {"state": "generated_by_agent", "aseq": {"api_name": "historic_event_by_year_for_world_history_timeline", "api_action": "{\"year\": 1300}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_historic_event_for_world_history_timeline"}}]}
{"URL": "19820", "query": "Can you help me find all the NFTs owned by my friend's Ethereum address '0x8e7644918b3e280fb3b599ca381a4efcb7ade202'? I would like to obtain the metadata, attributes, and enclosed media for each NFT. Please provide the contract address, token ID, title, description, external view URL, and media.", "api_names": ["getnfts_byaddress_for_nfts_by_address", "Finish", "search_single_postcode_for_uk_postcode_to_latitude_and_longitude", "trending_tags_for_hashtag", "fetch_latest_for_mangaverse_api", "group_delete_for_zipwhip", "get_all_stats_for_free_nba", "getteams_for_wosti_futbol_tv_spain", "last_ratings_for_sofascores", "webhooks_for_searchhook", "competitions_get_short_info_for_transfermarket", "shazam_songs_get_details_for_shazam"], "api_descs": {"Finish": "No description available.", "competitions_get_short_info_for_transfermarket": "Get short information of one or more competitions", "fetch_latest_for_mangaverse_api": "This will get the latest of the updated manga on this server\npage should be 1 or more than 1 and the genres should be string with comma\ngenres ex: Harem,Fantasy", "get_all_stats_for_free_nba": "Retrieves all stats", "getnfts_byaddress_for_nfts_by_address": "Gets all NFTs currently owned by a given address. Unlimited, results display in 100s.", "getteams_for_wosti_futbol_tv_spain": "Obtener el listado de equipos de fútbol televisados en España.", "group_delete_for_zipwhip": "Delete the group. This is similar to deleting a contact, no message objects will be affected by deleting the group.", "last_ratings_for_sofascores": "Get the latest player rating", "search_single_postcode_for_uk_postcode_to_latitude_and_longitude": "Search a single postcode and return the latitude and longitude", "shazam_songs_get_details_for_shazam": "Get mapping id information between systems to use with other endpoints.", "trending_tags_for_hashtag": "Get global trending tags", "webhooks_for_searchhook": "Returns list of saved queries with associated  webhooks."}, "aseqs": [{"api_name": "getnfts_byaddress_for_nfts_by_address", "api_action": "\nAction: getnfts_byaddress_for_nfts_by_address\nAction Input: {\n  \"owner\": \"0x8e7644918b3e280fb3b599ca381a4efcb7ade202\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getnfts_byaddress_for_nfts_by_address"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnfts_byaddress_for_nfts_by_address"}}]}
{"URL": "79779", "query": "I'm organizing a car exhibition and I need to display information about different car models. Can you fetch the power, engine displacement, fuel type, and insurance classes for Audi, BMW, and Mercedes-Benz models? It would be great if you could include the HSN and TSN numbers as well.", "api_names": ["get_models_for_hsn_tsn", "Finish", "weekly_schedule_for_baseball_datafeeds_by_rolling_insights", "articlesbyevent_for_spaceflight_news", "exchange_information_for_crypto_markets", "quote_of_the_day_for_quotes_v2", "caiso_for_caiso", "child_comments_for_100_success_instagram_api_scalable_robust", "convert_get_symbol_for_currencies_and_countries", "livetraffic_for_adsbx_flight_sim_traffic", "https_kassbet_p_rapidapi_com_for_kassbet", "artist_discography_overview_for_spotify_data"], "api_descs": {"Finish": "No description available.", "articlesbyevent_for_spaceflight_news": " ", "artist_discography_overview_for_spotify_data": "artist-discography-overview", "caiso_for_caiso": "Gets standard CAISO data", "child_comments_for_100_success_instagram_api_scalable_robust": "Get child comments list", "convert_get_symbol_for_currencies_and_countries": "It is the same thing with the convert endpoint. But this one can give you the symbol of the converted value.", "exchange_information_for_crypto_markets": "Current exchange trading rules and symbol information", "get_models_for_hsn_tsn": "Returns all models based on manufacturer.", "https_kassbet_p_rapidapi_com_for_kassbet": "fetch games", "livetraffic_for_adsbx_flight_sim_traffic": "Returns all aircraft within 25nm radius of specified Lat/Lon", "quote_of_the_day_for_quotes_v2": "Returns Quote of the Day", "weekly_schedule_for_baseball_datafeeds_by_rolling_insights": "Returns all events from the date specified plus 7 days in advance"}, "aseqs": [{"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"Audi\"\n}", "api_reaction": null}, {"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"BMW\"\n}", "api_reaction": null}, {"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"Mercedes-Benz\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch car models for Audi, BMW, and Mercedes-Benz from the 'get_models_for_hsn_tsn' API. After getting the models, I'll find their details like power, engine displacement, fuel type, and insurance classes using other APIs. Then, I should return all this information in an organized format.\n\t\"api_name\": \"get_models_for_hsn_tsn\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"BMW\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"Mercedes-Benz\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_models_for_hsn_tsn", "api_action": "\nAction: get_models_for_hsn_tsn\nAction Input: {\n  \"manufacturer\": \"Audi\"\n}", "api_reaction": null}}]}
{"URL": "36474", "query": "Retrieve the token balance for the address 0xe9e7cea3dedca5984780bafc599bd69add087d56. Moreover, I would like to obtain the price of the token with the default address 0xe9e7cea3dedca5984780bafc599bd69add087d56. Additionally, can you provide the NFT collections available on Pancakeswap? I'm interested in the address, owner, name, description, symbol, and total supply of each collection. Also, it would be helpful to know if they are verified.", "api_names": ["get_nft_collections_for_pancakeswap_api_freemium", "get_token_price_for_pancakeswap_api_freemium", "get_token_balance_for_pancakeswap_api_freemium", "Finish", "recommended_channels_for_fastytapi", "hin_decoder_return_html_for_hull_id_boat_hin_decoder", "get_user_favorite_videos_for_tiktok_video_feature_summary", "glossary_for_horoscope_api", "autocomplete_addresses_for_autocomplete_usa", "medium_for_check_username", "get_all_teas_for_teas", "timeframe_for_currencyapi_net", "read_for_sms77io", "feed_for_instagram_statistics_api", "extract_top_keywords_phrases_by_density_all_headers_for_seo_automations", "get_leagues_for_league_of_legends_esports", "langlist_for_keyword_tool_v2", "hole_alle_news_beitr_ge_zu_klimawandel_for_klimawandel_live", "stock_get_financials_for_bb_finance", "stays_properties_list_for_booking_com_v2"], "api_descs": {"Finish": "No description available.", "autocomplete_addresses_for_autocomplete_usa": "Autocomplete USA Addresses", "extract_top_keywords_phrases_by_density_all_headers_for_seo_automations": "Analyze any webpage's keyword density for SEO or research. Get the specified number of keywords or phrases you wish, sorted by density and occurrences in a JSON format. The algorithm has been optimized for pages with large amounts of text, as well as advanced cloud infrastracure ensuring accurate and speedy results for your SEO needs. This API uses Puppeteer to scrape even the most advanced SPA ( Single Page Applications ).", "feed_for_instagram_statistics_api": "Returns a list of posts with all metrics for the period.\n\nThe effectiveness of hashtags, post types and text length\n\n![](https://36627.selcdn.ru/jagajam-static/000000012_e1767a2c-31de-4501-9279-661f7c03e8c1_f.png?time=1666776603)", "get_all_teas_for_teas": "get all type of teas", "get_leagues_for_league_of_legends_esports": "This api method can gives you all of the leagues and region information", "get_nft_collections_for_pancakeswap_api_freemium": "An Endpoint to get NFT Collections on Pancakeswap", "get_token_balance_for_pancakeswap_api_freemium": "An endpoint to get Token Balance", "get_token_price_for_pancakeswap_api_freemium": "An endpoint to get Token Price", "get_user_favorite_videos_for_tiktok_video_feature_summary": "get user favorite videos list", "glossary_for_horoscope_api": "This endpoint returns a JSON with information about the API. In it you can preview request and response templates, mandatory fields and much more.", "hin_decoder_return_html_for_hull_id_boat_hin_decoder": "setting usertable=1 will return an html table instead of json", "hole_alle_news_beitr_ge_zu_klimawandel_for_klimawandel_live": "Dieser Endpunkt bringt alle News-Beiträge über Klimawandel von diversen Schweizer Medien.", "langlist_for_keyword_tool_v2": "List of support Language", "medium_for_check_username": "Check username on Medium", "read_for_sms77io": "Retrieves information regarding subacounts.", "recommended_channels_for_fastytapi": "Returns a list of recommended channels for the provided channel.\n\nNote: this endpoint requires some heavier computations, response time might take ~5 seconds.", "stays_properties_list_for_booking_com_v2": "Get list", "stock_get_financials_for_bb_finance": "Get financial information of stocks", "timeframe_for_currencyapi_net": "Display a currency conversion's historical rates within a given timeframe"}, "aseqs": [{"api_name": "get_token_balance_for_pancakeswap_api_freemium", "api_action": "\nAction: get_token_balance_for_pancakeswap_api_freemium\nAction Input: {\n  \"address\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n  \"token\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\"\n}", "api_reaction": null}, {"api_name": "get_token_price_for_pancakeswap_api_freemium", "api_action": "\nAction: get_token_price_for_pancakeswap_api_freemium\nAction Input: {}", "api_reaction": null}, {"api_name": "get_nft_collections_for_pancakeswap_api_freemium", "api_action": "\nAction: get_nft_collections_for_pancakeswap_api_freemium\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_token_balance_for_pancakeswap_api_freemium"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_token_price_for_pancakeswap_api_freemium", "api_action": "\nAction: get_token_price_for_pancakeswap_api_freemium\nAction Input: {\n  \"address\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n  \"token\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_nft_collections_for_pancakeswap_api_freemium"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_token_balance_for_pancakeswap_api_freemium", "api_action": "\nAction: get_token_balance_for_pancakeswap_api_freemium\nAction Input: {\n  \"address\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\",\n  \"token\": \"\"\n}", "api_reaction": null}}]}
{"URL": "26779", "query": "As a financial analyst, I need to monitor market trends. Fetch a list of stocks that have Morning Star and Bullish Engulfing signals. Include the symbol, date, open price, and closing price for each stock. Limit the response to the first 90 stocks.", "api_names": ["morning_star_for_barpatterns", "bullish_engulfing_for_barpatterns", "Finish", "single_eu_vat_rate_for_vatlayer", "get_hashtags_for_top_instagram_hashtag", "search_a_range_for_advanced_serp_operators", "balancesofstark_key_for_reddio_nft_token_and_ipfs", "converter_for_webit_blockchain", "airplanes_ordered_by_ascending_for_airplanesdb", "get_all_restaurant_locations_for_restaurants_near_me_usa", "delete_delete_a_webhook_for_calltrackingmetrics", "group_breed_data_by_property_for_cat_breeds", "build_for_odam", "categoryschedules_for_rugbyapi2", "profile_image_for_image_service"], "api_descs": {"Finish": "No description available.", "airplanes_ordered_by_ascending_for_airplanesdb": "Get all airplanes ordered by name in ascending order.", "balancesofstark_key_for_reddio_nft_token_and_ipfs": "The API retrieves the balance of a stark_key, each return value are as the previous field", "build_for_odam": "Building a database and indexing it, allows to accelerate considerably the response times on large files\n", "bullish_engulfing_for_barpatterns": "List of stocks having Bullish Engulfing signal.", "categoryschedules_for_rugbyapi2": "Get the schedules of rugby matches for the given date and category, including match timings, teams, and other relevant information.", "converter_for_webit_blockchain": "Convert ETH, BSC, MATIC, SOL currencies to bigger or smaller units with ease.\n\nSupported currencies:\nETH (Ethereum);\nBSC (Binance);\nMATIC (Polygon);\nSOL (Solana).\n\nETH, BSC and MATIC all share the same units, since Binance and Polygon are L2 fork networks built on top of Ethereum.", "delete_delete_a_webhook_for_calltrackingmetrics": "", "get_all_restaurant_locations_for_restaurants_near_me_usa": "GET all Restaurant locations", "get_hashtags_for_top_instagram_hashtag": "Get 100 Most Popular Instagram Hashtags", "group_breed_data_by_property_for_cat_breeds": "This endpoint will group the available data by the given property and the property value. The property can be any property of the JSON response object including the properties of the meta object.", "morning_star_for_barpatterns": "List of stocks having Morning Star signal.", "profile_image_for_image_service": " ", "search_a_range_for_advanced_serp_operators": "Search \"Android phone\" but only show results where the price ranges from $300-$500; also works for dates and other numbers", "single_eu_vat_rate_for_vatlayer": "Using the \"rate\" endpoint, you may request the API to return standard and reduced VAT rates for a EU member state you specify. Important: Only one of the following three parameters for defining the country is allowed."}, "aseqs": [{"api_name": "morning_star_for_barpatterns", "api_action": "\nAction: morning_star_for_barpatterns\nAction Input: {}", "api_reaction": null}, {"api_name": "bullish_engulfing_for_barpatterns", "api_action": "\nAction: bullish_engulfing_for_barpatterns\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "bullish_engulfing_for_barpatterns"}}, {"state": "generated_by_agent", "aseq": {"api_name": "morning_star_for_barpatterns"}}, {"state": "generated_by_agent", "aseq": {"api_name": "morning_star_for_barpatterns"}}]}
{"URL": "20493", "query": "Please calculate the distance in miles between Birmingham, Alabama and Sacramento, California. Additionally, provide the latitude and longitude coordinates for both cities.", "api_names": ["get_distance_by_city_state_country_for_great_circle_math_api", "Finish", "event_rounds_results_golf_for_flashlive_sports", "teamplayers_for_baseballapi", "balansheet_financials_for_yh_finance_complete", "business_name_for_for_business_starter_api", "leaguecuptrees_for_handballapi", "get_meta_data_for_cnbc", "teamdetails_for_mmaapi", "txt_for_stopmodreposts_blocklist", "bodyfat_imperial_for_health_calculator_api", "getorderbyid_for_erictestpet"], "api_descs": {"Finish": "No description available.", "balansheet_financials_for_yh_finance_complete": "This endpoint returns a company/ stock financials", "bodyfat_imperial_for_health_calculator_api": "This endpoint calculates the body fat percentage based on the provided gender, age, height, and weight parameters in imperial units.", "business_name_for_for_business_starter_api": "Generate a Business name for existing idea", "event_rounds_results_golf_for_flashlive_sports": "Rounds results (golf) by  and event ID, (golf)", "get_distance_by_city_state_country_for_great_circle_math_api": "Takes city, state, and country of both locations and returns latitude, longitude, and calculated miles.", "get_meta_data_for_cnbc": "Get meta data that supports for other endpoints", "getorderbyid_for_erictestpet": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions", "leaguecuptrees_for_handballapi": "Get structured cup trees for a handball unique tournament season", "teamdetails_for_mmaapi": "Get detailed information about a specific team.", "teamplayers_for_baseballapi": "Get the players for a specific baseball team using the team ID.", "txt_for_stopmodreposts_blocklist": "Plain text endpoint"}, "aseqs": [{"api_name": "get_distance_by_city_state_country_for_great_circle_math_api", "api_action": "\nAction: get_distance_by_city_state_country_for_great_circle_math_api\nAction Input: {\n  \"city1\": \"Birmingham\",\n  \"state1\": \"Alabama\",\n  \"country1\": \"USA\",\n  \"city2\": \"Sacramento\",\n  \"state2\": \"California\",\n  \"country2\": \"USA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_distance_by_city_state_country_for_great_circle_math_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_distance_by_city_state_country_for_great_circle_math_api"}}]}
{"URL": "87636", "query": "Retrieve all known subdomains for the website 'example.com' and display the results on the first page.", "api_names": ["subdomains_lookup_for_subdomains_lookup", "Finish", "aliexpress_store_item_search_for_aliexpress_datahub", "get_player_by_id_for_shescoresapi", "placessearchinboundingbox_for_mapreflex", "iso3_for_countries", "tennis_live_matches_for_sports_live_scores", "languages_for_linguin_ai", "gettopsports_for_sportapi", "user_for_moodring"], "api_descs": {"Finish": "No description available.", "aliexpress_store_item_search_for_aliexpress_datahub": "All details of a single item.", "get_player_by_id_for_shescoresapi": "Get a player's information by ID", "gettopsports_for_sportapi": "GetTopSports api data", "iso3_for_countries": "This gets country name on a country. Use ISO3 for country_code.", "languages_for_linguin_ai": "Get the list of supported languages", "placessearchinboundingbox_for_mapreflex": "Get Places boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "subdomains_lookup_for_subdomains_lookup": "Query API with root domain to retrieve all known subdomains", "tennis_live_matches_for_sports_live_scores": "Returns Tennis Live Matches with betting odds", "user_for_moodring": "Get a user with userId"}, "aseqs": [{"api_name": "subdomains_lookup_for_subdomains_lookup", "api_action": "\nAction: subdomains_lookup_for_subdomains_lookup\nAction Input: {\n\"type\": \"subdomains_lookup\",\n\"pagenum\": 1,\n\"q\": \"example.com\"\n}", "api_reaction": null}, {"api_name": "subdomains_lookup_for_subdomains_lookup", "api_action": "\nAction: subdomains_lookup_for_subdomains_lookup\nAction Input: {\n\"type\": \"subdomains_lookup\",\n\"pagenum\": 1,\n\"q\": \"example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "subdomains_lookup_for_subdomains_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "subdomains_lookup_for_subdomains_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "subdomains_lookup_for_subdomains_lookup"}}]}
{"URL": "12086", "query": "I want to plan a vacation with my family and safety is a top priority. Can you provide me with a list of world cities ranked by their homicide rates? It would be great to know the specific homicide rate for each city as well.", "api_names": ["get_by_homicide_rate_for_world_cities_by_homicide_rate", "get_by_filter_for_world_cities_by_homicide_rate", "Finish", "all_airplanes_for_airplanesdb", "get_a_random_categorized_and_or_filter_joke_for_the_dozen_the_yo_mamsa_roast_api", "random_for_manatee_jokes", "get_open_positions_for_alpaca_trading", "calculate_eu_vat_compliant_price_for_vatlayer", "user_feed_for_tiktok_bulletproof", "ec_for_arespass", "address_for_navitime_geocoding", "list_of_deals_for_cheapshark_game_deals"], "api_descs": {"Finish": "No description available.", "address_for_navitime_geocoding": "Return address information such as a postal code or latitude/longitude from free keyword of request parameters.", "all_airplanes_for_airplanesdb": "Get complete data of all airplanes.", "calculate_eu_vat_compliant_price_for_vatlayer": "Use the \"price\" endpoint, you may request the API to calculate a country-specific VAT compliant price on your behalf. Important: There are 3 options to define a country - choose only one!", "ec_for_arespass": " ", "get_a_random_categorized_and_or_filter_joke_for_the_dozen_the_yo_mamsa_roast_api": "Allows for either randomize, categorized or filtered insults to be returned with or without metadata.", "get_by_filter_for_world_cities_by_homicide_rate": "Get by filter", "get_by_homicide_rate_for_world_cities_by_homicide_rate": "Get by homicide rate", "get_open_positions_for_alpaca_trading": "Retrieves a list of the account's open positions.", "list_of_deals_for_cheapshark_game_deals": "Get a paged list of deals matching any number of criteria, all the filtering parameters are optional.\n\nThe deal object is what drives most of what you see on the site. They are price + metadata properties for games for a given store. All dealID’s are encoded on the server. On your website/app, you will use the redirect page to link users to a specific deal:\n\n> https://www.cheapshark.com/redirect?dealID={id}\n\n**Important Note**: The redirect page is not an API endpoint and is not designed for automated access. It is purely a way to link your end users to deals.\n\nThe deal rating property provides a quick way to compare how 'good' a deal is. It is normalized on a scale from 0 to 10.", "random_for_manatee_jokes": "retrieves a random manatee joke", "user_feed_for_tiktok_bulletproof": "Retrieves 30 latest feed items from TikTok account, by username"}, "aseqs": [{"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_homicide_rate_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_filter_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_filter_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_filter_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_filter_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_homicide_rate_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}]}
{"URL": "240", "query": "I'm studying the Bible and I want to dive deeper into a specific chapter. Please fetch chapter 8 from the book of Luke for me. Additionally, retrieve verses 5 to 8 from chapter 1 of the same book. It would be great if you could provide the text of these chapters and verses.", "api_names": ["getverses_for_holy_bible", "getchapter_for_holy_bible", "Finish", "get_company_full_data_for_b2bhint", "user_info_for_tiktok_scraper_v2", "leagueoveralltopplayers_for_cricketapi2", "stock_profile_stock_for_mboum_finance", "list_languages_for_subtitles_for_youtube_v2", "get_stream_game_name_for_gwyo_twitch", "retrieves_the_account_s_open_position_for_given_symbol_for_alpaca_trading", "kanji_character_for_learn_to_read_and_write_japanese_kanji", "getarchivereport_for_dl_format_validation"], "api_descs": {"Finish": "No description available.", "get_company_full_data_for_b2bhint": "The Get company details endpoint will return all full company data, including company contacts, financial reports and other data", "get_stream_game_name_for_gwyo_twitch": "Get  Stream Game Name (by username or id)\n( return an empty JSON object if not currently LIVE )", "getarchivereport_for_dl_format_validation": "Gets Archived DL Report", "getchapter_for_holy_bible": "", "getverses_for_holy_bible": "", "kanji_character_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "leagueoveralltopplayers_for_cricketapi2": "Get the overall top players for a specific cricket league in a given season, including player statistics and other relevant information.", "list_languages_for_subtitles_for_youtube_v2": "List all supported languages", "retrieves_the_account_s_open_position_for_given_symbol_for_alpaca_trading": "", "stock_profile_stock_for_mboum_finance": "Get stock profile information such as company name, descriptions, website, etc...", "user_info_for_tiktok_scraper_v2": "Get basic user information."}, "aseqs": [{"api_name": "getchapter_for_holy_bible", "api_action": "\nAction: getchapter_for_holy_bible\nAction Input: {\n  \"book\": \"Luke\",\n  \"chapter\": 8\n}", "api_reaction": null}, {"api_name": "getverses_for_holy_bible", "api_action": "\nAction: getverses_for_holy_bible\nAction Input: {\n  \"book\": \"Luke\",\n  \"chapter\": 1,\n  \"versefrom\": 5,\n  \"verseto\": 8\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getverses_for_holy_bible"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getverses_for_holy_bible"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getchapter_for_holy_bible", "api_action": "\nAction: getchapter_for_holy_bible\nAction Input: {\n  \"book\": \"Luke\",\n  \"chapter\": 8\n}", "api_reaction": null}}]}
{"URL": "75297", "query": "I'm curious to know which YouTube videos have received the most views so far. Can you give me the top viewed videos of all time, as well as the top viewed videos for a specific year, let's say 2019? Please provide the rankings, video links, and the number of views for each video.", "api_names": ["youtube_topviews_year_for_musicdata_api", "Finish", "categorize_job_title_for_job_title_categorization", "getimage_for_florida_realty_api", "list_of_games_for_cheapshark_game_deals", "convert_for_currency_v2", "business_units_search_for_unofficial_trust_pilot", "userinfo_for_instagram_cheapest", "get_for_iss_location", "https_dev_is_api_entytle_com_for_testpocapi", "property_for_sale_for_uk_real_estate_rightmove", "get_transaction_details_for_walletapi_cloud"], "api_descs": {"Finish": "No description available.", "business_units_search_for_unofficial_trust_pilot": "Search for business units by term or phrase", "categorize_job_title_for_job_title_categorization": "Easily categorize any job title", "convert_for_currency_v2": "Convert Currency value from and to.", "get_for_iss_location": "gets you the data", "get_transaction_details_for_walletapi_cloud": "Call this endpoint to obtain a transaction's current state.", "getimage_for_florida_realty_api": "Load images of cities you retrieve by calling getCities().", "https_dev_is_api_entytle_com_for_testpocapi": "https://dev-is-api.entytle.com", "list_of_games_for_cheapshark_game_deals": "Get a list of games that contain a given title or matches steamAppID. Response includes the cheapest current deal for each game.", "property_for_sale_for_uk_real_estate_rightmove": "Property for sale", "userinfo_for_instagram_cheapest": "get userinfo by username", "youtube_topviews_year_for_musicdata_api": "Top Youtube viewed videos all time / on a specific year (2007 - now). Leave {year} blank for all time results"}, "aseqs": [{"api_name": "youtube_topviews_year_for_musicdata_api", "api_action": "\nAction: youtube_topviews_year_for_musicdata_api\nAction Input: {\n  \"year\": \"\"\n}", "api_reaction": null}, {"api_name": "youtube_topviews_year_for_musicdata_api", "api_action": "\nAction: youtube_topviews_year_for_musicdata_api\nAction Input: {\n  \"year\": \"2019\"\n}", "api_reaction": null}, {"api_name": "youtube_topviews_year_for_musicdata_api", "api_action": "\nAction: youtube_topviews_year_for_musicdata_api\nAction Input: {\n  \"year\": \"2019\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "youtube_topviews_year_for_musicdata_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "youtube_topviews_year_for_musicdata_api", "api_action": "\nAction: youtube_topviews_year_for_musicdata_api\nAction Input: {\n  \"year\": \"\"\n}\nAction Input: {\n  \"year\": \"2019\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "youtube_topviews_year_for_musicdata_api", "api_action": "\nAction: youtube_topviews_year_for_musicdata_api\nAction Input: {\n  \"year\": \"\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "youtube_topviews_year_for_musicdata_api", "api_action": "\nAction: youtube_topviews_year_for_musicdata_api\nAction Input: {\n  \"year\": \"\"\n}", "api_reaction": null}}]}
{"URL": "79597", "query": "My family and I are planning a trip to Oceania and we want to ensure that we visit cities with low homicide rates. Can you provide us with a list of cities ranked by their homicide rates? It would be helpful if the list includes the top 15 cities.", "api_names": ["get_by_filter_for_world_cities_by_homicide_rate", "get_by_homicide_rate_for_world_cities_by_homicide_rate", "Finish", "streams_investor_relations_for_stocktwits", "chapters_info_for_quran_com", "tournament_teams_for_handball_data", "validatephone_for_greip", "getdiscloseddaterange_for_jp_funda", "all_rates_for_crypto_exchanges", "getyourstoreinformation_for_ecartapi", "game_list_for_lotto_draw_results_global", "list_stories_by_section_for_ny_times_top_stories"], "api_descs": {"Finish": "No description available.", "all_rates_for_crypto_exchanges": "Get all rates", "chapters_info_for_quran_com": "Get list of chaper info we've in different languages.", "game_list_for_lotto_draw_results_global": "Games available by country.", "get_by_filter_for_world_cities_by_homicide_rate": "Get by filter", "get_by_homicide_rate_for_world_cities_by_homicide_rate": "Get by homicide rate", "getdiscloseddaterange_for_jp_funda": "### Return securities report data Specified by the date range.\nNote: This endpoint requires the 2 query parameters, start_date and end_date\nNote: max date range is 31 days. if you want longer date range data, need to requesting API twice or more.", "getyourstoreinformation_for_ecartapi": "Access store information fast with the access token we provided.", "list_stories_by_section_for_ny_times_top_stories": "The Top Stories API returns an array of articles currently on the specified section.", "streams_investor_relations_for_stocktwits": "Returns the most recent 30 messages posted by verified Investor Relations customers.", "tournament_teams_for_handball_data": "List of teams participating in a specific tournament.", "validatephone_for_greip": "This method can be used as an extra-layer of your system for validating phone numbers."}, "aseqs": [{"api_name": "get_by_filter_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_filter_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate", "api_action": "\nAction: get_by_homicide_rate_for_world_cities_by_homicide_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_filter_for_world_cities_by_homicide_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_homicide_rate_for_world_cities_by_homicide_rate"}}]}
{"URL": "557", "query": "My company is planning to expand its operations in Europe and we need information about the population of countries. Can you provide me with the countries' data according to the continent 'Europe'? Additionally, order the countries in ascending order of rank. Furthermore, I would like to know the population of Spain. Please fetch the population data of Spain using its country code 'ESP'.", "api_names": ["getpopulationbycountrycode_for_world_population", "getcountriesbycontinent_for_world_population", "Finish", "ufc_fight_night_pavlovich_vs_blaydes_april_22_2023_for_mma_stats", "birthday_for_dateclock", "brands_detail_for_consumer_reports", "searchstation_for_irctc", "fixtures_for_football_v2", "get_country_list_for_travel_hacking_tool", "boxes_for_woo_temp", "exists_exists_ticket_get_for_ifc_bim_services", "kline_candlestick_data_for_crypto_markets", "search_multi_for_soccerway_feed", "tety_constant_for_sms", "speakers_for_hellonext"], "api_descs": {"Finish": "No description available.", "birthday_for_dateclock": "Return complete a birthday detail", "boxes_for_woo_temp": "Get all boxes", "brands_detail_for_consumer_reports": "Get detailed information of a brand", "exists_exists_ticket_get_for_ifc_bim_services": "Check if the key ticket is available or not", "fixtures_for_football_v2": "Get all the fixtures from a championship", "get_country_list_for_travel_hacking_tool": "This endpoint returns a list of country codes (ISO-3166).", "getcountriesbycontinent_for_world_population": "Obtain countries' data according to the continent.", "getpopulationbycountrycode_for_world_population": "Get the population's data of a country by its country code (ISO 3166-1 alpha-3 format). More information at https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3.", "kline_candlestick_data_for_crypto_markets": "Kline/Candlestick Data", "search_multi_for_soccerway_feed": "Search team, player by query", "searchstation_for_irctc": " ", "speakers_for_hellonext": "speakers", "tety_constant_for_sms": "vie de Dieu ", "ufc_fight_night_pavlovich_vs_blaydes_april_22_2023_for_mma_stats": "**Get details to UFC Fight Night: Pavlovich vs. Blaydes**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."}, "aseqs": [{"api_name": "getcountriesbycontinent_for_world_population", "api_action": "\nAction: getcountriesbycontinent_for_world_population\nAction Input: {\n  \"continent\": \"Europe\",\n  \"rank\": 1\n}", "api_reaction": null}, {"api_name": "getpopulationbycountrycode_for_world_population", "api_action": "\nAction: getpopulationbycountrycode_for_world_population\nAction Input: {\n  \"countrycode\": \"ESP\"\n}", "api_reaction": null}, {"api_name": "getcountriesbycontinent_for_world_population", "api_action": "\nAction: getcountriesbycontinent_for_world_population\nAction Input: {\n  \"continent\": \"Europe\",\n  \"rank\": 1\n}", "api_reaction": null}, {"api_name": "getpopulationbycountrycode_for_world_population", "api_action": "\nAction: getpopulationbycountrycode_for_world_population\nAction Input: {\n  \"countrycode\": \"ESP\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getcountriesbycontinent_for_world_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpopulationbycountrycode_for_world_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountriesbycontinent_for_world_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountriesbycontinent_for_world_population"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountriesbycontinent_for_world_population", "api_action": "\nAction: getcountriesbycontinent_for_world_population\nAction Input: {\n  \"continent\": \"Europe\",\n  \"rank\": 1\n}", "api_reaction": null}}]}
{"URL": "75971", "query": "I'm working on a project that requires a diverse dataset of fake user profiles. Can you provide me with user profiles of different genders? I need their names, locations, and email addresses to populate my database.", "api_names": ["get_user_by_gender_for_fake_users", "user_for_fake_users", "Finish", "getmatchesbycity_for_ipl_api", "forwardgeocoding_for_forward_reverse_geocoding", "get_all_jokes_in_a_single_category_for_the_dozen_the_yo_mamsa_roast_api", "stations_get_information_deprecated_for_airvisual", "recipes_list_for_tasty", "prematch_for_sports_betting_api", "competitions_for_rugby_live_data", "group_management_api_access_for_device_s_group_list_for_catchloc", "search_for_agents_for_zillow_v2", "message_read_for_zipwhip", "hcpassthrough_for_aspose_ocr_cloud", "planet_list_for_stars_api"], "api_descs": {"Finish": "No description available.", "competitions_for_rugby_live_data": "Lists active competitions available to query", "forwardgeocoding_for_forward_reverse_geocoding": "Turn an address into latitude and longitude (e.g. to display on a map) by schematic input.", "get_all_jokes_in_a_single_category_for_the_dozen_the_yo_mamsa_roast_api": "This endpoint will return all joke  in a catagory.", "get_user_by_gender_for_fake_users": "get user by gender", "getmatchesbycity_for_ipl_api": "get all the matches by **city**", "group_management_api_access_for_device_s_group_list_for_catchloc": "API access for location object's group list.\n\nrequired parameter : api (api.common.group.get.object.group.list)", "hcpassthrough_for_aspose_ocr_cloud": " ", "message_read_for_zipwhip": "Marks the given message as read in Zipwhip's database.", "planet_list_for_stars_api": "Returns the planets surrounding a star", "prematch_for_sports_betting_api": "Prematch List", "recipes_list_for_tasty": "List recipes by option filters or name", "search_for_agents_for_zillow_v2": "Search for agents by location and name", "stations_get_information_deprecated_for_airvisual": "Get information at specific station by its id", "user_for_fake_users": "get one user"}, "aseqs": [{"api_name": "user_for_fake_users", "api_action": "\nAction: user_for_fake_users\nAction Input: {}", "api_reaction": null}, {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"female\"\n}", "api_reaction": null}, {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"other\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users", "api_action": "{\"gender\": \"both\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"male\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_by_gender_for_fake_users", "api_action": "\nAction: get_user_by_gender_for_fake_users\nAction Input: {\n  \"gender\": \"male\"\n}", "api_reaction": null}}]}
{"URL": "74026", "query": "I need to get the list of files in the folder '/documents'. Can you provide me with the list? Additionally, check if the storage exists.", "api_names": ["Finish", "storageexists_for_aspose_ocr_cloud", "getfileslist_for_aspose_ocr_cloud", "currencies_for_exchange_rates_api_", "home_for_vod_app", "getbyuniqueid_for_rest_country_api", "display_entities_for_textapi", "error_codes_for_wealth_reader_api", "get_nft_collection_metadata_for_uniblock", "validate_card_number_for_luhn_algorithm", "567_live_t_i_app_m_i_nh_t_2022_t_i_trang_ch_ch_nh_th_c_for_567_live_app_2022", "media_by_id_for_instagram_api", "chapters_info_for_quran_com", "get_stream_views_for_twitch_api", "get_show_details_for_burning_series_api", "coins_get_analysis_for_investing_cryptocurrency_markets", "teams_translations_for_os_sports_perform", "league_for_football"], "api_descs": {"567_live_t_i_app_m_i_nh_t_2022_t_i_trang_ch_ch_nh_th_c_for_567_live_app_2022": "567 Live có trang chủ 567live.io duy nhất chính xác. Cung cấp đủ link tải 567 live app an toàn cho bạn phiên bản mới nhất.\nĐịa chỉ : 99 Giải Phóng, Đồng Tâm, Hai Bà Trưng, Hà Nội\nGoogle map https://www.google.com/maps?cid=7118718670140148249 \nHotline 0978720550\nGmail:  567liveapp@gmail.com\nWebsite https://567live.io/ \nhttps://sites.google.com/view/567live-app/\nhttps://567live.io/tai-ve/567live-apk \nhttps://567live.io/tai-ve/567live-ios\nhttps://567live.io/thu-muc/app-live/ \nhttps://folkd.com/user/567liveapp\nhttps://sketchfab.com/567liveapp\nhttps://forums.iis.net/members/567liveapp.aspx\nhttps://wefunder.com/567live\nhttps://www.ultimate-guitar.com/u/567liveapp\nhttps://www.thingiverse.com/567liveapp/designs\nhttps://www.tickaroo.com/user/61fe0be0ed68b63b06bd40d5\nhttps://www.goodreads.com/user/show/147284265-567live\nhttps://gifyu.com/567liveapp\nhttps://ignitiondeck.com/id/dashboard/?backer_profile=153894\nhttps://www.sqlservercentral.com/forums/user/567liveapp\nhttps://abroadsanjal.com/index.php?qa=user&qa_1=567live\nhttps://beermapping.com/account/567liveapp\nhttps://www.zoimas.com/profile/567liveapp1/about\nhttps://www.eduvision.edu.pk/counseling/index.php?qa=user&qa_1=567liveapp\nhttps://567live.hpage.com/\nhttps://www.leetchi.com/en/c/5Yj6J40r\nhttps://public.tableau.com/app/profile/567live\nhttps://www.brownbook.net/user-profile/4782891\nhttps://amara.org/en/profiles/profile/MndaPixiSx4HXYOyjdeCtoryc1vYtjp933bdJZs6MYo/\nhttps://cycling74.com/author/6201cfb5d540c65659fc25e7\nhttps://api.rakuten.net/user/567liveapp\nhttps://lnk.bio/567live\nhttps://www.pozible.com/profile/567live\nhttps://new.edmodo.com/home\nhttp://www.nfomedia.com/profile?uid=rKfQfiD&result=ep5dbp81\nhttps://degreed.com/profile/567liveapp/overview\nhttps://bittube.tv/profile/567live\nhttps://git.feneas.org/567liveapp\nhttps://forum.singaporeexpats.com/memberlist.php?mode=viewprofile&u=370389\nhttps://sallatunturinkoulu.purot.net/profile/567liveapp\nhttps://liveviewsports.com/community/profile/567live/\nhttp://q2a.sydt.com.tw/index.php?qa=user&qa_1=567live", "Finish": "No description available.", "chapters_info_for_quran_com": "Get list of chaper info we've in different languages.", "coins_get_analysis_for_investing_cryptocurrency_markets": "Get analysis opinion from expert for specific cryptocurrency", "currencies_for_exchange_rates_api_": "This endpoint gets a list of available currency symbols along with their full names.\n\nGET /currencies HTTP/1.1", "display_entities_for_textapi": "Renders the extracted entity types on submitted text or spans defined manually.", "error_codes_for_wealth_reader_api": "Listado de códigos de error. Presta especial atención a que no todos los códigos de error deben recibir el mismo tratamiento por parte de tu aplicación. Ante un error de password incorrecto no debes reintentar la llamada con los mismos parámetros, pero ante un error que te indique que la entidad está en mantenimiento sí puedes reintentarlo. Pide una sesión técnica con nuestro equipo para resolver cualquier duda sobre la gestión de errores.\n", "get_nft_collection_metadata_for_uniblock": "Fetches NFT collection metadata.", "get_show_details_for_burning_series_api": "- Title\n- Description\n- Runtime\n- Author\n- Director\n- Actors\n- Producer\n- Genres\n- Languages\n- Seasons", "get_stream_views_for_twitch_api": "Returns stream view info.", "getbyuniqueid_for_rest_country_api": "Returns a single pet", "getfileslist_for_aspose_ocr_cloud": " ", "home_for_vod_app": "Home", "league_for_football": "league", "media_by_id_for_instagram_api": "Get a media by Id", "storageexists_for_aspose_ocr_cloud": " ", "teams_translations_for_os_sports_perform": "Teams translations", "validate_card_number_for_luhn_algorithm": "Validates given card number"}, "aseqs": [{"api_name": "getfileslist_for_aspose_ocr_cloud", "api_action": "\nAction: getfileslist_for_aspose_ocr_cloud\nAction Input: {\n  \"path\": \"/documents\"\n}", "api_reaction": null}, {"api_name": "storageexists_for_aspose_ocr_cloud", "api_action": "\nAction: storageexists_for_aspose_ocr_cloud\nAction Input: {\n  \"storagename\": \"ocr\"\n}", "api_reaction": null}, {"api_name": "storageexists_for_aspose_ocr_cloud", "api_action": "\nAction: storageexists_for_aspose_ocr_cloud\nAction Input: {\n  \"storagename\": \"ocr\"\n}", "api_reaction": null}, {"api_name": "getfileslist_for_aspose_ocr_cloud", "api_action": "\nAction: getfileslist_for_aspose_ocr_cloud\nAction Input: {\n  \"path\": \"/documents\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getfileslist_for_aspose_ocr_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_aspose_ocr_cloud", "api_action": "\nAction: storageexists_for_aspose_ocr_cloud\nAction Input: {\n  \"path\": \"/documents\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfileslist_for_aspose_ocr_cloud", "api_action": "\nAction: getfileslist_for_aspose_ocr_cloud\nAction Input: {\n  \"path\": \"/documents\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfileslist_for_aspose_ocr_cloud", "api_action": "\nAction: getfileslist_for_aspose_ocr_cloud\nAction Input: {\n  \"path\": \"/documents\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getfileslist_for_aspose_ocr_cloud", "api_action": "\nAction: getfileslist_for_aspose_ocr_cloud\nAction Input: {\n  \"path\": \"/documents\"\n}"}}]}
{"URL": "38163", "query": "Please fetch the user data for the user with ID '25458687581618176'. Additionally, provide me with detailed data about the 'minecraft' invite, including hidden data.", "api_names": ["Finish", "get_user_data_for_discord_lookup", "get_invite_data_for_discord_lookup", "gst_number_search_tool_gstin_verification_online_for_gst_details_api_documentation", "get_categories_categoryid_v1_for_shapeways", "market_indicator_for_crypto_market_data_from_token_metrics", "get_geolocation_data_for_shw_geolocation_api", "v1_iplookup_for_ip_lookup_by_api_ninjas", "blender_project_for_3d_services", "get_all_kfc_locations_by_state_for_kfc_locations", "get_a_list_of_latest_profiles_for_is_this_coin_a_scam", "see_results_for_nordigen", "group_breed_data_by_property_for_cat_breeds", "posts_for_axesso_facebook_data_service", "sources_for_kubric_the_comprehensive_movie_news_api"], "api_descs": {"Finish": "No description available.", "blender_project_for_3d_services": "(Warnig - in zip mode the return of this api is a large file (~20MB)) similar to executing blender --background ./main.blend --python ./script.py. The zip in parameter should be composed of a main.blend file and a script.py. see example here https://files.aptero.co/api/public/dl/CJTvv0V7?inline=true", "get_a_list_of_latest_profiles_for_is_this_coin_a_scam": "Get a list of the top 100 crypto projects added to on isthiscoinascam.com. Ordered by date added.", "get_all_kfc_locations_by_state_for_kfc_locations": "Get all KFC locations by state", "get_categories_categoryid_v1_for_shapeways": "", "get_geolocation_data_for_shw_geolocation_api": "fetch geolocation data", "get_invite_data_for_discord_lookup": "Fetches detailed data, including hidden data of invites or vanities", "get_user_data_for_discord_lookup": "Fetches user data by their ID. Automatically handles rate limits and bypasses them and it parses their creation date automatically", "group_breed_data_by_property_for_cat_breeds": "This endpoint will group the available data by the given property and the property value. The property can be any property of the JSON response object including the properties of the meta object.", "gst_number_search_tool_gstin_verification_online_for_gst_details_api_documentation": "GST Number Search Tool & GSTIN Verification Online", "market_indicator_for_crypto_market_data_from_token_metrics": "Access Market Indicator powered by Token Metrics", "posts_for_axesso_facebook_data_service": "Query posts by providing url e.g. https://www.facebook.com/longhornsteakhouse/posts/.  In the response the field \"nextUrl\" have to passed to the next request to fetch the next posts.", "see_results_for_nordigen": "Get results for the requested analysis on the bank statement. Use the request_id from the operations request.", "sources_for_kubric_the_comprehensive_movie_news_api": "Returns sources used for articles based of current tier.", "v1_iplookup_for_ip_lookup_by_api_ninjas": "API Ninjas IP Lookup API endpoint."}, "aseqs": [{"api_name": "get_user_data_for_discord_lookup", "api_action": "\nAction: get_user_data_for_discord_lookup\nAction Input: {\n  \"is_id\": \"25458687581618176\"\n}", "api_reaction": null}, {"api_name": "get_invite_data_for_discord_lookup", "api_action": "\nAction: get_invite_data_for_discord_lookup\nAction Input: {\n  \"invite\": \"minecraft\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_invite_data_for_discord_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_invite_data_for_discord_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_invite_data_for_discord_lookup"}}]}
{"URL": "1484", "query": "I'm working on a project where I need to extract information from a website and convert it into a PDF document. The website I'm interested in is 'www.examplewebsite.com'. Can you guide me on how to use the APIs to accomplish this task?", "api_names": ["getwebsitesscreenshot_for_images_infos_api1", "getwebsitespdf_for_images_infos_api1", "Finish", "get_courses_for_golf_course_finder", "send_sms_for_smslink", "tour_rankings_for_tennis_live_data", "search_for_twitter_scraper", "packages_track_deprecated_for_trackingmore_v2", "holidays_of_2d_for_shwe_2d_live_api", "random_idol_for_k_pop", "list_all_groups_for_geolocation_simulation_for_mobile_apps", "getnewsletters_for_diablo4_smartable"], "api_descs": {"Finish": "No description available.", "get_courses_for_golf_course_finder": "This endpoint will return courses within a mile radius of the passed latitude and longitude", "getnewsletters_for_diablo4_smartable": "Get Diablo 4 newsletters.", "getwebsitespdf_for_images_infos_api1": "Get a PDF from a website", "getwebsitesscreenshot_for_images_infos_api1": "Capture a screenshot from website", "holidays_of_2d_for_shwe_2d_live_api": "Holidays of 2D", "list_all_groups_for_geolocation_simulation_for_mobile_apps": "List All Groups", "packages_track_deprecated_for_trackingmore_v2": "Get tracking information of specific package", "random_idol_for_k_pop": "Get random idol", "search_for_twitter_scraper": "Search Twitter by keyword, hashtag or URL", "send_sms_for_smslink": "Send SMS", "tour_rankings_for_tennis_live_data": "Lists the top 100 players in the relevant tour ranking with their position, movement, and ranking points."}, "aseqs": [{"api_name": "getwebsitesscreenshot_for_images_infos_api1", "api_action": "\nAction: getwebsitesscreenshot_for_images_infos_api1\nAction Input: {}", "api_reaction": null}, {"api_name": "getwebsitespdf_for_images_infos_api1", "api_action": "\nAction: getwebsitespdf_for_images_infos_api1\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getwebsitespdf_for_images_infos_api1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getwebsitespdf_for_images_infos_api1"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getwebsitespdf_for_images_infos_api1"}}]}
{"URL": "81098", "query": "I'm planning a trip to Morocco next month and I want to stay updated with the latest news from Moroccan news websites. Can you provide me with the headlines, content, and images from Hibapress and Youm7? It would be great if the news could be sorted by date and the results displayed in a user-friendly format.", "api_names": ["Finish", "hibapress_for_arabic_news_api", "youm7_for_arabic_news_api", "bbc_arabic_for_arabic_news_api", "search_cruises_for_tripadvisor", "generate_for_instagram_hashtags", "url_for_free_url_un_shortener", "next_31_days_for_show_air_dates", "country_location_api_for_country_location_api", "getimageframeproperties_for_aspose_imaging_cloud", "get_us_states_in_geojson_format_for_us_states_and_postal_areas_in_geojson", "get_all_foods_for_generic_food_v2", "getfileslist_for_groupdocs_watermark_cloud", "list_orders_for_rushtranslate", "iex_regulation_sho_threshold_securities_list_for_investors_exchange_iex_trading", "get_data_by_class_for_scrapemaster", "stickers_trending_for_mojitok_sticker_store_sdk", "retrieve_listings_for_openblur", "head_to_head_statistics_for_football_dolphin", "directions_between_2_locations_for_egypt_api"], "api_descs": {"Finish": "No description available.", "bbc_arabic_for_arabic_news_api": "مسار يقوم باسترجاع اخر الاخبار من موقع بي بي سي بالعربية", "country_location_api_for_country_location_api": "The Country Location API is a RESTful API that allows developers to retrieve location data for any country in the world. Using a GET request with a country parameter, the API retrieves information about the specified country, such as its name, capital city, region, subregion, population, languages, and currencies.", "directions_between_2_locations_for_egypt_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Alexandria to Cairo**", "generate_for_instagram_hashtags": "Generate Hashtags", "get_all_foods_for_generic_food_v2": "Get all foods", "get_data_by_class_for_scrapemaster": "This endpoint will return all data from a specific tag and its class attribute.", "get_us_states_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get US states in GeoJSON format", "getfileslist_for_groupdocs_watermark_cloud": " ", "getimageframeproperties_for_aspose_imaging_cloud": " ", "head_to_head_statistics_for_football_dolphin": "Head to head statistics", "hibapress_for_arabic_news_api": "مسار يسترجع اخر الأخبار من موقع هبة بريس", "iex_regulation_sho_threshold_securities_list_for_investors_exchange_iex_trading": "IEX-listed securities that have an aggregate fail to deliver position for five consecutive settlement days at a registered clearing agency, totaling 10,000 shares or more and equal to at least 0.5% of the issuer’s total shares outstanding (i.e., “threshold securities”). ", "list_orders_for_rushtranslate": "Get a paginated list of your orders sorted in descending order by received_at date.", "next_31_days_for_show_air_dates": "Shows airing in the next 31 days", "retrieve_listings_for_openblur": "Retrieve Top 100 Blur Listings", "search_cruises_for_tripadvisor": "-", "stickers_trending_for_mojitok_sticker_store_sdk": "API that provides information on creators and stickerpacks of 16 popular stickers", "url_for_free_url_un_shortener": "url", "youm7_for_arabic_news_api": "هذا المسار يقوم باسترجاع جميع الأخبار من موقع اليوم السابع المصري"}, "aseqs": [{"api_name": "hibapress_for_arabic_news_api", "api_action": "\nAction: hibapress_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "youm7_for_arabic_news_api", "api_action": "\nAction: youm7_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "bbc_arabic_for_arabic_news_api", "api_action": "\nAction: bbc_arabic_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the latest news headlines, content, and images from both Hibapress and Youm7 for Morocco using their respective APIs.\n\t\"api_name\": \"hibapress_for_arabic_news_api\"\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"youm7_for_arabic_news_api\",\n\t\"api_action\": \"{\\\"sort\": \"date\", \"limit\": 100}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "hibapress_for_arabic_news_api", "api_action": "\nAction: hibapress_for_arabic_news_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "hibapress_for_arabic_news_api"}}]}
{"URL": "33762", "query": "I'm a travel blogger and I'm researching rental properties in Santa Monica. Can you provide me with a list of rental properties in the area, along with their amenities, ratings, and rental settings? I also need information on the top property managers in the area.", "api_names": ["rental_settings_for_airdna", "rental_amenities_for_airdna", "property_listings_for_airdna", "Finish", "rental_ratings_for_airdna", "top_property_managers_for_airdna", "getpetbyid_for_tes", "services_for_fiverr_pro_services", "endpoint_1_for_my_api1", "query_races_for_horse_racing", "symbol_for_stock_data", "latest_rates_for_metals_prices_rates_api", "retrieve_test_question_for_drillster_2_0", "content_analysis_for_seo_analysis", "fake_credit_card_number_generator_for_fake_credit_card_number_generator_api", "sparkline_for_wayback_machine", "categorylist_for_13", "7_latest_for_stockyapiexchange", "artist_overview_for_spotify_web", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji"], "api_descs": {"7_latest_for_stockyapiexchange": "This feature provides the most recent information about a stock, including its current price, percentage change, and trading volume. It's updated in real-time as new data becomes available.", "Finish": "No description available.", "artist_overview_for_spotify_web": "Get artist overview", "categorylist_for_13": "Retrieves all category", "content_analysis_for_seo_analysis": "Content Analysis endpoint", "endpoint_1_for_my_api1": " ", "fake_credit_card_number_generator_for_fake_credit_card_number_generator_api": "Pass in one of the following card networks as a parameter:\n\n- amex\n- diners\n- discover\n- jcb\n- mastercard\n- visa", "getpetbyid_for_tes": "Returns a single pet", "kanji_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "latest_rates_for_metals_prices_rates_api": "The latest API endpoint will return real-time exchange rate data updated every 60 seconds.\n\nNote: All the responses retrieved in USD needs to be converted. \n\nEx: 1/value = USD PRICE.", "property_listings_for_airdna": "Get rental properties of Airbnb and Vrbo by location and date.", "query_races_for_horse_racing": "The best way to search races.", "rental_amenities_for_airdna": "Returns rental amenities", "rental_ratings_for_airdna": "Returns rental ratings", "rental_settings_for_airdna": "Returns rental settings.", "retrieve_test_question_for_drillster_2_0": "Returns the next question for a predefined test.", "services_for_fiverr_pro_services": "List of pro sellers for a service category", "sparkline_for_wayback_machine": "Sparkline", "symbol_for_stock_data": "The ticker symbol of the stock.", "top_property_managers_for_airdna": "Returns the largest property managers"}, "aseqs": [{"api_name": "property_listings_for_airdna", "api_action": "\nAction: property_listings_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "rental_amenities_for_airdna", "api_action": "\nAction: rental_amenities_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "rental_ratings_for_airdna", "api_action": "\nAction: rental_ratings_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "rental_settings_for_airdna", "api_action": "\nAction: rental_settings_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "top_property_managers_for_airdna", "api_action": "\nAction: top_property_managers_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "property_listings_for_airdna"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rental_amenities_for_airdna"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rental_ratings_for_airdna"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rental_settings_for_airdna", "api_action": "\nAction: rental_settings_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_property_managers_for_airdna"}}, {"state": "generated_by_agent", "aseq": {"api_name": "property_listings_for_airdna", "api_action": "\nAction: property_listings_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}}]}
{"URL": "59247", "query": "I'm a car collector, and I want to add a Tesla to my collection. Can you provide me with the manufacturing location, year, and model of a Tesla using its VIN identifier 0f7885c2af1a6ef9?", "api_names": ["Finish", "manufacturing_year_detection_for_tesla_vin_identifier", "manufacturing_location_detection_for_tesla_vin_identifier", "model_detection_for_tesla_vin_identifier", "get_all_currencies_for_crypto_swap", "getrandommovie_for_random_chunk_api", "get_pancakeswap_balance_from_specific_network_for_cryptocurrency_balance", "co2re_discord_for__co2_remediapi", "schedule_for_tvmaze", "document_for_get_docs", "search_translations_for_mymemory_translation_memory", "get_season_totals_allstar_for_nba_stats_v2", "yesterday_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions", "vol_strike_for_kiann_options_project", "getfileversions_for_groupdocs_merger_cloud", "get_rentals_for_deal_catcher"], "api_descs": {"Finish": "No description available.", "co2re_discord_for__co2_remediapi": "This webhook is external with Discord App", "document_for_get_docs": "doc", "get_all_currencies_for_crypto_swap": "Fetch every currency that is supported by our exchange. The `canSend` and `canReceive` fields determine if we only send/receive or do both to a particular crypto.", "get_pancakeswap_balance_from_specific_network_for_cryptocurrency_balance": "This endpoint will return back the PancakeSwap balance of an address in a specific network.", "get_rentals_for_deal_catcher": "Get rentals", "get_season_totals_allstar_for_nba_stats_v2": "Api to query season totals allstar", "getfileversions_for_groupdocs_merger_cloud": " ", "getrandommovie_for_random_chunk_api": "Returns random movies from over 1000 movie list.", "manufacturing_location_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to manufacturing location.\nA few examples:\nLRW-C (Shanghai, China)\nXP7-B (Berlin, Germany)", "manufacturing_year_detection_for_tesla_vin_identifier": "Detects the manufacturing year of the respective vehicle.", "model_detection_for_tesla_vin_identifier": "This endpoint resolves a VIN identifier to a model type", "schedule_for_tvmaze": "Get the TV schedule", "search_translations_for_mymemory_translation_memory": "This API gets a list of translation from the translation memory ranked by quality and similarity (what we call match). MyMemory will check if a sentence has been already translated in the private TM specified. If we don't find it in the private TM of the translator, we search it in the public TMs (shared among all the translators). Again, if we don't have this translation we ask MT providers to generate it.  In order to get the best from MyMemory, it is highly recommended to use different keys for each translators and also different keys for different topics (as a real Translation Memory).", "vol_strike_for_kiann_options_project": "This function generates the implied-volatility (lognormal) for a given, specified delta. The convention works with delta of 0.10 is specified via 0.90 in the argument, as we generate the delta from a 'call option' function.\n\nThis is the standard function to generate the 25-delta and 10-delta risk-reversals and butterfly which provides the market-conventions for the volatility-skew and volatility-smile.\n\nstrike_: List  of absolute strikes,\n vols_:  List of lognormal annualized volatilities,\nr_: float of risk-free-rate,\nS_: float of the spot:\nT_ : the time-to-expiry of the option\ndelta_target: float, the desired delta where you want the implied volatility", "yesterday_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions": "This endpiont delivers yesterday BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."}, "aseqs": [{"api_name": "manufacturing_location_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_location_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "manufacturing_year_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_year_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "model_detection_for_tesla_vin_identifier", "api_action": "\nAction: model_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "manufacturing_location_detection_for_tesla_vin_identifier"}}, {"state": "generated_by_agent", "aseq": {"api_name": "manufacturing_year_detection_for_tesla_vin_identifier", "api_action": "{\"vin_identifier\": \"0f7885c2af1a6ef9\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "model_detection_for_tesla_vin_identifier", "api_action": "\nAction: model_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "manufacturing_location_detection_for_tesla_vin_identifier", "api_action": "\nAction: manufacturing_location_detection_for_tesla_vin_identifier\nAction Input: {\n  \"vin_identifier\": \"0f7885c2af1a6ef9\"\n}", "api_reaction": null}}]}
{"URL": "13521", "query": "I want to explore the news coverage about Cameroon. Retrieve the news articles from the Instant Cameroon News API. Include the title, description, source, and publication time for each article. Also, provide the homepage of the Instant Cameroon News website.", "api_names": ["Finish", "retrieve_data_for_instant_cameroon_news", "home_page_for_instant_cameroon_news", "check_email_server_for_mx_email_server_up_or_down", "sentiment_analysis_for_text_sentiment_api", "get_deals_for_amazon_web_scraping_api", "recommendations_for_direct_wines", "getpetbyid_for_freeplanhardlimitexternal", "auctions_for_gsaauction", "album_metadata_for_spotify_web", "history_for_papercliff", "get_birthday_draws_for_euro_millions"], "api_descs": {"Finish": "No description available.", "album_metadata_for_spotify_web": "Get album metadata", "auctions_for_gsaauction": "this endpoint returns auction listings. \n", "check_email_server_for_mx_email_server_up_or_down": "Returns if email server is up or down.", "get_birthday_draws_for_euro_millions": "Get all draws result occurred at a given birthday date (mm-dd) and check it out what's your lucky number and related statistics.", "get_deals_for_amazon_web_scraping_api": "Get amazon deals allowing to filter by category.  The category list is included in the response.", "getpetbyid_for_freeplanhardlimitexternal": "Returns a single pet", "history_for_papercliff": "Returns the number of articles published daily during the last week and the number of corresponding news agencies that created those articles", "home_page_for_instant_cameroon_news": "Home and Welcome page that introduces the API", "recommendations_for_direct_wines": "", "retrieve_data_for_instant_cameroon_news": "Endpoint, which you use to retrieve the data you need. This endpoint can accept some parameters like page, search key and data range", "sentiment_analysis_for_text_sentiment_api": "This endpoint takes a GET request with a string as a parameter and returns the sentiment scores (polarity and subjectivity) of the text as well as the 'Full Text', 'Language', 'Entities', 'Keywords', 'Sentiment Label' and 'Subjectivity Label'."}, "aseqs": [{"api_name": "home_page_for_instant_cameroon_news", "api_action": "\nAction: home_page_for_instant_cameroon_news\nAction Input: {}", "api_reaction": null}, {"api_name": "retrieve_data_for_instant_cameroon_news", "api_action": "\nAction: retrieve_data_for_instant_cameroon_news\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "retrieve_data_for_instant_cameroon_news"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"retrieve_data_for_instant_cameroon_news\",\n\t\"api_action\": \"\\nAction: retrieve_data_for_instant_cameroon_news\\nAction Input: {\"page\": 1, \"search_key\": \"\", \"data_range\": \"\"}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "home_page_for_instant_cameroon_news"}}]}
{"URL": "11225", "query": "I am a finance student and I need to analyze the performance of the stock market. Can you provide me with the price chart for the S&P 500 index in the past year? Additionally, I would like to see the financial information for the top 10 stocks in the index.", "api_names": ["market_get_compact_for_bb_finance", "market_auto_complete_for_bb_finance", "Finish", "getevents_for_wosti_futbol_tv_spain", "api_v2_list_of_all_available_pairs_for_changenow_crypto_exchange", "convert_for_currencyapi_net", "getdiscloseddaterange_for_jp_funda", "user_data_by_name_for_tiktok_solutions", "players_for_live_golf_data", "tirto_detail_for_indonesia_news", "get_top_stories_of_kuensel_for_top_stories_of_kuensel", "anime_for_hummingbird_v1", "fetch_email_of_a_person_for_email_finder", "user_feed_for_kwai", "get_all_m1lhao_draws_dates_for_euro_millions", "get_sunrise_and_sunset_times_for_sunrise_sunset_times", "heroes_list_for_dota2_heroes", "matches_for_chillybets"], "api_descs": {"Finish": "No description available.", "anime_for_hummingbird_v1": "", "api_v2_list_of_all_available_pairs_for_changenow_crypto_exchange": "<p>This API endpoint returns the list of all available pairs. Some currencies get enabled or disabled from time to time, so make sure to refresh the list occasionally.</p>\n<p>Notice that the resulting array will contain about 13000 pairs.</p>\n\n<h3>Successful response:</h3>\n<p>The response contains an array of underscore separated pair of tickers.</p>\n\n<h3>Request Parameters:</h3>", "convert_for_currencyapi_net": "Convert a custom amount value from one currency to another", "fetch_email_of_a_person_for_email_finder": "Get email of anyone in the internet. Best for lead generation, prospecting, and cold marketing.", "get_all_m1lhao_draws_dates_for_euro_millions": "Get all M1lhao draws dates (M1lhão (‘The Million’) is a supplementary game offered to Portuguese EuroMillions players which offers the chance to win a prize of €1 million on Friday evenings.)", "get_sunrise_and_sunset_times_for_sunrise_sunset_times": "Get sunrise and sunset times by date, latitude, and longitude.", "get_top_stories_of_kuensel_for_top_stories_of_kuensel": "Get top stories of kuensel", "getdiscloseddaterange_for_jp_funda": "### Return securities report data Specified by the date range.\nNote: This endpoint requires the 2 query parameters, start_date and end_date\nNote: max date range is 31 days. if you want longer date range data, need to requesting API twice or more.", "getevents_for_wosti_futbol_tv_spain": "Obtener el listado de eventos de partidos de fútbol televisados en España.\n\n> Este endpoints no requiere de ningún parámetro.", "heroes_list_for_dota2_heroes": "You can list of heroes id , name , image, complexity and attribute", "market_auto_complete_for_bb_finance": "Query suggestion by term and phrase", "market_get_compact_for_bb_finance": "Get most informative fields about indices, commodities, currencies, rates, etc...", "matches_for_chillybets": "Latest Matches for Chillybets", "players_for_live_golf_data": "Fetch a PGA Tour player by his last name, first name, playerId, or a combination of these parameters.\n\nYou must provide at least one search parameter to the API.", "tirto_detail_for_indonesia_news": "detail tirto news", "user_data_by_name_for_tiktok_solutions": "Get** User Data** by** Name**", "user_feed_for_kwai": "User Feed API"}, "aseqs": [{"api_name": "market_auto_complete_for_bb_finance", "api_action": "\nAction: market_auto_complete_for_bb_finance\nAction Input: {\n  \"query\": \"S&P 500\"\n}", "api_reaction": null}, {"api_name": "market_get_compact_for_bb_finance", "api_action": "\nAction: market_get_compact_for_bb_finance\nAction Input: {\n  \"is_id\": \"AAPL:US, MSFT:US, AMZN:US, GOOGL:US, FB:US, JPM:US, JNJ:US, V:US, PG:US, NVDA:US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "market_get_compact_for_bb_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_get_compact_for_bb_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_get_compact_for_bb_finance", "api_action": "\nAction: market_get_compact_for_bb_finance\nAction Input: {\n  \"is_id\": \"AAPL:US, MSFT:US, AMZN:US, GOOGL:US, FB:US, JPM:US, JNJ:US, V:US, PG:US, NVDA:US,\n          XLP:US, XLV:US, XLRE:US, RACE:US, RTN:US, RY:US, RSX:US,\n          QCOM:US, QUMR:US\"\n}", "api_reaction": null}}]}
{"URL": "72703", "query": "I'm looking for companies similar to Google based on their website. Can you provide me with a list of related companies? I'm also interested in finding companies related to search engines and online advertising.", "api_names": ["similar_for_market_intelligence_by_automata", "search_for_market_intelligence_by_automata", "Finish", "search_for_superhero_search", "vin_detection_for_tesla_vin_identifier", "year_end_billboard_200_albums_for_billboard_v2", "video_details_for_youtube_search", "binance_charts_for_candlestick_chart", "get_user_following_list_for_tiktok_download_video_", "seasonal_advanced_team_statistics_for_basketball_data", "explore_for_fastapi_project", "stays_properties_detail_photos_for_booking_com_v2"], "api_descs": {"Finish": "No description available.", "binance_charts_for_candlestick_chart": "This endpoint creates candlestick charts for any cryptocurrency listed on [Binance](https://www.binance.com) that you want!", "explore_for_fastapi_project": "explore api", "get_user_following_list_for_tiktok_download_video_": "get user following list", "search_for_market_intelligence_by_automata": " ", "search_for_superhero_search": "This endpoint searches through our superhero database", "seasonal_advanced_team_statistics_for_basketball_data": "Provides the season-wide advanced team statistics with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "similar_for_market_intelligence_by_automata": " ", "stays_properties_detail_photos_for_booking_com_v2": "Get detail photos", "video_details_for_youtube_search": "Get all publicly available details about a Youtube Video", "vin_detection_for_tesla_vin_identifier": "This endpoint is capable of resolving a Tesla VIN identifier to an actual VIN. This conversion has a success rate of approximately 98%.\nThe following information is encoded in a Tesla VIN:\nManufacturer ID\nModel Type\nPlatform Type\nSeat Belt Type\nDrive System \nMotor Type\nYear of Manufacturing\nManufacturing Location (Fremont, Shanghai, Berlin, Austin)\nSpecial Series (like R for research)\nVIN Serial", "year_end_billboard_200_albums_for_billboard_v2": "Get the Year-End Billboard 200 Albums chart."}, "aseqs": [{"api_name": "similar_for_market_intelligence_by_automata", "api_action": "\nAction: similar_for_market_intelligence_by_automata\nAction Input: {\n  \"link\": \"google.com\"\n}", "api_reaction": null}, {"api_name": "search_for_market_intelligence_by_automata", "api_action": "\nAction: search_for_market_intelligence_by_automata\nAction Input: {\n  \"terms\": \"Google, search engines, online advertising\"\n}", "api_reaction": null}, {"api_name": "similar_for_market_intelligence_by_automata", "api_action": "\nAction: similar_for_market_intelligence_by_automata\nAction Input: {\n  \"link\": \"google.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_market_intelligence_by_automata"}}, {"state": "generated_by_agent", "aseq": {"api_name": "similar_for_market_intelligence_by_automata", "api_action": "\nAction: similar_for_market_intelligence_by_automata\nAction Input: {\n  \"link\": \"searchengines.com\"\n}\nAction Input: {\n  \"link\": \"onlineadvertising.com\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "similar_for_market_intelligence_by_automata", "api_action": "\nAction: similar_for_market_intelligence_by_automata\nAction Input: {\n  \"link\": \"searchengines.com\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_market_intelligence_by_automata", "api_action": "\nAction: search_for_market_intelligence_by_automata\nAction Input: {\n  \"terms\": \"Google, similar companies, online advertising\"\n}"}}]}
{"URL": "83558", "query": "I am working on a healthcare application and need to retrieve the version metadata of the server. Can you suggest an API that provides this information? Additionally, I would like to fetch the list of fixtures for medical devices.", "api_names": ["version_metadata_for_hapihub", "get_fixtures_for_hapihub", "Finish", "water_vapour_history_by_lat_lng_for_ambee_water_vapor_data", "pack_for_flaticon", "get_info_for_covid_19_india", "post_groups_for_ocoya", "get_video_details_for_youtube_media_downloader", "product_categorization_for_product_categorization", "global_address_for_global_address", "get_all_climate_change_news_for_climate_change_api_tutorial", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson", "article_api_for_diffbot", "keydetails_185_225_233_110_30015_for_vrising_server_query_api", "get_result_for_face_animer", "historical_for_fear_and_greed_index", "places_for_decathlon_sport_places", "get_ingredients_for_bespoke_diet_generator"], "api_descs": {"Finish": "No description available.", "article_api_for_diffbot": "The Article API is used to extract clean article text from news articles, blog posts, and other text-heavy web pages.", "get_all_climate_change_news_for_climate_change_api_tutorial": "This endpoint will return back all news about Climate Change from all over the world.", "get_fixtures_for_hapihub": "Fetch a list of fixtures", "get_info_for_covid_19_india": "Get Covid Latest Information", "get_ingredients_for_bespoke_diet_generator": "Retrieve all the ingredients.", "get_postal_areas_of_specific_us_state_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get Postal areas of specific US state in GeoJSON format", "get_result_for_face_animer": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.", "get_video_details_for_youtube_media_downloader": "This endpoint fetches full details of a YouTube video, including URLs of videos, audios, thumbnails and subtitles as well as related videos and playlists.", "global_address_for_global_address": "Validate, Standardize and Cleanse Addresses across the globe", "historical_for_fear_and_greed_index": "Get the index for the given date.", "keydetails_185_225_233_110_30015_for_vrising_server_query_api": "Get the key details from server - change `/IP/PORT`", "pack_for_flaticon": "Method that allows you to get detailed information about a pack. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.", "places_for_decathlon_sport_places": "List out places around a location", "post_groups_for_ocoya": "Returns information about all my created posts.", "product_categorization_for_product_categorization": "Return category of product base on the product title.", "version_metadata_for_hapihub": "Retrieve the server's version metadata", "water_vapour_history_by_lat_lng_for_ambee_water_vapor_data": "Water vapour History by lat lng"}, "aseqs": [{"api_name": "version_metadata_for_hapihub", "api_action": "\nAction: version_metadata_for_hapihub\nAction Input: {}", "api_reaction": null}, {"api_name": "get_fixtures_for_hapihub", "api_action": "\nAction: get_fixtures_for_hapihub\nAction Input: {}", "api_reaction": null}, {"api_name": "version_metadata_for_hapihub", "api_action": "\nAction: version_metadata_for_hapihub\nAction Input: {}", "api_reaction": null}, {"api_name": "get_fixtures_for_hapihub", "api_action": "\nAction: get_fixtures_for_hapihub\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "version_metadata_for_hapihub"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_fixtures_for_hapihub\",\n\t\"api_action\": \"\\nAction: get_fixtures_for_hapihub\\nAction Input: {}\",\n\t\"api_reaction\": null\n}<tool_call>\n返回搜狐(user)\n\nThe next action should be to retrieve the version metadata of the server using the 'version_metadata_for_hapihub' API.\nDo not output any other content; your response should only be in this JSON format. You must NOT enclose the JSON with ```json XXX```. The property names must be enclosed in double quotes.\n\nYou should only output on action at a time. You should only output on action at a time. You should only output on action at a time.\n<tool_call>\n<|im_start|>assistant\n{\n\t\"api_name\": \"version_metadata_for_hapihub\",\n\t\"api_action\": \"\\nAction: version_metadata_for_hapihub\\nAction Input: {}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "version_metadata_for_hapihub"}}, {"state": "generated_by_agent", "aseq": {"api_name": "version_metadata_for_hapihub"}}, {"state": "generated_by_agent", "aseq": {"api_name": "version_metadata_for_hapihub"}}]}
{"URL": "21838", "query": "I have a business trip to Tokyo next week. Can you fetch the 5-day forecast for Tokyo in XML format? Additionally, give me the current weather data for Tokyo in imperial units.", "api_names": ["view_from_16_day_daily_forecast_dates_for_vision_weather_map", "current_weather_data_for_vision_weather_map", "Finish", "financial_balance_sheet_for_macrotrends_finance", "grains_futures_prices_for_investing", "get_user_favorite_videos_for_tiktok_video_feature_summary", "organizations_for_live_golf_data", "v1_list_currencies_for_hryvna_today", "earning_call_transcript_api_premium_for_financial_modeling_prep", "search_quote_by_character_name_for_10000_anime_quotes_with_pagination_support", "stagesubstages_for_motorsportapi", "analyze_text_for_sentiment_analysis_service", "getevents_for_wosti_futbol_tv_spain", "list_user_comments_for_soundcloud_scraper", "burned_calorie_from_activity_for_fitness_calculator", "party_for_partydiva", "current_snow_conditions_for_ski_resort_forecast", "telegram_channel_info_for_telegram_v2"], "api_descs": {"Finish": "No description available.", "analyze_text_for_sentiment_analysis_service": "Determine the sentiment of a given body of text", "burned_calorie_from_activity_for_fitness_calculator": "Calculate the burned calorie for a specific activity.", "current_snow_conditions_for_ski_resort_forecast": "Returns the current snow conditions for a given resort name", "current_weather_data_for_vision_weather_map": "With this type of request you can get weather data anywhere on earth. The current weather data is updated online based on data from more than 40,000 weather stations.", "earning_call_transcript_api_premium_for_financial_modeling_prep": "Analyzing Earnings Conference Call With NLP", "financial_balance_sheet_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.", "get_user_favorite_videos_for_tiktok_video_feature_summary": "get user favorite videos list", "getevents_for_wosti_futbol_tv_spain": "Obtener el listado de eventos de partidos de fútbol televisados en España.\n\n> Este endpoints no requiere de ningún parámetro.", "grains_futures_prices_for_investing": "page source : https://www.investing.com/commodities/grains", "list_user_comments_for_soundcloud_scraper": "This endpoint lists a user's comments.", "organizations_for_live_golf_data": "Fetch the organizations that are supported by this golf data API.", "party_for_partydiva": "party", "search_quote_by_character_name_for_10000_anime_quotes_with_pagination_support": "Get anime quotes based on character search:\nRequired GET parameter\n**page**:  1\n**search**: Lelouch\n\nOn the above **page**, 1 means it will fetch the latest 10 quotes if the page value is 2 then It will bring the next 10 latest quotes\npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above **search** means it will try to fetch all quotes spoken by that character\n**Note:**  Search param should contain atleast 3 characters.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`", "stagesubstages_for_motorsportapi": "Get all substages of a specific Motorsport stage.", "telegram_channel_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Channel\n\n- Title\n- Photo\n- Description\n- Members", "v1_list_currencies_for_hryvna_today": "", "view_from_16_day_daily_forecast_dates_for_vision_weather_map": "16-day forecasts are available in any location or city. Forecasts include the daily weather and are available in JSON or XML format. It is only available for all paid accounts."}, "aseqs": [{"api_name": "current_weather_data_for_vision_weather_map", "api_action": "\nAction: current_weather_data_for_vision_weather_map\nAction Input: {\n  \"q\": \"Tokyo\",\n  \"units\": \"imperial\",\n  \"mode\": \"xml\"\n}", "api_reaction": null}, {"api_name": "current_weather_data_for_vision_weather_map", "api_action": "\nAction: current_weather_data_for_vision_weather_map\nAction Input: {\n  \"q\": \"Tokyo\",\n  \"units\": \"imperial\"\n}", "api_reaction": null}, {"api_name": "view_from_16_day_daily_forecast_dates_for_vision_weather_map", "api_action": "\nAction: view_from_16_day_daily_forecast_dates_for_vision_weather_map\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "view_from_16_day_daily_forecast_dates_for_vision_weather_map"}}, {"state": "generated_by_agent", "aseq": {"api_name": "view_from_16_day_daily_forecast_dates_for_vision_weather_map"}}, {"state": "generated_by_agent", "aseq": {"api_name": "view_from_16_day_daily_forecast_dates_for_vision_weather_map"}}, {"state": "generated_by_agent", "aseq": {"api_name": "view_from_16_day_daily_forecast_dates_for_vision_weather_map", "api_action": "\nAction: view_from_16_day_daily_forecast_dates_for_vision_weather_map\nAction Input: {\n  \"q\": \"Tokyo\",\n  \"forecastmode\": \"daytime\"\n}", "api_reaction": null}}]}
{"URL": "81470", "query": "Could you please search for an item with the name 'sword'? Additionally, fetch the champion tier list for the 'master' rank in the 'kr' region and provide the name and role of a champion from the 'sTier'.", "api_names": ["Finish", "search_for_a_champion_for_league_of_legends_galore", "get_champion_tier_list_for_league_of_legends_galore", "gettspmatches_for_betsports", "get_hebrew_month_and_date_for_enoch_calendar", "search_companies_by_name_for_get_companies_by_sic_code_api", "retrieve_asset_for_blur", "qrcodefree_for_qrcodeutils", "logoutuser_for_platformbil", "v1_thesaurus_for_thesaurus_by_api_ninjas", "get_item_for_dungeons_and_dragon_5e", "get_categories_for__onboarding_project_v3"], "api_descs": {"Finish": "No description available.", "get_categories_for__onboarding_project_v3": " ", "get_champion_tier_list_for_league_of_legends_galore": "Get either a list of the current champion tier list or a tier list section based on YOUR request!", "get_hebrew_month_and_date_for_enoch_calendar": "Get Hebrew Month, Date and holydays from supplied date string or today's date", "get_item_for_dungeons_and_dragon_5e": "Returns information about the D&D item in JSON format. Only includes magic items, not equipment.", "gettspmatches_for_betsports": "getTspMatches data", "logoutuser_for_platformbil": "", "qrcodefree_for_qrcodeutils": "Free QR Code Barcode Generator", "retrieve_asset_for_blur": "This endpoint is used to retrieve information about a single NFT.\n\nTo be able to use the blur endpoints you need an authToken.\nYou can generate one by using the 'Retrieve authchallenge' endpoint with your wallet address in the body of the request.\nOnce you get the response, sign the 'message' string with ethers.js\nconst signature = await ethersSigner.signMessage(response.data.message);\nThen use the 'Retrieve authtoken' endpoint to get your authToken, by inputting the response parameters from 'Retrieve authchallenge' plus the generated signature.", "search_companies_by_name_for_get_companies_by_sic_code_api": "This endpoint will allow you to search for companies by their name. This endpoint will provide you with the company slug that could be used to get additional company data, like SIC code and NAICS code.", "search_for_a_champion_for_league_of_legends_galore": "This will go through the list of champions and return a single champion or a list of champions depending on YOUR request!", "v1_thesaurus_for_thesaurus_by_api_ninjas": "API Ninjas Thesaurus API endpoint. Returns a list of synonyms and a list of antonyms for a given word."}, "aseqs": [{"api_name": "get_champion_tier_list_for_league_of_legends_galore", "api_action": "\nAction: get_champion_tier_list_for_league_of_legends_galore\nAction Input: {}", "api_reaction": null}, {"api_name": "search_for_a_champion_for_league_of_legends_galore", "api_action": "\nAction: search_for_a_champion_for_league_of_legends_galore\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": Analyze the user query to fetch the item and champion information based on request, starting with searching for 'sword' as an item in Dungeons & Dragons 5e.\n\t\"api_name\": \"get_item_for_dungeons_and_dragon_5e\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_item_for_dungeons_andragon_5e", "api_action": "\nAction: get_item_for_dungeons_andragon_5e\nAction Input: {\r\n\t\"name\": \"sword\"\r\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_a_champion_for_league_of_legends_galore"}}]}
{"URL": "53240", "query": "My company is interested in analyzing the whale transactions on the Ethereum, Tron, and Binance Chain blockchains. Could you fetch the latest transactions and provide details such as the transaction amount, sender, and receiver? Additionally, we would like to know the total number of transactions and the execution time of the API call.", "api_names": ["specific_transactions_for_crypto_whale_transactions", "transactions_feed_for_crypto_whale_transactions", "Finish", "attrition_flag_for_credit_card_prediction", "schedule_information_for_bart", "latest_drawing_for_fantasy_5", "cities_v2_get_measurements_for_airvisual", "achievement_list_for_steam_store_api", "gettaskresult_free_of_use_for_yandex_serp", "category_list_for_fortune_cookie", "getteamroster_for_nhl_stats_and_live_data", "getcountrybynumber_for_telephonetocountry", "billboard_global_200_for_billboard", "sms_sendernames_sender_for_smsapi_com", "post_likers_for_instagram_data", "get_company_data_by_company_slug_for_get_companies_by_sic_code_api", "youtube_artist_artistname_for_musicdata_api", "get_all_images_for_opt_nc_public_docker_images"], "api_descs": {"Finish": "No description available.", "achievement_list_for_steam_store_api": "Returns a full list of achievements with information on what needs to be done to get the achievement and what percentage of players have achieved it.", "attrition_flag_for_credit_card_prediction": "Attrition_Flag Get request", "billboard_global_200_for_billboard": "Provide Billboard Global 200 chart information. Available from SEPTEMBER 19, 2020", "category_list_for_fortune_cookie": "List of fortune categories", "cities_v2_get_measurements_for_airvisual": "Get measurements in specific city by its id", "get_all_images_for_opt_nc_public_docker_images": "Récupère la liste de toutes les images Docker publiques", "get_company_data_by_company_slug_for_get_companies_by_sic_code_api": "Using the Company Slug that is provided in the \"Get Companies by SIC code\" endpoint, you will be receiving additional information about a company. \nGet city, state, zip code, estimated annual revenue, years in business, and estimated company size, and company NAICS.", "getcountrybynumber_for_telephonetocountry": "Returns country info by phone number", "gettaskresult_free_of_use_for_yandex_serp": "To get the result of the task just provide the **task_id** that you obtained after requesting **GetSerpAsync**. When task is not finished yet you will receive **task_status: inprogress**. For a finished task you will get **task_status: succeeded**. Check the **Example Responses** tab to see the examples. \nPossible task statuses:\n- **pending** - task is waiting for its turn\n- **inprogress** - task has been passed to the worker\n- **succeeded** - task has been finished with success\n\nUse this endpoint how much you want. **It's free of charge**!\n\nThe average **GetCompleteDataAsync**  execution time is 10-40 seconds.  It all depends how many tasks are in the queue.", "getteamroster_for_nhl_stats_and_live_data": " ", "latest_drawing_for_fantasy_5": "Get the latest, and last winning Fantasy 5 winning number set.", "post_likers_for_instagram_data": "Get users that liked specific post\n\n**NOTE:** Profile should be public(not private)", "schedule_information_for_bart": "", "sms_sendernames_sender_for_smsapi_com": " ", "specific_transactions_for_crypto_whale_transactions": "get info about single transaction", "transactions_feed_for_crypto_whale_transactions": "Get latest huge whale transactions for most popular blockchains.\n\n**Filter by txn value. Add parameters as below:**\n<_amount_usd=10000 \nOR\n>amount_usd=10000\n\n**Filter by blockchain:**\n t_blockchain=bitcoin\n\nAvailable blockchains: bitcoin, bitcoin-cash, ethereum, bitcoin-sv, litecoin, tron, ripple, zcash, dogecoin, neo, eos, dash, ethereum-classic, tezos, binancechain, stellar, groestlcoin, icon, steem, cosmos, decred, verge, hypercash, siacoin\n\n\n**Pagination:**\nAdd parameter: size=100", "youtube_artist_artistname_for_musicdata_api": "Get details about an artist"}, "aseqs": [{"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {}", "api_reaction": null}, {"api_name": "specific_transactions_for_crypto_whale_transactions", "api_action": "\nAction: specific_transactions_for_crypto_whale_transactions\nAction Input: {\n  \"hash\": \"0xfa8426e8a14cbbf75ec0e163c42c9832630c0e40e3d610e840bf4c42c7b2b622\",\n  \"symbol\": \"dgd\"\n}", "api_reaction": null}, {"api_name": "transactions_feed_for_crypto_whale_transactions", "api_action": "\nAction: transactions_feed_for_crypto_whale_transactions\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "specific_transactions_for_crypto_whale_transactions"}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_transactions_for_crypto_whale_transactions", "api_action": "\nAction: specific_transactions_for_crypto_whale_transactions\nAction Input: {\"t_blockchain\": \"ethereum\", \"size\": 100, _amount_usd: 10000}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_transactions_for_crypto_whale_transactions", "api_action": "\nAction: specific_transactions_for_crypto_whale_transactions\nAction Input: {\n  \"blockchain\": \"ethereum\",\n  \"size\": 100,\n  \"_amount_usd\": 10000\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_transactions_for_crypto_whale_transactions", "api_action": "\nAction: specific_transactions_for_crypto_whale_transactions\nAction Input: {\n  \"blockchain\": \"ethereum\",\n  \"size\": 100,\n  \"symbol\": \"eth\"\n}", "api_reaction": null}}]}
{"URL": "72837", "query": "I'm an art enthusiast and I want to explore new media art events. Can you provide me with a list of ongoing art events in Italy that fall under the genre 'new media'? Also, I would like to know the locations where these events are taking place.", "api_names": ["live_events_for_art_openings_italy", "get_all_genres_for_art_openings_italy", "Finish", "blockchains_for_crypto_whale_transactions", "go_for_web_scrapper", "cat_for_score", "getdocumentmetadata_for_groupdocs_conversion_cloud", "get_server_time_for_yandex_serp", "v1_list_bank_types_for_hryvna_today", "live_mmo_giveaways_for_mmo_games", "top_grossing_mac_apps_for_app_store", "consulta_cep_for_consulta_cnpj_tempo_real"], "api_descs": {"Finish": "No description available.", "blockchains_for_crypto_whale_transactions": "Get list of all supported blockchains", "cat_for_score": "cat", "consulta_cep_for_consulta_cnpj_tempo_real": "Consulta CEP", "get_all_genres_for_art_openings_italy": "This service returns a list of all genres of the events.", "get_server_time_for_yandex_serp": "Returns server time.", "getdocumentmetadata_for_groupdocs_conversion_cloud": " ", "go_for_web_scrapper": "Fetch & parse HTML page", "live_events_for_art_openings_italy": "To call this service, you would make a GET request to the endpoint /api/ongoing-events with the optional query parameter city. When the service is called, it retrieves a list of events from the database, filtered by the city parameter if it is provided.", "live_mmo_giveaways_for_mmo_games": "Live Giveaways list", "top_grossing_mac_apps_for_app_store": "Get list of the top grossing mac apps", "v1_list_bank_types_for_hryvna_today": ""}, "aseqs": [{"api_name": "get_all_genres_for_art_openings_italy", "api_action": "\nAction: get_all_genres_for_art_openings_italy\nAction Input: {}", "api_reaction": null}, {"api_name": "live_events_for_art_openings_italy", "api_action": "\nAction: live_events_for_art_openings_italy\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch upcoming art events in Italy that fall under the genre 'new media'. Then, I'll gather the locations where these events are taking place.\n\t\"api_name\": \"live_events_for_art_openings_italy\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "live_events_for_art_openings_italy"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_genres_for_art_openings_italy"}}]}
{"URL": "34298", "query": "I want to find available job titles related to sales. Additionally, provide me with a list of locations where sales jobs are available. Finally, give me the contact information of a sales professional with the job title 'Sales Manager' in Chicago.", "api_names": ["get_available_job_titles_for_generate_linkedin_leads", "get_available_companies_for_generate_linkedin_leads", "get_available_locations_for_generate_linkedin_leads", "Finish", "profile_data_for_linkedin_profile_data", "get_models_for_hsn_tsn", "video_post_metadata_for_social_media_data_tt", "geteventexternalinfo_for_sportapi", "trending_with_pagination_for_top_nft_collections", "download_for_uurrooster_v2", "get_username_pubg_mobile_for_id_game_checker", "nhl_team_list_for_nhl_api", "get_the_awarded_books_of_a_year_for_hapi_books", "get_a_random_quote_for_movie_and_tv_shows_quotes", "get_all_physical_quantities_for_physical_quantities_constants_and_equations_", "comments_for_axesso_instagram_data_service", "islamiblockchain_islamicoin_main_cs_txt_for_islamicoin", "get_all_stories_by_username_for_instagram_api_2023", "search_for_jailbase", "latest_outcome_for_xxxtremelightningrouletteapi"], "api_descs": {"Finish": "No description available.", "comments_for_axesso_instagram_data_service": "Fetch comments for a given post. Therefore the shortcode needs to be passed which is returned in the \"node\" array from posts endpoint. If in the first response \"data.shortcode_media.edge_media_to_parent_comment.page_info.has_next_page\" equals true, then more comments exists and it can be fetched by passing \"data.shortcode_media.edge_media_to_parent_comment.page_info.end_cursor\" to the after param in the next request.", "download_for_uurrooster_v2": "downloaden", "get_a_random_quote_for_movie_and_tv_shows_quotes": "This endpoint will return a random quote", "get_all_physical_quantities_for_physical_quantities_constants_and_equations_": "This endpoint return back data of physical quantities", "get_all_stories_by_username_for_instagram_api_2023": "Get all active stories of an Instagram user using username.\n\n***Please use` Get all stories by user_id` endpoint for fast response.***", "get_available_companies_for_generate_linkedin_leads": "Get Available Companies which could be used in /leads/leads/ endpoint", "get_available_job_titles_for_generate_linkedin_leads": "Get Available Job Titles which could be used in /leads/leads/ endpoint", "get_available_locations_for_generate_linkedin_leads": "Get Available Locations which could be used in /leads/leads/ endpoint", "get_models_for_hsn_tsn": "Returns all models based on manufacturer.", "get_the_awarded_books_of_a_year_for_hapi_books": "Returns the list of the best books of a year by its winning category.\nEach returned book has its Name, Winning Category, Cover Image and more.", "get_username_pubg_mobile_for_id_game_checker": "Enter your PUBG Mobile ID  in the required parameters\n\nINFO: The API for this game is currently in the process of being maintained", "geteventexternalinfo_for_sportapi": "GetEventExternalInfo api data", "islamiblockchain_islamicoin_main_cs_txt_for_islamicoin": "ISLAMICOIN Circulation Supply", "latest_outcome_for_xxxtremelightningrouletteapi": "last spin details and Outcome Data", "nhl_team_list_for_nhl_api": "This API endpoint will return the list of all NHL teams", "profile_data_for_linkedin_profile_data": "Get LinkedIn profile data with username", "search_for_jailbase": "Search for individuals by name", "trending_with_pagination_for_top_nft_collections": "Trending with pagination provided by OpenSea", "video_post_metadata_for_social_media_data_tt": "Get single post metadata"}, "aseqs": [{"api_name": "get_available_job_titles_for_generate_linkedin_leads", "api_action": "\nAction: get_available_job_titles_for_generate_linkedin_leads\nAction Input: {\n  \"name\": \"sales\"\n}", "api_reaction": null}, {"api_name": "get_available_locations_for_generate_linkedin_leads", "api_action": "\nAction: get_available_locations_for_generate_linkedin_leads\nAction Input: {\n  \"name\": \"sales\"\n}", "api_reaction": null}, {"api_name": "get_available_job_titles_for_generate_linkedin_leads", "api_action": "\nAction: get_available_job_titles_for_generate_linkedin_leads\nAction Input: {\n  \"name\": \"sales manager\"\n}", "api_reaction": null}, {"api_name": "get_available_companies_for_generate_linkedin_leads", "api_action": "\nAction: get_available_companies_for_generate_linkedin_leads\nAction Input: {\n  \"name\": \"Chicago\"\n}", "api_reaction": null}, {"api_name": "get_available_companies_for_generate_linkedin_leads", "api_action": "\nAction: get_available_companies_for_generate_linkedin_leads\nAction Input: {\n  \"name\": \"Sales Manager\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_available_job_titles_for_generate_linkedin_leads"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_available_locations_for_generate_linkedin_leads", "api_action": "\nAction: get_available_locations_for_generate_linkedin_leads\nAction Input: {\n  \"name\": \"sales\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_jailbase"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_available_locations_for_generate_linkedin_leads"}}, {"state": "generated_by_agent", "aseq": {"api_name": "profile_data_for_linkedin_profile_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_profile_data_for_linkedin_profile_data", "api_action": "\nAction: profile_data_for_linkedin_profile_data\nAction Input: {\n  \"username\": \"Sales Manager\"\n}"}}]}
{"URL": "71066", "query": "I need to manage my databases in TimeDB. Can you retrieve the list of measurements and run provisioning on the databases? Also, provide me with the connection and retention information for my account.", "api_names": ["measurements_for_timedb", "provision_for_timedb", "Finish", "spain_scheduled_flights_growth_for_global_flight_data", "get_total_buy_price_for_coinbase", "checkhealth_for_squake", "subusers_for_smsapi_com", "generate_for_article_rewriter_pro_api", "exists_exists_ticket_get_for_ifc_bim_services", "asset_information_for_opensea_v2", "summary_for_play_to_earn_blockchain_games", "location_by_id_for_instagram_api", "get_team_receiving_data_for_nfl_team_stats_v2", "getinventory_for_publicapitestinginbox", "full_information_for_domain_info", "get_single_item_for_tibia_items", "get_a_specific_quote_for_motivational_content", "all_for_bps"], "api_descs": {"Finish": "No description available.", "all_for_bps": "Liste des provinces de la Nouvelle Calédonie", "asset_information_for_opensea_v2": "Scrape all the HTML information from the NFT asset page without having to use chrome , scrape 10,000  NFTs images, & metadata in under 11min (*using top plan)", "checkhealth_for_squake": " ", "exists_exists_ticket_get_for_ifc_bim_services": "Check if the key ticket is available or not", "full_information_for_domain_info": "This endpoint returns the full information on the domain.", "generate_for_article_rewriter_pro_api": "To rewrite articles", "get_a_specific_quote_for_motivational_content": "This endpoint fetches a specific quote using the provided 'id'.", "get_single_item_for_tibia_items": "This Endpoint will help you get sigle item in our data base by World", "get_team_receiving_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' receiving data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.", "get_total_buy_price_for_coinbase": "Get the total buy price for some bitcoin amount.", "getinventory_for_publicapitestinginbox": "Returns a map of status codes to quantities", "location_by_id_for_instagram_api": "Gets a location by Id", "measurements_for_timedb": "Retrieve list of Measurements in TimeDB", "provision_for_timedb": "**Runs provisioning on database(s) causing downsampling of data. Provides connection and retention information for account as a result**\n\nMust be run after new measurements or fields are added to datasets (e.q. if new sensor is providing data or additional fields should be stored for existing sensor/measurement).", "spain_scheduled_flights_growth_for_global_flight_data": "Get weekly Spain scheduled departing flights growth.", "subusers_for_smsapi_com": " ", "summary_for_play_to_earn_blockchain_games": "Get games market data summary"}, "aseqs": [{"api_name": "measurements_for_timedb", "api_action": "\nAction: measurements_for_timedb\nAction Input: {}", "api_reaction": null}, {"api_name": "provision_for_timedb", "api_action": "\nAction: provision_for_timedb\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "measurements_for_timedb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "provision_for_timedb"}}, {"state": "generated_by_agent", "aseq": {"api_name": "measurements_for_timedb"}}]}
{"URL": "11714", "query": "I'm developing an application that requires real-time access to financial asset information. Could you provide me with an overview of the Wealth Reader API, including its purpose, available endpoints, and any authentication requirements?", "api_names": ["entities_for_wealth_reader_api", "Finish", "user_likes_for_twitter_data", "user_followings_for_tiktok_scraper_v2", "teams_for_fia_formula_1_championship_statistics", "reviews_list_for_kohls", "user_followers_for_100_success_instagram_api_scalable_robust", "current_block_number_for_optimism", "bmi_for_clinicalmarkers", "caisoregion_for_caiso"], "api_descs": {"Finish": "No description available.", "bmi_for_clinicalmarkers": " ", "caisoregion_for_caiso": "Gets Regional Authorities where node prices are tracked by CAISO", "current_block_number_for_optimism": "Get the current block number of the Optimism blockchain.", "entities_for_wealth_reader_api": "Obtiene el listado de entidades soportadas y la información necesaria para dibujar el formulario de login de la entidad.\n", "reviews_list_for_kohls": "List reviews relating to a product", "teams_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve information about this year's F1 teams. The result will be a breakdown of the Team's Rank (current position in the standings), Points, Team name & Drivers.", "user_followers_for_100_success_instagram_api_scalable_robust": "Get user followers list", "user_followings_for_tiktok_scraper_v2": "Get user followings.", "user_likes_for_twitter_data": "user-likes"}, "aseqs": [{"api_name": "entities_for_wealth_reader_api", "api_action": "\nAction: entities_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "entities_for_wealth_reader_api"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"entities_for_wealth_reader_api\",\n}"}]}
{"URL": "28434", "query": "I'm a finance student and I need to analyze the exchange rates. Can you provide the latest rates for 200 USD? I also want to convert 150 USD to GBP using the Convert Currency API.", "api_names": ["convert_currency_for_currency_converter_pro", "latest_rates_for_currency_converter_pro", "Finish", "north_america_for_nomad_list_cities", "currentconstructor_sstanding_for_formula_1_fixed", "languages_for_referential", "echo_for_oauthecho", "e1_for_test1", "random_for_manatee_jokes", "coordinates_latitude_longitude_to_address_for_address_from_to_latitude_longitude", "get_the_latest_remote_jobs_for_remote_jobs_api", "all_airplanes_for_airplanesdb", "heartbeat_for_daily_sec_financial_statement_dataset", "getrecentanimes_for_gogoanime_data_api", "get_mp3_for_youtube_mp3_download"], "api_descs": {"Finish": "No description available.", "all_airplanes_for_airplanesdb": "Get complete data of all airplanes.", "convert_currency_for_currency_converter_pro": "Convert any amount from one currency to another.", "coordinates_latitude_longitude_to_address_for_address_from_to_latitude_longitude": "By using this geographic tool you can get an address from lat long coordinates.", "currentconstructor_sstanding_for_formula_1_fixed": "Current constructor standings can always be obtained using this endpoint.", "e1_for_test1": "E2 is my first endpoint", "echo_for_oauthecho": " ", "get_mp3_for_youtube_mp3_download": "Convert to MP3 at the default bit rate.", "get_the_latest_remote_jobs_for_remote_jobs_api": "Get a list of the latest 20 remote jobs", "getrecentanimes_for_gogoanime_data_api": "Get Animes From googanime Recent Page", "heartbeat_for_daily_sec_financial_statement_dataset": "A simple heartbeat that returns the time of the server to check if the connection to the server is working.", "languages_for_referential": "List the world's languages translated into 20 languages", "latest_rates_for_currency_converter_pro": "Real-time exchange rate data of 170 world currencies. Updated every 10min.", "north_america_for_nomad_list_cities": "Get North America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "random_for_manatee_jokes": "retrieves a random manatee joke"}, "aseqs": [{"api_name": "latest_rates_for_currency_converter_pro", "api_action": "\nAction: latest_rates_for_currency_converter_pro\nAction Input: {\n  \"base\": \"USD\",\n  \"currencies\": \"GBP\"\n}", "api_reaction": null}, {"api_name": "convert_currency_for_currency_converter_pro", "api_action": "\nAction: convert_currency_for_currency_converter_pro\nAction Input: {\n  \"amount\": 150,\n  \"is_from\": \"USD\",\n  \"to\": \"GBP\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_rates_for_currency_converter_pro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "convert_currency_for_currency_converter_pro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_rates_for_currency_converter_pro"}}]}
{"URL": "44684", "query": "I am working on a project that requires mapping cities to countries. Can you provide me with a list of cities along with their country names and ISO codes?", "api_names": ["getcountrylist_for_city_list", "getcity_for_city_list", "Finish", "get_cruises_details_for_tripadvisor", "directory_for_phone", "send_sms_for_scraptik", "get_specific_country_for_europe_fuel_prices", "get_synonyms_for_english_synonyms", "v1_motorcycles_for_motorcycles_by_api_ninjas", "v1_serialsearch_for_uspto_trademark", "simple_qr_code_for_custom_qr_code_with_logo_v2", "regions_for_streamlinewatch_streaming_guide", "hotels_dynamic_for_zumata", "echo_get_for_echo_api", "crypto_info_for_investing_financial_stocks"], "api_descs": {"Finish": "No description available.", "crypto_info_for_investing_financial_stocks": "get crypto all info page by slug name", "directory_for_phone": "Get all the Local Area Codes from a given Country", "echo_get_for_echo_api": "Make a HTTP GET request with the code you like to get in the response.", "get_cruises_details_for_tripadvisor": "-", "get_specific_country_for_europe_fuel_prices": "Get fuel prices for a specific country", "get_synonyms_for_english_synonyms": "Get all synonyms from a given english word", "getcity_for_city_list": "return list of citis", "getcountrylist_for_city_list": "return list of all country include ISO code and ISO3 code and phonecode", "hotels_dynamic_for_zumata": "", "regions_for_streamlinewatch_streaming_guide": "Retrieve the list of regions covered by the API", "send_sms_for_scraptik": "Send SMS code to you mobile.", "simple_qr_code_for_custom_qr_code_with_logo_v2": "This endpoin returns simple qr code with the possiblity to customize the color.", "v1_motorcycles_for_motorcycles_by_api_ninjas": "API Ninjas Motorcycles API endpoint. Returns up to 30 motorcycle results matching the input name parameters. For searches that yield > 30 results, please use the offset parameter.\n\nEither **make** or **model** parameter must be set.", "v1_serialsearch_for_uspto_trademark": "Does a serial number search and returns details about the trademark attributes."}, "aseqs": [{"api_name": "getcity_for_city_list", "api_action": "\nAction: getcity_for_city_list\nAction Input: {}", "api_reaction": null}, {"api_name": "getcountrylist_for_city_list", "api_action": "\nAction: getcountrylist_for_city_list\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getcity_for_city_list"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountrylist_for_city_list"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcity_for_city_list"}}]}
{"URL": "21241", "query": "I'm a teacher and I want to introduce my students to the concept of summarizing videos. Can you provide me with a summary of the YouTube video titled 'The History of Ancient Rome' by CrashCourse? Please include the video author and ID as well.", "api_names": ["v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer", "v1_youtube_summarizevideofromcache_for_youtube_video_summarizer", "Finish", "count_for_onlyfans", "top_free_mac_apps_for_app_store", "getbodypartvalues_for_the_cancer_imaging_archive", "query_for_hexagon_by_location_and_resolution_for_uk_boundaries_io", "album_for_deezer", "analyze_for_endlessmedicalapi", "leaguetotalteamevents_for_basketapi", "listoforders_for_sandbox_ecombr_com_04_orders", "attrition_flag_for_credit_card_prediction"], "api_descs": {"Finish": "No description available.", "album_for_deezer": "An album object", "analyze_for_endlessmedicalapi": "Analyzes provided data set", "attrition_flag_for_credit_card_prediction": "Attrition_Flag Get request", "count_for_onlyfans": "Used to get the total expired followers\n\nMust hit the auth endpoint first!", "getbodypartvalues_for_the_cancer_imaging_archive": "Set of all body part names filtered by query keys", "leaguetotalteamevents_for_basketapi": "Get the both home and away last 5 matches for a specific basketball league in a given tournament and season.", "listoforders_for_sandbox_ecombr_com_04_orders": "API Instructions: https://www.ecombr.com/instrucoes-api-i-28.html\n\nSell on ecombr.com marketplace: https://www.ecombr.com/vender-no-ecombr-i-26.html", "query_for_hexagon_by_location_and_resolution_for_uk_boundaries_io": "Query for Hexagon by Location and Resolution", "top_free_mac_apps_for_app_store": "Get list of the top free mac apps", "v1_youtube_summarizevideofromcache_for_youtube_video_summarizer": "Return the video summary of a given YouTube video that has already been summarized. The summary is provided in markdown format.", "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer": "Create a video summary of a given YouTube video. The summary is provided in markdown format."}, "aseqs": [{"api_name": "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer", "api_action": "\nAction: v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer\nAction Input: {\n  \"videourl\": \"https://www.youtube.com/watch?v=C8yRZk-jXaI\"\n}", "api_reaction": null}, {"api_name": "v1_youtube_summarizevideofromcache_for_youtube_video_summarizer", "api_action": "\nAction: v1_youtube_summarizevideofromcache_for_youtube_video_summarizer\nAction Input: {\n  \"videourl\": \"https://www.youtube.com/watch?v=C8yRZk-jXaI\"\n}", "api_reaction": null}, {"api_name": "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer", "api_action": "\nAction: v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer\nAction Input: {\n  \"videourl\": \"https://www.youtube.com/watch?v=LBU-oQ_cDwo\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_youtube_summarizevideowithtoken_for_youtube_video_summarizer"}}]}
{"URL": "48198", "query": "I'm writing an article about Instagram influencers and I need to gather information about their followers. Can you fetch the followers of multiple users? Additionally, I'd like to gather some information about the users and check out their profile pictures.", "api_names": ["user_followers_for_instagram_v13", "user_data_for_instagram_v13", "Finish", "followers_by_pk_for_instagram_bulk_profile_scrapper", "logoutuser_for_my_api_12345", "gets_products_for_amazon_india_scraper_v3", "fetch_business_info_for_whatsapp_scraper", "random_boy_group_for_k_pop", "get_one_card_for_poker_cards_cartomancy", "get_show_episodes_for_burning_series_api", "reverse_search_by_image_for_webit_image_search", "coindesk_for_cryptocurrency_news", "get_schedule_for_league_of_legends_esports", "logoutuser_for_thisisapublicapi_v2", "sample_user_read_for_quickmocker", "s_ytd_for_s_ytd", "cheerio_for_html_2_json", "past_1_month_for_the_sandbox_sand"], "api_descs": {"Finish": "No description available.", "cheerio_for_html_2_json": "returns the HTML page as JSON or Markdown", "coindesk_for_cryptocurrency_news": "Get the top latest news from CoinDesk.", "fetch_business_info_for_whatsapp_scraper": "The endpoint will provide: `description`, `website`, `email`, `business hours`, `address` and `category`; if the number is a whatsapp for business account.", "followers_by_pk_for_instagram_bulk_profile_scrapper": "Fetch followers list\n\nCarry forward nextMaxId to retrieve next batch", "get_one_card_for_poker_cards_cartomancy": "This is a random card.", "get_schedule_for_league_of_legends_esports": "In this method you can get all schedule for the leagues. You can filter multiple leagueId with join %  seperator.", "get_show_episodes_for_burning_series_api": "- page url\n- stream urls\n- episode title", "gets_products_for_amazon_india_scraper_v3": "Get The Product Details Using A Identifier(id)", "logoutuser_for_my_api_12345": "", "logoutuser_for_thisisapublicapi_v2": "", "past_1_month_for_the_sandbox_sand": "Get price data for the past month. (~30 days)\n\n~hourly data points.", "random_boy_group_for_k_pop": "Get random boy-group", "reverse_search_by_image_for_webit_image_search": "Reverse search by Image between billion of images.\n\nThis endpoint supports \"URL\" parameter only. For \"image\" file upload, use POST endpoint.", "s_ytd_for_s_ytd": "Download vids", "sample_user_read_for_quickmocker": "Sample user read", "user_data_for_instagram_v13": "Get instagram user info by username.", "user_followers_for_instagram_v13": "Get instagram user followers by user id."}, "aseqs": [{"api_name": "user_followers_for_instagram_v13", "api_action": "\nAction: user_followers_for_instagram_v13\nAction Input: {\n  \"count\": 50,\n  \"userid\": 1\n}", "api_reaction": null}, {"api_name": "user_data_for_instagram_v13", "api_action": "\nAction: user_data_for_instagram_v13\nAction Input: {\n  \"username\": \"username1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_followers_for_instagram_v13"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_followers_for_instagram_v13", "api_action": "\nAction: user_followers_for_instagram_v13\nAction Input: {\n  \"count\": 50,\n  \"userid\": 2\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_followers_for_instagram_v13", "api_action": "\nAction: user_followers_for_instagram_v13\nAction Input: {\n  \"count\": 50,\n  \"userid\": [\n    2,\n    3\n  ]\n}", "api_reaction": null}}]}
{"URL": "40725", "query": "I'm a huge fan of Game of Thrones and I want to know everything about the characters. Can you provide me with a list of all the characters, including their names, families, images, and any additional information available? It would be great if you could also provide me with the continents featured in the series.", "api_names": ["get_all_characters_for_game_of_thrones", "get_continents_for_game_of_thrones", "Finish", "get_your_whois_batches_for_bulk_whois", "lookup_for_satellite_api", "get_download_url_mp3_mp4_for_youtube_mp3_converter", "random_proxy_for_proxypage", "artist_discography_overview_for_spotify", "group_management_api_access_for_registered_group_list_for_catchloc", "get_all_state_names_for_restaurants_near_me_usa", "airports_by_keyword_for_carbonsutra", "getqrcode_for_maytapi_whatsapp", "job_details_for_jsearch", "veiculo_tipo_id_marca_for_veiculos_api", "teamtournaments_for_icehockeyapi", "detik_detail_for_indonesia_news", "flask_app_for_flask", "image_for_testpk"], "api_descs": {"Finish": "No description available.", "airports_by_keyword_for_carbonsutra": "Returns the lists of airport names and IATA code which matches the keyword.", "artist_discography_overview_for_spotify": "Get artist discography overview", "detik_detail_for_indonesia_news": "detik-detail", "flask_app_for_flask": "flask application", "get_all_characters_for_game_of_thrones": "Returns all of the GOT characters", "get_all_state_names_for_restaurants_near_me_usa": "GET all State names", "get_continents_for_game_of_thrones": "Returns all GOT continents", "get_download_url_mp3_mp4_for_youtube_mp3_converter": "Get Download URL", "get_your_whois_batches_for_bulk_whois": "Get a list of your batches.", "getqrcode_for_maytapi_whatsapp": "Gets the image of QR-Code.", "group_management_api_access_for_registered_group_list_for_catchloc": "API access for group information.\n\nrequired parameter : api (api.common.group.get.list)", "image_for_testpk": "image", "job_details_for_jsearch": "Get all job details, including additional application options / links, employer reviews and estimated salaries for similar jobs.", "lookup_for_satellite_api": "Lookup active Sleeper leagues for a given username.", "random_proxy_for_proxypage": "Get random proxy,\n\nchoose type and country", "teamtournaments_for_icehockeyapi": "This operation returns the unique tournaments in which an Ice Hockey team has participated.", "veiculo_tipo_id_marca_for_veiculos_api": "Retorna listagem dos veículos de uma determinada marca."}, "aseqs": [{"api_name": "get_all_characters_for_game_of_thrones", "api_action": "\nAction: get_all_characters_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "get_continents_for_game_of_thrones", "api_action": "\nAction: get_continents_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_characters_for_game_of_thrones", "api_action": "\nAction: get_all_characters_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "get_continents_for_game_of_thrones", "api_action": "\nAction: get_continents_for_game_of_thrones\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_continents_for_game_of_thrones", "api_action": "\nAction: get_continents_for_game_of_thrones\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_characters_for_game_of_thrones"}}]}
{"URL": "56994", "query": "Could you assist me in retrieving the discipline records of student 2? I would like to know the date, stage, incidence, and description of each discipline entry. Also, can you provide the attendance records of student 2 and retrieve the date, stage, extraprogramatic activities, nonattendance, justification, and comments for each entry?", "api_names": ["inasistencias_2_for_colegiosantaana", "disciplina_2_for_colegiosantaana", "Finish", "twitch_for_check_username", "getactiveingredients_for_agrofitdata", "getallrecordssince_for_360_business_tool", "get_country_list_for_travel_hacking_tool", "getproductbyid_for_feku_json", "get_call_for_philippines_driving_license_ocr", "business_name_for_for_business_starter_api", "anime_illustrations_by_pagination_for_premium_anime_mobile_wallpapers_illustrations", "getportfoliosettlements_for_kalshi_trading_api", "get_a_user_s_orders_for_tradier", "banks_by_country_for_bank_swift_codes", "subscriptions_subscriptionid_for_signl4_critical_mobile_alerting"], "api_descs": {"Finish": "No description available.", "anime_illustrations_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime illustrations made by anime fans:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "banks_by_country_for_bank_swift_codes": "Returns list of banks for a country (use two letter ISO country code)", "business_name_for_for_business_starter_api": "Generate a Business name for existing idea", "disciplina_2_for_colegiosantaana": "Disciplina alumno 2", "get_a_user_s_orders_for_tradier": "", "get_call_for_philippines_driving_license_ocr": "Used to fetch api result using the request id received in responses.", "get_country_list_for_travel_hacking_tool": "This endpoint returns a list of country codes (ISO-3166).", "getactiveingredients_for_agrofitdata": " ", "getallrecordssince_for_360_business_tool": "Get all data modified since", "getportfoliosettlements_for_kalshi_trading_api": "Endpoint for getting the logged-in member's settlements historical track.", "getproductbyid_for_feku_json": "Get Specific Product by ID", "inasistencias_2_for_colegiosantaana": "Inasistencia de alumnos 2", "subscriptions_subscriptionid_for_signl4_critical_mobile_alerting": " ", "twitch_for_check_username": "Check username on Twitch"}, "aseqs": [{"api_name": "disciplina_2_for_colegiosantaana", "api_action": "\nAction: disciplina_2_for_colegiosantaana\nAction Input: {}", "api_reaction": null}, {"api_name": "inasistencias_2_for_colegiosantaana", "api_action": "\nAction: inasistencias_2_for_colegiosantaana\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "inasistencias_2_for_colegiosantaana"}}, {"state": "generated_by_agent", "aseq": {"api_name": "disciplina_2_for_colegiosantaana", "api_action": "\nAction: disciplina_2_for_colegiosantaana\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "disciplina_2_for_colegiosantaana"}}]}
{"URL": "19555", "query": "I am a software developer working on a location-based mobile app. I need to integrate offline map functionality into the app. Can you recommend a tool that offers API functions for downloading and storing offline map tiles? It would be helpful if the tool supports both OpenStreetMap standard tiles and English tiles.", "api_names": ["local_osm_v1_z_x_y_png_for_offline_maptiles", "en_map_v1_z_x_y_png_for_offline_maptiles", "Finish", "matches_for_official_world_cup", "get_basic_data_for_all_counties_in_a_single_state_for_us_counties", "gethistoricalprices_for_yahoo_finance_historical_stock_prices", "random_for_typography", "haber_for_kolektifapi", "reverse_geocode_for_geocode_forward_and_reverse", "charts_get_top_songs_in_city_for_shazam_api", "v1_vinlookup_for_vin_lookup_by_api_ninjas", "getpetbyid_for_thisshouldbefree"], "api_descs": {"Finish": "No description available.", "charts_get_top_songs_in_city_for_shazam_api": "return top songs in city", "en_map_v1_z_x_y_png_for_offline_maptiles": "Download English tile", "get_basic_data_for_all_counties_in_a_single_state_for_us_counties": "counties", "gethistoricalprices_for_yahoo_finance_historical_stock_prices": "Get historical prices.", "getpetbyid_for_thisshouldbefree": "Returns a single pet", "haber_for_kolektifapi": "«ntv.com.tr» Son Dakika Haberleri Verileri", "local_osm_v1_z_x_y_png_for_offline_maptiles": "Download OpenStreetMap standard tile", "matches_for_official_world_cup": "", "random_for_typography": " ", "reverse_geocode_for_geocode_forward_and_reverse": "Get an address from a lat,lng coordinate.", "v1_vinlookup_for_vin_lookup_by_api_ninjas": "API Ninjas VIN Lookup API endpoint. Returns key vehicle information including manufacturer, country of origin and model year for a given VIN."}, "aseqs": [{"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: local_osm_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 10,\n  \"x\": 123,\n  \"y\": 456\n}", "api_reaction": null}, {"api_name": "en_map_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: en_map_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 10,\n  \"x\": 123,\n  \"y\": 456\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_thisshouldbefree"}}, {"state": "generated_by_agent", "aseq": {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles"}}]}
{"URL": "34245", "query": "Can you decode the VIN of my car? The VIN number is JMFXDGL3WNZ002145, and it is registered in New Zealand. I need information about the body type, fuel type, make, model, and year of the vehicle.", "api_names": ["nz_decode_for_vin_decoder_v4", "Finish", "sendsms_for_rivet_sms", "fetch_newsletter_lists_for_zigatext_global_bulk_sms_otp", "getqrcode_for_green_api", "gettransactionsbyaccount_for_virtual_accounts_api", "historical_rates_for_commodity_rates_api", "medialikers_for_instagram_v6", "api_points_for_plugin_proto", "get_data_by_id_for_scrapemaster", "get_all_fantasy_5_for_fantasy_5", "get_calendar_components_for_enoch_calendar"], "api_descs": {"Finish": "No description available.", "api_points_for_plugin_proto": "For unlimited lucky", "fetch_newsletter_lists_for_zigatext_global_bulk_sms_otp": "Fetch Newsletter Lists", "get_all_fantasy_5_for_fantasy_5": "Get all winning drawings in Fantasy 5", "get_calendar_components_for_enoch_calendar": "Get the calendar components to build the current Hebrew month calendar from the supplied Hebrew month number, if supplied, or the first Hebrew month and, a supplied year, or this year", "get_data_by_id_for_scrapemaster": "This endpoint will return all data from a specific tag and its id.", "getqrcode_for_green_api": "Документация [QR](https://green-api.com/docs/api/account/QR/)", "gettransactionsbyaccount_for_virtual_accounts_api": "To get transactions by account.", "historical_rates_for_commodity_rates_api": "Historical rates are available for most symbols all the way back to the year 2021. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.\n\nNote: All the commodities rates you get need using ANY currency as a base currency (base parameter) need to be divided by 1\nWe return the values based on the base currency. For example, for 1 USD the return is a number like 0.00055307742 for Gold (XAU).\nTo get the gold rate per troy ounce in USD: 1/0.00055307742 = 1808.06 USD", "medialikers_for_instagram_v6": "Get one media's likers, batch_size range from 1 to 50.", "nz_decode_for_vin_decoder_v4": "NZ Decode", "sendsms_for_rivet_sms": "Send single messages"}, "aseqs": [{"api_name": "nz_decode_for_vin_decoder_v4", "api_action": "\nAction: nz_decode_for_vin_decoder_v4\nAction Input: {\n  \"vin\": \"JMFXDGL3WNZ002145\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "nz_decode_for_vin_decoder_v4"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nz_decode_for_vin_decoder_v4", "api_action": "\nAction: nz_decode_for_vin_decoder_v4\nAction Input: {\n  \"vin\": \"JMFXDGL3WNZ002145\",\n  \"desired_info\": [\n    \"body_type\",\n    \"fuel_type\",\n    \"make\",\n    \"model\",\n    \"year\"\n  ]\n}", "api_reaction": null}}]}
{"URL": "2379", "query": "My company is organizing a sports event and we want to offer betting options. Can you fetch the latest odds for the matches in the Bildbet sports category? Additionally, provide the details of the matches to display on our website.", "api_names": ["matches_for_bildbet", "odds_for_bildbet", "Finish", "get_tide_sea_level_data_for_stormglass_complete", "get_list_of_voices_for_text_to_speech_pro", "getmytasks_free_of_use_for_yandex_serp", "show_individual_order_for_coinbase", "search_for_simple_youtube_search", "crimes_with_no_location_for_data_police_uk", "ip_lookup_api_for_weatherapi_com", "getrandomuser_for_random_chunk_api", "topassistsbyseasontotalassists_for_nba_statistics_api", "makes_for_car_data", "search_for_videos_movies_for_youtube_media_downloader", "get_video_without_watermark_for_tiktok_private", "get_hadiths_by_collection_for_hadiths_api", "getcompaniesbytopic_for_a_i_smartable", "getlivenow_for_sport_odds"], "api_descs": {"Finish": "No description available.", "crimes_with_no_location_for_data_police_uk": "Returns a list of crimes where the responsible force hasn't specified a location.", "get_hadiths_by_collection_for_hadiths_api": "Each collection has their own categories, You can check the collection and category endpoints to get more information. Each hadiths is under a category and each category is under a collection. \nExample:\n{COLLECTION} ---> {CATEGORY} ---> {HADITHS}\n{Sahih Bukhari} ---> {Revelation}  --->{hadiths}\nYou can seperate the hadiths by their specific collections.\nBy default limit is 10 and page is 1. the limit and page can be altered to suit your taste.", "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices", "get_tide_sea_level_data_for_stormglass_complete": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.", "get_video_without_watermark_for_tiktok_private": "Get Video Without Watermark", "getcompaniesbytopic_for_a_i_smartable": "Get artificial intelligence companies by topic.", "getlivenow_for_sport_odds": "GetLivenow data now", "getmytasks_free_of_use_for_yandex_serp": "Retrieves your all tasks. Use this endpoint when lost your **task_id** . Use this endpoint how much you want. **It's free of charge**!", "getrandomuser_for_random_chunk_api": "Returns random user data such as name, e-mail, etc.", "ip_lookup_api_for_weatherapi_com": "IP Lookup API method allows a user to get up to date information for an IP address in json.", "makes_for_car_data": "get a list of supported makes", "matches_for_bildbet": "Latest Matches for Bildbet", "odds_for_bildbet": "Latest Odds for Bildbet", "search_for_simple_youtube_search": "Make youtube search", "search_for_videos_movies_for_youtube_media_downloader": "This endpoint searches for YouTube videos (movies) with optional filters. Pagination scraping is supported. Thumbnails will not be blurred by age safety.", "show_individual_order_for_coinbase": "Show an individual merchant order.", "topassistsbyseasontotalassists_for_nba_statistics_api": "## Return top 20 players by assists in descending order.\n\n_Season is specified in the URL._"}, "aseqs": [{"api_name": "matches_for_bildbet", "api_action": "\nAction: matches_for_bildbet\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_bildbet", "api_action": "\nAction: odds_for_bildbet\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "matches_for_bildbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_bildbet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_bildbet"}}]}
{"URL": "63031", "query": "What is the kill death ratio for my latest gaming session with 5 kills and 3 deaths? Can you also generate a random UUID for me? Finally, fetch the skin associated with my Minecraft UUID '34567890-abcd-efgh-ijkl-0987654321ba'.", "api_names": ["random_uuid_for_teamriverbubbles_random_utilities", "kd_calculator_for_teamriverbubbles_random_utilities", "get_skin_from_uuid_for_teamriverbubbles_random_utilities", "Finish", "house_prices_estimate_for_zoopla_v2", "get_specific_burger_for_burgers_hub", "teste_for_shoxbps", "get_exercises_for_musclewiki", "get_id_for_similar_movies", "postcodes_postcode_for_uk_postcode_api", "stays_properties_detail_policies_for_booking_com_v2", "etablissements_d_une_entreprise_for_ridet_nc", "specified_album_information_from_artist_for_halsey_lyric_snippets", "getstatsbymonth_for_trinidad_covid_19_statistics", "getdirectdebitinitiationinstruction_for_transaction", "gameweekgamesbyclub_for_premier_league_stats", "transactions_feed_for_crypto_whale_transactions", "v1_0_for_bdapi", "basic_daily_for_daily_sec_financial_statement_dataset", "anime_for_anime_manga_and_novels_api"], "api_descs": {"Finish": "No description available.", "anime_for_anime_manga_and_novels_api": "Get a list of all anime", "basic_daily_for_daily_sec_financial_statement_dataset": "This endpoints delivers the daily zip files of filed 10-q and 10-k reports. With the basic subcription, you only have access to daily zip files older than 21 days.\n\nThe structure of the data is similar as in the SEC financial statement dataset (https://www.sec.gov/files/aqfs.pdf), with the exception  that not TAG file is present and that the SUB file only contains a subset of the attributes.\n\nPlease not that the https-url has to end with a \"/\": \nhttps://daily-sec-financial-statement-dataset.p.rapidapi.com/basic/day/2022-11-10**/**", "etablissements_d_une_entreprise_for_ridet_nc": "Affiche les établissement d'une entreprise en Nouvelle Calédonie.", "gameweekgamesbyclub_for_premier_league_stats": "Get all games from a particular gameweek and club.", "get_exercises_for_musclewiki": "Get all Exercises", "get_id_for_similar_movies": "get the id of your movie", "get_skin_from_uuid_for_teamriverbubbles_random_utilities": "gets a skin from a uuid", "get_specific_burger_for_burgers_hub": "Get specific **Burger**  by there **ID**", "getdirectdebitinitiationinstruction_for_transaction": "Use this operation to retrieve a direct debit initiation instruction by ID (UETR).", "getstatsbymonth_for_trinidad_covid_19_statistics": "This endpoint fetches Trinidad & Tobago Covid 19 statistics by month. For a valid response, the months are input as \"01\" or \"12\" and not the actual month name such as \"January\" or \"December\".", "house_prices_estimate_for_zoopla_v2": "Returned list of estimated house prices", "kd_calculator_for_teamriverbubbles_random_utilities": "Calculates a kd (kill death ratio)", "postcodes_postcode_for_uk_postcode_api": "Gets addresses for the given UK PostCode", "random_uuid_for_teamriverbubbles_random_utilities": "creates a random uuid v4", "specified_album_information_from_artist_for_halsey_lyric_snippets": "This endpoint retrieves the specified album by the specified artist and returns it in the response.", "stays_properties_detail_policies_for_booking_com_v2": "Get detail policies", "teste_for_shoxbps": "teste", "transactions_feed_for_crypto_whale_transactions": "Get latest huge whale transactions for most popular blockchains.\n\n**Filter by txn value. Add parameters as below:**\n<_amount_usd=10000 \nOR\n>amount_usd=10000\n\n**Filter by blockchain:**\n t_blockchain=bitcoin\n\nAvailable blockchains: bitcoin, bitcoin-cash, ethereum, bitcoin-sv, litecoin, tron, ripple, zcash, dogecoin, neo, eos, dash, ethereum-classic, tezos, binancechain, stellar, groestlcoin, icon, steem, cosmos, decred, verge, hypercash, siacoin\n\n\n**Pagination:**\nAdd parameter: size=100", "v1_0_for_bdapi": "`/v1.0`\nPrefix endpoint for version 1.0\nResponse provides a list of available endpoints in version 1.0"}, "aseqs": [{"api_name": "kd_calculator_for_teamriverbubbles_random_utilities", "api_action": "\nAction: kd_calculator_for_teamriverbubbles_random_utilities\nAction Input: {\n  \"kills\": 5,\n  \"deaths\": 3\n}", "api_reaction": null}, {"api_name": "random_uuid_for_teamriverbubbles_random_utilities", "api_action": "\nAction: random_uuid_for_teamriverbubbles_random_utilities\nAction Input: {}", "api_reaction": null}, {"api_name": "get_skin_from_uuid_for_teamriverbubbles_random_utilities", "api_action": "\nAction: get_skin_from_uuid_for_teamriverbubbles_random_utilities\nAction Input: {\n  \"uuid\": \"34567890-abcd-efgh-ijkl-0987654321ba\"\n}", "api_reaction": null}, {"api_name": "random_uuid_for_teamriverbubbles_random_utilities", "api_action": "\nAction: random_uuid_for_teamriverbubbles_random_utilities\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "kd_calculator_for_teamriverbubbles_random_utilities"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_uuid_for_teamriverbubbles_random_utilities"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_skin_from_uuid_for_teamriverbubbles_random_utilities", "api_action": "{\"uuid\": \"34567890-abcd-efgh-i123-k1234567890ab\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "kd_calculator_for_teamriverbubbles_random_utilities"}}, {"state": "generated_by_agent", "aseq": {"api_name": "kd_calculator_for_teamriverbubbles_random_utilities", "api_action": "\nAction: kd_calculator_for_teamriverbubbles_random_utilities\nAction Input: {\n  \"kills\": 5,\n  \"deaths\": 3\n}", "api_reaction": null}}]}
{"URL": "85507", "query": "I need to gather supply chain information for my company. Can you assist me in retrieving the supply chain data using the Corporate Supply Chain API? The stock symbol for my company is ABC. Thank you for your help.", "api_names": ["supply_chain_for_corporate_supply_chain", "Finish", "player_for_national_football_players", "categories_for_keto_diet", "get_ratings_by_restaurant_for_wyre_data", "read_group_for_ironwifi", "get_all_recipe_for_ghana_food_recipe_api", "getlatestbyedinetcode_for_jp_funda"], "api_descs": {"Finish": "No description available.", "categories_for_keto_diet": "Lists all available categories of keto recipe.", "get_all_recipe_for_ghana_food_recipe_api": "This endpoint gets all food recipes.", "get_ratings_by_restaurant_for_wyre_data": "Find a Food Hygiene Rating for a restaurant", "getlatestbyedinetcode_for_jp_funda": "### Return latest securities report data of the company specified with edinet code.\nNote: If  the company doesn't  have a consolidated subsidiary,  all of consolidated management indicators become null.　But you can obtain data instead of consolidated management indicators from non consolidated management indicators", "player_for_national_football_players": "Returns player info of player specified (i.e. name, number, position, team). Use hyphenated name with capitals (i.e. Tom-Brady)", "read_group_for_ironwifi": "READ GROUP", "supply_chain_for_corporate_supply_chain": "Get supply chain information."}, "aseqs": [{"api_name": "supply_chain_for_corporate_supply_chain", "api_action": "\nAction: supply_chain_for_corporate_supply_chain\nAction Input: {\n  \"ticker\": \"ABC\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "supply_chain_for_corporate_supply_chain"}}, {"state": "generated_by_agent", "aseq": {"api_name": "supply_chain_for_corporate_supply_chain", "api_action": "\nAction: supply_chain_for_corporate_supply_chain\nAction Input: {\n  \"ticker\": \"ABC\"\n}"}}]}
{"URL": "5946", "query": "I'm planning to surprise my friends with a collection of Instagram posts from our last trip. Can you help me retrieve the media info for the posts uploaded by the user with the username 'abdallhdev'? Also, I would appreciate it if you could provide the media download links. Thanks a lot!", "api_names": ["get_user_info_by_user_id_for_instagram_looter", "get_user_media_by_user_id_for_instagram_looter", "Finish", "get_stories_for_instagram_api_media_downloader", "v1_animals_for_animals_by_api_ninjas", "dashboard_free_access_for_email_scraper", "links_finder_for_explorarc_s_link_finder", "author_author_for_poetry_db", "locations_list_deprecated_for_the_fork_the_spoon", "get_version_for_face_detection_v3", "getuserbyname_for_petstore_blitz", "melodyn_for_melodyn"], "api_descs": {"Finish": "No description available.", "author_author_for_poetry_db": "All poems on Poetry DB by a specific poet", "dashboard_free_access_for_email_scraper": "Call this endpoint (or click 'Test Endpoint') to get access to the dashboard.", "get_stories_for_instagram_api_media_downloader": "Receive all stories with download url for videos and photos", "get_user_info_by_user_id_for_instagram_looter": "Get **Instagram** user info by **user_id**", "get_user_media_by_user_id_for_instagram_looter": "Get **Instagram** user media by **user_id**", "get_version_for_face_detection_v3": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getuserbyname_for_petstore_blitz": " ", "links_finder_for_explorarc_s_link_finder": "ExplorArc's Link Finder API simplifies the process of finding relevant links by returning results based on a given query. With this powerful tool, users can easily access the information they need to streamline their workflow and achieve their goals", "locations_list_deprecated_for_the_fork_the_spoon": "List relating locations by Google place id", "melodyn_for_melodyn": "melodyn", "v1_animals_for_animals_by_api_ninjas": "API Ninjas Animals API endpoint. Returns up to 10 results matching the input name parameter."}, "aseqs": [{"api_name": "get_user_media_by_user_id_for_instagram_looter", "api_action": "\nAction: get_user_media_by_user_id_for_instagram_looter\nAction Input: {\n  \"count\": 10,\n  \"is_id\": 3681254342\n}", "api_reaction": null}, {"api_name": "get_user_info_by_user_id_for_instagram_looter", "api_action": "\nAction: get_user_info_by_user_id_for_instagram_looter\nAction Input: {\n  \"is_id\": 3681254342\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_user_media_by_user_id_for_instagram_looter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_info_by_user_id_for_instagram_looter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_stories_for_instagram_api_media_downloader"}}]}
{"URL": "13754", "query": "Can you help me update my client details? I need to change my email to 'john@example.com', my last name to 'Doe', and my first name to 'John'. Additionally, update my password to 'password123' and my login to 'johndoe'.", "api_names": ["update_for_ptl", "Finish", "driver_s_quotes_by_id_for_f1_drivers_quotes", "hex_to_hsl_for_convexity", "levels_category_for_woo_temp", "sport_markets_live_straight_for_pinaculo", "get_the_status_of_your_movie_renders_for_json2video", "to_get_a_list_all_the_supported_languages_by_this_api_endpoint_for_simple_elegant_translation_service"], "api_descs": {"Finish": "No description available.", "driver_s_quotes_by_id_for_f1_drivers_quotes": "Gets a quote by its ID.", "get_the_status_of_your_movie_renders_for_json2video": "Get a list of your movie renders, in what step of the rendering process they are and a link to the resulting video once they finish.", "hex_to_hsl_for_convexity": "Converts  hex color code to  hsl color code", "levels_category_for_woo_temp": "get levels category", "sport_markets_live_straight_for_pinaculo": "Get sport markets live straight.", "to_get_a_list_all_the_supported_languages_by_this_api_endpoint_for_simple_elegant_translation_service": "To get a list all the supported languages, execute this API, https://translate.pregnya.com/getSupportedLanguages", "update_for_ptl": "update endpoint"}, "aseqs": [{"api_name": "update_for_ptl", "api_action": "\nAction: update_for_ptl\nAction Input: {\n  \"info1\": \"john@example.com\",\n  \"info2\": \"Doe\",\n  \"info3\": \"John\"\n}", "api_reaction": null}, {"api_name": "update_for_ptl", "api_action": "\nAction: update_for_ptl\nAction Input: {\n  \"info1\": \"password123\",\n  \"info2\": \"johndoe\"\n}", "api_reaction": null}, {"api_name": "update_for_ptl", "api_action": "\nAction: update_for_ptl\nAction Input: {\n  \"info1\": \"password123\",\n  \"info2\": \"johndoe\",\n  \"info3\": \"\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "update_for_ptl"}}, {"state": "generated_by_agent", "aseq": {"api_name": "update_for_ptl", "api_action": "\nAction: update_for_ptl\nAction Input: {\n  \"info1\": \"john@example.com\",\n  \"info2\": \"Doe\",\n  \"info3\": \"John\"\n}\nAction Input: {\n  \"password\": \"password123\",\n  \"login\": \"johndoe\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "update_for_ptl", "api_action": "\nAction: update_for_ptl\nAction Input: {\n  \"info1\": \"johndoe\",\n  \"info2\": \"password123\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"update_for_ptl\",\n\t\"api_action\": \"\\nAction: update_for_ptl\\nAction Input: {\\n  \\\"info1\\\": \\\"john@example.com\\\",\\n  \\\"info2\\\": \\\"Doe\\\",\\n  \\\"info3\\\": \\\"John\\\"\\n}\",\n}"}]}
{"URL": "80643", "query": "I'm experiencing some issues with my API requests and I need assistance. Could you please validate my access using basic authentication and also view the request headers and body in JSON format? I hope this helps identify the problem.", "api_names": ["view_request_headers_and_body_for_pe_demo", "validate_access_using_basic_authentication_for_pe_demo", "Finish", "matching_for_locationiq", "currencies_for_skyscanner_api", "health_for_bps", "basic_endpoint_for_beekeeping_research", "random_uuid_for_teamriverbubbles_random_utilities", "specifications_by_group_for_motorcycle_specs_database", "most_recent_tafs_for_aviation_weather_center", "qrcode_for_qrcode_generator_base64", "get_user_collections_for_uniblock"], "api_descs": {"Finish": "No description available.", "basic_endpoint_for_beekeeping_research": "See full docs on https://research.docs.beekeeping.io", "currencies_for_skyscanner_api": "You can use the `/currencies` endpoint to retrieve the currencies that we support and information about how we format them in Skyscanner.", "get_user_collections_for_uniblock": "Gets all NFT collections of a specific user.", "health_for_bps": "Get the status of the API", "matching_for_locationiq": "Matching API matches or snaps given GPS points to the road network in the most plausible way.  Please note the request might result multiple sub-traces.  Large jumps in the timestamps (> 60s) or improbable transitions lead to trace splits if a complete matching could not be found. The algorithm might not be able to match all points. Outliers are removed if they can not be matched successfully.", "most_recent_tafs_for_aviation_weather_center": "Obtain the most recent TAFs from the past X hours. If you use the `mostRecent` flag only one TAF is returned. Otherwise, all TAFs from the specified time window will be returned.", "qrcode_for_qrcode_generator_base64": "qrcode to genrate base64 qrcode image", "random_uuid_for_teamriverbubbles_random_utilities": "creates a random uuid v4", "specifications_by_group_for_motorcycle_specs_database": "ArticleGetSpecificationGroup\n{specs} => engineAndTransmission\n{specs} => chassisSuspensionBrakesAndWheels\n{specs} => physicalMeasuresAndCapacities\n{specs} => otherSpecifications", "validate_access_using_basic_authentication_for_pe_demo": "Validate access using basic authentication.", "view_request_headers_and_body_for_pe_demo": "View the request headers and body in JSON format."}, "aseqs": [{"api_name": "validate_access_using_basic_authentication_for_pe_demo", "api_action": "\nAction: validate_access_using_basic_authentication_for_pe_demo\nAction Input: {}", "api_reaction": null}, {"api_name": "view_request_headers_and_body_for_pe_demo", "api_action": "\nAction: view_request_headers_and_body_for_pe_demo\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "validate_access_using_basic_authentication_for_pe_demo"}}, {"state": "generated_by_agent", "aseq": {"api_name": "view_request_headers_and_body_for_pe_demo"}}, {"state": "generated_by_agent", "aseq": {"api_name": "validate_access_using_basic_authentication_for_pe_demo"}}]}
{"URL": "8698", "query": "I am exploring my options for domain registration. Can you give me a list of available domains and their extensions? Additionally, I want to check the DNS settings for my existing domain with ID 576517.", "api_names": ["domainlist_for_neostrada_domains", "domain_for_neostrada_domains", "Finish", "get_classes_list_for_lost_ark_simple", "chart_referents_for_genius_song_lyrics", "agent_s_active_listings_for_zillow", "the_universal_cmms_api_for_makini_v2", "find_favicon_for_favicon_finder", "movie_comments_json_for_yts_am_torrent", "malefighterimageplaceholder_for_mmaapi", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real", "autocomplete_cities_for_autocomplete_india", "get_all_cities_for_biggest_cities", "get_info_by_city_for_zippopotam_us", "live_game_data_for_basketball_datafeeds_by_rolling_insights"], "api_descs": {"Finish": "No description available.", "agent_s_active_listings_for_zillow": "Agent's active listings", "autocomplete_cities_for_autocomplete_india": "Autocomplete Cities", "chart_referents_for_genius_song_lyrics": "Chart: Referents", "domain_for_neostrada_domains": "Get Domain data", "domainlist_for_neostrada_domains": "Get a list of your domains", "find_favicon_for_favicon_finder": "Find favicons for a URL", "gera_comprovante_rfb_for_consulta_cnpj_tempo_real": "Gera Comprovante da Receita Federal em PDF", "get_all_cities_for_biggest_cities": "Get all cites", "get_classes_list_for_lost_ark_simple": "List of Lost Ark Classes", "get_info_by_city_for_zippopotam_us": "", "live_game_data_for_basketball_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.", "malefighterimageplaceholder_for_mmaapi": "Get male fighter placeholder image", "movie_comments_json_for_yts_am_torrent": "Returns all the comments for the specified movie", "the_universal_cmms_api_for_makini_v2": "The universal\nCMMS API"}, "aseqs": [{"api_name": "domainlist_for_neostrada_domains", "api_action": "\nAction: domainlist_for_neostrada_domains\nAction Input: {}", "api_reaction": null}, {"api_name": "domain_for_neostrada_domains", "api_action": "\nAction: domain_for_neostrada_domains\nAction Input: {\n  \"domain_id\": \"576517\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "domainlist_for_neostrada_domains"}}, {"state": "generated_by_agent", "aseq": {"api_name": "domain_for_neostrada_domains"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_info_by_city_for_zippopotam_us"}}]}
{"URL": "56709", "query": "I'm a car dealer and I want to update my inventory with accurate information. Can you provide me with the VIN decoder information for the VIN '2G1WB5E32E1234567'? I want to include details such as the make, model, trim level, body style, engine type, transmission, fuel economy, and fuel type.", "api_names": ["vin_decoder_extended_for_vin_decoder", "Finish", "title_similars_for_netflix_v2", "me_for_ticketbud", "logo_for_comparable_companies", "status_for_getting_pdf_urls_for_carbon_management", "get_domaine_for_domaine_nc", "get_call_for_voter_card_verifications"], "api_descs": {"Finish": "No description available.", "get_call_for_voter_card_verifications": "Get call is to be made by appending request id to the url in the query parameter, to fetch the api results.", "get_domaine_for_domaine_nc": "Récupère les détails d'un domaine, cela permet de rechercher en mode API le contenu disponible en web sur [DOMAINE.nc](https://www.domaine.nc/whos).", "logo_for_comparable_companies": "The Logo API is used to show company logos in the frontend. The API link is already included in results returned by the Similar companies API.", "me_for_ticketbud": "Information about the current token holder", "status_for_getting_pdf_urls_for_carbon_management": "Get results in details from the task id.", "title_similars_for_netflix_v2": "Title Similars", "vin_decoder_extended_for_vin_decoder": "Get 168 items"}, "aseqs": [{"api_name": "vin_decoder_extended_for_vin_decoder", "api_action": "\nAction: vin_decoder_extended_for_vin_decoder\nAction Input: {\n  \"vin\": \"2G1WB5E32E1234567\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "vin_decoder_extended_for_vin_decoder"}}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the VIN decoder information for the given VIN and extract the required details such as make, model, trim level, body style, engine type, transmission, fuel economy, and fuel type,\n\t\"api_name\": \"vin_decoder_extended_for_vin_decoder\"\n}"}]}
{"URL": "1128", "query": "My friends and I are planning a trip to Efteling. It would be really helpful if we could get the latest blogs about the park and also the queue times for all the rides. Can you assist us with that?", "api_names": ["retrieve_all_queue_times_for_unofficial_efteling_api", "retrieve_the_latest_blogs_for_unofficial_efteling_api", "Finish", "charts_get_top_songs_in_world_for_shazam_api", "all_for_inventory_and_ecommerce_hosted_and_self_hosted_solution", "all_articles_for_news_v3", "get_all_latest_news_for_sri_lanka_news_api", "get_voice_for_anime_voice_waifu_ai_api", "combinations_for_papercliff", "get_player_by_id_for_shescoresapi", "historical_rates_for_metals_prices_rates_api", "cryptoninjas_for_crypto_news_v2"], "api_descs": {"Finish": "No description available.", "all_articles_for_news_v3": "Fetch all articles", "all_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "", "charts_get_top_songs_in_world_for_shazam_api": "get top songs in world", "combinations_for_papercliff": "Returns the 100 most popular combinations/triples of keywords with the corresponding number of news agencies and articles from which they have been cited", "cryptoninjas_for_crypto_news_v2": "Get the latest news from CryptoNinjas.", "get_all_latest_news_for_sri_lanka_news_api": "Get latest news from all the news sources.This route return all the latest news from each news source at once", "get_player_by_id_for_shescoresapi": "Get a player's information by ID", "get_voice_for_anime_voice_waifu_ai_api": "Get Voice", "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.", "retrieve_all_queue_times_for_unofficial_efteling_api": "Retrieve all the queue times in the efteling, data will be updated every 10 minutes", "retrieve_the_latest_blogs_for_unofficial_efteling_api": "Retrieve the latest blogs, these are updated once every hour"}, "aseqs": [{"api_name": "retrieve_the_latest_blogs_for_unofficial_efteling_api", "api_action": "\nAction: retrieve_the_latest_blogs_for_unofficial_efteling_api\nAction Input: {}", "api_reaction": null}, {"api_name": "retrieve_all_queue_times_for_unofficial_efteling_api", "api_action": "\nAction: retrieve_all_queue_times_for_unofficial_efteling_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "retrieve_the_latest_blogs_for_unofficial_efteling_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "retrieve_all_queue_times_for_unofficial_efteling_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_latest_news_for_sri_lanka_news_api", "api_action": "\nAction: get_all_latest_news_for_sri_lanka_news_api\nAction Input: {}", "api_reaction": null}}]}
{"URL": "21133", "query": "I recently received an email from an unknown sender and I want to check if it is a disposable email. Can you verify the email 'unknownsender@example.com' for me?", "api_names": ["checkdisposableemail_for_newly_registered_domains", "Finish", "get_last_5_news_for_cryptoinfo", "cards_for_card_draw_simulator", "lines_line_abs_for_poetry_db", "email_validator_health_for_email_validator", "accurate_language_detection_for_translate_v3", "warzone_for_warzone_2"], "api_descs": {"Finish": "No description available.", "accurate_language_detection_for_translate_v3": "This endpoint will return the Language of the Text", "cards_for_card_draw_simulator": "Draw multiple cards from a regular 52-card playing deck.", "checkdisposableemail_for_newly_registered_domains": "REST API to lookup disposable email", "email_validator_health_for_email_validator": "Return the health status of the API. Returns current UTC time.", "get_last_5_news_for_cryptoinfo": "Get last 5 actual and processed financial news", "lines_line_abs_for_poetry_db": "All poems that contain a specific line", "warzone_for_warzone_2": "Activision ID :"}, "aseqs": [{"api_name": "checkdisposableemail_for_newly_registered_domains", "api_action": "\nAction: checkdisposableemail_for_newly_registered_domains\nAction Input: {\n  \"email\": \"unknownsender@example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "checkdisposableemail_for_newly_registered_domains"}}, {"state": "generated_by_agent", "aseq": {"api_name": "checkdisposableemail_for_newly_registered_domains"}}]}
{"URL": "47698", "query": "Can you provide me with the recent royal matches and the top players in the royal mode?", "api_names": ["royal_matches_for_trackmania", "top_players_by_royal_for_trackmania", "Finish", "get_quote_by_id_for_quotes_v2", "get_comments_with_product_id_for_amazon_data_v3", "v1_nutrition_for_nutrition_by_api_ninjas", "products_get_reviews_for_unofficial_shein", "base_for_password_generator_api", "helloworld_for_mydailyinspiration", "child_comments_for_100_success_instagram_api_scalable_robust", "fetchdriving_licensedocument_for_cleardil", "get_quotes_by_character_name_for_anime_quotes"], "api_descs": {"Finish": "No description available.", "base_for_password_generator_api": "Only this endpoint is currently supported which gives you a random password", "child_comments_for_100_success_instagram_api_scalable_robust": "Get child comments list", "fetchdriving_licensedocument_for_cleardil": " ", "get_comments_with_product_id_for_amazon_data_v3": "Retrieve comments based on a product id.", "get_quote_by_id_for_quotes_v2": "Get quote information by id", "get_quotes_by_character_name_for_anime_quotes": "Get quotes by character name", "helloworld_for_mydailyinspiration": "Test the API", "products_get_reviews_for_unofficial_shein": "Get brief reviews of a product", "royal_matches_for_trackmania": "Get recent royal matches.", "top_players_by_royal_for_trackmania": "Get the top players by their royal rank.", "v1_nutrition_for_nutrition_by_api_ninjas": "API Ninjas Nutrition API endpoint."}, "aseqs": [{"api_name": "royal_matches_for_trackmania", "api_action": "\nAction: royal_matches_for_trackmania\nAction Input: {}", "api_reaction": null}, {"api_name": "top_players_by_royal_for_trackmania", "api_action": "\nAction: top_players_by_royal_for_trackmania\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "royal_matches_for_trackmania"}}, {"state": "generated_by_agent", "aseq": {"api_name": "top_players_by_royal_for_trackmania"}}, {"state": "generated_by_agent", "aseq": {"api_name": "royal_matches_for_trackmania"}}]}
{"URL": "85526", "query": "I want to check the stock price of Tesla. Can you fetch me the real-time information, including the price, change in points and percentage, and the total trading volume? I need this for my investment analysis.", "api_names": ["stock_information_for_realstonks", "Finish", "statessearchinboundingbox_for_mapreflex", "getgamedetail_for_evosis_s_game_database", "market_aggressive_small_caps_for_mboum_finance", "get_a_joke_for_bruno_jokes", "top_comments_by_username_for_reddit", "api_mx_domain_for_dns_lookup", "nps_template_for_nps_net_promoter_score", "getgamedetailpro_for_evosis_s_game_database"], "api_descs": {"Finish": "No description available.", "api_mx_domain_for_dns_lookup": "Sample request:\r\nGET /api/mx/oxog.net", "get_a_joke_for_bruno_jokes": "Retrieves a joke", "getgamedetail_for_evosis_s_game_database": "Returns the game's information as Json", "getgamedetailpro_for_evosis_s_game_database": "Returns the game's information as Json.", "market_aggressive_small_caps_for_mboum_finance": "Small cap stocks with earnings growth rates better than 25%.", "nps_template_for_nps_net_promoter_score": "Get a summary of NPS calculation for a given template. It considers the overall answers related to that template and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs.", "statessearchinboundingbox_for_mapreflex": "Get States boundaries in provided bounding box (in GeoJSON format). For a quick view, copy and paste results: http://geojsonlint.com", "stock_information_for_realstonks": "This endpoint gets you the real-time stock information.", "top_comments_by_username_for_reddit": "Top Comments By Username"}, "aseqs": [{"api_name": "stock_information_for_realstonks", "api_action": "\nAction: stock_information_for_realstonks\nAction Input: {\n  \"name\": \"Tesla\"\n}", "api_reaction": null}, {"api_name": "stock_information_for_realstonks", "api_action": "\nAction: stock_information_for_realstonks\nAction Input: {\n  \"name\": \"TSLA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "stock_information_for_realstonks"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_information_for_realstonks"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"stock_information_for_realstonks\",\n\t\"api_action\": \"{\\\"name\\\": \\\"TSLA\\\"}\",\n}"}]}
{"URL": "7381", "query": "My friends and I are planning a potluck dinner and we need some recipe ideas. Can you suggest a few recipes from your collection? Additionally, I would like the details of a specific recipe titled 'articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482'.", "api_names": ["get_recipes_details_for_recetas_en_espa_ol", "get_recipes_for_recetas_en_espa_ol", "Finish", "webcams_list_webcam_webcamid_webcamid_for_webcams_travel", "getorderbyid_for_petstoreapi2_0", "list_autocomplete_suggestions_for_youtube_media_downloader", "5_history_for_stockyapiexchange", "player_statistics_seasons_for_sofascores", "course_url_for_udemy_course_scrapper_api", "cat_facts_for_random_cat_fact", "download_areas_for_priceline_com_provider", "getinventory_for_my_api_12345", "gethistoricalscoresbyyear_for_gaialens_historical_esg_scores", "packs_for_flaticon", "politician_goverlytics_id_for_goverlytics", "leaguetotalteamevents_for_basketapi", "search_users_for_tiktok_apis", "feeds_search_for_yummly"], "api_descs": {"5_history_for_stockyapiexchange": "This feature provides historical data for a stock, including its open, high, low, close, and trading volume for each day. Users can access data for different time periods, such as daily, weekly, monthly, or yearly.", "Finish": "No description available.", "cat_facts_for_random_cat_fact": "Get some random cat fact", "course_url_for_udemy_course_scrapper_api": "Provide the course URL", "download_areas_for_priceline_com_provider": "Downloads an Area list", "feeds_search_for_yummly": "Search for recipes by name and option filters", "get_recipes_details_for_recetas_en_espa_ol": "Get details of any recipe", "get_recipes_for_recetas_en_espa_ol": "Get all recipes", "gethistoricalscoresbyyear_for_gaialens_historical_esg_scores": "This API returns historical Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100 based on the year provided in the request.  In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more.", "getinventory_for_my_api_12345": "Returns a map of status codes to quantities", "getorderbyid_for_petstoreapi2_0": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "leaguetotalteamevents_for_basketapi": "Get the both home and away last 5 matches for a specific basketball league in a given tournament and season.", "list_autocomplete_suggestions_for_youtube_media_downloader": "This endpoint lists autocomplete predictions depending on the keyword.", "packs_for_flaticon": "Method that allows you to get a paged list with information about the packs available at Flaticon. A pack is a set of icons that share a theme. Besides, any given pack may be found in one or many styles associated or not with a family.  By default, it will return a list order by priority. If no order is set, it will return items order by priority.", "player_statistics_seasons_for_sofascores": "Get seasons of the player", "politician_goverlytics_id_for_goverlytics": "Get 1 politician given their 'goverlytics_id'.", "search_users_for_tiktok_apis": "Search user by keyword", "webcams_list_webcam_webcamid_webcamid_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed {webcamid}s. Multiple {webcamid}s must be separated by comma. Required: at least one {webcamid}."}, "aseqs": [{"api_name": "get_recipes_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_for_recetas_en_espa_ol\nAction Input: {}", "api_reaction": null}, {"api_name": "get_recipes_details_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_details_for_recetas_en_espa_ol\nAction Input: {\n  \"slug\": \"articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482\"\n}", "api_reaction": null}, {"api_name": "get_recipes_details_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_details_for_recetas_en_espa_ol\nAction Input: {\n  \"slug\": \"articulo-13-jugos-verdes-para-adelgazar-y-quemar-grasa-71482\"\n}", "api_reaction": null}, {"api_name": "get_recipes_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_for_recetas_en_espa_ol\nAction Input: {}", "api_reaction": null}, {"api_name": "get_recipes_for_recetas_en_espa_ol", "api_action": "\nAction: get_recipes_for_recetas_en_espa_ol\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_details_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_for_recetas_en_espa_ol"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_recipes_for_recetas_en_espa_ol"}}]}
{"URL": "13092", "query": "I need the product information for the products in the 'Clothing' category from the advertising tool. Additionally, retrieve the details of an order with the ID '54321'.", "api_names": ["get_products_for_asdfadsf", "Finish", "get_order_for_asdfadsf", "get_products_in_category_for_asdfadsf", "get_product_for_asdfadsf", "player_information_for_basketball_datafeeds_by_rolling_insights", "authentication_for_onlyfans", "get_plus_one_for_plus_one", "ainamematch_for_aspose_email_cloud", "get_trader_info_for_binance_futures_leaderboard", "getbooksbyauthorsearch_for_reading_home_apis", "get_lyrics_for_youtube_music_api_detailed_", "gettopics_for_a_i_smartable", "getlistingsbyradius_valuation_for_remarketlite_apis", "currencies_for_currency_converter_pro", "bin_iin_lookup_for_bin_iin_lookup", "options_vertical_for_fancyoptions", "get_movie_images_by_id_for_movies_tv_shows_database", "no_of_participants_for_soti_sync", "email_qr_code_for_scanova_qr_code"], "api_descs": {"Finish": "No description available.", "ainamematch_for_aspose_email_cloud": " ", "authentication_for_onlyfans": "Best to call the Sign Info first take those values and pass them on", "bin_iin_lookup_for_bin_iin_lookup": "This API for Lookup, check, or search Issuer card information using card BIN.\nInput first 6 digits number of the Credit/Debit Card", "currencies_for_currency_converter_pro": "List all supported currencies.", "email_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with the email address. When scanned, the QR Code will prompt the user to 'send an email' to the specified email address.", "get_lyrics_for_youtube_music_api_detailed_": "Returns lyrics of a song or video.", "get_movie_images_by_id_for_movies_tv_shows_database": "A valid Movie ID (e.g. tt1375666)\nreturn title, id, poster, fanart", "get_order_for_asdfadsf": " ", "get_plus_one_for_plus_one": "Get your integer, incremented by one", "get_product_for_asdfadsf": " ", "get_products_for_asdfadsf": " ", "get_products_in_category_for_asdfadsf": " ", "get_trader_info_for_binance_futures_leaderboard": "Get trader information", "getbooksbyauthorsearch_for_reading_home_apis": "Get List of Books of a Searched Author Name", "getlistingsbyradius_valuation_for_remarketlite_apis": "Search listings around a point or address within the specified Radius", "gettopics_for_a_i_smartable": "Get artificial intelligence topics.", "no_of_participants_for_soti_sync": "No. of Participants", "options_vertical_for_fancyoptions": "This endpoint returns verticals for an individual ticker. The verticals that are returned have a 70% chance of being out of the money at time of expirations.", "player_information_for_basketball_datafeeds_by_rolling_insights": "This endpoint returns player demographic information"}, "aseqs": [{"api_name": "get_products_in_category_for_asdfadsf", "api_action": "\nAction: get_products_in_category_for_asdfadsf\nAction Input: {\n  \"limit\": 5,\n  \"skip\": 0,\n  \"category\": \"Clothing\"\n}", "api_reaction": null}, {"api_name": "get_order_for_asdfadsf", "api_action": "\nAction: get_order_for_asdfadsf\nAction Input: {\n  \"is_id\": \"54321\"\n}", "api_reaction": null}, {"api_name": "get_products_for_asdfadsf", "api_action": "\nAction: get_products_for_asdfadsf\nAction Input: {\n  \"skip\": 0,\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "get_product_for_asdfadsf", "api_action": "\nAction: get_product_for_asdfadsf\nAction Input: {\n  \"is_id\": 882104\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for_asdfadsf"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_order_for_asdfadsf"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_for_asdfadsf"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_for_asdfadsf"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_products_in_category_for_asdfadsf"}}]}
{"URL": "87659", "query": "I'm planning a surprise gift for my tech-savvy friend, and I want to know the manufacturer of their device. Can you help me find the manufacturer's details using the MAC address 14-AB-C5-D5-DA-F9?", "api_names": ["maclookup_for_mac_address_to_manufacturer", "Finish", "airports_nearest_airports_for_a_given_latitude_and_longitude_for_timetable_lookup_", "latest_drawing_for_fantasy_5", "ideas_detail_for_trading_view", "aircraft_database_stats_for_fachaapi", "list_specific_qr_code_for_qr_code_dynamic_and_static", "get_channel_goals_for_twitch_api"], "api_descs": {"Finish": "No description available.", "aircraft_database_stats_for_fachaapi": "Get the total number of known aircraft", "airports_nearest_airports_for_a_given_latitude_and_longitude_for_timetable_lookup_": "Returns the nearest airports for a given latitude and longitude", "get_channel_goals_for_twitch_api": "Returns channel goals.", "ideas_detail_for_trading_view": "Get detailed ideal post", "latest_drawing_for_fantasy_5": "Get the latest, and last winning Fantasy 5 winning number set.", "list_specific_qr_code_for_qr_code_dynamic_and_static": "From this endpoint is to get the information of a specific registered qr code, related to the respective api key", "maclookup_for_mac_address_to_manufacturer": "Enter MAC Address (string) to find the manufacturer. MAC Formats Allowed: ('xx-xx-xx-xx-xx-xx', 'xx:xx:xx:xx:xx:xx', 'xxxx.xxxx.xxxx', 'xxxxxxxxxxxx')"}, "aseqs": [{"api_name": "maclookup_for_mac_address_to_manufacturer", "api_action": "\nAction: maclookup_for_mac_address_to_manufacturer\nAction Input: {\n  \"mac_number\": \"14-AB-C5-D5-DA-F9\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "maclookup_for_mac_address_to_manufacturer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "maclookup_for_mac_address_to_manufacturer", "api_action": "\nAction: maclookup_for_mac_address_to_manufacturer\nAction Input: {\n  \"mac_number\": \"14-AB-C5-D5-DA-F9\"\n}"}}]}
{"URL": "74046", "query": "Hi there! I'm working on an image analysis project and I'm interested in trying different algorithms for object detection. Can you give me a list of alternative algorithms available? Also, I would like to know the current version of the General Detection API.", "api_names": ["Finish", "get_list_of_algorithms_for_general_detection", "get_version_for_general_detection", "get_laws_for_one_state_for_us_gun_laws", "historical_rates_for_metals_prices_rates_api", "get_questions_and_answers_for_soft_cat_quiz", "javascript_jobs_for_usa_jobs_for_it", "get_all_characters_for_new_girl", "get_task_for_pan_card_ocr", "email_for_soti_sync", "billboard_200_for_billboard_v2", "get_restaurant_by_link_for_pedidosya", "getuserbyname_for_swagger_petstore", "login_for_mocktwitter", "post_details_for_axesso_facebook_data_service"], "api_descs": {"Finish": "No description available.", "billboard_200_for_billboard_v2": "Get the Billboard 200 chart.", "email_for_soti_sync": "Fetch Customer Email", "get_all_characters_for_new_girl": "This will provide the show's characters with a tiny bit of data", "get_laws_for_one_state_for_us_gun_laws": "This endpoint provides links to gun law documentation for any particular state.", "get_list_of_algorithms_for_general_detection": "Service provides alternative algorithms that may be used for image detection.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.", "get_questions_and_answers_for_soft_cat_quiz": "This endpoint returns the quiz questions and answers", "get_restaurant_by_link_for_pedidosya": "Get Restaurant by Link", "get_task_for_pan_card_ocr": "To get the response of the API request when used in asynchronous mode, you can use either of the following methods:\n\nPre-configuring a web-hook URL with IDfy Whenever the submitted task is completed, the response for the task would be sent back to your application through a POST HTTP request.\n\nMaking a GET call to IDfy GET call can be made to IDfy to fetch the API response for the completed tasks. You can create a GET call using the request_id.", "get_version_for_general_detection": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getuserbyname_for_swagger_petstore": "Get user by user name", "historical_rates_for_metals_prices_rates_api": "Historical rates are available for most symbols all the way back to the year of 2019. You can query the API for historical rates by appending a date (format YYYY-MM-DD) to the base URL.", "javascript_jobs_for_usa_jobs_for_it": "JavaScript Jobs Api", "login_for_mocktwitter": "login to the user profile", "post_details_for_axesso_facebook_data_service": "Fetch post details for a single post"}, "aseqs": [{"api_name": "get_list_of_algorithms_for_general_detection", "api_action": "\nAction: get_list_of_algorithms_for_general_detection\nAction Input: {}", "api_reaction": null}, {"api_name": "get_version_for_general_detection", "api_action": "\nAction: get_version_for_general_detection\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_algorithms_for_general_detection"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_version_for_general_detection"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_algorithms_for_general_detection"}}]}
{"URL": "3406", "query": "Can you help me calculate my Body Mass Index? I weigh 70 kilograms and my height is 1.75 meters. Additionally, can you tell me which weight category I fall into?", "api_names": ["Finish", "metric_kilograms_for_body_mass_index_bmi_calculator", "weight_category_for_body_mass_index_bmi_calculator", "get_tickers_v2_for_chain49", "words2number_for_words_to_numbers", "get_live_streams_livestreamid_for_api_video", "search_by_query_for_musiclinkssapi", "crypto_symbol_for_holistic_finance_stock_data", "get_order_for_rushtranslate", "raceresult_for_formula_1_fixed", "video_thumbnail_extractor_copy_for_video_thumbnail_extractor", "list_genres_for_media_group", "stock_get_stock_profile_data_for_yh_finance_v2", "youtube_topcomments_for_musicdata_api", "auto_complete_deprecating_for_kohls"], "api_descs": {"Finish": "No description available.", "auto_complete_deprecating_for_kohls": "Get suggestions by term or phrase", "crypto_symbol_for_holistic_finance_stock_data": "Returns a list of all available crypto symbols", "get_live_streams_livestreamid_for_api_video": " ", "get_order_for_rushtranslate": "Get detailed information about a specific order.", "get_tickers_v2_for_chain49": "Returns currency rate for the specified currency and date. If the currency is not available for that specific timestamp, the next closest rate will be returned. All responses contain an actual rate timestamp.", "list_genres_for_media_group": "List genres", "metric_kilograms_for_body_mass_index_bmi_calculator": "This endpoint will calculate the BMI of an individual using the imperial measurement system.", "raceresult_for_formula_1_fixed": "This endpoint gives the result for a specific race (round) in a season(year).\n\n\nIf the results for the specified race are not yet available the RaceTable element in the response will be empty.\n\n", "search_by_query_for_musiclinkssapi": "Given a **query** and **type** of element, this returns details about *tracks*, *albums* and *artists*.", "stock_get_stock_profile_data_for_yh_finance_v2": "return stock profile data", "video_thumbnail_extractor_copy_for_video_thumbnail_extractor": "Extractor thumbnail image from mp4 video", "weight_category_for_body_mass_index_bmi_calculator": "Retrieve the weight category of an individual based on their BMI", "words2number_for_words_to_numbers": "Returns the corresponding number for your input sentence. Specify the language with the associated request parameter (currently available for italian (\"it\") and english (\"en\"))", "youtube_topcomments_for_musicdata_api": "Top Youtube commented videos of all time"}, "aseqs": [{"api_name": "metric_kilograms_for_body_mass_index_bmi_calculator", "api_action": "\nAction: metric_kilograms_for_body_mass_index_bmi_calculator\nAction Input: {\n  \"weight\": 70,\n  \"height\": 1.75\n}", "api_reaction": null}, {"api_name": "weight_category_for_body_mass_index_bmi_calculator", "api_action": "\nAction: weight_category_for_body_mass_index_bmi_calculator\nAction Input: {\n  \"bmi\": 22.857142857142858\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "metric_kilograms_for_body_mass_index_bmi_calculator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "weight_category_for_body_mass_index_bmi_calculator", "api_action": "", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "metric_kilograms_for_body_mass_index_bmi_calculator", "api_action": "\nAction: metric_kilograms_for_body_mass_index_bmi_calculator\nAction Input: {\n  \"weight\": 70,\n  \"height\": 1.75\n}", "api_reaction": null}}]}
{"URL": "5378", "query": "I'm organizing a memorial service and I need to know the half-staff events in New York. Can you provide me with the flag, issued by, date issued, start date, end date, title, description, and URL for each event? Furthermore, I would like to know the current status of the flag for West Virginia.", "api_names": ["get_current_status_for_given_flag_for_flag_status", "get_half_staff_events_for_given_flag_for_flag_status", "Finish", "random_for_helper_function", "r_cvr_virksomhed_for_cvr_dev", "get_reservations_for_limoucloud", "random_joke_for_joke1", "us_az_for_us_gas_prices", "type_analysis_get_comparables_for_morning_star", "get_a_specific_picture_for_motivational_content", "get_commodities_for_investing", "qualifying_results_for_fia_formula_1_championship_statistics"], "api_descs": {"Finish": "No description available.", "get_a_specific_picture_for_motivational_content": "This endpoint fetches a specific motivational picture according to the given id.", "get_commodities_for_investing": "Get Commodities", "get_current_status_for_given_flag_for_flag_status": "Get the current status for the provided flag", "get_half_staff_events_for_given_flag_for_flag_status": "Get all half-staff events for the provided flag", "get_reservations_for_limoucloud": "get all driver related reservations", "qualifying_results_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the qualifying results for a specific race by specifying the year and location as path parameters. The parameters are required.", "r_cvr_virksomhed_for_cvr_dev": "Dette endpoint returnerer alt data om en virksomhed, som den er i CVR. Dette dataformat er bestemt af Virk, ikke af cvr.dev.", "random_for_helper_function": "Generate Random String with custom length\nBASIC: 20 \nPRO: 30\nULTRA: 70\nMEGA: 150", "random_joke_for_joke1": "Returns a random joke", "type_analysis_get_comparables_for_morning_star": "Get Morningstar's analysis comparables related to an ETF or FUND", "us_az_for_us_gas_prices": "Returns current gas price data for Arizona. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request."}, "aseqs": [{"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "get_current_status_for_given_flag_for_flag_status", "api_action": "\nAction: get_current_status_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"WV\"\n}", "api_reaction": null}, {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "get_current_status_for_given_flag_for_flag_status", "api_action": "\nAction: get_current_status_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"WV\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_current_status_for_given_flag_for_flag_status"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": ""}}]}
{"URL": "31899", "query": "Get the webpage snapshot as an image from the source 'https://www.yahoo.com'. Furthermore, provide the digest/checksum for a file from the source 'http://google.com'.", "api_names": ["file_digest_for_pragmavantapi", "web_snapshot_for_pragmavantapi", "Finish", "wisdomoftheday_for_wisdom_api", "products_detail_for_kohls", "teammedia_for_baseballapi", "hourlyweather_for_history", "getpetbyid_for_privatepublicapi", "article_api_for_diffbot", "checkdisposableemail_for_check_disposable_email", "autocomplete_for_deutsche_bahn", "getting_the_latest_exchange_rate_s_for_currency_exchange_rates", "get_configuration_for_judge0_extra_ce", "topic_for_quotes_diffusion", "user_highlight_detail_for_instagram_v13"], "api_descs": {"Finish": "No description available.", "article_api_for_diffbot": "The Article API is used to extract clean article text from news articles, blog posts, and other text-heavy web pages.", "autocomplete_for_deutsche_bahn": "Search for train and public transport stations in Germany and across Europe", "checkdisposableemail_for_check_disposable_email": "REST API to lookup disposable email", "file_digest_for_pragmavantapi": "Get digest/checksum for a file", "get_configuration_for_judge0_extra_ce": "Configuration information gives you detailed information about the configuration of Judge0.", "getpetbyid_for_privatepublicapi": "Returns a single pet", "getting_the_latest_exchange_rate_s_for_currency_exchange_rates": "The /live/ endpoint returns the most recent exchange rate(s) for a given set of currencies. The base currency is the currency you're converting FROM, while the target currency or currencies are what you're converting TO.\n\nIf no target currency or currencies are specified, then all available currencies are returned. You can see a full list of supported currencies at the bottom of this documentation.", "hourlyweather_for_history": "This endpoint returns the historical weather on hourly level for a given day for a given location (latitude and longitude)", "products_detail_for_kohls": "Get detail information of specific product", "teammedia_for_baseballapi": "Get the media for a specific baseball team using the team ID.", "topic_for_quotes_diffusion": " ", "user_highlight_detail_for_instagram_v13": "Get instagram user highlight detail by highlight id.", "web_snapshot_for_pragmavantapi": "Get webpage snapshot as image", "wisdomoftheday_for_wisdom_api": "Daily Wisdom Quote: This API endpoint provides a wise quote that is refreshed everyday between 8-9 AM PT."}, "aseqs": [{"api_name": "web_snapshot_for_pragmavantapi", "api_action": "\nAction: web_snapshot_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.yahoo.com\"\n}", "api_reaction": null}, {"api_name": "file_digest_for_pragmavantapi", "api_action": "\nAction: file_digest_for_pragmavantapi\nAction Input: {\n  \"source\": \"http://google.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "web_snapshot_for_pragmavantapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "file_digest_for_pragmavantapi", "api_action": "\nAction: file_digest_for_pragmavantapi\nAction Input: {\n  \"source\": \"http://google.com\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_snapshot_for_pragmavantapi", "api_action": "\nAction: web_snapshot_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.yahoo.com\"\n}", "api_reaction": null}}]}
{"URL": "54536", "query": "Translate the phrase 'Thank you very much' into Italian. If the source language is not provided, assume it is English. Additionally, detect the language using the fast language detection API.", "api_names": ["translate_for_translate_v3", "Finish", "fast_language_detection_for_translate_v3", "products_v3_detail_for_asos", "validate_card_number_for_credit_card_number_validator", "artist_featuring_for_spotify_web", "livescores_for_msport", "get_cities_for_world_country", "get_version_for_general_detection", "getsuggesteduser_for_instagram_v6", "get_social_moving_averages_1m_for_finance_social_sentiment_for_twitter_and_stocktwits", "numberlist_for_sim_based_location_tracking", "get_country_list_for_travel_hacking_tool", "stock_time_series_for_real_time_finance_data", "income_for_holistic_finance_stock_data"], "api_descs": {"Finish": "No description available.", "artist_featuring_for_spotify_web": "Artist featuring", "fast_language_detection_for_translate_v3": "This endpoint will return the Language of the Text", "get_cities_for_world_country": "Get City list", "get_country_list_for_travel_hacking_tool": "This endpoint returns a list of country codes (ISO-3166).", "get_social_moving_averages_1m_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by monthly intervals.", "get_version_for_general_detection": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getsuggesteduser_for_instagram_v6": "get suggested user by user id", "income_for_holistic_finance_stock_data": "Provides either annual or quarterly income statements of an single stock company.", "livescores_for_msport": "list of soccer livescores", "numberlist_for_sim_based_location_tracking": "\n<p>All  of <b>last updated locations</b> of provided concents phone numbers can be fetched through this endpoint,</p>\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n", "products_v3_detail_for_asos": "Get detail information of product by id", "stock_time_series_for_real_time_finance_data": "Get stock time series and key news events for the following periods: **1 day**, **5 days**, **1 month**, **6 months**, **year-to-date**, **1 year**, **5 years** and **all times (max)**. In addition, the endpoints returns the key news events that affected the stock prices  in the specified period. Supports all stock types: *stock*, *index*, *mutual fund* and *futures*.", "translate_for_translate_v3": "Return Translated Text and the source language if it wasn't specified", "validate_card_number_for_credit_card_number_validator": "Validate Credit Card Number and get the card type"}, "aseqs": [{"api_name": "fast_language_detection_for_translate_v3", "api_action": "\nAction: fast_language_detection_for_translate_v3\nAction Input: {\n\"text\": \"Thank you very much\"\n}", "api_reaction": null}, {"api_name": "translate_for_translate_v3", "api_action": "\nAction: translate_for_translate_v3\nAction Input: {\n\"text\": \"Thank you very much\",\n\"dest\": \"it\",\n\"src\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_for_translate_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fast_language_detection_for_translate_v3"}}]}
{"URL": "30336", "query": "I want to stay updated on the latest news in the entertainment industry. Can you provide me with trending articles in English? Please retrieve ten articles at a time and exclude sources like variety.com and deadline.com.", "api_names": ["search_for_webit_news_search", "Finish", "hotel_details_for_hotels_com_provider", "wordsearchenglish_for_dictionary", "get_topic_for_textking_translation", "ligue_1_standings_for_ligue_1_standings", "get_raster_tile_for_mapilion_vector_and_raster_map_tiles", "scrape_links_for_scrapey_link_scraper"], "api_descs": {"Finish": "No description available.", "get_raster_tile_for_mapilion_vector_and_raster_map_tiles": "Returns Raster tiles as PNG. These can be used in mapping libraries like Leaflet. The style-name can be one of:\n- `kurviger-liberty` a map style developed for Kurviger.de\n- `osm-bright` the default Osm Bright style", "get_topic_for_textking_translation": "Returns a single topic area with the given ID.", "hotel_details_for_hotels_com_provider": "Get hotel details", "ligue_1_standings_for_ligue_1_standings": "Ligue 1 Standings", "scrape_links_for_scrapey_link_scraper": "Scrape all links from URL", "search_for_webit_news_search": "Search in a continuously updated database containing millions of articles finely crawled minute by minute from sources selected by a sophisticated A.I.\n\nTry it live at: https://webit.re/services/internet-search/news-search-api/tryout", "wordsearchenglish_for_dictionary": "With this service you can learn the meaning of English words from Oxdord dictionary."}, "aseqs": [{"api_name": "search_for_webit_news_search", "api_action": "\nAction: search_for_webit_news_search\nAction Input: {\n  \"q\": \"entertainment\",\n  \"language\": \"en\",\n  \"exclude_sources\": \"variety.com,deadline.com\",\n  \"number\": 10\n}", "api_reaction": null}, {"api_name": "search_for_webit_news_search", "api_action": "\nAction: search_for_webit_news_search\nAction Input: {\n  \"q\": \"entertainment\",\n  \"language\": \"en\",\n  \"exclude_sources\": \"variety.com,deadline.com\",\n  \"number\": 10\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_webit_news_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_webit_news_search", "api_action": "\nAction: search_for_webit_news_search\nAction Input: {\n  \"q\": \"entertainment\",\n  \"language\": \"en\",\n  \"exclude_sources\": \"variety.com,deadline.com\",\n  \"number\": 20\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_webit_news_search", "api_action": "\nAction: search_for_webit_news_search\nAction Input: {\n  \"q\": \"entertainment\",\n  \"language\": \"en\",\n  \"exclude_sources\": \"variety.com,deadline.com\",\n  \"number\": 10\n}", "api_reaction": null}}]}
{"URL": "81977", "query": "My company wants to stay updated on news related to renewable energy. Can you fetch the latest tweets, images, and usernames for tweets containing the keywords 'renewable energy' and 'solar power'? Also, suggest some users we should follow who frequently tweet about these topics.", "api_names": ["Finish", "search_users_for_twttrapi", "search_latest_for_twttrapi", "bulkgenerateguids_for_guid_generator", "getlisting_for_florida_realty_api", "get_hashtag_for_top_instagram_hashtag", "current_leaderboard_for_serie_a", "search_for_creators_for_patreon", "find_competition_mentions_for_advanced_serp_operators", "statisticsinuniquetournament_for_sportifyapi", "groundhogs_for_groundhog_day_api", "live_sports_for_pinaculo", "search_a_place_for_busy_and_popular_times", "youtube_topcomments_for_musicdata_api", "charcoal_image_charcoal_get_for_image", "shows_id_for_streamlinewatch_streaming_guide", "get_countries_for_seventraderapi", "get_coin_price_for_coinranking"], "api_descs": {"Finish": "No description available.", "bulkgenerateguids_for_guid_generator": " ", "charcoal_image_charcoal_get_for_image": " ", "current_leaderboard_for_serie_a": "Use this endpoint to retrieve the current leaderboard, updated at the last match played.", "find_competition_mentions_for_advanced_serp_operators": "Find PR opportunities by finding competitor mentions", "get_coin_price_for_coinranking": "With the price endpoint the price can be requested for a specific coin on a specific time. The response is just a single price nearest to the requested time, including its timestamp.", "get_countries_for_seventraderapi": "Get all countries in API", "get_hashtag_for_top_instagram_hashtag": "Get detail hashtag", "getlisting_for_florida_realty_api": "Use this endpoint to get detailed information about a single condominium or townhouse.", "groundhogs_for_groundhog_day_api": "Returns all prognosticating animals with their known predictions.", "live_sports_for_pinaculo": "Get live sports.", "search_a_place_for_busy_and_popular_times": "Search for a location exactly the way you Google it. The API will only work if the search returns the \"Popular Times\" graph in the result", "search_for_creators_for_patreon": "Search for Creators on Patreon using the `search_query`.", "search_latest_for_twttrapi": "Search latest results", "search_users_for_twttrapi": "Search users", "shows_id_for_streamlinewatch_streaming_guide": "Return the metadata associated with the specified show.", "statisticsinuniquetournament_for_sportifyapi": "Statisticsin Unique Tournament", "youtube_topcomments_for_musicdata_api": "Top Youtube commented videos of all time"}, "aseqs": [{"api_name": "search_latest_for_twttrapi", "api_action": "\nAction: search_latest_for_twttrapi\nAction Input: {\n  \"query\": \"renewable energy\"\n}", "api_reaction": null}, {"api_name": "search_latest_for_twttrapi", "api_action": "\nAction: search_latest_for_twttrapi\nAction Input: {\n  \"query\": \"solar power\"\n}", "api_reaction": null}, {"api_name": "search_users_for_twttrapi", "api_action": "\nAction: search_users_for_twttrapi\nAction Input: {\n  \"query\": \"renewable energy\"\n}", "api_reaction": null}, {"api_name": "search_users_for_twttrapi", "api_action": "\nAction: search_users_for_twttrapi\nAction Input: {\n  \"query\": \"solar power\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_users_for_twttrapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_latest_for_twttrapi", "api_action": "{\"query\": \"renewable energy solar power\"}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_users_for_twttrapi\",\n\t\"api_action\": \"\\nAction: search_users_for_twttrapi\\nAction Input: {\\n  \\\"query\\\": \\\"renewable energy OR solar power\\\",\\n  \\\"order_by\\\": \\\"tweet_count\\\",\\n  \\\"result_type\\\": \\\"recent\\\"\\}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_latest_for_twttrapi", "api_action": "\nAction: search_latest_for_twttrapi\nAction Input: {\n  \"query\": \"renewable energy solar power\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_latest_for_twttrapi", "user_input": "{\"query\": \"renewable energy solar power\"}"}}]}
{"URL": "2528", "query": "I want to surprise my friend who lives in Mexico with a gift. Can you help me find the valid zip codes starting with '450'? Additionally, I would like to know more about the zip code '45010', including the municipality, state, and the names of the neighboring areas.", "api_names": ["zip_code_information_for_mexico_zip_codes", "search_zip_codes_for_mexico_zip_codes", "Finish", "livescores_for_msport", "v1_babynames_for_baby_names_by_api_ninjas", "account_transaction_count_for_binance_smart_chain", "get_tide_sea_level_data_for_stormglass_complete", "matches_for_betano", "get_distance_for_great_circle_math_api", "get_all_videos_for_likee_downloader_download_likee_videos", "get_channel_total_views_for_gwyo_twitch", "endpoint_for_01"], "api_descs": {"Finish": "No description available.", "account_transaction_count_for_binance_smart_chain": "Get the number of transactions done by an address on the Binance Smart Chain.", "endpoint_for_01": "01", "get_all_videos_for_likee_downloader_download_likee_videos": "This endpoint will return back all videos about a specific user on Likee.", "get_channel_total_views_for_gwyo_twitch": "Get Channel Cumulated Views since its creation (using username or id)", "get_distance_for_great_circle_math_api": "Returns the circle math distance in miles.", "get_tide_sea_level_data_for_stormglass_complete": "**Stormglass Tide Sea-level Data**\n\nRetrieve the sea level given in meters hour by hour for a single coordinate. If nothing is specified the returned values will be in relative to Mean Sea Level - MSL.", "livescores_for_msport": "list of soccer livescores", "matches_for_betano": "Latest matches by Betano.", "search_zip_codes_for_mexico_zip_codes": "Search for valid zip codes with starting digits", "v1_babynames_for_baby_names_by_api_ninjas": "API Ninjas Baby Names API endpoint. Returns 10 baby name results.", "zip_code_information_for_mexico_zip_codes": "Retrieves the information of a particular zip code"}, "aseqs": [{"api_name": "search_zip_codes_for_mexico_zip_codes", "api_action": "\nAction: search_zip_codes_for_mexico_zip_codes\nAction Input: {\n  \"codigo_postal\": \"450\"\n}", "api_reaction": null}, {"api_name": "zip_code_information_for_mexico_zip_codes", "api_action": "\nAction: zip_code_information_for_mexico_zip_codes\nAction Input: {\n  \"zip_code\": \"45010\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_for_mexico_zip_codes"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_zip_codes_for_mexico_zip_codes\",\n\t\"api_action\": \"\\nAction: search_zip_codes_for_mexico_zip_codes\\nAction Input: {\\n  \\\"codigo_postal\\\": \\\"450\\\"\\n}\\n\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_for_mexico_zip_codes", "api_action": "\nAction: search_zip_codes_for_mexico_zip_codes\nAction Input: {\n  \"codigo_postal\": \"450\"\n}"}}]}
{"URL": "75000", "query": "I'm a cheese enthusiast and I'm looking to expand my cheese collection. Can you recommend ten different cheeses for me to try? Additionally, could you provide me with more information about a specific cheese identified by the ID '6388ce1258d9a6231c26bc8a'?", "api_names": ["Finish", "get_by_id_for_cheeses", "list_for_cheeses", "topic_news_by_section_for_real_time_news_data", "keyfigures_retrieve_for_palmy_investing_api", "gettalks_for_ted_talks_api", "competitions_standings_for_livescore_sports", "download_entire_database_for_car_specs", "tweet_retweets_for_twitter_aio", "search_for_pageantdb", "getteams_for_wosti_futbol_tv_peru", "user_data_for_instagram_v13"], "api_descs": {"Finish": "No description available.", "competitions_standings_for_livescore_sports": "Get competition standings (table) by competition ID.  LTT_CODE: All(1),Home(2),Away 3", "download_entire_database_for_car_specs": "Returns a zipped csv file containing all the data that the Car Specs API owns.", "get_by_id_for_cheeses": "Get all info about the cheese", "gettalks_for_ted_talks_api": "Get info about specific talks based on the provided parameters", "getteams_for_wosti_futbol_tv_peru": "Obtener el listado de equipos de fútbol televisados en Perú.", "keyfigures_retrieve_for_palmy_investing_api": "A list of all metrics you can assign for i.e data tables", "list_for_cheeses": "List all cheeses", "search_for_pageantdb": "Search pageant contest by keyword.", "topic_news_by_section_for_real_time_news_data": "Get topic news article in a specific section.", "tweet_retweets_for_twitter_aio": "Receive all retweets for a tweet.", "user_data_for_instagram_v13": "Get instagram user info by username."}, "aseqs": [{"api_name": "list_for_cheeses", "api_action": "\nAction: list_for_cheeses\nAction Input: {}", "api_reaction": null}, {"api_name": "list_for_cheeses", "api_action": "\nAction: list_for_cheeses\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_id_for_cheeses", "api_action": "\nAction: get_by_id_for_cheeses\nAction Input: {\n  \"is_id\": \"6388ce1258d9a6231c26bc8a\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_for_cheeses"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_cheeses"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_for_cheeses"}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_for_cheeses"}}]}
{"URL": "3128", "query": "I'm organizing a cryptocurrency seminar for my company, and I need to present the price trend of The Sandbox - SAND cryptocurrency over the past 1 year. Can you fetch the historical price data for the past 1 year? Additionally, I would like to share the latest price of SAND during the seminar. Please provide the current price.", "api_names": ["past_1_year_for_the_sandbox_sand", "quote_for_the_sandbox_sand", "Finish", "skills_search_for_iys_skill_api_", "get_all_data_on_an_establishment_by_restaurant_for_wyre_data", "originals_episodes_get_info_for_webtoon", "warzone_rollosis_psn_for_call_of_duty_warzone_stats", "get_place_by_my_ip_for_spott", "api_trades_isin_isin_for_prague_stock_exchange", "search_a_grocery_for_store_groceries", "blogs_copy_for_mgs", "airqualityhealthindex_for_carbonfootprint", "charts_get_top_songs_in_country_by_genre_for_shazam_api", "geo_ping_global_ip_lookup_for_global_webserver_or_ip_response_time_and_location", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits", "scorecards_for_live_golf_data", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling", "find_zip_codes_by_city_and_district_for_polish_zip_codes"], "api_descs": {"Finish": "No description available.", "airqualityhealthindex_for_carbonfootprint": "Return the official air quality health index (1 to 10) bases on key parameters.The national AQHI is based on three-hour average concentrations of ground-level ozone (O3), nitrogen dioxide (NO2), and fine particulate matter (PM2.5). O3 and NO2 are measured in parts per billion (ppb) while PM2.5 is \t measured in micrograms per cubic metre (ug/m3)", "api_trades_isin_isin_for_prague_stock_exchange": " ", "blogs_copy_for_mgs": "MGS Blogs", "charts_get_top_songs_in_country_by_genre_for_shazam_api": "get top songs in country by genre", "find_zip_codes_by_city_and_district_for_polish_zip_codes": "Return all zip codes located in city's district", "geo_ping_global_ip_lookup_for_global_webserver_or_ip_response_time_and_location": "Connects to 12 global servers and determines the local ip at that location for a given domain name or ip address, reports back location and response time of servers.", "get_all_data_on_an_establishment_by_restaurant_for_wyre_data": "Find a Restaurant", "get_place_by_my_ip_for_spott": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 1 week intervals.", "originals_episodes_get_info_for_webtoon": "Get episode and photo links\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "past_1_year_for_the_sandbox_sand": "Get price data for the past 1 year.\n\n~ daily (00:00 UTC) data points.", "quote_for_the_sandbox_sand": "Get the latest price.", "read_one_user_for_supersaas_online_bookings_and_appointment_scheduling": "", "scorecards_for_live_golf_data": "Fetch a scorecard for a given `tournId`, `year`, `playerId`, and `roundId`.  Scorecards include shot-by-shot granularity.", "search_a_grocery_for_store_groceries": "Search a specific grocery", "skills_search_for_iys_skill_api_": "Skills Search", "warzone_rollosis_psn_for_call_of_duty_warzone_stats": "Warzone stats for Rollosis"}, "aseqs": [{"api_name": "past_1_year_for_the_sandbox_sand", "api_action": "\nAction: past_1_year_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}, {"api_name": "quote_for_the_sandbox_sand", "api_action": "\nAction: quote_for_the_sandbox_sand\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "past_1_year_for_the_sandbox_sand"}}, {"state": "generated_by_agent", "aseq": {"api_name": "quote_for_the_sandbox_sand"}}, {"state": "generated_by_agent", "aseq": {"api_name": "past_1_year_for_the_sandbox_sand"}}]}
{"URL": "14852", "query": "I'm an aspiring photographer and I want to explore popular photography reels on Instagram. Can you fetch the media info for a specific reel using its shortcode? Also, provide me with the stories of a specific user using their username.", "api_names": ["Finish", "get_all_stories_by_user_id_for_instagram_api_2023", "get_reel_by_shortcode_for_instagram_api_2023", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius", "get_cities_for_gis_engine", "word_for_jibber_jabber", "facilities_lookup_for_senegal_api", "api_all_for_movie_showtimes", "get_workout_plan_for_workout_planner", "current_weather_data_of_a_location_for_weather", "get_all_games_for_free_nba", "videogames_news_search_for_videogames_news", "cash_flow_statement_for_finshorts", "regions_search_for_hotels_com_provider", "getinfo_for_indian_mobile_info", "uuidv3_generator_for_uuid_generator", "storageexists_for_aspose_diagram_cloud", "search_pro_for_streaming_availability"], "api_descs": {"Finish": "No description available.", "api_all_for_movie_showtimes": "Get all the sessions for all the available movies", "cash_flow_statement_for_finshorts": "Finshorts provide companies cash flow statement in realtime", "current_weather_data_of_a_location_for_weather": "Returns the current (most recent) weather observation of a given location", "facilities_lookup_for_senegal_api": "This endpoint allows you to get facilities in Senegal like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "get_all_games_for_free_nba": "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.", "get_all_stories_by_user_id_for_instagram_api_2023": "Get all active stories of an Instagram user using user_id.", "get_cities_for_gis_engine": "Get cities by providing the country code and region code\n\n- country_code can be fetch from Get Countries endpoint\n- region_code can be fetch from Get Regions endpoint", "get_reel_by_shortcode_for_instagram_api_2023": "Get reel info by shortcode.", "get_workout_plan_for_workout_planner": "Get Workout Plans\n\nThis api request can be used to get Workout plan based on:\n\n- Time duration\n- Target Muscle\n- Location\n- Equipment\n\nHence api call takes 4 query parameters:\n\n- time\n- muscle\n- location\n- equipment", "getinfo_for_indian_mobile_info": "getInfo", "regions_search_for_hotels_com_provider": "Search region, locations, city or hotel by name", "search_by_centre_zip_and_radius_for_usa_zip_codes_inside_radius": "Perform a single radius search with a defined radius and then a location in the form of a ZIP code OR a latitude/longitude.", "search_pro_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 10. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "storageexists_for_aspose_diagram_cloud": " ", "uuidv3_generator_for_uuid_generator": "UUIDv3 generator", "videogames_news_search_for_videogames_news": "Returns search results for current and historic news from top sources", "word_for_jibber_jabber": "Returns a random **word**"}, "aseqs": [{"api_name": "get_reel_by_shortcode_for_instagram_api_2023", "api_action": "\nAction: get_reel_by_shortcode_for_instagram_api_2023\nAction Input: {\n  \"shortcode\": \"CrgVBtHr3DP\"\n}", "api_reaction": null}, {"api_name": "get_all_stories_by_user_id_for_instagram_api_2023", "api_action": "\nAction: get_all_stories_by_user_id_for_instagram_api_2023\nAction Input: {\n  \"user_id\": \"25025320\"\n}", "api_reaction": null}, {"api_name": "get_reel_by_shortcode_for_instagram_api_2023", "api_action": "\nAction: get_reel_by_shortcode_for_instagram_api_2023\nAction Input: {\n  \"shortcode\": \"CrgVBtHr3DP\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to fetch the media info for a specific reel using its shortcode and also get the stories of a specific user using their username. First, I need to find the shortcode from the user's profile to fetch its stories. Then I will use the shortcode to fetch the media info.\n\t\"api_name\": \"get_reel_by_shortcode_for_instagram_api_2023\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_stories_by_user_id_for_instagram_api_2023", "api_action": "\nAction: get_all_stories_by_user_id_for_instagram_api_2023\nAction Input: {\n  \"user_id\": \"8976354\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_reel_by_shortcode_for_instagram_api_2023", "api_action": "\nAction: get_reel_by_shortcode_for_instagram_api_2023\nAction Input: {\n  \"shortcode\": \"CrgVBtHr3DP\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_reel_by_shortcode_for_instagram_api_2023"}}]}
{"URL": "27481", "query": "I'm a sports journalist covering the tennis world and I need to gather global statistics about tennis players. Can you provide me with the global players statistics for aces for all players across all seasons and surfaces? I'm particularly interested in the top 200 players ranked by aces. Additionally, I would like to access the live players rankings for the top 50 players in the ATP circuit.", "api_names": ["Finish", "global_players_statistics_for_ultimate_tennis", "live_players_rankings_for_ultimate_tennis", "get_comments_with_product_id_for_n11_data", "wins_leaderboard_mw2_for_cod_api_2_0", "by_category_for_moka_news", "data_of_countries_in_json_format_for_flight_data_v2", "consulta_for_consulta_de_boleto", "user_live_broadcast_for_instagram_v5", "driver_s_quotes_with_pagination_of_10_quotes_each_page_for_f1_drivers_quotes", "balance_for_holistic_finance_stock_data", "search_roman_god_by_name_for_roman_gods_by_pizza_api", "random_for_uncovered_treasure", "ip_geolocation_for_ip_geolocation_api", "dad_jokes_random_for_dad_jokes_v2"], "api_descs": {"Finish": "No description available.", "balance_for_holistic_finance_stock_data": "Provides either annual or quarterly balance sheet statements of an single stock company.", "by_category_for_moka_news": "get the recent 50 news by category , EX :   Sport , World  .... etc", "consulta_for_consulta_de_boleto": "Recebe como parâmetro de busca, a linha digitável do boleto e devolve as informações do mesmo.", "dad_jokes_random_for_dad_jokes_v2": "Return random joke.", "data_of_countries_in_json_format_for_flight_data_v2": "API returns a file with a list of countrys from the database", "driver_s_quotes_with_pagination_of_10_quotes_each_page_for_f1_drivers_quotes": "Gets 10 quotes of the driver depending on which page you input.", "get_comments_with_product_id_for_n11_data": "Retrieve comments based on a product id.", "global_players_statistics_for_ultimate_tennis": "This endpoint allows you to retrieve global statistics about tennis players. You can customize the statistic (aces, breakpoints converted, 1st serve points won...), the season (all, 2022, 2021...), or the surface(clay, hard, grass).\nYou can find the list of available options under every parameter.", "ip_geolocation_for_ip_geolocation_api": "IP Geolocation", "live_players_rankings_for_ultimate_tennis": "With this endpoint, you can retrieve info about the live tennis rankings for a given number of players, with position/points/info about the last match played in the current active tournament. Please note that in the ATP circuit the official leaderboard is updated every Monday.", "random_for_uncovered_treasure": "Get random treasure", "search_roman_god_by_name_for_roman_gods_by_pizza_api": "Search for a Roman God By name to get a description about them", "user_live_broadcast_for_instagram_v5": "Get Instagram user live broadcast by Instagram user id.", "wins_leaderboard_mw2_for_cod_api_2_0": "Get top wins information for up to 2000 players on the MW 2 leaderboard."}, "aseqs": [{"api_name": "live_players_rankings_for_ultimate_tennis", "api_action": "\nAction: live_players_rankings_for_ultimate_tennis\nAction Input: {\n  \"n_player\": \"50\"\n}", "api_reaction": null}, {"api_name": "global_players_statistics_for_ultimate_tennis", "api_action": "\nAction: global_players_statistics_for_ultimate_tennis\nAction Input: {\n  \"season\": \"all\",\n  \"category\": \"aces\",\n  \"surface\": \"all\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "global_players_statistics_for_ultimate_tennis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "global_players_statistics_for_ultimate_tennis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "global_players_statistics_for_ultimate_tennis", "api_action": "\nAction: global_players_statistics_for_ultimate_tennis\nAction Input: {\n  \"season\": \"all\",\n  \"category\": \"aces\",\n  \"surface\": \"all\"\n}", "api_reaction": null}}]}
{"URL": "66464", "query": "I'm building a music discovery website and I need a list of the top songs in the world. Can you provide me with the top songs in the world? I need the song title, artist name, and a link to listen to the song on Shazam.", "api_names": ["charts_get_top_songs_in_world_for_shazam_api", "Finish", "utility_rates_for_nrel_national_renewable_energy_laboratory", "ensure_flight_for_ensureflight", "bet365_result_for_betsapi", "pinterest_for_check_username", "get_os_browsers_for_lambdatest_screenshot", "get_all_wisdom_topics_for_wisdom_quotes"], "api_descs": {"Finish": "No description available.", "bet365_result_for_betsapi": "to view bet365 event result", "charts_get_top_songs_in_world_for_shazam_api": "get top songs in world", "ensure_flight_for_ensureflight": "Just ensure flight", "get_all_wisdom_topics_for_wisdom_quotes": "Returns an Array of all available wisdom topics. \nEach topic has its own quotes.", "get_os_browsers_for_lambdatest_screenshot": "Fetch all os browsers combinations available on lambdatest platform.", "pinterest_for_check_username": "Check username on Pinterest", "utility_rates_for_nrel_national_renewable_energy_laboratory": "This service returns annual average utility rates ($/kWH) for residential, commercial and industrial sectors as well as the local utility name for a specific location. This service does not return complex rate information.  Version 3 is the current version of the utility rates API. Previous versions have been deprecated and its users are encouraged to migrate to this newly enhanced version."}, "aseqs": [{"api_name": "charts_get_top_songs_in_world_for_shazam_api", "api_action": "\nAction: charts_get_top_songs_in_world_for_shazam_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "charts_get_top_songs_in_world_for_shazam_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "charts_get_top_songs_in_world_for_shazam_api"}}]}
{"URL": "65673", "query": "I'm working on a Jet Set Radio fan website and I need some content. Can you provide me with a list of songs, characters, and levels from the game? Also, it would be great if you could suggest some graffiti tags and locations that I can include on the website.", "api_names": ["levels_for_jet_set_radio_api", "graffiti_tags_for_jet_set_radio_api", "Finish", "songs_for_jet_set_radio_api", "characters_for_jet_set_radio_api", "streams_mentions_for_stocktwits", "originals_genres_list_for_webtoon", "getcompanybywebsite_for_returns_company_info_based_on_the_website", "city_data_in_json_format_for_flight_data_v2", "get_news_source_feeds_for_climate_change_v31", "year_make_lookup_returns_json_for_hull_id_boat_hin_decoder", "stock_index_trend_for_yahoo_finance_v2", "get_media_info_by_url_for_instagram_looter", "telegram_group_info_for_telegram_v2", "image_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin", "get_all_games_for_free_nba", "data_of_countries_in_json_format_for_flight_data_v2", "get_categories_for_asdfadsf", "postcodes_for_postcodejp_api", "get_comments_from_product_id_for_trendyol_data"], "api_descs": {"Finish": "No description available.", "characters_for_jet_set_radio_api": "Returns a list of all Characters", "city_data_in_json_format_for_flight_data_v2": "API returns a file with a list of cities from the database", "data_of_countries_in_json_format_for_flight_data_v2": "API returns a file with a list of countrys from the database", "get_all_games_for_free_nba": "This endpoint retrieves all games.  Seasons are represented by the year they began. For example, 2018 represents season 2018-2019.", "get_categories_for_asdfadsf": " ", "get_comments_from_product_id_for_trendyol_data": "Retrieve comments based on a product id.", "get_media_info_by_url_for_instagram_looter": "Get **Instagram** media info by **/p/** - **/tv/** - **/reel/**", "get_news_source_feeds_for_climate_change_v31": "Api showing news feedsa all over the planet", "getcompanybywebsite_for_returns_company_info_based_on_the_website": "For valid response use valid website domain.  Other values will generate exceptions. Subdomains will be removed.", "graffiti_tags_for_jet_set_radio_api": "Returns a list of all Graffiti-Tags", "image_download_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the image in original hd quality by passing pinterest image pin address", "levels_for_jet_set_radio_api": "Returns a list of all Levels", "originals_genres_list_for_webtoon": "List genres in originals category", "postcodes_for_postcodejp_api": "postcodes", "songs_for_jet_set_radio_api": "Returns a list of all Songs from JSR/JSRF", "stock_index_trend_for_yahoo_finance_v2": "Get index trend earnings history information for a particular stock", "streams_mentions_for_stocktwits": "Returns the most recent 30 messages containing mentions of the authenticating user's handle. These are considered public replies", "telegram_group_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Group\n\n- Title\n- Photo\n- Description\n- Members\n- On line Memebers", "year_make_lookup_returns_json_for_hull_id_boat_hin_decoder": "Lookup the boat manufacturers (makes) for a given year. This API can be used to create selection drop down menu for year and make. It will return json results"}, "aseqs": [{"api_name": "songs_for_jet_set_radio_api", "api_action": "\nAction: songs_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "levels_for_jet_set_radio_api", "api_action": "\nAction: levels_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "characters_for_jet_set_radio_api", "api_action": "\nAction: characters_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "graffiti_tags_for_jet_set_radio_api", "api_action": "\nAction: graffiti_tags_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "songs_for_jet_set_radio_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "graffiti_tags_for_jet_set_radio_api", "api_action": "", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "graffiti_tags_for_jet_set_radio_api", "api_action": "\nAction: graffiti_tags_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "graffiti_tags_for_jet_set_radio_api", "api_action": "\nAction: graffiti_tags_for_jet_set_radio_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_media_info_by_url_for_instagram_looter"}}]}
{"URL": "7934", "query": "I need to update the stages of a pipeline in Streak CRM. Please help me reorder the stages and modify the stage order in the web UI. Additionally, I would like to retrieve the user's information who modified the stage order.", "api_names": ["user_for_streak_crm_for_gmail", "pipeline_for_streak_crm_for_gmail", "Finish", "get_products_in_category_for__demo_project_v13", "get_channel_leaderboards_for_twitch_api", "getsongs_for_musiczone", "1_hour_minutely_forecast_nowcast_for_weather", "locate_schools_for_real_estate_usa", "riddle_by_difficulty_level_for_riddlie_", "track_list_playlist_for_spotify_downloader", "latest_news_for_currents_news", "sort_live_giveaways_for_gamerpower", "get_call_for_mci_nmc_doctor_verification", "getpetbyid_for_tes", "get_user_activity_pins_for_pinterest_scraper", "verify_transactions_logs_for_zanjir_cryptocurrency_payment_gateway", "channel_details_for_youtube_v2", "live_game_data_for_basketball_datafeeds_by_rolling_insights"], "api_descs": {"1_hour_minutely_forecast_nowcast_for_weather": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "Finish": "No description available.", "channel_details_for_youtube_v2": "This endpoint get all available details about a given channel ID", "get_call_for_mci_nmc_doctor_verification": "Used to fetch api result using the request id received in responses.", "get_channel_leaderboards_for_twitch_api": "Returns leaderboard.", "get_products_in_category_for__demo_project_v13": " ", "get_user_activity_pins_for_pinterest_scraper": "Get User Activity Pins", "getpetbyid_for_tes": "Returns a single pet", "getsongs_for_musiczone": "get song details", "latest_news_for_currents_news": "Get the latest news", "live_game_data_for_basketball_datafeeds_by_rolling_insights": "This endpoint provides real-time game box scores.", "locate_schools_for_real_estate_usa": "locate schools", "pipeline_for_streak_crm_for_gmail": "Pipelines represent a business process that a user would like managed.", "riddle_by_difficulty_level_for_riddlie_": "Get one random riddle based on the difficulty. For example, by Easy, Medium, Hard.", "sort_live_giveaways_for_gamerpower": "Insert sort by, eg: date, value, popularity", "track_list_playlist_for_spotify_downloader": "Get Track List from Playlist", "user_for_streak_crm_for_gmail": "User call", "verify_transactions_logs_for_zanjir_cryptocurrency_payment_gateway": "You can confirm successful transactions using this API."}, "aseqs": [{"api_name": "user_for_streak_crm_for_gmail", "api_action": "\nAction: user_for_streak_crm_for_gmail\nAction Input: {}", "api_reaction": null}, {"api_name": "pipeline_for_streak_crm_for_gmail", "api_action": "\nAction: pipeline_for_streak_crm_for_gmail\nAction Input: {}", "api_reaction": null}, {"api_name": "user_for_streak_crm_for_gmail", "api_action": "\nAction: user_for_streak_crm_for_gmail\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to find the user's information who modified the stage order and update the stages of the pipeline in Streak CRM, but there is no previous history provided for me to fetch the user ID or modify the pipeline directly. So first, I will get the details of a user using the 'user_for_streak_crm_for_gmail' API.\n\t\"api_name\": \"user_for_streak_crm_for_gmail\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "pipeline_for_streak_crm_for_gmail"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pipeline_for_streak_crm_for_gmail"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pipeline_for_streak_crm_for_gmail"}}]}
{"URL": "32571", "query": "I'm participating in a Fantasy 5 tournament and I need to analyze the winning number sets. Can you provide me with the general statistics of the winning numbers? Additionally, I want to check the winning number sets for the last 10 drawings.", "api_names": ["general_statistics_for_fantasy_5", "latest_10_drawings_for_fantasy_5", "Finish", "test_for_wraws_load_test", "list_all_countries_for_world_bank_gdp", "multiple_guids_for_guid_generator_tool", "get_wagons_mrt_train_no_wagons_get_for_aqls_b2c_system", "timezonelist_for_gtrend", "get_district_capital_by_name_for_district_capitals_in_ghana", "getbydate_for_earningsdata", "playlist_items_for_youtube_v3_lite", "download_translated_document_for_textking_translation", "group_removemember_for_zipwhip", "search_for_joj_finance", "converting_currencies_for_currency_exchange_rates"], "api_descs": {"Finish": "No description available.", "converting_currencies_for_currency_exchange_rates": "The /convert/ endpoint is similar to the /live/ and /historical/ endpoints, except it allows you to convert an arbitrary amount of currency.\n\nFor example, it calculates how many EUR you would get for 1,337.99 USD today, or how many GBP and CAD you'd get for that amount on January 1, 2020.", "download_translated_document_for_textking_translation": "Downloads the translated document for a job.", "general_statistics_for_fantasy_5": "This endpoint pulls basic statistics of the Fantasy 5 numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.", "get_district_capital_by_name_for_district_capitals_in_ghana": "This endpoint gets a district capital by district name", "get_wagons_mrt_train_no_wagons_get_for_aqls_b2c_system": " ", "getbydate_for_earningsdata": "Get earnings data by date.", "group_removemember_for_zipwhip": "Remove a group member. This is useful if a group member has requested to opt-out of notifications.", "latest_10_drawings_for_fantasy_5": "Get the latest, and last winning 10 Fantasy 5 number sets.", "list_all_countries_for_world_bank_gdp": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/v2/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json", "multiple_guids_for_guid_generator_tool": "Endpoint to retrieve a multiple GUIDs, returned as a a string array.\nRequired query string parameter: *number* - needs to be between 0 and 1000.\nGET only query.\nReturn content-type is text/json.", "playlist_items_for_youtube_v3_lite": "Get playlist items.\nQuota cost is 1.", "search_for_joj_finance": "Search for indexes, stocks, ETFs, cryptocurrencies, currencies and more", "test_for_wraws_load_test": "Test", "timezonelist_for_gtrend": " "}, "aseqs": [{"api_name": "general_statistics_for_fantasy_5", "api_action": "\nAction: general_statistics_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_10_drawings_for_fantasy_5", "api_action": "\nAction: latest_10_drawings_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_10_drawings_for_fantasy_5", "api_action": "\nAction: latest_10_drawings_for_fantasy_5\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5", "api_action": "\nAction: latest_10_drawings_for_fantasy_5\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_10_drawings_for_fantasy_5"}}, {"state": "generated_by_agent", "aseq": {"api_name": "general_statistics_for_fantasy_5"}}]}
{"URL": "73676", "query": "I'm curious about the sign prediction for today for my mom who is an Aquarius. Furthermore, I would like to have the complete list of zodiac signs. Can you assist me with that?", "api_names": ["get_sign_prediction_for_today_by_name_for_zodiacapi", "get_signs_list_for_zodiacapi", "Finish", "artist_for_deezer", "get_sign_hexagram_for_sign_hexagram", "artist_appears_on_for_spotify", "player_for_tennis_live_data", "getorderbyid_for_freeplanhardlimitexternal", "bilingual_dictionary_for_webit_language", "fetch_by_type_and_region_for_magical_taske", "words_for_jibber_jabber", "district_for_provinces_of_thailand", "sort_games_for_mmo_games", "user_post_for_instagram_downloader", "service_status_for_luhn_algorithm"], "api_descs": {"Finish": "No description available.", "artist_appears_on_for_spotify": "Get artist appears on albums (max 50)", "artist_for_deezer": "An artist object", "bilingual_dictionary_for_webit_language": "Powerful multi-language bilingual neural translation dictionary, supporting 80+ languages.", "district_for_provinces_of_thailand": "อำเภอ : districts", "fetch_by_type_and_region_for_magical_taske": "You can make a request finer by combining region and type. This endpoint will return the records requested. You have to provide a limit of the number of records you want.", "get_sign_hexagram_for_sign_hexagram": "Return one of the sign with full info by given category.", "get_sign_prediction_for_today_by_name_for_zodiacapi": "Get sign prediction for today  by name", "get_signs_list_for_zodiacapi": "Get signs list", "getorderbyid_for_freeplanhardlimitexternal": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "player_for_tennis_live_data": "Basic player profiles for a given `player_id`", "service_status_for_luhn_algorithm": "Returns service status", "sort_games_for_mmo_games": "Sort games by release date, alphabetical, popularity or relevance", "user_post_for_instagram_downloader": "get all post", "words_for_jibber_jabber": "Returns random **words**"}, "aseqs": [{"api_name": "get_sign_prediction_for_today_by_name_for_zodiacapi", "api_action": "\nAction: get_sign_prediction_for_today_by_name_for_zodiacapi\nAction Input: {\n  \"name\": \"Aquarius\"\n}", "api_reaction": null}, {"api_name": "get_signs_list_for_zodiacapi", "api_action": "\nAction: get_signs_list_for_zodiacapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": The user wants sign prediction for Aquarius and the list of all zodiac signs. I will first fetch the prediction using 'get_sign_prediction_for_today_by_name_for_zodiacapi' API, then fetch the complete list using another call to 'get_signs_list_for_zodiacapi'.\n\t\"api_name\": \"get_sign_prediction_for_today_by_name_for_zodiacapi\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_sign_prediction_for_today_by_name_for_zodiacapi", "api_action": "\nAction: get_sign_prediction_for_today_by_name_for_zodiacapi\nAction Input: {\n  \"name\": \"Aquarius\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_sign_prediction_for_today_by_name_for_zodiacapi", "api_action": "\nAction: get_sign_prediction_for_today_by_name_for_zodiacapi\nAction Input: {\n  \"name\": \"Aquarius\"\n}", "api_reaction": null}}]}
{"URL": "74073", "query": "I'm interested in a specific make and model of a car. Can you provide me with the available models for that make? It would be helpful if the results include the possible trims for each model. Additionally, I would like to know the available years for a specific make and model combination.", "api_names": ["makes_for_car_api", "trims_for_car_api", "years_for_car_api", "Finish", "models_for_car_api", "search_for_weed_strain", "get_invite_data_for_discord_lookup", "measure_distance_for_egypt_api", "garan_for_borsa", "getaccountbyid_for_virtual_accounts_api", "canvas_home_for_webtoon", "get_recipe_by_id_for_ghana_food_recipe_api", "block_number_voice_service_for_2factor_authentication_india", "most_recent_tafs_for_aviation_weather_center", "send_sms_for_sms_v2", "set_contribution_for_mymemory_translation_memory", "search_for_agents_for_zillow_v2", "get_details_for_truecaller_v2", "get_san_francisco_chronicle_news_for_news_in_bay", "latest_contracts_for_symbol_for_futures"], "api_descs": {"Finish": "No description available.", "block_number_voice_service_for_2factor_authentication_india": "This endpoint is used to add number to VOICE Blocklist", "canvas_home_for_webtoon": "Reproduce comic data in home screen\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "garan_for_borsa": "GARAN", "get_details_for_truecaller_v2": "This end point will display the search details for the number you are looking for.", "get_invite_data_for_discord_lookup": "Fetches detailed data, including hidden data of invites or vanities", "get_recipe_by_id_for_ghana_food_recipe_api": "This endpoint gets specific recipe by id", "get_san_francisco_chronicle_news_for_news_in_bay": "Get all news titled with keyword (sources via San Francisco Chronicle )", "getaccountbyid_for_virtual_accounts_api": "To get a single virtual account.", "latest_contracts_for_symbol_for_futures": "This endpoint returns each of the latest futures contracts for a given symbol for the next twelve months.\n\nUse the optional *<month>* parameter to return the latest contract for a given month.", "makes_for_car_api": "Search makes by name and year.", "measure_distance_for_egypt_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Alexandria and Cairo**", "models_for_car_api": "Search models by year, make, model, trim or make_id.\n\nTo include the models make in the description request with the query parameter as `verbose=yes`.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Ford\", \"Acura\"]}, {\"field\": \"year\", \"op\": \">=\", \"val\": 2010}]\n\nAllowed json operators are: =, !=, >, <, >=, <=, in, not in, like, not like, not null, and is null.\n\nAllowed json search fields are: year, make, model, make_id, created, and modified.", "most_recent_tafs_for_aviation_weather_center": "Obtain the most recent TAFs from the past X hours. If you use the `mostRecent` flag only one TAF is returned. Otherwise, all TAFs from the specified time window will be returned.", "search_for_agents_for_zillow_v2": "Search for agents by location and name", "search_for_weed_strain": "Provides list of results by search keyword.", "send_sms_for_sms_v2": "Send SMS", "set_contribution_for_mymemory_translation_memory": "The SET api is used to save a contribution. You can either save a contribution privately with your private TM key or add it to the public collaborative TM.", "trims_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"year\", \"op\": \">=\", \"val\": 2010}, {\"field\": \"year\", \"op\": \"<=\", \"val\": 2020}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, bodies.type, engines.cam_type, engines.cylinders, engines.drive_type, engines.engine_type, engines.fuel_type, engines.transmission, engines.valve_timing, engines.valves, make_id, make_model_id, make_model_trim_id, created, and modified.", "years_for_car_api": "For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Scion\", \"Tesla\"]}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed search fields are: `year`, `make`, `model`, `trim`, `make_id`, and `make_model_id`."}, "aseqs": [{"api_name": "makes_for_car_api", "api_action": "\nAction: makes_for_car_api\nAction Input: {}", "api_reaction": null}, {"api_name": "models_for_car_api", "api_action": "\nAction: models_for_car_api\nAction Input: {}", "api_reaction": null}, {"api_name": "trims_for_car_api", "api_action": "\nAction: trims_for_car_api\nAction Input: {}", "api_reaction": null}, {"api_name": "years_for_car_api", "api_action": "\nAction: years_for_car_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "models_for_car_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "models_for_car_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "models_for_car_api"}}, {"state": "generated_by_agent", "aseq": {"api_action": "\nAction: latest_contracts_for_symbol_for_futures\nAction Input: {\r\n\"symbol\": \"makes\",\r\n\"month\": null\r\n}", "api_name": "latest_contracts_for_symbol_for_futures"}}, {"state": "generated_by_agent", "aseq": {"api_name": "models_for_car_api"}}]}
{"URL": "83849", "query": "My family and I are planning to rent a property in Spain for our vacation. We are looking for a property in Malaga that has a swimming pool, garden, and air conditioning. Could you please provide a list of available properties for rent in Malaga? Moreover, we would like to know the details of a specific property with the property code 67890.", "api_names": ["auto_complete_for_idealista_v2", "Finish", "search_for_zenserp", "insult_for_humor_jokes_and_memes", "search_wikihow_for_wiki_briefs", "inplay_event_for_sports_betting_api", "ad_for_constructioness", "addresses_for_seeding_data", "by_city_for_ambee_air_quality", "fourth_place_for_ncaa_final_four", "balance_for_locationiq", "get_period_for_horoscopes_ai"], "api_descs": {"Finish": "No description available.", "ad_for_constructioness": "ad", "addresses_for_seeding_data": "Get 100 addresses with en_US locale", "auto_complete_for_idealista_v2": "Get auto complete suggestion by term or phrase", "balance_for_locationiq": "The Balance API provides a count of request credits left in the user's account for the day. Balance is reset at midnight UTC everyday (00:00 UTC).", "by_city_for_ambee_air_quality": "Get the latest air quality data for your city", "fourth_place_for_ncaa_final_four": "Get fourth place team data (only available between 1946 and 1981) for the given year.", "get_period_for_horoscopes_ai": "Return available period for Horoscope.", "inplay_event_for_sports_betting_api": "All Odds Markets", "insult_for_humor_jokes_and_memes": "Insult somebody for doing something.\nSee https://humorapi.com/docs/#Insult for more.", "search_for_zenserp": "Get a SERP", "search_wikihow_for_wiki_briefs": "Search any 'how-to' question on WikiHow and returns summarized methods and steps."}, "aseqs": [{"api_name": "auto_complete_for_idealista_v2", "api_action": "\nAction: auto_complete_for_idealista_v2\nAction Input: {\n  \"prefix\": \"Malaga\"\n}", "api_reaction": null}, {"api_name": "auto_complete_for_idealista_v2", "api_action": "\nAction: auto_complete_for_idealista_v2\nAction Input: {\n  \"prefix\": \"Marbella\"\n}", "api_reaction": null}, {"api_name": "auto_complete_for_idealista_v2", "api_action": "\nAction: auto_complete_for_idealista_v2\nAction Input: {\n  \"prefix\": \"Costa del Sol\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "auto_complete_for_idealista_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_zenserp"}}, {"state": "generated_by_agent", "aseq": {"api_name": "auto_complete_for_idealista_v2", "api_action": "{\"prefix\": \"Malaga, garden, pool, air conditioning\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "auto_complete_for_idealista_v2", "api_action": "\nAction: auto_complete_for_idealista_v2\nAction Input: {\n  \"prefix\": \"Malaga\"\n}"}}]}
{"URL": "14893", "query": "I want to download a Likee video with the URL 'https://likee.video/@johnsmith/video/123456789'. Can you provide me with all the information about this video, including the title, description, image, and video? Additionally, I would like to retrieve the user information for the user with the username 'johnsmith' and get their videos.", "api_names": ["get_user_info_for_likee_downloader_download_likee_videos", "get_video_info_for_likee_downloader_download_likee_videos", "get_all_videos_for_likee_downloader_download_likee_videos", "Finish", "items_for_toptalonlinetest", "youtube_global_countryid_timeframe_for_musicdata_api", "search_memes_for_humor_jokes_and_memes", "get_posts_from_page_for_9gag_api_detailed_", "subusers_id_for_smsapi_com", "getportfoliosettlements_for_kalshi_trading_api", "getreferencerates_for_european_central_bank_reference_rates", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits", "search_by_region_for_redfin_base", "get_bulk_details_for_truecaller_v2", "regionlist_for_gtrend", "channel_search_for_youtube", "fixture_by_fixtureid_for_football_xg_statistics", "user_media_for_twitter_v2_v2", "search_suggestions_for__cheap_youtube_api_", "web_search_for_google_search_v3"], "api_descs": {"Finish": "No description available.", "channel_search_for_youtube": "Channel Search", "fixture_by_fixtureid_for_football_xg_statistics": "The method is used to get info and events of fixtures by the fixture id.", "get_all_videos_for_likee_downloader_download_likee_videos": "This endpoint will return back all videos about a specific user on Likee.", "get_bulk_details_for_truecaller_v2": "This end point will display the search details for the bulk number's you are looking for.", "get_posts_from_page_for_9gag_api_detailed_": "Returns page posts.", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 1 week intervals.", "get_user_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific user on Likee.", "get_video_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific video on Likee.", "getportfoliosettlements_for_kalshi_trading_api": "Endpoint for getting the logged-in member's settlements historical track.", "getreferencerates_for_european_central_bank_reference_rates": "Get the current Reference Rates", "items_for_toptalonlinetest": "gets an array of strings.", "regionlist_for_gtrend": "List support region / Country", "search_by_region_for_redfin_base": "Search by region", "search_memes_for_humor_jokes_and_memes": "Search for memes.\nSee https://humorapi.com/docs/#Search-Memes for more.", "search_suggestions_for__cheap_youtube_api_": "Get search suggestions for a query\n\nexample: \n/search/suggestions?q=crypto", "subusers_id_for_smsapi_com": " ", "user_media_for_twitter_v2_v2": "User Media", "web_search_for_google_search_v3": "This endpoint is used for web searches", "youtube_global_countryid_timeframe_for_musicdata_api": "Weekly/Daily country Youtube chart for a specific country. Read external docs for more information"}, "aseqs": [{"api_name": "get_video_info_for_likee_downloader_download_likee_videos", "api_action": "\nAction: get_video_info_for_likee_downloader_download_likee_videos\nAction Input: {\n  \"url\": \"https://likee.video/@johnsmith/video/123456789\"\n}", "api_reaction": null}, {"api_name": "get_user_info_for_likee_downloader_download_likee_videos", "api_action": "\nAction: get_user_info_for_likee_downloader_download_likee_videos\nAction Input: {\n  \"username\": \"johnsmith\"\n}", "api_reaction": null}, {"api_name": "get_all_videos_for_likee_downloader_download_likee_videos", "api_action": "\nAction: get_all_videos_for_likee_downloader_download_likee_videos\nAction Input: {\n  \"uid\": \"1402720928\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_video_info_for_likee_downloader_download_likee_videos"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_user_info_for_likee_downloader_download_likee_videos"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_video_info_for_likee_downloader_download_likee_videos", "api_action": "\nAction: get_video_info_for_likee_downloader_download_likee_videos\nAction Input: {\n  \"url\": \"https://likee.video/@johnsmith/video/123456789\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_video_info_for_likee_downloader_download_likee_videos", "api_action": "\nAction: get_video_info_for_likee_downloader_download_likee_videos\nAction Input: {\n  \"url\": \"https://likee.video/@johnsmith/video/123456789\"\n}", "api_reaction": null}}]}
{"URL": "69183", "query": "My friends and I are planning a football trivia night and we want to include some interesting statistics about NFL teams. Can you give us the passing, rushing, and receiving data for the offense side in the year 2021? It would also be great to know the win/loss data for the year 2020. Thanks a lot!", "api_names": ["get_team_passing_data_for_nfl_team_stats_v2", "Finish", "get_team_rushing_data_for_nfl_team_stats_v2", "get_team_receiving_data_for_nfl_team_stats_v2", "get_team_win_data_for_nfl_team_stats_v2", "stays_properties_detail_policies_for_booking_com_v2", "gettestwebhookpayloademailopened_for_mailslurp_email_testing", "anime_img_for_any_anime", "ean13_for_ean13_code_generator_api", "odds_for_dreambet", "getallsearches_for_youtube_influencer_search", "theaters_detail_for_flixster", "following_for_instagram_v6", "market_data_for_stock_sentiment_api", "new_people_for_watchmode", "get_all_feed_for_all_crypto_news_feed", "get_hashtag_for_top_instagram_hashtag", "linkedin_contacts_for_linkedin_outreach", "label_shapes_for_print_your_own_labels_and_stickers", "video_descriptions_for_youtube_classification_api"], "api_descs": {"Finish": "No description available.", "anime_img_for_any_anime": "Show only the image from the api on your browser .", "ean13_for_ean13_code_generator_api": "This endpoint returns a PNG with an EAN13 barcode or an error, based on a 12-13 lenght code. In case of 12 it will calculate automatically check-digit, in case of 13 it will check the check-digit.", "following_for_instagram_v6": "get someone's following", "get_all_feed_for_all_crypto_news_feed": "Returns all feed.\nTweets\nBlogs\nBinance\nUsGov", "get_hashtag_for_top_instagram_hashtag": "Get detail hashtag", "get_team_passing_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' passing data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.", "get_team_receiving_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' receiving data. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.", "get_team_rushing_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' rushingdata. Parameters include whether you'd like the data for offense or defense sides, and a specific year.\n\nThe side parameter should be one of these two options: \"offense\" or \"defense\"\nThe year parameter should be a year between these years: 1920 - current year.", "get_team_win_data_for_nfl_team_stats_v2": "Provides a JSON Response containg a list of all teams' win/loss data. Parameters include a specific year.\n\nThe year parameter should be a year between these years: 1920 - current year.", "getallsearches_for_youtube_influencer_search": "Get all searches", "gettestwebhookpayloademailopened_for_mailslurp_email_testing": "Get webhook test payload for email opened event", "label_shapes_for_print_your_own_labels_and_stickers": "List of available label shapes.", "linkedin_contacts_for_linkedin_outreach": "This API fetches the Linkedin URL and Name of the search you have made.", "market_data_for_stock_sentiment_api": "Returns a list of daily stock metrics such as opening, closing, highest and lowest prices.", "new_people_for_watchmode": "Get a listing of the ids of new people added to Watchmode within the date range.", "odds_for_dreambet": "Latest Odds for Dreambet", "stays_properties_detail_policies_for_booking_com_v2": "Get detail policies", "theaters_detail_for_flixster": "Get theater and showtime information", "video_descriptions_for_youtube_classification_api": "GET Video descriptions"}, "aseqs": [{"api_name": "get_team_passing_data_for_nfl_team_stats_v2", "api_action": "\nAction: get_team_passing_data_for_nfl_team_stats_v2\nAction Input: {\n  \"year\": 2021,\n  \"side\": \"offense\"\n}", "api_reaction": null}, {"api_name": "get_team_rushing_data_for_nfl_team_stats_v2", "api_action": "\nAction: get_team_rushing_data_for_nfl_team_stats_v2\nAction Input: {\n  \"year\": 2021,\n  \"side\": \"offense\"\n}", "api_reaction": null}, {"api_name": "get_team_receiving_data_for_nfl_team_stats_v2", "api_action": "\nAction: get_team_receiving_data_for_nfl_team_stats_v2\nAction Input: {\n  \"year\": 2021,\n  \"side\": \"offense\"\n}", "api_reaction": null}, {"api_name": "get_team_win_data_for_nfl_team_stats_v2", "api_action": "\nAction: get_team_win_data_for_nfl_team_stats_v2\nAction Input: {\n  \"year\": 2020\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_team_passing_data_for_nfl_team_stats_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_team_rushing_data_for_nfl_team_stats_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_team_win_data_for_nfl_team_stats_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_team_win_data_for_nfl_team_stats_v2", "api_action": "\nAction: get_team_win_data_for_nfl_team_stats_v2\nAction Input: {\n  \"year\": 2020,\n  \"side\": \"offense\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_team_passing_data_for_nfl_team_stats_v2", "api_action": "\nAction: get_team_passing_data_for_nfl_team_stats_v2\nAction Input: {\n  \"year\": 2021,\n  \"side\": \"offense\"\n}", "api_reaction": null}}]}
{"URL": "60731", "query": "I am a football fan and I want to know the upcoming fixtures. Can you provide me with the odds for the upcoming fixtures using the Odds For Upcoming Fixtures API? Additionally, I would like to get a list of leagues in Spain using the Tournaments List By CountryId API.", "api_names": ["tournaments_list_by_countryid_for_football_xg_statistics", "Finish", "audio_feed_for_instagram_data", "graffiti_tags_for_jet_set_radio_api", "findsubdistrict_for_india_pincode_api", "generate_document_resume_for_ai_resume_generator", "tone_for_typography", "breed_type_for_catbreeddb"], "api_descs": {"Finish": "No description available.", "audio_feed_for_instagram_data": "Get audio post feed", "breed_type_for_catbreeddb": "Gives all results by the type of breed.", "findsubdistrict_for_india_pincode_api": "findsubdistrict", "generate_document_resume_for_ai_resume_generator": "Endpoint that will generate a large text response containing a Resume document using the provided information", "graffiti_tags_for_jet_set_radio_api": "Returns a list of all Graffiti-Tags", "tone_for_typography": " ", "tournaments_list_by_countryid_for_football_xg_statistics": "The method is used to get a list of leagues (divisions) by the country id."}, "aseqs": [{"api_name": "tournaments_list_by_countryid_for_football_xg_statistics", "api_action": "\nAction: tournaments_list_by_countryid_for_football_xg_statistics\nAction Input: {\n  \"is_id\": 157\n}", "api_reaction": null}, {"api_name": "tournaments_list_by_countryid_for_football_xg_statistics", "api_action": "\nAction: tournaments_list_by_countryid_for_football_xg_statistics\nAction Input: {\n  \"is_id\": 157\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tournaments_list_by_countryid_for_football_xg_statistics"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_upcoming_fixtures_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tournaments_list_by_countryid_for_football_xg_statistics", "api_action": "{\"is_id\": 157}", "api_reaction": null}}]}
{"URL": "3680", "query": "I need to generate a dashboard summary for my company's revenue for the past month. Can you provide me with the revenue data for the date range from 01-09-2021 to 30-09-2021? Additionally, I would like to include the revenue data for the same period last year and compare the two.", "api_names": ["summery_for_summery", "Finish", "rtrt_for_hello_v2", "get_hello_world_for_fluximmo", "timezone_by_id_for_referential", "hashtag_info_for_100_success_instagram_api_scalable_robust", "get_coins_data_for_mineable_coins", "get_specified_users_contributions_for_geeklist", "nail_for_nail", "trending_challenges_for_tiktok_private"], "api_descs": {"Finish": "No description available.", "get_coins_data_for_mineable_coins": "With this endpoint you can get a collection of all coins.\n\n**API alterations**\n- **Get one coin:** https://api.minerstat.com/v2/coins?list=BTC\n- **Get list of coins:** https://api.minerstat.com/v2/coins?list=BTC,BCH,BSV\n- **Get all coins from one algorithm:** https://api.minerstat.com/v2/coins?algo=SHA-256\n- **Get all coins from multiple algorithms:** https://api.minerstat.com/v2/coins?algo=SHA-256,Scrypt,Ethash", "get_hello_world_for_fluximmo": " ", "get_specified_users_contributions_for_geeklist": "", "hashtag_info_for_100_success_instagram_api_scalable_robust": "Get results of hashtag search by keyword", "nail_for_nail": "regOjooo", "rtrt_for_hello_v2": "uuyu", "summery_for_summery": "dahsboard summery", "timezone_by_id_for_referential": "Lookup a time zone", "trending_challenges_for_tiktok_private": "Get Trending Challenges"}, "aseqs": [{"api_name": "summery_for_summery", "api_action": "\nAction: summery_for_summery\nAction Input: {\n  \"is_id\": 1,\n  \"date\": \"01-09-2021\",\n  \"value\": 30\n}", "api_reaction": null}, {"api_name": "summery_for_summery", "api_action": "\nAction: summery_for_summery\nAction Input: {\n  \"is_id\": 1,\n  \"date\": \"30-09-2021\",\n  \"value\": 50\n}", "api_reaction": null}, {"api_name": "summery_for_summery", "api_action": "\nAction: summery_for_summery\nAction Input: {\n  \"is_id\": 1,\n  \"date\": \"01-09-2020\",\n  \"value\": 25\n}", "api_reaction": null}, {"api_name": "summery_for_summery", "api_action": "\nAction: summery_for_summery\nAction Input: {\n  \"is_id\": 1,\n  \"date\": \"30-09-2020\",\n  \"value\": 45\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "summery_for_summery"}}, {"state": "generated_by_agent", "aseq": {"api_name": "summery_for_summery"}}, {"state": "generated_by_agent", "aseq": {"api_name": "summery_for_summery", "api_action": "\nAction: summery_for_summery\nAction Input: {\n  \"is_id\": 1,\n  \"date_from\": \"01-09-2021\",\n  \"date_to\": \"30-09-2021\",\n  \"value_last_year_date_from\": \"01-09-2020\",\n  \"value_last_year_date_to\": \"30-09-2020\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "summery_for_summery"}}, {"state": "generated_by_agent", "aseq": {"api_name": "summery_for_summery"}}]}
{"URL": "2548", "query": "My family is going on a road trip and we need to download map tiles for different zoom levels. Can you provide me with the URLs to download map tiles for zoom levels 6, 9, and 12 at coordinates (34.0522° N, 118.2437° W) and (37.7749° N, 122.4194° W)?", "api_names": ["local_osm_v1_z_x_y_png_for_offline_maptiles", "en_map_v1_z_x_y_png_for_offline_maptiles", "Finish", "products_v2_get_details_deprecated_for_target", "getstatsbyyear_for_trinidad_covid_19_statistics", "consulta_pessoa_for_consulta_cnpj_tempo_real", "nearest_for_locationiq", "coins_get_brief_chart_for_investing_cryptocurrency_markets", "rest_api_deep_image_result_jobhash_for_deep_image", "v1_animals_for_animals_by_api_ninjas", "hin_decoder_return_json_for_hull_id_boat_hin_decoder", "chart_artists_for_genius_song_lyrics", "chains_for_defi_data", "get_three_tarot_card_for_horoscope_astrology", "get_models_by_make_id_for_car_specs", "get_users_68a613f6_d503_4942_9c11_e04e59427ec1_for_the_south_asian_express", "webcams_list_country_country_country_for_webcams_travel", "transit_for_mymappi"], "api_descs": {"Finish": "No description available.", "chains_for_defi_data": "Get current TVL of all chains", "chart_artists_for_genius_song_lyrics": "Chart: Artists", "coins_get_brief_chart_for_investing_cryptocurrency_markets": "Get brief information chart of specific cryptocurrency", "consulta_pessoa_for_consulta_cnpj_tempo_real": "Consulta Pessoa", "en_map_v1_z_x_y_png_for_offline_maptiles": "Download English tile", "get_models_by_make_id_for_car_specs": "Returns a list of all models for a given car make.", "get_three_tarot_card_for_horoscope_astrology": "This endpoint returns a randomly selected tarot card from a traditional tarot deck, along with its corresponding interpretation and meaning. The tarot card reading is generated using a randomized algorithm, offering users a unique and personalized tarot experience. The API is designed to be easy to use, allowing developers to integrate tarot card readings into their own applications and websites.", "get_users_68a613f6_d503_4942_9c11_e04e59427ec1_for_the_south_asian_express": "List Tags", "getstatsbyyear_for_trinidad_covid_19_statistics": "This endpoint delivers Trinidad & Tobago Covid 19 statistics by year. For a valid response, the beginning year is 2020 and the latest year is the current year.", "hin_decoder_return_json_for_hull_id_boat_hin_decoder": "returns json decoded data", "local_osm_v1_z_x_y_png_for_offline_maptiles": "Download OpenStreetMap standard tile", "nearest_for_locationiq": "Snaps a coordinate to the street network and returns the nearest n matches. Where coordinates only supports a single {longitude},{latitude} entry.", "products_v2_get_details_deprecated_for_target": "Get detail information of product", "rest_api_deep_image_result_jobhash_for_deep_image": " ", "transit_for_mymappi": "Calculates a route between an origin and a destination in public transport. It takes into consideration several configuration options in order to customize the response.", "v1_animals_for_animals_by_api_ninjas": "API Ninjas Animals API endpoint. Returns up to 10 results matching the input name parameter.", "webcams_list_country_country_country_for_webcams_travel": "This is a modifier. Returns a list of webcams according to the listed country. Multiple countries must be separated by comma. Required: at least one {country}. Possible values are ISO 3166-1-alpha-2 codes."}, "aseqs": [{"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: local_osm_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 6,\n  \"x\": 40,\n  \"y\": 25\n}", "api_reaction": null}, {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: local_osm_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 9,\n  \"x\": 160,\n  \"y\": 100\n}", "api_reaction": null}, {"api_name": "en_map_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: en_map_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 6,\n  \"x\": 40,\n  \"y\": 25\n}", "api_reaction": null}, {"api_name": "en_map_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: en_map_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 9,\n  \"x\": 160,\n  \"y\": 100\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles"}}, {"state": "generated_by_agent", "aseq": {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: local_osm_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 9,\n  \"x\": 760,\n  \"y\": -352\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: local_osm_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 6,\n  \"x\": 40,\n  \"y\": 25\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: local_osm_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 9,\n  \"x\": 160,\n  \"y\": 100\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "local_osm_v1_z_x_y_png_for_offline_maptiles", "api_action": "\nAction: local_osm_v1_z_x_y_png_for_offline_maptiles\nAction Input: {\n  \"z\": 6,\n  \"x\": 4905,\n  \"y\": 2783\n}", "api_reaction": null}}]}
{"URL": "87624", "query": "Find information about tourist attractions in San Francisco. Include their names, descriptions, and images. Also, provide the URL for more details.", "api_names": ["entities_search_for_bing_entity_search", "Finish", "leaguedetails_for_icehockeyapi", "category_for_asin_data", "qualifying_results_for_fia_formula_1_championship_statistics", "check_user_exists_for_waifu", "singapore_scheduled_flights_level_for_global_flight_data", "cinemas_cinemaid_films_filmid_showtimes_for_argentina_movie_theatres"], "api_descs": {"Finish": "No description available.", "category_for_asin_data": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results for an Amazon category. Categories can be specified either via passing an Amazon category URL in to the url parameter, or by passing a Category ID in the `category_id` and an Amazon domain in the `amazon_domain` parameter. The parameters should be appended as querystring parameters to the Product Data API GET HTTP request.\n\nCategory results are retrieved from the category listing page on Amazon.", "check_user_exists_for_waifu": "Check user exists", "cinemas_cinemaid_films_filmid_showtimes_for_argentina_movie_theatres": " ", "entities_search_for_bing_entity_search": "Get entities and places results for a given query.", "leaguedetails_for_icehockeyapi": "Get the details of a specific Ice Hockey league by providing the tournament ID.", "qualifying_results_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the qualifying results for a specific race by specifying the year and location as path parameters. The parameters are required.", "singapore_scheduled_flights_level_for_global_flight_data": "Get weekly Singapore scheduled departing flights level."}, "aseqs": [{"api_name": "entities_search_for_bing_entity_search", "api_action": "\nAction: entities_search_for_bing_entity_search\nAction Input: {\n  \"q\": \"tourist attractions in San Francisco\",\n  \"responsefilter\": \"Entities\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "entities_search_for_bing_entity_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "entities_search_for_bing_entity_search"}}]}
{"URL": "53933", "query": "Find me the details of a hotel with ID 1105156 in AE. Also, provide me with the overall score and reviews summary for this hotel.", "api_names": ["reviews_scores_for_hotels_com_provider", "hotel_info_for_hotels_com_provider", "hotel_details_for_hotels_com_provider", "Finish", "reviews_summary_for_hotels_com_provider", "find_zip_codes_by_city_for_polish_zip_codes", "get_call_for_passport_verification", "get_username_arena_of_valor_for_id_game_checker", "top_free_mac_apps_for_app_store", "basketball_match_statistics_for_sports_live_scores", "crawl_for_seo_api", "geteasyquestion_for_leetcodeapi", "get_all_ai_news_for_ai_news_v2", "getevents_for_kalshi_trading_api", "title_seasons_for_watchmode", "get_amazon_product_details_for_basic_amazon_scraper", "send_name_birthday_cakes_for_birthday_cake_with_name_generator", "market_get_full_for_bb_finance", "getuservideos_for_helioviewer_v1", "projected_pga_rankings_for_golf_leaderboard_data"], "api_descs": {"Finish": "No description available.", "basketball_match_statistics_for_sports_live_scores": "Returns Statistics about a given match_id. The match does not have to be necessarily live but also finished. You can retrieve Match IDs from the Football Live Matches endpoint.", "crawl_for_seo_api": "Perform Google Search\n\n Parameters\n----------\nquery : the string query to perform search. supports advance queries. Check out https://moz.com/blog/the-ultimate-guide-to-the-google-search-parameters guide for formating\n\nReturns\n-------\njson: a the html source of the results page", "find_zip_codes_by_city_for_polish_zip_codes": "Return all zip codes that belong to this city. If there is more then one city with that name, all zip codes are returned.", "get_all_ai_news_for_ai_news_v2": "This endpoint will return back all news about artificial intelligence around the world", "get_amazon_product_details_for_basic_amazon_scraper": "GET Product Details: Get all details pertaining to a product ID (ASIN)", "get_call_for_passport_verification": "Used to fetch api result using the request id received in responses.", "get_username_arena_of_valor_for_id_game_checker": "Enter your Arena of Valor ID  in the required parameters", "geteasyquestion_for_leetcodeapi": "Get the number of easy question solved by the user", "getevents_for_kalshi_trading_api": "Endpoint for getting data about all events.", "getuservideos_for_helioviewer_v1": "Get a listing (in descending time order) of the most recently user-generated movies that have been publicly shared to YouTube.  Result set is limited to the value requested or default value of the `num` parameter (unless truncated when the date value of the `since` parameter is reached).", "hotel_details_for_hotels_com_provider": "Get hotel details", "hotel_info_for_hotels_com_provider": "Get hotel info", "market_get_full_for_bb_finance": "Get all field and information about tickers", "projected_pga_rankings_for_golf_leaderboard_data": "This endpoint allows you to see the projected PGA rankings throughout a PGA event", "reviews_scores_for_hotels_com_provider": "Get hotel overall score", "reviews_summary_for_hotels_com_provider": "Get hotel reviews summary", "send_name_birthday_cakes_for_birthday_cake_with_name_generator": "Write name on birthday cake for free", "title_seasons_for_watchmode": "Return all of the seasons for a TV show or mini-series.", "top_free_mac_apps_for_app_store": "Get list of the top free mac apps"}, "aseqs": [{"api_name": "hotel_details_for_hotels_com_provider", "api_action": "\nAction: hotel_details_for_hotels_com_provider\nAction Input: {\n  \"domain\": \"www.hotels.com\",\n  \"locale\": \"en_US\",\n  \"hotel_id\": 1105156\n}", "api_reaction": null}, {"api_name": "hotel_details_for_hotels_com_provider", "api_action": "\nAction: hotel_details_for_hotels_com_provider\nAction Input: {\n  \"domain\": \"AE\",\n  \"locale\": \"en_US\",\n  \"hotel_id\": 1105156\n}", "api_reaction": null}, {"api_name": "hotel_info_for_hotels_com_provider", "api_action": "\nAction: hotel_info_for_hotels_com_provider\nAction Input: {\n  \"hotel_id\": 1105156,\n  \"locale\": \"en_GB\",\n  \"domain\": \"AE\"\n}", "api_reaction": null}, {"api_name": "reviews_summary_for_hotels_com_provider", "api_action": "\nAction: reviews_summary_for_hotels_com_provider\nAction Input: {\n  \"locale\": \"en_GB\",\n  \"domain\": \"AE\",\n  \"hotel_id\": 1105156\n}", "api_reaction": null}, {"api_name": "reviews_scores_for_hotels_com_provider", "api_action": "\nAction: reviews_scores_for_hotels_com_provider\nAction Input: {\n  \"domain\": \"AE\",\n  \"locale\": \"en_GB\",\n  \"hotel_id\": 1105156\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "hotel_details_for_hotels_com_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reviews_scores_for_hotels_com_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reviews_scores_for_hotels_com_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reviews_scores_for_hotels_com_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reviews_scores_for_hotels_com_provider"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reviews_scores_for_hotels_com_provider", "api_action": "\nAction: reviews_scores_for_hotels_com_provider\nAction Input: {\n  \"domain\": \"AE\",\n  \"locale\": \"en_GB\",\n  \"hotel_id\": 1105156\n}", "api_reaction": null}}]}
{"URL": "86773", "query": "My company is considering integrating the underscore test tool into our system. Can you assist me by explaining how to use the '/test' API endpoint? Thanks in advance!", "api_names": ["test_for_underscore_test", "Finish", "hotspot_for_indonesia_hotspot_and_fire_location_data", "products_for_interceptor_sample", "game_for_game", "getwebhooks_for_mailslurp_email_testing", "flight_for_flight_integration", "download_reverbnation_song_for_reverbnation_song_downloader", "game_boxscore_gamepk_for_baseball", "search_for_hadiths_with_key_words_for_hadiths_api", "channel_videos_playlists_for_youtube_v3_lite", "get_word_for_random_word_api"], "api_descs": {"Finish": "No description available.", "channel_videos_playlists_for_youtube_v3_lite": "Get channel videos or playlists.\nQuota cost is 1.", "download_reverbnation_song_for_reverbnation_song_downloader": "Get song data & download URL of any paid song.\n(Fetch song name, artist, thumbnail, duration & mp3 downloadable link)", "flight_for_flight_integration": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "game_boxscore_gamepk_for_baseball": "Query Baseball games, teams, scores etc...", "game_for_game": "get game", "get_word_for_random_word_api": "Returns a random word. No parameters. Just randomness.", "getwebhooks_for_mailslurp_email_testing": " ", "hotspot_for_indonesia_hotspot_and_fire_location_data": "Indonesian Realtime Hotspot", "products_for_interceptor_sample": "list of products", "search_for_hadiths_with_key_words_for_hadiths_api": "Searching for hadiths. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database.", "test_for_underscore_test": "/test"}, "aseqs": [{"api_name": "test_for_underscore_test", "api_action": "\nAction: test_for_underscore_test\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to call the '/test' API endpoint to retrieve information about how to use it.\n\t\"api_name\": \"test_for_underscore_test\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "test_for_underscore_test"}}]}
{"URL": "5127", "query": "I'm planning to write an article about cryptocurrency. Can you provide me with the most recent stories on medium.com related to this topic? It would be helpful to see the titles, authors, and publication dates of these articles.", "api_names": ["search_topics_for_medium", "search_stories_for_medium", "stories_topic_for_medium", "Finish", "advanced_phone_number_lookup_for_scout", "endpoint1_for_13f918yf19o1t1f1of1t9", "video_id_by_url_for_tiktok_v3", "telegram_channel_info_for_telegram_v2", "business_idea_for_business_starter_api", "search_for_american_company_business_data", "search_for_hadiths_with_key_words_for_hadiths_api", "storageexists_for_aspose_cells_cloud", "get_movies_by_name_for_imdb_api", "similar_hashtags_for_hashtag", "generate_qr_code_for_easy_qr_code", "documentation_environment_for_wordle_api", "timeframe_for_currencyapi_net", "list_of_markets_for_pinnacle_odds", "news_for_football_v2", "music_lovers_for_69bd0c7193msh3c4abb39db3a82fp18c336jsn8470910ae9f0"], "api_descs": {"Finish": "No description available.", "advanced_phone_number_lookup_for_scout": "**Advanced Phone Number Information**\n\n*retrieves valuable technical data about a phone number*\n\n- validity\n\n- approximate location\n\n- timezone\n\n- carrier\n\n- line type\n\n- ported status\n\n- carrier\n\n- robocall/spam score\n\n- much more", "business_idea_for_business_starter_api": "Generate a business idea", "documentation_environment_for_wordle_api": " ", "endpoint1_for_13f918yf19o1t1f1of1t9": "endpoint1", "generate_qr_code_for_easy_qr_code": "Generate QR Code by providing content", "get_movies_by_name_for_imdb_api": "<br /><br />\n<b>Authentication:</b> not required", "list_of_markets_for_pinnacle_odds": "Get a list of markets. Always first issue a snapshot call and continue with the delta calls. Calls return changes since the provided `since` value.  You must always use the `since` parameter, after starting your program cycle. You can make request without a `since` parameter no more than 15 times in 5 minutes. Please note that `prematch` and `live` events are different", "music_lovers_for_69bd0c7193msh3c4abb39db3a82fp18c336jsn8470910ae9f0": "recibe datos", "news_for_football_v2": "Search all the news for a specific championship.", "search_for_american_company_business_data": "Search business contacts", "search_for_hadiths_with_key_words_for_hadiths_api": "Searching for hadiths. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database.", "search_stories_for_medium": "", "search_topics_for_medium": "", "similar_hashtags_for_hashtag": "Generated related hashtags to a text input provided", "storageexists_for_aspose_cells_cloud": " ", "stories_topic_for_medium": "", "telegram_channel_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Channel\n\n- Title\n- Photo\n- Description\n- Members", "timeframe_for_currencyapi_net": "Display a currency conversion's historical rates within a given timeframe", "video_id_by_url_for_tiktok_v3": "get video Id by  url"}, "aseqs": [{"api_name": "search_topics_for_medium", "api_action": "\nAction: search_topics_for_medium\nAction Input: {\n  \"q\": \"cryptocurrency\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "stories_topic_for_medium", "api_action": "\nAction: stories_topic_for_medium\nAction Input: {\n  \"topic\": \"cryptocurrency\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "search_stories_for_medium", "api_action": "\nAction: search_stories_for_medium\nAction Input: {\n  \"q\": \"cryptocurrency\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "stories_topic_for_medium", "api_action": "\nAction: stories_topic_for_medium\nAction Input: {\n  \"topic\": \"cryptocurrency\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_stories_for_medium"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_stories_for_medium"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_stories_for_medium"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_stories_for_medium"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_stories_for_medium"}}]}
{"URL": "8761", "query": "I'm planning to create a video about the latest tech gadgets. Can you recommend some trending videos to get inspiration from?", "api_names": ["channel_videos_for_youtube_search", "Finish", "radical_english_meaning_for_learn_to_read_and_write_japanese_kanji", "getfileslist_for_groupdocs_conversion_cloud", "getvideo_for_tiktok_info", "pga_scorecards_for_golf_leaderboard_data", "getqrcode_for_green_api", "bookmakers_for_surebets_2", "search_countries_by_currency_for_geography", "online_music_for_online_music"], "api_descs": {"Finish": "No description available.", "bookmakers_for_surebets_2": "Available Bookmakers", "channel_videos_for_youtube_search": "Get the latest videos published by a Youtube channel", "getfileslist_for_groupdocs_conversion_cloud": " ", "getqrcode_for_green_api": "Документация [QR](https://green-api.com/docs/api/account/QR/)", "getvideo_for_tiktok_info": "Get all the video information like Play URL, Cover, Stats, Codec along with Author and Music details", "online_music_for_online_music": "Слушать бесплатно онлайн на online-music.su. Лучшие песни русских ретро групп и исполнителей. Руccкая ретро поп-рок-шансон музыка 1970х-2000х, лучшая забугорная музыка ретро эпохи.", "pga_scorecards_for_golf_leaderboard_data": "Provides scorecards for a given player in a given tournament", "radical_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "search_countries_by_currency_for_geography": "Search Countries by currency used by the country. The search can be based on currency code or currency name. By default substring match is used. If exact match is required, one should pass query parameter \"exactMatch=true\""}, "aseqs": [{"api_name": "channel_videos_for_youtube_search", "api_action": "\nAction: channel_videos_for_youtube_search\nAction Input: {\n  \"channelid\": \"UC6ZFN9Tx6xh-skXCuRHCDpQ\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "channel_videos_for_youtube_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "channel_videos_for_youtube_search"}}]}
{"URL": "67692", "query": "I want to research cars and need detailed information about a specific car model. Can you provide me with the model generations, model years, and expert ratings for the car model with the ID 428? Additionally, I would like to see images of the car model for each model year.", "api_names": ["cars_detail_for_consumer_reports", "cars_get_images_for_consumer_reports", "Finish", "get_count_and_increase_by_one_for_counter", "home_for_contextoguess", "endponit_for_probablythese", "search_in_drill_store_for_drillster_2_0", "markets_for_skyscanner_api", "v1_timezone_for_timezone_by_api_ninjas", "get_last_n_candles_nse_for_stockseyes", "api_v1_for_reverse_ns", "event_statistics_alt_for_flashlive_sports"], "api_descs": {"Finish": "No description available.", "api_v1_for_reverse_ns": "", "cars_detail_for_consumer_reports": "Get detailed information of car model by year", "cars_get_images_for_consumer_reports": "Get images of car model by year", "endponit_for_probablythese": "This is an End Point", "event_statistics_alt_for_flashlive_sports": "Get event statistics by event ID (darts)", "get_count_and_increase_by_one_for_counter": "get count and increase by one", "get_last_n_candles_nse_for_stockseyes": "The /getLastNCandles API returns latest n number of candles formed for given trading symbol and time frame. The timeFrame parameter allows you to select the time frame of candleStick, with options of 1m, 5m, 15m, or 1h for 1 minute candle, 5 minute candle, 15 minute candle, 1 hour candle respectively. The tradingSymbol parameter lets you select any valid trading symbol of stocks that are part of the Nifty 500 or the top 500 stocks, giving you access to the data you need for the stocks you're interested in.", "home_for_contextoguess": "Home", "markets_for_skyscanner_api": "You can use the `/markets` endpoint to retrieve the market countries that we support. Most suppliers (airlines, travel agents, and car hire dealers) set their fares based on the market (or country of purchase). It is therefore necessary to specify the market country in every query. The names of the markets returned are localised based on a locale passed as a parameter.", "search_in_drill_store_for_drillster_2_0": "Search the Drill Store for available drills and courses.", "v1_timezone_for_timezone_by_api_ninjas": "API Ninjas Timezone API endpoint. Returns the timezone name of the specified input location.\n\nEither both (**lat** and **lon**) or (**city**/**state**/**country**) parameters must be set."}, "aseqs": [{"api_name": "cars_detail_for_consumer_reports", "api_action": "\nAction: cars_detail_for_consumer_reports\nAction Input: {\n  \"modelyearid\": 7328\n}", "api_reaction": null}, {"api_name": "cars_get_images_for_consumer_reports", "api_action": "\nAction: cars_get_images_for_consumer_reports\nAction Input: {\n  \"modelyearid\": 7328\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "api_v1_for_reverse_ns"}}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get the model details first before obtaining images and ratings for each year, so I will call cars_detail_for_consumer_reports again with the correct parameter.\n\t\"api_name\": \"cars_detail_for_consumer_reports\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "Finish"}}]}
{"URL": "41673", "query": "I need to validate phone numbers in my app. Can you suggest an API that checks if a given phone number is valid and returns its country code? It would be great if the API also provides the phone number type and format.", "api_names": ["is_valid_for_phone_validator_api", "Finish", "health_for_localization_services", "trip_details_for_flixbus", "get_place_by_my_ip_for_spott", "get_job_status_for_large_text_to_speech", "get_the_yield_for_sundayfinance", "api_aaaa_domain_for_dns_lookup"], "api_descs": {"Finish": "No description available.", "api_aaaa_domain_for_dns_lookup": "Sample request:\r\nGET /api/aaaa/oxog.net", "get_job_status_for_large_text_to_speech": "Get the status and results of a job", "get_place_by_my_ip_for_spott": "Returns the place related to the IP where the request was performed. Returns \"Not Found\" error when no place is related to the IP.", "get_the_yield_for_sundayfinance": "Feed in the ticker and get the yield", "health_for_localization_services": "Checks health status of services", "is_valid_for_phone_validator_api": "Validates both phone number length and the actual phone number digits, returns `true` or `false`.", "trip_details_for_flixbus": "Get a trip details by trip uid"}, "aseqs": [{"api_name": "is_valid_for_phone_validator_api", "api_action": "\nAction: is_valid_for_phone_validator_api\nAction Input: {\n  \"phone\": 1234567890\n}", "api_reaction": null}, {"api_name": "is_valid_for_phone_validator_api", "api_action": "\nAction: is_valid_for_phone_validator_api\nAction Input: {\n  \"phone\": 1234567890\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "is_valid_for_phone_validator_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "is_valid_for_phone_validator_api", "api_action": "\nAction: is_valid_for_phone_validator_api\nAction Input: {\n  \"phone\": 9876543210,\n  \"return_country_code\": true,\n  \"return_type_and_format\": true\n}"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"is_valid_for_phone_validator_api\",\n\t\"api_action\": \"\\nAction: is_valid_for_phone_validator_api\\nAction Input: {\\n  \\\"phone\\\": 9876543210\\n}\",\n}"}]}
{"URL": "48911", "query": "Download the latest version of the file 'image.jpg' from my storage and provide me with the download link. Also, let me know the available storage space.", "api_names": ["downloadfile_for_groupdocs_watermark_cloud", "storageexists_for_groupdocs_watermark_cloud", "getdiscusage_for_groupdocs_watermark_cloud", "Finish", "timezone_by_area_for_world_time", "catalog_albums_for_billboard_api_v2", "get_all_employees_payment_cards_for_human_resources_api", "keyword_for_targeted_keyword_trend", "getfutureeventsbytopic_for_azure", "getcurrentweather_for_openweather", "some_for_mail_temple", "fetchallassociationsbelongingtoamatch_for_cleardil", "get_makes_for_car_specs", "toptier_summary_for_sciphercrypto", "matches_v2_list_by_league_for_livescore_v2", "cat_facts_for_random_cat_fact", "get_endpoint_for_melrose_labs_voice_api", "placeslistbystate_for_mapreflex", "get_list_of_publicly_traded_companies_for_stoxx", "measure_distance_for_uganda_api"], "api_descs": {"Finish": "No description available.", "cat_facts_for_random_cat_fact": "Get some random cat fact", "catalog_albums_for_billboard_api_v2": "Billboard U.S. Afrobeats Songs chart \nis weekly based. \n\nIf `week` is not supplied, will default to last week. \nif the week date is not Saturday, will default to Saturday of that week", "downloadfile_for_groupdocs_watermark_cloud": " ", "fetchallassociationsbelongingtoamatch_for_cleardil": " ", "get_all_employees_payment_cards_for_human_resources_api": "This endpoint gets all the available records in the bank cards table, up to 900 cards with their information.\nFor example:  card number , holder name, and  etc...", "get_endpoint_for_melrose_labs_voice_api": "Get endpoint for a number", "get_list_of_publicly_traded_companies_for_stoxx": "Provides a list of all publicly traded companies", "get_makes_for_car_specs": "Returns a list of all car manufacturers available in the API.", "getcurrentweather_for_openweather": "Test", "getdiscusage_for_groupdocs_watermark_cloud": " ", "getfutureeventsbytopic_for_azure": "Get future Azure events by topic.", "keyword_for_targeted_keyword_trend": "Returns “Monthly Data” and “Search count” for a given keyword", "matches_v2_list_by_league_for_livescore_v2": "List all matches by specific league and table\n* Base for Img field is https://lsm-static-prod.livescore.com/medium . Ex : https://lsm-static-prod.livescore.com/medium/enet/9906.png", "measure_distance_for_uganda_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Nansana to Kampala**", "placeslistbystate_for_mapreflex": "Get a plain list of Places of a state. Result is a plain list of place ids, not GeoJSON format. To retrieve boundaries of all Places of a state you may query method \"placesByIds\" with a portion of current method output.", "some_for_mail_temple": "nothing", "storageexists_for_groupdocs_watermark_cloud": " ", "timezone_by_area_for_world_time": "Request a list of valid locations for an area", "toptier_summary_for_sciphercrypto": "This response returns an ascending crypto coins the rank varies the way you choose limit if you choose 10 as limit you will get the top 10 cryptos\n->limit= Options are: 1-->100\n->page= Options are: 1-->100 based on limit rate \n->assetClass= Options are: ALL,DEFI,NFT\n->tsym\" typically stands for \"to symbol\", which represents the cryptocurrency that the conversion rate is being calculated for."}, "aseqs": [{"api_name": "getdiscusage_for_groupdocs_watermark_cloud", "api_action": "\nAction: getdiscusage_for_groupdocs_watermark_cloud\nAction Input: {}", "api_reaction": null}, {"api_name": "getdiscusage_for_groupdocs_watermark_cloud", "api_action": "\nAction: getdiscusage_for_groupdocs_watermark_cloud\nAction Input: {}", "api_reaction": null}, {"api_name": "storageexists_for_groupdocs_watermark_cloud", "api_action": "\nAction: storageexists_for_groupdocs_watermark_cloud\nAction Input: {\n  \"storagename\": \"my_storage\"\n}", "api_reaction": null}, {"api_name": "downloadfile_for_groupdocs_watermark_cloud", "api_action": "\nAction: downloadfile_for_groupdocs_watermark_cloud\nAction Input: {\n  \"path\": \"/image.jpg\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "storageexists_for_groupdocs_watermark_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "downloadfile_for_groupdocs_watermark_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "downloadfile_for_groupdocs_watermark_cloud"}}, {"state": "generated_by_agent", "aseq": {"api_name": "downloadfile_for_groupdocs_watermark_cloud", "api_action": "\nAction: downloadfile_for_groupdocs_watermark_cloud\nAction Input: {\n  \"storagename\": \"my_storage\",\n  \"filename\": \"image.jpg\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "downloadfile_for_groupdocs_watermark_cloud", "api_action": "\nAction: downloadfile_for_groupdocs_watermark_cloud\nAction Input: {\n  \"path\": \"/image.jpg\"\n}", "api_reaction": null}}]}
{"URL": "10648", "query": "I am a horse racing fan and I am interested in a specific horse named ZANAHIYR. Can you provide me with the horse's stats? Additionally, I would like to know the trainers' win rate in the last 7 days.", "api_names": ["trainers_win_rate_for_horse_racing", "query_horses_for_horse_racing", "horse_stats_for_horse_racing", "Finish", "v1_list_banks_for_hryvna_today", "legacy_v1_for_blackbox", "get_models_v1_for_shapeways", "laravel_jobs_for_usa_jobs_for_it", "me_for_ocoya", "song_details_for_genius_song_lyrics", "channel_search_for_youtube_search", "search_for_superhero_search", "removeendpointdata_for_endpoint_monitor_tool", "yaml_for_stopmodreposts_blocklist", "words_for_jibber_jabber", "overview_of_channels_for_youtube_classification_api", "nodejs_jobs_for_usa_jobs_for_it", "youtoosound_for_youtoosound", "products_v2_detail_for_forever21", "mpds_for_materials_platform_for_data_science"], "api_descs": {"Finish": "No description available.", "channel_search_for_youtube_search": "This endpoint gets search results in a given Youtube channel using the channel ID", "get_models_v1_for_shapeways": "", "horse_stats_for_horse_racing": "Get horse results history.", "laravel_jobs_for_usa_jobs_for_it": "Laravel Jobs Api", "legacy_v1_for_blackbox": "This is a legacy and free IP checked. We provide a simply non-json style response to requests. Responses are cached for 7 days. \n\nCheck out our Documentation for more information.\n\nResponses will be (Y,E,N):\n\n(Y) : Yes, we have determined the IP address to be used by either or multiple of the following: Cloud, Hosting, Tor, Proxy. \n\n(E) : Error, something has gone wrong with the request.\n\n(N) : No, we have determined the IP address to be NOT used by any of the following: Cloud, Hosting, Tor, Proxy.", "me_for_ocoya": "Returns information about authenticated user.", "mpds_for_materials_platform_for_data_science": "Retrieve materials data, see www.mpds.io", "nodejs_jobs_for_usa_jobs_for_it": "NodeJs Jobs Api", "overview_of_channels_for_youtube_classification_api": "GET Overview of channels", "products_v2_detail_for_forever21": "Get detail information of product by id", "query_horses_for_horse_racing": "Search horses by name. \nOnce you get \"*id_horse*\" from this query, you can get horses stats from \"**Horse stats**\" endpoint.", "removeendpointdata_for_endpoint_monitor_tool": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.", "search_for_superhero_search": "This endpoint searches through our superhero database", "song_details_for_genius_song_lyrics": "A song is a document hosted on Genius. It's usually music lyrics.\n\nData for a song includes details about the document itself and information about all the referents that are attached to it, including the text to which they refer.", "trainers_win_rate_for_horse_racing": "Get Trainers stats in the last days.\nRuns, Wins and Win Rate in %.", "v1_list_banks_for_hryvna_today": "", "words_for_jibber_jabber": "Returns random **words**", "yaml_for_stopmodreposts_blocklist": "YAML Ain't Markup Language endpoint", "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome"}, "aseqs": [{"api_name": "query_horses_for_horse_racing", "api_action": "\nAction: query_horses_for_horse_racing\nAction Input: {\n  \"name\": \"ZANAHIYR\"\n}", "api_reaction": null}, {"api_name": "horse_stats_for_horse_racing", "api_action": "\nAction: horse_stats_for_horse_racing\nAction Input: {\n  \"id_horse\": \"240425\"\n}", "api_reaction": null}, {"api_name": "trainers_win_rate_for_horse_racing", "api_action": "\nAction: trainers_win_rate_for_horse_racing\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "query_horses_for_horse_racing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "horse_stats_for_horse_racing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trainers_win_rate_for_horse_racing"}}, {"state": "generated_by_agent", "aseq": {"api_name": "horse_stats_for_horse_racing"}}]}
{"URL": "68582", "query": "I am planning a trip to Tokyo next month with my friends. Can you provide me with the current conversion rate from USD to JPY? Additionally, I would like to know the historical rates for the past week. Please display the rates in JSON format.", "api_names": ["timeframe_for_currencyapi_net", "rates_for_currencyapi_net", "Finish", "getdiscusage_for_groupdocs_merger_cloud", "v1_profanityfilter_for_profanity_filter_by_api_ninjas", "countries_list_for_city_and_state_search_api", "get_version_for_people_photo_background_removal", "getsecondword_for_contextoguess", "check_similarity_for_whois_lookup_v3", "findimageduplicates_for_aspose_imaging_cloud", "get_event_for_today_in_history", "supported_currencies_for_exchanger_currency_rates_provider", "getsupportedfileformats_for_groupdocs_comparison_cloud", "getcountrycode_for_asktheworld", "get_channel_points_context_for_twitch_api"], "api_descs": {"Finish": "No description available.", "check_similarity_for_whois_lookup_v3": "This endpoint Helps to check if two domains are similar.\n\nParemeters:\n> domain1 \n>domain2", "countries_list_for_city_and_state_search_api": "This endpoint returns a list of countries.", "findimageduplicates_for_aspose_imaging_cloud": " ", "get_channel_points_context_for_twitch_api": "Returns channel points info.", "get_event_for_today_in_history": "Gets a detailed summary of an event.", "get_version_for_people_photo_background_removal": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getcountrycode_for_asktheworld": "Gets all Country Codes which you can use to search for a specific country.", "getdiscusage_for_groupdocs_merger_cloud": " ", "getsecondword_for_contextoguess": "returns the second word for a given game", "getsupportedfileformats_for_groupdocs_comparison_cloud": " ", "rates_for_currencyapi_net": "Get live currency conversion rates of a given currency", "supported_currencies_for_exchanger_currency_rates_provider": "Return the list of all supported currencies including \n\n- Country Name \n- Country Code\n- Currency Code", "timeframe_for_currencyapi_net": "Display a currency conversion's historical rates within a given timeframe", "v1_profanityfilter_for_profanity_filter_by_api_ninjas": "API Ninjas Profanity Filter API endpoint. Returns the censored version (bad words replaced with asterisks) of any given text and whether the text contains profanity."}, "aseqs": [{"api_name": "rates_for_currencyapi_net", "api_action": "\nAction: rates_for_currencyapi_net\nAction Input: {}", "api_reaction": null}, {"api_name": "timeframe_for_currencyapi_net", "api_action": "\nAction: timeframe_for_currencyapi_net\nAction Input: {\n  \"start_date\": \"2022-04-01\",\n  \"end_date\": \"2022-04-07\",\n  \"base\": \"USD\",\n  \"output\": \"JSON\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "rates_for_currencyapi_net"}}, {"state": "generated_by_agent", "aseq": {"api_name": "timeframe_for_currencyapi_net", "api_action": "{\"from\":\"2023-01-28\",\"to\":\"2023-02-04\",\"base\":\"USD\",\"symbols\":\"JPY\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "supported_currencies_for_exchanger_currency_rates_provider"}}]}
{"URL": "72486", "query": "I'm a blogger interested in current affairs. Can you provide me with the headlines, content, and URLs of the news articles from CNN Arabic, Youm7, and Alarabiya? It would be helpful to have the images as well.", "api_names": ["cnn_arabic_for_arabic_news_api", "alarabiya_for_arabic_news_api", "youm7_for_arabic_news_api", "Finish", "track_list_playlist_for_spotify_downloader", "anime_wallpapers_related_to_the_wedding_by_pagination_for_premium_anime_mobile_wallpapers_illustrations", "v1_databasestatus_for_uspto_trademark", "keywords_for_everypixel_image_recognition", "storageexists_for_groupdocs_comparison_cloud", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations", "blogs_by_category_for_blogsapi", "user_groups_list_for_steam_community", "shorts_sequence_for_yt_api", "wrt_transformer_for_walnut_word_completion", "video_details_for_youtube_v3_alternative", "availability_for_kayuloweather", "tweet_favoriters_for_twitter_v4", "company_by_name_for_company_consultation_reportero_industrial_mexicano_api", "latest_top_15_earthquake_for_indonesia_latest_weather_and_earthquake", "target_store_location_search_for_target_com_store_product_reviews_locations_data"], "api_descs": {"Finish": "No description available.", "alarabiya_for_arabic_news_api": "مسار يسترجع اخر الاخبار من موقع العربية نت", "anime_wallpapers_related_to_the_wedding_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get anime wallpapers related to the wedding:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1 : 0-10 \npage 2: 10-20 ......\n\nOn the above **sensitivity**, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "availability_for_kayuloweather": "Determine the data sets available for the specified location.", "blogs_by_category_for_blogsapi": "Get all blogs from a particular category by its ID.", "cnn_arabic_for_arabic_news_api": "مسار يسترجع جميع الأخبار من موقع سي ان ان بالعربية", "company_by_name_for_company_consultation_reportero_industrial_mexicano_api": "Return company data", "keywords_for_everypixel_image_recognition": "By sending an image to this method you can get a list of suggested keywords. You may specify a number of returned words or a threshold of its minimum score. Just provide num_keywords or threshold parameter to this method.", "latest_top_15_earthquake_for_indonesia_latest_weather_and_earthquake": "Latest Top 15 Earthquake", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get recent anime wallpapers without any categorization:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "shorts_sequence_for_yt_api": "Get Shorts sequence.\nQuota cost is 2 units.", "storageexists_for_groupdocs_comparison_cloud": " ", "target_store_location_search_for_target_com_store_product_reviews_locations_data": "The endpoint returns Target Store locations details\n\n- Only US **zip** codes are accepted\n- **radius** is in miles", "track_list_playlist_for_spotify_downloader": "Get Track List from Playlist", "tweet_favoriters_for_twitter_v4": "Tweet Favoriters", "user_groups_list_for_steam_community": "Get a listing of all the public and private groups a user is apart of.", "v1_databasestatus_for_uspto_trademark": "Returns info about the freshness of the Trademark Search API database.\n\n`last_update_date` holds the date of the newest entry from USPTO filling entries that is synced to the API. \n\n`latest_trademark` array holds 10 random samples from the most recent confirmed registered trademarks, the `keyword`, the `registration_number` and the `registration_date` . Please note the date could be a few days back as not every day are published new registration of trademarks. They publish daily new partial filings and abandoned trademarks.", "video_details_for_youtube_v3_alternative": "Get details of the YouTube video.", "wrt_transformer_for_walnut_word_completion": "Returns the hidden word in the sentence.", "youm7_for_arabic_news_api": "هذا المسار يقوم باسترجاع جميع الأخبار من موقع اليوم السابع المصري"}, "aseqs": [{"api_name": "cnn_arabic_for_arabic_news_api", "api_action": "\nAction: cnn_arabic_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "youm7_for_arabic_news_api", "api_action": "\nAction: youm7_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "alarabiya_for_arabic_news_api", "api_action": "\nAction: alarabiya_for_arabic_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "cnn_arabic_for_arabic_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "youm7_for_arabic_news_api", "api_action": "\nAction: youm7_for_arabic_news_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_headlines_and_urls_for_arabic_news_sources_api", "api_action": "\nAction: get_headlines_and_urls_for_arabic_news_sources_api\nAction Input: {\n    \"sources\": [\n        \"CNN Arabic\",\n        \"Youm7\",\n        \"Alarabiya\"\n    ]}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": [{"api_name": "cnn_arabic_for_arabic_news_api", "api_action": "\nAction: cnn_arabic_for_arabic_news_api\nAction Input: {}"}, {"api_name": "youm7_for_arabic_news_api", "api_action": "\nAction: youm7_for_arabic_news_api\nAction Input: {}"}, {"api_name": "alarabiya_for_arabic_news_api", "api_action": "\nAction: alarabiya_for_arabic_news_api\nAction Input: {}"}]}]}
{"URL": "40718", "query": "I'm organizing a movie marathon for my company and we want to include the movie 'Titanic'. Can you help us by retrieving the movie reviews, cast details with their images, and some movie images? It would be great if you could also provide the movie ID.", "api_names": ["get_movie_reviews_by_id_for_cinema_api", "get_cast_by_id_for_cinema_api", "Finish", "get_movie_id_by_title_for_cinema_api", "get_movie_images_by_id_for_cinema_api", "info_for_investing_financial_stocks", "getgames_for_diablo4_smartable", "simulations_by_application_id_for_geolocation_simulation_for_mobile_apps", "price_prediction_for_crypto_market_data_from_token_metrics", "steam_for_check_username", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a", "get_private_keys_for_iotvas", "search_place_for_skyscanner_v2", "fetchlocation_for_sim_based_location_tracking", "teamplayers_for_baseballapi", "get_all_countries_for_virtual_number", "get_dm_conversations_for_twttrapi", "example_for_patient", "actors_get_interesting_jobs_for_imdb", "title_title_for_poetry_db"], "api_descs": {"Finish": "No description available.", "actors_get_interesting_jobs_for_imdb": "Get interesting jobs of actor or actress", "example_for_patient": "ddfgsdfgdfgsdfg", "fetchlocation_for_sim_based_location_tracking": "<p>This endpoint is for fetching location of a trip</p>\n<p><strong>Required Body Parameters</strong></p>\n\n<p><strong>Notes</strong></p>\n<ul>\n<li>Atleast one of the below three parameters should be passed</li>\n</ul>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>invoice</td>\n<td>No</td>\n<td> invoice received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>id</td>\n<td>No</td>\n<td> trip_id received in response of submit trip API</td>\n</tr>\n\n<tr>\n<td>lr_number</td>\n<td>No</td>\n<td> lr_number received in response of submit trip API</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>", "get_all_countries_for_virtual_number": "Get the list of currently available countries", "get_cast_by_id_for_cinema_api": "With this endpoint, you can retrieve the full cast's list (together with their images and their role in the movie).", "get_dm_conversations_for_twttrapi": "Get direct message conversations and messages", "get_movie_id_by_title_for_cinema_api": "Use this endpoint to retrieve the ID of the movies you are interested in. You can search your movie or your preferite actor.", "get_movie_images_by_id_for_cinema_api": "This Endpoint returns a complete list of images associated to the ID. You can obtain the ID from the Get Movie By ID endpoint.", "get_movie_reviews_by_id_for_cinema_api": "This Endpoint returns a complete list of reviews associated to the ID. You can obtain the ID from the Get Movie By ID endpoint.", "get_private_keys_for_iotvas": " ", "getgames_for_diablo4_smartable": "Get Diablo 4 gameplays.", "info_for_investing_financial_stocks": "get forex info", "lista_de_comunidades_aut_nomas_for_organizaci_n_territorial_de_espa_a": "Lista el nombre y el id de todas las Comunidades Autónomas de España", "price_prediction_for_crypto_market_data_from_token_metrics": "Get price prediction for tokens powered by Token Metrics", "search_place_for_skyscanner_v2": "Search for a place to get the **entityId** needed in searching the hotel API.", "simulations_by_application_id_for_geolocation_simulation_for_mobile_apps": "Enter applicationID in route", "steam_for_check_username": "Check username on Steam", "teamplayers_for_baseballapi": "Get the players for a specific baseball team using the team ID.", "title_title_for_poetry_db": "All poems on Poetry DB with a specific title"}, "aseqs": [{"api_name": "get_movie_id_by_title_for_cinema_api", "api_action": "\nAction: get_movie_id_by_title_for_cinema_api\nAction Input: {\n  \"category\": \"movies\",\n  \"title\": \"Titanic\"\n}", "api_reaction": null}, {"api_name": "get_movie_reviews_by_id_for_cinema_api", "api_action": "\nAction: get_movie_reviews_by_id_for_cinema_api\nAction Input: {\n  \"is_id\": \"tt0120338\"\n}", "api_reaction": null}, {"api_name": "get_cast_by_id_for_cinema_api", "api_action": "\nAction: get_cast_by_id_for_cinema_api\nAction Input: {\n  \"is_id\": \"tt0120338\"\n}", "api_reaction": null}, {"api_name": "get_movie_images_by_id_for_cinema_api", "api_action": "\nAction: get_movie_images_by_id_for_cinema_api\nAction Input: {\n  \"is_id\": \"tt0120338\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_movie_id_by_title_for_cinema_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_movie_id_by_title_for_cinema_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_movie_images_by_id_for_cinema_api", "api_action": "\nAction: get_movie_images_by_id_for_cinema_api\nAction Input: {\n  \"is_id\": \"tt0120338\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_movie_images_by_id_for_cinema_api", "api_action": "\nAction: get_movie_images_by_id_for_cinema_api\nAction Input: {\n  \"is_id\": \"tt0120338\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "```json\n{\n\t\"api_name\": \"get_movie_reviews_by_id_for_cinema_api\",\n\t\"api_action\": \"\\nAction: get_movie_reviews_by_id_for_cinema_api\\nAction Input: {\\n  \\\"is_id\\\": \\\"tt0120338\\\"\\n}\",\n}\n```"}]}
{"URL": "35557", "query": "I want to know the upcoming matches for a specific baseball team. Can you fetch the near matches for the team with the ID 3633? Additionally, I'm interested in knowing the pre-match form for their upcoming match with the custom ID ExbsIxb.", "api_names": ["prematchform_for_baseballapi", "teamnearmatches_for_baseballapi", "Finish", "downloadfile_for_groupdocs_signature_cloud", "get_antonyms_for_dicolink", "active_listings_for_airdna", "testbook_for_denemeapisi", "matches_for_betano", "get_categories_for__demo_project_v13", "market_get_movers_for_bb_finance", "ken_for_ken", "get_otp_status_for_d7sms"], "api_descs": {"Finish": "No description available.", "active_listings_for_airdna": "Returns active rentals", "downloadfile_for_groupdocs_signature_cloud": " ", "get_antonyms_for_dicolink": "Get antonyms of a specific word", "get_categories_for__demo_project_v13": " ", "get_otp_status_for_d7sms": "Get the status of OTP generated or verified", "ken_for_ken": "**", "market_get_movers_for_bb_finance": "Get latest information of movers in the market", "matches_for_betano": "Latest matches by Betano.", "prematchform_for_baseballapi": "Get the pre-match form for a specific baseball match using the match ID.", "teamnearmatches_for_baseballapi": "Get the near matches for a specific baseball team using the team ID.", "testbook_for_denemeapisi": "123455"}, "aseqs": [{"api_name": "teamnearmatches_for_baseballapi", "api_action": "\nAction: teamnearmatches_for_baseballapi\nAction Input: {\n  \"is_id\": 3633\n}", "api_reaction": null}, {"api_name": "prematchform_for_baseballapi", "api_action": "\nAction: prematchform_for_baseballapi\nAction Input: {\n  \"is_id\": 11163578\n}", "api_reaction": null}, {"api_name": "prematchform_for_baseballapi", "api_action": "\nAction: prematchform_for_baseballapi\nAction Input: {\n  \"is_id\": 11163578\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "teamnearmatches_for_baseballapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "prematchform_for_baseballapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "prematchform_for_baseballapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "teamnearmatches_for_baseballapi", "api_action": "\nAction: teamnearmatches_for_baseballapi\nAction Input: {\n  \"is_id\": 3633\n}", "api_reaction": null}}]}
{"URL": "80293", "query": "I'm planning to relocate to Sarawak and I need to know the prayer times for tomorrow in Kuching. Could you please provide me with the prayer times for tomorrow? Also, give me a list of all the available zones in Sarawak.", "api_names": ["solat_time_for_waktu_solat", "solat_list_for_waktu_solat", "Finish", "get_the_awarded_books_of_a_year_for_hapi_books", "http_mrauto_parts_for_mrautoparts", "get_mark_price_kline_for_bybit", "search_for_google_search_v2", "simulations_by_application_id_for_geolocation_simulation_for_mobile_apps", "get_player_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "legacy_v1_for_blackbox", "dax_point_changes_for_each_month_january_august_2022_for_dax", "chart_by_id_for_imdb_charts", "get_food_replacement_options_in_diet_for_bespoke_diet_generator", "football_season_statistics_for_football_dolphin", "aliexpress_item_review_2_for_aliexpress_datahub", "getfileslist_for_aspose_email_cloud", "pressure_from_to_number_for_unitconversion", "get_queue_for_league_of_legends_api"], "api_descs": {"Finish": "No description available.", "aliexpress_item_review_2_for_aliexpress_datahub": "All details of a single item.", "chart_by_id_for_imdb_charts": "Get an IMDB Chart by ID\n\nThe API endpoint expects an `id` query parameter and the JSON response format is different based on it. We currently support these chart ids:\n* `boxoffice`: Top Box Office (US)\n* `moviemeter`: Most Popular Movies\n* `top`: IMDb Top 250 Movies\n* `top-english-movies`: Top Rated English Movies\n* `tvmeter`: Most Popular TV Shows\n* `toptv`: Top Rated TV Shows\n* `top-rated-indian-movies`: Top Rated Indian Movies\n* `bottom`: Lowest Rated Movies\n* `top-action`: (Top Rated Action Movies\n* `top-adventure`: Top Rated Adventure Movies\n* `top-animation`: Top Rated Animation Movies\n* `top-biography`: Top Rated Biography Movies\n* `top-comedy`: Top Rated Comedy Movies\n* `top-crime`: Top Rated Crime Movies\n* `top-drama`: Top Rated Drama Movies\n* `top-family`: Top Rated Family Movies\n* `top-fantasy`: Top Rated Fantasy Movies\n* `top-film_noir`: Top Rated Film-Noir Movies\n* `top-history`: Top Rated History Movies\n* `top-horror`: Top Rated Horror Movies\n* `top-music`: Top Rated Music Movies\n* `top-musical`: Top Rated Musical Movies\n* `top-mystery`: Top Rated Mystery Movies\n* `top-romance`: Top Rated Romance Movies\n* `top-sci_fi`: Top Rated Sci-Fi Movies\n* `top-sport`: Top Rated Sport Movies\n* `top-thriller`: Top Rated Thriller Movies\n* `top-war`: Top Rated War Movies\n* `top-western`: Top Rated Western Movies", "dax_point_changes_for_each_month_january_august_2022_for_dax": "Gets the actual points, gains and losses for each individual month.", "football_season_statistics_for_football_dolphin": "Football season statistics", "get_food_replacement_options_in_diet_for_bespoke_diet_generator": "Retrieve the list of ingredients that can replace another ingredient in an existing diet.", "get_mark_price_kline_for_bybit": "Query mark price kline.", "get_player_information_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "Call this to get general information on each player (name, team, experience, birthday, college, etc).\n\nYou can call with their playerID, if you know it.  playerID calls will always be quicker as it acts on the key of the table.  \n\nYou can also call with playerName.  This call will return a list of players who have that name.  If you want to include spaces in the search name, then use underscore.  So if you want to find Justin Fields, you can use \"Justin_fields\" and it will bring him back.  Or try with playerName=justin and it will return a list of guys with justin in their name.\n\n/getNFLPlayerInfo?playerID=4374033\n\n/getNFLPlayerInfo?playerName=justin_fields\n\netc", "get_queue_for_league_of_legends_api": "Returns the list of people in division, tier and according to the type of queue", "get_the_awarded_books_of_a_year_for_hapi_books": "Returns the list of the best books of a year by its winning category.\nEach returned book has its Name, Winning Category, Cover Image and more.", "getfileslist_for_aspose_email_cloud": " ", "http_mrauto_parts_for_mrautoparts": "DOWNLOADS APP", "legacy_v1_for_blackbox": "This is a legacy and free IP checked. We provide a simply non-json style response to requests. Responses are cached for 7 days. \n\nCheck out our Documentation for more information.\n\nResponses will be (Y,E,N):\n\n(Y) : Yes, we have determined the IP address to be used by either or multiple of the following: Cloud, Hosting, Tor, Proxy. \n\n(E) : Error, something has gone wrong with the request.\n\n(N) : No, we have determined the IP address to be NOT used by any of the following: Cloud, Hosting, Tor, Proxy.", "pressure_from_to_number_for_unitconversion": "Pressure unit conversions", "search_for_google_search_v2": "search", "simulations_by_application_id_for_geolocation_simulation_for_mobile_apps": "Enter applicationID in route", "solat_list_for_waktu_solat": "List of zones in each state along with the zone code.\nData in json format.", "solat_time_for_waktu_solat": "Display the prayer time based on selected zone.\nData in json format."}, "aseqs": [{"api_name": "solat_list_for_waktu_solat", "api_action": "\nAction: solat_list_for_waktu_solat\nAction Input: {}", "api_reaction": null}, {"api_name": "solat_time_for_waktu_solat", "api_action": "\nAction: solat_time_for_waktu_solat\nAction Input: {\n  \"code\": \"SWK10\"\n}", "api_reaction": null}, {"api_name": "solat_time_for_waktu_solat", "api_action": "\nAction: solat_time_for_waktu_solat\nAction Input: {\n  \"code\": \"SWK06\"\n}", "api_reaction": null}, {"api_name": "solat_list_for_waktu_solat", "api_action": "\nAction: solat_list_for_waktu_solat\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "solat_time_for_waktu_solat"}}, {"state": "generated_by_agent", "aseq": {"api_name": "solat_time_for_waktu_solat", "api_action": "\nAction: solat_time_for_waktu_solat\nAction Input: {'zone_code': 'KUCHING'}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "solat_list_for_waktu_solat"}}, {"state": "generated_by_agent", "aseq": {"api_name": "solat_time_for_waktu_solat", "api_action": "\nAction: solat_time_for_waktu_solat\nAction Input: {\n  \"code\": \"SWK10\",\n  \"date\": \"tomorrow\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "solat_time_for_waktu_solat", "api_action": "\nAction: solat_time_for_waktu_solat\nAction Input: {\n  \"code\": \"SWK01\"\n}", "api_reaction": null}}]}
{"URL": "76541", "query": "I need to gather user data for my research project from the Reqres tool. Please provide me with the user details and the list of unknown resources. It would be helpful to know the total number of unknown resources available.", "api_names": ["users_for_reqres", "unknown_for_reqres", "Finish", "stock_splits_for_freedom_finance", "get_the_account_for_alpaca_trading", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car", "https_www_youtoosound_com_sound_for_youtoosound", "nhl_team_players_for_nhl_api", "cities_search_stateisocode_keyword_for_transportistas_de_argentina", "live_aircraft_by_squawk_for_fachaapi", "6_timeseries_endpoint_for_currenciesexchangerateapi", "trending_for_cryptocurrency_markets"], "api_descs": {"6_timeseries_endpoint_for_currenciesexchangerateapi": "Request Parameters:\n'start_date': \n'end_date': \n'base': \n'symbols': \nResponse: This endpoint returns the exchange rates for the specified currencies over the specified time period in JSON format.", "Finish": "No description available.", "cities_search_stateisocode_keyword_for_transportistas_de_argentina": "Search city for iso state and keyword name.", "get_the_account_for_alpaca_trading": "Returns the account associated with the API key", "https_www_youtoosound_com_sound_for_youtoosound": "https://www.youtoosound.com/sound", "live_aircraft_by_squawk_for_fachaapi": "Get live positioning for all aircraft with a specific Squawk", "nhl_team_players_for_nhl_api": "This API endpoint will return the team roster information for a specific NHL team.", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car": "Pluses and minuses of the car", "stock_splits_for_freedom_finance": "List all stock splits for given stock symbol", "trending_for_cryptocurrency_markets": "Current cryptocurrencies trending today.", "unknown_for_reqres": "List of unknown resources", "users_for_reqres": "Users"}, "aseqs": [{"api_name": "users_for_reqres", "api_action": "\nAction: users_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "unknown_for_reqres", "api_action": "\nAction: unknown_for_reqres\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "users_for_reqres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "users_for_reqres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "unknown_for_reqres"}}]}
{"URL": "32247", "query": "Could you search for jokes related to the anime 'One Piece' and fetch the details of the first joke, including the joke ID, joke text, and the anime it belongs to? Also, retrieve the details of the anime with ID 1, including the anime name, genre, and episode count.", "api_names": ["get_animes_for_anime_jokes", "get_anime_by_id_for_anime_jokes", "query_joke_using_id_for_anime_jokes", "Finish", "historical_for_fear_and_greed_index", "weight_category_for_body_mass_index_bmi_calculator", "locationsuggestions_v2_for_zillow_base", "properties_get_static_map_for_booking", "get_heightmap_from_two_geopoints_for_heightmap_from_latitude_and_longitude", "getfileversions_for_aspose_email_cloud", "get_all_artistic_directors_for_a_specific_category_for_hautecouture_api", "get_result_for_face_animer", "get_quote_by_character_for_movie_and_tv_shows_quotes", "searchinventory_for_films", "post_details_for_yt_api", "singapore_scheduled_flights_level_for_global_flight_data"], "api_descs": {"Finish": "No description available.", "get_all_artistic_directors_for_a_specific_category_for_hautecouture_api": "Renders all artistic directors in a specific category", "get_anime_by_id_for_anime_jokes": "Search anime using ID", "get_animes_for_anime_jokes": "Get all the anime from Anime Jokes", "get_heightmap_from_two_geopoints_for_heightmap_from_latitude_and_longitude": "you provide two geopoints( latitude, longitude). Server returns image/png with heightmap within this borders.", "get_quote_by_character_for_movie_and_tv_shows_quotes": "This end point will return back quotes delivered by the given character", "get_result_for_face_animer": "Enter taskId and get result. Note: you have to wait about 5 seconds after you created the job id. Otherwise response will be Null data.", "getfileversions_for_aspose_email_cloud": " ", "historical_for_fear_and_greed_index": "Get the index for the given date.", "locationsuggestions_v2_for_zillow_base": "Search for a location", "post_details_for_yt_api": "Get post details.\nQuota cost is 1 unit.", "properties_get_static_map_for_booking": "Get static map at specific GEO location", "query_joke_using_id_for_anime_jokes": "Search anime joke using joke ID", "searchinventory_for_films": "By passing in the appropriate options, you can search for\navailable inventory in the system\n", "singapore_scheduled_flights_level_for_global_flight_data": "Get weekly Singapore scheduled departing flights level.", "weight_category_for_body_mass_index_bmi_calculator": "Retrieve the weight category of an individual based on their BMI"}, "aseqs": [{"api_name": "get_animes_for_anime_jokes", "api_action": "\nAction: get_animes_for_anime_jokes\nAction Input: {}", "api_reaction": null}, {"api_name": "query_joke_using_id_for_anime_jokes", "api_action": "\nAction: query_joke_using_id_for_anime_jokes\nAction Input: {\n  \"is_id\": 15\n}", "api_reaction": null}, {"api_name": "get_anime_by_id_for_anime_jokes", "api_action": "\nAction: get_anime_by_id_for_anime_jokes\nAction Input: {\n  \"is_id\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": The user wants jokes related to 'One Piece' and the details of the first joke, including ID, text, and belonging anime, as well as details of the anime with ID 1. We need two separate API calls for these tasks: one for finding jokes involving 'One Piece' and another for fetching anime information.\n\t\"api_name\": \"get_anime_by_id_for_anime_jokes\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_anime_by_id_for_anime_jokes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_animes_for_anime_jokes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_animes_for_anime_jokes"}}]}
{"URL": "75057", "query": "I'm a food enthusiast and I'm looking for unique dining experiences in Montevideo. Can you recommend some restaurants that offer a fusion of cuisines? It would be great if you could provide me with their menu options and any signature dishes they offer.", "api_names": ["Finish", "get_restaurants_by_address_for_pedidosya", "headphones_for_amazon_api_v2", "get_top_50_cryptocurrencies_list_for_crypto_update_live", "get_call_for_indian_bank_account_verification", "v2_auto_complete_for_sephora", "video_info_for_tiktok_v3", "tournament_list_for_soccer_data", "veiculo_tipo_id_marca_id_modelo_id_modelo_ano_for_veiculos_api", "getpaymentinitiationinstruction_for_transaction"], "api_descs": {"Finish": "No description available.", "get_call_for_indian_bank_account_verification": "Used to fetch api result using the request id received in responses.", "get_restaurants_by_address_for_pedidosya": "Get Restaurants by Address", "get_top_50_cryptocurrencies_list_for_crypto_update_live": "This endpoint gives the list of the top fifty cryptocurrencies.", "getpaymentinitiationinstruction_for_transaction": "Use this operation to retrieve a payment initiation instruction by ID (UETR).", "headphones_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required", "tournament_list_for_soccer_data": "Provides list of tournaments.", "v2_auto_complete_for_sephora": "Get suggestions by term or phrase", "veiculo_tipo_id_marca_id_modelo_id_modelo_ano_for_veiculos_api": "/", "video_info_for_tiktok_v3": "get video information by video_id"}, "aseqs": [{"api_name": "get_restaurants_by_address_for_pedidosya", "api_action": "\nAction: get_restaurants_by_address_for_pedidosya\nAction Input: {\n  \"address\": \"Montevideo\",\n  \"country\": \"uy\",\n  \"businesstype\": \"restaurant\",\n  \"limit\": 5\n}", "api_reaction": null}, {"api_name": "get_restaurants_by_address_for_pedidosya", "api_action": "\nAction: get_restaurants_by_address_for_pedidosya\nAction Input: {\n  \"address\": \"Montevideo\",\n  \"country\": \"uy\",\n  \"businesstype\": \"restaurant\",\n  \"limit\": 10\n}", "api_reaction": null}, {"api_name": "get_restaurants_by_address_for_pedidosya", "api_action": "\nAction: get_restaurants_by_address_for_pedidosya\nAction Input: {\n  \"address\": \"Montevideo\",\n  \"country\": \"uy\",\n  \"businesstype\": \"restaurant\",\n  \"limit\": 20\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_restaurants_by_address_for_pedidosya"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_restaurants_by_address_for_pedidosya"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_restaurants_by_address_for_pedidosya"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_restaurants_by_address_for_pedidosya", "api_action": "\nAction: get_restaurants_by_address_for_pedidosya\nAction Input: {\n  \"address\": \"Montevideo\",\n  \"country\": \"uy\",\n  \"businesstype\": \"restaurant\",\n  \"limit\": 15,\n  \"fusincuisine\": true\n}"}}]}
{"URL": "48379", "query": "I'm interested in the popular hashtags on Twitter. Could you fetch the trending hashtags worldwide and in Argentina? Please provide me with the titles, volumes, and links for these hashtags.", "api_names": ["get_country_s_hashtags_for_twitter_hashtags", "get_worldwide_hashtags_for_twitter_hashtags", "Finish", "meme_for_alt_coins", "top_music_for_kwai", "getcompanies_for_a_i_smartable", "generate_avatar_for_avatar_io_modern_avatar_placeholder_api", "live_tags_for_quality_porn", "getinfo_for_hanime_python_api", "search_wikipedia_for_wiki_briefs", "user_tweet_detail_for_twitter_pack_v2", "slack_for_fortune_cookie"], "api_descs": {"Finish": "No description available.", "generate_avatar_for_avatar_io_modern_avatar_placeholder_api": "Generates the desired avatar and returns the image to the client.", "get_country_s_hashtags_for_twitter_hashtags": "Get hashtags based on country", "get_worldwide_hashtags_for_twitter_hashtags": "Returns a list of all recent hashtags worldwide", "getcompanies_for_a_i_smartable": "Get artificial intelligence companies.", "getinfo_for_hanime_python_api": "Get Hanime Video Info", "live_tags_for_quality_porn": "Search for live tags and the associated data.", "meme_for_alt_coins": "Provide memes", "search_wikipedia_for_wiki_briefs": "Search anything on Wikipedia and returns top K summarized information and similar items. Images and coordinates with map link are provided when available.", "slack_for_fortune_cookie": "This endpoint's response shape is designed to match the requirements for slack messages. You can easily use this api to have a POST or GET for this /slack endpoint to get the same functionality as the defaultRoot endpoint, but in a slack style response.  \n", "top_music_for_kwai": "Top Music API", "user_tweet_detail_for_twitter_pack_v2": "Get user tweet and reply"}, "aseqs": [{"api_name": "get_worldwide_hashtags_for_twitter_hashtags", "api_action": "\nAction: get_worldwide_hashtags_for_twitter_hashtags\nAction Input: {}", "api_reaction": null}, {"api_name": "get_country_s_hashtags_for_twitter_hashtags", "api_action": "\nAction: get_country_s_hashtags_for_twitter_hashtags\nAction Input: {\n  \"country\": \"Argentina\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_country_s_hashtags_for_twitter_hashtags"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_country_s_hashtags_for_twitter_hashtags"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_worldwide_hashtags_for_twitter_hashtags"}}]}
{"URL": "7614", "query": "My friend is applying for a job as a Data Analyst. Can you generate a resume for them that showcases their skills in data analysis and statistical modeling? Additionally, please provide a cover letter tailored to a Data Analyst position with a job description emphasizing experience in SQL and Python.", "api_names": ["generate_document_cover_letter_for_ai_resume_generator", "generate_document_resume_for_ai_resume_generator", "Finish", "europe_for_nomad_list_cities", "get_user_orders_for__demo_project_v3", "get_order_for_asdfadsf", "alerts_alertid_attachments_for_signl4_critical_mobile_alerting", "leaguetotalteamevents_for_esportapi", "get_available_authors_for_quotes_v2", "distinct_tickers_for_business_credit_scores", "trending_videos_for_youtube_v2", "get_chat_messages_for_kick_com_api_kick_api", "search_country_by_name_for_location_and_time", "get_past_results_10_years_for_4d_results", "fb_for_fb_video_reels"], "api_descs": {"Finish": "No description available.", "alerts_alertid_attachments_for_signl4_critical_mobile_alerting": "Get attachments of an alert by id.", "distinct_tickers_for_business_credit_scores": "Get list of tickers for which credit scores exist.", "europe_for_nomad_list_cities": "Get European cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "fb_for_fb_video_reels": "Get Facebook video", "generate_document_cover_letter_for_ai_resume_generator": "Endpoint that will generate a large text response containing a Cover Letter document using the provided information", "generate_document_resume_for_ai_resume_generator": "Endpoint that will generate a large text response containing a Resume document using the provided information", "get_available_authors_for_quotes_v2": "Returns list of available authors", "get_chat_messages_for_kick_com_api_kick_api": "Returns chat messages from livestream ID.", "get_order_for_asdfadsf": " ", "get_past_results_10_years_for_4d_results": "Return all company 4D Results within a specific date range.\n(Up to 10 year data and only available for MEGA PLAN subscriber)", "get_user_orders_for__demo_project_v3": " ", "leaguetotalteamevents_for_esportapi": "Get last 5 events for a specific E-Sports league by providing the tournament ID and season ID.", "search_country_by_name_for_location_and_time": "Get details of the country specified by name, fuzzy search is supported. Up to 10 records for countries with similar name may be returned. Information includes country name, capital, area, population, languages, neighbors, phone code, postal code, and more.", "trending_videos_for_youtube_v2": "This endpoint returns the list of trending videos given a country"}, "aseqs": [{"api_name": "generate_document_resume_for_ai_resume_generator", "api_action": "\nAction: generate_document_resume_for_ai_resume_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "generate_document_cover_letter_for_ai_resume_generator", "api_action": "\nAction: generate_document_cover_letter_for_ai_resume_generator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "generate_document_resume_for_ai_resume_generator", "user_input": {"name": "John Doe", "education": ["B.S. in Computer Science, Harvard University", "M.Sc. in Data Analytics, Stanford University"], "experience": [{"company": "ABC Consulting", "position": "Data Analyst", "years": "2019-2023"}, {"company": "XYZ Company", "position": "Senior Data Engineer", "years": "2015-2019"}], "skills": ["SQL", "Python", "Data Analysis", "Statistical Modeling"], "projects": [{"name": "Customer Segmentation for ABC Consulting", "description": "Used SQL and Python to analyze customer data, identify segments, and provide actionable insights."}]}}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_document_cover_letter_for_ai_resume_generator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_document_resume_for_ai_resume_generator"}}]}
{"URL": "42207", "query": "I want to keep up with the latest news and updates from my favorite websites. Can you help me create a personalized RSS feed that includes articles from my favorite websites using the 'Awesome RSS' tool? Additionally, I would like to retrieve the content of a specific feed by providing its ID. Thank you!", "api_names": ["v1_feeds_for_awesome_rss", "Finish", "3_summary_for_stockyapiexchange", "storageexists_for_groupdocs_watermark_cloud", "tag_news_for_biztoc", "flight_integration_for_flight_integration", "recitations_for_quran_com", "bsa_for_clinicalmarkers", "search_by_coordinates_point_for_ev_charge_finder", "user_by_id_for_reqres_dont_change_"], "api_descs": {"3_summary_for_stockyapiexchange": "Summary: This feature gives a quick overview of the performance of a stock, including its current price, percentage change, and trading volume. It also provides a summary of the key financial metrics and news related to the stock", "Finish": "No description available.", "bsa_for_clinicalmarkers": " ", "flight_integration_for_flight_integration": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.", "recitations_for_quran_com": "Get list of available Recitations.", "search_by_coordinates_point_for_ev_charge_finder": "Search for EV charging stations near specific geographic coordinates point.", "storageexists_for_groupdocs_watermark_cloud": " ", "tag_news_for_biztoc": "Get the latest news stories for the respective `{tag}` in chronological order.", "user_by_id_for_reqres_dont_change_": "User by id", "v1_feeds_for_awesome_rss": "List your current RSS"}, "aseqs": [{"api_name": "v1_feeds_for_awesome_rss", "api_action": "\nAction: v1_feeds_for_awesome_rss\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_feeds_for_awesome_rss"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_feeds_for_awesome_rss"}}]}
{"URL": "28014", "query": "I'm planning a surprise date for my partner and I need some romantic location ideas. Can you suggest nearby restaurants with a romantic ambiance and scenic views? We would prefer places within a 5-kilometer radius.", "api_names": ["nearby_for_places_nearby_a_coordinates", "categories_for_places_nearby_a_coordinates", "Finish", "filter_and_query_naics_description_for_industry_naics_search", "v1_plan_apicreditscount_for_boldsign", "languages_for_referential", "getinventory_for_privatepublicapi", "get_imbuements_for_snake_skin_earth_protection_for_tibia_items", "search_torrents_for_movie_tv_music_search_and_download", "symbols_for_currency_v2", "get_list_of_audios_for_text_to_speech_pro", "questions_for_bigbox", "get_authenticated_users_micros_for_geeklist", "coin_list_for_cryptocurrency_markets", "get_media_download_link_for_instagram_looter", "open_weather_for_weather", "get_hot_topics_for_news_content_extraction_live", "q_study_for_q_study"], "api_descs": {"Finish": "No description available.", "categories_for_places_nearby_a_coordinates": "Categories of establishments.", "coin_list_for_cryptocurrency_markets": "All active cryptocurrencies available to trade", "filter_and_query_naics_description_for_industry_naics_search": "This endpoint will allow you to search by freeform text, eg. Hotel and get all the list of NAICS code, hash, and description back.\nYou can also filter the search if you have an NAICS code and want to get the description and the hash of the industry.", "get_authenticated_users_micros_for_geeklist": "", "get_hot_topics_for_news_content_extraction_live": "Hot Topics ranking by Google.", "get_imbuements_for_snake_skin_earth_protection_for_tibia_items": "This enpoint will get all imbuement for type Snake skin\n\nSnake Skin (Earth Protection)\nBrimstone Fangs \nPiece of Swampling Wood \nSnake Skin", "get_list_of_audios_for_text_to_speech_pro": "Get List of Audios", "get_media_download_link_for_instagram_looter": "Get **Instagram** media download link by **/p/** - **/tv/** - **/reel/**", "getinventory_for_privatepublicapi": "Returns a map of status codes to quantities", "languages_for_referential": "List the world's languages translated into 20 languages", "nearby_for_places_nearby_a_coordinates": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nReturns up to 60 places per request.", "open_weather_for_weather": "weathermap", "q_study_for_q_study": "education", "questions_for_bigbox": "The Questions Parameters are applicable when making a request with type=questions to retrieve customer Questions for a single product on Home Depot - the product is specified using either the item_id or url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nQuestions are retrieved from the customer questions page for a single product on Home Depot.", "search_torrents_for_movie_tv_music_search_and_download": "Get downloadable  torrent link by movie name.", "symbols_for_currency_v2": "Service that brings the names and symbols of exchange rates.", "v1_plan_apicreditscount_for_boldsign": " "}, "aseqs": [{"api_name": "categories_for_places_nearby_a_coordinates", "api_action": "\nAction: categories_for_places_nearby_a_coordinates\nAction Input: {}", "api_reaction": null}, {"api_name": "nearby_for_places_nearby_a_coordinates", "api_action": "\nAction: nearby_for_places_nearby_a_coordinates\nAction Input: {\n  \"lon\": -122.4194,\n  \"lat\": 37.7749,\n  \"categories\": \"food\",\n  \"radius\": 5000\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to find nearby restaurants within a 5-kilometer radius with romantic ambiance and scenic views.\n\t\"api_name\": \"nearby_for_places_nearby_a_coordinates\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_for_places_nearby_a_coordinates"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_for_places_nearby_a_coordinates"}}]}
{"URL": "38812", "query": "I want to keep up with the global recession and need the latest articles from The New York Times, The Guardian, Reuters, and Politico. Can you provide me with the titles, URLs, and sources of the articles?", "api_names": ["get_all_global_recession_news_for_global_recession_live", "Finish", "questions_for_quiz", "competitions_standings_for_livescore_sports", "get_categories_for__onboarding_project_v3", "getfileslist_for_aspose_cells_cloud", "playlist_for__cheap_youtube_api_", "team_stats_for_nfl_team_stats"], "api_descs": {"Finish": "No description available.", "competitions_standings_for_livescore_sports": "Get competition standings (table) by competition ID.  LTT_CODE: All(1),Home(2),Away 3", "get_all_global_recession_news_for_global_recession_live": "This endpoint will return the latest articles from 7 publications about worldwide recession news.", "get_categories_for__onboarding_project_v3": " ", "getfileslist_for_aspose_cells_cloud": " ", "playlist_for__cheap_youtube_api_": "Get playlist\nexample:\n/playlists/PLV3BLrRejJR_8XjiMrbev1_7RjIZTg1qb", "questions_for_quiz": "NOTHING", "team_stats_for_nfl_team_stats": "Over 500 different categorized statistics for each team in the NFL (depending on league year).  Optionally, pass in a league year and/or team to narrow the query results."}, "aseqs": [{"api_name": "get_all_global_recession_news_for_global_recession_live", "api_action": "\nAction: get_all_global_recession_news_for_global_recession_live\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_global_recession_news_for_global_recession_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_global_recession_news_for_global_recession_live"}}]}
{"URL": "42464", "query": "My company is organizing an outdoor event in France and we need to ensure good weather conditions. Can you fetch the historical weather data for the past month for the cities of Nice, Bordeaux, and Toulouse? We also need real-time weather updates for these cities to make informed decisions.", "api_names": ["live_for_france_2d", "history_for_france_2d", "Finish", "current_for_foreca_weather", "validate_wa_number_free_for_bulk_whatsapp_validator", "api_index_name_for_finanzoo_api_fundamentals", "qr_code_for_ai_writer", "get_product_for_test", "search_for_youtube_v3_lite", "get_user_profile_for_soundcloud_scraper", "protocols_for_defi_data", "leaguemedia_for_rugbyapi2"], "api_descs": {"Finish": "No description available.", "api_index_name_for_finanzoo_api_fundamentals": "Determine shareuid\nTo query the fundamental data via our API, you need the Shareuid for the share you are looking for. You can either determine this yourself via the API, or take it from the Excel table.\nIMPORTANT! The currency that is output in the API_Fundamentals results is also included here.\n\nSyntax:\n\nname = search shareuid with company name", "current_for_foreca_weather": "Current weather estimate for location.", "get_product_for_test": "get product", "get_user_profile_for_soundcloud_scraper": "This endpoint fetches a user's profile.", "history_for_france_2d": "History", "leaguemedia_for_rugbyapi2": "Get media for a specific Rugby league.", "live_for_france_2d": "Live", "protocols_for_defi_data": "List of protocols along with their tvl", "qr_code_for_ai_writer": "Generate a QR Code from a link or a text.", "search_for_youtube_v3_lite": "Get search results.\nQuota cost is 1.", "validate_wa_number_free_for_bulk_whatsapp_validator": "You need a **valid token** to use this endpoint, learn how to get it on this [video](https://youtu.be/TcaAwKpAkl8). \nThe response is `true` if the phone is registered on whatsapp."}, "aseqs": [{"api_name": "history_for_france_2d", "api_action": "\nAction: history_for_france_2d\nAction Input: {}", "api_reaction": null}, {"api_name": "live_for_france_2d", "api_action": "\nAction: live_for_france_2d\nAction Input: {}", "api_reaction": null}, {"api_name": "history_for_france_2d", "api_action": "\nAction: history_for_france_2d\nAction Input: {}", "api_reaction": null}, {"api_name": "live_for_france_2d", "api_action": "\nAction: live_for_france_2d\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "history_for_france_2d"}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_france_2d", "api_action": "{\"cities\": ['Nice', 'Bordeaux', 'Toulouse'], \"action_type\": \"historical\", \"date\": \"last_month\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_france_2d", "api_action": "\nAction: history_for_france_2d\nAction Input: {\n  \"cities\": [\n    {\n      \"city\": \"Nice\",\n      \"period\": \"month\"\n    },\n    {\n      \"city\": \"Bordeaux\",\n      \"period\": \"month\"\n    },\n    {\n      \"city\": \"Toulouse\",\n      \"period\": \"month\"\n    }\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_france_2d", "api_action": "\nAction: history_for_france_2d\nAction Input: {\n\t\"city\": \"Nice\",\n\t\"time_range\": \"P30D\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_for_france_2d", "api_action": "\nAction: history_for_france_2d\nAction Input: {\"cities\": \"Nice,Bordeaux,Toulouse\", \"granularity\": \"day\", \"startDate\": \"-30days\"}", "api_reaction": null}}]}
{"URL": "71498", "query": "I want to check my account details and get the rates for translating from Spanish to German. Please assist me with this query.", "api_names": ["rates_for_nitro", "account_for_nitro", "Finish", "aircraft_scatter_data_for_aircraftscatter", "get_all_languages_for_thefluentme", "quarter_analysis_for_basketball_data", "author_profile_recipes_for_bbc_good_food_api", "567_live_t_i_app_m_i_nh_t_2022_t_i_trang_ch_ch_nh_th_c_for_567_live_app_2022", "forex_intraday_for_quotient", "get_nft_collections_for_pancakeswap_api_freemium", "school_detail_for_indonesia_school_list", "etf_list_for_palmy_investing_api", "currency_by_country_for_geosource_api", "current_air_quality_for_air_quality_api", "get_email_for_temporary_email", "48_hour_forecast_for_ouranos", "matrix_for_locationiq", "drawings_between_dates_for_fantasy_5"], "api_descs": {"48_hour_forecast_for_ouranos": "Hourly Forecast return seeing value in arc seconds and transparency on a scale of 1 for the next 48 hours.", "567_live_t_i_app_m_i_nh_t_2022_t_i_trang_ch_ch_nh_th_c_for_567_live_app_2022": "567 Live có trang chủ 567live.io duy nhất chính xác. Cung cấp đủ link tải 567 live app an toàn cho bạn phiên bản mới nhất.\nĐịa chỉ : 99 Giải Phóng, Đồng Tâm, Hai Bà Trưng, Hà Nội\nGoogle map https://www.google.com/maps?cid=7118718670140148249 \nHotline 0978720550\nGmail:  567liveapp@gmail.com\nWebsite https://567live.io/ \nhttps://sites.google.com/view/567live-app/\nhttps://567live.io/tai-ve/567live-apk \nhttps://567live.io/tai-ve/567live-ios\nhttps://567live.io/thu-muc/app-live/ \nhttps://folkd.com/user/567liveapp\nhttps://sketchfab.com/567liveapp\nhttps://forums.iis.net/members/567liveapp.aspx\nhttps://wefunder.com/567live\nhttps://www.ultimate-guitar.com/u/567liveapp\nhttps://www.thingiverse.com/567liveapp/designs\nhttps://www.tickaroo.com/user/61fe0be0ed68b63b06bd40d5\nhttps://www.goodreads.com/user/show/147284265-567live\nhttps://gifyu.com/567liveapp\nhttps://ignitiondeck.com/id/dashboard/?backer_profile=153894\nhttps://www.sqlservercentral.com/forums/user/567liveapp\nhttps://abroadsanjal.com/index.php?qa=user&qa_1=567live\nhttps://beermapping.com/account/567liveapp\nhttps://www.zoimas.com/profile/567liveapp1/about\nhttps://www.eduvision.edu.pk/counseling/index.php?qa=user&qa_1=567liveapp\nhttps://567live.hpage.com/\nhttps://www.leetchi.com/en/c/5Yj6J40r\nhttps://public.tableau.com/app/profile/567live\nhttps://www.brownbook.net/user-profile/4782891\nhttps://amara.org/en/profiles/profile/MndaPixiSx4HXYOyjdeCtoryc1vYtjp933bdJZs6MYo/\nhttps://cycling74.com/author/6201cfb5d540c65659fc25e7\nhttps://api.rakuten.net/user/567liveapp\nhttps://lnk.bio/567live\nhttps://www.pozible.com/profile/567live\nhttps://new.edmodo.com/home\nhttp://www.nfomedia.com/profile?uid=rKfQfiD&result=ep5dbp81\nhttps://degreed.com/profile/567liveapp/overview\nhttps://bittube.tv/profile/567live\nhttps://git.feneas.org/567liveapp\nhttps://forum.singaporeexpats.com/memberlist.php?mode=viewprofile&u=370389\nhttps://sallatunturinkoulu.purot.net/profile/567liveapp\nhttps://liveviewsports.com/community/profile/567live/\nhttp://q2a.sydt.com.tw/index.php?qa=user&qa_1=567live", "Finish": "No description available.", "account_for_nitro": "This endpoint retrieves an account.", "aircraft_scatter_data_for_aircraftscatter": "Returns all aircraft above 10,000 feet within 1000 kilometres from specified latitude and longitude.", "author_profile_recipes_for_bbc_good_food_api": "Get author recipes and profile info", "currency_by_country_for_geosource_api": "Retrives a currecny and currency symbol of the country", "current_air_quality_for_air_quality_api": "Gives back data of current air quality in a specified city!", "drawings_between_dates_for_fantasy_5": "Get all Fantasy 5 winning number sets between two specified dates where the first number supplied is the beginning date and the second number supplied is the end date.", "etf_list_for_palmy_investing_api": "A list of n ETFs where each hold time critical information such as price", "forex_intraday_for_quotient": "Return intraday time series (Date, Open, High, Low, Close, Volume) given the input parameters.", "get_all_languages_for_thefluentme": "Returns a list of all supported languages. The API supports 40 different languages and 80 different voices for the ai_reading. This is used to define the post language when a post is added. It also defines the voice for the sound file that is generated for the user to listen to.", "get_email_for_temporary_email": "Get Email", "get_nft_collections_for_pancakeswap_api_freemium": "An Endpoint to get NFT Collections on Pancakeswap", "matrix_for_locationiq": "Computes duration of the fastest route between all pairs of supplied coordinates. Returns the durations or distances or both between the coordinate pairs. Note that the distances are not the shortest distance between two coordinates, but rather the distances of the fastest routes.", "quarter_analysis_for_basketball_data": "Provides the analyst data for each quarters including Quarter Winning Avereages, Quarter Winning Counts, Quarter Winning Percentages with home team / away team filters.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "rates_for_nitro": "This endpoint retrieves all rates.", "school_detail_for_indonesia_school_list": "School Detail by sekolah_id_enkrip field that get by other endpoint (see List of School)."}, "aseqs": [{"api_name": "account_for_nitro", "api_action": "\nAction: account_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "rates_for_nitro", "api_action": "\nAction: rates_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "account_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "translate_from_spanish_to_german", "api_action": "{\"from\": \"Spanish\", \"to\": \"German\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "account_for_nitro", "api_action": "\nAction: account_for_nitro\nAction Input: {}"}}]}
{"URL": "29555", "query": "I need a list of all my translation orders and also the translation rates for English to French.", "api_names": ["get_all_orders_for_nitro", "rates_for_nitro", "Finish", "get_flights_v1_cancel_for_tripvair_ai_flight_cancel_predictor", "formactionby_id_for_acopaer", "read_case_type_by_id_for_yardillo", "properties_list_for_seloger", "detik_detail_for_indonesia_news", "get_number_of_games_today_for_viperscore", "getnetworks_for_electric_vehicle_charging_stations", "sports_list_for_global_data", "get_the_channel_stream_url_for_live_tv_api"], "api_descs": {"Finish": "No description available.", "detik_detail_for_indonesia_news": "detik-detail", "formactionby_id_for_acopaer": "# Description GET Form Action By id\r\n\r\nThis url is to get a Form Action by id is type `GET`, the url is `BASE_URL/form-actions/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Form Action to get details about this Form Action.", "get_all_orders_for_nitro": "This endpoint retrieves all account orders.", "get_flights_v1_cancel_for_tripvair_ai_flight_cancel_predictor": "Offers a statistical  probability of a future flight being cancelled using deep learning AI from 7 days up to 363 days in advance", "get_number_of_games_today_for_viperscore": "With \"Get number of games today\" you'll receive all sports we support, how many games are today and how many of them are live.", "get_the_channel_stream_url_for_live_tv_api": "It has the links and channels name.", "getnetworks_for_electric_vehicle_charging_stations": "Return only electric charging stations that belong to the given network. A single network, or a comma separated list of multiple networks, may be given.", "properties_list_for_seloger": "List properties with options and filters", "rates_for_nitro": "This endpoint retrieves all rates.", "read_case_type_by_id_for_yardillo": "Gets case type by _id", "sports_list_for_global_data": "Provides the list of the sports which are supported in the global coverage."}, "aseqs": [{"api_name": "get_all_orders_for_nitro", "api_action": "\nAction: get_all_orders_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "get_all_orders_for_nitro", "api_action": "\nAction: get_all_orders_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "rates_for_nitro", "api_action": "\nAction: rates_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_orders_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rates_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rates_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_orders_for_nitro"}}]}
{"URL": "24309", "query": "I want to create a meme with a specific font style. Can you give me the list of all available fonts? Additionally, I need to know the meme templates and the number of text boxes each template can support.", "api_names": ["templates_for_meme_generator_and_template_database", "fonts_for_meme_generator_and_template_database", "Finish", "getstatus_for_maytapi_whatsapp", "get_all_product_for_product", "xmusic_song_info_for_xmusic", "communes_par_code_commune_for_bps", "regions_for_google_trends", "domain_url_metrics_for_domain_authority", "categories_collections_ids_for_bbc_good_food_api", "get_isochrone_for_spatialscale_route_engine", "airlinestatistics_for_flightera_flight_data", "popular_events_for_os_sports_perform", "code_for_us_zipcodes", "api_v2_categories_for_magic_aliexpress"], "api_descs": {"Finish": "No description available.", "airlinestatistics_for_flightera_flight_data": "Returns detailed airline statistics for airlines identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airline is returned.\nOne of ident, iata, icao must be provided.\nStatistics are calculated overnight and represent the current day's data.", "api_v2_categories_for_magic_aliexpress": "This resource represents a category in the system. We have 3 provider type <br> - API\n -WEBSITE\n -HYBRID\n <br> 1.API<br> This category is manager by the API, the ID indicated is the Alibaba ID and not Aliexpress ID.<br> 2. WESITE <br> This category is scraping of Aliexpress website <br> 3. HYBRID <br> This category has correspondence between Aliexpress and API; you have in the same object twice ID `alie_category_id` for Website and `api_category_id` for API<br> In the API to request by example product, in the category ID, you can indicate the both.  ", "categories_collections_ids_for_bbc_good_food_api": "Get all categories collection with there names and namd id", "code_for_us_zipcodes": "Return a zip code detail", "communes_par_code_commune_for_bps": "Récupérer les détails d'une commune depuis son code.", "domain_url_metrics_for_domain_authority": "This Will Get Domain Authority and Page Rank For Any Domain/URL", "fonts_for_meme_generator_and_template_database": "Any of the fonts can be used  in any text box or caption.\nSome fonts are language specific:\n- Chinese -> zcool-wenyi\n- Japanese -> takaopmincho\n-  Korean -> gugi\n- Hindi -> poppins", "get_all_product_for_product": "get all products", "get_isochrone_for_spatialscale_route_engine": "The isochrone service computes areas that are reachable within specified time intervals from a location,\nand returns the reachable regions as contours of polygons or lines that you can display on a map.\n\n**Costing parameters**\n\nThe isochrone service uses the auto, bicycle, pedestrian, and multimodal costing models available in the Turn-by-Turn service.\nRefer to the route costing models and costing options documentation for more on how to specify this input.\n\n**Other request parameters**\n\n<div class=\"tg-wrap\">\n<table>\n<thead>\n<tr>\n    <th style=\"min-width: 128px;\">Parameter</th>\n    <th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n    <td><code>date_time</code></td>\n    <td>\n        The local date and time at the location. These parameters apply only for multimodal requests and are not used with other costing methods.\n        <ul>\n            <li><code>type</code></li>\n            <ul>\n                <li>0 - Current departure time for multimodal requests.</li>\n                <li>1 - Specified departure time for multimodal requests.</li>\n                <li>2 - Specified arrival time. Note: This is not yet implemented.</li>\n            </ul>\n            <li><code>value</code> - the date and time specified in ISO 8601 format (YYYY-MM-DDThh:mm) in the local time zone of departure or arrival. For example, \"2016-07-03T08:06\".\n            </li>\n        </ul>\n    </td>\n</tr>\n<tr>\n    <td><code>id</code></td>\n    <td>\n        Name of the isochrone request. If <code>id</code> is specified, the name is returned with the response.\n    </td>\n</tr>\n<tr>\n    <td><code>contours</code></td>\n    <td>\n        A JSON array of contour objects with the time in minutes or distance in kilometers and color to use for each isochrone contour. You can specify up to four contours (by default).\n        <ul>\n            <li><code>time</code> - A floating point value specifying the time in minutes for the contour.\n            </li>\n            <li><code>distance</code> - A floating point value specifying the distance in kilometers for the contour.\n            </li>\n            <li><code>color</code> -The color for the output of the contour. Specify it as a Hex value, but without the <code>#</code>, such as <code>\"color\":\"ff0000\"</code> for red. If no color is specified, the isochrone service will assign a default color to the output.\n            </li>\n        </ul>\n        You can only specify one metric per contour, i.e. time or distance.\n    </td>\n</tr>\n<tr>\n    <td><code>polygons</code></td>\n    <td>\n        A Boolean value to determine whether to return geojson polygons or linestrings as the contours. The default is <code>false</code>, which returns lines; when <code>true</code>, polygons are returned. Note: When <code>polygons</code> is <code>true</code>, any contour that forms a ring is returned as a polygon.\n    </td>\n</tr>\n<tr>\n    <td><code>generalize</code></td>\n    <td>\n        A floating point value in meters used as the tolerance for Douglas-Peucker generalization. Note: Generalization of contours can lead to self-intersections, as well as intersections of adjacent contours.\n    </td>\n</tr>\n</tbody>\n</table>\n</div>\n", "getstatus_for_maytapi_whatsapp": "Returns the status of the current session.", "popular_events_for_os_sports_perform": "Get today's popular events", "regions_for_google_trends": "The endpoint to retrieve a list of supported regions", "templates_for_meme_generator_and_template_database": "Returns all of the currently supported templates and the number of text boxes that a particular template can support. For how to use this response go to **/template/:image**.", "xmusic_song_info_for_xmusic": "Test apis xmusic song info"}, "aseqs": [{"api_name": "fonts_for_meme_generator_and_template_database", "api_action": "\nAction: fonts_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "templates_for_meme_generator_and_template_database", "api_action": "\nAction: templates_for_meme_generator_and_template_database\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "fonts_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "templates_for_meme_generator_and_template_database"}}, {"state": "generated_by_agent", "aseq": {"api_name": "fonts_for_meme_generator_and_template_database"}}]}
{"URL": "35245", "query": "My friend is planning to start an e-commerce business and needs help finding suppliers on yiwugo.com. Can you search for shops using keywords like 'wholesale' and 'bulk orders'? Additionally, he would like to get the details of a specific product with item ID 930783722 using the 'get product detail' API.", "api_names": ["get_product_detail_for_yiwugo_product_data", "Finish", "search_products_for_yiwugo_product_data", "search_shops_for_yiwugo_product_data", "v1_aggregation_for_newscatcher", "sticker_roulette_for_giphy", "search_for_meme_generator_and_template_database", "estimate_ownership_cost_for_car_utils", "gethospitalsbyid_for_us_hospitals", "coins_get_historical_data_for_investing_cryptocurrency_markets", "countries_for_geography_v2", "originals_episodes_list_for_webtoon", "get_spanish_alt_text_for_alt_bichinhos", "category_for_bigbox", "get_status_for_mailcheap", "population_for_rocket_league"], "api_descs": {"Finish": "No description available.", "category_for_bigbox": "The Category Parameters are applicable when making a request with `type=category` to retrieve category results from Home Depot. The category is specified in the category_id parameter. The parameters should be appended as querystring parameters to the Home Depot Product Data API GET HTTP request.\n\nCategory results are retrieved from the Category results page on Home Depot.", "coins_get_historical_data_for_investing_cryptocurrency_markets": "Get historical data of specific cryptocurrency", "countries_for_geography_v2": "get a list of all the countries filtering by name", "estimate_ownership_cost_for_car_utils": "Estimate how much you will spend on the car with specified VIN for the next 5 years.", "get_product_detail_for_yiwugo_product_data": "get product detail by item_id,\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "get_spanish_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **Spanish.**", "get_status_for_mailcheap": "Fetch API status", "gethospitalsbyid_for_us_hospitals": "###Find US Hospitals by CMS Certification Number\nSimply add your search string as a parameter to the \"ccn\" query.\n\n**Note**: The API only returns the first 30 results.", "originals_episodes_list_for_webtoon": "List episodes of a comic\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "population_for_rocket_league": "Check the playlist population:\n`rocket-league1.p.rapidapi.com/population`", "search_for_meme_generator_and_template_database": "Returns meme templates that contain a specific string. **searchString is case sensitive**", "search_products_for_yiwugo_product_data": "search products\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "search_shops_for_yiwugo_product_data": "search shops by keyword.\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "sticker_roulette_for_giphy": "Returns a spotaneously selected sticker from Giphy's sticker collection. Optionally limit scope of result to a specific tag. Like the GIF random endpoint, Punctuation will be stripped and ignored. Use a hyphen for phrases. Example oops, birthday or thank-you. Search terms should be URL encoded.", "v1_aggregation_for_newscatcher": "Searches as `/v1/search` but returns the articles count per hour or day instead of articles' data"}, "aseqs": [{"api_name": "search_shops_for_yiwugo_product_data", "api_action": "\nAction: search_shops_for_yiwugo_product_data\nAction Input: {\n  \"keyword\": \"bulk orders\"\n}", "api_reaction": null}, {"api_name": "get_product_detail_for_yiwugo_product_data", "api_action": "\nAction: get_product_detail_for_yiwugo_product_data\nAction Input: {\n  \"item_id\": 930783722\n}", "api_reaction": null}, {"api_name": "search_products_for_yiwugo_product_data", "api_action": "\nAction: search_products_for_yiwugo_product_data\nAction Input: {\n  \"keyword\": \"930783722\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_shops_for_yiwugo_product_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_shops_for_yiwugo_product_data", "api_action": "\nAction: search_shops_for_yiwugo_product_data\nAction Input: {\n  \"keyword\": \"wholesale\",\n  \"lan\": \"en\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_shops_for_yiwugo_product_data", "api_action": "\nAction: search_shops_for_yiwugo_product_data\nAction Input: {\n  \"lan\": \"cn\",\n  \"keyword\": \"wholesale bulk orders\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_shops_for_yiwugo_product_data", "api_action": "\nAction: search_shops_for_yiwugo_product_data\nAction Input: {\n  \"keyword\": \"wholesale\",\n  \"lan\": \"en\"\n}", "api_reaction": null}}]}
{"URL": "78684", "query": "I'm planning to invest in the stock market and need up-to-date information on market trends. Can you provide me with the most active stocks and the top gainers? Additionally, I'm interested in exploring the climate leaders and cryptocurrencies. Please fetch the data for me.", "api_names": ["market_trends_for_joj_finance", "Finish", "laptops_for_amazon_api_v2", "timeseries_stats_list_for_palmy_investing_api", "current_weather_data_for_open_weather_map", "get_categories_for_my_store", "flight_search_v2_for_flight_fare_search", "industry_list_for_sitedomain", "email_validation_for_disposable_email_checker", "search_suggestions_for__cheap_youtube_api_"], "api_descs": {"Finish": "No description available.", "current_weather_data_for_open_weather_map": "current weather data", "email_validation_for_disposable_email_checker": "Email Validation Api", "flight_search_v2_for_flight_fare_search": "A faster, more agile Endpoint that's used to search flights.", "get_categories_for_my_store": " ", "industry_list_for_sitedomain": "產業別二碼", "laptops_for_amazon_api_v2": "<br /><br />\n<b>Authentication:</b> not required", "market_trends_for_joj_finance": "Explore market trends", "search_suggestions_for__cheap_youtube_api_": "Get search suggestions for a query\n\nexample: \n/search/suggestions?q=crypto", "timeseries_stats_list_for_palmy_investing_api": "Use lists full of price statistics to compare and analyse stocks"}, "aseqs": [{"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"most-active\"\n}", "api_reaction": null}, {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"gainers\"\n}", "api_reaction": null}, {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"climate-leaders\"\n}", "api_reaction": null}, {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"cryptocurrencies\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"top-gainers\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "timeseries_stats_list_for_palmy_investing_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"cryptocurrencies\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance"}}]}
{"URL": "10", "query": "Can you retrieve the contact details of the 'Gondrand' customs agency in New Caledonia? I'm particularly interested in their postal code, email, name, and phone number. Also, please provide a list of all available transitaires.", "api_names": ["transitaires_for_transitaires", "transitaire_for_transitaires", "Finish", "gettest_for_testapi_v4", "admin_divisions_near_location_for_geodb_cities", "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api", "get_expressions_for_dicolink", "upc_api_for_dietagram", "get_wisdom_quotes_by_page_for_wisdom_quotes", "healthcheck_for_zumata", "series_get_venues_for_unofficial_cricbuzz", "chart_referents_for_genius_song_lyrics", "general_statistics_for_fantasy_5", "get_all_iata_airport_codes_for_iata_airport_codes", "all_teams_for_national_football_players"], "api_descs": {"Finish": "No description available.", "admin_divisions_near_location_for_geodb_cities": "Get administrative divisions near the given location, filtering by optional criteria.", "all_teams_for_national_football_players": "Returns an array of all football teams and abbreviations", "chart_referents_for_genius_song_lyrics": "Chart: Referents", "general_statistics_for_fantasy_5": "This endpoint pulls basic statistics of the Fantasy 5 numbers. For each ball (denoted firstNumber, secondNumber, thirdNumber, fourthNumber, fifthNumber) this endpoint returns the mean, median, mode, min, max, standard deviation, variance, skewness, and kurtosis. After which, the endpoint returns the number of occurrences of each number over the life of game.", "get_all_iata_airport_codes_for_iata_airport_codes": "Get all iata airport codes", "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api": "It returns all the week's top articles", "get_expressions_for_dicolink": "Get Expression with a specific word", "get_wisdom_quotes_by_page_for_wisdom_quotes": "Returns an JSON object that includes:\n\n- the page number requested  (current_page), \n- the amount of all pages (max_pages),\n- the amount of the quotes (quotes_count) (15 per page),\n- the wisdom quotes array (quotes).", "gettest_for_testapi_v4": "get", "healthcheck_for_zumata": "", "series_get_venues_for_unofficial_cricbuzz": "Get venues by series", "transitaire_for_transitaires": "Récupère un transitaire donnée", "transitaires_for_transitaires": "Renvoie tous les transiatires", "upc_api_for_dietagram": "Find food info by UPC (barcode)"}, "aseqs": [{"api_name": "transitaires_for_transitaires", "api_action": "\nAction: transitaires_for_transitaires\nAction Input: {}", "api_reaction": null}, {"api_name": "transitaire_for_transitaires", "api_action": "\nAction: transitaire_for_transitaires\nAction Input: {\n  \"is_id\": \"ACT_AGENCE_CALEDONIENNE_DE_TRANSIT\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "admin_divisions_near_location_for_geodb_cities"}}, {"state": "generated_by_agent", "aseq": {"api_name": "admin_divisions_near_location_for_geodb_cities", "api_action": "\nAction: admin_divisions_near_location_for_geodb_cities\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "transitaire_for_transitaires", "api_action": "\nAction: transitaire_for_transitaires\nAction Input: {\n  \"is_id\": \"GONGND\"\n}", "api_reaction": null}}]}
{"URL": "3803", "query": "I work for an IT training company and need to stay updated on the top certifications for 2023. Can you provide me with a comprehensive list of all the certifications available? Furthermore, I would like to obtain details about a specific certification with ID 'lmn789'.", "api_names": ["get_by_id_for_top_2023_it_certifications", "get_all_certifications_for_top_2023_it_certifications", "Finish", "statusforexcelemissionanalysis_for_carbon_management", "commentthreads_for_youtube_v3_v3", "gettask_for_reword_pdf", "searchairports_for_world_airports_directory", "trending_videos_for_youtube_v2", "get_open_profile_status_for_fresh_linkedin_profile_data", "mass_from_to_number_for_unitconversion", "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains", "first_25_teams_for_football_soccer_team_names", "coins_get_fullsize_chart_for_investing_cryptocurrency_markets", "247naijabuzz_media_for_247naijabuzz", "player_data_for_os_sports_perform"], "api_descs": {"247naijabuzz_media_for_247naijabuzz": "For Flash Music Download", "Finish": "No description available.", "coins_get_fullsize_chart_for_investing_cryptocurrency_markets": "Get fullsize chart of specific cryptocurrency", "commentthreads_for_youtube_v3_v3": "Returns a list of comment threads that match the API request parameters.", "first_25_teams_for_football_soccer_team_names": "You'll get only the first 25 team names and their short names if you have basic plan.", "get_all_certifications_for_top_2023_it_certifications": "Get All Certifications", "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains": "Get all {Chain} names", "get_by_id_for_top_2023_it_certifications": "Get by ID", "get_open_profile_status_for_fresh_linkedin_profile_data": "Given a LinkedIn profile URL, the API will let you know if that profile is “open profile” or not. **1 credit per call.**", "gettask_for_reword_pdf": " ", "mass_from_to_number_for_unitconversion": "Mass unit conversions", "player_data_for_os_sports_perform": "Get player data by player ID", "searchairports_for_world_airports_directory": "Primary API to  get all the matching airports based on the keyword you pass in the params. API runs best matching algorithm to find most relevant airports matching with either city, city code or airport code and so on.\n**BONUS**: It returns complete `Airport Name, Lat, Long, Timezone, Country, Country Code, Airport Code and City Code.`\n\nNOTE: This API is case insensitive.\n\nFor e.g.\n1. When user trying with city `/v1/airports/dubai`\n2. When user trying with Airport Code `/v1/airports/dxb`\n3. When user trying with city code `/v1/airports/omdb`", "statusforexcelemissionanalysis_for_carbon_management": "Get results in details from the task id.", "trending_videos_for_youtube_v2": "This endpoint returns the list of trending videos given a country"}, "aseqs": [{"api_name": "get_all_certifications_for_top_2023_it_certifications", "api_action": "\nAction: get_all_certifications_for_top_2023_it_certifications\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_id_for_top_2023_it_certifications", "api_action": "\nAction: get_by_id_for_top_2023_it_certifications\nAction Input: {\n  \"is_id\": \"lmn789\"\n}", "api_reaction": null}, {"api_name": "get_by_id_for_top_2023_it_certifications", "api_action": "\nAction: get_by_id_for_top_2023_it_certifications\nAction Input: {\n  \"is_id\": \"7\"\n}", "api_reaction": null}, {"api_name": "get_by_id_for_top_2023_it_certifications", "api_action": "\nAction: get_by_id_for_top_2023_it_certifications\nAction Input: {\n  \"is_id\": \"1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_chain_names_for_fast_food_restaurants_usa_top_50_chains"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_top_2023_it_certifications"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_id_for_top_2023_it_certifications", "api_action": "\nAction: get_by_id_for_top_2023_it_certifications\nAction Input: {\n  \"is_id\": \"lmn789\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_certifications_for_top_2023_it_certifications"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_certifications_for_top_2023_it_certifications"}}]}
{"URL": "43295", "query": "I want to know which streaming services offer movies and TV shows in the United States. Can you provide me with a list of services along with the details of the available shows and their ratings? Also, filter the results based on genre and language.", "api_names": ["Finish", "search_ultra_for_streaming_availability", "search_basic_free_for_streaming_availability", "getbymonth_for_earningsdata", "loginuser_for_petstoreapi2_0", "doji_for_barpatterns", "documentation_for_cakemail", "business_slogan_for_business_starter_api", "anime_for_anime_manga_and_novels_api", "get_tile_json_for_mapilion_vector_and_raster_map_tiles", "list_all_otask_records_for_odesk_apis", "da_laforce_for_giay_tay_nam", "domain_analysis_for_domain_analysis", "getfeatures_for_endlessmedicalapi", "geocode_for_trueway_geocoding", "get_genres_for_50k_radio_stations", "getlearningresources_for_powerbi", "words_for_jibber_jabber"], "api_descs": {"Finish": "No description available.", "anime_for_anime_manga_and_novels_api": "Get a list of all anime", "business_slogan_for_business_starter_api": "Generate a slogan for you Business name", "da_laforce_for_giay_tay_nam": "Đồ da Laforce là thương hiệu uy tín tại Hà Nội cũng như trên toàn quốc về sản phẩm đồ da như giày, túi, ví, thắt lưng, găng tay.", "documentation_for_cakemail": "", "doji_for_barpatterns": "List of stocks having Doji signal.", "domain_analysis_for_domain_analysis": "For a given domain, get analysis ranging from domain length all the way to past sales and number of mentions.", "geocode_for_trueway_geocoding": "Obtain geocoordinates for address", "get_genres_for_50k_radio_stations": "Get genre list", "get_tile_json_for_mapilion_vector_and_raster_map_tiles": "Returns the tile json for the give style. Currently there are three different types:\n- `v3` the OpenMapTiles compatible vector tiles\n- `hillshading-v1` Hillshading tiles Version 1\n- `hillshading-v2` Hillshading tiles Version 2", "getbymonth_for_earningsdata": "Get Earning Data By Month", "getfeatures_for_endlessmedicalapi": "GetFeatures", "getlearningresources_for_powerbi": "Get Power BI learning resources.", "list_all_otask_records_for_odesk_apis": "returns all task records under the company", "loginuser_for_petstoreapi2_0": "", "search_basic_free_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 8. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "search_ultra_for_streaming_availability": "Search through the catalog of the given services in the given country. Provides filters such as show language, genre and keyword. Items per page is 25. Output includes all the information about the shows, such as title, IMDb ID, TMDb ID, IMDb rating, link to shows' pages in streaming services (including individual season/episode links), cast, runtime, poster and many more! Apart from the info about the given country-service combinations, output also includes information about availability in the other services for the given country.", "words_for_jibber_jabber": "Returns random **words**"}, "aseqs": [{"api_name": "search_ultra_for_streaming_availability", "api_action": "\nAction: search_ultra_for_streaming_availability\nAction Input: {\n  \"services\": \"Netflix,Prime,Disney,HBO,Hulu\",\n  \"country\": \"US\",\n  \"genres\": \"\",\n  \"show_original_language\": \"\",\n  \"output_language\": \"en\"\n}", "api_reaction": null}, {"api_name": "search_basic_free_for_streaming_availability", "api_action": "\nAction: search_basic_free_for_streaming_availability\nAction Input: {\n  \"services\": \"Netflix,Prime,Disney,HBO,Hulu\",\n  \"country\": \"US\",\n  \"genre\": \"\",\n  \"show_original_language\": \"\",\n  \"output_language\": \"en\"\n}", "api_reaction": null}, {"api_name": "search_basic_free_for_streaming_availability", "api_action": "\nAction: search_basic_free_for_streaming_availability\nAction Input: {\n  \"services\": \"Netflix,Prime\",\n  \"country\": \"US\",\n  \"genre\": \"\",\n  \"show_original_language\": \"\",\n  \"output_language\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_ultra_for_streaming_availability"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_ultra_for_streaming_availability"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_ultra_for_streaming_availability", "api_action": "{\"services\": \"Netflix,Prime,Disney,HBO,Hulu\", \"country\": \"US\", \"genres\": \"\", \"show_original_language\": \"\", \"output_language\": \"en\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_ultra_for_streaming_availability", "api_action": "\nAction: search_ultra_for_streaming_availability\nAction Input: {\n  \"services\": \"Netflix,Prime\",\n  \"country\": \"US\",\n  \"genres\": \"", "api_reaction": null}}]}
{"URL": "87230", "query": "I need to retrieve the location details from an IP address. Can you provide me with the coordinates, ISP, and country for the IP address 192.168.1.1? Additionally, I would like to know the city and area code associated with it. Thank you!", "api_names": ["ip_to_location_for_ip_to_location", "Finish", "commonports_for_commonportnumbers", "exchange_zip_code_for_state_for_zip_code_to_state_converter", "endpoint_for_magicmirror", "summary_for_seo_checker", "recitations_for_quran_com", "get_posts_2504660f_8ad6_4815_86e0_312cc593fe26_for_the_south_asian_express", "get_all_wisdom_topics_for_wisdom_quotes", "matchschedules_for_footapi"], "api_descs": {"Finish": "No description available.", "commonports_for_commonportnumbers": "Get registered service names and transport protocols port numbers.", "endpoint_for_magicmirror": "add endpoint", "exchange_zip_code_for_state_for_zip_code_to_state_converter": "The endpoint to pass a zip code as a query parameter and get the state the zip code is located in as a response.", "get_all_wisdom_topics_for_wisdom_quotes": "Returns an Array of all available wisdom topics. \nEach topic has its own quotes.", "get_posts_2504660f_8ad6_4815_86e0_312cc593fe26_for_the_south_asian_express": "Scope under which the request is made; determines fields present in response.", "ip_to_location_for_ip_to_location": "Get location details from IP address", "matchschedules_for_footapi": "Get football schedules for a specific day, month, and year.", "recitations_for_quran_com": "Get list of available Recitations.", "summary_for_seo_checker": "Summary SEO"}, "aseqs": [{"api_name": "ip_to_location_for_ip_to_location", "api_action": "\nAction: ip_to_location_for_ip_to_location\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ip_to_location_for_ip_to_location"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ip_to_location_for_ip_to_location", "api_action": "{\"ip\": \"192.168.1.1\"}", "api_reaction": null}}]}
{"URL": "22140", "query": "I'm interested in reading the latest articles about the global recession. Can you fetch the news from The Guardian and other publications? Please provide the titles, URLs, and sources of these articles.", "api_names": ["get_all_global_recession_news_for_global_recession_live", "Finish", "video_details_for_youtube_v3_v2", "trending_videos_for_youtube_v2", "list_of_hotel_types_for_booking_com", "get_user_metadata_for_waifu", "getvideo_for_tiktok_info", "titles_with_changed_details_for_watchmode", "list_recent_transactions_for_coinbase", "market_trends_for_joj_finance", "movie_details_for_disney_worlds", "get_history_of_item_for_tibia_items"], "api_descs": {"Finish": "No description available.", "get_all_global_recession_news_for_global_recession_live": "This endpoint will return the latest articles from 7 publications about worldwide recession news.", "get_history_of_item_for_tibia_items": "In this enpoint we can deliver the history of item.\nyou will need to request in this pattern.\n\nKey: NameItem::World::TypeItem\nKey: Gold Token::Wizera::Valuable\n\nDate:2022-01-01\nDate: yyyy-MM-dd\n\nDate: 2022-01\nDate: yyyy-MM", "get_user_metadata_for_waifu": "Get user metadata", "getvideo_for_tiktok_info": "Get all the video information like Play URL, Cover, Stats, Codec along with Author and Music details", "list_of_hotel_types_for_booking_com": "Returns hotel types names and their translations.", "list_recent_transactions_for_coinbase": "List a user's recent transactions.", "market_trends_for_joj_finance": "Explore market trends", "movie_details_for_disney_worlds": "Get movie details by searching movie name", "titles_with_changed_details_for_watchmode": "Get a listing of titles that have had a change to their basic details (overview, cast, genres, ratings, etc) within the date range.", "trending_videos_for_youtube_v2": "This endpoint returns the list of trending videos given a country", "video_details_for_youtube_v3_v2": "Get YouTube video details.\n\nNote:\n**topicDetails** part is not enabled. If you want this part to be included in the API response then please contact us."}, "aseqs": [{"api_name": "get_all_global_recession_news_for_global_recession_live", "api_action": "\nAction: get_all_global_recession_news_for_global_recession_live\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_global_recession_news_for_global_recession_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_global_recession_news_for_global_recession_live"}}]}
{"URL": "18487", "query": "I am a cryptocurrency enthusiast and I want to stay updated on the latest news. Can you provide me with the top gainers and losers in the market along with the news articles about cryptocurrency?", "api_names": ["get_latest_news_on_cryptocurrency_for_crypto_update_live", "get_top_gainers_losers_list_for_crypto_update_live", "Finish", "get_apps_from_dev_for_google_play_api", "opt_vega_for_kiann_options_project", "get_user_id_for_instagram_fast", "https_kassbet_p_rapidapi_com_for_kassbet", "generate_a_random_sentence_for_random_word_generator", "geo_ping_global_ip_lookup_for_global_webserver_or_ip_response_time_and_location", "historical_rates_for_exchanger_currency_rates_provider", "video_search_api_for_petey_vid_video_search_api", "commodity_indices_for_investing", "playlist_for_deezer", "languages_for_linguin_ai", "image_search_for_google_search_v3"], "api_descs": {"Finish": "No description available.", "commodity_indices_for_investing": "page source : https://www.investing.com/indices/commodities-indices", "generate_a_random_sentence_for_random_word_generator": "Generate a random sentence", "geo_ping_global_ip_lookup_for_global_webserver_or_ip_response_time_and_location": "Connects to 12 global servers and determines the local ip at that location for a given domain name or ip address, reports back location and response time of servers.", "get_apps_from_dev_for_google_play_api": "Returns dev's apps.", "get_latest_news_on_cryptocurrency_for_crypto_update_live": "This endpoint returns all the news regarding cryptocurrency.", "get_top_gainers_losers_list_for_crypto_update_live": "This endpoint gives the list of the top gainers and losers.", "get_user_id_for_instagram_fast": "Get instagram id by username", "historical_rates_for_exchanger_currency_rates_provider": "Request the prices of any date between the year 2000 till today.", "https_kassbet_p_rapidapi_com_for_kassbet": "fetch games", "image_search_for_google_search_v3": "This endpoint is used for image searches", "languages_for_linguin_ai": "Get the list of supported languages", "opt_vega_for_kiann_options_project": "option lognormal greeks : vega calculates the vega, given where\nS = forward (float), K = strike (float), T = time-to-expiry (float), sigma = implied volatility lognormal (float)\nr = risk-free-rate (float), type_  =call (c) /put (p) (string), ret_ = 0 (default) for use in rapidAPI.com", "playlist_for_deezer": "A playlist object", "video_search_api_for_petey_vid_video_search_api": "Use this API to search Petey Vid index/repository"}, "aseqs": [{"api_name": "get_top_gainers_losers_list_for_crypto_update_live", "api_action": "\nAction: get_top_gainers_losers_list_for_crypto_update_live\nAction Input: {}", "api_reaction": null}, {"api_name": "get_latest_news_on_cryptocurrency_for_crypto_update_live", "api_action": "\nAction: get_latest_news_on_cryptocurrency_for_crypto_update_live\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_top_gainers_losers_list_for_crypto_update_live", "api_params": {"type": "crypto"}}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_latest_news_on_cryptocurrency_for_crypto_update_live"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_latest_news_on_cryptocurrency_for_crypto_update_live"}}]}
{"URL": "87850", "query": "Please assist me in making a GET request using the httpbin test tool. I would like to retrieve the response headers and URL for further analysis. Thank you for your help!", "api_names": ["Finish", "get_for_httpbin_test", "get_ticker_for_specific_coin_for_coinlore_cryptocurrency", "search_by_weight_for_player_data", "get_coupons_endpoint_for_daily_betting_tips", "search_for_region_for_realtor", "get_product_details_by_url_product_url_get_for_shopee_v2", "get_all_players_for_valorant_esports_v2"], "api_descs": {"Finish": "No description available.", "get_all_players_for_valorant_esports_v2": "Get id, name and country of all players.", "get_coupons_endpoint_for_daily_betting_tips": "- This Endpoint provides daily AI analyzed Betting coupons with high win rate.\n- To load all tips organized in Ascending order pass parameter sort with value \"-id\".", "get_for_httpbin_test": "Get request", "get_product_details_by_url_product_url_get_for_shopee_v2": "Get product details using product url", "get_ticker_for_specific_coin_for_coinlore_cryptocurrency": "Get ticker for specific coin", "search_by_weight_for_player_data": "<br /><br />\n<b>Authentication:</b> not required", "search_for_region_for_realtor": "Get location suggestions by keyword"}, "aseqs": [{"api_name": "get_for_httpbin_test", "api_action": "\nAction: get_for_httpbin_test\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_for_httpbin_test"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_for_httpbin_test"}}]}
{"URL": "57963", "query": "I want to surprise my sister with a customized playlist of her favorite artist, Ed Sheeran. Can you help me find all the albums and singles by Ed Sheeran and provide the lyrics to his top tracks? It would be amazing if you could also suggest other artists he has collaborated with.", "api_names": ["Finish", "artist_albums_for_spotify_v3", "artist_featuring_for_spotify_v3", "track_lyrics_for_spotify_v3", "get_global_indices_by_price_for_global_stock_market_api_data", "exchanges_for_tardis_dev", "block_for_optimism", "timeseries_for_hedonometer", "channel_search_for_youtube_v2", "market_get_movers_for_schwab", "get_question_by_id_for_ase_s_quiz_api", "get_block_hash_v2_for_chain49", "personasapi_for_personas", "categoryschedules_for_rugbyapi2", "v1_facts_for_facts_by_api_ninjas", "loginuser_for_teste"], "api_descs": {"Finish": "No description available.", "artist_albums_for_spotify_v3": "Get artist albums", "artist_featuring_for_spotify_v3": "Artist featuring", "block_for_optimism": "Get full data from a specific block on the Optimism blockchain.", "categoryschedules_for_rugbyapi2": "Get the schedules of rugby matches for the given date and category, including match timings, teams, and other relevant information.", "channel_search_for_youtube_v2": "This endpoint gets search results in a given Youtube channel using the channel ID", "exchanges_for_tardis_dev": "Gets the exchanges details: available symbols, availability dates, available channels, CSV datasets info, incidents etc.", "get_block_hash_v2_for_chain49": "Get block hash by its height\n\nNote: Blockbook always follows the main chain of the backend it is attached to.", "get_global_indices_by_price_for_global_stock_market_api_data": "World financial market to get global Indices with respect to price", "get_question_by_id_for_ase_s_quiz_api": "Get question by id", "loginuser_for_teste": "", "market_get_movers_for_schwab": "List recent movers in the market", "personasapi_for_personas": "RapidAPI’s official API that allows you to add or update your API’s definition.", "timeseries_for_hedonometer": "Call the happiness timeseries", "track_lyrics_for_spotify_v3": "Get track lyrics", "v1_facts_for_facts_by_api_ninjas": "API Ninjas Facts API endpoint"}, "aseqs": [{"api_name": "artist_albums_for_spotify_v3", "api_action": "\nAction: artist_albums_for_spotify_v3\nAction Input: {\n  \"is_id\": \"6eUKZXaKkcviH0Ku9w2n3V\"\n}", "api_reaction": null}, {"api_name": "track_lyrics_for_spotify_v3", "api_action": "\nAction: track_lyrics_for_spotify_v3\nAction Input: {\n  \"is_id\": \"6eUKZXaKkcviH0Ku9w2n3V\"\n}", "api_reaction": null}, {"api_name": "artist_featuring_for_spotify_v3", "api_action": "\nAction: artist_featuring_for_spotify_v3\nAction Input: {\n  \"is_id\": \"6eUKZXaKkcviH0Ku9w2n3V\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to first find all the albums and singles by Ed Sheeran, then get the lyrics of his top tracks, and finally find out who he has collaborated with.\n\t\"api_name\": \"artist_albums_for_spotify_v3\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_featuring_for_spotify_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_featuring_for_spotify_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_albums_for_spotify_v3"}}]}
{"URL": "62594", "query": "I'm exploring different topics in the Bible and I'm particularly interested in the topic 'seek God'. Can you fetch entries from this topic using the Uncovered Treasure API? Additionally, I'd like to get a random treasure to broaden my knowledge.", "api_names": ["topic_topic_for_uncovered_treasure", "random_for_uncovered_treasure", "Finish", "facilities_lookup_for_tanzania_api", "country_iso_3166_for_phone_validator_api", "sar_for_twelve_data", "api_v2_activities_before_2014_07_24t18_00_00z_after_2014_07_14t18_00_00z_for_2peak_com_dynamic_training_plans_for_cycling_running_and_triathlon", "account_event_timeline_for_dailycred", "youtube_channel_details_for_youtube_channel_details", "mensajes_for_colegiosantaana", "salad_ingredient_for_recipe_finder", "all_districts_with_coordinates_for_bdapi", "search_for_recipes_for_low_carb_recipes", "sources_for_newsdata", "full_item_details_for_steam_store_api"], "api_descs": {"Finish": "No description available.", "account_event_timeline_for_dailycred": "", "all_districts_with_coordinates_for_bdapi": "`/v1.1/districts`\nGet all Districts with their Coordinates in English and Bangla.\n\n**Response**\n```\nstatus: object,\ndata: [\n  _id: string,\n  district: string,\n  districtbn: string,\n  coordinates: string\n]\n```", "api_v2_activities_before_2014_07_24t18_00_00z_after_2014_07_14t18_00_00z_for_2peak_com_dynamic_training_plans_for_cycling_running_and_triathlon": "Get Activities", "country_iso_3166_for_phone_validator_api": "Returns the officially assigned ISO alpha-2 country code, on [ISO 3166-1 alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-2).", "facilities_lookup_for_tanzania_api": "This endpoint allows you to get facilities in Tanzania like hospital, bank, college, etc. by providing optional query parameters for facility type, region and city. It returns a list of facilities that match the query parameters.", "full_item_details_for_steam_store_api": "🎮 It retrieves full game data such as: prices, discount, detailed descriptions, PEGI/ESRB, DLCs, system requirements, screenshots and much more! It also returns API links to conveniently download details of: DLCs, reviews, achievements.", "mensajes_for_colegiosantaana": "Lista de mensajes", "random_for_uncovered_treasure": "Get random treasure", "salad_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random salad recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "sar_for_twelve_data": "Parabolic SAR(SAR) is used to identify and spot upcoming asset momentum.", "search_for_recipes_for_low_carb_recipes": "Search for recipes that match provided criterions", "sources_for_newsdata": "News sources endpoint provides access to the subsets of news publishers that the latest news is available from.\n\nIt's mainly a convenience endpoint that you can use to keep track of the publishers available on the API, and you can pipe it straight through to your users", "topic_topic_for_uncovered_treasure": "Get entries from a specific topic", "youtube_channel_details_for_youtube_channel_details": "YouTube Channel Details"}, "aseqs": [{"api_name": "topic_topic_for_uncovered_treasure", "api_action": "\nAction: topic_topic_for_uncovered_treasure\nAction Input: {\n  \"topic\": \"seek God\"\n}", "api_reaction": null}, {"api_name": "random_for_uncovered_treasure", "api_action": "\nAction: random_for_uncovered_treasure\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "topic_topic_for_uncovered_treasure"}}, {"state": "generated_by_agent", "aseq": {"api_name": "random_for_uncovered_treasure"}}, {"state": "generated_by_agent", "aseq": {"api_name": "topic_topic_for_uncovered_treasure"}}]}
{"URL": "70299", "query": "I'm planning to invest in the stock market and need comprehensive data to analyze stock performance. Can you fetch the latest stock prices, along with the open, day high, day low, and previous close values for the NSE indices?", "api_names": ["Finish", "prices_for_latest_stock_price", "price_all_for_latest_stock_price", "wisdomoftheday_for_wisdom_api", "get_video_without_watermark_for_tiktok_private", "index_for_breachdirectory", "master_getdownloadpath_for_landr_mastering_v1", "disciplina_2_for_colegiosantaana", "mrna2dna_for_dna2protein", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real", "detail2_for_spaceflight_news", "get_daily_schedule_for_tank01_fantasy_stats"], "api_descs": {"Finish": "No description available.", "detail2_for_spaceflight_news": " ", "disciplina_2_for_colegiosantaana": "Disciplina alumno 2", "gera_mapa_dos_arredores_for_consulta_cnpj_tempo_real": "Gera Mapa dos Arredores", "get_daily_schedule_for_tank01_fantasy_stats": "Get basic information on which games are being played during a day.  \ncall is like this:\n/getNBAGamesForDate?gameDate=20220310\nThe above call will return all of the games from March 10th, 2022.  Date must be in that format.  \nFor March 10th, there were two games. They come back in a list format within the body of the response.", "get_video_without_watermark_for_tiktok_private": "Get Video Without Watermark", "index_for_breachdirectory": "Base URL for using each of BreachDirectory's API functions: auto, sources, and password.", "master_getdownloadpath_for_landr_mastering_v1": "Rate Limits: 100 requests per minute\n            ", "mrna2dna_for_dna2protein": "This endpoint transforms an mRNA sequence to its DNA sequence equivalent.", "price_all_for_latest_stock_price": "Fetch latest stock price", "prices_for_latest_stock_price": "Fetch latest stock price based on indices", "wisdomoftheday_for_wisdom_api": "Daily Wisdom Quote: This API endpoint provides a wise quote that is refreshed everyday between 8-9 AM PT."}, "aseqs": [{"api_name": "prices_for_latest_stock_price", "api_action": "\nAction: prices_for_latest_stock_price\nAction Input: {\n  \"indices\": \"NSE\",\n  \"identifier\": \"open, high, low, previousClose\"\n}", "api_reaction": null}, {"api_name": "price_all_for_latest_stock_price", "api_action": "\nAction: price_all_for_latest_stock_price\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "price_all_for_latest_stock_price"}}, {"state": "generated_by_agent", "aseq": {"api_name": "price_all_for_latest_stock_price"}}, {"state": "generated_by_agent", "aseq": {"api_name": "price_all_for_latest_stock_price"}}]}
{"URL": "50242", "query": "I'm planning to start a new business and I need a catchy slogan for my brand. The business focuses on handmade jewelry made from recycled materials. Can you generate a slogan that highlights the uniqueness, sustainability, and craftsmanship of our products?", "api_names": ["business_slogan_for_business_starter_api", "Finish", "riddle_by_difficulty_level_for_riddlie_", "calculate_repayment_schedule_for_loan_amortization_calculator", "get_eur_foreign_exchange_rates_for_exchange_rate_provider", "the_prices_for_the_airline_tickets_for_flight_data_v2", "anime_for_any_anime", "getchannelinfo_for_vimeo", "venuedetails_for_testing_v2", "media_info_for_100_success_instagram_api_scalable_robust"], "api_descs": {"Finish": "No description available.", "anime_for_any_anime": "Shows json data and image url of the anime pfp you want to use / show !", "business_slogan_for_business_starter_api": "Generate a slogan for you Business name", "calculate_repayment_schedule_for_loan_amortization_calculator": "This endpoint calculates repayment schedule.", "get_eur_foreign_exchange_rates_for_exchange_rate_provider": "Get Foreign Exchange Rates for default currency EUR.", "getchannelinfo_for_vimeo": "Get the information on a single channel.", "media_info_for_100_success_instagram_api_scalable_robust": "Get media info", "riddle_by_difficulty_level_for_riddlie_": "Get one random riddle based on the difficulty. For example, by Easy, Medium, Hard.", "the_prices_for_the_airline_tickets_for_flight_data_v2": "Brings back to the list of prices, found by our users during the recent 48 hours according to the filters used.", "venuedetails_for_testing_v2": "Venue Details"}, "aseqs": [{"api_name": "business_slogan_for_business_starter_api", "api_action": "\nAction: business_slogan_for_business_starter_api\nAction Input: {\n  \"name\": \"handmade jewelry made from recycled materials\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "business_slogan_for_business_starter_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "business_slogan_for_business_starter_api", "api_action": "\nAction: business_slogan_for_business_starter_api\nAction Input: {\n  \"name\": \"handmade jewelry made from recycled materials\"\n}", "api_reaction": null}}]}
{"URL": "45384", "query": "Our company wants to integrate the Wealth Reader API into our financial application. Can you provide us with a list of supported entities and their login form details? Additionally, we need to understand the error codes and how to handle them appropriately.", "api_names": ["error_codes_for_wealth_reader_api", "entities_for_wealth_reader_api", "Finish", "measure_distance_for_egypt_api", "house_prices_get_running_costs_for_zoopla_v2", "search_products_for_ebay", "get_stations_within_10_km_for_ev_charging_stations", "search_by_coordinates_for_zillow_data_v2", "genderify_v3_for_genderify3", "product_reviews_for_target_com_store_product_reviews_locations_data", "api_v2_minimal_exchange_amount_for_changenow_crypto_exchange", "check_server_status_for_waifu", "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data", "allforms_for_acopaer", "get_bookmakers_for_surebets", "live_path_summary_v3_for_chartbeat", "by_geographic_coordinates_for_rapidweather", "nfts_on_address_for__all_in_one_crypto_swiss_knife_"], "api_descs": {"Finish": "No description available.", "allforms_for_acopaer": "# Description GET All Forms\r\n\r\nThis url is to get all Forms created is type `GET`, the url is `BASE_URL/forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "api_v2_minimal_exchange_amount_for_changenow_crypto_exchange": "The API endpoint returns minimal payment amount required to make an exchange. If you try to exchange less, the transaction will most likely fail.\n\n<p>You can find <b>examples of errors</b> in the Example request block (use the drop-down list).</p>\n\n<h3>Request Parameters:</h3>", "by_geographic_coordinates_for_rapidweather": "By geographic coordinates", "check_server_status_for_waifu": "Check server status", "entities_for_wealth_reader_api": "Obtiene el listado de entidades soportadas y la información necesaria para dibujar el formulario de login de la entidad.\n", "error_codes_for_wealth_reader_api": "Listado de códigos de error. Presta especial atención a que no todos los códigos de error deben recibir el mismo tratamiento por parte de tu aplicación. Ante un error de password incorrecto no debes reintentar la llamada con los mismos parámetros, pero ante un error que te indique que la entidad está en mantenimiento sí puedes reintentarlo. Pide una sesión técnica con nuestro equipo para resolver cualquier duda sobre la gestión de errores.\n", "genderify_v3_for_genderify3": "Predict and detect male or female based on their name or email address. Names are supported in over 160 supported countries.\n\ninput: Emily Blunt or shigeotokuda@email.com", "get_bookmakers_for_surebets": "Get a list of all supported bookmakers", "get_company_data_by_linkedin_url_for_fresh_linkedin_company_data": "Given a company’s LinkedIn URL, the API will return valuable data points in JSON format.", "get_stations_within_10_km_for_ev_charging_stations": "Return nearest charging stations within 10 km radius.", "house_prices_get_running_costs_for_zoopla_v2": "Get running costs", "live_path_summary_v3_for_chartbeat": "Returns summary data (refer to the summary API call), but for top paths of given a host. This call returns real-time data.", "measure_distance_for_egypt_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance between Alexandria and Cairo**", "nfts_on_address_for__all_in_one_crypto_swiss_knife_": "Get list of NFTs that address holds.", "product_reviews_for_target_com_store_product_reviews_locations_data": "The endpoint returns product reviews", "search_by_coordinates_for_zillow_data_v2": "Search by coordinates", "search_products_for_ebay": "Search for products on Ebay in specific country.\nReturns the `last_page` that can be scraped for the specific `search_query`.\nDefault country is `United States`.\nSpecify country with country name or country code.\n\nAllowed countries:\nDefault: `us`\n- Germany (de)\n- France (fr)\n- Australia (au)\n- Austria (at)\n- Canada (ca)\n- Hong Kong (hk)\n- Ireland (ie)\n- Italy (it)\n- Malaysia (my)\n- Netherlands (nl)\n- Singapore (sg)\n- Switzerland (ch)\n- United Kingdom (uk)"}, "aseqs": [{"api_name": "entities_for_wealth_reader_api", "api_action": "\nAction: entities_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}, {"api_name": "error_codes_for_wealth_reader_api", "api_action": "\nAction: error_codes_for_wealth_reader_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "entities_for_wealth_reader_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "error_codes_for_wealth_reader_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "entities_for_wealth_reader_api"}}]}
{"URL": "86367", "query": "My company needs to verify the authenticity of multiple email addresses in our database. Could you please verify the validity of the email addresses and provide the validation results, including whether they are valid, disposable, and any SMTP validation failures?", "api_names": ["verify_email_for_email_verifier", "Finish", "list_user_followers_for_spotify_scraper", "list_user_comments_for_soundcloud_scraper", "listoforders_for_sandbox_mktplace_eu_04_orders", "request_all_eu_vat_rates_for_vatlayer", "options_chain_for_fancyoptions", "dolar_for_proclima", "alerts_active_region_region_for_national_weather_service", "mortgage_check_equity_rates_for_realty_in_us"], "api_descs": {"Finish": "No description available.", "alerts_active_region_region_for_national_weather_service": "A list of active alerts by region. The ATOM format returns items in CAP-ATOM. Example: /alerts/active/region/GL", "dolar_for_proclima": "dolar", "list_user_comments_for_soundcloud_scraper": "This endpoint lists a user's comments.", "list_user_followers_for_spotify_scraper": "This endpoint lists part of a user's followers.", "listoforders_for_sandbox_mktplace_eu_04_orders": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html", "mortgage_check_equity_rates_for_realty_in_us": "Check mortgage equity rates", "options_chain_for_fancyoptions": "This endpoint returns the an options chain for a given ticker and expiration date.\n\nDate format.  YYYY-MM-DD", "request_all_eu_vat_rates_for_vatlayer": "Use the API's \"rate_list\" endpoint to obtain standard & reduced VAT rates for all 28 current member states", "verify_email_for_email_verifier": "To verify a single email address"}, "aseqs": [{"api_name": "verify_email_for_email_verifier", "api_action": "\nAction: verify_email_for_email_verifier\nAction Input: {\n  \"email\": \"example1@example.com\"\n}", "api_reaction": null}, {"api_name": "verify_email_for_email_verifier", "api_action": "\nAction: verify_email_for_email_verifier\nAction Input: {\n  \"email\": \"example2@example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "verify_email_for_email_verifier"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"verify_email_for_email_verifier\",\n\t\"api_action\": \"{\\\"email\\\": \\\"example2@example.com\\\"}\",\n}"}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"verify_email_for_email_verifier\",\n\t\"api_action\": \"\\nAction: verify_email_for_email_verifier\\nAction Input: {\\n  \\\"email\\\": \\\"example3@example.com\\\"\\n}\",\n}"}]}
{"URL": "33052", "query": "I'm a music blogger and need information on an artist. Can you give me an overview of the artist with ID 2w9zwq3AktTeYYMuhMjju8? Also, provide their discography and related content.", "api_names": ["artist_discography_overview_for_spotify", "artist_related_for_spotify", "artist_overview_for_spotify", "Finish", "supported_languages_for_google_translate_v3", "get_categories_for_my_store", "get_country_details_for_travel_hacking_tool", "datapoints_associated_to_conversion_for_clickmeter", "coin_for_circulating_supply", "geteventexternalinfo_for_sportapi", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations", "top_losers_for_cryptocurrency_markets", "email_endpoint_for_emailbounceapi", "live_score_for_cricket", "calendar_for_wayback_machine", "fetch_by_region_for_magical_taske", "tweet_favoriters_for_twitter_v4", "get_for_simple_file_storage", "get_imbuements_for_demon_presence_holy_protection_for_tibia_items", "country_iso_3166_for_phone_validator_api"], "api_descs": {"Finish": "No description available.", "artist_discography_overview_for_spotify": "Get artist discography overview", "artist_overview_for_spotify": "Get artist overview", "artist_related_for_spotify": "Artist related", "calendar_for_wayback_machine": "Calendar", "coin_for_circulating_supply": "This endpoint returns the value of given coin as parameter.", "country_iso_3166_for_phone_validator_api": "Returns the officially assigned ISO alpha-2 country code, on [ISO 3166-1 alpha-2 format](https://en.wikipedia.org/wiki/ISO_3166-2).", "datapoints_associated_to_conversion_for_clickmeter": "List all datapoints associated to this conversion", "email_endpoint_for_emailbounceapi": "Simplify your email management with our API that detects and handles bounced emails from a range of ISPs, ensuring your messages are delivered effectively.", "fetch_by_region_for_magical_taske": "This endpoint fetches records by region as defined in the `ABOUT` section above. You have to provide region and a limit of the number of records returned.", "get_categories_for_my_store": " ", "get_country_details_for_travel_hacking_tool": "This returns details for a country based on the country codes (ISO-3166).", "get_for_simple_file_storage": "Get previously uploaded file using the file_id. \n(file_id is returned from the UPLOAD endpoint)", "get_imbuements_for_demon_presence_holy_protection_for_tibia_items": "This enpoint will get all imbuement for type Demon Presence\n\nDemon Presence (Holy Protection)\nCultish Robe \nCultish Mask \nHellspawn Tail", "geteventexternalinfo_for_sportapi": "GetEventExternalInfo api data", "live_score_for_cricket": "to view live score", "recent_wallpapers_by_pagination_for_premium_anime_mobile_wallpapers_illustrations": "Get recent anime wallpapers without any categorization:\nRequired GET parameter\n**page**:  1\n**sensitivity**: 1\nOn the above **page**, 1 means it will fetch the latest 10 wallpaper if the page value is 2 then It will bring the next 10 latest wallpaper \npage 1: 0-10 \npage 2: 10-20 ......\n\nOn the above sensitivity, 1 means it will not fetch any 18+ or ecchi-related images if the value is 0 then it will bring all without any filter.\n\nOptional GET parameter\n**quality**:0\n\nThis API provides two types of wallpaper images\n1. Compress lower size wallpaper.\n2.  Best quality but will result in high size.\n\nif the **quality**  parameter, is not provided then by default it will provide the URL of compressed wallpaper low size if the quality parameter is set to 1 then it will provide a URL of the highest quality wallpaper ( high size ).\n\n**RESPONSE**\n**animename**  ( Depend on subscription )\nif the wallpaper is related to any anime, or game then the Japanese name of the anime will be sent otherwise illustration will be sent.\n\n**arturl**\nURL of wallpaper\n\n**sensitivity** ( Depend on subscription )\nIs wallpaper sensitive, 1 means yes 0 means no\n\n**art_id** ( Depend on subscription )\nUnique wallpaper  id which can be later used to get more info\n\n**premium** (Depend on subscription)\nWhether art is of premium category 1 means yes 0 means no.\n\n**Note: if no wallpaper found response will be**\n`{\"status\": \"empty\"}`", "supported_languages_for_google_translate_v3": "Get Support Languages", "top_losers_for_cryptocurrency_markets": "Cryptocurrencies with the most losses today.", "tweet_favoriters_for_twitter_v4": "Tweet Favoriters"}, "aseqs": [{"api_name": "artist_overview_for_spotify", "api_action": "\nAction: artist_overview_for_spotify\nAction Input: {\n\"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "artist_related_for_spotify", "api_action": "\nAction: artist_related_for_spotify\nAction Input: {\n  \"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "artist_related_for_spotify", "api_action": "\nAction: artist_related_for_spotify\nAction Input: {\n  \"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "artist_discography_overview_for_spotify", "api_action": "\nAction: artist_discography_overview_for_spotify\nAction Input: {\n  \"is_id\": \"2w9zwq3AktTeYYMuhMjju8\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "artist_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_discography_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_discography_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_discography_overview_for_spotify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "artist_overview_for_spotify"}}]}
{"URL": "35773", "query": "My company is interested in accessing the premium tips provided by the Betigolo Tips API. We would like to analyze the historical results of these tips in the past 30 days. Can you provide us with the match date, sport, country, league, home team, away team, tip, fair odd, tip odd, result, tip success, and tip profit?", "api_names": ["premium_history_for_betigolo_tips", "Finish", "search_for_ios_store", "generate_time_reports_for_a_specific_team_for_odesk_apis", "lookup_for_ip_directory", "get_misinformation_score_account_twitter_account_get_for_mescalc", "getsupportedfileformats_for_groupdocs_merger_cloud", "getthelistofcountriesregistered_for_sandbox_mktplace_eu_04_orders", "get_a_user_s_positions_for_tradier", "wcag_en_json_for_daily_knowledge", "songkick_festivals_for_theclique", "upgrade_downgrade_history_for_yh_finance_complete"], "api_descs": {"Finish": "No description available.", "generate_time_reports_for_a_specific_team_for_odesk_apis": "Time reports can be generated for a specific team, with or without detailed monetary information based on the relationship of the authorized user at the time the call is made and what information is included in the call.", "get_a_user_s_positions_for_tradier": "", "get_misinformation_score_account_twitter_account_get_for_mescalc": "Retrieve account misinformation score by Twitter ID", "getsupportedfileformats_for_groupdocs_merger_cloud": " ", "getthelistofcountriesregistered_for_sandbox_mktplace_eu_04_orders": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html", "lookup_for_ip_directory": "This is the only endpoint available to this API. It accepts an IP Address and returns all available associated data.", "premium_history_for_betigolo_tips": "Historical result of Premium Tips in past 30 days", "search_for_ios_store": "The endpoint is used to search iOS application", "songkick_festivals_for_theclique": "festivals info", "upgrade_downgrade_history_for_yh_finance_complete": "This endpoint returns a Upgrade Downgrade History.", "wcag_en_json_for_daily_knowledge": "Success criteria to fulfill WCAG."}, "aseqs": [{"api_name": "premium_history_for_betigolo_tips", "api_action": "\nAction: premium_history_for_betigolo_tips\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "premium_history_for_betigolo_tips"}}, {"state": "generated_by_agent", "aseq": {"api_name": "premium_history_for_betigolo_tips"}}]}
{"URL": "60532", "query": "I need to make some informed sports bets and I'm looking for the latest odds. Could you provide me with the upcoming matches and their corresponding odds? Please include the team names, match dates, and the sports categories for each match.", "api_names": ["odds_for_betcity", "matches_for_betcity", "Finish", "hot_products_for_aliexpress_true_api", "read_user_for_ironwifi", "get_country_details_for_gis_engine", "competition_performance_indices_for_metrx_factory", "fetch_newsletter_lists_for_zigatext_global_bulk_sms_otp", "getfileslist_for_aspose_email_cloud", "v1_sticker_sticker_id_for_tokapi_mobile_version", "a_webtoon_by_its_slug_for_manga_scrapper", "articles_for_news_v3", "getorderbyid_for_erictestpet", "rates_for_freecurrencyapi_free_currency_data", "comments_by_username_for_reddit", "yearly_balance_sheets_for_freedom_finance", "sumsub_access_token_for_finhost", "list_projects_for_walletapi_cloud"], "api_descs": {"Finish": "No description available.", "a_webtoon_by_its_slug_for_manga_scrapper": "Make request to fetch a specific webtoon information from a specific provider.", "articles_for_news_v3": "Fetches articles from one specific newspaper", "comments_by_username_for_reddit": "Comments By Username", "competition_performance_indices_for_metrx_factory": "Returns a snapshot of global competition performance indices sorted by rank in ascending order.\nSeparate index lists are maintained for club/national team and domestic/international competitions.\n\nIf no parameters are provided then the latest club team competitions ranking is returned in absolute index format. For details about index calculation and factors refer to the documentation.\n\nFor free subscriptions the following limits apply:\n\n`Max. requests per hour: 20`\n`Min. time between requests: 1 minute`\n`Max. performances returned: 5`", "fetch_newsletter_lists_for_zigatext_global_bulk_sms_otp": "Fetch Newsletter Lists", "get_country_details_for_gis_engine": "Get the country details by providing the country code (2 letter code)", "getfileslist_for_aspose_email_cloud": " ", "getorderbyid_for_erictestpet": "For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions", "hot_products_for_aliexpress_true_api": "Get hot products by search value, you can set maximum search price too. You will get up to 50 results.", "list_projects_for_walletapi_cloud": "Obtain a list of your projects.", "matches_for_betcity": "Latest matches by Betcity", "odds_for_betcity": "Latest Odds by Betcity", "rates_for_freecurrencyapi_free_currency_data": "Getting the latest foreign exchange rates", "read_user_for_ironwifi": "READ USER", "sumsub_access_token_for_finhost": "Requests customer token to initialize Sumsub SDK", "v1_sticker_sticker_id_for_tokapi_mobile_version": "Effect information by ID (look at stickers field in video response)", "yearly_balance_sheets_for_freedom_finance": "Annual balance sheet statements"}, "aseqs": [{"api_name": "matches_for_betcity", "api_action": "\nAction: matches_for_betcity\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_betcity", "api_action": "\nAction: odds_for_betcity\nAction Input: {}", "api_reaction": null}, {"api_name": "odds_for_betcity", "api_action": "\nAction: odds_for_betcity\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_betcity"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_betcity"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betcity"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_betcity"}}]}
{"URL": "79853", "query": "I'm working on a research paper about the significance of faith in different religious texts. Can you help me by fetching a treasure from the Uncovered Treasure API for the verse 'John 3:16'? Additionally, I need to search for the term 'salvation' in the API's database.", "api_names": ["search_searchterm_for_uncovered_treasure", "verse_verse_for_uncovered_treasure", "Finish", "domain_reputation_for_domain_reputation", "getrandomsolution_for_pocket_cube_solver", "athlete_trophy_stats_for_allscores", "categories_list_for_divanscore", "user_followings_for_tiktok_scraper_v2", "titles_seasons_seriesid_for_moviesdatabase", "list_of_countries_with_income_level_for_world_bank_gdp", "api_tripdetails_mfref_for_asr_hub", "addresses_for_uk_postcode_api", "get_cruises_details_for_tripadvisor", "get_foreign_exchange_rates_for_other_major_currencies_for_exchange_rate_provider", "sale_type_list_deprecated_for_the_fork_the_spoon", "get_hashtags_for_top_instagram_hashtag", "linecount_linecount_for_poetry_db", "product_offers_for_real_time_product_search"], "api_descs": {"Finish": "No description available.", "addresses_for_uk_postcode_api": "Gets addresses for given search term.", "api_tripdetails_mfref_for_asr_hub": "Retrives the TripDetails based on the  MFRef Number\r\n- MFRef", "athlete_trophy_stats_for_allscores": "Get athlete trophy stats.", "categories_list_for_divanscore": "List all categories or nations for tournaments and leagues", "domain_reputation_for_domain_reputation": "Evaluate reputation of a domain or IP (v1)", "get_cruises_details_for_tripadvisor": "-", "get_foreign_exchange_rates_for_other_major_currencies_for_exchange_rate_provider": "Get Foreign Exchange Rates for other major currencies. At the moment only GBP and USD are available. More will be added with future updates.\n\nSo as `currencyId` please **use only** `/gbp` or `/usd`.", "get_hashtags_for_top_instagram_hashtag": "Get 100 Most Popular Instagram Hashtags", "getrandomsolution_for_pocket_cube_solver": "Returns json data consisting of a random optimal solution of a given cube position.", "linecount_linecount_for_poetry_db": "All poems on Poetry DB with a specific number of lines", "list_of_countries_with_income_level_for_world_bank_gdp": "Sourced from Developer Information issued by The World Bank Group at https://datahelpdesk.worldbank.org/knowledgebase/topics/125589-developer-information\n\nExternal Doc URL available at http://api.worldbank.org/V2/incomeLevel/LIC/country\n\nOutput format available at http://api.worldbank.org/v2/country/all/indicator/SP.POP.TOTL?format=json", "product_offers_for_real_time_product_search": "Get all offers available for a product.", "sale_type_list_deprecated_for_the_fork_the_spoon": "List all available sale type of specific restaurant", "search_searchterm_for_uncovered_treasure": "Search for treasure by term, e.g. \"wisdom\"", "titles_seasons_seriesid_for_moviesdatabase": " ", "user_followings_for_tiktok_scraper_v2": "Get user followings.", "verse_verse_for_uncovered_treasure": "Get treasure by verse"}, "aseqs": [{"api_name": "verse_verse_for_uncovered_treasure", "api_action": "\nAction: verse_verse_for_uncovered_treasure\nAction Input: {\n  \"verse\": \"John 3:16\"\n}", "api_reaction": null}, {"api_name": "search_searchterm_for_uncovered_treasure", "api_action": "\nAction: search_searchterm_for_uncovered_treasure\nAction Input: {\n  \"searchterm\": \"salvation\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "verse_verse_for_uncovered_treasure"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_searchterm_for_uncovered_treasure", "api_action": "\nAction: search_searchterm_for_uncovered_treasure\nAction Input: {\n  \"term\": \"salvation\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "verse_verse_for_uncovered_treasure", "api_action": "\nAction: verse_verse_for_uncovered_treasure\nAction Input: {\n  \"verse\": \"John 3:16\"\n}", "api_reaction": null}}]}
{"URL": "33993", "query": "I am a content creator and I want to analyze the performance of my TikTok videos. Can you provide me with the details of my videos, including the description, author, and statistics such as the number of comments, hearts, plays, and reposts? Additionally, it would be helpful to know the video duration and bitrate.", "api_names": ["user_s_videos_for_tiktok_api", "Finish", "getdatetimebyaddress_for_date_and_time", "news_list_flash_for_webull", "macros_amounts_for_fitness_calculator", "gettestwebhookpayloadbounce_for_mailslurp_email_testing", "search_countries_by_name_for_geography", "storageexists_for_aspose_diagram_cloud", "latest_coupons_for_27coupons", "group_profile_for_steam_community", "pnr_status_for_real_time_pnr_status_api_for_indian_railways", "heroes_data_for_dota2_heroes"], "api_descs": {"Finish": "No description available.", "getdatetimebyaddress_for_date_and_time": "This endpoint internally calculates the co-ordinates and timezone to calculate the current date and time", "gettestwebhookpayloadbounce_for_mailslurp_email_testing": "Get webhook test payload for bounce", "group_profile_for_steam_community": "An overview of a steamcommunity group.", "heroes_data_for_dota2_heroes": "You can get heroes all heroes data name, image, videos, roles, abilities and talents with 20 languages.", "latest_coupons_for_27coupons": "", "macros_amounts_for_fitness_calculator": "Find the amount of macro nutrients in four different categories which are balanced, low-fat, low-carbs and high-protein for a specific calorie burned. There are 6 inputs which are age, gender, height, weight, activity level and goal. \n\nFor activity level :\n    \n-     \"1\" : \"BMR\",\n-     \"2\" : \"Sedentary: little or no exercise\",\n-     \"3\" : \"Exercise 1-3 times/week\",\n-     \"4\" : \"Exercise 4-5 times/week\",\n-     \"5\" : \"Daily exercise or intense exercise 3-4 times/week\",\n-     \"6\" : \"Intense exercise 6-7 times/week\",\n-     \"7\" : \"Very intense exercise daily, or physical job\" \n\nFor goals : \n\n-      \"maintain\" : \"maintain weight\",\n-     \"mildlose\" : \"Mild weight loss\",\n-     \"weightlose\" : \"Weight loss\",\n-     \"extremelose\" : \"Extreme weight loss\",\n-     \"mildgain\" : \"Mild weight gain\",\n-     \"weightgain\" : \"Weight gain\",\n-     \"extremegain\" : \"Extreme weight gain\"", "news_list_flash_for_webull": "List flash 27/4 news", "pnr_status_for_real_time_pnr_status_api_for_indian_railways": "This is an unofficial PNR Status API that provides real-time information on the status of Indian Railways train reservations. This API is designed for educational purposes only and is not affiliated with Indian Railways in any way.", "search_countries_by_name_for_geography": "Search Countries by Name. Both official and common names are searched", "storageexists_for_aspose_diagram_cloud": " ", "user_s_videos_for_tiktok_api": "Return User Videos"}, "aseqs": [{"api_name": "user_s_videos_for_tiktok_api", "api_action": "\nAction: user_s_videos_for_tiktok_api\nAction Input: {\n  \"username\": \"content_creator1\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_s_videos_for_tiktok_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_s_videos_for_tiktok_api"}}]}
{"URL": "47158", "query": "Can you fetch the latest news articles about Bitcoin? I would like to extract the top 5 keywords from each article. Additionally, provide the sentiment analysis for each article. Also, show me the latest crypto news tweets from the past 10 hours.", "api_names": ["latest_tweets_for_crypto_news_v3", "latest_articles_for_crypto_news_v3", "Finish", "us_de_for_us_gas_prices", "getgames_for_diablo4_smartable", "distance_matrix_for_mymappi", "getcountriesv2_for_getcountries", "video_comments_for_youtube_search", "songkick_concert_for_theclique", "webtoons_list_all_for_manga_scrapper", "difference_calendar_for_daysapi", "get_locales_list_for_mocking_rock_"], "api_descs": {"Finish": "No description available.", "difference_calendar_for_daysapi": "This endpoint takes in two dates and calculates the difference for\nyou with the queries you enter.", "distance_matrix_for_mymappi": "This services takes as input a list of coordinates and computes in a matrix format the fastest travel time among all possible pair combinations among all the provided coordinates. If sources/destinations params are provided, those indicate a semi-colon separated list of indices that specify which of the provided coordinates should be included as sources or destinations.", "get_locales_list_for_mocking_rock_": "You can use this API to get the list of available locales \nWhich can be used to generate profile APIs response.", "getcountriesv2_for_getcountries": "get all coutries of the world", "getgames_for_diablo4_smartable": "Get Diablo 4 gameplays.", "latest_articles_for_crypto_news_v3": "This endpoint provides the latest crypto news articles scraped from the web  incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nFor historical cryptonews data check out our open source dataset on [Kaggle](https://www.kaggle.com/oliviervha/crypto-news)\n\nParameters:\n- **[REQUIRED] subject** e.g. bitcoin, altcoin, ethereum, nft, blockchain, defi\n- **[OPTIONAL] last_n_hours**: Only news articles from the last *n* hours are provided (default: 24).\n- **[OPTIONAL] max_articles**: Maximum number of articles in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract from article (default:10)\n\nCurrently news is scraped from:\n- [CryptoNews](cryptonews.com)\n- [CoinTelegraph](https://cointelegraph.com/)\n- [CryptoPotato](https://cryptopotato.com/)\n\nIf you have suggestions for more sources to add, please get in contact.\n\nMore information:\n- Get the [historical Crypto News dataset](https://www.kaggle.com/oliviervha/crypto-news) from Kaggle!\n- Click [here](https://app.swaggerhub.com/apis-docs/CryptoAdvisor/CryptoNews/1.0.0#/developers/cryptonews) for the API Swagger documentation.\n- Keep up-to-date with our [CryptoNews+ Twitter](https://twitter.com/cryptonews_plus) account!", "latest_tweets_for_crypto_news_v3": "This endpoint provides the latest crypto news tweets incl. sentiment analysis ([textblob](https://textblob.readthedocs.io/en/dev/quickstart.html)) and keyword extraction ([Yake](http://yake.inesctec.pt/)). \n\nParameters:\n- **[OPTIONAL] last_n_hours**: Only tweets from the last *n* hours are provided (default: 12).\n- **[OPTIONAL] max_articles**: Maximum number of tweets in response (default:100, max:100)\n- **[OPTIONAL] top_n_keywords**: Number of keywords to extract form tweet (default:10)\n\nCurrently, we make use of the following sources:\n- [@BTCTN](https://twitter.com/BTCTN) \n- [@CryptoBoomNews](https://twitter.com/CryptoBoomNews)\n- [@cryptocom](https://twitter.com/cryptocom)\n- [@Crypto_Potato](https://twitter.com/crypto_potato)\n\nIf you have any suggestions for twitter accounts to add, please get in touch.", "songkick_concert_for_theclique": "Concert info", "us_de_for_us_gas_prices": "Returns current gas price data for Delaware. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.", "video_comments_for_youtube_search": "This endpoint returns a list comments under a given Youtube video", "webtoons_list_all_for_manga_scrapper": "Make request to fetch webtoon's series collection from a specific provider."}, "aseqs": [{"api_name": "latest_articles_for_crypto_news_v3", "api_action": "\nAction: latest_articles_for_crypto_news_v3\nAction Input: {\n  \"subject\": \"Bitcoin\",\n  \"top_n_keywords\": 5\n}", "api_reaction": null}, {"api_name": "latest_tweets_for_crypto_news_v3", "api_action": "\nAction: latest_tweets_for_crypto_news_v3\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "latest_articles_for_crypto_news_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_tweets_for_crypto_news_v3"}}, {"state": "generated_by_agent", "aseq": {"api_name": "latest_articles_for_crypto_news_v3", "api_action": "\nAction: latest_articles_for_crypto_news_v3\nAction Input: {\n  \"subject\": \"Bitcoin\",\n  \"top_n_keywords\": 5,\n  \"last_n_hours\": 10,\n  \"max_articles\": 10\n}", "api_reaction": null}}]}
{"URL": "69902", "query": "I'm planning a family trip to Mexico and we need to find zip codes for popular tourist destinations. Can you provide us with the zip codes for places like 'Cancun', 'Puerto Vallarta', and 'Tulum'? We need the zip codes, city names, and state names for each destination.", "api_names": ["search_zip_codes_in_mexico_for_be_zips", "get_zip_code_in_mexico_for_be_zips", "Finish", "autocomplete_for_webit_language", "single_product_for_rainforest", "emotional_intelligence_personality_test_questionnaire_for_personality_quest", "get_channels_for_60k_radio_stations", "v1_rates_averages_for_hryvna_today", "config_for_score", "qualifyingresults_for_formula_1_fixed", "stores_list_for_kohls", "read_appointments_for_supersaas_online_bookings_and_appointment_scheduling"], "api_descs": {"Finish": "No description available.", "autocomplete_for_webit_language": "This endpoint provides autocomplete (word completion) for 80+ languages.", "config_for_score": "config", "emotional_intelligence_personality_test_questionnaire_for_personality_quest": "This route will give you all questions for Emotional Intelligence  Personality Test.", "get_channels_for_60k_radio_stations": "Get channel list", "get_zip_code_in_mexico_for_be_zips": "Get zip code data given a specific zip code", "qualifyingresults_for_formula_1_fixed": " ", "read_appointments_for_supersaas_online_bookings_and_appointment_scheduling": "", "search_zip_codes_in_mexico_for_be_zips": "Perform a text search in zip codes in Mexico", "single_product_for_rainforest": "The Product Parameters are applicable when making a request with type=product to retrieve details of a single product on Amazon - the product is specified using either the asin and amazon_domain parameters or the url parameter (where the url parameter contains a link to an Amazon product page). The parameters should be appended as querystring parameters to the Product Data API GET HTTP request", "stores_list_for_kohls": "List stores near a provided GEO location", "v1_rates_averages_for_hryvna_today": "History of average rates"}, "aseqs": [{"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Cancun\"\n}", "api_reaction": null}, {"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Puerto Vallarta\"\n}", "api_reaction": null}, {"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Tulum\"\n}", "api_reaction": null}, {"api_name": "search_zip_codes_in_mexico_for_be_zips", "api_action": "\nAction: search_zip_codes_in_mexico_for_be_zips\nAction Input: {\n  \"q\": \"Cancun\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_in_mexico_for_be_zips"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_zip_codes_in_mexico_for_be_zips", "api_action": "\nAction: search_zip_codes_in_mexico_for_be_zips\nAction Input: {\n  \"query\": \"Cancun,Tulum,Puerto Vallarta\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Tulum\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_zip_code_in_mexico_for_be_zips\",\n\t\"api_action\": \"\\nAction: get_zip_code_in_mexico_for_be_zips\\nAction Input: {\\n  \\\"zipcode\\\": \\\"Cancun\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_zip_code_in_mexico_for_be_zips", "api_action": "\nAction: get_zip_code_in_mexico_for_be_zips\nAction Input: {\n  \"zipcode\": \"Puerto Vallarta\"\n}", "api_reaction": null}}]}
{"URL": "51588", "query": "I am planning a family vacation and I want to explore job opportunities in the destination city. Can you help me search for profiles of professionals working in that city? I would also like to extract their job titles, work experience, and contact information.", "api_names": ["search_for_linkedin_profiles", "Finish", "cities_states_for_transportistas_de_argentina", "get_all_latest_news_for_sri_lanka_news_api", "all_blogs_for_blogsapi", "rapidapigethourlyforecastbylocationname_for_forecast", "earthquakes_by_date_for_everyearthquake", "game_details_for_allscores"], "api_descs": {"Finish": "No description available.", "all_blogs_for_blogsapi": "All blogs paginated in a set of 20.", "cities_states_for_transportistas_de_argentina": "List of states for Argentina with iso code.", "earthquakes_by_date_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world, within a specified date range.", "game_details_for_allscores": "Get game details.", "get_all_latest_news_for_sri_lanka_news_api": "Get latest news from all the news sources.This route return all the latest news from each news source at once", "rapidapigethourlyforecastbylocationname_for_forecast": " ", "search_for_linkedin_profiles": "Search company or profile"}, "aseqs": [{"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"Destination City\",\n  \"type\": \"person\"\n}", "api_reaction": null}, {"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"Destination City\",\n  \"type\": \"person\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to search for LinkedIn profiles of professionals working in the destination city provided by the user. However, the user query does not provide the name of the destination city. Let me fetch the list of cities in Argentina using the 'cities_states_for_transportistas_de_argentina' API.\n\t\"api_name\": \"cities_states_for_transportistas_de_argentina\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles"}}]}
{"URL": "84029", "query": "As an avid reader, I'm always looking for new books to explore. Can you search for books using the term 'bestsellers' and provide me with their IDs? Once you have the IDs, I would like to extract all the information about each book, including the title, authors, language, download links, and download count.", "api_names": ["Finish", "search_books_for_project_gutenberg_api", "extract_info_for_project_gutenberg_api", "years_for_car_api", "supported_countries_for_bing_web_search", "get_price_info_for_word_count_for_textking_translation", "latest_movie_for_disney_worlds", "search_mountain_peak_by_name_for_peak_conditions", "business_name_generator_for_business_name_generator", "movies_get_upcoming_for_flixster", "qwe_for_test_apizzz", "getstatictranslations_for_sport_odds", "search_screen_name_for_twitter_pack_v2", "vin_decoder_lite_for_vin_decoder", "get_channel_description_for_gwyo_twitch", "recipe_by_name_id_for_bbc_good_food_api", "similar_for_comparable_companies", "verify_transactions_logs_for_zanjir_cryptocurrency_payment_gateway"], "api_descs": {"Finish": "No description available.", "business_name_generator_for_business_name_generator": "Business Name Generator", "extract_info_for_project_gutenberg_api": "Get all the informations about a book using it's ID\nInformations : \n- title.\n- authors.\n- language.\n- download links.\n- download count.\nand much more ...", "get_channel_description_for_gwyo_twitch": "Get Channel Description (using username or id)", "get_price_info_for_word_count_for_textking_translation": "Returns price information for a specific number of words for all available quality levels.", "getstatictranslations_for_sport_odds": "GetStaticTranslations data api", "latest_movie_for_disney_worlds": "Get the latest movies released from disney and other platforms", "movies_get_upcoming_for_flixster": "Get upcoming movies", "qwe_for_test_apizzz": "qwe", "recipe_by_name_id_for_bbc_good_food_api": "Get recipe information by recipe name id", "search_books_for_project_gutenberg_api": "Search for books using full name or just a snippit and get the book's ID.", "search_mountain_peak_by_name_for_peak_conditions": "search for mountain peaks by name. returns all mountains with names containing the search query, along with their associated peak_id.", "search_screen_name_for_twitter_pack_v2": " ", "similar_for_comparable_companies": "The key feature of the comparable-companies API. This endpoint will return a list of companies that are similar to the one that has been provided. The endpoint will also return information about the queried domain through the variable \"frontend_company_info\".\n\nOccasionally, the algorithm finds new information that will take longer to crawl and process. In these cases, it will return results with the \"further_crawling\" variable set to true, indicating that we will have better results available in the next 10-15 sec. There is a possibility to establish a WebSocket connection through the \"connectionID\" parameter to be notified of these new results. This is not covered in this documentation, but our engineers will happily assist you with it.\n\nQuerying the same domain multiple times will only cost you a single search credit.", "supported_countries_for_bing_web_search": "You can search against these countries.", "verify_transactions_logs_for_zanjir_cryptocurrency_payment_gateway": "You can confirm successful transactions using this API.", "vin_decoder_lite_for_vin_decoder": "Get 7 items", "years_for_car_api": "For complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"make\", \"op\": \"in\", \"val\": [\"Scion\", \"Tesla\"]}]`\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed search fields are: `year`, `make`, `model`, `trim`, `make_id`, and `make_model_id`."}, "aseqs": [{"api_name": "search_books_for_project_gutenberg_api", "api_action": "\nAction: search_books_for_project_gutenberg_api\nAction Input: {\n  \"term\": \"bestsellers\"\n}", "api_reaction": null}, {"api_name": "search_books_for_project_gutenberg_api", "api_action": "\nAction: search_books_for_project_gutenberg_api\nAction Input: {\n  \"term\": \"classics\"\n}", "api_reaction": null}, {"api_name": "extract_info_for_project_gutenberg_api", "api_action": "\nAction: extract_info_for_project_gutenberg_api\nAction Input: {\n  \"is_id\": \"2941\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to search for books using the term 'bestsellers' and get their IDs first, then use these IDs to fetch all the information about each book.\n\t\"api_name\": \"search_books_for_project_gutenberg_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_books_for_project_gutenberg_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "extract_info_for_project_gutenberg_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_books_for_project_gutenberg_api"}}]}
{"URL": "19145", "query": "I am a motorsport enthusiast and I want to know the constructor standings for the 2020 season. Can you fetch the positions, points, team names, and season? It would be great if you could sort the standings based on the positions.", "api_names": ["seasons_for_f1_live_motorsport_data", "constructor_standings_for_f1_live_motorsport_data", "Finish", "getpatientstudy_for_the_cancer_imaging_archive", "dinner_ingredient_for_recipe_finder", "api_all_for_movie_showtimes", "qr_endpoint_for_qr_code_api_updated", "extractimagefeatures_for_aspose_imaging_cloud", "measure_distance_for_tunisia_api", "video_recommendations_w_pagination_for_fastytapi", "get_all_news_for_news_in_bay", "get_all_latest_nba_articles_for_nba_latest_news", "view_layer_for_geolocation_simulation_for_mobile_apps", "ticker_changes_for_global_ethereum_price_index_gex", "group_management_api_access_for_device_s_group_list_for_catchloc", "get_all_characters_for_riordanverse_api", "top_artists_for_billboard_api", "get_php_for_terminology_extraction"], "api_descs": {"Finish": "No description available.", "api_all_for_movie_showtimes": "Get all the sessions for all the available movies", "constructor_standings_for_f1_live_motorsport_data": "Lists constructor standings for given season.", "dinner_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random dinner  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "extractimagefeatures_for_aspose_imaging_cloud": " ", "get_all_characters_for_riordanverse_api": "Get all characters\n\nOptions:\n\n- Limit → Limit amount of responses received\n- Step → Skip amount of characters\n- Search → Return characters with provided substring", "get_all_latest_nba_articles_for_nba_latest_news": "GET /articles\nReturns a list of all the latest nba articles.\n\nOptional params:\n\nsource returns articles based on chosen source\n\noptions: nba-canada, nba, bleacher-report, yahoo, espn, slam\n\nExample /articles?source=bleacher-report\n\nteam returns articles based on chosen team\n\nExample /articles?team=lakers\n\nlimit returns the maximum number of articles desired\n\nExample /articles?limit=5\n\nplayer returns articles based on chosen player\n\nUse dash to seperate names\n\nSearching by players full name seperated by dash produces best results\n\nExample /articles?player=kevin-durant&limit=10", "get_all_news_for_news_in_bay": "Get all news titled with keyword (sources via San Francisco Chronicle / SFGATE / abc7News)", "get_php_for_terminology_extraction": "", "getpatientstudy_for_the_cancer_imaging_archive": "Returns a set of patient/study objects filtered by query keys", "group_management_api_access_for_device_s_group_list_for_catchloc": "API access for location object's group list.\n\nrequired parameter : api (api.common.group.get.object.group.list)", "measure_distance_for_tunisia_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Sfax to Tunis**", "qr_endpoint_for_qr_code_api_updated": "qr endpoint to  surf to any website", "seasons_for_f1_live_motorsport_data": "Lists available F1 seasons to query - starting point for the application.", "ticker_changes_for_global_ethereum_price_index_gex": "Returns ticker values and price changes for specified market and symbol.", "top_artists_for_billboard_api": "Provide the YEAR-END Top Artists chart information\n\nIf `year` is not supplied, will default to last year.", "video_recommendations_w_pagination_for_fastytapi": "Return video recommendations given a videoId.", "view_layer_for_geolocation_simulation_for_mobile_apps": "Enter layerID in route"}, "aseqs": [{"api_name": "seasons_for_f1_live_motorsport_data", "api_action": "\nAction: seasons_for_f1_live_motorsport_data\nAction Input: {}", "api_reaction": null}, {"api_name": "constructor_standings_for_f1_live_motorsport_data", "api_action": "\nAction: constructor_standings_for_f1_live_motorsport_data\nAction Input: {\n\"season_id\": 2020\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "constructor_standings_for_f1_live_motorsport_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "constructor_standings_for_f1_live_motorsport_data", "api_action": "\nAction: constructor_standings_for_f1_live_motorsport_data\nAction Input: {\n\t\"season\": \"2020\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "constructor_standings_for_f1_live_motorsport_data", "api_action": "\nAction: constructor_standings_for_f1_live_motorsport_data\nAction Input: {\n\"season_id\": 2020,\n\"sort_order\": \"position\"\n}", "api_reaction": null}}]}
{"URL": "68058", "query": "Search for tweets related to cryptocurrency using advanced search queries. Retrieve the tweet results along with the media attached to them. Also, provide me with the user IDs and screen names of the users who posted these tweets.", "api_names": ["user_media_for_twitter_data", "search_for_twitter_data", "users_by_rest_ids_for_twitter_data", "Finish", "profile_for_rocket_league", "market_most_watched_for_mboum_finance", "search_for_any_category_or_star_for_porn_gallery", "tweets_by_hashtag_for_twitter", "search_properties_for_sale_for_realtor", "generate_qr_code_for_qr_code_generator_v14", "get_media_id_from_data_for_instagram_v7", "location_ip_for_ip_geo", "get_random_champion_for_league_of_legends_galore", "by_postal_code_for_ambee_air_quality", "top_artists_female_for_billboard_api", "get_weather_tile_for_weather_forecast_map_tiles", "tags_for_instagram_statistics_api", "fixtures_by_team_for_rugby_live_data", "tournamentsbycalender_for_sportifyapi", "actors_list_born_today_for_imdb"], "api_descs": {"Finish": "No description available.", "actors_list_born_today_for_imdb": "List all actors and actresses by day and month", "by_postal_code_for_ambee_air_quality": "Check air quality for your postal code", "fixtures_by_team_for_rugby_live_data": "Lists only upcoming/in play fixtures for a given team. \n\n**Note** it will not list any results, so when a match reaches result status it drops off. Use Fixtures and Results By Team OR Fixtures  And Results by Team by Season endpoint for this functionality.", "generate_qr_code_for_qr_code_generator_v14": "Simply Provide Url or Text in url parameter.", "get_media_id_from_data_for_instagram_v7": "Get the id of a media from some data like a link.", "get_random_champion_for_league_of_legends_galore": "This will go through the list of champions and return a single RANDOM champion!", "get_weather_tile_for_weather_forecast_map_tiles": "Get a transparent weather tile according to the [Web Tile Standard(https://en.wikipedia.org/wiki/Tiled_web_map).", "location_ip_for_ip_geo": "Location IP", "market_most_watched_for_mboum_finance": "Trending stocks in today's market", "profile_for_rocket_league": "Check a player's profile:\n`rocket-league1.p.rapidapi.com/profile/:player`", "search_for_any_category_or_star_for_porn_gallery": "use category key word or pornstar name to browse pictures", "search_for_twitter_data": "search", "search_properties_for_sale_for_realtor": "Search properties for sale by Address, School, City, Zip or Neighborhood. Filter the results using different parameter filters", "tags_for_instagram_statistics_api": "Returns all tags with which accounts are marked.\nYou can filter the desired tags and nesting.", "top_artists_female_for_billboard_api": "Provide the YEAR-END Top Artists - Female chart information\n\nIf `year` is not supplied, will default to last year.", "tournamentsbycalender_for_sportifyapi": "Tournaments By Calender", "tweets_by_hashtag_for_twitter": "this returns tweets based on twitter hashtag.\nyou can use cursor input for pagination.", "user_media_for_twitter_data": "user-media", "users_by_rest_ids_for_twitter_data": "users-by-rest-ids"}, "aseqs": [{"api_name": "search_for_twitter_data", "api_action": "\nAction: search_for_twitter_data\nAction Input: {\n  \"q\": \"cryptocurrency\",\n  \"result_filter\": \"media\"\n}", "api_reaction": null}, {"api_name": "user_media_for_twitter_data", "api_action": "\nAction: user_media_for_twitter_data\nAction Input: {\n  \"is_id\": \"user_id\"\n}", "api_reaction": null}, {"api_name": "users_by_rest_ids_for_twitter_data", "api_action": "\nAction: users_by_rest_ids_for_twitter_data\nAction Input: {\n  \"ids\": \"user_id\"\n}", "api_reaction": null}, {"api_name": "search_for_twitter_data", "api_action": "\nAction: search_for_twitter_data\nAction Input: {\n  \"q\": \"cryptocurrency\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter"}}, {"state": "generated_by_agent", "aseq": {"api_name": "tweets_by_hashtag_for_twitter"}}]}
{"URL": "44284", "query": "Please provide me with the live scores of today's football matches. I'm particularly interested in the scores of the La Liga. Also, can you give me the scores and matches between Atletico Madrid and Real Madrid for the date 2022-12-04?", "api_names": ["get_football_live_scores_today_for_football_score_api", "get_scores_for_given_date_for_football_score_api", "Finish", "hashtag_for_tiktok_v2", "driver_s_quotes_for_f1_drivers_quotes", "playerseasonstatsbyname_for_nba_statistics_api", "post_groups_for_ocoya", "getteam_for_boldsign", "get_call_for_bank_account_verification", "products_search_for_wayfair", "minutely_for_ai_weather_by_meteosource", "reviews_list_for_hotels_com_provider"], "api_descs": {"Finish": "No description available.", "driver_s_quotes_for_f1_drivers_quotes": "Gets the quotes of a specific driver.", "get_call_for_bank_account_verification": "Used to fetch api result using the request id received in responses.", "get_football_live_scores_today_for_football_score_api": "Get Live scores for today's football matches", "get_scores_for_given_date_for_football_score_api": "If you want to know the list of football matches for a given date and what was their scores you can use this API.\nAll this api needs is the date input in the format %Y-%m-%d.\nEg:- 2022-12-01", "getteam_for_boldsign": " ", "hashtag_for_tiktok_v2": "Search TikToc feeds by hashtag", "minutely_for_ai_weather_by_meteosource": "**Minute-by-minute** precipitation forecast for the next 60 minutes. Updated in **real-time** based on our **AI nowcasting models**. **Define your location** using GPS coordinates or `place_id` from `Location endpoints`.", "playerseasonstatsbyname_for_nba_statistics_api": "_player name is specified in the url._", "post_groups_for_ocoya": "Returns information about all my created posts.", "products_search_for_wayfair": "Search for products by term or phrase", "reviews_list_for_hotels_com_provider": "Get hotel reviews list"}, "aseqs": [{"api_name": "get_football_live_scores_today_for_football_score_api", "api_action": "\nAction: get_football_live_scores_today_for_football_score_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_scores_for_given_date_for_football_score_api", "api_action": "\nAction: get_scores_for_given_date_for_football_score_api\nAction Input: {\n  \"date\": \"2022-12-04\"\n}", "api_reaction": null}, {"api_name": "get_scores_for_given_date_for_football_score_api", "api_action": "\nAction: get_scores_for_given_date_for_football_score_api\nAction Input: {\n  \"date\": \"2022-12-04\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_football_live_scores_today_for_football_score_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_scores_for_given_date_for_football_score_api", "api_action": "{\"date\": \"2022-12-04\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_scores_for_given_date_for_football_score_api", "api_action": "\nAction: get_scores_for_given_date_for_football_score_api\nAction Input: {\n  \"date\": \"2022-12-04\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_football_live_scores_today_for_football_score_api"}}]}
{"URL": "77733", "query": "I'm a tech-savvy individual and I'm interested in purchasing the latest smartphone on the market. Can you help me search for product offers for the latest smartphones? I would also like to read customer reviews to ensure the performance and features of the smartphones.", "api_names": ["Finish", "product_reviews_for_real_time_product_search", "search_for_real_time_product_search", "product_offers_for_real_time_product_search", "list_of_all_countries_for_climate_data", "video_streaming_data_for_youtube", "get_session_info_for_gigopost", "get_all_page_s_content_for_scrapemaster", "v1_quotes_for_quotes_by_api_ninjas", "alerts_and_jams_for_waze", "singavaram_bhaskar_for_zomatoapi_bhaskar", "get_the_forecast_for_cloud_cast", "earnings_trend_for_stock_analysis", "searchjobs_for_indeed_jobs_api", "places_in_radius_places_in_radius_get_for_places_in_radius", "bbc_arabic_for_arabic_news_api", "searchbusiness_for_google_reviews_scraper", "address_transaction_history_for__all_in_one_crypto_swiss_knife_", "getusersforslot_for_mybooky_demo", "competition_standings_for_transfermarkt_db"], "api_descs": {"Finish": "No description available.", "address_transaction_history_for__all_in_one_crypto_swiss_knife_": "Get transaction history of any address.\nSupported chains:     \"eth, bsc, matic, avax, okt, hmy, heco, klay, op, arb, ftm, xdai, cro, mobm, celo, aurora, fuse, evmos, cfx, kava\";", "alerts_and_jams_for_waze": "Get real-time alerts and jams from Waze in a geographic rectangular area defined by bottom-left and top-right latitude, longitude pairs.", "bbc_arabic_for_arabic_news_api": "مسار يقوم باسترجاع اخر الاخبار من موقع بي بي سي بالعربية", "competition_standings_for_transfermarkt_db": "Get competition standings", "earnings_trend_for_stock_analysis": "Get earnings trend.", "get_all_page_s_content_for_scrapemaster": "This endpoint will return all the page's content from the URL given by the user.", "get_session_info_for_gigopost": "Returns session information 1685369452715x643061726475037300", "get_the_forecast_for_cloud_cast": "Get the forecast for the current city", "getusersforslot_for_mybooky_demo": " ", "list_of_all_countries_for_climate_data": "List of all Countries", "places_in_radius_places_in_radius_get_for_places_in_radius": "This endpoint returns:\n-  all the facilities that meet specified category (grocery_store, gym, railway_station etc.)\n- are within specified radius from starting_point\n\nReturned data (please let us know, what additional data to provide to your plan):\n - unique place_id\n- location (lat,lng)\n- type\n- distance data (walking and driving, counting from origin)\n- business details : email (if provided), phone", "product_offers_for_real_time_product_search": "Get all offers available for a product.", "product_reviews_for_real_time_product_search": "Get all product reviews. Infinite pagination/scrolling is supported using the *limit* and *offset* parameters.", "search_for_real_time_product_search": "Search for product offers - both free-form queries and GTIN/EAN are supported. Each page contains up to 30 product offers. Infinite pagination/scrolling is supported using the *page* parameter.", "searchbusiness_for_google_reviews_scraper": "with this endpoint you can search the business you want to get their reviews and ratings", "searchjobs_for_indeed_jobs_api": "offset = 0 (starting of the page, it must be increased by 10 to achieve pagination)\nkeyword = python (it can be any search keyword for ex: job title or skill title)\nlocation = california (For now this API gets data for USA Indeed. You can enter a specific city or state.)\nThis will provide you with a list of 15 jobs in the page, by default a single page can have a max of 15 jobs posting only. In order to get all the data using pagination you need to keep increasing the count of offset by 10.\n\nYou will get the following fields using this API.\n\n'position'\n'company_name'\n'job_title'\n'job_location'\n'salary'\n'date'\n'job_url'\n'urgently_hiring'\n'multiple_hiring'\n'company_rating'\n'company_reviews'\n'company_review_link'\n'company_logo_url'\n'page_number'", "singavaram_bhaskar_for_zomatoapi_bhaskar": "https://zomato62.p.rapidapi.com/restaurant", "v1_quotes_for_quotes_by_api_ninjas": "Returns one (or more) random quotes.", "video_streaming_data_for_youtube": "Video Streaming Data"}, "aseqs": [{"api_name": "search_for_real_time_product_search", "api_action": "\nAction: search_for_real_time_product_search\nAction Input: {\n  \"q\": \"latest smartphones\",\n  \"sort_by\": \"TOP_RATED\",\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "product_reviews_for_real_time_product_search", "api_action": "\nAction: product_reviews_for_real_time_product_search\nAction Input: {\n  \"product_id\": \"14067715252788581663\",\n  \"limit\": \"5\"\n}", "api_reaction": null}, {"api_name": "product_offers_for_real_time_product_search", "api_action": "\nAction: product_offers_for_real_time_product_search\nAction Input: {\n  \"product_id\": \"14067715252788581663\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_real_time_product_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_reviews_for_real_time_product_search"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_real_time_product_search", "api_action": "\nAction: search_for_real_time_product_search\nAction Input: {\n  \"q\": \"latest smartphones\",\n  \"sort_by\": \"RELEVANCE\",\n  \"page\": 2\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "product_offers_for_real_time_product_search", "api_action": "\nAction: product_offers_for_real_time_product_search\nAction Input: {\n  \"product_id\": \"14067715252788581663\"\n}", "api_reaction": null}}]}
{"URL": "824", "query": "I'm preparing a presentation on effective communication skills and I need some tips. Can you provide me with a few random WikiHow steps for improving communication? It would also be helpful if you could share some random WikiHow images related to communication.", "api_names": ["steps_for_wikihow", "images_for_wikihow", "Finish", "streams_symbol_for_stocktwits", "download_youtube_mp3_for_youtube_mp3_downloader", "loginuser_for_privatepublicapi", "get_scheduled_games_for_viperscore", "hashtag_feed_by_name_for_tiktok_solutions", "info_for_unitconversion", "logoutuser_for_platformbil", "getzone_for_woosmap", "products_list_deprecated_for_forever21"], "api_descs": {"Finish": "No description available.", "download_youtube_mp3_for_youtube_mp3_downloader": "Update: 17 May 2023: API is fixed & it is now 100% working. Converts any YouTube video into Mp3 downloadable files. No Ads. No wild redirects.", "get_scheduled_games_for_viperscore": "With \"Get scheduled games\" you'll receive all games which a scheduled for a specific date.", "getzone_for_woosmap": "Used to retrieve a zone from his `zone_id`\n", "hashtag_feed_by_name_for_tiktok_solutions": "Get **Hashtag Feed **by **Name**", "images_for_wikihow": "Gets the src URL for random WikiHow images", "info_for_unitconversion": "List all supported units", "loginuser_for_privatepublicapi": "Logs user into the system", "logoutuser_for_platformbil": "", "products_list_deprecated_for_forever21": "List products by category", "steps_for_wikihow": "Gets a random selection of WikiHow steps.", "streams_symbol_for_stocktwits": "Returns the most recent 30 messages for the specified symbol."}, "aseqs": [{"api_name": "steps_for_wikihow", "api_action": "\nAction: steps_for_wikihow\nAction Input: {\n  \"count\": 3\n}", "api_reaction": null}, {"api_name": "images_for_wikihow", "api_action": "\nAction: images_for_wikihow\nAction Input: {\n  \"count\": 3\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "steps_for_wikihow"}}, {"state": "generated_by_agent", "aseq": {"api_name": "images_for_wikihow"}}, {"state": "generated_by_agent", "aseq": {"api_name": "steps_for_wikihow", "api_action": "\nAction: steps_for_wikihow\nAction Input: {\n  \"count\": 3\n}", "api_reaction": null}}]}
{"URL": "54133", "query": "I'm planning a trip to Paris with my family. Can you help me search for flights from New York to Paris with a layover in London? We prefer business class seats. Also, provide me with information about vacation rentals in Paris for the dates of our stay.", "api_names": ["search_flights_multicity_for_tripadvisor", "rental_search_for_tripadvisor", "Finish", "get_private_keys_for_iotvas", "soil_history_data_for_ambee_soil_data", "remove_item_for_catalogapi", "get_call_for_face_liveness_check", "search_by_mbs_or_oib_for_croatia_company_data", "search_for_american_company_business_data", "search_autocomplete_for_target_com_shopping_api", "get_media_for_getmedia", "get_author_information_by_id_for_hapi_books"], "api_descs": {"Finish": "No description available.", "get_author_information_by_id_for_hapi_books": "Get a large variety of information of an Author such as the name, a brief biography, the list of books, and more.", "get_call_for_face_liveness_check": "Used to fetch api result using the request id received in responses.", "get_media_for_getmedia": "Get Media", "get_private_keys_for_iotvas": " ", "remove_item_for_catalogapi": "Removes items from the cart.", "rental_search_for_tripadvisor": "-", "search_autocomplete_for_target_com_shopping_api": "Product autocompletion based on search keyword.", "search_by_mbs_or_oib_for_croatia_company_data": "Search the Croatian company register by either MBS or OIB company identifiers (osobni identifikacijski broj)", "search_flights_multicity_for_tripadvisor": "-", "search_for_american_company_business_data": "Search business contacts", "soil_history_data_for_ambee_soil_data": "Ambee  Soil History Data"}, "aseqs": [{"api_name": "search_flights_multicity_for_tripadvisor", "api_action": "\nAction: search_flights_multicity_for_tripadvisor\nAction Input: {\n  \"sortorder\": \"asc\",\n  \"classofservice\": \"business\",\n  \"legs\": \"[{\\\"sourceAirportCode\\\":\\\"JFK\\\",\\\"destinationAirportCode\\\":\\\"LHR\\\",\\\"date\\\":\\\"2023-10-01\\\"},{\\\"sourceAirportCode\\\":\\\"LHR\\\",\\\"destinationAirportCode\\\":\\\"CDG\\\",\\\"date\\\":\\\"2023-10-02\\\"}]\"\n}", "api_reaction": null}, {"api_name": "search_flights_multicity_for_tripadvisor", "api_action": "\nAction: search_flights_multicity_for_tripadvisor\nAction Input: {\n  \"sortorder\": \"asc\",\n  \"classofservice\": \"business\",\n  \"legs\": \"[{\\\"sourceAirportCode\\\":\\\"JFK\\\",\\\"destinationAirportCode\\\":\\\"LHR\\\",\\\"date\\\":\\\"2023-10-01\\\"},{\\\"sourceAirportCode\\\":\\\"LHR\\\",\\\"destinationAirportCode\\\":\\\"CDG\\\",\\\"date\\\":\\\"2023-10-02\\\"}]\"\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"arrival\": \"2023-10-01\",\n  \"sortorder\": \"asc\",\n  \"geoid\": \"187147\",\n  \"departure\": \"2023-10-02\"\n}", "api_reaction": null}, {"api_name": "rental_search_for_tripadvisor", "api_action": "\nAction: rental_search_for_tripadvisor\nAction Input: {\n  \"arrival\": \"2023-10-01\",\n  \"sortorder\": \"POPULARITY\",\n  \"geoid\": \"187147\",\n  \"departure\": \"2023-10-02\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to search for flights from New York to Paris with a layover in London and provide information about vacation rentals in Paris using the user's preferences. First, let me search for flights.\n\t\"api_name\": \"search_flights_multicity_for_tripadvisor\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_flights_multicity_for_tripadvisor"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rental_search_for_tripadvisor"}}, {"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get flight results for the user and search for vacation rentals in Paris. The first API call will use the previous search_flights_multicity_for_tripadvisor result and refine it with new arrival date of October 2nd, then provide vacations rentals by using data from rental_search_for_tripadvisor.\n\t\"api_name\": \"search_flights_multicity_for_tripadvisor\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_call_for_face_liveness_check"}}]}
{"URL": "57495", "query": "I'm feeling uninspired and need a quote to lift my spirits. Can you provide me with a quote from Maya Angelou or Albert Einstein? Additionally, give me a list of available categories for quotes.", "api_names": ["authors_for_words_of_wisdom_the_famous_quotes_api", "categories_for_words_of_wisdom_the_famous_quotes_api", "quotes_for_words_of_wisdom_the_famous_quotes_api", "Finish", "bodies_for_car_api", "qr_endpoint_for_qr_code_api_updated", "dolar_for_proclima", "group_get_for_zipwhip", "info_for_youtube_video_info", "random_song_for_k_pop", "api_documentation_for_pikwy", "video_without_watermark_mp4_mp3_cover_desc_region_wt_for_tiktok_downloader_download_tiktok_videos_without_watermark", "gets_products_for_amazon_india_scraper_v3", "akaryak_t_for_kolektifapi", "list_projects_for_walletapi_cloud", "reviews_v2_list_deprecated_for_hotels", "user_s_details_for_tiktok_api", "calculate_geogrid_coordinate_points_for_google_local_rank_tracker", "18_1_app_config_for_hog", "the_guardian_for_cryptocurrency_news"], "api_descs": {"18_1_app_config_for_hog": "取得系統參數", "Finish": "No description available.", "akaryak_t_for_kolektifapi": "«haberler.com» Güncel Akaryakıt Verileri", "api_documentation_for_pikwy": "Use our simple API to capture screenshots of websites.", "authors_for_words_of_wisdom_the_famous_quotes_api": "Returns a list of authors", "bodies_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"doors\", \"op\": \">=\", \"val\": 4}, {\"field\": \"type\", \"op\": \"in\", \"val\": [\"SUV\",\"Van\"]}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, type, doors, make_id, make_model_id, and make_model_trim_id.", "calculate_geogrid_coordinate_points_for_google_local_rank_tracker": "Get all grid coordinate points based on a center geocoordinate point and distance arguments.", "categories_for_words_of_wisdom_the_famous_quotes_api": "Returns a list of categories", "dolar_for_proclima": "dolar", "gets_products_for_amazon_india_scraper_v3": "Get The Product Details Using A Identifier(id)", "group_get_for_zipwhip": "Retreive details about an existing group. This call can be used to review the members of the group.", "info_for_youtube_video_info": "Get all the Information of an YouTube Video, including Audio and Video Streams", "list_projects_for_walletapi_cloud": "Obtain a list of your projects.", "qr_endpoint_for_qr_code_api_updated": "qr endpoint to  surf to any website", "quotes_for_words_of_wisdom_the_famous_quotes_api": "Get inspired by the words of history's greatest thinkers. Get your daily dose of motivation", "random_song_for_k_pop": "Get random K-POP song", "reviews_v2_list_deprecated_for_hotels": "Get all reviews of specific property", "the_guardian_for_cryptocurrency_news": "Get the top latest news from The Guardian.", "user_s_details_for_tiktok_api": "Return User Details", "video_without_watermark_mp4_mp3_cover_desc_region_wt_for_tiktok_downloader_download_tiktok_videos_without_watermark": "video without watermark [mp4,mp3,cover,description,region,verify]\nthe response may be slower than the other \" video without watermark\" endpoint cause it's more loaded but it is still so fast enough and it's more stable \nserved by proxy"}, "aseqs": [{"api_name": "authors_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: authors_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "categories_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: categories_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to first find a quote from Maya Angelou or Albert Einstein, so I will use the quotes_for_words_of_wisdom_the_famous_quotes_api with the author parameters set to 'Maya Angelou' and 'Albert Einstein'. After getting one of these mentions, I'll retrieve a list of categories for quotes using the categories_for_words_of_wisdom_the_famous_quotes_api.\n\t\"api_name\": \"quotes_for_words_of_wisdom_the_famous_quotes_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}\nAction Input JSON: []", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "quotes_for_words_of_wisdom_the_famous_quotes_api", "api_action": "\nAction: quotes_for_words_of_wisdom_the_famous_quotes_api\nAction Input: {}", "api_reaction": null}}]}
{"URL": "72081", "query": "I'm planning to surprise my family with a new pet. Can you provide me with the details of a pet with ID 12345, including its name, category, photoUrls, status, and tags? Additionally, I would like to logout from the user session.", "api_names": ["logoutuser_for_freeplanwithhardlimit", "getpetbyid_for_freeplanwithhardlimit", "Finish", "translation_for_ai_writer", "getorderbyid_for_apfd", "get_list_of_currency_exchanges_for_currencygenie", "movie_comments_jsonp_for_yts_am_torrent", "get_one_anime_by_ranking_for_anime_db", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji", "get_printers_printerid_v1_for_shapeways", "languages_for_microsoft_translator_text", "user_details_xml_for_yts_am_torrent"], "api_descs": {"Finish": "No description available.", "get_list_of_currency_exchanges_for_currencygenie": "Performs GET request for getting list of currencies", "get_one_anime_by_ranking_for_anime_db": "Get anime by ranking", "get_printers_printerid_v1_for_shapeways": "", "getorderbyid_for_apfd": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "getpetbyid_for_freeplanwithhardlimit": "Returns a single pet", "languages_for_microsoft_translator_text": "Gets the set of languages currently supported by other operations of the Translator Text API.", "logoutuser_for_freeplanwithhardlimit": "", "movie_comments_jsonp_for_yts_am_torrent": "Returns all the comments for the specified movie", "study_list_ap_exam_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "translation_for_ai_writer": "Translate content into any language just enter the language name.", "user_details_xml_for_yts_am_torrent": "Get the user details"}, "aseqs": [{"api_name": "getpetbyid_for_freeplanwithhardlimit", "api_action": "\nAction: getpetbyid_for_freeplanwithhardlimit\nAction Input: {\n  \"petid\": 12345\n}", "api_reaction": null}, {"api_name": "logoutuser_for_freeplanwithhardlimit", "api_action": "\nAction: logoutuser_for_freeplanwithhardlimit\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_freeplanwithhardlimit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "logoutuser_for_freeplanwithhardlimit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_freeplanwithhardlimit", "api_action": "\nAction: getpetbyid_for_freeplanwithhardlimit\nAction Input: {\n  \"petid\": 12345\n}", "api_reaction": null}}]}
{"URL": "77136", "query": "Anonymize the faces in the images for my company's annual report. Please use the 'hide-face' mode. Additionally, fetch the version of the image anonymization service.", "api_names": ["get_list_of_available_modes_for_image_anonymization", "get_version_for_image_anonymization", "Finish", "generate_litecoin_deposit_address_from_extended_public_key_for_litecoin_wallet", "objectexists_for_groupdocs_comparison_cloud", "on_twitter_for_generaltalker", "block_number_voice_service_for_2factor_authentication_india", "fetchquestionanswers_for_upcall", "youtube_channel_id_for_youtube_search", "season_gulag_leaderboard_wz2_for_cod_api_2_0", "root_for_groundhog_day_api", "pl_decode_for_vin_decoder_v4"], "api_descs": {"Finish": "No description available.", "block_number_voice_service_for_2factor_authentication_india": "This endpoint is used to add number to VOICE Blocklist", "fetchquestionanswers_for_upcall": "Get question's answers", "generate_litecoin_deposit_address_from_extended_public_key_for_litecoin_wallet": "Generate Litecoin deposit address from Extended public key. Deposit address is generated for the specific index - each extended public key can generate up to 2^31 addresses starting from index 0 until 2^31 - 1.", "get_list_of_available_modes_for_image_anonymization": "Service provides server modes that may be used to choose which kind of objects to hide. This endpoint returns list of modes that may be used as query parameters for requests to the `results` endpoint.\n\nThe following modes are supported:\n\n* `hide-clp` – to hide car license plates\n* `hide-face` – to hide faces", "get_version_for_image_anonymization": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "objectexists_for_groupdocs_comparison_cloud": " ", "on_twitter_for_generaltalker": "ツイッターボット専用の雑談APIです。reply_to_id（リプライ先のID）を渡すことで、過去の会話履歴をふまえた会話ができます。\n\n以下はレスポンスの例と、その意味です。\n\n```\n{\n\"response\":{\n    \"res\":\"おはよーございます\"         # 生成された返答\n    \"user_score\":-2.8724350929260254   # ユーザーの発話のスコア\n    \"lm\":0.7096909880638123            # 文章の妥当性スコア\n    \"mc\":-1.5187406539916992           # 返答としての妥当性スコア\n    \"score\":-0.3534274697303772        # 総合スコア\n    \"history_text\":\"<speaker2>Hello\"   # 発話の生成に使われた発話履歴\n    \"res_score_list\":[                 # 採用しなかった返答のリスト\n        0:[\n            0:\"おはよーございます\"       # 返答の内容\n            1:[                          # スコア（文章の妥当性,返答としての妥当性,総合スコア）\n                0:0.7096909880638123\n                1:-1.5187406539916992\n                2:-0.3534274697303772\n            ]\n        ]\n        ...     # 中略\n    ]\n    \"user_utt_id\":1355             # ユーザーの発話のid\n    \"bot_utt_id\":1356              # 生成した返答のid\n    }\n}\n```", "pl_decode_for_vin_decoder_v4": "PL Decode", "root_for_groundhog_day_api": "Returns a welcome message.", "season_gulag_leaderboard_wz2_for_cod_api_2_0": "Get season gulag information for up to 2000 players on the leaderboard.", "youtube_channel_id_for_youtube_search": "This endpoint get the channel ID of a Youtube Channel given the channel name"}, "aseqs": [{"api_name": "get_list_of_available_modes_for_image_anonymization", "api_action": "\nAction: get_list_of_available_modes_for_image_anonymization\nAction Input: {}", "api_reaction": null}, {"api_name": "get_version_for_image_anonymization", "api_action": "\nAction: get_version_for_image_anonymization\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_version_for_image_anonymization"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_available_modes_for_image_anonymization"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_available_modes_for_image_anonymization"}}]}
{"URL": "988", "query": "I want to gather information about a specific YouTube video. Provide me with details such as the video title, length, channel, and description for the video with the id 'dQw4w9WgXcQ'. Additionally, fetch the comments for this video, including the comment text, author name, and number of likes. Finally, retrieve the trending videos in the United States.", "api_names": ["trending_for_youtube_v3_alternative", "comments_for_youtube_v3_alternative", "video_details_for_youtube_v3_alternative", "Finish", "get_verse_by_bookname_for_bible_search", "earthquakes_for_everyearthquake", "search_by_coordinates_for_zillow_data_v2", "estrelabet_aviator_latest_for_estrelabet_aviator_api", "chevereto_for_chevereto", "rising_popular_posts_for_reddit", "playlist_videos_for_youtube", "reverse_for_dns_lookup", "random_profile_by_id_for_fake_data_generator", "get_transaction_as_is_from_backend_v2_for_chain49", "science_for_google_news", "user_info_by_id_for_tiktok_v4", "search_for_indeed", "results_for_timedb", "youtoosound_for_youtoosound", "getdisclosedtoday_for_jp_funda"], "api_descs": {"Finish": "No description available.", "chevereto_for_chevereto": "chevereto", "comments_for_youtube_v3_alternative": "Get Comments of the particular video", "earthquakes_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world. No parameters required.", "estrelabet_aviator_latest_for_estrelabet_aviator_api": "Will retrieve the latest results from Aviator at Estrelabet.\n\n- The first result is the most recent\n- The last result is the oldest", "get_transaction_as_is_from_backend_v2_for_chain49": "Returns transaction data in the exact format as returned by backend, including all coin specific fields", "get_verse_by_bookname_for_bible_search": "Returns a verse of the Bible.", "getdisclosedtoday_for_jp_funda": "### Return securities report data disclosed today\nNote: If the company doesn't have a consolidated subsidiary, all of consolidated management indicators become null.　But you can obtain data instead of consolidated management indicators from non consolidated management indicators", "playlist_videos_for_youtube": "Playlist Videos", "random_profile_by_id_for_fake_data_generator": "Retrieve fake profiles by id.", "results_for_timedb": "Returns latest results for a query associated to a given `webhookId`.", "reverse_for_dns_lookup": "Get name servers from an IP", "rising_popular_posts_for_reddit": "Rising Popular Posts", "science_for_google_news": "This endpoint is used to get science news from Google News.", "search_by_coordinates_for_zillow_data_v2": "Search by coordinates", "search_for_indeed": "", "trending_for_youtube_v3_alternative": "Get trending videos of the particular geo", "user_info_by_id_for_tiktok_v4": "Get User Information By \"user_id\",\nand the endpoint will return user data, including => id, nickname, bio, secUid, avatar, statistics", "video_details_for_youtube_v3_alternative": "Get details of the YouTube video.", "youtoosound_for_youtoosound": "YouTooSound Chiede di poter usare la tua mail e Nome"}, "aseqs": [{"api_name": "video_details_for_youtube_v3_alternative", "api_action": "\nAction: video_details_for_youtube_v3_alternative\nAction Input: {\n  \"is_id\": \"dQw4w9WgXcQ\"\n}", "api_reaction": null}, {"api_name": "comments_for_youtube_v3_alternative", "api_action": "\nAction: comments_for_youtube_v3_alternative\nAction Input: {\n  \"is_id\": \"dQw4w9WgXcQ\"\n}", "api_reaction": null}, {"api_name": "trending_for_youtube_v3_alternative", "api_action": "\nAction: trending_for_youtube_v3_alternative\nAction Input: {\n  \"geo\": \"US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "video_details_for_youtube_v3_alternative"}}, {"state": "generated_by_agent", "aseq": {"api_name": "reverse_for_dns_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_youtube_v3_alternative", "api_action": "\nAction: trending_for_youtube_v3_alternative\nAction Input: {\n  \"geo\": \"US\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "video_details_for_youtube_v3_alternative", "api_action": "\nAction: video_details_for_youtube_v3_alternative\nAction Input: {\n  \"is_id\": \"dQw4w9WgXcQ\"\n}", "api_reaction": null}}]}
{"URL": "7605", "query": "I want to enhance the security of my online platform by preventing users from registering with disposable email addresses. Is there an API that can help me achieve this? How can I integrate it into my platform?", "api_names": ["emailvalidation_for_check_disposable_email", "checkdisposableemail_for_check_disposable_email", "Finish", "list_available_currencies_for_exchangeratespro", "market_statistics_points_for_basketball_data", "findstate_for_india_pincode_api", "autocomplete_cities_for_autocomplete_usa", "get_detailed_data_for_all_u_s_counties_for_us_counties", "highlights_for_ig_private_api", "get_other_performance_for_binance_futures_leaderboard", "api_test_for_scott", "sport_highlighted_markets_straight_for_pinaculo", "2_thumbnail_ready_for_pagepeeker", "transform_units_using_the_get_method_for_unit_converter", "get_job_for_textking_translation"], "api_descs": {"2_thumbnail_ready_for_pagepeeker": "Poll this API until it returns that the image is available.  If available, you can download through endpoint 1.  Rendering an image depends largely on how fast a particular web page is loaded (and if it contains Flash).  Average waiting time is around 20 - 60 seconds", "Finish": "No description available.", "api_test_for_scott": "test", "autocomplete_cities_for_autocomplete_usa": "Autocomplete USA Cities", "checkdisposableemail_for_check_disposable_email": "REST API to lookup disposable email", "emailvalidation_for_check_disposable_email": "Clean your email list database with our free email checker and verifier", "findstate_for_india_pincode_api": "findstate", "get_detailed_data_for_all_u_s_counties_for_us_counties": "counties", "get_job_for_textking_translation": "Returns a single job with the given ID.", "get_other_performance_for_binance_futures_leaderboard": "Get the trader performance", "highlights_for_ig_private_api": "Highlights", "list_available_currencies_for_exchangeratespro": "Returns a list of all currencies that are available through the API.", "market_statistics_points_for_basketball_data": "Provides the market points statistics which are “First Quarter Result”, “Highest Scoring Quarter” and also “Ordinary/Half Time Winning Margins” for both two teams against the other teams in the tournament.\n\n**The data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Basketball Match List or Fixture endpoints.**", "sport_highlighted_markets_straight_for_pinaculo": "Get sport highlighted market straight", "transform_units_using_the_get_method_for_unit_converter": "Transform Units Using The Get Method"}, "aseqs": [{"api_name": "checkdisposableemail_for_check_disposable_email", "api_action": "\nAction: checkdisposableemail_for_check_disposable_email\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}, {"api_name": "checkdisposableemail_for_check_disposable_email", "api_action": "\nAction: checkdisposableemail_for_check_disposable_email\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}, {"api_name": "emailvalidation_for_check_disposable_email", "api_action": "\nAction: emailvalidation_for_check_disposable_email\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "checkdisposableemail_for_check_disposable_email"}}, {"state": "generated_by_agent", "aseq": {"api_name": "checkdisposableemail_for_check_disposable_email"}}, {"state": "generated_by_agent", "aseq": {"api_name": "checkdisposableemail_for_check_disposable_email"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"checkdisposableemail_for_check_disposable_email\",\n\t\"api_action\": \"Action: checkdisposableemail_for_check_disposable_email\\nAction Input: {\\n  \\\"email\\\": \\\"test@example.com\\\"\\n}\",\n}"}]}
{"URL": "22003", "query": "Provide me with news articles about trends in green technology. I'm particularly interested in articles from The Guardian. Can you also give me a list of all the articles from different publications?", "api_names": ["specific_publication_articles_for_green_gold", "all_articles_for_green_gold", "Finish", "mughal_empire_for_jak_api", "api_endpoint_for_esignly", "detection_objects_as_modified_image_by_image_url_for_mantis_object_detection", "getinventory_for_freeplanhardlimitexternal", "generate_a_random_word_for_random_word_generator", "getcountrycode_for_asktheworld", "getpaymentinitiationinstructionsummary_for_transaction", "visa_requirements_for_visa_requirements", "get_info_user_for_tiktok_video_no_watermark_v2"], "api_descs": {"Finish": "No description available.", "all_articles_for_green_gold": "Endpoint to gather all articles from all listed publications detailed in API", "api_endpoint_for_esignly": "main end point to access api", "detection_objects_as_modified_image_by_image_url_for_mantis_object_detection": "Image URL and it will return a updated image of detected objects in image via bounding boxes", "generate_a_random_word_for_random_word_generator": "Scour through thousands of words from the RandomWordGenerator.com database", "get_info_user_for_tiktok_video_no_watermark_v2": "Get tiktok user info", "getcountrycode_for_asktheworld": "Gets all Country Codes which you can use to search for a specific country.", "getinventory_for_freeplanhardlimitexternal": "Returns a map of status codes to quantities", "getpaymentinitiationinstructionsummary_for_transaction": "Get all payment initiation instructions allows to retrieve all customer credit transfer initiations. If the number of results exceeds the default limit, the response will be paginated. The operation allows filtering the results based on the creation from date and creation to date. The result is filtered based on \"creation_date_time\". The endpoint will return an empty array when no resource is found.\n", "mughal_empire_for_jak_api": "Get the JSON formated file containing details about The Mughal Empire!!", "specific_publication_articles_for_green_gold": "Gets news articles from specific publications", "visa_requirements_for_visa_requirements": " "}, "aseqs": [{"api_name": "specific_publication_articles_for_green_gold", "api_action": "\nAction: specific_publication_articles_for_green_gold\nAction Input: {\n  \"newspaperid\": \"The Guardian\"\n}", "api_reaction": null}, {"api_name": "all_articles_for_green_gold", "api_action": "\nAction: all_articles_for_green_gold\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "specific_publication_articles_for_green_gold"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"specific_publication_articles_for_green_gold\",\n\t\"api_action\": \"\\\nAction: specific_publication_articles_for_green_gold\\n\\\nAction Input: {\\\n  \\\"newspaperid\\\": \\\"The Guardian\\\"\\\n}\\uff08Reuse history input\\uff09\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "specific_publication_articles_for_green_gold", "api_action": "\nAction: specific_publication_articles_for_green_gold\nAction Input: {\n  \"newspaperid\": \"The Guardian\"\n}", "api_reaction": null}}]}
{"URL": "14176", "query": "I'm an adventure seeker and I want to explore outdoor activities in Europe. Can you suggest cities and countries with opportunities for hiking, skiing, and water sports? I'm also interested in finding adventure tour operators.", "api_names": ["Finish", "get_place_by_id_for_spott", "autocomplete_places_for_spott", "search_places_for_spott", "v1_sources_for_newscatcher", "hotels_details_for_booking_com", "domains_list_for_hotels_com_provider", "m_for_barbaraaa", "placeslistbystate_for_mapreflex", "get_product_detail_for_tokopediaapi", "countries_for_surebets_2", "manufacturing_year_detection_for_tesla_vin_identifier", "airportsearch_for_flightera_flight_data", "get_hashtags_for_instagram_profile", "get_spanish_alt_text_for_alt_bichinhos", "get_comments_with_product_id_for_amazon_data_v3"], "api_descs": {"Finish": "No description available.", "airportsearch_for_flightera_flight_data": "Returns a list of airports for a given country, bbox or timezone. Multiple arguments can be specified to limit the search.\nEither one of country, bbox or timezone must be specified.", "autocomplete_places_for_spott": "Returns a list of places matching a prefix and specified filter properties. Useful to create \"search as you type\" inputs.", "countries_for_surebets_2": "Available countries", "domains_list_for_hotels_com_provider": "Get a list of Domains, available domains code, currencies and locales", "get_comments_with_product_id_for_amazon_data_v3": "Retrieve comments based on a product id.", "get_hashtags_for_instagram_profile": "Return hashtag media list medias", "get_place_by_id_for_spott": "Returns a single Place identified by an ID.", "get_product_detail_for_tokopediaapi": "Get Product Detail By Provide Slug", "get_spanish_alt_text_for_alt_bichinhos": "This endpoint will return back a pet image with alt text in **Spanish.**", "hotels_details_for_booking_com": "Hotels Details", "m_for_barbaraaa": "crypto", "manufacturing_year_detection_for_tesla_vin_identifier": "Detects the manufacturing year of the respective vehicle.", "placeslistbystate_for_mapreflex": "Get a plain list of Places of a state. Result is a plain list of place ids, not GeoJSON format. To retrieve boundaries of all Places of a state you may query method \"placesByIds\" with a portion of current method output.", "search_places_for_spott": "Returns a list of places (either countries, cities or administrative divisions) matching a query and filtered by properties.", "v1_sources_for_newscatcher": "Returns a list of supported news websites for any topic, country, language, or any of those combined"}, "aseqs": [{"api_name": "search_places_for_spott", "api_action": "\nAction: search_places_for_spott\nAction Input: {}", "api_reaction": null}, {"api_name": "autocomplete_places_for_spott", "api_action": "\nAction: autocomplete_places_for_spott\nAction Input: {}", "api_reaction": null}, {"api_name": "autocomplete_places_for_spott", "api_action": "\nAction: autocomplete_places_for_spott\nAction Input: {}", "api_reaction": null}, {"api_name": "get_place_by_id_for_spott", "api_action": "\nAction: get_place_by_id_for_spott\nAction Input: {\n  \"is_id\": \"5809844\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_places_for_spott"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_places_for_spott", "api_action": "\nAction: search_places_for_spott\nAction Input: {\n\t\"query\": \"hiking skiing water sports\",\n\t\"filters\": {\n\t\t\"categ\": [\n\t\t\t\"outdoor activities\"\n\t\t]\n\t}\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_places_for_spott", "api_action": "\nAction: search_places_for_spott\nAction Input: {\"query\": \"hiking skiing water sports\", \"country\": \"Europe\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_places_for_spott"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_places_for_spott", "api_action": "\nAction: search_places_for_spott\nAction Input: {\n  \"query\": \"Europe hiking skiing water sports\",\n  \"categories\": [\n    \"hiking\",\n    \"skiing\",\n    \"water-sports\"\n  ]\n}", "api_reaction": null}}]}
{"URL": "69335", "query": "Hey, I'm a football enthusiast and I'm curious about the live scores of today's matches. Could you please fetch me the scores for all the ongoing matches today? Additionally, I'd like to know the scores for matches that took place on 2022-12-04. Thanks a lot!", "api_names": ["get_football_live_scores_today_for_football_score_api", "get_scores_for_given_date_for_football_score_api", "Finish", "get_formats_for_intelligent_automation_ocr_ai_", "united_states_away_from_home_mobility_for_covid_19_economic_impact", "geoip_v1_lite_getipinfolite_for_itcooking_eu_ip_geolocation", "season_episodes_for_netflix_v2", "loginuser_for_platformbil", "post_commenter_for_instagram_bulk_profile_scrapper", "get_individual_quotes_by_quote_id_for_movie_and_tv_shows_quotes", "music_data_by_id_for_tiktok_solutions", "get_search_token_for_trulia_real_estate_scraper", "get_video_info_for_likee_downloader_download_likee_videos", "united_states_residential_mobility_for_covid_19_economic_impact", "weather_cities_in_indonesia_filtered_by_province_code_for_indonesia_latest_weather_and_earthquake"], "api_descs": {"Finish": "No description available.", "geoip_v1_lite_getipinfolite_for_itcooking_eu_ip_geolocation": "Identifying location for 1 IP address.", "get_football_live_scores_today_for_football_score_api": "Get Live scores for today's football matches", "get_formats_for_intelligent_automation_ocr_ai_": "Get a list of formats", "get_individual_quotes_by_quote_id_for_movie_and_tv_shows_quotes": "This endpoint will return back individual quotes based on the given ID", "get_scores_for_given_date_for_football_score_api": "If you want to know the list of football matches for a given date and what was their scores you can use this API.\nAll this api needs is the date input in the format %Y-%m-%d.\nEg:- 2022-12-01", "get_search_token_for_trulia_real_estate_scraper": "Get search token and use it in **search/for_sale**, **search/for_rent**, **search/sold** endpoints.", "get_video_info_for_likee_downloader_download_likee_videos": "This endpoint will return back all information about a specific video on Likee.", "loginuser_for_platformbil": "", "music_data_by_id_for_tiktok_solutions": "Get** Music Data **by **ID**", "post_commenter_for_instagram_bulk_profile_scrapper": "Get Instagram Post Commenter's list by media_id", "season_episodes_for_netflix_v2": "Season Episodes", "united_states_away_from_home_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent away from home.", "united_states_residential_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at residential.", "weather_cities_in_indonesia_filtered_by_province_code_for_indonesia_latest_weather_and_earthquake": "Weather Cities in Indonesia filtered by Province (Code)\n\nHere is the list of Povince Code (kode_bps)\n- 11\tProvinsi Aceh\n- 51\tProvinsi Bali\n- 19\tProvinsi Bangka Belitung\n- 36\tProvinsi Banten\n- 17\tProvinsi Bengkulu\n- 34\tProvinsi DI Yogyakarta\n- 31\tProvinsi DKI Jakarta\n- 75\tProvinsi Gorontalo\n- 15\tProvinsi Jambi\n- 32\tProvinsi Jawa Barat\n- 33\tProvinsi Jawa Tengah\n- 35\tProvinsi Jawa Timur\n- 61\tProvinsi Kalimantan Barat\n- 63\tProvinsi Kalimantan Selatan\n- 62\tProvinsi Kalimantan Tengah\n- 64\tProvinsi Kalimantan Timur\n- 65\tProvinsi Kalimantan Utara\n- 21\tProvinsi Kepulauan Riau\n- 18\tProvinsi Lampung\n- 81\tProvinsi Maluku\n- 82\tProvinsi Maluku Utara\n- 52\tProvinsi Nusa Tenggara Barat\n- 53\tProvinsi Nusa Tenggara Timur\n- 94\tProvinsi Papua\n- 91\tProvinsi Papua Barat\n- 14\tProvinsi Riau\n- 76\tProvinsi Sulawesi Barat\n- 73\tProvinsi Sulawesi Selatan\n- 72\tProvinsi Sulawesi Tengah\n- 74\tProvinsi Sulawesi Tenggara\n- 71\tProvinsi Sulawesi Utara\n- 13\tProvinsi Sumatera Barat\n- 16\tProvinsi Sumatera Selatan\n- 12\tProvinsi Sumatera Utara"}, "aseqs": [{"api_name": "get_football_live_scores_today_for_football_score_api", "api_action": "\nAction: get_football_live_scores_today_for_football_score_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_football_live_scores_today_for_football_score_api", "api_action": "\nAction: get_football_live_scores_today_for_football_score_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_scores_for_given_date_for_football_score_api", "api_action": "\nAction: get_scores_for_given_date_for_football_score_api\nAction Input: {\n  \"date\": \"2022-12-04\"\n}", "api_reaction": null}, {"api_name": "get_scores_for_given_date_for_football_score_api", "api_action": "\nAction: get_scores_for_given_date_for_football_score_api\nAction Input: {\n  \"date\": \"2022-12-03\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to first fetch the live scores for today's football matches using get_football_live_scores_today_for_football_score_api, then later fetch the scores for matches that took place on 2022-12-04 with the same API call.\n\t\"api_name\": \"get_football_live_scores_today_for_football_score_api\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "get_scores_for_given_date_for_football_score_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_scores_for_given_date_for_football_score_api", "api_action": "\nAction: get_scores_for_given_date_for_football_score_api\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_football_live_scores_today_for_football_score_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_football_live_scores_today_for_football_score_api"}}]}
{"URL": "32975", "query": "I want to discover new music related to a specific genre. Please fetch me the tracks, albums, and details of the artist associated with the genre 'rock'. Also, provide me with the music links for the tracks and albums.", "api_names": ["search_by_query_for_musiclinkssapi", "Finish", "response_by_quizid_for_moodring", "recent_word_of_the_day_from_dc_for_word_of_the_day", "trend_for_yahoo_finance", "spec_for_groundhog_day_api", "consumer_phone_search_for_data_axle_consumer_phone_search", "getsupportedbarcodes_for_groupdocs_signature_cloud", "get_the_calendar_for_alpaca_trading", "quote_of_the_day_for_10000_anime_quotes_with_pagination_support", "single_dog_breed_for_dogbreeddb", "isvalidexpression_for_mathematical_symbolic_expression_manipulator"], "api_descs": {"Finish": "No description available.", "consumer_phone_search_for_data_axle_consumer_phone_search": "Find relevant People in the Data Axle database", "get_the_calendar_for_alpaca_trading": "Returns the market calendar", "getsupportedbarcodes_for_groupdocs_signature_cloud": " ", "isvalidexpression_for_mathematical_symbolic_expression_manipulator": " ", "quote_of_the_day_for_10000_anime_quotes_with_pagination_support": "Get quote of the day.\n\n**RESPONSE**\n**quote** \nContain quote text\n\n**animename** \nJapanese anime name, quotes related to.\n\n**character**  ( Depend on subscription )\nCharacter name who spoke that quote.\n\n**is_popular** ( Depend on subscription )\ntells whether a quote is popular among fans.\nResponse will be either  1 or 0 ( 1 represent yes, 0 represent no )\n\n**quote_id** ( Depend on subscription )\nUnique quote id which can be later used to get more information.\n\n**image** (Depend on subscription)\nCharacter Image URL will be provided which is related to the quote.\n\n**Note: if no quote found response will be**\n`{\"status\": \"empty\"}`", "recent_word_of_the_day_from_dc_for_word_of_the_day": "Fetches upto 3 recent word from Dictionary.com", "response_by_quizid_for_moodring": "Get all responses of a certain quizId.", "search_by_query_for_musiclinkssapi": "Given a **query** and **type** of element, this returns details about *tracks*, *albums* and *artists*.", "single_dog_breed_for_dogbreeddb": "Gives details of a single dog breed.", "spec_for_groundhog_day_api": "Gets the schema for the JSON API as a yaml file.", "trend_for_yahoo_finance": "This reflects the insurance company's profits over given periods of time.\nThis endpoint also gives **experts** & **AI supported predictions** about stock future behavior"}, "aseqs": [{"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"genre\"\n}", "api_reaction": null}, {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"track,album,artist\"\n}", "api_reaction": null}, {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"track\"\n}", "api_reaction": null}, {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"album\"\n}", "api_reaction": null}, {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"artist\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"genre\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"track,album,artist\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"search_by_query_for_musiclinkssapi\",\n\t\"api_action\": \"\\nAction: search_by_query_for_musiclinkssapi\\nAction Input: {\\n  \\\"q\\\": \\\"rock\\\",\\n  \\\"type\\\": \\\"track,album,artist\\\"\\n}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "search_by_query_for_musiclinkssapi", "api_action": "\nAction: search_by_query_for_musiclinkssapi\nAction Input: {\n  \"q\": \"rock\",\n  \"type\": \"track,album,artist\"\n}", "api_reaction": null}}]}
{"URL": "57020", "query": "I want to organize a health contest for my family and friends. Can you suggest some upcoming contests, along with their start times, durations, and the websites where they will be held?", "api_names": ["contests_for_demo1", "Finish", "solat_list_for_waktu_solat", "prices_for_redstone", "business_idea_for_business_starter_api", "locations_for_skyscanner_api", "x2y2_get_for_x2y2", "main_for_neuronet_nlp", "earthquakes_by_date_for_everyearthquake", "getalltech_for_runs_tech", "get_post_comments_for_9gag_api_detailed_", "get_the_top_15_most_popular_books_in_a_month_of_an_year_for_hapi_books"], "api_descs": {"Finish": "No description available.", "business_idea_for_business_starter_api": "Generate a business idea", "contests_for_demo1": "Get list of contests", "earthquakes_by_date_for_everyearthquake": "Get the 100 most recent earthquakes from all over in the world, within a specified date range.", "get_post_comments_for_9gag_api_detailed_": "Returns post comments. Uses cursor (**after **parameter).", "get_the_top_15_most_popular_books_in_a_month_of_an_year_for_hapi_books": "Provide the year and the month (between 1 and 12) and receive the 15 most popular books for that month.", "getalltech_for_runs_tech": "returns a list of all of the technology that runs.tech can find", "locations_for_skyscanner_api": "Geographical locations have the concept of hierarchy. Each location has a parent of a larger hierarchy.  I.e.: a place `type` of `airport` can have a parent of `city` and `city` can have a parent of `country`.", "main_for_neuronet_nlp": "Enter a single sentence.", "prices_for_redstone": "Redstone HTTP API currently has a single yet very powerful endpoint, which allows you to fetch prices data.", "solat_list_for_waktu_solat": "List of zones in each state along with the zone code.\nData in json format.", "x2y2_get_for_x2y2": "x2y2 API endpoint (https://api.x2y2.io)\nMake over 1000 requests / minute\n\nSimply copy the path into the x2y2_path header.\n\n![](https://i.ibb.co/WKYfTDy/x2y2-path-get-header.png)"}, "aseqs": [{"api_name": "contests_for_demo1", "api_action": "\nAction: contests_for_demo1\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": The user wants to know about upcoming health contests including their start times, durations, and websites where they will be held. The previous history actions do not provide such information. I will first fetch the list of ongoing contests using the 'contests_for_demo1' API and then find relevant health-related contests within those.\n\t\"api_name\": \"contests_for_demo1\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "contests_for_demo1"}}]}
{"URL": "62606", "query": "My company is planning to expand into international markets and we need to localize our product names. Can you suggest five English words that would be suitable for our product, along with their translations and usage examples in Turkish?", "api_names": ["Finish", "wordsearchenglish_for_dictionary", "live_events_for_art_openings_italy", "author_author_for_poetry_db", "resources_per_country_for_africa_api_", "translate_for_giphy", "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api", "latest_draw_date_for_thai_lottery_result"], "api_descs": {"Finish": "No description available.", "author_author_for_poetry_db": "All poems on Poetry DB by a specific poet", "get_all_the_top_articles_of_the_week_by_default_for_dev_to_api": "It returns all the week's top articles", "latest_draw_date_for_thai_lottery_result": "Get latest draw date information - รายการข้อมูลวันหวยออกล่าสุด", "live_events_for_art_openings_italy": "To call this service, you would make a GET request to the endpoint /api/ongoing-events with the optional query parameter city. When the service is called, it retrieves a list of events from the database, filtered by the city parameter if it is provided.", "resources_per_country_for_africa_api_": "Gives you a list of the most important resources that an African country relies on to keep their economy running.\nTakes parameter <country_name>", "translate_for_giphy": "This is prototype endpoint for using Giphy as a translation engine for a GIF dialect. The translate API draws on search, but uses the Giphy \"special sauce\" to handle translating from one vocabulary to another. In this case, words and phrases to GIFs. Use a plus or url encode for phrases.", "wordsearchenglish_for_dictionary": "With this service you can learn the meaning of English words from Oxdord dictionary."}, "aseqs": [{"api_name": "wordsearchenglish_for_dictionary", "api_action": "\nAction: wordsearchenglish_for_dictionary\nAction Input: {\"query\": \"innovative\"}", "api_reaction": null}, {"api_name": "wordsearchenglish_for_dictionary", "api_action": "\nAction: wordsearchenglish_for_dictionary\nAction Input: {\"query\": \"unique\"}", "api_reaction": null}, {"api_name": "wordsearchenglish_for_dictionary", "api_action": "\nAction: wordsearchenglish_for_dictionary\nAction Input: {\"query\": \"efficient\"}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "wordsearchenglish_for_dictionary"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"translate_for_giphy\",\n\t\"api_action\": \"\\nAction: translate_for_giphy\\nAction Input: {\\\"query\\\": \\\"innovative innovations innovation\\\", \\\"target_language\\\": \\\"tr\\\"}\",\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "wordsearchenglish_for_dictionary", "api_action": "\nAction: wordsearchenglish_for_dictionary\nAction Input: {\"query\": \"innovative unique new generation modern\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "wordsearchenglish_for_dictionary", "api_action": "\nAction: wordsearchenglish_for_dictionary\nAction Input: {\"query\": \"innovative unique efficient progressive sustainable\"}", "api_reaction": null}}]}
{"URL": "6624", "query": "I am organizing a trip for my family and we want to track live aircraft during our journey. Can you provide the total number of live tracked aircraft at the moment? Additionally, we would like to know if there are any emergency aircraft currently flying.", "api_names": ["live_emergency_aircraft_for_fachaapi", "total_live_tracked_aircraft_for_fachaapi", "Finish", "get_the_calendar_for_alpaca_trading", "getfileversions_for_groupdocs_annotation_cloud", "currency_by_country_for_geosource_api", "nfts_on_address_for__all_in_one_crypto_swiss_knife_", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits", "playerdetails_for_sportifyapi", "get_user_related_profiles_by_user_id_for_instagram_looter", "stores_for_ikea_api", "get_categories_categoryid_v1_for_shapeways"], "api_descs": {"Finish": "No description available.", "currency_by_country_for_geosource_api": "Retrives a currecny and currency symbol of the country", "get_categories_categoryid_v1_for_shapeways": "", "get_social_moving_averages_1w_for_finance_social_sentiment_for_twitter_and_stocktwits": "Search for a ticker and capture the moving average of posts, comments, likes, and impressions within a specified timeframe. The recorded social moving average is grouped by 1 week intervals.", "get_the_calendar_for_alpaca_trading": "Returns the market calendar", "get_user_related_profiles_by_user_id_for_instagram_looter": "Get **Instagram** user related profiles by **user_id**", "getfileversions_for_groupdocs_annotation_cloud": " ", "live_emergency_aircraft_for_fachaapi": "Get live emergency aircraft (Squawk 7500/7600/7700)", "nfts_on_address_for__all_in_one_crypto_swiss_knife_": "Get list of NFTs that address holds.", "playerdetails_for_sportifyapi": "Player Details", "stores_for_ikea_api": "Obtain a list of all stores in a specified country.", "total_live_tracked_aircraft_for_fachaapi": "Get total live tracked aircraft"}, "aseqs": [{"api_name": "total_live_tracked_aircraft_for_fachaapi", "api_action": "\nAction: total_live_tracked_aircraft_for_fachaapi\nAction Input: {}", "api_reaction": null}, {"api_name": "live_emergency_aircraft_for_fachaapi", "api_action": "\nAction: live_emergency_aircraft_for_fachaapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "total_live_tracked_aircraft_for_fachaapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "live_emergency_aircraft_for_fachaapi", "api_action": "\nAction: live_emergency_aircraft_for_fachaapi\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "total_live_tracked_aircraft_for_fachaapi"}}]}
{"URL": "57040", "query": "I'm interested in learning about the different categories of sunnah fasting. Could you provide me with a list of categories and their descriptions? Additionally, I would like to explore the types of fasting within each category. Can you give me a list of types for each category?", "api_names": ["api_v1_types_for_sunnah_fasting", "api_v1_categories_for_sunnah_fasting", "Finish", "news_v2_list_trending_for_seeking_alpha", "tokens_all_for_defi_watch", "all_dog_breed_for_dogbreeddb", "search_city_by_location_for_location_and_time", "tournament_standings_for_handball_data", "solve_for_captcha", "stock_recommendation_trend_for_yahoo_finance_v2", "image_for_testpk", "time_zone_time_for_geodb_cities"], "api_descs": {"Finish": "No description available.", "all_dog_breed_for_dogbreeddb": "Gets details of all dog breeds.", "api_v1_categories_for_sunnah_fasting": "Get list of categories", "api_v1_types_for_sunnah_fasting": "Get list of types", "image_for_testpk": "image", "news_v2_list_trending_for_seeking_alpha": "List trending news", "search_city_by_location_for_location_and_time": "Get details of the city near specified geolocation (latitude/longitude). Up to 10 records for cities close to the specified location may be returned. Information includes city name, alternative names, geolocation (latitude/longitude), population, timezone, map url, and more.", "solve_for_captcha": "Solve a Captcha given an image URL", "stock_recommendation_trend_for_yahoo_finance_v2": "Get stock recommendations and trends.", "time_zone_time_for_geodb_cities": "Get the time-zone current time in ISO-6801 format: HHmmss.SSSZ", "tokens_all_for_defi_watch": "Get data about all tokens and filter them", "tournament_standings_for_handball_data": "Team Rankings for a specific competition."}, "aseqs": [{"api_name": "api_v1_types_for_sunnah_fasting", "api_action": "\nAction: api_v1_types_for_sunnah_fasting\nAction Input: {}", "api_reaction": null}, {"api_name": "api_v1_categories_for_sunnah_fasting", "api_action": "\nAction: api_v1_categories_for_sunnah_fasting\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "api_v1_categories_for_sunnah_fasting"}}, {"state": "generated_by_agent", "aseq": {"Thought": "The previous API call provided the list of types for sunnah fasting. Now, I need to get the categories and their descriptions, then provide a list of types within each category.", "api_name": "api_v1_categories_for_sunnah_fasting"}}, {"state": "generated_by_agent", "aseq": {"api_name": "api_v1_categories_for_sunnah_fasting"}}]}
{"URL": "71423", "query": "I'm analyzing the impact of population growth on economic development. Can you fetch the population data and growth rates for countries like China, India, USA, and Brazil over the past decade?", "api_names": ["Finish", "get_by_filter_for_world_population_by_decade_and_growth_rate", "get_by_decade_for_world_population_by_decade_and_growth_rate", "song_by_id_for_halsey_lyric_snippets", "imperial_pounds_for_body_mass_index_bmi_calculator", "get_for_instagram_v3", "getuserstories_for_instagram_v6", "blogsbylauch_for_spaceflight_news", "history_for_crazytimeapi", "leaguetotalstandings_for_esportapi", "agent_details_by_username_for_zillow_v2", "api_for_a"], "api_descs": {"Finish": "No description available.", "agent_details_by_username_for_zillow_v2": "Get agent's details by username(contact infos, active listings and reviews etc).\nPS : username is the profile link \nExample : \nusername :  Pardee-Properties\nfor https://www.zillow.com/profile/Pardee-Properties/", "api_for_a": "a", "blogsbylauch_for_spaceflight_news": " ", "get_by_decade_for_world_population_by_decade_and_growth_rate": "Get by decade", "get_by_filter_for_world_population_by_decade_and_growth_rate": "Get by filter", "get_for_instagram_v3": "Getting data bypassing CORS", "getuserstories_for_instagram_v6": "get stories by user id", "history_for_crazytimeapi": "Get the last 10 spins Histories and details", "imperial_pounds_for_body_mass_index_bmi_calculator": "This endpoint will calculate the BMI of an individual using the imperial measurement system.", "leaguetotalstandings_for_esportapi": "Get the total standings for a specific E-Sports league by providing the tournament ID and season ID.", "song_by_id_for_halsey_lyric_snippets": "returns song when searched by id"}, "aseqs": [{"api_name": "get_by_filter_for_world_population_by_decade_and_growth_rate", "api_action": "\nAction: get_by_filter_for_world_population_by_decade_and_growth_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "get_by_decade_for_world_population_by_decade_and_growth_rate", "api_action": "\nAction: get_by_decade_for_world_population_by_decade_and_growth_rate\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_by_decade_for_world_population_by_decade_and_growth_rate"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_by_filter_for_world_population_by_decade_and_growth_rate", "api_action": "{\"countries\": [\"China\", \"India\", \"USA\", \"Brazil\"], \"years\": [2010, 2015, 2020], \"growth_rates\": true}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_by_filter_for_world_population_by_decade_and_growth_rate\",\n\t\"api_action\": \"\\nAction: get_by_filter_for_world_population_by_decade_and_growth_rate\\nAction Input: {\"countries\": [\"China\", \"India\", \"USA\", \"Brazil\"], \"decadeFromTo\": [true, 10]}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "57139", "query": "Retrieve the pet information for pet ID 6 and get the inventory count. Also, find the user details for the username 'sarah12'.", "api_names": ["getuserbyname_for_erictestpet", "getpetbyid_for_erictestpet", "getinventory_for_erictestpet", "Finish", "teams_get_results_for_unofficial_cricbuzz", "handball_live_matches_for_sports_live_scores", "get_the_channels_social_accounts_and_contacts_for_live_tv_api", "objectexists_for_groupdocs_merger_cloud", "apache2_for_clinicalmarkers", "regular_die_for_dice_roll_simulator", "stock_price_for_yh_finance_complete", "artist_featuring_for_spotify_data", "health_for_candlestick_chart", "city_by_id_for_referential", "artists_search_for_songmeanings", "property_for_sale_for_uk_real_estate_rightmove"], "api_descs": {"Finish": "No description available.", "apache2_for_clinicalmarkers": " ", "artist_featuring_for_spotify_data": "artist-featuring", "artists_search_for_songmeanings": "Search the SongMeanings database for artist names and aliases.", "city_by_id_for_referential": "Direct lookup of over 75,000 cities by id. See the v1/city API to search for city ids.", "get_the_channels_social_accounts_and_contacts_for_live_tv_api": "It has links to different social platforms such as Facebook.....", "getinventory_for_erictestpet": "Returns a map of status codes to quantities", "getpetbyid_for_erictestpet": "Returns a single pet", "getuserbyname_for_erictestpet": "", "handball_live_matches_for_sports_live_scores": "Returns Handball Live Matches with betting odds", "health_for_candlestick_chart": "Health check", "objectexists_for_groupdocs_merger_cloud": " ", "property_for_sale_for_uk_real_estate_rightmove": "Property for sale", "regular_die_for_dice_roll_simulator": "Roll one regular die.", "stock_price_for_yh_finance_complete": "This endpoint retrieves a price with details for any public stock.", "teams_get_results_for_unofficial_cricbuzz": "Get matched results by team"}, "aseqs": [{"api_name": "getpetbyid_for_erictestpet", "api_action": "\nAction: getpetbyid_for_erictestpet\nAction Input: {\n  \"petid\": 6\n}", "api_reaction": null}, {"api_name": "getinventory_for_erictestpet", "api_action": "\nAction: getinventory_for_erictestpet\nAction Input: {}", "api_reaction": null}, {"api_name": "getuserbyname_for_erictestpet", "api_action": "\nAction: getuserbyname_for_erictestpet\nAction Input: {\n  \"username\": \"sarah12\"\n}", "api_reaction": null}, {"api_name": "getinventory_for_erictestpet", "api_action": "\nAction: getinventory_for_erictestpet\nAction Input: {}", "api_reaction": null}, {"api_name": "getuserbyname_for_erictestpet", "api_action": "\nAction: getuserbyname_for_erictestpet\nAction Input: {\n  \"username\": \"sarah12\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I need to fetch the pet information for pet ID 6 using the getpetbyid_for_erictestpet API.", "api_name": "getpetbyid_for_erictestpet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_erictestpet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getuserbyname_for_erictestpet"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_erictestpet", "api_action": "\nAction: getpetbyid_for_erictestpet\nAction Input: {\n  \"petid\": 6\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_erictestpet", "api_action": "\nAction: getpetbyid_for_erictestpet\nAction Input: {\n  \"petid\": 6\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_erictestpet", "api_action": "\nAction: getpetbyid_for_erictestpet\nAction Input: {\n  \"petid\": 6\n}", "api_reaction": null}}]}
{"URL": "52273", "query": "I'm a product reviewer and I need to stay updated on the latest trends. Can you suggest popular categories on Amazon and the marketplaces where I can find trending products?", "api_names": ["categories_list_for_amazon_data_v2", "marketplace_list_for_amazon_data_v2", "Finish", "websearch_for_web_search", "get_currency_for_countries", "get_laws_for_one_state_for_us_gun_laws", "companies_id_data_for_german_company_data_v2", "v1_latest_headlines_for_newscatcher", "stations_for_flixbus", "income_statement_for_fmpcloud", "get_product_detail_for_yiwugo_product_data", "apgar_for_clinicalmarkers", "vip_featured_predictions_for_today_football_prediction", "search_vacation_rental_location_for_tripadvisor", "drawing_by_date_for_lotto_america"], "api_descs": {"Finish": "No description available.", "apgar_for_clinicalmarkers": " ", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "companies_id_data_for_german_company_data_v2": "This endpoint returns the basic information of the company with the given identifier. The information includes all the core data (name, address), web data if known (phone, fax, email, url, social media profiles), legal information (registry, founding date, capital), up to three industries, and revenue and employees class.", "drawing_by_date_for_lotto_america": "Get the winning Lotto America number set from a specific drawing date.", "get_currency_for_countries": "This gets currency data on a country. Use ISO2 for country_code.", "get_laws_for_one_state_for_us_gun_laws": "This endpoint provides links to gun law documentation for any particular state.", "get_product_detail_for_yiwugo_product_data": "get product detail by item_id,\nThe source of the data can be controlled through the 'lan' field (en: English website, cn: Chinese website)", "income_statement_for_fmpcloud": "Get Company Income Statement In JSON format", "marketplace_list_for_amazon_data_v2": "This endpoint lists down the market places we use to fetch data!", "search_vacation_rental_location_for_tripadvisor": "-", "stations_for_flixbus": "Get a list of stations", "v1_latest_headlines_for_newscatcher": "Always returns the latest 100 articles for any `topic`, `country`, `lang`, or any of those combined", "vip_featured_predictions_for_today_football_prediction": "Returns **Daily  Featured Prediction** results which have higher probability and better odds than others. More efficient selections.\n\nCompare its performance from **stats/performance** endpoint.", "websearch_for_web_search": "Get relevant web pages for a given query."}, "aseqs": [{"api_name": "categories_list_for_amazon_data_v2", "api_action": "\nAction: categories_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "marketplace_list_for_amazon_data_v2", "api_action": "\nAction: marketplace_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "categories_list_for_amazon_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marketplace_list_for_amazon_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "categories_list_for_amazon_data_v2"}}]}
{"URL": "36031", "query": "I am researching football team names and I need an extensive database of team names and their short names. Can you provide me with this data using the All teams API? Additionally, it would be helpful to have access to the first 25 team names and their short names using the First 25 teams API.", "api_names": ["all_teams_for_football_soccer_team_names", "first_25_teams_for_football_soccer_team_names", "Finish", "get_epic_free_games_for_epic_free_games", "stars_list_for_stars_api", "getfileslist_for_aspose_cells_cloud", "trades_for_cryptocurrency_financial_data", "user_guides_for_instagram_v13", "provider4_live_inplaying_for_football_betting_odds", "retrieve_events_for_opensea_v2", "search_for_streamlinewatch_streaming_guide", "convert_for_currency_converter_v2"], "api_descs": {"Finish": "No description available.", "all_teams_for_football_soccer_team_names": "You'll get more than 7000 football (soccer) team names, with their short names from almost every league and country.", "convert_for_currency_converter_v2": "Convert between Currencies.", "first_25_teams_for_football_soccer_team_names": "You'll get only the first 25 team names and their short names if you have basic plan.", "get_epic_free_games_for_epic_free_games": "Get Epic Free Games", "getfileslist_for_aspose_cells_cloud": " ", "provider4_live_inplaying_for_football_betting_odds": "get inplaying matches list", "retrieve_events_for_opensea_v2": "This endpoint provides a list of events that occur on the NFTs that are tracked by OpenSea. The event_type field indicates the type of event (transfer, successful auction, etc) and the results are sorted by event timestamp.\n\nNote that due to block reorganizations, recent events (less than 10 minutes old) may not reflect the final state of the blockchain.", "search_for_streamlinewatch_streaming_guide": "Returns a list of titles that match the query.", "stars_list_for_stars_api": "Returns list of stars", "trades_for_cryptocurrency_financial_data": "Trades endpoint available upon request", "user_guides_for_instagram_v13": "Get instagram user guides by user id."}, "aseqs": [{"api_name": "all_teams_for_football_soccer_team_names", "api_action": "\nAction: all_teams_for_football_soccer_team_names\nAction Input: {}", "api_reaction": null}, {"api_name": "first_25_teams_for_football_soccer_team_names", "api_action": "\nAction: first_25_teams_for_football_soccer_team_names\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "First, I will use all_teams_for_football_soccer_team_names API to get an extensive database of team names and their short names.", "api_name": "all_teams_for_football_soccer_team_names"}}, {"state": "generated_by_agent", "aseq": {"api_name": "first_25_teams_for_football_soccer_team_names", "api_action": "\nAction: first_25_teams_for_football_soccer_team_names\nAction Input: {}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "all_teams_for_football_soccer_team_names"}}]}
{"URL": "58427", "query": "I am developing a podcast app, and I need to convert text descriptions into audio previews. Can you assist me in generating a list of audio files for the podcast episodes? Additionally, I would like to know the available voices for narration.", "api_names": ["get_list_of_audios_for_text_to_speech_pro", "get_list_of_voices_for_text_to_speech_pro", "Finish", "airlines_list_for_flight_radar", "users_for_reqres_dont_change_", "stock_price_for_yh_finance_complete", "get_article_by_sid_for_malaysia_kini", "login_data_for_ssh_honeypot", "lqv_for_lqv68", "statusforexcelemissionanalysis_for_carbon_management", "ip_address_for_get_ip_address_and_basic_info_", "specific_transactions_for_crypto_whale_transactions", "match_for_tennis_live_data", "options_expirations_for_fancyoptions", "get_app_permissions_for_google_play_api"], "api_descs": {"Finish": "No description available.", "airlines_list_for_flight_radar": "List all airlines around the world", "get_app_permissions_for_google_play_api": "Returns app permissions.", "get_article_by_sid_for_malaysia_kini": "Return news article content based on sid stated in **Get Latest Article List** method.", "get_list_of_audios_for_text_to_speech_pro": "Get List of Audios", "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices", "ip_address_for_get_ip_address_and_basic_info_": "JUST SEND AJAX OR REQUEST TO API.", "login_data_for_ssh_honeypot": "", "lqv_for_lqv68": "get whois", "match_for_tennis_live_data": "An individual match file for a given `match_id`", "options_expirations_for_fancyoptions": "This endpoint returns the expirations for a given ticker.", "specific_transactions_for_crypto_whale_transactions": "get info about single transaction", "statusforexcelemissionanalysis_for_carbon_management": "Get results in details from the task id.", "stock_price_for_yh_finance_complete": "This endpoint retrieves a price with details for any public stock.", "users_for_reqres_dont_change_": "Users"}, "aseqs": [{"api_name": "get_list_of_audios_for_text_to_speech_pro", "api_action": "\nAction: get_list_of_audios_for_text_to_speech_pro\nAction Input: {}", "api_reaction": null}, {"api_name": "get_list_of_voices_for_text_to_speech_pro", "api_action": "\nAction: get_list_of_voices_for_text_to_speech_pro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_audios_for_text_to_speech_pro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_voices_for_text_to_speech_pro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_list_of_audios_for_text_to_speech_pro"}}]}
{"URL": "3606", "query": "I'm planning a trip from 24th Street to Rockridge and I need the schedule information. Can you provide me with the arrival times for the next few trains? Additionally, I would like to know the real-time information about the estimated departure times from these stations.", "api_names": ["schedule_information_for_bart", "real_time_information_for_bart", "Finish", "get_breed_information_for_dog_breeds", "get_latest_updates_for_covid_19_india", "get_quotes_for_tradier", "card_set_for_hearthstone", "download_story_post_highlight_for_instagram_downloader", "search_for_go_tracks_for_soundcloud_scraper", "search_music_for_kwai", "top_collections_this_week_for_top_nft_sales", "vat_rates_categories_api_endpoint_for_vat_validation_and_tax_rates", "get_product_s_reviews_for_amazon_data_scraper_v2", "hashtag_feed_for_instagram_api_v2", "commanderskills_for_gotw"], "api_descs": {"Finish": "No description available.", "card_set_for_hearthstone": "Returns all cards in a set. Example values: Blackrock Mountain, Classic.", "commanderskills_for_gotw": "Commander skills", "download_story_post_highlight_for_instagram_downloader": "past a copied link of story or highlight or post \nindex/url={URL}", "get_breed_information_for_dog_breeds": "This endpoint will return information for a specific dog breed", "get_latest_updates_for_covid_19_india": "Coronavirus India Live Guidelines, Bills, etc", "get_product_s_reviews_for_amazon_data_scraper_v2": "Get product's reviews", "get_quotes_for_tradier": "", "hashtag_feed_for_instagram_api_v2": "It shows the content which is shared on Instagram with a specific hashtag, the first query does not need maxid, but if you want to get the rest of results you need to send it, and it can be taken from previous call as a next_max_id in Json response.\nfor example:\n\"next_max_id\": \"QVFBeHItQXBZTHZPdEdNM2RLTmFtODJEZXpkUVIwbktBWDFscFQ5SFIyZTlodWU3bFZ6RXJmaURNMGJGYk1BbFk1WjIzdzlITGJzRjBkM2lNZ2lwZ2s2TA==\"", "real_time_information_for_bart": "", "schedule_information_for_bart": "", "search_for_go_tracks_for_soundcloud_scraper": "This endpoint searches for SoundCloud (Go+) tracks with optional filters. Pagination scraping is supported.", "search_music_for_kwai": "Search Music API", "top_collections_this_week_for_top_nft_sales": "Top trending collections this week", "vat_rates_categories_api_endpoint_for_vat_validation_and_tax_rates": "The /categories/ endpoint makes it easy to get the latest VAT rates, including the reduced rates for certain categories, for a specific country."}, "aseqs": [{"api_name": "schedule_information_for_bart", "api_action": "\nAction: schedule_information_for_bart\nAction Input: {\n  \"cmd\": \"depart\",\n  \"orig\": \"24TH\",\n  \"dest\": \"ROCK\"\n}", "api_reaction": null}, {"api_name": "real_time_information_for_bart", "api_action": "\nAction: real_time_information_for_bart\nAction Input: {\n  \"cmd\": \"etd\",\n  \"orig\": \"24TH\"\n}", "api_reaction": null}, {"api_name": "real_time_information_for_bart", "api_action": "\nAction: real_time_information_for_bart\nAction Input: {\n  \"cmd\": \"etd\",\n  \"orig\": \"ROCK\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "schedule_information_for_bart"}}, {"state": "generated_by_agent", "aseq": {"api_name": "real_time_information_for_bart"}}, {"state": "generated_by_agent", "aseq": {"api_name": "schedule_information_for_bart"}}, {"state": "generated_by_agent", "aseq": {"api_name": "schedule_information_for_bart"}}]}
{"URL": "19440", "query": "Can you check the status of the batch verification job with the ID '123456'? I would like to receive the current status and any billing-related messages if there are any errors. Additionally, provide the general account information including the email of the account owner and available credits.", "api_names": ["get_account_info_for_blaze_verify", "get_the_status_of_a_batch_for_blaze_verify", "verify_an_email_for_blaze_verify", "Finish", "search_for_google_web_search", "list_languages_for_rushtranslate", "get_word_by_start_for_random_word_api", "get_individual_bitcoin_news_sources_for_bitcoin_news", "local_history_weather_api_for_world_weather_online_api", "get_hot_topics_for_news_content_extraction_live", "run_cgi_for_random_word", "get_definitions_for_dicolink", "metars_in_time_range_for_aviation_weather_center", "get_latest_lottery_result_for_thai_lottery", "getuserbyname_for_thisshouldbefree", "getfutureeventsbytopic_for_azure_smartable", "all_bps_for_bps", "find_similar_for_similar_movies", "initsession_for_endlessmedicalapi", "v1_inflation_for_inflation_by_api_ninjas"], "api_descs": {"Finish": "No description available.", "all_bps_for_bps": "Lister toutes les boîtes postales", "find_similar_for_similar_movies": "find similar movies for your movie", "get_account_info_for_blaze_verify": "Get general account information like the email of the account owner and available credits.", "get_definitions_for_dicolink": "Get definition of a word", "get_hot_topics_for_news_content_extraction_live": "Hot Topics ranking by Google.", "get_individual_bitcoin_news_sources_for_bitcoin_news": "In this endpoint you can get informations for a specific News resource.", "get_latest_lottery_result_for_thai_lottery": "Get latest lottery result - ข้อมูลผลการออกรางวัล งวดล่าสุด", "get_the_status_of_a_batch_for_blaze_verify": "GET requests to the batch endpoint will get the current status of the batch verification job specified in the \"id\" parameter.<br><br>When a credit card transaction is necessary to obtain enough credits to verify a batch, billing related messages will be returned if there is an error. These will be sent with a 402 response code.<br><br>", "get_word_by_start_for_random_word_api": "Returns a random word that starts with the specified string.\nFor example, \"fru\" will only return words that start with \"fru\", such as \"fruit\"", "getfutureeventsbytopic_for_azure_smartable": "Get future Azure events by topic.", "getuserbyname_for_thisshouldbefree": "", "initsession_for_endlessmedicalapi": "Initializes API Session", "list_languages_for_rushtranslate": "Get the list of languages we support. The language codes included in the response will be required when placing orders via the API.", "local_history_weather_api_for_world_weather_online_api": "The Local Historical or Past Weather API (also known as City and Town Historical Weather API) allows you to access weather conditions from 1st July 2008 up until the present time. The API returns weather elements such as temperature, precipitation (rainfall), weather description, weather icon and wind speed.", "metars_in_time_range_for_aviation_weather_center": "Obtain all METARs for a station collected between these start and end times using ISO8601  date/time format, with UTC offset: YYYY-MM-DDThh:mm:ssZ. Please see [W3C date/time formats](http://www.w3.org/TR/NOTE-datetime).", "run_cgi_for_random_word": "", "search_for_google_web_search": "Search", "v1_inflation_for_inflation_by_api_ninjas": "API Ninjas Inflation API endpoint. Returns current monthly and annual inflation percentages.", "verify_an_email_for_blaze_verify": "Verify a single email. If a verification request takes longer than the timeout, you may retry this request for up to 5 minutes. After 5 minutes, further requests will count against your usage. The verification result will be returned when it is available.<br><br>"}, "aseqs": [{"api_name": "get_the_status_of_a_batch_for_blaze_verify", "api_action": "\nAction: get_the_status_of_a_batch_for_blaze_verify\nAction Input: {\n  \"is_id\": \"123456\"\n}", "api_reaction": null}, {"api_name": "get_account_info_for_blaze_verify", "api_action": "\nAction: get_account_info_for_blaze_verify\nAction Input: {}", "api_reaction": null}, {"api_name": "verify_an_email_for_blaze_verify", "api_action": "\nAction: verify_an_email_for_blaze_verify\nAction Input: {\n  \"email\": \"example@example.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_the_status_of_a_batch_for_blaze_verify"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_status_of_a_batch_for_blaze_verify", "api_action": "\nAction: get_the_status_of_a_batch_for_blaze_verify\nAction Input: {\n  \"is_id\": \"123456\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_status_of_a_batch_for_blaze_verify", "api_action": "\nAction: get_the_status_of_a_batch_for_blaze_verify\nAction Input: {\n  \"batch_id\": \"123456\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_status_of_a_batch_for_blaze_verify", "api_action": "\nAction: get_the_status_of_a_batch_for_blaze_verify\nAction Input: {\n  \"id\": \"123456\"\n}"}}]}
{"URL": "5534", "query": "I'm a game developer working on a new RPG. I need to gather all the RPG items available in the game. Can you provide me with the complete list of items, including their names, types, slots, ranks, and rarities? This information will help me design the gameplay and balance the items.", "api_names": ["get_all_items_for_rpg_items", "Finish", "get_adverse_event_info_by_reaction_sex_age_group_drug_name_for_konviere_drugsapi", "full_data_for_question_explorer", "tmall_search_by_keyword_for_taobao_tmall_product_detail", "getuserbyname_for_teste", "top_collections_this_month_for_top_nft_sales", "getdocumenttypes_for_360_business_tool"], "api_descs": {"Finish": "No description available.", "full_data_for_question_explorer": "full data", "get_adverse_event_info_by_reaction_sex_age_group_drug_name_for_konviere_drugsapi": "This web method will return a summary dataset related to the adverse events information using the “reaction” the reaction, “sex” the patient sex (0: unknown, 1: male, 2: female), “ageGrp” age group (1: Neonate, 2: Infant,3: Child,4: Adolescent,5: Adult,6: Elderly) and “drgNm” the drug name or brand \nname, these input parameters are required.  All web method requires the \"api_key\" as query parameter.", "get_all_items_for_rpg_items": "Get all RPG items", "getdocumenttypes_for_360_business_tool": "Get all document types", "getuserbyname_for_teste": "", "tmall_search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword", "top_collections_this_month_for_top_nft_sales": "Top trending collections this month"}, "aseqs": [{"api_name": "get_all_items_for_rpg_items", "api_action": "\nAction: get_all_items_for_rpg_items\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_items_for_rpg_items"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_items_for_rpg_items"}}]}
{"URL": "18821", "query": "I'm planning to place a bet on the upcoming football match between Barcelona and Real Madrid. Can you provide me with the latest odds for this match? Additionally, I would like to see the details of the previous matches between these two teams.", "api_names": ["odds_for_bet_at_home", "matches_for_bet_at_home", "Finish", "getnewsletters_for_election2020_smartable", "get_jokes_by_specific_category_for_world_of_jokes", "extract_for_mobile_phone_validation", "preview_gettrackmasterstatus_for_landr_mastering_v1", "0mmo_for_0mmo", "getaccount_for_heywatch_video_encoding", "fraudsentinel_for_fraudsentinel", "categories_list_for_asos", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking", "search_video_for_tiktok_video_no_watermark_v2", "search_by_coordinates_for_zillow_data_v2", "origin_for_catbreeddb"], "api_descs": {"0mmo_for_0mmo": "0MMO is the number 1 site offering the very best software designed for Internet Marketers from 2008!\nAddress Novokosinskaya 14k7, Moscow,119034, Russia\nHotline 0945273782\nEmail: support@0mmo.net\nhttps://www.0mmo.net \nhttps://www.0mmo.net/gb \nhttps://www.0mmo.net/im-tools \nhttps://www.0mmo.net/wp \nhttps://www.0mmo.net/tutorials \nhttps://www.liveinternet.ru/users/0mmo/profile\nhttps://dribbble.com/0mmo/about\nhttps://infogram.com/0mmonet-1h7g6k0e17ry02o?live\nhttps://www.babelcube.com/user/0m-mo\nhttps://www.spreaker.com/user/15816794\nhttps://sketchfab.com/0mmo\nhttps://gitlab-test.eclipse.org/0mmo\nhttps://w3techs.com/users/profile/2751735\nhttps://www.scoop.it/topic/0m-mo\nhttps://0mmo.hpage.com/\nhttps://www.diigo.com/user/ommonet\nhttps://forums.iis.net/members/0mmo.aspx\nhttps://www.podomatic.com/podcasts/0mmonet9\nhttps://pinshape.com/users/1775513-0mmonet#designs-tab-open\nhttps://osf.io/xmzqj/\nhttps://gitlab.tue.nl/0mmo\nhttps://git.qt.io/0mmo\nhttps://communities.bentley.com/members/53bef9c4_2d00_8015_2d00_43ab_2d00_8a9c_2d00_d7d0b2a8d418\nhttps://myanimelist.net/profile/0mmo\nhttps://app.glosbe.com/profile/6875826798379142906\nhttps://8tracks.com/users/0mmo\nhttps://0mmo.cgsociety.org/profile\nhttps://api.rakuten.net/user/0mmonet\nhttps://www.forexfactory.com/0mmonet\nhttps://os.mbed.com/users/0mmonet/\nhttps://xclams.xwiki.org/xwiki/bin/view/XWiki/0mmonet\nhttp://photozou.jp/user/top/3300078\nhttps://www.designspiration.com/0mmonet9/saves/\nhttps://piqs.de/user/0mmo/account/\nhttps://hypothes.is/users/0mmo\nhttps://www.renderosity.com/users/0mmonet\nhttps://onmogul.com/0mmo\nhttps://www.hulkshare.com/0mmo\nhttps://writeablog.net/qur56j124j\nhttps://www.noteflight.com/profile/137b8a32fba12c039d5987842f5b20676af05440\nhttps://blogfreely.net/me/posts/\nhttps://www.cakeresume.com/dashboard\nhttps://appsliced.co/u/0mmo\nhttps://dashburst.com/0mmo\nhttps://timeswriter.com/members/0mmo/profile/\nhttps://www.csslight.com/profile/0mmo\nhttps://git.feneas.org/0mmonet9\nhttps://www.phuot.vn/members/0mmo.267461/\nhttps://startupmatcher.com/p/0mmo\nhttps://getpocket.com/@0mmo\nhttps://www.free-ebooks.net/profile/1356925/0mmo\nhttps://www.cnccode.com/user/0mmo\nhttps://amara.org/en/profiles/profile/pOFx88VGGOI-X9mHsomnquPySAFAWbW6JlrFYtYIgKU/\nhttps://en.eyeka.com/u/0mmo\nhttp://gitlab.aic.ru/0mmo\nhttp://www.asmetalwork.1gb.ua/forum/user/edit/56363.page\nhttps://band.us/band/86095136\nhttps://www.tripline.net/0mmo/\nhttps://bookme.name/0mmonet\nhttps://able2know.org/user/0mmo/\nhttps://profile.hatena.ne.jp/huyss/profile\nhttps://lackky.com/0mmonet\nhttps://www.webmasterpro.de/user/0mmonet/\nhttps://openuserjs.org/users/0mmo\nhttps://www.linkedin.com/in/0mmo/", "Finish": "No description available.", "categories_list_for_asos": "List categories from Asos", "extract_for_mobile_phone_validation": "Find and format/validate Phone/Cell numbers in given text.\n    \nCountry used to identify number format and highly recommended to set value in case you know it (as example your shop works only in US and clients have US cellnumbers).\n    \nUse 'country_auto' param in case you can't provide Country and service will try to guess the country :). Country recognition not very fast. Read docs to explain possible values.", "fraudsentinel_for_fraudsentinel": "Detailed JSON data from hundreds of IP classification databases.", "get_jokes_by_specific_category_for_world_of_jokes": "Access our huge collection of jokes of specific category and paginate through them based on your desired limit and sorting criteria.", "get_u_54_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "getaccount_for_heywatch_video_encoding": "Get account information", "getnewsletters_for_election2020_smartable": "Get election 2020 newsletters", "matches_for_bet_at_home": "Latest matches by Bet-at-Home", "odds_for_bet_at_home": "Latest Odds by Bet-at-Home", "origin_for_catbreeddb": "Gives a list of all cats with the origin country.", "preview_gettrackmasterstatus_for_landr_mastering_v1": "Rate Limits: 100 requests per minute\n            ", "search_by_coordinates_for_zillow_data_v2": "Search by coordinates", "search_video_for_tiktok_video_no_watermark_v2": "Search video"}, "aseqs": [{"api_name": "odds_for_bet_at_home", "api_action": "\nAction: odds_for_bet_at_home\nAction Input: {}", "api_reaction": null}, {"api_name": "matches_for_bet_at_home", "api_action": "\nAction: matches_for_bet_at_home\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "odds_for_bet_at_home"}}, {"state": "generated_by_agent", "aseq": {"api_name": "matches_for_bet_at_home"}}, {"state": "generated_by_agent", "aseq": {"api_name": "odds_for_bet_at_home"}}]}
{"URL": "47909", "query": "I'm planning a trip to Vancouver next month and I need some information about nearby places. Can you provide me with a list of coffee shops, restaurants, and parks within a radius of 500 meters from my hotel? Also, include their addresses and distances from my location.", "api_names": ["nearby_arcgis_for_nearby_places", "types_arcgis_for_nearby_places", "Finish", "latest_earthquake_for_indonesia_latest_weather_and_earthquake", "test_api_for_skyscanner_v2", "total_count_for_mcapi", "getmentions_for_get_twitter_mentions", "email_for_soti_sync", "getseries_for_the_cancer_imaging_archive", "template_download_for_xlsx_template", "list_of_room_types_for_booking_com", "get_amazon_search_results_for_amazon_data_scraper_v2", "cash_flow_statement_for_finshorts", "search_music_for_tiktok_video_no_watermark_v2", "basic_endpoint_for_beekeeping_research"], "api_descs": {"Finish": "No description available.", "basic_endpoint_for_beekeeping_research": "See full docs on https://research.docs.beekeeping.io", "cash_flow_statement_for_finshorts": "Finshorts provide companies cash flow statement in realtime", "email_for_soti_sync": "Fetch Customer Email", "get_amazon_search_results_for_amazon_data_scraper_v2": "Get Amazon Search results", "getmentions_for_get_twitter_mentions": "Find your brand, competitor, or any other query mentions across Twitter", "getseries_for_the_cancer_imaging_archive": "Returns a set of series objects filtered by query keys", "latest_earthquake_for_indonesia_latest_weather_and_earthquake": "Latest Earthquake", "list_of_room_types_for_booking_com": "Returns room types names", "nearby_arcgis_for_nearby_places": "Returns nearby places sorted by distance from the origin coordinates in ascending order.\n\nOnly type values from **/v2/types (ArcGIS)** are valid.\n\nMaximum returned places is 50.", "search_music_for_tiktok_video_no_watermark_v2": "Search music", "template_download_for_xlsx_template": "Download template file from Cloud storage", "test_api_for_skyscanner_v2": "This API is to test if server is up and running", "total_count_for_mcapi": "Get total count of entries", "types_arcgis_for_nearby_places": "Types (categories) of establishments. These types will only work with **/v2/nearby (ArcGIS)**."}, "aseqs": [{"api_name": "nearby_arcgis_for_nearby_places", "api_action": "\nAction: nearby_arcgis_for_nearby_places\nAction Input: {\n  \"lng\": -123.1207,\n  \"lat\": 49.2827,\n  \"radius\": 500,\n  \"type\": \"coffee shop\"\n}", "api_reaction": null}, {"api_name": "types_arcgis_for_nearby_places", "api_action": "\nAction: types_arcgis_for_nearby_places\nAction Input: {}", "api_reaction": null}, {"api_name": "nearby_arcgis_for_nearby_places", "api_action": "\nAction: nearby_arcgis_for_nearby_places\nAction Input: {\n  \"lng\": -123.1207,\n  \"lat\": 49.2827,\n  \"radius\": 500,\n  \"type\": \"restaurant\"\n}", "api_reaction": null}, {"api_name": "nearby_arcgis_for_nearby_places", "api_action": "\nAction: nearby_arcgis_for_nearby_places\nAction Input: {\n  \"lng\": -123.1207,\n  \"lat\": 49.2827,\n  \"radius\": 500,\n  \"type\": \"park\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "nearby_arcgis_for_nearby_places"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_arcgis_for_nearby_places", "api_action": "\nAction: nearby_arcgis_for_nearby_places\nAction Input: {\n  \"lng\": -123.1207,\n  \"lat\": 49.2827,\n  \"radius\": 500,\n  \"type\": \"restaurant\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_arcgis_for_nearby_places", "api_action": "\nAction: nearby_arcgis_for_nearby_places\nAction Input: {\n  \"lng\": -123.1207,\n  \"lat\": 49.2827,\n  \"radius\": 500,\n  \"type\": \"restaurant\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_arcgis_for_nearby_places", "api_action": "\nAction: nearby_arcgis_for_nearby_places\nAction Input: {\n  \"lng\": -123.1207,\n  \"lat\": 49.2827,\n  \"radius\": 500,\n  \"type\": \"park\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "nearby_arcgis_for_nearby_places", "api_action": "\nAction: nearby_arcgis_for_nearby_places\nAction Input: {\n  \"lng\": -123.1207,\n  \"lat\": 49.2827,\n  \"radius\": 500,\n  \"type\": \"restaurant park coffee shop\"\n}", "api_reaction": null}}]}
{"URL": "83741", "query": "I'm considering buying a property in Cape Coral, Florida. Can you provide me with a list of available condos and townhouses in Cape Coral? Additionally, I would like to see an image of the city.", "api_names": ["getlistings_for_florida_realty_api", "getimage_for_florida_realty_api", "Finish", "get_realtime_rates_for_realtime_crypto_prices", "air_quality_history_for_air_quality", "get_vods_for_league_of_legends_esports", "user_search_for_instagram_v5", "get_symbols_from_exchange_for_tradingview_ta_api_technical_analysis_", "validate_iban_for_iban_validation", "list_user_comments_for_soundcloud_scraper", "job_for_seo_api", "search_for_flixster"], "api_descs": {"Finish": "No description available.", "air_quality_history_for_air_quality": "Returns the past 24 hours of air quality observations for any point in the world given a lat/lon.", "get_realtime_rates_for_realtime_crypto_prices": "Returns Realtime price of a coin", "get_symbols_from_exchange_for_tradingview_ta_api_technical_analysis_": "Get symbol list from exchange.", "get_vods_for_league_of_legends_esports": "In this api method you can get all previous event , match game information. You can search by tournaments id and you can get this value from the Get Tournaments For League endpoint.", "getimage_for_florida_realty_api": "Load images of cities you retrieve by calling getCities().", "getlistings_for_florida_realty_api": "Use this endpoint to retrieve a list of condominiums and townhouses in Southwest Florida and on the East Coast.", "job_for_seo_api": "Perform Job Search\n\nCurrently only supports jobs in North America\n\nParameters\n----------\nquery : Position Title and Location (optional). The query should be url encoded\n\nReturns\n-------\njson: a list of jobs with their link to apply, description, and title for each job opportunity", "list_user_comments_for_soundcloud_scraper": "This endpoint lists a user's comments.", "search_for_flixster": "Search for movies, actors, theaters by term and phrase", "user_search_for_instagram_v5": "Get Instagram users by keyword.", "validate_iban_for_iban_validation": "Validate IBAN"}, "aseqs": [{"api_name": "getlistings_for_florida_realty_api", "api_action": "\nAction: getlistings_for_florida_realty_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getimage_for_florida_realty_api", "api_action": "\nAction: getimage_for_florida_realty_api\nAction Input: {\n  \"filename\": \"cape_coral.jpg\"\n}", "api_reaction": null}, {"api_name": "getlistings_for_florida_realty_api", "api_action": "\nAction: getlistings_for_florida_realty_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getimage_for_florida_realty_api", "api_action": "\nAction: getimage_for_florida_realty_api\nAction Input: {\n  \"filename\": \"cape_coral.jpg\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getlistings_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getimage_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlistings_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlistings_for_florida_realty_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getlistings_for_florida_realty_api"}}]}
{"URL": "7497", "query": "I recently visited Viva City and I was impressed by the menu. I would like to know more about the menu items at venue 5a76c927bb5d660001e09731. Can you provide me with the menu category, price, availability, rules, items in set, and other relevant details? Please use the language 'zh-hans' for the menu details.", "api_names": ["menudetails_for_viva_city_documentation", "Finish", "get_a_random_wisdom_quote_for_wisdom_quotes", "download_for_reword_pdf", "artist_discography_overview_for_spotify_web", "health_for_utile_space", "getinventory_for_apfd", "getmarkets_for_kalshi_trading_api"], "api_descs": {"Finish": "No description available.", "artist_discography_overview_for_spotify_web": "Get artist discography overview", "download_for_reword_pdf": " ", "get_a_random_wisdom_quote_for_wisdom_quotes": "Returns a JSON object which includes a random wisdom quote and its related id.", "getinventory_for_apfd": "Returns a map of status codes to quantities", "getmarkets_for_kalshi_trading_api": "Endpoint for listing and discovering markets on Kalshi.", "health_for_utile_space": "API health information.", "menudetails_for_viva_city_documentation": "Get menu details using KV (need resync to get latest data) and filter dynamic multi language data based on query params."}, "aseqs": [{"api_name": "menudetails_for_viva_city_documentation", "api_action": "\nAction: menudetails_for_viva_city_documentation\nAction Input: {\n  \"is_id\": \"5a76c927bb5d660001e09731\",\n  \"lang\": \"zh-hans\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "menudetails_for_viva_city_documentation"}}, {"state": "generated_by_agent", "aseq": {"api_name": "menudetails_for_viva_city_documentation"}}]}
{"URL": "29554", "query": "Please fetch the details of my most recent translation order and also provide me with the translation rates for Spanish to German.", "api_names": ["Finish", "rates_for_nitro", "account_for_nitro", "get_a_specific_order_for_nitro", "get_character_by_id_for_riordanverse_api", "races_for_f1_live_motorsport_data", "get_weak_keys_for_iotvas", "financial_balance_sheet_for_macrotrends_finance", "nps_template_for_nps_net_promoter_score", "memre_api_v1_readiness_for_learning_engine", "get_stronghold_item_recipes_for_lost_ark_simple", "results_for_timedb", "categorize_website_for_website_categorization_api", "choice_endpoint_for_vadym_rock_paper_scissors_api", "profiles_for_bogieapis", "isochrone_for_mymappi"], "api_descs": {"Finish": "No description available.", "account_for_nitro": "This endpoint retrieves an account.", "categorize_website_for_website_categorization_api": "Returns the top 3 categories for any website.", "choice_endpoint_for_vadym_rock_paper_scissors_api": "User's selection", "financial_balance_sheet_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.", "get_a_specific_order_for_nitro": "This endpoint retrieves a specific order.", "get_character_by_id_for_riordanverse_api": "Get individual character by ID\nOptions:\n\n- Limit → Limit amount of responses received\n- Step → Skip amount of characters", "get_stronghold_item_recipes_for_lost_ark_simple": "Get List of Lost Ark Stronghold Item Recipes", "get_weak_keys_for_iotvas": " ", "isochrone_for_mymappi": "The Isochrone API allows you to request polygon or line features that show areas that are reachable within a few specified amounts of time from a certain location in different routing profiles (car, on foot and soon bike and public transport).", "memre_api_v1_readiness_for_learning_engine": "Get the readiness of the user for the specified item.\n", "nps_template_for_nps_net_promoter_score": "Get a summary of NPS calculation for a given template. It considers the overall answers related to that template and consolidates in a global NPS indicator. A time period is mandatory (start_date and  end_date) to narrow the results, otherwise, it will consider the last 24hs.", "profiles_for_bogieapis": "asd", "races_for_f1_live_motorsport_data": "Lists races and session details for a given season", "rates_for_nitro": "This endpoint retrieves all rates.", "results_for_timedb": "Returns latest results for a query associated to a given `webhookId`."}, "aseqs": [{"api_name": "account_for_nitro", "api_action": "\nAction: account_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "get_a_specific_order_for_nitro", "api_action": "\nAction: get_a_specific_order_for_nitro\nAction Input: {\n  \"is_id\": \"most_recent\"\n}", "api_reaction": null}, {"api_name": "rates_for_nitro", "api_action": "\nAction: rates_for_nitro\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro"}}, {"state": "generated_by_agent", "aseq": {"api_name": "rates_for_nitro", "api_action": "\nAction: rates_for_nitro\nAction Input: {\n  \"languages\": [\n    {\n      \"from_language\": \"Spanish\",\n      \"to_language\": \"German\"\n    }\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_a_specific_order_for_nitro", "api_action": "\nAction: get_a_specific_order_for_nitro\nAction Input: {\n  \"is_id\": \"most_recent\"\n}", "api_reaction": null}}]}
{"URL": "36915", "query": "I'm a financial analyst and I need to gather information about a specific stock. Can you provide me with the earnings history, cash flow statements, asset profile, recommendation trends, balance sheet data, and institution ownership for the stock symbol AAPL?", "api_names": ["stock_cashflow_statement_for_yahoo_finance_v2", "stock_profile_for_yahoo_finance_v2", "Finish", "stock_institution_ownership_for_yahoo_finance_v2", "stock_earnings_for_yahoo_finance_v2", "stock_recommendation_trend_for_yahoo_finance_v2", "us_al_for_us_gas_prices", "get_all_district_capital_for_district_capitals_in_ghana", "caiso_for_caiso", "get_nba_betting_odds_for_tank01_fantasy_stats", "data_of_countries_in_json_format_for_flight_data_v2", "searchfollowers_for_instagram_v6", "get_stations_for_noaa_tides", "mini_chart_for_chart_img", "year_fractions_for_date_calculator", "current_weather_data_for_open_weather_map", "query_for_ldu_boundary_by_h3index_for_ca_boundaries_io", "search_for_airplanesdb", "product_for_bigbox", "get_epic_free_games_coming_soon_for_epic_free_games"], "api_descs": {"Finish": "No description available.", "caiso_for_caiso": "Gets standard CAISO data", "current_weather_data_for_open_weather_map": "current weather data", "data_of_countries_in_json_format_for_flight_data_v2": "API returns a file with a list of countrys from the database", "get_all_district_capital_for_district_capitals_in_ghana": "The endpoint retrieves all the district capitals", "get_epic_free_games_coming_soon_for_epic_free_games": "Get Epic Free Games - Coming Soon", "get_nba_betting_odds_for_tank01_fantasy_stats": "This grabs NBA betting/gambling lines and odds from some of the most popular online sportsbooks (fanduel, betrivers, betmgm, caesars, pointsbet, etc). \n\nYou can call this for specific game or a specific date.  Check out the example responses here for the type of data you can expect back.   Some of the sportsbooks do not offer live betting, so data from those sportsbooks will not be returned after the game starts.  \n\n\nEither gameDate or gameID is required.\nExamples of what the calls can look like:\n/getNBABettingLines?gameDate=20221227\n/getNBABettingLines?gameID=20221227_DEN@SAC", "get_stations_for_noaa_tides": "Get list of all NOAA stations that provide tide predictions to be used in other endpoints.", "mini_chart_for_chart_img": "This endpoint captures TradingView mini chart image.", "product_for_bigbox": "The Product Parameters are applicable when making a request with `type=product` to retrieve details of a single product on Home Depot - the product is specified using either the item_id parameter or the url parameter (where the url parameter contains a link to a Home Depot product page). The parameters should be appended as querystring parameters to the Home Depot Product Data APIGETHTTP request.\n\nProduct details are retrieved from the product page for a single product on Home Depot", "query_for_ldu_boundary_by_h3index_for_ca_boundaries_io": "Query for Boundary by H3Index.\nQuery for a LDU boundary by H3 Index, if a LDU Postal Code does not exist within the H3 Index Hexagon, an empty FeatureCollection is returned.\n\n**H3Index resolution must be greater than 8.**", "search_for_airplanesdb": "Search airplane by name.", "searchfollowers_for_instagram_v6": "search someone's followers", "stock_cashflow_statement_for_yahoo_finance_v2": "Get stock cash flow statements.", "stock_earnings_for_yahoo_finance_v2": "Get earnings information for a particular stock", "stock_institution_ownership_for_yahoo_finance_v2": "Get stock institution ownership.", "stock_profile_for_yahoo_finance_v2": "Get stock profile information such as company name, descriptions, website, etc...", "stock_recommendation_trend_for_yahoo_finance_v2": "Get stock recommendations and trends.", "us_al_for_us_gas_prices": "Returns current gas price data for Alabama. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.", "year_fractions_for_date_calculator": "Computes and returns the year fraction for a period time in the specified day count convention."}, "aseqs": [{"api_name": "stock_earnings_for_yahoo_finance_v2", "api_action": "\nAction: stock_earnings_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "stock_cashflow_statement_for_yahoo_finance_v2", "api_action": "\nAction: stock_cashflow_statement_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "stock_profile_for_yahoo_finance_v2", "api_action": "\nAction: stock_profile_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "stock_recommendation_trend_for_yahoo_finance_v2", "api_action": "\nAction: stock_recommendation_trend_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "stock_institution_ownership_for_yahoo_finance_v2", "api_action": "\nAction: stock_institution_ownership_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "stock_earnings_for_yahoo_finance_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_cashflow_statement_for_yahoo_finance_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_profile_for_yahoo_finance_v2", "api_action": "\nAction: stock_profile_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_recommendation_trend_for_yahoo_finance_v2", "api_action": "\nAction: stock_recommendation_trend_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_institution_ownership_for_yahoo_finance_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stock_cashflow_statement_for_yahoo_finance_v2", "api_action": "\nAction: stock_cashflow_statement_for_yahoo_finance_v2\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}}]}
{"URL": "51513", "query": "I am interested in knowing the balance history for my Bitcoin address '321x69Cb9HZLWwAWGiUBT1U81r1zPLnEjL'. Please retrieve the balance history grouped by intervals of 1 hour, including the transaction count, received amount, sent amount, and the amount sent to self. Additionally, provide the rates in USD and EUR for each interval.", "api_names": ["get_balance_history_v2_for_chain49", "Finish", "company_income_statement_for_real_time_finance_data", "allanswersforms_for_acopaer", "get_list_of_voices_for_text_to_speech_pro", "type_for_phone_validator_api", "getinterestinglistings_for_etsy", "top_paid_games_for_store_apps", "leaguedetails_for_handballapi", "email_for_email_validator_v5", "getaccountbyid_for_13", "weather_for_currencyconverter"], "api_descs": {"Finish": "No description available.", "allanswersforms_for_acopaer": "# Description GET All Answers Forms\r\n\r\nThis url is to get all Answers Forms created is type `GET`, the url is `BASE_URL/answers-forms` and returns an array of objects or only an object depends on how many are there.\r\n\r\nClick [here](https://strapi.io/documentation/v3.x/content-api/parameters.html#available-operators) for more info about params.", "company_income_statement_for_real_time_finance_data": "Get public company's **quarterly** or **annual** income statement. Supports the *stock* type only.", "email_for_email_validator_v5": "This API will validate email with domain name, it is use to filter out invalid email and invalid domain, to perfact match delivery rate and minimum email bounce", "get_balance_history_v2_for_chain49": "Returns a balance history for the specified XPUB or address\n\nThe value of sentToSelf is the amount sent from the same address to the same address or within addresses of xpub.", "get_list_of_voices_for_text_to_speech_pro": "Get List of Voices", "getaccountbyid_for_13": "Retrieves an account", "getinterestinglistings_for_etsy": "Collects the list of interesting listings", "leaguedetails_for_handballapi": "Get details of a handball unique tournament by ID", "top_paid_games_for_store_apps": "Top paid games chart.", "type_for_phone_validator_api": "Returns phone number type (`fixed line`, `mobile`, `toll free`, etc); or `undefined` if the number is invalid or if there are no phone number type regular expressions for this country in metadata.", "weather_for_currencyconverter": "aaaaaaaa"}, "aseqs": [{"api_name": "get_balance_history_v2_for_chain49", "api_action": "\nAction: get_balance_history_v2_for_chain49\nAction Input: {\n  \"addressorxpub\": \"321x69Cb9HZLWwAWGiUBT1U81r1zPLnEjL\",\n  \"blockchain\": \"bitcoin\",\n  \"groupby\": 3600,\n  \"fiatcurrency\": \"usd,eur\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_balance_history_v2_for_chain49"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_balance_history_v2_for_chain49"}}]}
{"URL": "10687", "query": "I want to improve my betting skills and make informed decisions. Can you give me a list of active premium tips for football matches? It would also be helpful to have the historical results of these tips for the past 30 days. Thank you!", "api_names": ["premium_tips_for_betigolo_tips", "premium_history_for_betigolo_tips", "Finish", "list_existing_compensations_for_co2_offset", "article_page_for_climate_news_feed", "get_all_motivational_pictures_for_motivational_content", "transaction_id_for_uniswap_v2_api", "user_by_rest_id_for_twitter_v2", "listofattributeandvalueoptions_for_sandbox_mktplace_eu_01_products", "index_for_fear_and_greed_index", "estimated_salary_for_jsearch", "getdocumentproperty_for_aspose_tasks_cloud"], "api_descs": {"Finish": "No description available.", "article_page_for_climate_news_feed": "Get articles in pages", "estimated_salary_for_jsearch": "Get estimated salaries for a jobs around a location", "get_all_motivational_pictures_for_motivational_content": "This endpoint fetches all the pictures. However, you can use 'skip' and 'limit' parameters to do pagination.", "getdocumentproperty_for_aspose_tasks_cloud": " ", "index_for_fear_and_greed_index": "Actual Fear and Greed index", "list_existing_compensations_for_co2_offset": "Returns a list of all existing co2offset certificates linked to account.", "listofattributeandvalueoptions_for_sandbox_mktplace_eu_01_products": "API Instructions: https://www.mktplace.eu/api-instructions-i-32.html\n\nSell on mktplace.eu: https://www.mktplace.eu/sell-on-mktplace-i-25.html", "premium_history_for_betigolo_tips": "Historical result of Premium Tips in past 30 days", "premium_tips_for_betigolo_tips": "List of active Premium Tips", "transaction_id_for_uniswap_v2_api": "Return the info of the Transaction by the address", "user_by_rest_id_for_twitter_v2": "Get User By Rest ID"}, "aseqs": [{"api_name": "premium_tips_for_betigolo_tips", "api_action": "\nAction: premium_tips_for_betigolo_tips\nAction Input: {}", "api_reaction": null}, {"api_name": "premium_history_for_betigolo_tips", "api_action": "\nAction: premium_history_for_betigolo_tips\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "premium_tips_for_betigolo_tips"}}, {"state": "generated_by_agent", "aseq": {"api_name": "premium_history_for_betigolo_tips"}}, {"state": "generated_by_agent", "aseq": {"api_name": "premium_tips_for_betigolo_tips"}}]}
{"URL": "36152", "query": "I want to explore the surroundings of my current location, postcode 'SW1A1AA'. Can you find all the postcodes within a 1 km radius and provide the latitude and longitude for each of these postcodes?", "api_names": ["geocode_for_dargan", "in_radius_for_dargan", "Finish", "ok_ru_emb_link_for_football_highlight", "user_tv_channel_for_instagram_v13", "user_following_for_twitter_v2", "getting_full_details_for_tiktok_full_video_info_without_watermark_", "fixtures_by_date_for_rugby_live_data", "inplay_for_sports_betting_api", "commodity_indices_for_investing", "get_video_status_for_api_video", "search_content_for_url_content_extractor"], "api_descs": {"Finish": "No description available.", "commodity_indices_for_investing": "page source : https://www.investing.com/indices/commodities-indices", "fixtures_by_date_for_rugby_live_data": "Returns fixtures and results by date. When date is not present, defaults to today.", "geocode_for_dargan": "Returns the latitude and longitude for a given postcode", "get_video_status_for_api_video": "This API provides upload status & encoding status to determine when the video is uploaded or ready to playback.\n\nOnce encoding is completed, the response also lists the available stream qualities.", "getting_full_details_for_tiktok_full_video_info_without_watermark_": "Tiktok videos with full info \n- video without watermark (HD)\n- cover / music\n- share / likes / comments\n- and more", "in_radius_for_dargan": "Find all postcodes within a certain radius (in KM) of a postcode", "inplay_for_sports_betting_api": "Inplay List", "ok_ru_emb_link_for_football_highlight": "Ok.RU Emb Link", "search_content_for_url_content_extractor": "Allows you to search content for content based on a query.", "user_following_for_twitter_v2": "Get User Following", "user_tv_channel_for_instagram_v13": "Get instagram user tv channel by user id."}, "aseqs": [{"api_name": "in_radius_for_dargan", "api_action": "\nAction: in_radius_for_dargan\nAction Input: {\n  \"postcode\": \"SW1A1AA\",\n  \"radius\": 1\n}", "api_reaction": null}, {"api_name": "in_radius_for_dargan", "api_action": "\nAction: in_radius_for_dargan\nAction Input: {\n  \"postcode\": \"SW1A 1AA\",\n  \"radius\": 1\n}", "api_reaction": null}, {"api_name": "geocode_for_dargan", "api_action": "\nAction: geocode_for_dargan\nAction Input: {\n  \"postcode\": \"SW1A 1AA\"\n}", "api_reaction": null}, {"api_name": "in_radius_for_dargan", "api_action": "\nAction: in_radius_for_dargan\nAction Input: {\n  \"postcode\": \"SW1A 1AA\",\n  \"radius\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "in_radius_for_dargan"}}, {"state": "generated_by_agent", "aseq": {"api_name": "geocode_for_dargan"}}, {"state": "generated_by_agent", "aseq": {"api_name": "geocode_for_dargan"}}, {"state": "generated_by_agent", "aseq": {"api_name": "in_radius_for_dargan", "api_action": "\nAction: in_radius_for_dargan\nAction Input: {\n  \"postcode\": \"SW1A1AA\",\n  \"radius\": 1\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "in_radius_for_dargan", "api_action": "\nAction: in_radius_for_dargan\nAction Input: {\n  \"postcode\": \"SW1A1AA\",\n  \"radius\": 1\n}", "api_reaction": null}}]}
{"URL": "72396", "query": "I'm organizing an AI conference and I need information about AI companies and influential people in the field. Can you provide me with a list of AI companies and AI influencers? For the companies, I'm interested in their names, overviews, websites, locations, and LinkedIn profiles. For the influencers, I would like to know their names, bios, locations, and Twitter profiles.", "api_names": ["Finish", "getpeople_for_a_i_smartable", "getcompanies_for_a_i_smartable", "tournament_fixture_for_basketball_data", "summarize_for_article_extractor_and_summarizer", "city_by_id_for_referential", "following_by_username_for_instagram_pro", "music_info_for_tiktok_v3", "get_products_in_category_for__demo_project", "properties_list_for_booking", "dolar_for_proclima", "get_user_highlights_tray_by_user_id_for_instagram_api_2023", "player_injuries_for_baseball_datafeeds_by_rolling_insights", "neighbours_for_australian_suburbs", "fighters_for_spectation_sports_events_api", "optimize_for_optlog_co_optimize_anything", "getallsolutions_for_pocket_cube_solver", "get_product_reviews_in_turkey_for_amazon_turkey_data_scrapeer"], "api_descs": {"Finish": "No description available.", "city_by_id_for_referential": "Direct lookup of over 75,000 cities by id. See the v1/city API to search for city ids.", "dolar_for_proclima": "dolar", "fighters_for_spectation_sports_events_api": "Get a list of fighters", "following_by_username_for_instagram_pro": "Instagram Following List by username, Up to 1000 records", "get_product_reviews_in_turkey_for_amazon_turkey_data_scrapeer": "This endpoint can get you product reviews in amazon tr products. This method is required the product id in the amazon tr page if you don't know you can get search with my method to. And you need to api_key scraperapi you can get easly in this site ; https://www.scraperapi.com/", "get_products_in_category_for__demo_project": " ", "get_user_highlights_tray_by_user_id_for_instagram_api_2023": "Get user's all highlight `highlight_id` from this endpoint. To get all medias of a particular highlight please use next endpoint.", "getallsolutions_for_pocket_cube_solver": "Returns json data consisting of all the solutions of a given cube position.", "getcompanies_for_a_i_smartable": "Get artificial intelligence companies.", "getpeople_for_a_i_smartable": "Get artificial intelligence influencers, entrepreneurs and top researchers.", "music_info_for_tiktok_v3": "get music information by music_id", "neighbours_for_australian_suburbs": "Find neighbouring suburbs based on the distance in km.", "optimize_for_optlog_co_optimize_anything": "get", "player_injuries_for_baseball_datafeeds_by_rolling_insights": "Returns a record of each player's injury on a team", "properties_list_for_booking": "List properties having type of resorts, hotels, motels, hostels, etc as on official site", "summarize_for_article_extractor_and_summarizer": "Summarizes the article after extracting it from the specified url.", "tournament_fixture_for_basketball_data": "Full match list with quarter, half time and final scores with venue info."}, "aseqs": [{"api_name": "getcompanies_for_a_i_smartable", "api_action": "\nAction: getcompanies_for_a_i_smartable\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "getpeople_for_a_i_smartable", "api_action": "\nAction: getpeople_for_a_i_smartable\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getcompanies_for_a_i_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpeople_for_a_i_smartable"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcompanies_for_a_i_smartable"}}]}
{"URL": "87342", "query": "I'm organizing a company event and we want to provide a variety of food options for our employees. Can you suggest different types of cuisine available near our office? We would like to see a list of restaurants and their menus. Thank you!", "api_names": ["search_result_for_location_v2", "Finish", "airports_direct_routes_for_an_airport_for_timetable_lookup_", "language_list_for_real_time_news_data", "get_call_for_india_pan_card_ocr", "mail_config_get_for_xlsx_template", "get_all_police_news_for_german_police_and_crime_news_live", "get_version_for_brand_recognition"], "api_descs": {"Finish": "No description available.", "airports_direct_routes_for_an_airport_for_timetable_lookup_": "Returns a list of direct routes for an airport", "get_all_police_news_for_german_police_and_crime_news_live": "This endpoint will return back all news about police, crime, accidents and more like this from germany.", "get_call_for_india_pan_card_ocr": "Used to fetch api result using the request id received in responses.", "get_version_for_brand_recognition": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "language_list_for_real_time_news_data": "Get valid languages for a country code, to be used with all other APIs.", "mail_config_get_for_xlsx_template": "Get a mail confing from cloud database", "search_result_for_location_v2": "We are providing a location search result according to your search query,1"}, "aseqs": [{"api_name": "search_result_for_location_v2", "api_action": "\nAction: search_result_for_location_v2\nAction Input: {\n  \"q\": \"restaurants near our office\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_result_for_location_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_result_for_location_v2"}}]}
{"URL": "4776", "query": "I want to surprise my family with a ski vacation to Jackson Hole. Can you give me the 5-day forecast for the resort, including the maximum and minimum temperatures, wind speed and direction, snowfall, and rain? Also, please give me the current snow conditions, including the top and bottom snow depths and any recent snowfall.", "api_names": ["current_snow_conditions_for_ski_resort_forecast", "5_day_forecast_for_ski_resort_forecast", "Finish", "getreviews_for_google_reviews_scraper", "getdiscusage_for_groupdocs_comparison_cloud", "one_michellin_restaurant_for_restaurant", "assetbyid_for_bravenewcoin", "conversions_hits_for_clickmeter", "openapi_openapi_json_get_for_places_in_radius", "gethardquestion_for_leetcodeapi", "artist_discography_overview_for_spotify_data", "calculate_geogrid_coordinate_points_for_google_local_rank_tracker"], "api_descs": {"5_day_forecast_for_ski_resort_forecast": "Returns the 5 day forecast for a given resort name", "Finish": "No description available.", "artist_discography_overview_for_spotify_data": "artist-discography-overview", "assetbyid_for_bravenewcoin": "Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint.", "calculate_geogrid_coordinate_points_for_google_local_rank_tracker": "Get all grid coordinate points based on a center geocoordinate point and distance arguments.", "conversions_hits_for_clickmeter": "A detailed hits list for the last 90 days maximum by conversion", "current_snow_conditions_for_ski_resort_forecast": "Returns the current snow conditions for a given resort name", "getdiscusage_for_groupdocs_comparison_cloud": " ", "gethardquestion_for_leetcodeapi": "Get the number of hard questions solved by the user.", "getreviews_for_google_reviews_scraper": "with this endpoint you can all reviews for any business searched  with pagination", "one_michellin_restaurant_for_restaurant": "Only one restaurant.", "openapi_openapi_json_get_for_places_in_radius": " "}, "aseqs": [{"api_name": "5_day_forecast_for_ski_resort_forecast", "api_action": "\nAction: 5_day_forecast_for_ski_resort_forecast\nAction Input: {\n  \"resort\": \"Jackson Hole\"\n}", "api_reaction": null}, {"api_name": "current_snow_conditions_for_ski_resort_forecast", "api_action": "\nAction: current_snow_conditions_for_ski_resort_forecast\nAction Input: {\n  \"resort\": \"Jackson Hole\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "5_day_forecast_for_ski_resort_forecast"}}, {"state": "generated_by_agent", "aseq": {"api_name": "5_day_forecast_for_ski_resort_forecast"}}, {"state": "generated_by_agent", "aseq": {"api_name": "5_day_forecast_for_ski_resort_forecast", "api_action": "\nAction: 5_day_forecast_for_ski_resort_forecast\nAction Input: {\n  \"resort\": \"Jackson Hole\"\n}", "api_reaction": null}}]}
{"URL": "36607", "query": "My company is considering upgrading our technology infrastructure and we need to analyze the financials of potential vendors. Can you retrieve the balance sheet and financial details of companies in the technology industry for the past five years? It would also be helpful to see any upgrade and downgrade history for these companies. Thank you!", "api_names": ["Finish", "upgrade_downgrade_history_for_yh_finance_complete", "balansheet_financials_for_yh_finance_complete", "product_reviews_for_target_com_store_product_reviews_locations_data", "agent_s_rental_listings_for_zillow_v2", "search_query_for_web_novel_api", "url_for_news_sentiment", "find_zip_codes_by_city_and_district_for_polish_zip_codes", "collection_for_tle", "getbycords_for_electric_vehicle_charging_stations", "categories_list_for_amazon_data_v2", "1_autocomplete_for_stockyapiexchange", "leagues_ep1_for_football_test", "singular_object_v2_for_blackbox", "list_recent_transactions_for_coinbase", "samyutam_for_samyutam_eduction", "guessword_for_contextoguess", "using_path_parameters_for_ai_tool_gpt_token_splitter"], "api_descs": {"1_autocomplete_for_stockyapiexchange": "AUTOComplete: This feature allows users to easily search for stocks by providing suggested completions for a ticker symbol or company name as they type. It helps users find the right stock without having to know the exact spelling or symbol.", "Finish": "No description available.", "agent_s_rental_listings_for_zillow_v2": "Get agent's rental listings by zuid", "balansheet_financials_for_yh_finance_complete": "This endpoint returns a company/ stock financials", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "collection_for_tle": "Search records", "find_zip_codes_by_city_and_district_for_polish_zip_codes": "Return all zip codes located in city's district", "getbycords_for_electric_vehicle_charging_stations": "Uses Latitude & Longitude to get near by electric charging stations", "guessword_for_contextoguess": "guess a word and it will return the position it holds", "leagues_ep1_for_football_test": "leagues description", "list_recent_transactions_for_coinbase": "List a user's recent transactions.", "product_reviews_for_target_com_store_product_reviews_locations_data": "The endpoint returns product reviews", "samyutam_for_samyutam_eduction": "Rahul Name is Almost male", "search_query_for_web_novel_api": "Search the Novel Catalog for Query and returns results with Scoring etc.\n\nSearches:\n- Title\n- Author", "singular_object_v2_for_blackbox": "Note: This will work only with singular IP lookups.\n\nIf you are unkeen to lookup multiple IP addresses at the same time, and want a simpler request. This might be for you. \n\nWe will return a singular IP object, that will minimize your request complexity, but with the loss of flexibility.", "upgrade_downgrade_history_for_yh_finance_complete": "This endpoint returns a Upgrade Downgrade History.", "url_for_news_sentiment": "Input news URL", "using_path_parameters_for_ai_tool_gpt_token_splitter": "limited input text size, limited delimiter quantity."}, "aseqs": [{"api_name": "balansheet_financials_for_yh_finance_complete", "api_action": "\nAction: balansheet_financials_for_yh_finance_complete\nAction Input: {\n  \"is_from\": \"2016-01-01\",\n  \"to\": \"2021-12-31\",\n  \"symbol\": \"AAPL\",\n  \"period\": \"q\"\n}", "api_reaction": null}, {"api_name": "upgrade_downgrade_history_for_yh_finance_complete", "api_action": "\nAction: upgrade_downgrade_history_for_yh_finance_complete\nAction Input: {\n  \"is_from\": \"2016-01-01\",\n  \"to\": \"2021-12-31\",\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "balansheet_financials_for_yh_finance_complete", "api_action": "\nAction: balansheet_financials_for_yh_finance_complete\nAction Input: {\n  \"is_from\": \"2016-01-01\",\n  \"to\": \"2021-12-31\",\n  \"symbol\": \"GOOGL\",\n  \"period\": \"q\"\n}", "api_reaction": null}, {"api_name": "upgrade_downgrade_history_for_yh_finance_complete", "api_action": "\nAction: upgrade_downgrade_history_for_yh_finance_complete\nAction Input: {\n  \"is_from\": \"2016-01-01\",\n  \"to\": \"2021-12-31\",\n  \"symbol\": \"GOOGL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "balansheet_financials_for_yh_finance_complete"}}, {"state": "generated_by_agent", "aseq": {"api_name": "upgrade_downgrade_history_for_yh_finance_complete"}}, {"state": "generated_by_agent", "aseq": {"api_name": "balansheet_financials_for_yh_finance_complete", "api_action": "\nAction: balansheet_financials_for_yh_finance_complete\nAction Input: {\n  \"is_from\": \"2016-01-01\",\n  \"to\": \"2021-12-31\",\n  \"period\": \"a\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "balansheet_financials_for_yh_finance_complete", "api_action": "\nAction: balansheet_financials_for_yh_finance_complete\nAction Input: {\n  \"is_from\": \"2016-01-01\",\n  \"to\": \"2021-12-31\",\n  \"symbol\": \"MSFT\",\n  \"period\": \"q\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "balansheet_financials_for_yh_finance_complete"}}]}
{"URL": "36327", "query": "I need to search for the ticker symbol of the stock 'BTC-USD' and fetch its statistics, price, charts, and news. Moreover, I want to explore the market trends and see the indexes in Europe, Middle East, and Africa.", "api_names": ["market_trends_for_joj_finance", "ticker_for_joj_finance", "search_for_joj_finance", "Finish", "categorytournaments_for_esportapi", "country_details_level_2_for_countries_population", "get_artist_top_tracks_for_spotify_data_api", "get_list_of_github_repo_for_ruby_web_scrapping_for_github_api_scraper_", "product_reviews_for_real_time_amazon_data", "coindesk_for_crypto_news_v2", "getinventory_for_my_api_12345", "locations_search_for_seloger", "search_for_american_company_business_data", "senses_for_lexicala", "country_location_api_for_country_location_api", "list_categories_for_famous_quotes", "today_s_wordle_for_wordle_today", "top_stories_for_hacker_news", "getsupportedfileformats_for_groupdocs_merger_cloud", "nadeo_players_for_trackmania"], "api_descs": {"Finish": "No description available.", "categorytournaments_for_esportapi": "Get all leagues from a specific E-Sports category using the category ID.", "coindesk_for_crypto_news_v2": "Get the latest news from CoinDesk.", "country_details_level_2_for_countries_population": "Specified one valid param and retrieve access level 2 information about a country:\n- english name\n- ISO code 2\n- numeric code\n- population (in millions)\n\nValid params are country english name, ISO code 2 or ISO code 3", "country_location_api_for_country_location_api": "The Country Location API is a RESTful API that allows developers to retrieve location data for any country in the world. Using a GET request with a country parameter, the API retrieves information about the specified country, such as its name, capital city, region, subregion, population, languages, and currencies.", "get_artist_top_tracks_for_spotify_data_api": "Get artist top tracks by artist id", "get_list_of_github_repo_for_ruby_web_scrapping_for_github_api_scraper_": "Get list of GitHub repo for Ruby web scrapping", "getinventory_for_my_api_12345": "Returns a map of status codes to quantities", "getsupportedfileformats_for_groupdocs_merger_cloud": " ", "list_categories_for_famous_quotes": "List all available categories", "locations_search_for_seloger": "Search location by term or phrase", "market_trends_for_joj_finance": "Explore market trends", "nadeo_players_for_trackmania": "Get Players from nadeo.", "product_reviews_for_real_time_amazon_data": "Get and paginate through all product reviews on Amazon.", "search_for_american_company_business_data": "Search business contacts", "search_for_joj_finance": "Search for indexes, stocks, ETFs, cryptocurrencies, currencies and more", "senses_for_lexicala": "get specific sense by its unique ID", "ticker_for_joj_finance": "Get stats, price, charts, news and information about indexes, stocks, ETFs, cryptocurrencies, currencies and more", "today_s_wordle_for_wordle_today": "Get today's wordle word", "top_stories_for_hacker_news": "Returns the current top 100 stories."}, "aseqs": [{"api_name": "search_for_joj_finance", "api_action": "\nAction: search_for_joj_finance\nAction Input: {\n  \"q\": \"BTC-USD\"\n}", "api_reaction": null}, {"api_name": "ticker_for_joj_finance", "api_action": "\nAction: ticker_for_joj_finance\nAction Input: {\n  \"t\": \"BTC-USD\"\n}", "api_reaction": null}, {"api_name": "market_trends_for_joj_finance", "api_action": "\nAction: market_trends_for_joj_finance\nAction Input: {\n  \"t\": \"indexes\",\n  \"s\": \"europe-middle-east-africa\"\n}", "api_reaction": null}, {"api_name": "ticker_for_joj_finance", "api_action": "\nAction: ticker_for_joj_finance\nAction Input: {\n  \"t\": \"DAX:INDEXDB\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ticker_for_joj_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ticker_for_joj_finance", "api_action": "\nAction: ticker_for_joj_finance\nAction Input: {\n  \"symbol\": \"BTC-USD\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "market_trends_for_joj_finance"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_joj_finance", "api_action": "\nAction: search_for_joj_finance\nAction Input: {\n  \"q\": \"BTC-USD\",\n  \"type\": \"stock\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ticker_for_joj_finance", "api_action": "\nAction: ticker_for_joj_finance\nAction Input: {\n  \"t\": \"BTC-USD\"\n}", "api_reaction": null}}]}
{"URL": "17199", "query": "I'm researching real estate agents in Houston, TX. Could you assist me in finding agents in the area by their location and name? It would be helpful if you could provide their contact details, specialties, and reviews. If possible, please include their active listings as well.", "api_names": ["agent_reviews_for_zillow_v2", "agent_details_by_username_for_zillow_v2", "Finish", "search_for_agents_for_zillow_v2", "agent_s_active_listings_for_zillow_v2", "label_shapes_for_print_your_own_labels_and_stickers", "getallencodedvideos_for_heywatch_video_encoding", "carrier_endpoint_for_free_phone_carrier_lookup", "random_quote_for_tronald_dump", "flights_detail_for_flight_radar", "get_alerts_for_septa", "latin_america_for_nomad_list_cities", "v1_aircraft_for_aircraft_by_api_ninjas", "liquidation_report_for_liquidation_report", "igtv_for_ig_private_api", "reviews_list_deprecated_for_target", "states_details_for_city_and_state_search_api", "email_for_soti_sync", "search_event_details_for_mma_stats", "find_agents_auto_complete_for_zoopla"], "api_descs": {"Finish": "No description available.", "agent_details_by_username_for_zillow_v2": "Get agent's details by username(contact infos, active listings and reviews etc).\nPS : username is the profile link \nExample : \nusername :  Pardee-Properties\nfor https://www.zillow.com/profile/Pardee-Properties/", "agent_reviews_for_zillow_v2": "Get agent reviews by the agent's zuid", "agent_s_active_listings_for_zillow_v2": "Get agent's active listings by zuid", "carrier_endpoint_for_free_phone_carrier_lookup": "The phone number carrier provides useful information about location. Please any Bug contact me at @ta9ra9pa9 on Telegram", "email_for_soti_sync": "Fetch Customer Email", "find_agents_auto_complete_for_zoopla": "find-agents/auto-complete", "flights_detail_for_flight_radar": "Get detailed information of specific flight", "get_alerts_for_septa": "", "getallencodedvideos_for_heywatch_video_encoding": "Get all encoded videos of your account", "igtv_for_ig_private_api": "IGTV", "label_shapes_for_print_your_own_labels_and_stickers": "List of available label shapes.", "latin_america_for_nomad_list_cities": "Get Latin America cities sorted by overall score by default.\n\nPagination: size & page \nsort_by: you can sort by any numeric value like fore example internet_speed, temperatureC, cost_for_family_in_usd and so on.\nsort: asc | desc", "liquidation_report_for_liquidation_report": "Get the latest liquidation data from Binance, Bybit and OKX exchange. Data is limited to 1000 rows.", "random_quote_for_tronald_dump": "Retrieve a random quote.", "reviews_list_deprecated_for_target": "List reviews relating to a product", "search_event_details_for_mma_stats": "This lets you search for specific fights by the names of the fighters involved. The response returned by the API endpoint includes details such as the date of the fight, the name of the fighters involved, and the outcome of the fight.", "search_for_agents_for_zillow_v2": "Search for agents by location and name", "states_details_for_city_and_state_search_api": "This endpoint allows you to retrieve detailed information about a specific state by ID", "v1_aircraft_for_aircraft_by_api_ninjas": "API Ninjas Aircraft API endpoint. Returns a list of aircrafts that match the given parameters. This API only supports airplanes - for helicopter specs please use our Helicopter API.\n\nAt least one of the following parameters (excluding the limit parameter) must be set."}, "aseqs": [{"api_name": "search_for_agents_for_zillow_v2", "api_action": "\nAction: search_for_agents_for_zillow_v2\nAction Input: {\n  \"location\": \"Houston, TX\"\n}", "api_reaction": null}, {"api_name": "agent_details_by_username_for_zillow_v2", "api_action": "\nAction: agent_details_by_username_for_zillow_v2\nAction Input: {\n  \"username\": \"JamesKrueger\"\n}", "api_reaction": null}, {"api_name": "agent_reviews_for_zillow_v2", "api_action": "\nAction: agent_reviews_for_zillow_v2\nAction Input: {\n  \"zuid\": \"X1-ZUz3fc6ch3xp8p_10irz\"\n}", "api_reaction": null}, {"api_name": "agent_s_active_listings_for_zillow_v2", "api_action": "\nAction: agent_s_active_listings_for_zillow_v2\nAction Input: {\n  \"zuid\": \"X1-ZUz3fc6ch3xp8p_10irz\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_for_agents_for_zillow_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "agent_details_by_username_for_zillow_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "agent_s_active_listings_for_zillow_v2", "api_action": "{\"zuid\": \"65138\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "agent_s_active_listings_for_zillow_v2", "api_action": "\nAction: agent_s_active_listings_for_zillow_v2\nAction Input: {\n  \"zuid\": \"X1-ZUz3fc6ch3xp8p_10irz\"\n}", "api_retagion": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_agents_for_zillow_v2", "api_action": "\nAction: search_for_agents_for_zillow_v2\nAction Input: {\n  \"location\": \"Houston, TX\",\n  \"name\": \"John Doe\"\n}", "api_reaction": null}}]}
{"URL": "84524", "query": "I want to generate a random user profile for my friend. Can you generate a fake random user profile that includes a username, sex, address, name, email, and birthday? I would be really grateful!", "api_names": ["v1_randomuser_for_random_user_by_api_ninjas", "Finish", "airportmetar_for_flightera_flight_data", "sources_list_new_for_moka_news", "stock_get_stock_earnings_data_for_yh_finance_v2", "simple_text_without_tashkil_diacritical_for_quran_com", "venues_for_baseball", "account_transaction_history_for_optimism"], "api_descs": {"Finish": "No description available.", "account_transaction_history_for_optimism": "Get an array of all transactions of an address on the Optimism blockchain.", "airportmetar_for_flightera_flight_data": "Returns the most recent METAR for an airport specified by the given ident.\nIncludes a parsed version of the METAR.", "simple_text_without_tashkil_diacritical_for_quran_com": "Get Imlaei simple script(without tashkil/diacritical marks) of ayah.", "sources_list_new_for_moka_news": "Use this endpoint to get the list of all source.", "stock_get_stock_earnings_data_for_yh_finance_v2": "return stock earning data", "v1_randomuser_for_random_user_by_api_ninjas": "API Ninjas Random User API endpoint. Returns a fake random user profile.", "venues_for_baseball": "Baseball venues"}, "aseqs": [{"api_name": "v1_randomuser_for_random_user_by_api_ninjas", "api_action": "\nAction: v1_randomuser_for_random_user_by_api_ninjas\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v1_randomuser_for_random_user_by_api_ninjas"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v1_randomuser_for_random_user_by_api_ninjas"}}]}
{"URL": "23116", "query": "I'm a social media manager and I need to analyze the performance of our company's Instagram account. Please provide me with all the user information and stories associated with our account's username. Additionally, convert the media IDs to shortcodes for easier analysis.", "api_names": ["username_to_pk_convert_for_instagram_api_v2", "user_info_by_username_for_instagram_api_v2", "user_stories_by_username_for_instagram_api_v2", "Finish", "united_states_retail_and_recreation_mobility_for_covid_19_economic_impact", "get_service_status_for_address_monitor", "get_specified_users_micros_for_geeklist", "get_state_data_for_a_single_state_for_us_counties", "get_all_users_paged_by_hundreds_for_waifu", "get_for_iss_location", "generate_advance_base64_for_qr_code_generator", "languages_for_microsoft_translator_text", "country_for_greip", "user_info_for_tiktok_scraper_v2", "fee_payment_for_finhost", "playlist_videos_for_youtube", "get_markets_of_coin_for_coinlore_cryptocurrency", "prices_today_for_route_precedence_test_1", "rapidapigetobservationhistorybystationid_for_forecast", "tomorrow_for_show_air_dates"], "api_descs": {"Finish": "No description available.", "country_for_greip": "Country endpoint: Returns the information of a specific country by passing the `countrCode`.", "fee_payment_for_finhost": "Calculates transfer payment according to the fee plan", "generate_advance_base64_for_qr_code_generator": "Generates a QR code as base64 with additional settings.", "get_all_users_paged_by_hundreds_for_waifu": "Get all users paged by hundreds", "get_for_iss_location": "gets you the data", "get_markets_of_coin_for_coinlore_cryptocurrency": "Returns top 50 markets for coin", "get_service_status_for_address_monitor": "Get service status", "get_specified_users_micros_for_geeklist": "", "get_state_data_for_a_single_state_for_us_counties": "state", "languages_for_microsoft_translator_text": "Gets the set of languages currently supported by other operations of the Translator Text API.", "playlist_videos_for_youtube": "Playlist Videos", "prices_today_for_route_precedence_test_1": "/prices/today", "rapidapigetobservationhistorybystationid_for_forecast": "Get an History object with historical information.", "tomorrow_for_show_air_dates": "Shows airing tomorrow", "united_states_retail_and_recreation_mobility_for_covid_19_economic_impact": "Get daily United States percentage change in time spent at retail and recreation.", "user_info_by_username_for_instagram_api_v2": "Get all information of an Instagram account by  username", "user_info_for_tiktok_scraper_v2": "Get basic user information.", "user_stories_by_username_for_instagram_api_v2": "Get all stories of any Instagram account via username", "username_to_pk_convert_for_instagram_api_v2": "it converts any username on instagram to the unique id which is called pk"}, "aseqs": [{"api_name": "user_info_by_username_for_instagram_api_v2", "api_action": "\nAction: user_info_by_username_for_instagram_api_v2\nAction Input: {\n  \"username\": \"company_account\"\n}", "api_reaction": null}, {"api_name": "username_to_pk_convert_for_instagram_api_v2", "api_action": "\nAction: username_to_pk_convert_for_instagram_api_v2\nAction Input: {\n  \"username\": \"company_account\"\n}", "api_reaction": null}, {"api_name": "user_stories_by_username_for_instagram_api_v2", "api_action": "\nAction: user_stories_by_username_for_instagram_api_v2\nAction Input: {\n  \"username\": \"company_account\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_info_for_tiktok_scraper_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_stories_by_username_for_instagram_api_v2", "api_action": "\nAction: user_stories_by_username_for_instagram_api_v2\nAction Input: {\n  \"username\": \"company_account\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_stories_by_username_for_instagram_api_v2", "api_action": "\nAction: user_stories_by_username_for_instagram_api_v2\nAction Input: {\n  \"username\": \"company_account\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_info_by_username_for_instagram_api_v2", "api_action": "\nAction: user_info_by_username_for_instagram_api_v2\nAction Input: {\n  \"username\": \"company_account\"\n}", "api_reaction": null}}]}
{"URL": "37074", "query": "Can you provide the BMI for a person with a height of 160 cm and a weight of 50 kg? Additionally, calculate the BSA for this person.", "api_names": ["Finish", "bsa_for_clinicalmarkers", "bmi_for_clinicalmarkers", "search_event_details_for_mma_stats", "nfts_on_address_for__all_in_one_crypto_swiss_knife_", "2_mensagens_do_chat_chat_message_for_compras_net_api", "getwebhookbyid_for_signl4_critical_mobile_alerting", "comments_get_for_songmeanings", "list_conversions_for_clickmeter", "get_exercise_by_id_for_musclewiki", "search_quotes_for_semantic_quotes", "auto_complete_for_twitter_data", "traders_with_positions_for_bybit_leaderboard", "tournament_standings_for_football_data", "walk_score_for_walk_score"], "api_descs": {"2_mensagens_do_chat_chat_message_for_compras_net_api": "Chat", "Finish": "No description available.", "auto_complete_for_twitter_data": "auto-complete", "bmi_for_clinicalmarkers": " ", "bsa_for_clinicalmarkers": " ", "comments_get_for_songmeanings": "Get comments from our database for a specific song.", "get_exercise_by_id_for_musclewiki": "Get an exercise by it's ID. Valid IDs [0,953]", "getwebhookbyid_for_signl4_critical_mobile_alerting": "Returns information of the webhook specified by the passed id.", "list_conversions_for_clickmeter": "List conversions", "nfts_on_address_for__all_in_one_crypto_swiss_knife_": "Get list of NFTs that address holds.", "search_event_details_for_mma_stats": "This lets you search for specific fights by the names of the fighters involved. The response returned by the API endpoint includes details such as the date of the fight, the name of the fighters involved, and the outcome of the fight.", "search_quotes_for_semantic_quotes": "Search quotes which have similar meaning/intent to the query sentences/words. We allow user to flexibly filter the results by the length of the quote, and by a large variety of tags. The results are returned in order of similarity.", "tournament_standings_for_football_data": "Team Rankings for a specific competition.", "traders_with_positions_for_bybit_leaderboard": "Returns traders with shared positions only.", "walk_score_for_walk_score": "Get Walk Score"}, "aseqs": [{"api_name": "bmi_for_clinicalmarkers", "api_action": "\nAction: bmi_for_clinicalmarkers\nAction Input: {\n  \"heightincentrimetres\": 160,\n  \"weightinkilograms\": 50\n}", "api_reaction": null}, {"api_name": "bsa_for_clinicalmarkers", "api_action": "\nAction: bsa_for_clinicalmarkers\nAction Input: {\n  \"weightinkilograms\": 50,\n  \"heightincentrimetres\": 160\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "bmi_for_clinicalmarkers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "bsa_for_clinicalmarkers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "bmi_for_clinicalmarkers"}}]}
{"URL": "42354", "query": "I am conducting a research project on employee data and need to gather information about the employees' age, gender, and salary. Can you assist me in retrieving this data from the Human Resources API?", "api_names": ["Finish", "get_a_specific_employee_by_employee_id_for_human_resources_api", "get_all_campany_employees_information_for_human_resources_api", "get_models_v1_for_shapeways", "get_tide_station_area_data_for_stormglass_complete", "getallsign_for_zodiac_sign_api", "total_count_for_mcapi", "recipe_by_name_id_for_bbc_good_food_api", "search_cars_for_adzuna", "qr_code_for_qr_code_generator_v5", "graffiti_tags_for_jet_set_radio_api", "get_horoscope_multilingual_for_horoscopes_ai", "yesterday_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions", "get_analytics_sessions_sessionid_events_for_api_video", "surebets_for_surebets_2"], "api_descs": {"Finish": "No description available.", "get_a_specific_employee_by_employee_id_for_human_resources_api": "This endpoint gets one record by a specific employee ID that is unique for each employee in the employees table, up to 900 employees with their information.\nFor example:  employee ID , first name, email, and  etc...", "get_all_campany_employees_information_for_human_resources_api": "This endpoint gets all the available records in the employees table, up to 900 employees with their information.\nFor example:  employee ID, first name,  email, and etc...", "get_analytics_sessions_sessionid_events_for_api_video": "Useful to track and measure video's engagement.", "get_horoscope_multilingual_for_horoscopes_ai": "Return horoscope information by sign, period, type and languages provided.", "get_models_v1_for_shapeways": "", "get_tide_station_area_data_for_stormglass_complete": "**Stormglass Tide Station Area Data**\n\nThe Tide Stations Area Request will list all available tide stations within a defined geographic area.\n\nTop right and bottom left coordinate draws a box with the selected coordinates. \nAll stations with in the area of this box are queried.", "getallsign_for_zodiac_sign_api": "Get all sign. This returns all the available signs", "graffiti_tags_for_jet_set_radio_api": "Returns a list of all Graffiti-Tags", "qr_code_for_qr_code_generator_v5": "Qr Generator", "recipe_by_name_id_for_bbc_good_food_api": "Get recipe information by recipe name id", "search_cars_for_adzuna": "Search Adzuna cars.", "surebets_for_surebets_2": "The provided endpoint lists all the latest arbitrage opportunities, sorted in chronological order. Surebets can be led together by the same \"id\".\nPlease be careful and always verifiy the odds and the matched games.", "total_count_for_mcapi": "Get total count of entries", "yesterday_sure_vip_btts_goal_goal_for_168predict_vip_football_predictions": "This endpiont delivers yesterday BTTS/Goal Goal forecasts. All of the forecasts have been carefully selected. Visit www.168predict.site for more information."}, "aseqs": [{"api_name": "get_all_campany_employees_information_for_human_resources_api", "api_action": "\nAction: get_all_campany_employees_information_for_human_resources_api\nAction Input: {}", "api_reaction": null}, {"api_name": "get_a_specific_employee_by_employee_id_for_human_resources_api", "api_action": "\nAction: get_a_specific_employee_by_employee_id_for_human_resources_api\nAction Input: {\n  \"is_id\": 158108\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"Thought": "The user wants to retrieve employee data including age, gender, and salary. The available APIs do not provide this specific information directly, so I will first fetch all the company's employees' information using the get_all_campany_employees_information_for_human_resources_api.", "api_name": "get_all_campany_employees_information_for_human_resources_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_campany_employees_information_for_human_resources_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_campany_employees_information_for_human_resources_api"}}]}
{"URL": "52276", "query": "I'm an aspiring entrepreneur and I want to start an online business. Can you fetch the list of popular categories on Amazon and the marketplaces where I can find profitable products?", "api_names": ["categories_list_for_amazon_data_v2", "marketplace_list_for_amazon_data_v2", "Finish", "search_videos_for_tiktok_api", "read_forms_for_supersaas_online_bookings_and_appointment_scheduling", "search_place_id_api_for_complete_study_bible", "leaguenextmatches_for_rugbyapi2", "getevents_for_election2020_smartable", "getworldlenses_for_snapchat", "get_channel_total_views_for_gwyo_twitch", "789betlinkvao2022_for_789bettnet", "properties_lookup_for_realty_in_au", "orgcode_cardart_bins_for_test2", "get_complete_package_list_for_winget_api", "ufc_fight_night_holloway_vs_allen_april_15_2023_for_mma_stats"], "api_descs": {"789betlinkvao2022_for_789bettnet": "789bet là nhà cái cá cược trực tuyến uy tín top đầu khu vực châu Á, cung cấp các dịch vụ cá cược như casino, cá cược thể thao, nổ hũ, bắn cá, tài xỉu.\n#789bettnet #789bet #nhacai789bet #linkvao #dangky789bet #dangnhap789bet\nHotline 0985 433 336\nĐịa chỉ : 89 Ngõ 15 Giải Phóng, Hoàng Liệt, Hai Bà Trưng, Hà Nội, Việt Nam \nGoogle map https://www.google.com/maps?cid=5871956287660487504 \nGmaiL: 789bett.net@gmail.com\nWebsite https://789bett.net/ \nhttps://789bett.net/dang-ky-789bet/ \nhttps://789bett.net/khuyen-mai-789bet/ \nhttps://sites.google.com/view/789bettnet/home \nhttps://dailygram.com/index.php/profile-432167\nhttps://www.mtbproject.com/user/201407644/789bett-net\nhttps://mydramalist.com/profile/789bettnet\nhttps://my.desktopnexus.com/789bettnet/\nhttps://worldcosplay.net/member/1058048\nhttps://www.tetongravity.com/community/profile/789bettnet/\nhttps://community.amplifi.com/user/789bett-net\nhttps://www.gaiaonline.com/profiles/789bettnet/45915060/\nhttps://www.hackathon.io/789bettnet\nhttps://pawoo.net/@789bettnet\nhttp://pixelhub.me/789bettnet\nhttps://guides.co/p/789bett-net\nhttps://www.allmyfaves.com/789bettnet\nhttps://my.mamul.am/en/profile/1314087/info\nhttp://www.effecthub.com/people/789bettnet\nhttps://kuwestions.248am.com/user/789bettnet\nhttps://www.mapleprimes.com/users/789bettnet\nhttps://www.bahamaslocal.com/userprofile/137779/789bettnet.html\nhttps://www.misterpoll.com/users/4137466\nhttps://yarabook.com/789bettnet\nhttps://anchor.fm/789bettnet\nhttps://www.bitsdujour.com/profiles/Vj49if", "Finish": "No description available.", "categories_list_for_amazon_data_v2": "This endpoint point fetches categories of Amazon!", "get_channel_total_views_for_gwyo_twitch": "Get Channel Cumulated Views since its creation (using username or id)", "get_complete_package_list_for_winget_api": "Get all available packages in database by ID.", "getevents_for_election2020_smartable": "Get election events", "getworldlenses_for_snapchat": "getWorldLenses", "leaguenextmatches_for_rugbyapi2": "Get the upcoming matches for a specific Rugby league and season.", "marketplace_list_for_amazon_data_v2": "This endpoint lists down the market places we use to fetch data!", "orgcode_cardart_bins_for_test2": "Returns card art URLs by BINs. Different URLs can be defined for each BIN/range of BINs. User authentication is not required.", "properties_lookup_for_realty_in_au": "Look for off-market property by id", "read_forms_for_supersaas_online_bookings_and_appointment_scheduling": "", "search_place_id_api_for_complete_study_bible": "Used in conjuction with Chapter and Verse API, Place Detail API. Receives a Place Unique ID, returns a list of all verses in the Bible that mention the place. Helpful for studying the Biblical history of a particular place.", "search_videos_for_tiktok_api": "Return Search Result", "ufc_fight_night_holloway_vs_allen_april_15_2023_for_mma_stats": "**Get details to UFC Fight Night: Holloway vs. Allen**.                                                          \n Access a range of information about each fighter, including their win-loss record, height, weight, reach, and age. results of a particular fight or a fighter's win-loss record."}, "aseqs": [{"api_name": "categories_list_for_amazon_data_v2", "api_action": "\nAction: categories_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "marketplace_list_for_amazon_data_v2", "api_action": "\nAction: marketplace_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "categories_list_for_amazon_data_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marketplace_list_for_amazon_data_v2", "api_action": "\nAction: marketplace_list_for_amazon_data_v2\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "categories_list_for_amazon_data_v2"}}]}
{"URL": "7871", "query": "Can you fetch the details of a pet with ID 456? Also, give me the inventory status of the pet store.", "api_names": ["Finish", "getinventory_for_apfd", "getpetbyid_for_apfd", "cash_flow_statement_for_financial_statements", "nhl_summary_for_nhl_api", "user_stories_for_instagram_v13", "temp_upload_urls_for_fake_brightcove", "artist_top_tracks_for_shazam", "retrieve_collections_for_openblur", "time_series_endpoint_for_currency_conversion_and_exchange_rates", "round_list_for_global_data", "get_airline_alliance_list_for_travel_hacking_tool"], "api_descs": {"Finish": "No description available.", "artist_top_tracks_for_shazam": "This endpoint will return the top tracks of the artist", "cash_flow_statement_for_financial_statements": "Get company cash flow statement by year (ttm = Trailing Twelve Months).\n\nAll numbers in thousands.", "get_airline_alliance_list_for_travel_hacking_tool": "This endpoint returns a list of airline alliances.", "getinventory_for_apfd": "Returns a map of status codes to quantities", "getpetbyid_for_apfd": "Returns a single pet", "nhl_summary_for_nhl_api": "With this endpoint you can get the game summary data for a specified game.", "retrieve_collections_for_openblur": "Retrieve all Blur Collections", "round_list_for_global_data": "Provides the list of the global rounds for the sports.", "temp_upload_urls_for_fake_brightcove": "Generate Temp Upload URLs", "time_series_endpoint_for_currency_conversion_and_exchange_rates": "Retrieve historical rates between two specified dates.\n\n`Maximum of 365 day time range`", "user_stories_for_instagram_v13": "Get instagram user stories by user id."}, "aseqs": [{"api_name": "getpetbyid_for_apfd", "api_action": "\nAction: getpetbyid_for_apfd\nAction Input: {\n  \"petid\": 456\n}", "api_reaction": null}, {"api_name": "getinventory_for_apfd", "api_action": "\nAction: getinventory_for_apfd\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_apfd"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_apfd"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getinventory_for_apfd"}}]}
{"URL": "25568", "query": "I'm a property owner in Santa Monica and I want to optimize the rental potential of my property. Can you provide me with insights on the rental market, including average daily rates, occupancy rates, and revenue? Additionally, suggest regions where I can expand my rental business.", "api_names": ["suggest_region_for_airdna", "overview_for_airdna", "Finish", "email_for_soti_sync", "end1_for_matinapi", "agencies_get_listings_for_bayut", "detail2_for_spaceflight_news", "competitions_get_short_info_for_transfermarket", "youtube_channel_details_for_youtube_channel_details", "chapters_info_for_quran_com", "past_1_day_for_the_sandbox_sand", "yearly_cashflow_statements_for_freedom_finance"], "api_descs": {"Finish": "No description available.", "agencies_get_listings_for_bayut": "Get listing belonging to an agency", "chapters_info_for_quran_com": "Get list of chaper info we've in different languages.", "competitions_get_short_info_for_transfermarket": "Get short information of one or more competitions", "detail2_for_spaceflight_news": " ", "email_for_soti_sync": "Fetch Customer Email", "end1_for_matinapi": "none", "overview_for_airdna": "Returns overview stats (ADR, OCC ,Revenue ..) of a location rental data", "past_1_day_for_the_sandbox_sand": "Get price data for the past 24 hours.\n\n~5 minutes data points.", "suggest_region_for_airdna": "Returns suggested regions by keyword", "yearly_cashflow_statements_for_freedom_finance": "Annual cashflow statements", "youtube_channel_details_for_youtube_channel_details": "YouTube Channel Details"}, "aseqs": [{"api_name": "overview_for_airdna", "api_action": "\nAction: overview_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\",\n  \"currency\": \"USD\"\n}", "api_reaction": null}, {"api_name": "suggest_region_for_airdna", "api_action": "\nAction: suggest_region_for_airdna\nAction Input: {\n  \"location\": \"Santa Monica\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "overview_for_airdna"}}, {"state": "generated_by_agent", "aseq": {"api_name": "overview_for_airdna"}}, {"state": "generated_by_agent", "aseq": {"api_name": "overview_for_airdna"}}]}
{"URL": "55606", "query": "I'm helping my friend set up an online store for her jewelry business. Can you provide me with a list of label sizes in the A4 paper format? We're looking for rectangle labels from Uline.", "api_names": ["Finish", "label_templates_for_print_your_own_labels_and_stickers", "label_template_brands_for_print_your_own_labels_and_stickers", "label_sizes_for_print_your_own_labels_and_stickers", "competitions_for_football_v2", "teamlastmatches_for_cricketapi2", "accurate_language_detection_for_translate_v3", "get_a_country_by_alpha_2_numeric_code_for_world_countries", "advanced_chart_for_chart_img", "vat_price_calculation_api_endpoint_for_vat_validation_and_tax_rates", "java_versions_for_java_code_compiler", "getmarkets_for_kalshi_trading_api", "game_for_baseball", "video_related_contents_for_youtube", "stock_financial_data_stock_for_mboum_finance", "get_trader_positions_for_binance_futures_leaderboard"], "api_descs": {"Finish": "No description available.", "accurate_language_detection_for_translate_v3": "This endpoint will return the Language of the Text", "advanced_chart_for_chart_img": "This endpoint captures TradingView advanced real-time chart image.", "competitions_for_football_v2": "Get a list of all available competitions", "game_for_baseball": "Query Baseball games, teams, scores etc...", "get_a_country_by_alpha_2_numeric_code_for_world_countries": "get a  country by alpha-2 numeric codes ISO 3166-1 alpha-2 code are two-letter country codes defined in ISO 3166-1, \n\npart of the ISO 3166 standard published by the International Organization for Standardization (ISO),", "get_trader_positions_for_binance_futures_leaderboard": "Get trader open positions", "getmarkets_for_kalshi_trading_api": "Endpoint for listing and discovering markets on Kalshi.", "java_versions_for_java_code_compiler": "Java Versions", "label_sizes_for_print_your_own_labels_and_stickers": "Returns a list of label sizes in the format [width]x[height].\n\nThese sizes are rounded, meaning that they can represent a few other sizes that are close to them. For example size 4\"x3\", will represent 3.75\"x3\",  4\"x3.25\" and so on.", "label_template_brands_for_print_your_own_labels_and_stickers": "Returns the list of blank label sheet brands that Ecardify supports to date. If your preferred brand is missing, please let us know.", "label_templates_for_print_your_own_labels_and_stickers": "List of label templates filtered by one or more of the following parameters:\npaper format\ntemplate brand\nexact label size\napproximate label size\nlabel shape", "stock_financial_data_stock_for_mboum_finance": "Get stock financial data.", "teamlastmatches_for_cricketapi2": "Get the last matches for a cricket team by specifying the team ID and the page number (starting from 0).", "vat_price_calculation_api_endpoint_for_vat_validation_and_tax_rates": "The Calculate Endpoint makes it easy to calculate a VAT compliant price given a country and price, as well as such optional values as the type of goods.", "video_related_contents_for_youtube": "Video Related Contents"}, "aseqs": [{"api_name": "label_sizes_for_print_your_own_labels_and_stickers", "api_action": "\nAction: label_sizes_for_print_your_own_labels_and_stickers\nAction Input: {\n  \"format\": \"A4\",\n  \"shape\": \"rectangle\",\n  \"brand\": \"Uline\"\n}", "api_reaction": null}, {"api_name": "label_template_brands_for_print_your_own_labels_and_stickers", "api_action": "\nAction: label_template_brands_for_print_your_own_labels_and_stickers\nAction Input: {\n  \"format\": \"A4\"\n}", "api_reaction": null}, {"api_name": "label_templates_for_print_your_own_labels_and_stickers", "api_action": "\nAction: label_templates_for_print_your_own_labels_and_stickers\nAction Input: {\n  \"format\": \"A4\",\n  \"shape\": \"rectangle\",\n  \"brand\": \"Uline\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "label_sizes_for_print_your_own_labels_and_stickers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "label_templates_for_print_your_own_labels_and_stickers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "label_templates_for_print_your_own_labels_and_stickers"}}, {"state": "generated_by_agent", "aseq": {"api_name": "label_sizes_for_print_your_own_labels_and_stickers", "api_action": "\nAction: label_sizes_for_print_your_own_labels_and_stickers\nAction Input: {\n  \"format\": \"A4\",\n  \"shape\": \"rectangle\",\n  \"brand\": \"Uline\"\n}", "api_reaction": null}}]}
{"URL": "61359", "query": "My company is conducting research on the derivatives market. Can you fetch me the index price kline for the symbol 'BTCUSDT' between two specific timestamps? Additionally, I need the mark price kline for the same symbol and time range. Please include the limit parameter for both.", "api_names": ["get_mark_price_kline_for_bybit", "get_index_price_kline_for_bybit", "Finish", "getbymonth_for_earningsdata", "search_all_schemas_for_mongodb_wix", "drivers_standings_for_fia_formula_1_championship_statistics", "storageexists_for_aspose_cells_cloud", "get_nfl_team_roster_for_tank01_nfl_live_in_game_real_time_statistics_nfl", "check_wordpress_for_wordpress_checker", "historical_weather_for_ai_weather_by_meteosource", "webhooks_for_timedb", "label_shapes_for_print_your_own_labels_and_stickers"], "api_descs": {"Finish": "No description available.", "check_wordpress_for_wordpress_checker": " ", "drivers_standings_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve drivers standings data about a specifit F1 championship by specifying a year. If you ommit the ***year*** query parameter, a default value will be set to current year. The response data will contain information about the position in the rank list, driver's name, nationality, team and total points accumulated.", "get_index_price_kline_for_bybit": "Query Index Price Kline", "get_mark_price_kline_for_bybit": "Query mark price kline.", "get_nfl_team_roster_for_tank01_nfl_live_in_game_real_time_statistics_nfl": "This call returns the current or historical* roster of any team, using the teamID that can be found in \"getNFLTeams\" call.\n\nRosters are updated a few times throughout the day.  Usually every hour.  \n \nHistorical rosters are saved on a daily basis as of 20230505 and moving forward. \n\nCall needs to look like this:\n/getNFLTeamRoster?teamID=6\nor\n/getNFLTeamRoster?teamAbv=CHI\n\nThat will return a list of the team's current roster players in the body.\n\nAdd parameter archiveDate to the call to get a list of roster players (playerID's only) for that specific date.  Historical roster dates only are kept as far back as 20230505.", "getbymonth_for_earningsdata": "Get Earning Data By Month", "historical_weather_for_ai_weather_by_meteosource": "Receive **historical weather** data for a **given day** in the past **8 years**. Define your location using GPS coordinates or `place_id` from `Location endpoints`.", "label_shapes_for_print_your_own_labels_and_stickers": "List of available label shapes.", "search_all_schemas_for_mongodb_wix": "This call returns all schemas and its definition. Schemas are also called as case types. These case types will be consumed in Wix Database as Schemas.", "storageexists_for_aspose_cells_cloud": " ", "webhooks_for_timedb": "Retrieve a list of existing webhooks."}, "aseqs": [{"api_name": "get_index_price_kline_for_bybit", "api_action": "\nAction: get_index_price_kline_for_bybit\nAction Input: {\n  \"symbol\": \"BTCUSDT\",\n  \"category\": \"linear\",\n  \"interval\": \"1\",\n  \"start\": 1635673200000,\n  \"end\": 1635759600000,\n  \"limit\": 200\n}", "api_reaction": null}, {"api_name": "get_mark_price_kline_for_bybit", "api_action": "\nAction: get_mark_price_kline_for_bybit\nAction Input: {\n  \"symbol\": \"BTCUSDT\",\n  \"category\": \"linear\",\n  \"interval\": \"1\",\n  \"start\": 1635673200000,\n  \"end\": 1635759600000,\n  \"limit\": 200\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_index_price_kline_for_bybit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_mark_price_kline_for_bybit"}}, {"state": "generated_by_agent", "aseq": {"api_name": "Finish"}}]}
{"URL": "62040", "query": "I'm a cryptocurrency enthusiast and I want to search for available cryptocurrencies related to the word 'bitcoin'. Additionally, I would like to get the analysis opinion from an expert for the cryptocurrency with the pair ID '1057391'. Can you please provide me with this information?", "api_names": ["coins_search_for_investing_cryptocurrency_markets", "coins_get_fullsize_chart_for_investing_cryptocurrency_markets", "coins_get_analysis_for_investing_cryptocurrency_markets", "Finish", "riddle_by_keyword_for_riddlie_", "get_elevation_for_elevation_from_latitude_and_longitude", "1_3_add_working_days_for_working_days", "website_url_qr_code_for_scanova_qr_code", "email_for_soti_sync", "get_countrywise_city_data_for_mocking_rock_", "getbysearch_for_house_plants", "mapimage_for_mapfanapi_map", "my_images_for_arimagesynthesizer", "json_for_ip_echo", "text_analysis_for_sentiment_analysis_v12", "get_all_dog_breeds_for_dogbreeds"], "api_descs": {"1_3_add_working_days_for_working_days": "Add (or remove) any number of working days to a date.", "Finish": "No description available.", "coins_get_analysis_for_investing_cryptocurrency_markets": "Get analysis opinion from expert for specific cryptocurrency", "coins_get_fullsize_chart_for_investing_cryptocurrency_markets": "Get fullsize chart of specific cryptocurrency", "coins_search_for_investing_cryptocurrency_markets": "Search for available cryptocurrencies relating to a word, name, etc...", "email_for_soti_sync": "Fetch Customer Email", "get_all_dog_breeds_for_dogbreeds": "Get all info from dog breeds", "get_countrywise_city_data_for_mocking_rock_": "Use this API to get city list of country. You need to send country name or ISO3 or ISO2 code \nas query to get it. Which you can get it from other API \"Country Codes\"", "get_elevation_for_elevation_from_latitude_and_longitude": "Get Elevation", "getbysearch_for_house_plants": "Searches through all plants and returns the closest results matching \"Latin name\", \"Family\", \"Other names\", \"Common name\", \"Common name (fr.)\", \"Description\", \"Categories\", \"Origin\" in order by highest most likely. This route is case insensitive and uses fuzzy search", "json_for_ip_echo": "Response your real IP with json format", "mapimage_for_mapfanapi_map": "## サイズ指定地図画像取得\n指定された緯度経度、サイズ、縮尺の地図画像を提供します。\n`size`, `lonlat`, `scale` で指定した画像サイズ、位置、スケールの地図画像を返します。\nresolutionで解像度に2を指定した場合、sizeで指定した画像サイズの2倍の画像サイズで返されます。", "my_images_for_arimagesynthesizer": "Get all generated images' information in a JSON response. Images can be accessed at `/get` endpoint with the given hash.", "riddle_by_keyword_for_riddlie_": "Get one random riddle around a specific subject or keyword. For example, a riddle on a \"cat\".", "text_analysis_for_sentiment_analysis_v12": "Analyzes text using  VADER (Valence Aware Dictionary and sEntiment Reasoner)\n\nProvide  a string and the API will output combined, positive, neutral, and negative scores based on the output specified.", "website_url_qr_code_for_scanova_qr_code": "This request returns a Static QR Code (standard or custom-designed) encoded with a specified URL"}, "aseqs": [{"api_name": "coins_search_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_search_for_investing_cryptocurrency_markets\nAction Input: {\n  \"string\": \"bitcoin\"\n}", "api_reaction": null}, {"api_name": "coins_get_fullsize_chart_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_fullsize_chart_for_investing_cryptocurrency_markets\nAction Input: {\n  \"pair_id\": 1057391\n}", "api_reaction": null}, {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_analysis_for_investing_cryptocurrency_markets\nAction Input: {\n  \"pair_id\": 1057391\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "coins_search_for_investing_cryptocurrency_markets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets"}}, {"state": "generated_by_agent", "aseq": {"api_name": "coins_get_analysis_for_investing_cryptocurrency_markets", "api_action": "\nAction: coins_get_analysis_for_investing_cryptocurrency_markets\nAction Input: {\n  \"string\": \"bitcoin\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"coins_search_for_investing_cryptocurrency_markets\",\n\t\"api_action\": \"\\nAction: coins_search_for_investing_cryptocurrency_markets\\nAction Input: {\\n  \\\"string\\\": \\\"bitcoin\\\"\\n}\",\n}"}]}
{"URL": "34247", "query": "Decode the VIN of my car, which is registered in Poland. The VIN number is WBAPE12060WJ88925. I need information about the body type, fuel type, make, model, and year of the vehicle.", "api_names": ["pl_decode_for_vin_decoder_v4", "Finish", "entertainment_for_google_news", "playlist_items_for_youtube_v3_lite", "driver_standings_for_formula_1_standings", "teams_teamid_dutyreports_for_signl4_critical_mobile_alerting", "search_tags_for_blogsapi", "flights_list_most_tracked_for_flight_radar", "questions_for_quiz", "rapidapigetforecastsummarybylocationname_for_forecast"], "api_descs": {"Finish": "No description available.", "driver_standings_for_formula_1_standings": "Will return the current F1 season driver standings.", "entertainment_for_google_news": "This endpoint is used to get entertainment news from Google News.", "flights_list_most_tracked_for_flight_radar": "Return the most tracked flights around the world", "pl_decode_for_vin_decoder_v4": "PL Decode", "playlist_items_for_youtube_v3_lite": "Get playlist items.\nQuota cost is 1.", "questions_for_quiz": "NOTHING", "rapidapigetforecastsummarybylocationname_for_forecast": "Get Forecast", "search_tags_for_blogsapi": "Get all blogs if the term is one of the tags.", "teams_teamid_dutyreports_for_signl4_critical_mobile_alerting": " "}, "aseqs": [{"api_name": "pl_decode_for_vin_decoder_v4", "api_action": "\nAction: pl_decode_for_vin_decoder_v4\nAction Input: {\n  \"vin\": \"WBAPE12060WJ88925\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "pl_decode_for_vin_decoder_v4"}}, {"state": "generated_by_agent", "aseq": {"api_name": "pl_decode_for_vin_decoder_v4", "api_action": "\nAction: pl_decode_for_vin_decoder_v4\nAction Input: {\n  \"vin\": \"WBAPE12060WJ88925\"\n}"}}]}
{"URL": "56092", "query": "I'm writing a travel blog and I want to include information about the zip codes of popular cities around the world. Can you provide me with the zip codes for New York City, London, and Tokyo? Additionally, I'd like to know the latitude and longitude of each city.", "api_names": ["location_by_city_for_geosource_api", "zipcode_by_city_for_geosource_api", "Finish", "get_video_urls_for_youtube_video_stream_download", "vat_validation_api_endpoint_for_vat_validation_and_tax_rates", "trending_memes_for_reddit_meme", "yahoofinance_for_crypto_news_v2", "user_search_for_instagram_v5", "user_by_rest_id_for_twitter_v2", "protocol_for_defi_data", "games_by_category_or_tag_for_mmo_games", "v1_trademarkavailable_for_uspto_trademark"], "api_descs": {"Finish": "No description available.", "games_by_category_or_tag_for_mmo_games": "Insert game category or tag, eg: mmorpg, shooter, pvp, mmofps and more. Full tag list at [https://www.mmobomb.com/api](url)", "get_video_urls_for_youtube_video_stream_download": "Get video/shorts urls for", "location_by_city_for_geosource_api": "Retrives  the lat and lng of the city.", "protocol_for_defi_data": "Get historical TVL of a protocol and breakdowns by token and chain", "trending_memes_for_reddit_meme": "Use this route to get the newest trending memes from subreddit", "user_by_rest_id_for_twitter_v2": "Get User By Rest ID", "user_search_for_instagram_v5": "Get Instagram users by keyword.", "v1_trademarkavailable_for_uspto_trademark": "returns if the given keyword is available", "vat_validation_api_endpoint_for_vat_validation_and_tax_rates": "The Validate Endpoint takes a VAT number in the request, checks if that number is valid, and if it is valid, returns addition details about the company associated with that VAT number.", "yahoofinance_for_crypto_news_v2": "Get the latest news from Yahoo Finance.", "zipcode_by_city_for_geosource_api": "Retrives the zip code/codes of the city ( must be in the supported countries list [ 44 countries ])."}, "aseqs": [{"api_name": "zipcode_by_city_for_geosource_api", "api_action": "\nAction: zipcode_by_city_for_geosource_api\nAction Input: {\n  \"city\": \"London\"\n}", "api_reaction": null}, {"api_name": "zipcode_by_city_for_geosource_api", "api_action": "\nAction: zipcode_by_city_for_geosource_api\nAction Input: {\n  \"city\": \"Tokyo\"\n}", "api_reaction": null}, {"api_name": "location_by_city_for_geosource_api", "api_action": "\nAction: location_by_city_for_geosource_api\nAction Input: {\n  \"city\": \"New York City\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "zipcode_by_city_for_geosource_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "zipcode_by_city_for_geosource_api", "api_action": "\nAction: zipcode_by_city_for_geosource_api\nAction Input: {\n  \"city\": \"New York City\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "zipcode_by_city_for_geosource_api", "api_action": "\nAction: zipcode_by_city_for_geosource_api\nAction Input: {\n  \"city\": \"New York\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "zipcode_by_city_for_geosource_api", "api_action": "\nAction: zipcode_by_city_for_geosource_api\nAction Input: {\n  \"city\": \"New York City\"\n}", "api_reaction": null}}]}
{"URL": "67527", "query": "I'm planning a surprise anniversary party for my parents and want to create a slideshow with their pictures from different years. Can you help me calculate their ages for each picture based on their birthdates? The birthdates are 19651118 and 19661025. It would be helpful if the tool can suggest the appropriate time zone for accurate age calculation.", "api_names": ["usable_time_zones_for_age_calculator", "age_calculator_for_age_calculator", "Finish", "pga_scorecards_for_golf_leaderboard_data", "getstorestatuslist_for_evosis_s_game_database", "get_train_data_by_no_mrt_train_no_get_for_aqls_b2c_system", "get_tiktok_video_info_for_tiktok_video_no_watermark_v3", "valorant_players_for_valorant", "pursuit_for_filepursuit", "blacklist_phone_numbers_for_smsapi_com", "crypto_quotes_for_real_time_quotes", "get_transaction_for_smile", "bd_district_for_bd", "bycountrycode_for_country_information_and_conversion_api", "license_plate_to_vin_for_license_plate_to_vin"], "api_descs": {"Finish": "No description available.", "age_calculator_for_age_calculator": "Calculates age based on the requested date. Accepts different formats and Time Zones.", "bd_district_for_bd": " ", "blacklist_phone_numbers_for_smsapi_com": " ", "bycountrycode_for_country_information_and_conversion_api": "# Country Information and Conversion API\n\nThe Country Information and Conversion API provides comprehensive country-related data and conversion capabilities, allowing developers to access detailed information about countries worldwide and seamlessly convert between country names and country codes.\n\n## Endpoints\n\n### Get Country Code by Name\n\nRetrieve the country code based on the country name.\n\n- **URL:** `/api/country/code/:name`\n- **Method:** `GET`\n- **Parameters:**\n  - `:name` - The name of the country.\n\nExample Request:\n```\nGET /api/country/code/United States\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n### Get Country Name by Code\n\nRetrieve the country name based on the country code.\n\n- **URL:** `/api/country/name/:code`\n- **Method:** `GET`\n- **Parameters:**\n  - `:code` - The country code.\n\nExample Request:\n```\nGET /api/country/name/US\n```\n\nExample Response:\n```json\n{\n  \"code\": \"US\",\n  \"name\": \"United States\",\n  \"capital\": \"Washington, D.C.\",\n  \"population\": 331002651,\n  \"language\": \"English\",\n  \"currency\": \"USD\",\n  \"timezone\": \"UTC-04:00, UTC-05:00\"\n}\n```\n\n## Additional Country Information\n\nIn addition to the country code and name, both endpoints provide the following additional information about each country:\n\n- `capital`: The capital city of the country.\n- `population`: The population count of the country.\n- `language`: The official language(s) spoken in the country.\n- `currency`: The currency used in the country.\n- `timezone`: The time zone(s) observed in the country.\n\nPlease note that the additional country information is included in the example responses for both endpoints.\n\n## Error Handling\n\nThe API returns appropriate HTTP status codes and error responses to indicate various scenarios:\n\n- `200 OK`: Successful request and response.\n- `400 Bad Request`: Invalid request parameters or missing required parameters.\n- `404 Not Found`: Country not found or invalid country name/code.\n- `500 Internal Server Error`: An unexpected error occurred.\n\nPlease make sure to handle these status codes appropriately in your application.", "crypto_quotes_for_real_time_quotes": "Returns the real time price of a crypto currency pair", "get_tiktok_video_info_for_tiktok_video_no_watermark_v3": "Get tiktok video full info. HD Quality, No Watermark. Fast.\nSupport Tiktok & Douyin.\nSupport Getting Image List.\nSupport Tiktok Stories.", "get_train_data_by_no_mrt_train_no_get_for_aqls_b2c_system": " ", "get_transaction_for_smile": "Get a user's transaction by ID.", "getstorestatuslist_for_evosis_s_game_database": "Returns as Json of store status list.", "license_plate_to_vin_for_license_plate_to_vin": "License Plate to VIN", "pga_scorecards_for_golf_leaderboard_data": "Provides scorecards for a given player in a given tournament", "pursuit_for_filepursuit": "Search for a query in file names and path", "usable_time_zones_for_age_calculator": "Call this endpoint to view the current endpoint. Find the appreciate time zone for your location. \nExample: US/Eastern, US/Pacific, Europe/London ...", "valorant_players_for_valorant": "This API gets all valorant players"}, "aseqs": [{"api_name": "usable_time_zones_for_age_calculator", "api_action": "\nAction: usable_time_zones_for_age_calculator\nAction Input: {}", "api_reaction": null}, {"api_name": "age_calculator_for_age_calculator", "api_action": "\nAction: age_calculator_for_age_calculator\nAction Input: {\n  \"date\": \"19651118\"\n}", "api_reaction": null}, {"api_name": "age_calculator_for_age_calculator", "api_action": "\nAction: age_calculator_for_age_calculator\nAction Input: {\n  \"date\": \"19661025\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "usable_time_zones_for_age_calculator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "age_calculator_for_age_calculator", "api_action": "\nAction: age_calculator_for_age_calculator\nAction Input: {}\nAction Input: {{\"birthdates\": [19651118, 19661025]}}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "age_calculator_for_age_calculator", "api_action": "\nAction: age_calculator_for_age_calculator\nAction Input: {\n  \"date\": \"19651118\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "usable_time_zones_for_age_calculator"}}]}
{"URL": "25692", "query": "I'm interested in reading news articles about science and health. Can you fetch the topic headlines for the 'SCIENCE' section? Additionally, I want to search for news articles with the query 'COVID-19'. Please provide the search results for this query.", "api_names": ["search_for_real_time_news_data", "topic_news_by_section_for_real_time_news_data", "Finish", "get_all_climate_news_for_new_climate", "songs_get_track_listening_count_for_shazam_api", "accountinfo_for_axesso_instagram_data_service", "shorten_url_for_shortadlink_shorten_urls_and_earn_money", "trending_for_youtube_v3_alternative", "get_list_of_top_level_domains_for_tld", "api_v1_for_reverse_mx", "liquidation_data_for_liquidation_report", "get_feat_for_dungeons_and_dragon_5e"], "api_descs": {"Finish": "No description available.", "accountinfo_for_axesso_instagram_data_service": "Fetch data for a give account. The response includes the field \"id which is required for further requests e.g. posts, comments and replies and needs to be passed to query param userId. This endpoint needs the sessionid to work.", "api_v1_for_reverse_mx": "", "get_all_climate_news_for_new_climate": "News from all publications", "get_feat_for_dungeons_and_dragon_5e": "Returns information about the feat. Mainly full text description.", "get_list_of_top_level_domains_for_tld": "Get an exhaustive list of more than official 1500 generic and country code TLDs for which domains can be registered with.", "liquidation_data_for_liquidation_report": "Get the summary liquidation data for all coin. Data include total liquidation value, total liquidation amount, mean & median liquidation value.", "search_for_real_time_news_data": "Search news articles by query with an option to limit the results to a specific time range.", "shorten_url_for_shortadlink_shorten_urls_and_earn_money": "Primary method for shortening URL with custom alias.", "songs_get_track_listening_count_for_shazam_api": "Returns the number of times a particular song has been played", "topic_news_by_section_for_real_time_news_data": "Get topic news article in a specific section.", "trending_for_youtube_v3_alternative": "Get trending videos of the particular geo"}, "aseqs": [{"api_name": "topic_news_by_section_for_real_time_news_data", "api_action": "\nAction: topic_news_by_section_for_real_time_news_data\nAction Input: {\n  \"section\": \"SCIENCE\",\n  \"topic\": \"SCIENCE\"\n}", "api_reaction": null}, {"api_name": "search_for_real_time_news_data", "api_action": "\nAction: search_for_real_time_news_data\nAction Input: {\n  \"query\": \"COVID-19\"\n}", "api_reaction": null}, {"api_name": "search_for_real_time_news_data", "api_action": "\nAction: search_for_real_time_news_data\nAction Input: {\n  \"query\": \"COVID-19\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "topic_news_by_section_for_real_time_news_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_real_time_news_data"}}, {"state": "generated_by_agent", "aseq": {"api_name": "topic_news_by_section_for_real_time_news_data", "api_action": "{\"section\": \"SCIENCE\", \"topic\": \"SCIENCE\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "topic_news_by_section_for_real_time_news_data", "api_action": "\nAction: topic_news_by_section_for_real_time_news_data\nAction Input: {\n  \"section\": \"SCIENCE\",\n  \"topic\": \"SCIENCE\"\n}", "api_reaction": null}}]}
{"URL": "13851", "query": "I need to write an article about half-staff events in different states. Can you fetch the details of all the half-staff events for the flags of New York, California, and West Virginia? Also, provide the current status of the West Virginia flag.", "api_names": ["get_current_status_for_given_flag_for_flag_status", "get_half_staff_events_for_given_flag_for_flag_status", "Finish", "earnings_trend_for_stock_analysis", "getproductoptions_for_appibase", "get_sku_for_taobao_tmall_product_detail", "resorts_for_ski_resorts_and_conditions", "reverse_geocode_for_egypt_api", "fetchcampaigns_for_upcall", "analysis_for_email", "people_id_for_tvmaze", "get_scan_results_for_weblasso", "retrieve_user_s_food_preferences_for_bespoke_diet_generator", "max_item_id_for_hacker_news", "get_apps_from_dev_for_google_play_api"], "api_descs": {"Finish": "No description available.", "analysis_for_email": "Analyse, validate and parse the content of a given Email Address", "earnings_trend_for_stock_analysis": "Get earnings trend.", "fetchcampaigns_for_upcall": "Get all campaigns", "get_apps_from_dev_for_google_play_api": "Returns dev's apps.", "get_current_status_for_given_flag_for_flag_status": "Get the current status for the provided flag", "get_half_staff_events_for_given_flag_for_flag_status": "Get all half-staff events for the provided flag", "get_scan_results_for_weblasso": "Obtain the scan results from a given scan ID.", "get_sku_for_taobao_tmall_product_detail": "Get SKU, Price, Propperties Image", "getproductoptions_for_appibase": "Get all product options", "max_item_id_for_hacker_news": "Returns the current largest item id", "people_id_for_tvmaze": "Get person information", "resorts_for_ski_resorts_and_conditions": "Paginated list of all resorts", "retrieve_user_s_food_preferences_for_bespoke_diet_generator": "Retrieve the list of all ingredients that will be excluded from user's diets.", "reverse_geocode_for_egypt_api": "This endpoint allows you to perform reverse geocoding in Cameroon by providing query parameters for latitude and longitude. It returns the name of the city where the location is located."}, "aseqs": [{"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"NY\"\n}", "api_reaction": null}, {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"CA\"\n}", "api_reaction": null}, {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"WV\"\n}", "api_reaction": null}, {"api_name": "get_current_status_for_given_flag_for_flag_status", "api_action": "\nAction: get_current_status_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"WV\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"CA\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_half_staff_events_for_given_flag_for_flag_status", "api_action": "\nAction: get_half_staff_events_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"WV\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_current_status_for_given_flag_for_flag_status", "api_action": "\nAction: get_current_status_for_given_flag_for_flag_status\nAction Input: {\n  \"code\": \"WV\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_half_staff_events_for_given_flag_for_flag_status\",\n\t\"api_action\": \"\\nAction: get_half_staff_events_for_given_flag_for_flag_status\\nAction Input: {\\n  \\\"code\\\": \\\"NY\\\"\\n}\",\n}"}]}
{"URL": "10611", "query": "I'm organizing a surfing event and I need to find all the surf breaks in a specific country. The country ID is 'AU'. Can you please help me retrieve the surf breaks using the GetSurfbreaksByCountry API? Additionally, I would like to get the list of countries available for surfing using the GetCountries API.", "api_names": ["getsurfbreaksbycountry_for_simple_surf_forecast_api", "getcountries_for_simple_surf_forecast_api", "Finish", "title_similars_for_netflix_data", "hotel_slug_convert_for_hotels_com_provider", "retrieving_bundles_for_opensea_data_query", "track_list_playlist_for_spotify_downloader", "getallbeerslist_for_beers_list", "question_for_would_you_rather", "get_producto_promo_for_pizzaallapala", "get_animes_for_anime_jokes", "fetch_by_type_for_magical_taske"], "api_descs": {"Finish": "No description available.", "fetch_by_type_for_magical_taske": "This endpoint fetches records by type as defined in `ABOUT` section above. You have to provide type and a limit of the number of records returned.", "get_animes_for_anime_jokes": "Get all the anime from Anime Jokes", "get_producto_promo_for_pizzaallapala": "Adsa", "getallbeerslist_for_beers_list": "List of all beers", "getcountries_for_simple_surf_forecast_api": " ", "getsurfbreaksbycountry_for_simple_surf_forecast_api": " ", "hotel_slug_convert_for_hotels_com_provider": "Get Hotel ID from Hotel Site slug, (https://hotels.com/ho219115) `ho219115` -> `1105156`", "question_for_would_you_rather": "Get random 'Would You Rather' question", "retrieving_bundles_for_opensea_data_query": "Bundles are groups of items for sale on OpenSea. You can buy them all at once in one transaction, and you can create them without any transactions or gas, as long as you've already approved the assets inside.", "title_similars_for_netflix_data": "title-similars", "track_list_playlist_for_spotify_downloader": "Get Track List from Playlist"}, "aseqs": [{"api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api", "api_action": "\nAction: getsurfbreaksbycountry_for_simple_surf_forecast_api\nAction Input: {\"countryid\": \"AU\"}", "api_reaction": null}, {"api_name": "getcountries_for_simple_surf_forecast_api", "api_action": "\nAction: getcountries_for_simple_surf_forecast_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getsurfbreaksbycountry_for_simple_surf_forecast_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountries_for_simple_surf_forecast_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcountries_for_simple_surf_forecast_api"}}]}
{"URL": "84000", "query": "My company is interested in the market activity in the area of Greenwich Close, Crawley RH11. Can you provide us with the market activity details? Also, include the sales history and nearby points of interest for the property with property ID 27175510.", "api_names": ["house_prices_get_points_of_interest_for_zoopla_v2", "house_prices_get_sales_history_for_zoopla_v2", "house_prices_get_market_activity_for_zoopla_v2", "Finish", "auto_complete_for_zoopla_v2", "breweries_for_open_brewery_db", "get_basic_data_for_all_counties_in_a_single_state_for_us_counties", "tweet_replies_for_twitter", "getcompaniessince_for_360_business_tool", "getrecipe_for_cookr_recipe_parser", "directions_between_2_locations_for_tunisia_api", "cripto_for_currency_v2", "getcasessince_for_360_business_tool", "docs_for_contextoguess", "managerplaceholderimage_for_basketapi", "custom_ticker_for_global_ethereum_price_index_gex", "get_album_tracks_for_spotify_data_api", "getvideofromuser_for_vimeo", "best_stories_for_yc_hacker_news_official", "new_backlinks_for_best_backlink_checker_api"], "api_descs": {"Finish": "No description available.", "auto_complete_for_zoopla_v2": "Get auto complete suggestion by term or phrase", "best_stories_for_yc_hacker_news_official": "Returns up to the current best 500 stories.", "breweries_for_open_brewery_db": "List of Breweries", "cripto_for_currency_v2": "Bitcoin and Altcoins prices, changes in the instant service.", "custom_ticker_for_global_ethereum_price_index_gex": "This endpoint can be used to generate a custom index in a certain currency. The “inex” path parameter represents “include” or “exclude”, you can choose to generate an index removing specified exchanges, or only including the few that you require.", "directions_between_2_locations_for_tunisia_api": "This endpoint returns information about the route between two locations in terms of distance, duration, and steps.\n\nBelow Example: **Directions from Sfax to Tunis**", "docs_for_contextoguess": "docs", "get_album_tracks_for_spotify_data_api": "Get album tracks by album ID", "get_basic_data_for_all_counties_in_a_single_state_for_us_counties": "counties", "getcasessince_for_360_business_tool": "Get cases modified since", "getcompaniessince_for_360_business_tool": "Get companies modified since", "getrecipe_for_cookr_recipe_parser": "Gets recipe data from a URL", "getvideofromuser_for_vimeo": "Get all videos credited to a user (both uploaded and appears).", "house_prices_get_market_activity_for_zoopla_v2": "Get market activity in an area", "house_prices_get_points_of_interest_for_zoopla_v2": "Get nearest points of interest", "house_prices_get_sales_history_for_zoopla_v2": "Get sales history", "managerplaceholderimage_for_basketapi": "Get the manager placeholder image in PNG format.", "new_backlinks_for_best_backlink_checker_api": "Get the list of top backlinks and counts", "tweet_replies_for_twitter": "This endpoint returns a list of reply tweets"}, "aseqs": [{"api_name": "auto_complete_for_zoopla_v2", "api_action": "\nAction: auto_complete_for_zoopla_v2\nAction Input: {\n  \"search_term\": \"Greenwich Close, Crawley RH11\",\n  \"search_type\": \"properties\"\n}", "api_reaction": null}, {"api_name": "house_prices_get_market_activity_for_zoopla_v2", "api_action": "\nAction: house_prices_get_market_activity_for_zoopla_v2\nAction Input: {\n  \"area\": \"Crawley RH11\"\n}", "api_reaction": null}, {"api_name": "house_prices_get_sales_history_for_zoopla_v2", "api_action": "\nAction: house_prices_get_sales_history_for_zoopla_v2\nAction Input: {\n  \"property_id\": 27175510\n}", "api_reaction": null}, {"api_name": "house_prices_get_points_of_interest_for_zoopla_v2", "api_action": "\nAction: house_prices_get_points_of_interest_for_zoopla_v2\nAction Input: {\n  \"property_id\": 27175510\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "house_prices_get_market_activity_for_zoopla_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "house_prices_get_market_activity_for_zoopla_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "house_prices_get_sales_history_for_zoopla_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "house_prices_get_points_of_interest_for_zoopla_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "house_prices_get_market_activity_for_zoopla_v2", "api_action": "", "api_reaction": null}}]}
{"URL": "4366", "query": "My friend is developing a website and needs help with captcha verification. Can you assist him in generating a captcha image and a UUID? Additionally, please verify if the user entered the correct captcha by checking the captcha text and UUID.", "api_names": ["generate_captcha_for_captcha", "verify_the_captcha_for_captcha", "Finish", "reviews_list_for_yummly", "business_days_work_days_calculator_api_for_business_days_work_days_calculator_", "news_for_rocket_league", "api_socialmedia_for_celebrity_social_media_api", "query_for_city_names_by_state_for_de_boundaries_io", "team_statistics_for_football_dolphin", "trending_feed_video_posts_for_social_media_data_tt", "get_location_infomation_by_zipcode_for_redfin_base", "apis_for_all_data"], "api_descs": {"Finish": "No description available.", "api_socialmedia_for_celebrity_social_media_api": "Use this endpoint to fetch  Social Media Accounts", "apis_for_all_data": "Return data", "business_days_work_days_calculator_api_for_business_days_work_days_calculator_": "# Workdays Calculation API Documentation\n\nThe Workdays Calculation API allows you to calculate the date after a given number of workdays, taking into account weekends and holidays. By specifying the country code, number of workdays, start date, and options, you can retrieve the ISO date of the day after the workdays have passed.\n\n\n## Request Parameters\n\nThe API expects the following GET parameters:\n\n1. `state` (required): The country code for which the workdays are calculated. Please refer to the [list of country codes](https://www.nationsonline.org/oneworld/international-calling-codes.htm) to find the appropriate code for your country.\n\n2. `work_days` (required): The number of workdays to calculate. This indicates how many workdays should be skipped before determining the result.\n\n3. `start_date` (required): The starting date from which to begin counting the workdays. The format of the start date should be `DD/MM/YYYY`.\n\n4. `options` (optional): The options for skipping specific days. This parameter accepts the following values:\n   - `0`: Skip holidays and weekends.\n   - `1`: Skip only weekends.\n   - `2`: Skip only holidays.\n\n## Response\n\nThe API response will be a string representing the ISO date of the day after the specified workdays have passed.\n\n## Example\n\nGiven `start_date` of 19/05/2023, which is Friday, and `work_days` of 2, \nthe returned result will be 23/05/2023. Here's the breakdown of the calculation:\n\n- 19/5-20/5: Weekend (Saturday and Sunday)\n- 21/5: First workday\n- 22/5: Second workday\n\nTherefore, 23/5 is the day after the specified workdays have passed", "generate_captcha_for_captcha": "Generates a captcha and returns a UUID.", "get_location_infomation_by_zipcode_for_redfin_base": "Get location infomation by zipcode", "news_for_rocket_league": "Check the news:\n`rocket-league1.p.rapidapi.com/news`", "query_for_city_names_by_state_for_de_boundaries_io": "Query for list of city names by a state name.", "reviews_list_for_yummly": "List reviews, feedback from other users", "team_statistics_for_football_dolphin": "Team statistics", "trending_feed_video_posts_for_social_media_data_tt": "Get current trending feed. \n\n- Due to nature of this endpoint the **max_cursor** is not required. Each request can return different data by default\n- Endpoint will return an array of objects with very useful metadata. \n- Direct urls to the video , statistics and more.", "verify_the_captcha_for_captcha": "Verify the captcha"}, "aseqs": [{"api_name": "verify_the_captcha_for_captcha", "api_action": "\nAction: verify_the_captcha_for_captcha\nAction Input: {\n  \"captcha\": \"re7mWc\",\n  \"uuid\": \"2961c533-b254-4d48-8a0a-234ca85ef250\"\n}", "api_reaction": null}, {"api_name": "generate_captcha_for_captcha", "api_action": "\nAction: generate_captcha_for_captcha\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "generate_captcha_for_captcha"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_captcha_for_captcha"}}, {"state": "generated_by_agent", "aseq": {"api_name": "generate_captcha_for_captcha"}}]}
{"URL": "70761", "query": "I want to create a personalized workout plan and need exercises that target specific muscle groups. Can you suggest exercises that target the primary muscle group 'shoulders' and the secondary muscle group 'triceps'? I would also like to know the difficulty level and category for each exercise.", "api_names": ["get_attributes_for_musclewiki", "get_exercises_for_musclewiki", "Finish", "video_for__cheap_youtube_api_", "leagueshotactionsareasregularseason_for_basketapi", "1_3_add_working_hours_for_working_days", "send_message_for_clickatell", "get_list_of_github_repo_for_ruby_web_scrapping_for_github_api_scraper_", "movie_details_for_list_movies_v3", "v1_bucketlist_for_bucket_list_by_api_ninjas", "music_data_by_id_for_tiktok_solutions", "getpeople_for_a_i_smartable"], "api_descs": {"1_3_add_working_hours_for_working_days": "Add an amount of working time to a given start date/time", "Finish": "No description available.", "get_attributes_for_musclewiki": "Get Attributes you can use to filter exercises", "get_exercises_for_musclewiki": "Get all Exercises", "get_list_of_github_repo_for_ruby_web_scrapping_for_github_api_scraper_": "Get list of GitHub repo for Ruby web scrapping", "getpeople_for_a_i_smartable": "Get artificial intelligence influencers, entrepreneurs and top researchers.", "leagueshotactionsareasregularseason_for_basketapi": "Get the shot actions areas for the basketball league during the regular season.", "movie_details_for_list_movies_v3": "Returns the information about a specific movie", "music_data_by_id_for_tiktok_solutions": "Get** Music Data **by **ID**", "send_message_for_clickatell": "", "v1_bucketlist_for_bucket_list_by_api_ninjas": "Returns a random bucket list idea.", "video_for__cheap_youtube_api_": "Get all info about single Youtube video\nexample:  /videos/dQw4w9WgXcQ"}, "aseqs": [{"api_name": "get_exercises_for_musclewiki", "api_action": "\nAction: get_exercises_for_musclewiki\nAction Input: {}", "api_reaction": null}, {"api_name": "get_attributes_for_musclewiki", "api_action": "\nAction: get_attributes_for_musclewiki\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_exercises_for_musclewiki"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exercises_for_musclewiki", "api_action": "\nAction: get_exercises_for_musclewiki\nAction Input: {\"primary肌肉群\": \"肩膀\", \"辅助肌肉群\": \"三头肌\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_exercises_for_musclewiki"}}]}
{"URL": "5447", "query": "I'm writing a guidebook for Dungeons and Dragons players. Can you provide me with details about the fireball spell, such as its level, range, and area of effect? Additionally, I would like information about the blackrazor item and its properties.", "api_names": ["get_item_for_dungeons_and_dragon_5e", "get_spell_for_dungeons_and_dragon_5e", "Finish", "routehistory_for_sim_based_location_tracking", "search_person_by_name_for_b2bhint", "getlivemenustreaming_for_sportapi", "toutes_communes_for_bps", "get_balance_for_pancakeswap_api", "2_mensagens_do_chat_chat_message_for_compras_net_api", "getbysearch_for_house_plants", "outcomes_for_a_specific_crime_for_data_police_uk", "novels_for_web_novel_api"], "api_descs": {"2_mensagens_do_chat_chat_message_for_compras_net_api": "Chat", "Finish": "No description available.", "get_balance_for_pancakeswap_api": "Get token balance of specific address.", "get_item_for_dungeons_and_dragon_5e": "Returns information about the D&D item in JSON format. Only includes magic items, not equipment.", "get_spell_for_dungeons_and_dragon_5e": "Get information about a D&D spell like the school of magic, spell level and the full description.", "getbysearch_for_house_plants": "Searches through all plants and returns the closest results matching \"Latin name\", \"Family\", \"Other names\", \"Common name\", \"Common name (fr.)\", \"Description\", \"Categories\", \"Origin\" in order by highest most likely. This route is case insensitive and uses fuzzy search", "getlivemenustreaming_for_sportapi": "GetLiveMenuStreaming api data", "novels_for_web_novel_api": "Returns the amount of pages in the Novel Catalog.", "outcomes_for_a_specific_crime_for_data_police_uk": "Returns the outcomes (case history) for the specified crime. Crime ID is 64-character identifier, as returned by other API methods.", "routehistory_for_sim_based_location_tracking": "<p>Through this endpoint <b>route history</b> can be fetched of provided number..</p>\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>phone_number</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n<tr>\n<td>from_date</td>\n<td>Yes</td>\n<td>From date for Route history in YYYY/MM/DD formate</td>\n</tr>\n\n<tr>\n<td>to_date</td>\n<td>Yes</td>\n<td>To date for Route history in YYYY/MM/DD formate</td>\n</tr>\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>", "search_person_by_name_for_b2bhint": "Search for a person by parameters will return a list of persons that match your query", "toutes_communes_for_bps": "Récupère le PDF de toutes les communes de la Nouvelle Calédonie"}, "aseqs": [{"api_name": "get_spell_for_dungeons_and_dragon_5e", "api_action": "\nAction: get_spell_for_dungeons_and_dragon_5e\nAction Input: {\n  \"spell_name\": \"fireball\"\n}", "api_reaction": null}, {"api_name": "get_item_for_dungeons_and_dragon_5e", "api_action": "\nAction: get_item_for_dungeons_and_dragon_5e\nAction Input: {\n  \"item_name\": \"blackrazor\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_spell_for_dungeons_and_dragon_5e"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_spell_for_dungeons_and_dragon_5e", "api_action": "\nAction: get_spell_for_dungeons_and_dragon_5e\nAction Input: {\n  \"spell_name\": \"fireball\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_spell_for_dungeons_and_dragon_5e", "api_action": "\nAction: get_spell_for_dungeons_and_dragon_5e\nAction Input: {\n  \"spell_name\": \"fireball\"\n}", "api_reaction": null}}]}
{"URL": "71557", "query": "My company is developing a monitoring tool and we need to retrieve endpoint data for analysis. Can you fetch the endpoint data for a specific user and endpoint using the 'GetEndpointData' API? Please provide the user ID as '12345' and the endpoint ID as '54321'. Additionally, I would like to remove endpoint data for a specific user using the 'RemoveEndpointData' API. Please provide the user ID as '98765'.", "api_names": ["getuser_for_endpoint_monitor_tool", "removeendpointdata_for_endpoint_monitor_tool", "getendpointdata_for_endpoint_monitor_tool", "Finish", "send_sms_for_hqsms", "get_user_stories_by_id_for_instagram_fast", "actors_get_all_news_for_imdb", "search_gifs_for_humor_jokes_and_memes", "options_chain_for_fancyoptions", "base_for_apigabin", "united_states_job_postings_for_covid_19_economic_impact", "getuserlenses_for_snapchat", "get_related_video_with_keywords_for_tiktok_video_feature_summary", "caisoregion_for_caiso", "totd_tracks_by_date_for_trackmania", "read_user_usage_sum_for_ironwifi"], "api_descs": {"Finish": "No description available.", "actors_get_all_news_for_imdb": "Get all news of actor or actress", "base_for_apigabin": "uNE BASE", "caisoregion_for_caiso": "Gets Regional Authorities where node prices are tracked by CAISO", "get_related_video_with_keywords_for_tiktok_video_feature_summary": "get related video  list with list", "get_user_stories_by_id_for_instagram_fast": "Get instagram stories by user id", "getendpointdata_for_endpoint_monitor_tool": "This Endpoint retrieves the endpoint data from the specified UserId and EndpointId.", "getuser_for_endpoint_monitor_tool": "Gets and returns the current user data from the associated userId.", "getuserlenses_for_snapchat": "getUserLenses", "options_chain_for_fancyoptions": "This endpoint returns the an options chain for a given ticker and expiration date.\n\nDate format.  YYYY-MM-DD", "read_user_usage_sum_for_ironwifi": "READ - USER USAGE SUM", "removeendpointdata_for_endpoint_monitor_tool": "Remove an endpoint from you user account by Id.\n\n(KNOWN ISSUE with RAPIDAPI)\nSuccessfully deleting an enpoint will result with a 200, however it MAY provide an ERROR stating \"src property must be a valid json object\". This is an issue with RAPIDAPI and not our API.", "search_gifs_for_humor_jokes_and_memes": "Search for gifs.\nSee https://humorapi.com/docs/#Search-Gifs for more.", "send_sms_for_hqsms": "", "totd_tracks_by_date_for_trackmania": "Get the TOTD tracks by date containing the year and month.", "united_states_job_postings_for_covid_19_economic_impact": "Get weekly average percent change of job postings relative to January 4 - 31, 2020."}, "aseqs": [{"api_name": "getendpointdata_for_endpoint_monitor_tool", "api_action": "\nAction: getendpointdata_for_endpoint_monitor_tool\nAction Input: {\n  \"userid\": \"12345\",\n  \"endpointid\": \"54321\"\n}", "api_reaction": null}, {"api_name": "removeendpointdata_for_endpoint_monitor_tool", "api_action": "\nAction: removeendpointdata_for_endpoint_monitor_tool\nAction Input: {}", "api_reaction": null}, {"api_name": "getuser_for_endpoint_monitor_tool", "api_action": "\nAction: getuser_for_endpoint_monitor_tool\nAction Input: {\n  \"userid\": \"98765\"\n}", "api_reaction": null}, {"api_name": "getendpointdata_for_endpoint_monitor_tool", "api_action": "\nAction: getendpointdata_for_endpoint_monitor_tool\nAction Input: {\n  \"userid\": \"67890\",\n  \"endpointid\": \"98765\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getendpointdata_for_endpoint_monitor_tool"}}, {"state": "generated_by_agent", "aseq": {"api_name": "removeendpointdata_for_endpoint_monitor_tool", "api_action": "\nAction: removeendpointdata_for_endpoint_monitor_tool\nAction Input: {\n  \"userid\": \"98765\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getendpointdata_for_endpoint_monitor_tool", "api_action": "\nAction: getendpointdata_for_endpoint_monitor_tool\nAction Input: {\n  \"userid\": \"12345\",\n  \"endpointid\": \"54321\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getendpointdata_for_endpoint_monitor_tool", "api_action": "\nAction: getendpointdata_for_endpoint_monitor_tool\nAction Input: {\n  \"userid\": \"12345\",\n  \"endpointid\": \"54321\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getendpointdata_for_endpoint_monitor_tool", "api_action": "\nAction: getendpointdata_for_endpoint_monitor_tool\nAction Input: {\n  \"userid\": \"12345\",\n  \"endpointid\": \"54321\"\n}", "api_reaction": null}}]}
{"URL": "78530", "query": "I am working on a location-based application and need to fetch the boundaries for the LDU postal code 'L0R 1B7'. Can you provide me with this data? Additionally, I would like to create a hexagon with the H3 index '613257753791561700'.", "api_names": ["query_for_hexagon_by_h3index_for_ca_boundaries_io", "query_by_fsa_code_for_ca_boundaries_io", "query_for_ldu_boundary_for_ca_boundaries_io", "Finish", "locations_for_jet_set_radio_api", "leaguetotalteamevents_for_esportapi", "staticmaps_for_maptoolkit", "au_decode_for_vin_decoder_v4", "series_get_news_for_cricbuzz_cricket", "scrape_contact_details_from_a_website_for_contact_scraper", "ln_for_twelve_data", "services_free_for_streaming_availability", "supported_assets_for_futures", "response_by_quizid_for_moodring", "trending_charts_for_youtube_v3_lite", "top_collections_this_week_for_top_nft_sales", "cleanhydrotocarbonfootprint_for_carbonfootprint", "reverse_geocoding_for_reverse_geocoding_v3", "get_top_50_cryptocurrencies_details_for_crypto_update_live", "user_following_for_twitter_v2"], "api_descs": {"Finish": "No description available.", "au_decode_for_vin_decoder_v4": "AU Decode", "cleanhydrotocarbonfootprint_for_carbonfootprint": "Return the CO2e in Kg from the consumption of clean hydro energy", "get_top_50_cryptocurrencies_details_for_crypto_update_live": "This endpoint gives all the details of the top fifty cryptocurrencies.", "leaguetotalteamevents_for_esportapi": "Get last 5 events for a specific E-Sports league by providing the tournament ID and season ID.", "ln_for_twelve_data": "Natural Logarithm to the base of constant e(LN) transforms all data points with natural logarithm.", "locations_for_jet_set_radio_api": "Returns a list of all Locations in JSR/JSRF", "query_by_fsa_code_for_ca_boundaries_io": "Query by Postal FSA ( example T6H )", "query_for_hexagon_by_h3index_for_ca_boundaries_io": "Create a h3 hexagon with any h3Index value in the world.", "query_for_ldu_boundary_for_ca_boundaries_io": "Query by a LDU Postal Code", "response_by_quizid_for_moodring": "Get all responses of a certain quizId.", "reverse_geocoding_for_reverse_geocoding_v3": "Translate locations on the map into human-readable addresses.", "scrape_contact_details_from_a_website_for_contact_scraper": "this endpoint will scrape emails and phones from any website using it`s URL", "series_get_news_for_cricbuzz_cricket": "Get news by series", "services_free_for_streaming_availability": "Get the list of supported services and details about them", "staticmaps_for_maptoolkit": "Create a Staticmap.", "supported_assets_for_futures": "This endpoint returns all symbols supported by the * last *and* time-series *endpoint.", "top_collections_this_week_for_top_nft_sales": "Top trending collections this week", "trending_charts_for_youtube_v3_lite": "Get Trending Videos list or Chart.\nQuota cost is 1.", "user_following_for_twitter_v2": "Get User Following"}, "aseqs": [{"api_name": "query_for_ldu_boundary_for_ca_boundaries_io", "api_action": "\nAction: query_for_ldu_boundary_for_ca_boundaries_io\nAction Input: {\n  \"postal_ldu\": \"L0R 1B7\"\n}", "api_reaction": null}, {"api_name": "query_for_hexagon_by_h3index_for_ca_boundaries_io", "api_action": "\nAction: query_for_hexagon_by_h3index_for_ca_boundaries_io\nAction Input: {\n  \"h3index\": 613257753791561700\n}", "api_reaction": null}, {"api_name": "query_by_fsa_code_for_ca_boundaries_io", "api_action": "\nAction: query_by_fsa_code_for_ca_boundaries_io\nAction Input: {\n  \"postal_fsa\": \"L0R\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "query_for_ldu_boundary_for_ca_boundaries_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "query_for_hexagon_by_h3index_for_ca_boundaries_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "query_for_hexagon_by_h3index_for_ca_boundaries_io"}}, {"state": "generated_by_agent", "aseq": {"api_name": "query_for_ldu_boundary_for_ca_boundaries_io", "api_action": "\nAction: query_for_ldu_boundary_for_ca_boundaries_io\nAction Input: {\n  \"postal_ldu\": \"L0R 1B7\"\n}", "api_reaction": null}}]}
{"URL": "28118", "query": "I'm interested in knowing the local time and timezone information for the coordinates 51.5074° N, 0.1278° W. Additionally, please provide me with the nearest three cities, their populations, and the distances from my location. Thank you!", "api_names": ["getnearestcities_for_reverse_geocoding_and_geolocation_service", "gettimezone_for_reverse_geocoding_and_geolocation_service", "Finish", "anime_gif_for_any_anime", "proxy_request_endpoint_for_cors_proxy", "market_get_international_for_fidelity_investments", "events_for_item_by_date_range_for_sagenda_v3", "get_twitter_feed_for_all_crypto_news_feed", "search_jobs_for_job_search", "get_history_for_web_image_storage", "air_quality_forecasts_for_air_quality_api", "getphonenumbers_for_mailslurp_email_testing", "get_infringement_v1_infringement_research_predict_get_for_stacks_patent_similarity", "scrape_contact_details_from_a_website_for_contact_scraper", "get_search_for_fluximmo", "get_version_for_fashion", "instagram_endpoint_for_access_instagram", "3d_live_for_shwe_2d_live_api"], "api_descs": {"3d_live_for_shwe_2d_live_api": "3D Live", "Finish": "No description available.", "air_quality_forecasts_for_air_quality_api": "Gives hourly air quality forecast for a given city!", "anime_gif_for_any_anime": "Get anime gif pfp's / banners", "events_for_item_by_date_range_for_sagenda_v3": "Returns an array of events that start in the date range between startDate and endDate (inclusive) for given bookable item", "get_history_for_web_image_storage": "Returns the history as pages", "get_infringement_v1_infringement_research_predict_get_for_stacks_patent_similarity": "Create a request item with the following information:\n\n- **text**: could be the description of a company asset or a product explanation. It should be minimum length of `20` words for better performance. Note that GET queries are limited to `2048` characters (_required_).\n- **patent_number**: should start with a country code and end with the _Kind_ _Code_. You can enter as many as `5` patent numbers, each separated with a comma (_required_).\n- **model_name**: is the name of the model empowering Stacks Patent Similarity engine. Defaults to `stk_nova`.", "get_search_for_fluximmo": "get_search", "get_twitter_feed_for_all_crypto_news_feed": "Returns Twitter Feed.", "get_version_for_fashion": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "getnearestcities_for_reverse_geocoding_and_geolocation_service": "Returns a readable place name as nearest 3 cities with population, country and distance based on given latitude/longitude pair.", "getphonenumbers_for_mailslurp_email_testing": " ", "gettimezone_for_reverse_geocoding_and_geolocation_service": "Finds the local timezone for any given geo-location point by lat and long and returns timezone information with Timezone name, Timezone id and current local time.", "instagram_endpoint_for_access_instagram": "Instagram Endpoint", "market_get_international_for_fidelity_investments": "Get international markets information", "proxy_request_endpoint_for_cors_proxy": "returns response text of a given website using cors proxy", "scrape_contact_details_from_a_website_for_contact_scraper": "this endpoint will scrape emails and phones from any website using it`s URL", "search_jobs_for_job_search": "Search jobs by input value"}, "aseqs": [{"api_name": "gettimezone_for_reverse_geocoding_and_geolocation_service", "api_action": "\nAction: gettimezone_for_reverse_geocoding_and_geolocation_service\nAction Input: {\n  \"latitude\": 51.5074,\n  \"longitude\": -0.1278\n}", "api_reaction": null}, {"api_name": "getnearestcities_for_reverse_geocoding_and_geolocation_service", "api_action": "\nAction: getnearestcities_for_reverse_geocoding_and_geolocation_service\nAction Input: {\n  \"latitude\": 51.5074,\n  \"longitude\": -0.1278,\n  \"range\": 10000\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "gettimezone_for_reverse_geocoding_and_geolocation_service"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getnearestcities_for_reverse_geocoding_and_geolocation_service"}}, {"state": "generated_by_agent", "aseq": {"api_name": "gettimezone_for_reverse_geocoding_and_geolocation_service", "api_action": "\nAction: gettimezone_for_reverse_geocoding_and_geolocation_service\nAction Input: {\n  \"latitude\": 51.5074,\n  \"longitude\": -0.1278\n}", "api_reaction": null}}]}
{"URL": "64655", "query": "I'm a digital marketer and I want to analyze the social media strategy of a specific brand on Instagram. Can you provide me with information about their Instagram account, including their number of followers, recent posts, and the influencers they collaborate with?", "api_names": ["Finish", "instagram_user_info_for_instagram_v9", "instagram_post_info_for_instagram_v9", "search_for_jailbase", "timezonelist_for_gtrend", "getesgscores_for_gaialens_esg_scores", "can_create_live_stream_for_scraptik", "hotel_info_for_hotels_com_provider", "get_for_ordering", "loginuser_for_apfd", "generate_api_key_for_qr_code_dynamic_and_static", "script_for_unicode_codepoints", "v1_airquality_for_air_quality_demo_1", "us_license_plate_to_vin_for_vin_decoder", "equity_live_for_quotient"], "api_descs": {"Finish": "No description available.", "can_create_live_stream_for_scraptik": "Check if user can create live streams on TikTok.", "equity_live_for_quotient": "Return current market price data given the input parameters.", "generate_api_key_for_qr_code_dynamic_and_static": "From this endpoint you can generate a single api key.\n\nIt will be used to link all the qr code created, and allow any changes.\n\nImportant: Keep in mind that once generated, it is necessary that you store this key well, since it is not possible to recover it, and without it, you do not have access to change any of your QR Codes.", "get_for_ordering": "Get single order by ID.", "getesgscores_for_gaialens_esg_scores": "This API provides real-time Environmental, Social, Governance and Overall scores for companies on a scale of 0 to 100. In addition to this, the API also provides other relevant metrics like Global Rank, Industry Rank and more.", "hotel_info_for_hotels_com_provider": "Get hotel info", "instagram_post_info_for_instagram_v9": "Get Instagram Post (likes, comments, hashtags, mentions, location, etc.)", "instagram_user_info_for_instagram_v9": "Get Instagram account information", "loginuser_for_apfd": " ", "script_for_unicode_codepoints": "Information about a Script", "search_for_jailbase": "Search for individuals by name", "timezonelist_for_gtrend": " ", "us_license_plate_to_vin_for_vin_decoder": "Get the vin by license plate number.", "v1_airquality_for_air_quality_demo_1": ""}, "aseqs": [{"api_name": "instagram_user_info_for_instagram_v9", "api_action": "\nAction: instagram_user_info_for_instagram_v9\nAction Input: {\n  \"query\": \"brandname\"\n}", "api_reaction": null}, {"api_name": "instagram_post_info_for_instagram_v9", "api_action": "\nAction: instagram_post_info_for_instagram_v9\nAction Input: {\n  \"query\": \"brandname\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get information about the Instagram account, including followers count, recent posts, and influencers collaborations.\n\t\"api_name\": \"instagram_user_info_for_instagram_v9\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "instagram_post_info_for_instagram_v9"}}, {"state": "generated_by_agent", "aseq": {"api_name": "instagram_post_info_for_instagram_v9", "api_action": "\nAction: instagram_post_info_for_instagram_v9\nAction Input: {\n  \"query\": \"brandname\",\n  \"include_commentslikereactions\": true,\n  \"sort_by_activity\": true,\n  \"post_age_range\": {}\n}", "api_reaction": null}}]}
{"URL": "68187", "query": "I want to find information about a specific company. Can you help me by extracting data from the company's LinkedIn profile using the extract API? Additionally, I would like to search for other profiles of employees working in the same company using the search API.", "api_names": ["search_for_linkedin_profiles", "extract_for_linkedin_profiles", "Finish", "validation_for_demo", "game_odds_by_site_schedule_for_sportsbook_odds", "find_feed_find_get_for_facebook_user_info", "business_units_detail_for_unofficial_trust_pilot", "getallorders_for_ecartapi", "getusersforslot_for_mybooky_demo", "categories_for_facebook_marketplace", "search_for_g_search", "countries_allcontries_for_africa_api_", "get_time_series_data_for_quandl", "web_exchanges_for_open_defi", "api_v2_activities_before_2014_07_24t18_00_00z_after_2014_07_14t18_00_00z_for_2peak_com_dynamic_training_plans_for_cycling_running_and_triathlon", "is_whatsapp_for_business_for_whatsapp_scraper", "getmanufacturervalues_for_the_cancer_imaging_archive", "lqv_for_lqv68"], "api_descs": {"Finish": "No description available.", "api_v2_activities_before_2014_07_24t18_00_00z_after_2014_07_14t18_00_00z_for_2peak_com_dynamic_training_plans_for_cycling_running_and_triathlon": "Get Activities", "business_units_detail_for_unofficial_trust_pilot": "Get detailed information of a business unit", "categories_for_facebook_marketplace": "Facebook items categories", "countries_allcontries_for_africa_api_": "Returns a json of all countries in Africa. Details include: \"name\":\"Algeria\"\n\"latitude\", \"longitude\", \"phone_code\", \"abbreviation\", \"capital_city\"", "extract_for_linkedin_profiles": "Extracts data from Linkedin URL (profile or company page).", "find_feed_find_get_for_facebook_user_info": "Find Feed by UID or by_object_id(PageID, GroupID) ", "game_odds_by_site_schedule_for_sportsbook_odds": "This is a schedule that is separated by site. Upper and lower case doesn't matter as long as it has the correct letters for the request (DraftKings is same as draftkings)\n\nThe Sites:\n1. Fanduel\n2. DraftKings\n3. Caesars\n4. WynnBet\n5. PointsBet\n6. BetMGM\n7. SuperBook\n8. FoxBet\n9. Kambis    (SugarHouse/BetRivers/Barstool)", "get_time_series_data_for_quandl": "This call returns data from a specified time-series.", "getallorders_for_ecartapi": "<p><b>Note:</b><br>\nFilters are available depending of the ecommerce\n</p>", "getmanufacturervalues_for_the_cancer_imaging_archive": "Returns a set of all manufacturer names filtered by query keys", "getusersforslot_for_mybooky_demo": " ", "is_whatsapp_for_business_for_whatsapp_scraper": "Requests to this endpoint will return `true` if the number is a **Whatsapp for Business** account, or `false` if it's not.", "lqv_for_lqv68": "get whois", "search_for_g_search": "Get Real-time Search Result Page", "search_for_linkedin_profiles": "Search company or profile", "validation_for_demo": "qw", "web_exchanges_for_open_defi": " "}, "aseqs": [{"api_name": "extract_for_linkedin_profiles", "api_action": "\nAction: extract_for_linkedin_profiles\nAction Input: {\n  \"url\": \"https://www.linkedin.com/company/nextera-energy-inc?trk=public_profile_experience-group-header\"\n}", "api_reaction": null}, {"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"NextEra Energy Inc\",\n  \"type\": \"company\"\n}", "api_reaction": null}, {"api_name": "extract_for_linkedin_profiles", "api_action": "\nAction: extract_for_linkedin_profiles\nAction Input: {\n  \"url\": \"https://www.linkedin.com/company/nextera-energy-inc?trk=public_profile_experience-group-header\"\n}", "api_reaction": null}, {"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"NextEra Energy Inc\",\n  \"type\": \"company\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "extract_for_linkedin_profiles"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles"}}, {"state": "generated_by_agent", "aseq": {"api_name": "extract_for_linkedin_profiles", "api_action": "\nAction: extract_for_linkedin_profiles\nAction Input: {\n  \"url\": \"https://www.linkedin.com/company/nextera-energy-inc?trk=public_profile_experience-group-header\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_for_linkedin_profiles", "api_action": "\nAction: search_for_linkedin_profiles\nAction Input: {\n  \"query\": \"NextEra Energy Inc employees\",\n  \"type\": \"people\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "extract_for_linkedin_profiles", "api_action": "\nAction: extract_for_linkedin_profiles\nAction Input: {\n  \"url\": \"https://www.linkedin.com/company/nextera-energy-inc?trk=public_profile_experience-group-header\",\n  \"query\": \"NextEra Energy Inc\"\n}", "api_reaction": null}}]}
{"URL": "74527", "query": "I'm planning a game night with my friends and we want to include dad jokes as part of the fun. Can you search for jokes with the keyword 'game' and another joke with the keyword 'fun'? Please ensure each joke is different. It would be fantastic if you could also provide a random joke. Thanks!", "api_names": ["dad_jokes_search_for_dad_jokes_v2", "dad_jokes_random_for_dad_jokes_v2", "Finish", "femalefighterimageplaceholder_for_mmaapi", "cities_states_for_transportistas_de_argentina", "gera_comprovante_simples_for_consulta_cnpj_tempo_real", "loginuser_for_petstoreapi2_0", "getmynotebooks_for_ishan", "artist_discography_overview_for_spotify", "get_infringement_v1_infringement_research_predict_get_for_stacks_patent_similarity", "profile_for_tiktok_v2", "tickets_for_an_event_for_ticketbud"], "api_descs": {"Finish": "No description available.", "artist_discography_overview_for_spotify": "Get artist discography overview", "cities_states_for_transportistas_de_argentina": "List of states for Argentina with iso code.", "dad_jokes_random_for_dad_jokes_v2": "Return random joke.", "dad_jokes_search_for_dad_jokes_v2": "Search for a joke by a keyword. Keyword will be used as is in the search. E.g. if you need to search for a joke with the keyword \"dad\" in it, you will need to pass \"dad\" as the keyword. If you need to search for a joke with specific word, you will need to pass keyword with surrounding spaces or punctuation, e.g. \" dad\". Search is not case-sensitive.\n\nAPI return is limited to 3 records per one search request.", "femalefighterimageplaceholder_for_mmaapi": "Get female fighter placeholder image", "gera_comprovante_simples_for_consulta_cnpj_tempo_real": "Gera Comprovante em PDF do Simples Nacional", "get_infringement_v1_infringement_research_predict_get_for_stacks_patent_similarity": "Create a request item with the following information:\n\n- **text**: could be the description of a company asset or a product explanation. It should be minimum length of `20` words for better performance. Note that GET queries are limited to `2048` characters (_required_).\n- **patent_number**: should start with a country code and end with the _Kind_ _Code_. You can enter as many as `5` patent numbers, each separated with a comma (_required_).\n- **model_name**: is the name of the model empowering Stacks Patent Similarity engine. Defaults to `stk_nova`.", "getmynotebooks_for_ishan": " ", "loginuser_for_petstoreapi2_0": "", "profile_for_tiktok_v2": "Get T-tok Profile Data", "tickets_for_an_event_for_ticketbud": "All tickets for an event that you have access to"}, "aseqs": [{"api_name": "dad_jokes_search_for_dad_jokes_v2", "api_action": "\nAction: dad_jokes_search_for_dad_jokes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "dad_jokes_search_for_dad_jokes_v2", "api_action": "\nAction: dad_jokes_search_for_dad_jokes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "dad_jokes_random_for_dad_jokes_v2", "api_action": "\nAction: dad_jokes_random_for_dad_jokes_v2\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "dad_jokes_search_for_dad_jokes_v2"}}, {"state": "generated_by_agent", "aseq": {"api_name": "dad_jokes_search_for_dad_jokes_v2", "api_action": "{\"keyword\": \"game\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "dad_jokes_search_for_dad_jokes_v2", "api_action": "{\"keyword\": \"game\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "dad_jokes_search_for_dad_jokes_v2", "api_action": "{\"keyword\": \"game\"}", "api_reaction": null}}]}
{"URL": "44247", "query": "I'm a sports blogger and I want to write an article about the upcoming games and bookmaker odds for the EPL. Can you provide me with a list of live and upcoming games for EPL, along with the bookmaker odds for the UK region?", "api_names": ["Finish", "v4_sports_sport_odds_for_live_sports_odds", "v4_sports_for_live_sports_odds", "v4_sports_sport_scores_for_live_sports_odds", "get_biden_articles_from_specific_newspaper_for_pac_api", "lines_line_abs_for_poetry_db", "logoutuser_for_urltest", "etf_retrieve_for_palmy_investing_api", "get_all_biden_articles_for_pac_api", "amir_for_amir1", "get_channel_panels_for_twitch_api", "meanings_for_gruite", "get_info_by_city_for_zippopotam_us", "sec_filings_for_sec_filings", "get_device_asset_by_identifier_for_basic_info_vikkon_assets", "s_p_500_verticals_for_fancyoptions", "sponsor_players_for_trackmania", "get_response_for_fast_hcaptcha_solver", "supply_chain_for_corporate_supply_chain", "web_top_momentum_for_open_defi"], "api_descs": {"Finish": "No description available.", "amir_for_amir1": "pet", "etf_retrieve_for_palmy_investing_api": "Retrieve all important price information of an ETF", "get_all_biden_articles_for_pac_api": "This end point will return all articles from each major newspaper for Biden", "get_biden_articles_from_specific_newspaper_for_pac_api": "this endpoint returns all articles for Biden from a specified newspaper", "get_channel_panels_for_twitch_api": "Get Channel Panels", "get_device_asset_by_identifier_for_basic_info_vikkon_assets": "External info Device-Asset by Identifier", "get_info_by_city_for_zippopotam_us": "", "get_response_for_fast_hcaptcha_solver": "Get response using the Id received from the create Hcaptcha Request", "lines_line_abs_for_poetry_db": "All poems that contain a specific line", "logoutuser_for_urltest": "Logs out current logged in user session", "meanings_for_gruite": "Meaning of the word", "s_p_500_verticals_for_fancyoptions": "This endpoint returns the call and put spreads from the S&P 500 with the highest credits. The verticals that are returned have a 70% chance of being out of the money at time of expirations. This endpoint is updated hourly.", "sec_filings_for_sec_filings": "Returns a list of SEC Filings for the requested company.", "sponsor_players_for_trackmania": "Get Players that are sponsors.", "supply_chain_for_corporate_supply_chain": "Get supply chain information.", "v4_sports_for_live_sports_odds": "Returns a list of available sports and tournaments. Use the `sports_key` in requests for /odds and /scores endpoints.", "v4_sports_sport_odds_for_live_sports_odds": "Returns list of live and upcoming games for a given sport, showing bookmaker odds for the specified region and markets. Set the `sport` to a `sport_key` from the /sports endpoint. Alternatively if `sport=upcoming`, it will return a list of the next 8 upcoming games across all sports, as well as any live games. For more info, see [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html) and [list of available bookmakers](https://the-odds-api.com/sports-odds-data/bookmaker-apis.html).", "v4_sports_sport_scores_for_live_sports_odds": "Returns list of live and upcoming games for a given sport, and optionally recently completed games. Live and completed games will contain scores. **Currently in beta** and only available for selected sports. For more info, see the [list of available sports](https://the-odds-api.com/sports-odds-data/sports-apis.html)", "web_top_momentum_for_open_defi": "\nReturn top up and down 100 price changes for 24h.\n\nThe results are split for all trading pairs and trading pairs with $1M min liquidity.\n"}, "aseqs": [{"api_name": "v4_sports_sport_odds_for_live_sports_odds", "api_action": "\nAction: v4_sports_sport_odds_for_live_sports_odds\nAction Input: {\n  \"sport\": \"epl\",\n  \"regions\": \"uk\"\n}", "api_reaction": null}, {"api_name": "v4_sports_sport_scores_for_live_sports_odds", "api_action": "\nAction: v4_sports_sport_scores_for_live_sports_odds\nAction Input: {\n  \"sport\": \"epl\"\n}", "api_reaction": null}, {"api_name": "v4_sports_for_live_sports_odds", "api_action": "\nAction: v4_sports_for_live_sports_odds\nAction Input: {}", "api_reaction": null}, {"api_name": "v4_sports_sport_odds_for_live_sports_odds", "api_action": "\nAction: v4_sports_sport_odds_for_live_sports_odds\nAction Input: {\n  \"sport\": \"soccer_epl\",\n  \"regions\": \"uk\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_odds_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_odds_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_odds_for_live_sports_odds"}}, {"state": "generated_by_agent", "aseq": {"api_name": "v4_sports_sport_odds_for_live_sports_odds"}}]}
{"URL": "74400", "query": "I'm curious about the films currently playing at the cinemas in Argentina. Can you provide me with the film names, descriptions, and showtimes? Additionally, give me the cinema addresses for the brand 'hoyts'.", "api_names": ["cinemas_for_argentina_movie_theatres", "Finish", "advanced_phone_number_lookup_for_scout", "tokens_all_market_cap_for_defi_watch", "search_a_range_for_advanced_serp_operators", "keywords_for_everypixel_image_recognition", "title_streaming_sources_for_watchmode", "user_details_for_spotify_v2"], "api_descs": {"Finish": "No description available.", "advanced_phone_number_lookup_for_scout": "**Advanced Phone Number Information**\n\n*retrieves valuable technical data about a phone number*\n\n- validity\n\n- approximate location\n\n- timezone\n\n- carrier\n\n- line type\n\n- ported status\n\n- carrier\n\n- robocall/spam score\n\n- much more", "cinemas_for_argentina_movie_theatres": " ", "keywords_for_everypixel_image_recognition": "By sending an image to this method you can get a list of suggested keywords. You may specify a number of returned words or a threshold of its minimum score. Just provide num_keywords or threshold parameter to this method.", "search_a_range_for_advanced_serp_operators": "Search \"Android phone\" but only show results where the price ranges from $300-$500; also works for dates and other numbers", "title_streaming_sources_for_watchmode": "Get all of the streaming sources this title is available on and direct links to watch the title (web, iOS deeplinks and Android deeplinks for paid users). Streaming sources are limited to USA only for free plans.", "tokens_all_market_cap_for_defi_watch": "Get data about  tokens with market capitalisation and filter them", "user_details_for_spotify_v2": "get user details of any Spotify user"}, "aseqs": [{"api_name": "cinemas_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_for_argentina_movie_theatres\nAction Input: {}", "api_reaction": null}, {"api_name": "cinemas_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_for_argentina_movie_theatres\nAction Input: {}", "api_reaction": null}, {"api_name": "cinemas_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_for_argentina_movie_theatres\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "cinemas_for_argentina_movie_theatres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cinemas_for_argentina_movie_theatres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cinemas_for_argentina_movie_theatres"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cinemas_for_argentina_movie_theatres", "api_action": "\nAction: cinemas_for_argentina_movie_theatres\nAction Input: {}", "api_reaction": null}}]}
{"URL": "83813", "query": "I am looking for a furnished apartment for rent in Dubai. Can you suggest some locations in Dubai that have a high number of available furnished apartments for rent? It would be helpful to see the names and locations of these locations.", "api_names": ["Finish", "properties_list_for_bayut", "auto_complete_for_bayut", "video_for__cheap_youtube_api_", "gives_the_weight_catergory_based_on_the_bmi_for_bmi_v2", "find_comment_find_get_for_facebook_user_info", "gettest_for_testapi_v4", "getpowerplantbyradiusandaddress_for_rankiteo_climate_risk_assessment", "get_monthly_top_100_music_torrents_for_movie_tv_music_search_and_download", "api_category_categoryid_products_for_magic_aliexpress", "get_a_specific_order_for_tradier", "list_of_periods_for_pinnacle_odds", "get_vehicle_models_for_car_utils", "qr_code_image_copy_for_qr_code_api_v67", "community_post_details_for_youtube_data", "get_property_by_id_for_real_estate_usa", "matchhighlights_for_icehockeyapi", "fetchallschemetypes_for_latest_mutual_fund_nav"], "api_descs": {"Finish": "No description available.", "api_category_categoryid_products_for_magic_aliexpress": "This resource represents the product list; you can filter by\n - attributes\n - minimum price\n - brand \n - ship to country\n - ship from country\n - max sale price \n<br> **For information, One first request, you must not indicate the attr & brands, you retrieve this informations in the Product Object.**", "auto_complete_for_bayut": "Get suggestions of locations by term or phrase", "community_post_details_for_youtube_data": "community-post-details", "fetchallschemetypes_for_latest_mutual_fund_nav": "Fetch All Scheme Types", "find_comment_find_get_for_facebook_user_info": "Find Comment by UID or by_object_id(PageID, GroupID) ", "get_a_specific_order_for_tradier": "", "get_monthly_top_100_music_torrents_for_movie_tv_music_search_and_download": "Monthly Top 100 Music Torrents", "get_property_by_id_for_real_estate_usa": "get property by id", "get_vehicle_models_for_car_utils": "Get all supported vehicle models for specified make.", "getpowerplantbyradiusandaddress_for_rankiteo_climate_risk_assessment": "Get powerplants which have address falling into a specific radius", "gettest_for_testapi_v4": "get", "gives_the_weight_catergory_based_on_the_bmi_for_bmi_v2": "The API catergorizes the person based on the BMI. The catergories would be Underweight, Normal weight, Overweight, Obesity Class I, Obesity Class II and Obesity Class III. These definitions differ in Asians hence you may be able to enter the ethnicity of the person (Asian or not asian)", "list_of_periods_for_pinnacle_odds": "Get a list of periods", "matchhighlights_for_icehockeyapi": "Get the highlights for a specific Ice Hockey match using the match id.", "properties_list_for_bayut": "List properties with options and filters", "qr_code_image_copy_for_qr_code_api_v67": "This end point takes a 'GET' request with url / string as a parameter and returns QR code image.", "video_for__cheap_youtube_api_": "Get all info about single Youtube video\nexample:  /videos/dQw4w9WgXcQ"}, "aseqs": [{"api_name": "auto_complete_for_bayut", "api_action": "\nAction: auto_complete_for_bayut\nAction Input: {\n  \"query\": \"Dubai\"\n}", "api_reaction": null}, {"api_name": "properties_list_for_bayut", "api_action": "\nAction: properties_list_for_bayut\nAction Input: {\n  \"locationexternalids\": \"5002\",\n  \"purpose\": \"for-rent\",\n  \"furnishingstatus\": \"furnished\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_bayut"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_bayut"}}, {"state": "generated_by_agent", "aseq": {"api_name": "properties_list_for_bayut"}}]}
{"URL": "20347", "query": "I'm a financial consultant and I need to analyze the financial performance of different companies. Can you provide me with the historical prices for Tesla (TSLA) and Amazon (AMZN) for the past five years? Additionally, I need the income statement data for Tesla for the past ten years, including revenue, cost of goods sold, gross profit, research and development expenses, operating income, income taxes, and net income. Lastly, I would like the balance sheet data for Apple (AAPL) for the past three years, including cash on hand, receivables, inventory, property, plant, and equipment.", "api_names": ["financial_income_statement_for_macrotrends_finance", "history_prices_for_macrotrends_finance", "financial_balance_sheet_for_macrotrends_finance", "Finish", "test_endpoint_for_test_v18", "get_laws_for_all_states_for_us_gun_laws", "getbystock_for_earningsdata", "10_year_historical_quarterly_prices_for_stock_prices", "quality_for_list_movies", "profile_igtv_for_instagram_scraper_2023_v2", "reverse_geocoding_for_mymappi", "aircraft_details_by_icao_for_fachaapi", "getteams_for_wosti_futbol_tv_peru", "languagedetection_for_what_s_language", "wnba_standings_for_wnba_api", "results_by_date_for_cricket_live_data", "event_rounds_results_golf_for_flashlive_sports", "feeds_search_for_yummly", "advanced_phone_number_lookup_for_scout", "matchbestplayers_for_icehockeyapi"], "api_descs": {"10_year_historical_quarterly_prices_for_stock_prices": "10 Year quarterly historically adjusted Open, High, Low, and Close prices.  Quarterly Volume, Dividend, and Split information is also included.", "Finish": "No description available.", "advanced_phone_number_lookup_for_scout": "**Advanced Phone Number Information**\n\n*retrieves valuable technical data about a phone number*\n\n- validity\n\n- approximate location\n\n- timezone\n\n- carrier\n\n- line type\n\n- ported status\n\n- carrier\n\n- robocall/spam score\n\n- much more", "aircraft_details_by_icao_for_fachaapi": "Get Aircraft details for a specific ICAO HEX Code", "event_rounds_results_golf_for_flashlive_sports": "Rounds results (golf) by  and event ID, (golf)", "feeds_search_for_yummly": "Search for recipes by name and option filters", "financial_balance_sheet_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.", "financial_income_statement_for_macrotrends_finance": "Gives 10 years data of cash statement by the given ticker symbol.\n\nTo choose for a time format put a QUERY PARAMETER (freq) either \"A\" for annual or \"Q\" for quarterly\n\n(symbol) To choose what ticker symbol to see the company financials.", "get_laws_for_all_states_for_us_gun_laws": "This endpoint will provide links to gun law documentation for all 50 states.", "getbystock_for_earningsdata": "Get earnings data by symbol.", "getteams_for_wosti_futbol_tv_peru": "Obtener el listado de equipos de fútbol televisados en Perú.", "history_prices_for_macrotrends_finance": "This gives you the Date, Open, High, Low, Close, Adj Close, Volume prices of the stock\n\nQUERY PARAMETER: symbol the ticker symbol of the company you want to see.\n\nQUERY PARAMETER: range = ['1y', '5y', 'max']", "languagedetection_for_what_s_language": "Detect the language of a given text and return the detected language code", "matchbestplayers_for_icehockeyapi": "Get the best players for a specific Ice Hockey match using the match id.", "profile_igtv_for_instagram_scraper_2023_v2": "Profile IGTV", "quality_for_list_movies": "Used to filter by a given quality", "results_by_date_for_cricket_live_data": "Lists results for given date", "reverse_geocoding_for_mymappi": "Translates a coordinate as input into its postal address.", "test_endpoint_for_test_v18": "test endpoint", "wnba_standings_for_wnba_api": "The endpoint provides you with the team standings for the WNBA"}, "aseqs": [{"api_name": "history_prices_for_macrotrends_finance", "api_action": "\nAction: history_prices_for_macrotrends_finance\nAction Input: {}", "api_reaction": null}, {"api_name": "history_prices_for_macrotrends_finance", "api_action": "\nAction: history_prices_for_macrotrends_finance\nAction Input: {}", "api_reaction": null}, {"api_name": "history_prices_for_macrotrends_finance", "api_action": "\nAction: history_prices_for_macrotrends_finance\nAction Input: {}", "api_reaction": null}, {"api_name": "financial_income_statement_for_macrotrends_finance", "api_action": "\nAction: financial_income_statement_for_macrotrends_finance\nAction Input: {\n  \"symbol\": \"TSLA\",\n  \"freq\": \"A\"\n}", "api_reaction": null}, {"api_name": "financial_balance_sheet_for_macrotrends_finance", "api_action": "\nAction: financial_balance_sheet_for_macrotrends_finance\nAction Input: {\n  \"symbol\": \"AAPL\",\n  \"freq\": \"A\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "history_prices_for_macrotrends_finance"}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"financial_income_statement_for_macrotrends_finance\",\n\t\"api_action\": \"\\nAction: financial_income_statement_for_macrotrends_finance\\nAction Input: {\"symbol\": \"TSLA\", \"freq\": \"Q\"}\",\n\t\"api_reaction\": null\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "financial_income_statement_for_macrotrends_finance", "api_action": "\nAction: financial_income_statement_for_macrotrends_finance\nAction Input: {\"symbol\": \"TSLA\", \"freq\": \"Q\", \"range\": \"5y\"}\nAction Input: {\"symbol\": \"AMZN\", \"freq\": \"Q\", \"range\": \"5y\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_prices_for_macrotrends_finance", "api_action": "\nAction: history_prices_for_macrotrends_finance\nAction Input: {\"symbol\": \"TSLA\", \"range\": \"5y\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_prices_for_macrotrends_finance", "api_action": "\nAction: history_prices_for_macrotrends_finance\nAction Input: {\n  \"symbol\": \"TSLA\",\n  \"range\": \"5y\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "history_prices_for_macrotrends_finance", "api_action": "\nAction: history_prices_for_macrotrends_finance\nAction Input: {\n  \"symbol\": \"TSLA\",\n  \"range\": \"5y\"\n}", "api_reaction": null}}]}
{"URL": "1124", "query": "I'm an art enthusiast who wants to explore the world of NFT artworks. Can you provide me with a list of the most expensive NFT artworks available in galleries like SuperRare, MakersPlace, and Async Art? It would be great if I could see the images and descriptions of these artworks.", "api_names": ["most_expensive_for_most_expensive_nft_artworks", "latest_sold_for_most_expensive_nft_artworks", "Finish", "shows_id_episodes_for_streamlinewatch_streaming_guide", "get_math_fact_for_numbers", "search_single_postcode_for_uk_postcode_to_latitude_and_longitude", "playerlastevents_for_sportifyapi", "get_access_settings_for_hris", "latest_mmo_news_for_mmo_games", "all_dog_breed_for_dogbreeddb", "search_memes_for_humor_jokes_and_memes", "get_all_api_versions_for_aaaa", "getrecordsbystark_key_for_reddio_nft_token_and_ipfs", "properties_get_facilities_for_booking", "get_taxonomies_id_b2a5d5a0_3692_43aa_ae85_624855b4cde8_for_the_south_asian_express"], "api_descs": {"Finish": "No description available.", "all_dog_breed_for_dogbreeddb": "Gets details of all dog breeds.", "get_access_settings_for_hris": "Get stored Access Setting for a specific customer", "get_all_api_versions_for_aaaa": "Get all the versions (and their corresponding information) that exist for a specified API.", "get_math_fact_for_numbers": "Get a mathematical property about a number", "get_taxonomies_id_b2a5d5a0_3692_43aa_ae85_624855b4cde8_for_the_south_asian_express": "Get Single Taxonomy", "getrecordsbystark_key_for_reddio_nft_token_and_ipfs": " ", "latest_mmo_news_for_mmo_games": "Latest MMO News powered by MMOBomb.", "latest_sold_for_most_expensive_nft_artworks": "Get recent sold artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare", "most_expensive_for_most_expensive_nft_artworks": "Get most expensive artworks list.\n\n**Possible filtering by gallery: **\nArt Blocks\nAsync Art\nAuction Houses\nFoundation\nhic et nunc\nKnownOrigin\nMakersPlace\nNifty Gateway\nSuperRare", "playerlastevents_for_sportifyapi": "Player Last Events", "properties_get_facilities_for_booking": "Get facilities of property by id", "search_memes_for_humor_jokes_and_memes": "Search for memes.\nSee https://humorapi.com/docs/#Search-Memes for more.", "search_single_postcode_for_uk_postcode_to_latitude_and_longitude": "Search a single postcode and return the latitude and longitude", "shows_id_episodes_for_streamlinewatch_streaming_guide": "List all the episodes from the show"}, "aseqs": [{"api_name": "most_expensive_for_most_expensive_nft_artworks", "api_action": "\nAction: most_expensive_for_most_expensive_nft_artworks\nAction Input: {}", "api_reaction": null}, {"api_name": "latest_sold_for_most_expensive_nft_artworks", "api_action": "\nAction: latest_sold_for_most_expensive_nft_artworks\nAction Input: {}", "api_reaction": null}, {"api_name": "most_expensive_for_most_expensive_nft_artworks", "api_action": "\nAction: most_expensive_for_most_expensive_nft_artworks\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "most_expensive_for_most_expensive_nft_artworks"}}, {"state": "generated_by_agent", "aseq": {"api_name": "most_expensive_for_most_expensive_nft_artworks"}}, {"state": "generated_by_agent", "aseq": {"api_name": "most_expensive_for_most_expensive_nft_artworks", "api_action": "\nAction: most_expensive_for_most_expensive_nft_artworks\nAction Input: {\"gallery\": [\"SuperRare\", \"MakersPlace\", \"Async Art\"]}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"most_expensive_for_most_expensive_nft_artworks\",\n\t\"api_action\": \"\\nAction: most_expensive_for_most_expensive_nft_artworks\\nAction Input: {\\\"galleries\\\": [\"SuperRare\", \"MakersPlace\", \"Async Art\"]}\",\n\t\"api_reaction\": null\n}"}]}
{"URL": "38258", "query": "Can you please help my family member log into the system using their username 'familymember' and password 'pass123'? Once logged in, they want to retrieve the details of an order with ID 6 using the getOrderById API. Additionally, they need to check if a specific user 'familyuser' exists using the getUserByName API. Finally, they want to fetch the details of a pet with ID 5 using the getPetById API.", "api_names": ["getorderbyid_for_multipleteamscallingtest", "loginuser_for_multipleteamscallingtest", "Finish", "getpetbyid_for_multipleteamscallingtest", "getuserbyname_for_multipleteamscallingtest", "logoutuser_for_multipleteamscallingtest", "get_latest_lottery_result_for_thai_lottery", "get_category_by_id_for_hadiths_api", "measure_distance_for_ghana_api", "base_currency_exchange_rates_for_ziff", "search_for_netflix_v2", "main_for_legend_of_takada_kenshi", "create_joke_for_humor_jokes_and_memes", "get_user_stories_by_id_for_instagram_fast", "detect_for_languagelayer", "download_for_boldsign", "validate_phone_number_for_phone_number_validator", "profiles_for_bogieapis", "get_major_global_indices_by_price_for_global_stock_market_api_data", "levels_for_jet_set_radio_api"], "api_descs": {"Finish": "No description available.", "base_currency_exchange_rates_for_ziff": "Get all Exchange Rates (in alphabetical order) for a Base Currency.", "create_joke_for_humor_jokes_and_memes": "Create a joke using a large language model.", "detect_for_languagelayer": "API endpoint used to perform standard (single) language detection", "download_for_boldsign": " ", "get_category_by_id_for_hadiths_api": "Each category have a unique ID. These ID can be used to get the category", "get_latest_lottery_result_for_thai_lottery": "Get latest lottery result - ข้อมูลผลการออกรางวัล งวดล่าสุด", "get_major_global_indices_by_price_for_global_stock_market_api_data": "World financial market to get major global Indices with respect to price", "get_user_stories_by_id_for_instagram_fast": "Get instagram stories by user id", "getorderbyid_for_multipleteamscallingtest": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "getpetbyid_for_multipleteamscallingtest": "Returns a single pet", "getuserbyname_for_multipleteamscallingtest": "Get user by user name", "levels_for_jet_set_radio_api": "Returns a list of all Levels", "loginuser_for_multipleteamscallingtest": "Logs user into the system", "logoutuser_for_multipleteamscallingtest": "Logs out current logged in user session", "main_for_legend_of_takada_kenshi": "クエリパラメータは不要です.そのままアクセスしてください.\n**API認証等は特に設けておりませんが, プログラムによるAPIアクセスの場合はUser-Agentにリクエスト元のサービス名・アプリケーションを入力して下さい.**", "measure_distance_for_ghana_api": "This endpoint calculates the distance between two locations based on their latitude and longitude coordinates, while allowing the user to specify the unit of measurement.\n\nBelow Example: **Distance from Kumasi to Accra**", "profiles_for_bogieapis": "asd", "search_for_netflix_v2": "Search", "validate_phone_number_for_phone_number_validator": "Easily and quickly looks up details about a phone number"}, "aseqs": [{"api_name": "loginuser_for_multipleteamscallingtest", "api_action": "\nAction: loginuser_for_multipleteamscallingtest\nAction Input: {\n  \"username\": \"familymember\",\n  \"password\": \"pass123\"\n}", "api_reaction": null}, {"api_name": "getorderbyid_for_multipleteamscallingtest", "api_action": "\nAction: getorderbyid_for_multipleteamscallingtest\nAction Input: {\n  \"orderid\": 6\n}", "api_reaction": null}, {"api_name": "getuserbyname_for_multipleteamscallingtest", "api_action": "\nAction: getuserbyname_for_multipleteamscallingtest\nAction Input: {\n  \"username\": \"familyuser\"\n}", "api_reaction": null}, {"api_name": "getpetbyid_for_multipleteamscallingtest", "api_action": "\nAction: getpetbyid_for_multipleteamscallingtest\nAction Input: {\n  \"petid\": 5\n}", "api_reaction": null}, {"api_name": "logoutuser_for_multipleteamscallingtest", "api_action": "\nAction: logoutuser_for_multipleteamscallingtest\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to log in using the provided username and password, then proceed with fetching order details, checking user existence, and finally fetching pet details.\n\t\"api_name\": \"loginuser_for_multipleteamscallingtest\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "getorderbyid_for_multipleteamscallingtest"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getuserbyname_for_multipleteamscallingtest", "api_action": "\nAction: getuserbyname_for_multipleteamscallingtest\nAction Input: {\n  \"username\": \"familyuser\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getpetbyid_for_multipleteamscallingtest", "api_action": "\nAction: getpetbyid_for_multipleteamscallingtest\nAction Input: {\n  \"petid\": 5\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "logoutuser_for_multipleteamscallingtest"}}, {"state": "generated_by_agent", "aseq": {"api_name": "logoutuser_for_multipleteamscallingtest"}}]}
{"URL": "3426", "query": "Could you please provide me with the train schedule for train number 12936? I need to know the departure and arrival times for each station along the route. Additionally, I would like to check the seat availability from station code 'ST' to 'BVI' on this train for the date 2022-05-25.", "api_names": ["get_train_schedule_for_irctc", "checkseatavailability_for_irctc", "Finish", "get_rich_menu_list_for_line_messaging", "email_for_email_verifier_validator", "domain_detail_for_sitedomain", "get_a_random_self_help_quote_for_self_help_quotes", "ticker_per_symbol_for_global_ethereum_price_index_gex", "stays_properties_list_for_booking_com_v2", "search_for_chapters_containing_terms_for_bible_memory_verse_flashcard", "v1_sticker_sticker_id_for_tokapi_mobile_version", "conversion_for_sciphercrypto", "get_a_random_recipe_for_low_carb_recipes", "search_by_keyword_for_taobao_tmall_product_detail", "get_a_product_reviews_for_amazon_scrapper_v4"], "api_descs": {"Finish": "No description available.", "checkseatavailability_for_irctc": "-", "conversion_for_sciphercrypto": "example from \"BTC\" (Bitcoin) to \"USDT\" (Tether)\nThis JSON response contains data for the cryptocurrency example:Ethereum (ETH), including its name, algorithm, block number, launch date, and market performance ratings. It also includes conversion information for ETH to USDT, such as the current market cap, total volume, and conversion rate. use the correct symbol in order to get an accurate data.", "domain_detail_for_sitedomain": "get detail by did", "email_for_email_verifier_validator": "## The status attribute will be:\n\nOK  - Only if the smtp server explicitly confirms the availability of the mailbox address.\n\nINVALID - If the smtp server explicitly confirms the mailbox is not available.\n\nUNKNOWN - For every other scenario (The mailbox may or may not be available).", "get_a_product_reviews_for_amazon_scrapper_v4": "GET a product reviews", "get_a_random_recipe_for_low_carb_recipes": "Get a random recipe", "get_a_random_self_help_quote_for_self_help_quotes": "Get a random hand-picked self-help quote in addition to its tags and the book it was taken from", "get_rich_menu_list_for_line_messaging": "Gets a list of all uploaded rich menus.", "get_train_schedule_for_irctc": "-", "search_by_keyword_for_taobao_tmall_product_detail": "Search products by keyword", "search_for_chapters_containing_terms_for_bible_memory_verse_flashcard": "Takes term(s) and returns chapters  that contain term(s). Terms are not case sensitive.  Books, operators etc. are NOT CASE SENSITIVE.\n\n**   ONLY SEARCHES 2 BOOKS   (NO RANGE FUNCTION) **", "stays_properties_list_for_booking_com_v2": "Get list", "ticker_per_symbol_for_global_ethereum_price_index_gex": "Returns ticker data for specified symbol", "v1_sticker_sticker_id_for_tokapi_mobile_version": "Effect information by ID (look at stickers field in video response)"}, "aseqs": [{"api_name": "get_train_schedule_for_irctc", "api_action": "\nAction: get_train_schedule_for_irctc\nAction Input: {\n  \"trainno\": \"12936\"\n}", "api_reaction": null}, {"api_name": "get_train_schedule_for_irctc", "api_action": "\nAction: get_train_schedule_for_irctc\nAction Input: {\n  \"trainno\": \"12936\"\n}", "api_reaction": null}, {"api_name": "checkseatavailability_for_irctc", "api_action": "\nAction: checkseatavailability_for_irctc\nAction Input: {\n  \"quota\": \"GN\",\n  \"classtype\": \"2S\",\n  \"fromstationcode\": \"ST\",\n  \"tostationcode\": \"BVI\",\n  \"trainno\": 12936,\n  \"date\": \"2022-05-25\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_train_schedule_for_irctc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_train_schedule_for_irctc", "api_action": "\nAction: get_train_schedule_for_irctc\nAction Input: {\n  \"trainno\": \"12936\",\n  \"attr_station_code_from\": \"ST\",\n  \"attr_station_code_to\": \"BVI\",\n  \"attr_date\": \"2022-05-25\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_train_schedule_for_irctc"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_train_schedule_for_irctc"}}]}
{"URL": "86287", "query": "I work for a software development company and we are exploring different Java versions for our upcoming project. Can you provide a list of available Java versions along with their corresponding IDs?", "api_names": ["java_versions_for_java_code_compiler", "Finish", "pools_all_for_defi_watch", "uae_scheduled_flights_growth_for_global_flight_data", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks", "top_collections_this_week_for_top_nft_sales", "user_reviews_for_steam_store_api", "comments_get_for_songmeanings"], "api_descs": {"Finish": "No description available.", "comments_get_for_songmeanings": "Get comments from our database for a specific song.", "get_the_current_stock_by_exchange_code_and_stock_code_for_stocks": "Get the current stock by exchange code and stock code.", "java_versions_for_java_code_compiler": "Java Versions", "pools_all_for_defi_watch": "Gain data about DeFi Pools", "top_collections_this_week_for_top_nft_sales": "Top trending collections this week", "uae_scheduled_flights_growth_for_global_flight_data": "Get weekly United Arab Emirates scheduled departing flights growth.", "user_reviews_for_steam_store_api": "💡 The endpoint returns a complete list of user reviews. Use filters to narrow down the results as desired. If you want to get reviews from page 2, you must first grab data from page 1 and save the **cursor** value from response. Then set in the new call  **page=2** and **cursor** from page 1."}, "aseqs": [{"api_name": "java_versions_for_java_code_compiler", "api_action": "\nAction: java_versions_for_java_code_compiler\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "java_versions_for_java_code_compiler"}}, {"state": "generated_by_agent", "aseq": {"api_name": "java_versions_for_java_code_compiler"}}]}
{"URL": "52780", "query": "I want to watch a football match on TV. Can you assist me in finding the upcoming matches and the channels they will be broadcasted on? Additionally, I would like to know the team names and competition details. Furthermore, I'm interested in the event details for an event with ID '98765'.", "api_names": ["getteams_for_wosti_futbol_tv_peru", "getcompetitions_for_wosti_futbol_tv_peru", "getevents_for_wosti_futbol_tv_peru", "Finish", "vin_decoder_basic_for_vin_decoder", "query_for_netdetective", "end1_for_matinapi", "originals_titles_get_recommend_for_webtoon", "get_products_for__onboarding_project", "qrcode_for_qr_code_generator_api", "listquotes_for_currency_exchange", "statusforemissionreductiontargetbyurl_for_carbon_management", "rates_for_currencyapi_net", "past_6_months_for_the_sandbox_sand", "user_data_for_instagram_v13", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking", "actors_get_interesting_jobs_for_imdb", "match_for_rugbyapi2", "super_lotto_plus_for_ca_lottery", "user_story_highlight_metadata_for_instagram_data"], "api_descs": {"Finish": "No description available.", "actors_get_interesting_jobs_for_imdb": "Get interesting jobs of actor or actress", "end1_for_matinapi": "none", "get_products_for__onboarding_project": " ", "get_u_58_athlete_ranking_for_taekwondo_athlete_world_ranking": "<br /><br />\n<b>Authentication:</b> not required", "getcompetitions_for_wosti_futbol_tv_peru": "Obtener el listado de competiciones de partidos de fútbol televisados en Perú.\n\n> Este endpoints no requiere de ningún parámetro.", "getevents_for_wosti_futbol_tv_peru": "Obtener el listado de eventos de partidos de fútbol televisados en Perú.\n\n> Este endpoints no requiere de ningún parámetro.", "getteams_for_wosti_futbol_tv_peru": "Obtener el listado de equipos de fútbol televisados en Perú.", "listquotes_for_currency_exchange": "List the available quotes in JSON Array this API support, all the available quotes can be used in source and destination quote. Refer exchange endpoint for more information how to call the currency exchange from the source quote to destination quote.", "match_for_rugbyapi2": "Get information of a Rugby match by its ID.", "originals_titles_get_recommend_for_webtoon": "Get similar comics\n*To load images, please check the tutorial at https://rapidapi.com/apidojo/api/webtoon/tutorials/how-to-load-images", "past_6_months_for_the_sandbox_sand": "Get price data for the past 6 months.\n\n~ daily data points.", "qrcode_for_qr_code_generator_api": "This endpoint will return a qrcode base on string given in input.", "query_for_netdetective": "Query information about an IP address.", "rates_for_currencyapi_net": "Get live currency conversion rates of a given currency", "statusforemissionreductiontargetbyurl_for_carbon_management": "Get results in details from the task id.", "super_lotto_plus_for_ca_lottery": "Super Lotto Plus History", "user_data_for_instagram_v13": "Get instagram user info by username.", "user_story_highlight_metadata_for_instagram_data": "Get user story highlight metadata from a direct url to a story", "vin_decoder_basic_for_vin_decoder": "Get 22 items"}, "aseqs": [{"api_name": "getteams_for_wosti_futbol_tv_peru", "api_action": "\nAction: getteams_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}, {"api_name": "getevents_for_wosti_futbol_tv_peru", "api_action": "\nAction: getevents_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}, {"api_name": "getcompetitions_for_wosti_futbol_tv_peru", "api_action": "\nAction: getcompetitions_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}, {"api_name": "getevents_for_wosti_futbol_tv_peru", "api_action": "\nAction: getevents_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getevents_for_wosti_futbol_tv_peru"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcompetitions_for_wosti_futbol_tv_peru"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getcompetitions_for_wosti_futbol_tv_peru", "api_action": "\nAction: getcompetitions_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getevents_for_wosti_futbol_tv_peru", "api_action": "\nAction: getevents_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getevents_for_wosti_futbol_tv_peru", "api_action": "\nAction: getevents_for_wosti_futbol_tv_peru\nAction Input: {}", "api_reaction": null}}]}
{"URL": "11513", "query": "I need to analyze the earnings history and estimate of my company's stock, ticker symbol AAPL. Can you fetch the earnings history and estimate for the current quarter, current year, next quarter, and next year? Additionally, provide the earnings revisions for these periods.", "api_names": ["Finish", "earnings_estimate_for_stock_analysis", "earnings_revisions_for_stock_analysis", "earnings_history_for_stock_analysis", "sunposition_for_sun_seeker_api", "radical_english_meaning_for_learn_to_read_and_write_japanese_kanji", "validate_vat_number_for_vatlayer", "match_embed_link_for_football_live_stream_api", "health_for_partenaires_mobilis", "gives_the_weight_catergory_based_on_the_bmi_for_bmi_v2", "get_username_free_fire_for_id_game_checker", "generate_flirty_line_for_flirty_words", "membersofateam_for_ishan", "autocomplete_for_local_business_data", "drakelikehate_for_memeados", "skills_search_for_iys_skill_api_", "api_pricetosales_for_finanzoo_api_fundamentals", "get_version_for_fashion", "search_countries_by_population_for_geography", "mood_list_for_text_mood_changer_ai"], "api_descs": {"Finish": "No description available.", "api_pricetosales_for_finanzoo_api_fundamentals": "Contains the price turnover ratio (P / S ratio) for each past trading day.\n\nAPI_Pricetosales\nSyntax:\n \n\nshareuid = unique identifier for the share searched\nfrom = Start date of the searched period in American notation year-month-day with leading 0\nto = End date of the searched period in American notation year-month-day with leading 0", "autocomplete_for_local_business_data": "Returns place/address, business and query predictions for text-based geographic queries.", "drakelikehate_for_memeados": "Generate Drake Likes and Hates meme", "earnings_estimate_for_stock_analysis": "Get earnings estimate.", "earnings_history_for_stock_analysis": "Get earnings history.", "earnings_revisions_for_stock_analysis": "Get earnings revisions.", "generate_flirty_line_for_flirty_words": "Generates a random flirty line", "get_username_free_fire_for_id_game_checker": "Enter your Free Fire ID  in the required parameters", "get_version_for_fashion": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "gives_the_weight_catergory_based_on_the_bmi_for_bmi_v2": "The API catergorizes the person based on the BMI. The catergories would be Underweight, Normal weight, Overweight, Obesity Class I, Obesity Class II and Obesity Class III. These definitions differ in Asians hence you may be able to enter the ethnicity of the person (Asian or not asian)", "health_for_partenaires_mobilis": "Donne l'état de santé de l'API", "match_embed_link_for_football_live_stream_api": "Live Link", "membersofateam_for_ishan": " ", "mood_list_for_text_mood_changer_ai": "list of moods available", "radical_english_meaning_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "search_countries_by_population_for_geography": "Search countries by minimum population or maximum population or between minimum and maximum population. Search operation will include both upper and lower limit.", "skills_search_for_iys_skill_api_": "Skills Search", "sunposition_for_sun_seeker_api": "Parameters:\nlat (float): The latitude of the location for which you want to get the solar position. The value should be between -90 and 90 degrees.\nlon (float): The longitude of the location for which you want to get the solar position. The value should be between -180 and 180 degrees.", "validate_vat_number_for_vatlayer": "Using the \"validate\" endpoint, you may request the API to validate any EU VAT number and obtain information about the company it is assigned to"}, "aseqs": [{"api_name": "earnings_history_for_stock_analysis", "api_action": "\nAction: earnings_history_for_stock_analysis\nAction Input: {\n  \"ticker\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "earnings_history_for_stock_analysis", "api_action": "\nAction: earnings_history_for_stock_analysis\nAction Input: {\n  \"ticker\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "earnings_estimate_for_stock_analysis", "api_action": "\nAction: earnings_estimate_for_stock_analysis\nAction Input: {\n  \"ticker\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "earnings_revisions_for_stock_analysis", "api_action": "\nAction: earnings_revisions_for_stock_analysis\nAction Input: {\n  \"ticker\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "earnings_estimate_for_stock_analysis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "earnings_estimate_for_stock_analysis"}}, {"state": "generated_by_agent", "aseq": {"api_name": "earnings_estimate_for_stock_analysis", "api_action": "\nAction: earnings_estimate_for_stock_analysis\nAction Input: {\n  \"ticker\": \"AAPL\",\n  \"periods\": [\n    \"Current Year\",\n    \"Next Quarter\",\n    \"Next Year\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "earnings_history_for_stock_analysis", "api_action": "\nAction: earnings_history_for_stock_analysis\nAction Input: {\n  \"ticker\": \"AAPL\",\n  \"quarter\": \"current\",\n  \"year\": \"current\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "earnings_history_for_stock_analysis", "api_action": "\nAction: earnings_history_for_stock_analysis\nAction Input: {\n  \"ticker\": \"AAPL\",\n  \"period\": \"current_year\"\n}", "api_reaction": null}}]}
{"URL": "81467", "query": "Can you fetch the champion tier list for the 'master' rank in the 'kr' region? Also, provide me with a random item and its name, price, and champion synergy.", "api_names": ["Finish", "get_random_item_for_league_of_legends_galore", "get_champion_tier_list_for_league_of_legends_galore", "getlisting_for_florida_realty_api", "get_taxi_fares_for_taxi_fare_calculator", "popular_for__cheap_youtube_api_", "get_mempool_transactions_for_litecoin_wallet", "getdiscusage_for_groupdocs_editor_cloud", "theme_detail_for_sitedomain", "get_posts_for__demo_project_v12", "email_exist_for_email_checkup", "unknown_for_reqres"], "api_descs": {"Finish": "No description available.", "email_exist_for_email_checkup": "help you to check if email really exist.", "get_champion_tier_list_for_league_of_legends_galore": "Get either a list of the current champion tier list or a tier list section based on YOUR request!", "get_mempool_transactions_for_litecoin_wallet": "Get Litecoin Transaction ids in the mempool.", "get_posts_for__demo_project_v12": "Get Posts", "get_random_item_for_league_of_legends_galore": "This will go through the list of items and return a single RANDOM item!", "get_taxi_fares_for_taxi_fare_calculator": "Search fares by geo coordinates", "getdiscusage_for_groupdocs_editor_cloud": " ", "getlisting_for_florida_realty_api": "Use this endpoint to get detailed information about a single condominium or townhouse.", "popular_for__cheap_youtube_api_": "Get popular videos", "theme_detail_for_sitedomain": "取得主題館edit show by  dtid", "unknown_for_reqres": "List of unknown resources"}, "aseqs": [{"api_name": "get_champion_tier_list_for_league_of_legends_galore", "api_action": "\nAction: get_champion_tier_list_for_league_of_legends_galore\nAction Input: {}", "api_reaction": null}, {"api_name": "get_random_item_for_league_of_legends_galore", "api_action": "\nAction: get_random_item_for_league_of_legends_galore\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_champion_tier_list_for_league_of_legends_galore"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_random_item_for_league_of_legends_galore"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_champion_tier_list_for_league_of_legends_galore", "api_action": "\nAction: get_champion_tier_list_for_league_of_legends_galore\nAction Input: {}", "api_reaction": null}}]}
{"URL": "82565", "query": "Can you help me get the content type of a file located at 'https://www.example.com/document.pdf'? I also need to generate a webpage snapshot as an image. The source URL is 'https://www.example.com'. Please provide me with the image snapshot.", "api_names": ["image_convert_for_pragmavantapi", "web_pdf_for_pragmavantapi", "web_snapshot_for_pragmavantapi", "Finish", "file_content_type_for_pragmavantapi", "namebydomain_for_name_using_domain", "salvagecheck_for_simple_salvage_vin_check", "get_profile_by_slug_for_is_this_coin_a_scam", "get_all_dog_breeds_for_dog_breeds", "levels_for_jet_set_radio_api", "video_for_tiktok_video_downloader", "vin_decoder_for_car_api", "geocode_for_tunisia_api", "swap_id_for_uniswap_v2_api", "countries_for_visa_requirements", "create_for_sudoku_all_purpose_pro", "getmytasks_free_of_use_for_yandex_serp", "get_profile_for_outsystems_community_api", "hashtag_metadata_information_for_social_media_data_tt", "getcompanynames_for_gaialens_company_names"], "api_descs": {"Finish": "No description available.", "countries_for_visa_requirements": " ", "create_for_sudoku_all_purpose_pro": "Image output is base64 encoded! See https://myv.at/api/sudoku/code-examples/ how to decode back to HTML, SVG, JPG, PNG, GIF, WEBP easily!", "file_content_type_for_pragmavantapi": "File: get content type", "geocode_for_tunisia_api": "This endpoint allows you to lookup locations in Tunisia by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_all_dog_breeds_for_dog_breeds": "This endpoint will return back all available dog breeds that are available", "get_profile_by_slug_for_is_this_coin_a_scam": "Get a specific coin profile by slug", "get_profile_for_outsystems_community_api": "Returns the details of a profile.", "getcompanynames_for_gaialens_company_names": "This API returns a list of all company names available to the user. It can be used as a pre-step before invoking other GaiaLens APIs such as GaiaLens ESG Scores, Gaialens Historical ESG Scores and GaiaLens ESG News.", "getmytasks_free_of_use_for_yandex_serp": "Retrieves your all tasks. Use this endpoint when lost your **task_id** . Use this endpoint how much you want. **It's free of charge**!", "hashtag_metadata_information_for_social_media_data_tt": "Get hashtag metadata\n\nBasic informations as number of posts and etc", "image_convert_for_pragmavantapi": "Convert image to different type and resize to smaller size.", "levels_for_jet_set_radio_api": "Returns a list of all Levels", "namebydomain_for_name_using_domain": "Get Domain or Organization Name using Domain.", "salvagecheck_for_simple_salvage_vin_check": "Returns true if the VIN was in a salvage database in the past. False otherwise. Must be a valid 17 digit vin from North America.", "swap_id_for_uniswap_v2_api": "Return the info of the Swap by the address", "video_for_tiktok_video_downloader": "This will return  the details of video and download link", "vin_decoder_for_car_api": "Decodes Vehicle Identification Numbers. The result will include a list of specifications in the specs property and a list of all possible trims matching the VIN in the trims property.", "web_pdf_for_pragmavantapi": "Get webpage snapshot as image", "web_snapshot_for_pragmavantapi": "Get webpage snapshot as image"}, "aseqs": [{"api_name": "file_content_type_for_pragmavantapi", "api_action": "\nAction: file_content_type_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.example.com/document.pdf\"\n}", "api_reaction": null}, {"api_name": "web_snapshot_for_pragmavantapi", "api_action": "\nAction: web_snapshot_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.example.com\"\n}", "api_reaction": null}, {"api_name": "web_pdf_for_pragmavantapi", "api_action": "\nAction: web_pdf_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.example.com\"\n}", "api_reaction": null}, {"api_name": "image_convert_for_pragmavantapi", "api_action": "\nAction: image_convert_for_pragmavantapi\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "file_content_type_for_pragmavantapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "web_snapshot_for_pragmavantapi", "api_action": "\nAction: web_snapshot_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.example.com\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "file_content_type_for_pragmavantapi", "api_action": "\nAction: file_content_type_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.example.com/document.pdf\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "file_content_type_for_pragmavantapi", "api_action": "\nAction: file_content_type_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.example.com/document.pdf\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "file_content_type_for_pragmavantapi", "api_action": "\nAction: file_content_type_for_pragmavantapi\nAction Input: {\n  \"source\": \"https://www.example.com/document.pdf\"\n}", "api_reaction": null}}]}
{"URL": "87327", "query": "My company is expanding its operations globally, and we would like to gather information about the geolocation of our website visitors. Is it possible to use the IP Geolocation Lookup API to retrieve the country, region, city, and postal code for the IP addresses of our website visitors?", "api_names": ["ip_geolocation_lookup_for_ip_geolocation_lookup", "Finish", "shriji_for_shreehari", "get_epic_free_games_for_epic_free_games", "user_for_23andme", "list_position_for_each_crypto_for_crypto_grana", "get_locations_for_septa", "music_lovers_for_69bd0c7193msh3c4abb39db3a82fp18c336jsn8470910ae9f0", "v1_dogs_for_dogs_by_api_ninjas", "search_screen_name_for_twitter_pack_v2"], "api_descs": {"Finish": "No description available.", "get_epic_free_games_for_epic_free_games": "Get Epic Free Games", "get_locations_for_septa": "", "ip_geolocation_lookup_for_ip_geolocation_lookup": "API returns location data such as country, region, city, zip, timezone, isp, asn and org and more", "list_position_for_each_crypto_for_crypto_grana": "List your current position for each crypto", "music_lovers_for_69bd0c7193msh3c4abb39db3a82fp18c336jsn8470910ae9f0": "recibe datos", "search_screen_name_for_twitter_pack_v2": " ", "shriji_for_shreehari": "Shreehari", "user_for_23andme": "Gets the user id, and a list of profiles (an account can have multiple genotyped people) with ids and whether or not they're genotyped. This endpoint is great for using an app anonymously because there is no personally identifying information.", "v1_dogs_for_dogs_by_api_ninjas": "Get a list of dog breeds matching specified parameters. Returns at most 20 results. To access more than 20 results, use the offset parameter to offset results in multiple API calls."}, "aseqs": [{"api_name": "ip_geolocation_lookup_for_ip_geolocation_lookup", "api_action": "\nAction: ip_geolocation_lookup_for_ip_geolocation_lookup\nAction Input: {\n  \"ip\": \"203.0.113.1\"\n}", "api_reaction": null}, {"api_name": "ip_geolocation_lookup_for_ip_geolocation_lookup", "api_action": "\nAction: ip_geolocation_lookup_for_ip_geolocation_lookup\nAction Input: {\n  \"ip\": \"192.0.2.1\"\n}", "api_reaction": null}, {"api_name": "ip_geolocation_lookup_for_ip_geolocation_lookup", "api_action": "\nAction: ip_geolocation_lookup_for_ip_geolocation_lookup\nAction Input: {\n  \"ip\": \"8.8.8.8\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "ip_geolocation_lookup_for_ip_geolocation_lookup"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ip_geolocation_lookup_for_ip_geolocation_lookup", "api_action": "\nAction: ip_geolocation_lookup_for_ip_geolocation_lookup\nAction Input: {\n  \"ip\": \"203.0.113.2\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ip_geolocation_lookup_for_ip_geolocation_lookup", "api_action": "\nAction: ip_geolocation_lookup_for_ip_geolocation_lookup\nAction Input: {\n  \"ip\": \"8.8.8.8\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "ip_geolocation_lookup_for_ip_geolocation_lookup", "api_action": "\nAction: ip_geolocation_lookup_for_ip_geolocation_lookup\nAction Input: {\n  \"ip\": \"8.8.4.4\"\n}"}}]}
{"URL": "16336", "query": "I'm curious about the healthcare infrastructure provided by Hapihub. Could you please explain how to fetch a list of fixtures using the available APIs? Additionally, I'm interested in retrieving the version metadata of the server. Thank you for your assistance.", "api_names": ["version_metadata_for_hapihub", "get_fixtures_for_hapihub", "Finish", "getprocesscountforcelery_for_carbon_management", "getpetbyid_for_privatepublicapi", "get_test_for_fwd_api", "actors_get_all_filmography_for_imdb", "get_district_capital_by_id_for_district_capitals_in_ghana", "user_stories_by_username_for_instagram_api_v2", "forex_symbols_for_real_time_quotes", "order_by_ascending_for_dogbreeddb", "users_by_rest_ids_for_twitter_data"], "api_descs": {"Finish": "No description available.", "actors_get_all_filmography_for_imdb": "Get all filmography of actor or actress", "forex_symbols_for_real_time_quotes": "Returns a list of all available foreign exchange currencies", "get_district_capital_by_id_for_district_capitals_in_ghana": "This endpoint gets a particular district capital by ID", "get_fixtures_for_hapihub": "Fetch a list of fixtures", "get_test_for_fwd_api": "test the endpoint response", "getpetbyid_for_privatepublicapi": "Returns a single pet", "getprocesscountforcelery_for_carbon_management": "Get results in details from the task id.", "order_by_ascending_for_dogbreeddb": "Gives a list of all dogs sorted in ascending order by name.", "user_stories_by_username_for_instagram_api_v2": "Get all stories of any Instagram account via username", "users_by_rest_ids_for_twitter_data": "users-by-rest-ids", "version_metadata_for_hapihub": "Retrieve the server's version metadata"}, "aseqs": [{"api_name": "get_fixtures_for_hapihub", "api_action": "\nAction: get_fixtures_for_hapihub\nAction Input: {}", "api_reaction": null}, {"api_name": "version_metadata_for_hapihub", "api_action": "\nAction: version_metadata_for_hapihub\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to find an API that allows me to fetch the list of fixtures and another one for getting the version metadata from Hapihub.\n\t\"api_name\": \"get_fixtures_for_hapihub\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "version_metadata_for_hapihub"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_fixtures_for_hapihub"}}]}
{"URL": "80995", "query": "I'm curious about the latest IPL news. Can you fetch me the news articles from various sources? Include the title, URL, and source of each article in the response.", "api_names": ["get_all_ipl_news_for_latest_ipl_news", "Finish", "dailyohlcv_for_bravenewcoin", "find_user_find_get_for_facebook_user_info", "1_hour_minutely_forecast_nowcast_for_weather", "activities_transfers_for_rich_nft_api_metadata", "convert_url_to_image_for_cloudlayer_io", "6_get_order_information_for_rewards_as_a_service", "get_stats_for_exerra_phishing_check", "live_top_pages_v3_for_chartbeat"], "api_descs": {"1_hour_minutely_forecast_nowcast_for_weather": "Retrieve a 60 minute \"Nowcast\" for precipitation, and snowfall", "6_get_order_information_for_rewards_as_a_service": "Get more information about an order", "Finish": "No description available.", "activities_transfers_for_rich_nft_api_metadata": "**Get collection activity**\n\n**Pagination example**:\n start=0&limit=20\n\n**Supported chain_id**: \neth, bsc, matic, avax, arb, op\n\n**order_by** \n-time_at\ntime_at\nusd_value\n-usd_value", "convert_url_to_image_for_cloudlayer_io": "Make a GET request to convert url to image, accepts simple options as query strings in URL (use POST endpoint for advanced options).", "dailyohlcv_for_bravenewcoin": "This endpoint returns end-of-day open, high, low, close prices and volumes (OHLCV) for market weighted averages (MWA) or global weighted averages (GWA). The 24hr period for end of day is based on an open/close at 00:00:00 UTC. Parameters may be used to select the data required. \n\nBNC uses universal identifiers (UUIDs) for assets and markets. Each index type will have a UUID which identifies the constituent type used to build the index:\n\n| Index Type | Index Id  | Output |\n| -----------|:---------:|:---------:|\n| MWA        | Market Id | OHLCV for that market |\n| GWA        | Asset Id  | OHLCV for that coin / asset |\n\nThe UUIDs for assets or markets may be found from the Lookups with those names.\n\nIf no timestamp is provided, then only the latest values are returned. With a timestamp, records are returned in reverse date order, the number determining how far back  controlled by the size parameter. \n\nAn authentication token is required. Obtain a token valid for 24 hours from the GetToken endpoint.", "find_user_find_get_for_facebook_user_info": " ", "get_all_ipl_news_for_latest_ipl_news": "This endpoint will return back all news about IPL from all over the world.", "get_stats_for_exerra_phishing_check": "Get statistics about the Exerra Phishing API", "live_top_pages_v3_for_chartbeat": "Returns a list of pages, ordered by which ones have most visitors right now. This call returns real-time data."}, "aseqs": [{"api_name": "get_all_ipl_news_for_latest_ipl_news", "api_action": "\nAction: get_all_ipl_news_for_latest_ipl_news\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_all_ipl_news_for_latest_ipl_news"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_all_ipl_news_for_latest_ipl_news"}}]}
{"URL": "27967", "query": "My company is building an email validation service. I would like to incorporate multiple API functions to ensure accurate results. Can you guide me on how to use the API functions to verify email existence, check for disposable emails, and retrieve MX records? Also, provide the required parameters for each API function.", "api_names": ["help_page_for_email_existence_validator", "verify_the_existence_of_email_for_email_existence_validator", "check_for_disposable_emails_for_email_existence_validator", "Finish", "get_the_mx_records_for_email_existence_validator", "top_paid_mac_apps_for_app_store", "bestbuyproductdata_for_bestbuy_product_data", "timeseries_stats_list_for_palmy_investing_api", "news_list_flash_for_webull", "number_of_schools_in_indonesia_sub_district_kecamatan_for_indonesia_school_list", "races_for_formula_1_standings", "get_date_and_time_by_timezone_for_location_and_time", "users_for_geospark", "past_3_months_for_the_sandbox_sand", "get_languages_for_amazon_web_scraping_api", "chart_by_id_for_imdb_charts", "study_list_macquarie_for_learn_to_read_and_write_japanese_kanji", "ott_providers_for_ott_details", "backorders_for_domain_backorder", "market_get_movers_for_bb_finance"], "api_descs": {"Finish": "No description available.", "backorders_for_domain_backorder": "Get the latest expiring domain names in our pool", "bestbuyproductdata_for_bestbuy_product_data": "It will accept two parameters keyword and page.\nFor Ex:\nkeyword: iphone  (it is the search term and it can be anything for example: iphone, ps5, sony tv etc)\npage: min 1 (max depends on the number of products available)", "chart_by_id_for_imdb_charts": "Get an IMDB Chart by ID\n\nThe API endpoint expects an `id` query parameter and the JSON response format is different based on it. We currently support these chart ids:\n* `boxoffice`: Top Box Office (US)\n* `moviemeter`: Most Popular Movies\n* `top`: IMDb Top 250 Movies\n* `top-english-movies`: Top Rated English Movies\n* `tvmeter`: Most Popular TV Shows\n* `toptv`: Top Rated TV Shows\n* `top-rated-indian-movies`: Top Rated Indian Movies\n* `bottom`: Lowest Rated Movies\n* `top-action`: (Top Rated Action Movies\n* `top-adventure`: Top Rated Adventure Movies\n* `top-animation`: Top Rated Animation Movies\n* `top-biography`: Top Rated Biography Movies\n* `top-comedy`: Top Rated Comedy Movies\n* `top-crime`: Top Rated Crime Movies\n* `top-drama`: Top Rated Drama Movies\n* `top-family`: Top Rated Family Movies\n* `top-fantasy`: Top Rated Fantasy Movies\n* `top-film_noir`: Top Rated Film-Noir Movies\n* `top-history`: Top Rated History Movies\n* `top-horror`: Top Rated Horror Movies\n* `top-music`: Top Rated Music Movies\n* `top-musical`: Top Rated Musical Movies\n* `top-mystery`: Top Rated Mystery Movies\n* `top-romance`: Top Rated Romance Movies\n* `top-sci_fi`: Top Rated Sci-Fi Movies\n* `top-sport`: Top Rated Sport Movies\n* `top-thriller`: Top Rated Thriller Movies\n* `top-war`: Top Rated War Movies\n* `top-western`: Top Rated Western Movies", "check_for_disposable_emails_for_email_existence_validator": "Check if given email is disposable or temporary mail or not.", "get_date_and_time_by_timezone_for_location_and_time": "Get date and time for specified timezone.", "get_languages_for_amazon_web_scraping_api": "Return the list of currently supported languages in the API.", "get_the_mx_records_for_email_existence_validator": "endpoint for getting MX records from email address", "help_page_for_email_existence_validator": "Provides a simple help to the User", "market_get_movers_for_bb_finance": "Get latest information of movers in the market", "news_list_flash_for_webull": "List flash 27/4 news", "number_of_schools_in_indonesia_sub_district_kecamatan_for_indonesia_school_list": "Number of Schools in Indonesia Sub-District (Kecamatan), also return kode_wilayah that used in other endpoint. (See example result and find kode_wilayah  field)", "ott_providers_for_ott_details": "Get  information on OTT platforms we suuport .", "past_3_months_for_the_sandbox_sand": "Get price data for the past 3 months.\n\n~hourly data points.", "races_for_formula_1_standings": "It will return the current season races with basic information.", "study_list_macquarie_for_learn_to_read_and_write_japanese_kanji": "The Advanced Search URL parameters are described here as individual endpoints to permit per parameter testing. Parameters may be combined as required.", "timeseries_stats_list_for_palmy_investing_api": "Use lists full of price statistics to compare and analyse stocks", "top_paid_mac_apps_for_app_store": "Get list of the top paid mac apps", "users_for_geospark": "Get users details", "verify_the_existence_of_email_for_email_existence_validator": "endpoint which takes email and output result in JSON about existence of email on server."}, "aseqs": [{"api_name": "help_page_for_email_existence_validator", "api_action": "\nAction: help_page_for_email_existence_validator\nAction Input: {}", "api_reaction": null}, {"api_name": "verify_the_existence_of_email_for_email_existence_validator", "api_action": "\nAction: verify_the_existence_of_email_for_email_existence_validator\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}, {"api_name": "check_for_disposable_emails_for_email_existence_validator", "api_action": "\nAction: check_for_disposable_emails_for_email_existence_validator\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}, {"api_name": "get_the_mx_records_for_email_existence_validator", "api_action": "\nAction: get_the_mx_records_for_email_existence_validator\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I will start by using the verify_the_existence_of_email_for_email_existence_validator API to check if the email exists or not, as it is required for all other functionalities in an email validation service.\n\t\"api_name\": \"verify_the_existence_of_email_for_email_existence_validator\"\n}"}, {"state": "generated_by_agent", "aseq": {"Thought": "The first step is to get the help page for email existence validator, which will provide information about its parameters.", "api_name": "help_page_for_email_existence_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "check_for_disposable_emails_for_email_existence_validator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_the_mx_records_for_email_existence_validator", "api_action": "\nAction: get_the_mx_records_for_email_existence_validator\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "verify_the_existence_of_email_for_email_existence_validator", "api_action": "\nAction: verify_the_existence_of_email_for_email_existence_validator\nAction Input: {\n  \"email\": \"example@gmail.com\"\n}", "api_reaction": null}}]}
{"URL": "78331", "query": "I am a football enthusiast and would like to stay updated on match predictions. Can you provide me with the daily predictions for the upcoming matches? It would be great if I can paginate through the predictions and specify the page number. Additionally, could you give me the featured predictions with better odds and higher probability?", "api_names": ["vip_featured_predictions_for_today_football_prediction", "Finish", "prediction_details_for_today_football_prediction", "daily_predictions_for_today_football_prediction", "vip_prediction_scores_for_today_football_prediction", "get_call_for_philippines_voter_card_ocr", "get_similar_apps_for_google_play_api", "get_calls_for_calltrackingmetrics", "get_cast_by_id_for_cinema_api", "language_codes_list_for_language_detection_v2", "agents_get_reviews_for_realty_in_us", "getlearningresources_for_powerbi", "extend_expiration_time_of_a_datacenter_proxy_for_ephemeral_proxies", "best_of_the_day_for_morpheus_predictions_", "printerlist_for_13", "search_cars_for_adzuna", "get_message_status_for_d7_viber", "indicator_categories_for_entity_risk", "geteasyquestion_for_leetcodeapi", "v2_auto_complete_for_cnbc"], "api_descs": {"Finish": "No description available.", "agents_get_reviews_for_realty_in_us": "Get agent reviews", "best_of_the_day_for_morpheus_predictions_": "Bet prediction for day", "daily_predictions_for_today_football_prediction": "Returns **Daily Football Predictions** with pagination support. \nSearch/filter can be used by **date**, **league**, **market-type**.\n\n* Use **predictions/{matchId}/details** endpoint to see more information about any particular match prediction.\n* Use **predictions/scores** endpoint to get score prediction and average goals.", "extend_expiration_time_of_a_datacenter_proxy_for_ephemeral_proxies": "By calling this endpoint the expiration time of an already allocated proxy will be extended by 30 mins.\nSuccessive calls will keep incrementing the expiration time, up to a maximum of 24 hours.\n", "get_call_for_philippines_voter_card_ocr": "Used to fetch api result using the request id received in responses.", "get_calls_for_calltrackingmetrics": "The Calls API allows you easy access to all your call data. You can subscribe to new incoming calls to receive an HTTP request when a call is completed. You can also query the call API to retrieve all past calls.", "get_cast_by_id_for_cinema_api": "With this endpoint, you can retrieve the full cast's list (together with their images and their role in the movie).", "get_message_status_for_d7_viber": "Retrieve the delivery status of Viber messages that were sent earlier.", "get_similar_apps_for_google_play_api": "Returns similar apps.", "geteasyquestion_for_leetcodeapi": "Get the number of easy question solved by the user", "getlearningresources_for_powerbi": "Get Power BI learning resources.", "indicator_categories_for_entity_risk": "List the available Sigma indicator categories to filter by.", "language_codes_list_for_language_detection_v2": "Return list of language codes in ISO 639-1 format.", "prediction_details_for_today_football_prediction": "Shows all details about the match, its prediction and the prediction results.", "printerlist_for_13": "Retrieves all the printers", "search_cars_for_adzuna": "Search Adzuna cars.", "v2_auto_complete_for_cnbc": "Get auto suggestion by familiar terms or phrase", "vip_featured_predictions_for_today_football_prediction": "Returns **Daily  Featured Prediction** results which have higher probability and better odds than others. More efficient selections.\n\nCompare its performance from **stats/performance** endpoint.", "vip_prediction_scores_for_today_football_prediction": "This **VIP** endpoint returns match score predictions with average goal stats. Same query strings and pagination functionality is supported with **/predictions/list**\n\n* Use **/predictions/list** endpoint  to get  market bet predictions."}, "aseqs": [{"api_name": "daily_predictions_for_today_football_prediction", "api_action": "\nAction: daily_predictions_for_today_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "vip_featured_predictions_for_today_football_prediction", "api_action": "\nAction: vip_featured_predictions_for_today_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "vip_prediction_scores_for_today_football_prediction", "api_action": "\nAction: vip_prediction_scores_for_today_football_prediction\nAction Input: {}", "api_reaction": null}, {"api_name": "prediction_details_for_today_football_prediction", "api_action": "\nAction: prediction_details_for_today_football_prediction\nAction Input: {\n  \"match_id\": \"64955768ed962f78a829ab2c\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction"}}, {"state": "generated_by_agent", "aseq": {"api_name": "daily_predictions_for_today_football_prediction", "api_action": "\nAction: daily_predictions_for_today_football_prediction\nAction Input: {\n  \"page\": 1\n}", "api_reaction": null}}]}
{"URL": "49963", "query": "Who are the followers of the user with the ID einaudiofficial? Additionally, provide the full details of an album with the ID 5Otajf16kZ0zkVZWhu7LtO.", "api_names": ["list_user_followers_for_spotify_scraper", "get_album_metadata_for_spotify_scraper", "Finish", "prediction_for_timeseries_prediction_model", "template_download_for_xlsx_template", "search_for_unofficial_icons8_search", "estimate_ownership_cost_for_car_utils", "index_overview_for_investing_financial_stocks", "tier2_for_proxypage", "memre_api_v1_concepts_id_for_learning_engine", "united_states_card_spending_for_covid_19_economic_impact", "cards_by_race_for_hearthstone", "top_10_search_queries_for_quality_porn", "review_for_worldwide_recipes", "get_a_random_wisdom_quote_for_wisdom_quotes", "latest_information_for_symbol_for_bybit", "properties_v2_resolve_url_for_hotels", "jak_for_jak_api"], "api_descs": {"Finish": "No description available.", "cards_by_race_for_hearthstone": "Returns all the cards of a certain race. Example values: Mech, Murloc.", "estimate_ownership_cost_for_car_utils": "Estimate how much you will spend on the car with specified VIN for the next 5 years.", "get_a_random_wisdom_quote_for_wisdom_quotes": "Returns a JSON object which includes a random wisdom quote and its related id.", "get_album_metadata_for_spotify_scraper": "This endpoint fetches full details of an album.", "index_overview_for_investing_financial_stocks": "get all overview about index by symbol", "jak_for_jak_api": "Get the JSON formated file containing details about JAK!!", "latest_information_for_symbol_for_bybit": "Get the latest information for symbol.", "list_user_followers_for_spotify_scraper": "This endpoint lists part of a user's followers.", "memre_api_v1_concepts_id_for_learning_engine": "Retrieve the details of a specific concept by ID.", "prediction_for_timeseries_prediction_model": "predict next period with dates and values", "properties_v2_resolve_url_for_hotels": "Hotels system is being merged with Expedia. This endpoint helps to convert the old hotel ID (embedded in the shared link, Ex : \"ho133528\" in hotels.com/ho133528/) to the new one (423818).", "review_for_worldwide_recipes": "Get reviews", "search_for_unofficial_icons8_search": "Search Icons8 repository", "template_download_for_xlsx_template": "Download template file from Cloud storage", "tier2_for_proxypage": "Tier 2 proxies\n\nEach proxy returned costs 1 credit\n\n\nWith our /v1/tier2 endpoint you can set different parameters for proxies that you need.\n\nYou can set type which is just your proxy type, either HTTP, HTTPS, SOCKS4, SOCKS5, CONNECT:25 (which is smtp proxy)\n\nfor limit set an integer that will tell us how many proxies you will need. Our users usually set a limit to avoid using too many credits.\n\nWith latency you can set an integer which will filter out all proxies that have a latency higher then specified.\n\nssl is a boolean parameter, you can filter out proxies that support ssl or don't\n\nis_anonymous is also a boolean statemet where you can filter anonymous proxies\n\ncountry is a parameter that you can use to set a country that you want.", "top_10_search_queries_for_quality_porn": "Get the top 10 search queries", "united_states_card_spending_for_covid_19_economic_impact": "Get daily United States 7 day moving average percentage change in credit and debit card spending seasonally adjusted relative to January 4 - 31, 2020."}, "aseqs": [{"api_name": "list_user_followers_for_spotify_scraper", "api_action": "\nAction: list_user_followers_for_spotify_scraper\nAction Input: {\n  \"userid\": \"einaudiofficial\"\n}", "api_reaction": null}, {"api_name": "get_album_metadata_for_spotify_scraper", "api_action": "\nAction: get_album_metadata_for_spotify_scraper\nAction Input: {\n  \"albumid\": \"5Otajf16kZ0zkVZWhu7LtO\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "list_user_followers_for_spotify_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_album_metadata_for_spotify_scraper", "api_action": "\nAction: get_album_metadata_for_spotify_scraper\nAction Input: {\n  \"albumid\": \"5Otajf16kZ0zkVZWhu7LtO\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "list_user_followers_for_spotify_scraper"}}]}
{"URL": "39254", "query": "Check the health of the wordle-api tool and let me know if it's active. Also, fetch the documentation for the API to understand its functionalities and how to use it effectively.", "api_names": ["Finish", "documentation_for_wordle_api", "health_for_wordle_api", "tournament_standings_for_handball_data", "get_company_data_by_linkedin_url_for_fresh_linkedin_profile_data", "getchannelplaylists_for_youtube_search_v3", "list_applications_for_geolocation_simulation_for_mobile_apps", "statusforemissionreductiontarget_for_carbon_management", "latest_retrieve_selected_160_symbols_for_live_metal_prices", "search_for_twitter", "artists_get_details_for_shazam", "comments_for_axesso_facebook_data_service"], "api_descs": {"Finish": "No description available.", "artists_get_details_for_shazam": "Get detailed information of an artist", "comments_for_axesso_facebook_data_service": "Fetch comments for a given feedbackId (returned in the post endpoint). For pagination the optional query parameter \"after\" can be used by including \"comments.data.feedback.page_info.end_cursor\" from the previous response.", "documentation_for_wordle_api": " ", "get_company_data_by_linkedin_url_for_fresh_linkedin_profile_data": "Given a company’s LinkedIn URL, the API will return valuable data points in JSON format. **1 credit per call.**", "getchannelplaylists_for_youtube_search_v3": "Retrieve a comprehensive list of playlists associated with a specific channel", "health_for_wordle_api": " ", "latest_retrieve_selected_160_symbols_for_live_metal_prices": "Select what you need for a smaller payload! Real-time Gold, Silver, Palladium, and Platinum provided in 160+ currencies including USD, GBP and EUR.", "list_applications_for_geolocation_simulation_for_mobile_apps": "List all your applications", "search_for_twitter": "-", "statusforemissionreductiontarget_for_carbon_management": "Get results in details from the task id.", "tournament_standings_for_handball_data": "Team Rankings for a specific competition."}, "aseqs": [{"api_name": "health_for_wordle_api", "api_action": "\nAction: health_for_wordle_api\nAction Input: {}", "api_reaction": null}, {"api_name": "documentation_for_wordle_api", "api_action": "\nAction: documentation_for_wordle_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "health_for_wordle_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "documentation_for_wordle_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "health_for_wordle_api"}}]}
{"URL": "2719", "query": "I'm researching the performance of the Facebook stock and I need the time-series data and metadata. Can you fetch the time-series data and metadata for the Facebook stock from the Quandl database? Furthermore, I would like to get the time-series metadata specifically for the Facebook stock.", "api_names": ["get_time_series_data_and_metadata_for_quandl", "get_time_series_metadata_for_quandl", "get_metadata_for_a_time_series_database_for_quandl", "Finish", "market_statistics_goals_for_soccer_data", "autocomplete_for_twitter_v5", "searchverificationsdone_for_cleardil", "get_a_specific_game_for_free_nba", "veiculo_tipo_id_marca_id_modelo_for_veiculos_api", "changed_items_and_profiles_for_hacker_news", "engines_for_car_api", "autocomplete_for_local_business_data", "reversegeocoding_for_forward_reverse_geocoding", "get_latest_price_for_oil_thai_price", "cash_flow_statement_for_finshorts", "user_data_by_secuid_for_tiktok_solutions", "artist_discography_overview_for_spotify_v3", "api_schedulechangeaccept_mfref_flightid_for_asr_hub", "actors_get_filmography_appearances_for_online_movie_database", "video_comments_for_tiktok_v3"], "api_descs": {"Finish": "No description available.", "actors_get_filmography_appearances_for_online_movie_database": "Get filmography appearances of an actor, actress, etc...", "api_schedulechangeaccept_mfref_flightid_for_asr_hub": "Accept Schedule Change based on the UserInputs\r\n - MFRef\r\n - Flight Id", "artist_discography_overview_for_spotify_v3": "Get artist discography overview", "autocomplete_for_local_business_data": "Returns place/address, business and query predictions for text-based geographic queries.", "autocomplete_for_twitter_v5": "Twitter Seach Query Autocomplete", "cash_flow_statement_for_finshorts": "Finshorts provide companies cash flow statement in realtime", "changed_items_and_profiles_for_hacker_news": "Returns the item and profile changes.", "engines_for_car_api": "To include additional information about the returned body (such as year, make, model and trim) request with the query parameter as verbose=yes.\n\nFor complex queries you may use the json field to send an array of URL encoded JSON conditions, example:\n\n`[{\"field\": \"horsepower_hp\", \"op\": \">=\", \"val\": 100}, {\"field\": \"horsepower_hp\", \"op\": \"<=\", \"val\": 300}]`\n\nSee /api/vehicle-attributes for a complete list of vehicle attributes.\n\nAllowed operators are: `>`, `<`, `>=`, `<=`, `in`, `not in`, `like`, `not like`, `is null` and `not null`.\n\nAllowed json search fields are: year, make, model, trim, fuel_type, engine_type, transmission, drive_type, cam_type, valve_timing, valves, horsepower_hp, size, cylinders, make_id, make_model_id, and make_model_trim_id.", "get_a_specific_game_for_free_nba": "This endpoint retrieves a specific game", "get_latest_price_for_oil_thai_price": "Get latest thai oil price", "get_metadata_for_a_time_series_database_for_quandl": "You can retrieve metadata for a specified time-series database", "get_time_series_data_and_metadata_for_quandl": "This call returns data and metadata for a given time-series.", "get_time_series_metadata_for_quandl": "This call returns metadata for a specified time-series.", "market_statistics_goals_for_soccer_data": "Provides the market goals statistics which are “Both Teams to Score”, “Under/Over” and also “Total Goals” for both two teams against the other teams in the tournament.\n\nP.S.\nFull data is available at Market Statistics: Goals endpoint but can not be shown in mock response.\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.", "reversegeocoding_for_forward_reverse_geocoding": "Find address or place by latitude and longitude", "searchverificationsdone_for_cleardil": " ", "user_data_by_secuid_for_tiktok_solutions": "Get User Data by SecUID", "veiculo_tipo_id_marca_id_modelo_for_veiculos_api": "/", "video_comments_for_tiktok_v3": "get video comments by video_id"}, "aseqs": [{"api_name": "get_time_series_data_and_metadata_for_quandl", "api_action": "\nAction: get_time_series_data_and_metadata_for_quandl\nAction Input: {\n  \"database_code\": \"WIKI\",\n  \"return_format\": \"json\",\n  \"dataset_code\": \"FB\"\n}", "api_reaction": null}, {"api_name": "get_time_series_metadata_for_quandl", "api_action": "\nAction: get_time_series_metadata_for_quandl\nAction Input: {\n  \"return_format\": \"json\",\n  \"database_code\": \"WIKI\",\n  \"dataset_code\": \"FB\"\n}", "api_reaction": null}, {"api_name": "get_metadata_for_a_time_series_database_for_quandl", "api_action": "\nAction: get_metadata_for_a_time_series_database_for_quandl\nAction Input: {\n  \"database_code\": \"WIKI\",\n  \"return_format\": \"json\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_time_series_data_and_metadata_for_quandl"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_time_series_metadata_for_quandl"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_time_series_data_and_metadata_for_quandl", "api_action": "\nAction: get_time_series_data_and_metadata_for_quandl\nAction Input: {\n  \"database_code\": \"WIKI\",\n  \"return_format\": \"json\",\n  \"dataset_code\": \"FB\"\n}", "api_reaction": null}}, {"state": "json_error", "aseq": "{\n\t\"api_name\": \"get_time_series_data_and_metadata_for_quandl\",\n\t\"api_action\": \"\\nAction: get_time_series_data_and_metadata_for_quandl\\nAction Input: {\\n  \\\"database_code\\\": \\\"WIKI\\\",\\n  \\\"return_format\\\": \\\"json\\\",\\n  \\\"dataset_code\\\": \\\"FB\\\"\\n}\",\n}"}]}
{"URL": "43025", "query": "I'm a journalist researching crime rates in the UK for an article. Can you provide me with the crime categories for the month of February 2022? Furthermore, I need the street-level crimes within a 1-mile radius of the Royal Mile.", "api_names": ["Finish", "street_level_crimes_for_data_police_uk", "crime_categories_for_data_police_uk", "airports_nonstop_and_direct_routes_for_an_airport_for_timetable_lookup_", "powerball_for_ca_lottery", "specific_force_for_data_police_uk", "matches_for_bildbet", "daily_3_recent_for_ca_lottery", "get_all_users_for_node_express_api_tutorial", "tweet_user_favoriters_continuation_for_twitter", "madlibs_wordlist_for_mad_libs_diceware", "api_customer_for_quickbooks"], "api_descs": {"Finish": "No description available.", "airports_nonstop_and_direct_routes_for_an_airport_for_timetable_lookup_": "Returns a list of nonstop and direct routes for an airport", "api_customer_for_quickbooks": " ", "crime_categories_for_data_police_uk": "Returns a list of valid categories for a given data set date.", "daily_3_recent_for_ca_lottery": "Most recent draw for Daily 3", "get_all_users_for_node_express_api_tutorial": "This endpoint will return all users stored in the database.", "madlibs_wordlist_for_mad_libs_diceware": "**Get the wordlist used by madlibs diceware in JSON format**", "matches_for_bildbet": "Latest Matches for Bildbet", "powerball_for_ca_lottery": "Powerball History", "specific_force_for_data_police_uk": "Provides detailed information about a specific force.", "street_level_crimes_for_data_police_uk": "Crimes at street-level; either within a 1 mile radius of a single point, or within a custom area. For custom areas see http://data.police.uk/docs/method/crime-street/", "tweet_user_favoriters_continuation_for_twitter": "This endpoint returns the next list of user who favorited the tweet"}, "aseqs": [{"api_name": "crime_categories_for_data_police_uk", "api_action": "\nAction: crime_categories_for_data_police_uk\nAction Input: {\n  \"date\": \"2022-02\"\n}", "api_reaction": null}, {"api_name": "street_level_crimes_for_data_police_uk", "api_action": "\nAction: street_level_crimes_for_data_police_uk\nAction Input: {\n  \"lat\": \"55.952141\",\n  \"lng\": \"-3.188539\",\n  \"date\": \"2022-02\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "crime_categories_for_data_police_uk"}}, {"state": "generated_by_agent", "aseq": {"api_name": "street_level_crimes_for_data_police_uk", "api_action": "\nAction: street_level_crimes_for_data_police_uk\nAction Input: {\n  \"area\": \"Royal Mile\",\n  \"radius\": 1,\n  \"type\": \"crime_street\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "crime_categories_for_data_police_uk", "api_action": "\nAction: crime_categories_for_data_police_uk\nAction Input: {\n  \"date\": \"2022-02\"\n}", "api_reaction": null}}]}
{"URL": "82971", "query": "My company is organizing a comedy competition and we need a variety of jokes. Can you search for jokes containing the keyword 'humor' using the search-jokes API? Also, please generate a random meme with the keyword 'comedy' using the random-meme API.", "api_names": ["random_meme_for_humor_jokes_and_memes", "search_jokes_for_humor_jokes_and_memes", "Finish", "get_blobs_uid_xml_for_quickblox", "results_for_skyscanner_flights", "properties_get_area_stats_for_zoopla_v2", "commands_run_for_ssh_honeypot", "query_for_city_boundary_by_name_for_de_boundaries_io", "endpint_b_for_putreq", "get_french_word_for_random_word_api", "get_country_codes_for_mocking_rock_", "standard_deviation_for_qvantana", "get_specific_country_for_europe_fuel_prices", "getsmsmessage_for_mailslurp_email_testing", "getmatchs_for_ipl_api"], "api_descs": {"Finish": "No description available.", "commands_run_for_ssh_honeypot": "Commands being run by honey pot logins", "endpint_b_for_putreq": "efsdfs", "get_blobs_uid_xml_for_quickblox": "Download File (Get File as a redirect to the S3 object) by uid. 'uid' is a parameter which should be taken from the response of the request for the creating a file. To have a possibility to download a file you should set a status complete to your file firstly.", "get_country_codes_for_mocking_rock_": "Use this API to get list of countries, Their ISO3 & ISO2 codes.", "get_french_word_for_random_word_api": "Same as random word, but grabs a random french word instead.", "get_specific_country_for_europe_fuel_prices": "Get fuel prices for a specific country", "getmatchs_for_ipl_api": "to get all the match details .", "getsmsmessage_for_mailslurp_email_testing": "Returns a SMS summary object with content.", "properties_get_area_stats_for_zoopla_v2": "Get area stats", "query_for_city_boundary_by_name_for_de_boundaries_io": "Query for City Boundary by City Name", "random_meme_for_humor_jokes_and_memes": "Get a random meme.\nSee https://humorapi.com/docs/#Random-Meme for more.", "results_for_skyscanner_flights": "Pricing and results data as it appears on the source website.", "search_jokes_for_humor_jokes_and_memes": "Search for jokes.\nSee https://humorapi.com/docs/#Search-Jokes for more.", "standard_deviation_for_qvantana": "Standard deviation indicator"}, "aseqs": [{"api_name": "search_jokes_for_humor_jokes_and_memes", "api_action": "\nAction: search_jokes_for_humor_jokes_and_memes\nAction Input: {}", "api_reaction": null}, {"api_name": "random_meme_for_humor_jokes_and_memes", "api_action": "\nAction: random_meme_for_humor_jokes_and_memes\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "search_jokes_for_humor_jokes_and_memes"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_jokes_for_humor_jokes_and_memes", "api_action": "{\"query\":\"humor\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_jokes_for_humor_jokes_and_memes", "api_action": "\nAction: search_jokes_for_humor_jokes_and_memes\nAction Input: {\"query\": \"humor\", \"limit\": 10}", "api_reaction": null}}]}
{"URL": "67012", "query": "I'm a travel agent assisting clients with international bookings. Can you help me verify the phone numbers '+33123456789' and '+81345678901'? It would be great to retrieve the phone type, country code, region, and carrier details for each number. Additionally, I would like to get an example phone number for the country with the code 'JP' and the 'voip' type.", "api_names": ["verify_for_veriphone", "example_for_veriphone", "Finish", "get_a_specific_quote_for_motivational_content", "us_az_for_us_gas_prices", "currencies_list_for_investing_cryptocurrency_markets", "heroes_for_superhero_search", "get_a_list_of_suburbs_for_australian_postcode_to_suburb", "post_likers_for_instagram_bulk_profile_scrapper", "get_song_related_for_youtube_music_api_detailed_", "prematch_event_for_sports_betting_api", "search_results_for_youtube_search_unlimited_", "get_video_info_for_youtube_video_stream_download", "ainamematch_for_aspose_email_cloud", "get_all_climate_change_news_for_climate_change_api_v3"], "api_descs": {"Finish": "No description available.", "ainamematch_for_aspose_email_cloud": " ", "currencies_list_for_investing_cryptocurrency_markets": "List all available currencies", "example_for_veriphone": "Get an example phone number for any country", "get_a_list_of_suburbs_for_australian_postcode_to_suburb": "This endpoint will return all matching suburbs for the passed postcode. The response also includes the state for each suburb and, if available, latitude and longitude for the suburb.", "get_a_specific_quote_for_motivational_content": "This endpoint fetches a specific quote using the provided 'id'.", "get_all_climate_change_news_for_climate_change_api_v3": "This endpoint will return all news about climate change from top news sites.", "get_song_related_for_youtube_music_api_detailed_": "Gets related content for a song. Equivalent to the content shown in the “Related” tab of the watch panel.", "get_video_info_for_youtube_video_stream_download": "Get basic informations of video/stream or shorts.", "heroes_for_superhero_search": "Return a list of 20 random heroes", "post_likers_for_instagram_bulk_profile_scrapper": "Get Instagram Post Likers list by media_id", "prematch_event_for_sports_betting_api": "All Odds  Markets", "search_results_for_youtube_search_unlimited_": "Get Top 22 YouTube Search Results with Video ID, URL, Thumbnail, Title & Duration. No API Key/No Quota Limits", "us_az_for_us_gas_prices": "Returns current gas price data for Arizona. Historical data starting from 2023-06-01 can be queried by adding the `date` parameter to this endpoint. In order to return XML instead of the default JSON format, simply add the `Accept: application/xml` header to your request.", "verify_for_veriphone": "Global phone number verification"}, "aseqs": [{"api_name": "verify_for_veriphone", "api_action": "\nAction: verify_for_veriphone\nAction Input: {\n  \"phone\": \"+33123456789\"\n}", "api_reaction": null}, {"api_name": "verify_for_veriphone", "api_action": "\nAction: verify_for_veriphone\nAction Input: {\n  \"phone\": \"+81345678901\"\n}", "api_reaction": null}, {"api_name": "example_for_veriphone", "api_action": "\nAction: example_for_veriphone\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "verify_for_veriphone"}}, {"state": "generated_by_agent", "aseq": {"api_name": "verify_for_veriphone", "api_action": "\nAction: verify_for_veriphone\nAction Input: {\n  \"phone\": \"+81345678901\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "verify_for_veriphone", "api_action": "\nAction: verify_for_veriphone\nAction Input: {\n  \"phone\": \"+33123456789\",\n  \"details\": [\n    \"countryCode\",\n    \"region\",\n    \"carrier\"\n  ]\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "verify_for_veriphone", "api_action": "\nAction: verify_for_veriphone\nAction Input: {\n  \"phone\": \"+33123456789\",\n  \"countryCode\": 0,\n  \"type\": \"mobile\"\n}", "api_reaction": null}}]}
{"URL": "30612", "query": "My company is developing an e-commerce platform for selling books. We need the book cover image and URL for the book with ISBN 9781526606198. Can you help us by providing the book cover image in English?", "api_names": ["getbookcoverimage_for_book_cover_api", "getbookcoverurl_for_book_cover_api", "Finish", "account_for_myapi", "get_all_city_names_for_kfc_locations", "telegram_channel_info_for_telegram_v2", "getfileslist_for_groupdocs_comparison_cloud", "majors_performance_for_investing_financial_stocks", "headtoheadmatches_for_baseballapi", "getpatient_for_the_cancer_imaging_archive", "get_manager_placeholder_for_baseballapi", "doi_for_crossref", "get_list_of_algorithms_for_general_detection", "m_for_barbaraaa", "consulta_estabelecimento_for_consulta_cnpj_tempo_real"], "api_descs": {"Finish": "No description available.", "account_for_myapi": "show account details", "consulta_estabelecimento_for_consulta_cnpj_tempo_real": "Consulta CNPJ unificada a Receita Federal, Simples Nacional e Cadastro de Contribuintes", "doi_for_crossref": "Information of a article with specified doi.", "get_all_city_names_for_kfc_locations": "GET all City names", "get_list_of_algorithms_for_general_detection": "Service provides alternative algorithms that may be used for image detection.\n\nThe idea behind multiple algorithms is to let client try different algorithms to get the best one that matches client's use case.", "get_manager_placeholder_for_baseballapi": "Get the manager placeholder image in PNG format.", "getbookcoverimage_for_book_cover_api": "Get a book cover image by isbn and language code", "getbookcoverurl_for_book_cover_api": "Get a book cover image url by isbn and language code", "getfileslist_for_groupdocs_comparison_cloud": " ", "getpatient_for_the_cancer_imaging_archive": "Returns a set of patient objects filtered by query keys", "headtoheadmatches_for_baseballapi": "Get head-to-head match data for a specific baseball match using its custom ID.", "m_for_barbaraaa": "crypto", "majors_performance_for_investing_financial_stocks": "get all majors performance", "telegram_channel_info_for_telegram_v2": "The endpoint returns realtime information about  public Telegram Channel\n\n- Title\n- Photo\n- Description\n- Members"}, "aseqs": [{"api_name": "getbookcoverurl_for_book_cover_api", "api_action": "\nAction: getbookcoverurl_for_book_cover_api\nAction Input: {\n \"languagecode\": \"en\",\n \"isbn\": \"9781526606198\"\n}", "api_reaction": null}, {"api_name": "getbookcoverimage_for_book_cover_api", "api_action": "\nAction: getbookcoverimage_for_book_cover_api\nAction Input: {\n  \"isbn\": \"9781526606198\",\n  \"languagecode\": \"en\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbookcoverurl_for_book_cover_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbookcoverimage_for_book_cover_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbookcoverurl_for_book_cover_api"}}]}
{"URL": "14033", "query": "Hey there! I'm planning to surprise my friends with some game deals. Could you give me the list of stores along with their logos and icons that offer active discounts? Additionally, please provide me with the best deals available for each store.", "api_names": ["list_of_deals_for_cheapshark_game_deals", "stores_info_for_cheapshark_game_deals", "Finish", "goal_analysis_goal_minutes_in_between_for_soccer_data", "checkconcent_for_sim_based_location_tracking", "loginuser_for_thisshouldbefree", "v1_dictionary_for_dictionary_by_api_ninjas", "gets_products_for_amazon_india_scraper_v3", "copa_sudamericana_latest_matches_for_surebets_2", "assetbyid_for_bravenewcoin", "top_50_startups_news_from_the_last_month_for_public_url_share", "get_countries_for_60k_radio_stations", "is_registered_on_whatsapp_for_whatsapp_data", "latest_for_exchange_rates_api_", "objective_c_versions_for_objective_c_code_compiler"], "api_descs": {"Finish": "No description available.", "assetbyid_for_bravenewcoin": "Retrieves the details of an individual asset. Supply the unique identifier (UUID) of the asset.\n\nThe full list of all asset details can be obtained from the Asset endpoint.", "checkconcent_for_sim_based_location_tracking": "<p>This endpoint is responsible for refreshing the tracking concent of provided number, i.e. whether location tracking is allowed or not yet</p>\n\n<p><strong>Body Parameters</strong></p>\n\n<div class=\"click-to-expand-wrapper is-table-wrapper\"><table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Mandatory</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n\n\n<tr>\n<td>tel</td>\n<td>Yes</td>\n<td> 10 digit previously added mobile number</td>\n</tr>\n\n\n</tbody>\n</table>\n\n\n<h2 id=\"output\">OUTPUT</h2>\n<p>\n<h4>Invalid user credentials</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">{\n    \"errors\": \"Invalid username/password.\"\n}\n</code></pre>\n\n<p>\n<h4>Wrong or not added mobile number passed</h4>\n</p>\n<pre class=\"click-to-expand-wrapper is-snippet-wrapper language-undefined\"><code class=\"is-highlighted language-undefined\">\n{\n    \"status\": \"invalid_mobile\"\n}\n</code></pre>", "copa_sudamericana_latest_matches_for_surebets_2": "Latest matches of Copa Sudamericana by bookie - updated every 24 hours", "get_countries_for_60k_radio_stations": "Get country list", "gets_products_for_amazon_india_scraper_v3": "Get The Product Details Using A Identifier(id)", "goal_analysis_goal_minutes_in_between_for_soccer_data": "Provides the goals statistics of the teams between in the minutes intervals(0-10, 11-20, 21-30...etc.)\n\nThe data will return for only -+7 days period, so endpoint can be tested with match that its date is in today +- 7 days. You can choose suitable match from Soccer Match List or Fixture endpoints.", "is_registered_on_whatsapp_for_whatsapp_data": "This endpoint returns `true` if the phone is registered on whatsapp.", "latest_for_exchange_rates_api_": "This endpoint returns the latest rates.\n\nGET /latest HTTP/1.1\nRates quote against the Euro by default. You can quote against other currencies using the from parameter.\n\nGET /latest?from=USD HTTP/1.1\nto limits returned rates to specified values.\n\nGET /latest?to=USD,GBP HTTP/1.1", "list_of_deals_for_cheapshark_game_deals": "Get a paged list of deals matching any number of criteria, all the filtering parameters are optional.\n\nThe deal object is what drives most of what you see on the site. They are price + metadata properties for games for a given store. All dealID’s are encoded on the server. On your website/app, you will use the redirect page to link users to a specific deal:\n\n> https://www.cheapshark.com/redirect?dealID={id}\n\n**Important Note**: The redirect page is not an API endpoint and is not designed for automated access. It is purely a way to link your end users to deals.\n\nThe deal rating property provides a quick way to compare how 'good' a deal is. It is normalized on a scale from 0 to 10.", "loginuser_for_thisshouldbefree": "", "objective_c_versions_for_objective_c_code_compiler": "Objective-C Versions", "stores_info_for_cheapshark_game_deals": "Returns a full list of store IDs and names, a flag specifying if store is active, and an array of image/logo sizes (relative URLs)", "top_50_startups_news_from_the_last_month_for_public_url_share": "Top 50 startups news from the last month", "v1_dictionary_for_dictionary_by_api_ninjas": "API Ninjas Dictionary API endpoint."}, "aseqs": [{"api_name": "stores_info_for_cheapshark_game_deals", "api_action": "\nAction: stores_info_for_cheapshark_game_deals\nAction Input: {}", "api_reaction": null}, {"api_name": "list_of_deals_for_cheapshark_game_deals", "api_action": "\nAction: list_of_deals_for_cheapshark_game_deals\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "stores_info_for_cheapshark_game_deals"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stores_info_for_cheapshark_game_deals"}}, {"state": "generated_by_agent", "aseq": {"api_name": "stores_info_for_cheapshark_game_deals"}}]}
{"URL": "61440", "query": "I need to retrieve the bank details for a specific bank with the bank code 'ABC123'. Additionally, I want to resend the OTP to the customer with the mobile number '9999999999'.", "api_names": ["resendotpft_for_fund_transfer", "getbankdetailsft_for_fund_transfer", "Finish", "meme_for_alt_coins", "generaterandomidentity_for_fake_identity_generator", "bitcoinist_for_cryptocurrency_news", "search_fighter_stats_for_mma_stats", "paymentcalculatorsimple_calculate_for_simple_interest_payment_calculator", "tin_lookup_for_tin_check", "gethomepage_for_radio_world_75_000_worldwide_fm_radio_stations_", "autocomplete_suggestions_for_arcgis_platform_geocoding", "consumer_name_search_for_data_axle_consumer_search", "memes_for_meme_generator_v2", "stagedetails_for_motorsportapi", "get_all_narco_news_for_narco_in_mexico"], "api_descs": {"Finish": "No description available.", "autocomplete_suggestions_for_arcgis_platform_geocoding": "The ArcGIS World Geocoding Service includes a method that allows character-by-character autocomplete suggestions to be generated for user input in a client application. This capability facilitates the interactive search user experience by reducing the number of characters that need to be typed before a suggested match is obtained. The idea is that a client application can provide a list of suggestions that is updated with each character entered by a user until the place they are looking for is returned in the list.\n\n![Autocomplete diagram](https://developers.arcgis.com/rest/geocode/api-reference/GUID-9A754AFE-8154-46C3-8A31-3566963F971E-web.png)\n\n[API reference `suggest` operation](https://developers.arcgis.com/rest/geocode/api-reference/geocoding-suggest.htm)", "bitcoinist_for_cryptocurrency_news": "Get the top latest news from Bitcoinist.", "consumer_name_search_for_data_axle_consumer_search": "Find relevant People in the Data Axle database", "generaterandomidentity_for_fake_identity_generator": "Use this endpoint to generate a random fake identity, click the test button and enjoy the informations generated!", "get_all_narco_news_for_narco_in_mexico": "Get All Narco in Mexico News", "getbankdetailsft_for_fund_transfer": "By accessing  this API we can get all the bank details of a particular customer. For this a bank code is required.", "gethomepage_for_radio_world_75_000_worldwide_fm_radio_stations_": "*We have made an option for you to display result in your landing/home page. So you don't have to work hard to achieve this.*\nGet limited radios to show in landing/home page, based on.\n- limit", "meme_for_alt_coins": "Provide memes", "memes_for_meme_generator_v2": "Generate mems by /meme", "paymentcalculatorsimple_calculate_for_simple_interest_payment_calculator": " ", "resendotpft_for_fund_transfer": "In case you miss the otp from our side.", "search_fighter_stats_for_mma_stats": "The search functionality provided helps you find fighter statistics and UFC/MMA history based on their names. It compares your search criteria with the fighters' information and returns a list of fighters that match all the specified criteria, including their statistics, averages, titles, wins, losses, and more.", "stagedetails_for_motorsportapi": "Get the details of a specific Motorsport stage.", "tin_lookup_for_tin_check": "Through this operation you know if the tin number is valid or not and more information"}, "aseqs": [{"api_name": "getbankdetailsft_for_fund_transfer", "api_action": "\nAction: getbankdetailsft_for_fund_transfer\nAction Input: {\n  \"bankcode\": \"ABC123\"\n}", "api_reaction": null}, {"api_name": "resendotpft_for_fund_transfer", "api_action": "\nAction: resendotpft_for_fund_transfer\nAction Input: {\n  \"body\": \"{\\\"customerMobileNo\\\": \\\"9999999999\\\"}\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getbankdetailsft_for_fund_transfer"}}, {"state": "generated_by_agent", "aseq": {"api_name": "resendotpft_for_fund_transfer", "api_action": "\nAction: resendotpft_for_fund_transfer\nAction Input: {\n  \"phonenumber\": \"9999999999\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getbankdetailsft_for_fund_transfer"}}]}
{"URL": "2803", "query": "I want to analyze the performance of the stock with the symbol TSLA. Can you fetch the yearly balance sheets, yearly income statements, and yearly cashflow statements? Your assistance is highly valued.", "api_names": ["yearly_income_statements_for_freedom_finance", "Finish", "downloadminecraftjar_for_minecraft_forge_optifine", "teamplaceholderimage_for_americanfootballapi", "airports_by_keyword_for_carbonsutra", "domain_for_mailcheck", "account_transaction_history_for_optimism", "loading_speed_data_for_website_analyze_and_seo_audit_pro_"], "api_descs": {"Finish": "No description available.", "account_transaction_history_for_optimism": "Get an array of all transactions of an address on the Optimism blockchain.", "airports_by_keyword_for_carbonsutra": "Returns the lists of airport names and IATA code which matches the keyword.", "domain_for_mailcheck": "Check if a domain is disposable", "downloadminecraftjar_for_minecraft_forge_optifine": "Redirect to download Minecraft .jar file.", "loading_speed_data_for_website_analyze_and_seo_audit_pro_": "Website Loading speed Related Information", "teamplaceholderimage_for_americanfootballapi": "Get the team placeholder image in SVG format.", "yearly_income_statements_for_freedom_finance": "Annual income statements"}, "aseqs": [{"api_name": "yearly_income_statements_for_freedom_finance", "api_action": "\nAction: yearly_income_statements_for_freedom_finance\nAction Input: {\n  \"symbol\": \"TSLA\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to use an API that provides yearly financial statements for stocks, but Freedom Finance doesn't seem to offer this information. Let me check if there's another endpoint available or try fetching historical stock data like balance sheets, income statements, and cashflow statements from a reliable financial API.\n}\n{\n\t\"api_name\": \"yearly_income_statements_for_freedom_finance\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "yearly_balance_sheets_for_analytics_platform", "api_action": "\nAction: yearly_balance_sheets_for_analytics_platform\nAction Input: {\n  \"symbol\": \"TSLA\"\n}", "api_reaction": null}}]}
{"URL": "54507", "query": "I am planning to plant a new tree in my garden and I want to ensure that the soil conditions are suitable. Can you provide me with the historical soil data for the latitude 20.59 and longitude 78.96 from 'YYYY-MM-DD hh:mm:ss' to 'YYYY-MM-DD hh:mm:ss'? Additionally, I would like the latest soil data for the same location.", "api_names": ["soil_history_data_for_ambee_soil_data", "Finish", "birth_details_for_yawin_indian_astrology", "validate_email_address_for_email_address_validator", "get_version_for_brand_recognition", "get_tickers_v2_for_chain49", "movie_parental_guides_json_for_yts_am_torrent", "get_top_stories_of_kuensel_for_top_stories_of_kuensel", "get_schedule_for_league_of_legends_esports", "get_antonyms_for_dicolink"], "api_descs": {"Finish": "No description available.", "birth_details_for_yawin_indian_astrology": "Get Basic astrological details from the birth date and birth time", "get_antonyms_for_dicolink": "Get antonyms of a specific word", "get_schedule_for_league_of_legends_esports": "In this method you can get all schedule for the leagues. You can filter multiple leagueId with join %  seperator.", "get_tickers_v2_for_chain49": "Returns currency rate for the specified currency and date. If the currency is not available for that specific timestamp, the next closest rate will be returned. All responses contain an actual rate timestamp.", "get_top_stories_of_kuensel_for_top_stories_of_kuensel": "Get top stories of kuensel", "get_version_for_brand_recognition": "Returns an actual version of the service in format `vX.Y.Z` where X is the version of API.", "movie_parental_guides_json_for_yts_am_torrent": "Returns all the parental guide ratings for the specified movie", "soil_history_data_for_ambee_soil_data": "Ambee  Soil History Data", "validate_email_address_for_email_address_validator": "Determine firsthand if the email is deliverable and working"}, "aseqs": [{"api_name": "soil_history_data_for_ambee_soil_data", "api_action": "\nAction: soil_history_data_for_ambee_soil_data\nAction Input: {\n  \"lng\": 78.96,\n  \"lat\": 20.59,\n  \"startdate\": \"YYYY-MM-DD hh:mm:ss\",\n  \"enddate\": \"YYYY-MM-DD hh:mm:ss\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to get historical soil data for the given latitude and longitude from 'YYYY-MM-DD hh:mm:ss' to 'YYYY-MM-DD hh:mm:ss'. After that, I need to fetch the latest soil data for the same location. I will use the soil_history_data_for_ambee_soil_data API for both actions.\n\t\"api_name\": \"soil_history_data_for_ambee_soil_data\"\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "soil_history_data_for_ambee_soil_data", "api_action": "\nAction: soil_history_data_for_ambee_soil_data\nAction Input: {\n  \"lng\": 78.96,\n  \"lat\": 20.59,\n  \"startdate\": \"%@-MM-DD hh:mm:ss\",\n  \"enddate\": \"%@-MM-DD hh:mm:ss\"\n}", "api_reaction": null}}]}
{"URL": "6646", "query": "Please ensure the availability of the key ticket '24680'. Furthermore, I need to check the result of a syntax check using the ticket '13579'.", "api_names": ["exists_exists_ticket_get_for_ifc_bim_services", "syntax_status_syntax_ticket_get_for_ifc_bim_services", "Finish", "check_for_ssl_snitch", "products_v2_list_similarities_deprecating_for_asos", "real_time_commodity_futures_prices_for_investing", "rentalizer_for_airdna", "reversegeocode_for_feroeg_reverse_geocoding", "balance_sheet_for_sec_filings", "geocode_for_tanzania_api", "getslots_for_mybooky_demo", "getsponsorships_for_a_i_smartable"], "api_descs": {"Finish": "No description available.", "balance_sheet_for_sec_filings": "Returns a company's most recent balance sheet summarizing their liabilities, assets and shareholders' equity", "check_for_ssl_snitch": "Takes a domain name and returns SSL information.  Optionally, the extend property can be set for additional information.", "exists_exists_ticket_get_for_ifc_bim_services": "Check if the key ticket is available or not", "geocode_for_tanzania_api": "This endpoint allows you to lookup locations in Tanzania by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "getslots_for_mybooky_demo": " ", "getsponsorships_for_a_i_smartable": "Get sponsorships", "products_v2_list_similarities_deprecating_for_asos": "List similar products by product id", "real_time_commodity_futures_prices_for_investing": "page source : https://www.investing.com/commodities/real-time-futures", "rentalizer_for_airdna": "Rental Property Calculator by address", "reversegeocode_for_feroeg_reverse_geocoding": "Return a text address from a latitude/longitude location", "syntax_status_syntax_ticket_get_for_ifc_bim_services": "Check Result of a syntax check"}, "aseqs": [{"api_name": "exists_exists_ticket_get_for_ifc_bim_services", "api_action": "\nAction: exists_exists_ticket_get_for_ifc_bim_services\nAction Input: {\n  \"ticket\": \"24680\"\n}", "api_reaction": null}, {"api_name": "syntax_status_syntax_ticket_get_for_ifc_bim_services", "api_action": "\nAction: syntax_status_syntax_ticket_get_for_ifc_bim_services\nAction Input: {\n  \"ticket\": \"24680\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "syntax_status_syntax_ticket_get_for_ifc_bim_services"}}, {"state": "generated_by_agent", "aseq": {"api_name": "syntax_status_syntax_ticket_get_for_ifc_bim_services", "api_action": "\nAction: syntax_status_syntax_ticket_get_for_ifc_bim_services\nAction Input: {\n  \"ticket\": \"13579\"\n}"}}, {"state": "generated_by_agent", "aseq": {"api_name": "exists_exists_ticket_get_for_ifc_bim_services", "api_action": "\nAction: exists_exists_ticket_get_for_ifc_bim_services\nAction Input: {\n  \"ticket\": \"24680\"\n}", "api_reaction": null}}]}
{"URL": "3317", "query": "I'm organizing a sports camp for kids and I want to introduce them to the World Athletics Scoring Tables. Can you retrieve all the women's marks from the tables? It would be great if you could also provide the men's marks.", "api_names": ["marks_women_for_scoring_tables_api", "marks_men_for_scoring_tables_api", "Finish", "search_for_giphy", "batch_for_sigue_payout", "similar_for_comparable_companies", "open_item_for_inventory_and_ecommerce_hosted_and_self_hosted_solution", "daily_3_recent_for_ca_lottery", "retrieve_events_for_opensea_v2", "logoutuser_for_erictestpet", "get_video_without_watermark_for_tiktok_private", "measure_distance_reverse_for_cameroon", "race_calendar_for_fia_formula_1_championship_statistics", "listaddresses_for_chaingateway_io", "get_user_posts_by_user_id_for_instagram_api_2023", "correct_and_rephrase_for_ginger", "prediction_for_timeseries_prediction_model", "findpincodebysubdistrict_for_india_pincode_api"], "api_descs": {"Finish": "No description available.", "batch_for_sigue_payout": "batch process to retrieve payout transaction data", "correct_and_rephrase_for_ginger": "-", "daily_3_recent_for_ca_lottery": "Most recent draw for Daily 3", "findpincodebysubdistrict_for_india_pincode_api": "findpincodebysubdistrict", "get_user_posts_by_user_id_for_instagram_api_2023": "Get posts of an Instagram user using user_id.", "get_video_without_watermark_for_tiktok_private": "Get Video Without Watermark", "listaddresses_for_chaingateway_io": "Returns all ethereum addresses created with an account.", "logoutuser_for_erictestpet": "", "marks_men_for_scoring_tables_api": "This retrieves all men's marks from the World Athletics Scoring Tables.", "marks_women_for_scoring_tables_api": "This retrieves all women's marks from the World Athletics Scoring Tables.", "measure_distance_reverse_for_cameroon": "This endpoint calculates the distance between two addresses in Cameroon.", "open_item_for_inventory_and_ecommerce_hosted_and_self_hosted_solution": "Get one item", "prediction_for_timeseries_prediction_model": "predict next period with dates and values", "race_calendar_for_fia_formula_1_championship_statistics": "Use this endpoint to retrieve the current championship schedule and information about the **next round**. Time zone is GMT +00:00 Europe/London", "retrieve_events_for_opensea_v2": "This endpoint provides a list of events that occur on the NFTs that are tracked by OpenSea. The event_type field indicates the type of event (transfer, successful auction, etc) and the results are sorted by event timestamp.\n\nNote that due to block reorganizations, recent events (less than 10 minutes old) may not reflect the final state of the blockchain.", "search_for_giphy": "Search all Giphy GIFs for a word or phrase. Punctuation will be stripped and ignored. Use a plus or url encode for phrases.", "similar_for_comparable_companies": "The key feature of the comparable-companies API. This endpoint will return a list of companies that are similar to the one that has been provided. The endpoint will also return information about the queried domain through the variable \"frontend_company_info\".\n\nOccasionally, the algorithm finds new information that will take longer to crawl and process. In these cases, it will return results with the \"further_crawling\" variable set to true, indicating that we will have better results available in the next 10-15 sec. There is a possibility to establish a WebSocket connection through the \"connectionID\" parameter to be notified of these new results. This is not covered in this documentation, but our engineers will happily assist you with it.\n\nQuerying the same domain multiple times will only cost you a single search credit."}, "aseqs": [{"api_name": "marks_women_for_scoring_tables_api", "api_action": "\nAction: marks_women_for_scoring_tables_api\nAction Input: {}", "api_reaction": null}, {"api_name": "marks_men_for_scoring_tables_api", "api_action": "\nAction: marks_men_for_scoring_tables_api\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "json_error", "aseq": "{\n\t\"Thought\": I need to retrieve all women's marks and men's marks from the World Athletics Scoring Tables using the appropriate API function.\n\t\"api_name\": \"marks_women_for_scoring_tables_api\",\n\t\"included_params\": {\n\t\t\"table_type\": \"women\"\n\t}\n}"}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_men_for_scoring_tables_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "marks_women_for_scoring_tables_api"}}]}
{"URL": "63101", "query": "I am building a website and I need to display the user's real IP address. Can you provide me with an API that fetches the IP address in both plain and JSON formats?", "api_names": ["json_for_ip_echo", "Finish", "get_a_list_of_all_units_for_unit_measurement_conversion", "5_day_forecast_for_ski_resort_forecast", "frontpage_for_diffbot", "getpublictenantconfig_for_auth", "get_post_comments_for_twitter_v5", "get_all_gateways_for_aaaa"], "api_descs": {"5_day_forecast_for_ski_resort_forecast": "Returns the 5 day forecast for a given resort name", "Finish": "No description available.", "frontpage_for_diffbot": "The Frontpage API takes in a multifaceted “homepage” and returns individual page elements.", "get_a_list_of_all_units_for_unit_measurement_conversion": "This endpoint gets a full list of units available for conversion", "get_all_gateways_for_aaaa": "Get all Gateways", "get_post_comments_for_twitter_v5": "Get Post Comments By Post ID", "getpublictenantconfig_for_auth": "Get tenant public config for front apps", "json_for_ip_echo": "Response your real IP with json format"}, "aseqs": [{"api_name": "json_for_ip_echo", "api_action": "\nAction: json_for_ip_echo\nAction Input: {}", "api_reaction": null}, {"api_name": "json_for_ip_echo", "api_action": "\nAction: json_for_ip_echo\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "json_for_ip_echo"}}, {"state": "generated_by_agent", "aseq": {"api_name": "json_for_ip_echo"}}, {"state": "generated_by_agent", "aseq": {"api_name": "json_for_ip_echo"}}]}
{"URL": "10868", "query": "I need the match details for all the matches played in Kolkata. Additionally, provide the match details for all the matches won by the Kolkata Knight Riders team.", "api_names": ["Finish", "getmatchbywinner_for_ipl_api", "getmatchesbyteam_for_ipl_api", "getmatchesbycity_for_ipl_api", "see_about_nft_prices_for_crypto_currency_scraper_api", "get_recurring_characters_for_new_girl", "search_for_hadiths_in_collection_with_key_words_for_hadiths_api", "majors_performance_for_investing_financial_stocks", "whois_for_domain_checker", "get_ohlc_history_for_ohlc_history_forex", "search_single_postcode_for_uk_postcode_to_latitude_and_longitude", "trending_for_top_nft_collections", "free_exchange_rates_for_currency_v2", "convert_hex_for_convexity", "now_for_astrologer", "get_tag_by_name_for_churchapp"], "api_descs": {"Finish": "No description available.", "convert_hex_for_convexity": "Endpoint to converts hex color code to other color code like RGB , HSL, CMYK", "free_exchange_rates_for_currency_v2": "Convert Currency value from and to.", "get_ohlc_history_for_ohlc_history_forex": "Get  OHLC for the requested currency pair", "get_recurring_characters_for_new_girl": "This endpoint gets the recurring characters within the show.", "get_tag_by_name_for_churchapp": "This will return data for a specific tag", "getmatchbywinner_for_ipl_api": "get all  the matches by winner", "getmatchesbycity_for_ipl_api": "get all the matches by **city**", "getmatchesbyteam_for_ipl_api": "get all the matches by a particular team", "majors_performance_for_investing_financial_stocks": "get all majors performance", "now_for_astrologer": "Gets astrological data for the current moment at UTC.", "search_for_hadiths_in_collection_with_key_words_for_hadiths_api": "Searching for hadiths based on their various collections. Just enter the keyword, example searching for food, the request will look like this https://hadiths-api.vercel.app/api/hadiths?collection=Sahih Bukhari&search=food\n\nAnd limit can be added to reduce the amount of data received, by default the limit is 10.\nPage number by default is page1, but it can be changed as you want.\nNB: The %20 in the example query is just an empty space as the name of the collection is Sahih Bukhari in the database.", "search_single_postcode_for_uk_postcode_to_latitude_and_longitude": "Search a single postcode and return the latitude and longitude", "see_about_nft_prices_for_crypto_currency_scraper_api": "The endpoint fetch the data of the top nft currencies including names and prices even rank and more!", "trending_for_top_nft_collections": "Giving the same result in https://opensea.io/rankings/trending", "whois_for_domain_checker": "Checks the domain Whois Details"}, "aseqs": [{"api_name": "getmatchesbycity_for_ipl_api", "api_action": "\nAction: getmatchesbycity_for_ipl_api\nAction Input: {\n  \"city\": \"Kolkata\"\n}", "api_reaction": null}, {"api_name": "getmatchbywinner_for_ipl_api", "api_action": "\nAction: getmatchbywinner_for_ipl_api\nAction Input: {}", "api_reaction": null}, {"api_name": "getmatchesbyteam_for_ipl_api", "api_action": "\nAction: getmatchesbyteam_for_ipl_api\nAction Input: {\n  \"team\": \"Kolkata Knight Riders\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "getmatchesbycity_for_ipl_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "getmatchesbyteam_for_ipl_api", "api_action": "{\"team\": \"Kolkata Knight Riders\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getmatchesbyteam_for_ipl_api", "api_action": "\nAction: getmatchesbyteam_for_ipl_api\nAction Input: {\n  \"team\": \"Kolkata Knight Riders\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "getmatchesbycity_for_ipl_api", "api_action": "\nAction: getmatchesbycity_for_ipl_api\nAction Input: {\n  \"city\": \"Kolkata\"\n}", "api_reaction": null}}]}
{"URL": "10093", "query": "I need to gather information about a specific Amazon product. Can you provide me with the general product description, reviews, and offers for the product with ID B08L5NP6NG? Also, can you fetch the search results for the product 'Apple MagSafe Charger'?", "api_names": ["get_amazon_search_results_for_abiola_amazon_data_scraper", "get_amazon_product_details_for_abiola_amazon_data_scraper", "Finish", "lunch_ingredient_for_recipe_finder", "getfulfillmentservice_for_ecartapi", "getgasprice_for_chaingateway_io", "teams_teamid_eventsources_for_signl4_critical_mobile_alerting", "getpositions_for_kalshi_trading_api", "get_playlist_details_for_youtube_media_downloader", "list_revisions_for_rushtranslate", "stores_get_details_for_target", "events_getbookableitemlist_for_sagenda_free_booking_system", "gettestwebhookpayloadbounce_for_mailslurp_email_testing", "4_charts_for_stockyapiexchange", "v1_folders_folderid_summary_documentid_for_sertifi_esignature_and_epayment"], "api_descs": {"4_charts_for_stockyapiexchange": "This feature provides interactive charts that allow users to visualize the performance of a stock over time. Users can customize the time period and type of chart (line, bar, candlestick, etc.) to get a better understanding of the stock's price movements.", "Finish": "No description available.", "events_getbookableitemlist_for_sagenda_free_booking_system": "list of the bookable Items", "get_amazon_product_details_for_abiola_amazon_data_scraper": "This endpoint get the general product description of any amazon product.", "get_amazon_search_results_for_abiola_amazon_data_scraper": "This endpoint allows you to search any amazon product description by typing the name of the product.", "get_playlist_details_for_youtube_media_downloader": "This endpoint fetches details of a YouTube playlist (user created playlist, album or radio playlist).", "getfulfillmentservice_for_ecartapi": " ", "getgasprice_for_chaingateway_io": "Returns the current gas price in GWEI.", "getpositions_for_kalshi_trading_api": "Endpoint for getting all market positions for the logged-in member.", "gettestwebhookpayloadbounce_for_mailslurp_email_testing": "Get webhook test payload for bounce", "list_revisions_for_rushtranslate": "Get a paginated list of your revisions sorted in descending order by requested_at date.", "lunch_ingredient_for_recipe_finder": "This API endpoint allows users to retrieve a random lunch  recipe that contains a specific ingredient. Users can make a GET request to the endpoint with the name of the ingredient as a query parameter, and the API will return a JSON response with the given recipe, including the name, list of ingredients, and instructions.", "stores_get_details_for_target": "Get detail information of specific store", "teams_teamid_eventsources_for_signl4_critical_mobile_alerting": " ", "v1_folders_folderid_summary_documentid_for_sertifi_esignature_and_epayment": " "}, "aseqs": [{"api_name": "get_amazon_product_details_for_abiola_amazon_data_scraper", "api_action": "\nAction: get_amazon_product_details_for_abiola_amazon_data_scraper\nAction Input: {\n  \"productid\": \"B08L5NP6NG\"\n}", "api_reaction": null}, {"api_name": "get_amazon_product_details_for_abiola_amazon_data_scraper", "api_action": "\nAction: get_amazon_product_details_for_abiola_amazon_data_scraper\nAction Input: {\n  \"productid\": \"B08L5NP6NG\"\n}", "api_reaction": null}, {"api_name": "get_amazon_search_results_for_abiola_amazon_data_scraper", "api_action": "\nAction: get_amazon_search_results_for_abiola_amazon_data_scraper\nAction Input: {\n  \"searchquery\": \"Apple MagSafe Charger\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_amazon_product_details_for_abiola_amazon_data_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_amazon_search_results_for_abiola_amazon_data_scraper"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_amazon_search_results_for_abiola_amazon_data_scraper", "api_action": "\nAction: get_amazon_search_results_for_abiola_amazon_data_scraper\nAction Input: {\n  \"product_name\": \"Apple MagSafe Charger\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_amazon_product_details_for_abiola_amazon_data_scraper", "api_action": "\nAction: get_amazon_product_details_for_abiola_amazon_data_scraper\nAction Input: {\n  \"productid\": \"B08L5NP6NG\",\n  \"actions\": [\n    \"describe_product\"\n  ]\n}", "api_reaction": null}}]}
{"URL": "26759", "query": "I'm a stock market enthusiast and I want to make informed investment decisions. Can you give me the AI-generated price forecast, the list of company peers, the probability of price movements, and the average peer ratios for Apple Inc.?", "api_names": ["Finish", "price_forecasts_for_marketci_analytics", "peers_for_marketci_analytics", "price_probability_for_marketci_analytics", "peer_ratio_averages_for_marketci_analytics", "ideapin_download_pinterest_reels_for_pinterest_downloader_download_image_video_and_pinterest_ideapin", "getproductbycategory_for_cartify", "get_scan_id_for_weblasso", "get_realtime_volume_for_realtime_crypto_prices", "sabr_norm_for_kiann_options_sabr", "users_for_reqres_dont_change_", "get_call_for_face_liveness_check", "group_management_api_access_for_creating_group_for_catchloc", "placebynameandstate_for_mapreflex", "zipcode_by_city_for_geosource_api", "api_for_portfolio", "video_search_for_quality_porn", "get_sessions_for_optitalk", "get_coin_for_coinranking", "transfers_for_football_v2"], "api_descs": {"Finish": "No description available.", "api_for_portfolio": "Auto generated using Swagger Inspector", "get_call_for_face_liveness_check": "Used to fetch api result using the request id received in responses.", "get_coin_for_coinranking": "Find information about a specific coin.", "get_realtime_volume_for_realtime_crypto_prices": "Returns Realtime volume of a coin in US Dollars.", "get_scan_id_for_weblasso": "Run a scan against a target URL and receive a scan ID to obtain scan results or check scan status at a later time.\n\nProvide an optional callback URL to receive scan results automatically once the scan is completed (ensure that the callback URL accepts POST requests)", "get_sessions_for_optitalk": "Get a list of sessions and their corresponding `session_id`.", "getproductbycategory_for_cartify": "Do you want to search for a product by category?\nUse the category of the product in the path parameter.\n\nFor example,\nAre you looking for Phones? Use Phones in your path parameter", "group_management_api_access_for_creating_group_for_catchloc": "API access for location object's group designation and creation.\n\nrequired parameter : api (api.common.group.set.add)", "ideapin_download_pinterest_reels_for_pinterest_downloader_download_image_video_and_pinterest_ideapin": "Get a url to download the ideapins in original hd quality by passing pinterest ideapin address", "peer_ratio_averages_for_marketci_analytics": "An Average of Company Peer Ratios for TTM Data", "peers_for_marketci_analytics": "Get List of Company Peers", "placebynameandstate_for_mapreflex": "Get boundaries of Place by name and state (in GeoJSON format).  For a quick view, copy and paste results: http://geojsonlint.com", "price_forecasts_for_marketci_analytics": "An AI-generated price forecast for the Stock over the next 3 months.", "price_probability_for_marketci_analytics": "Based on over 1000 forecasts, the probabilistic outcome is above or below the current price in a normal distribution.", "sabr_norm_for_kiann_options_sabr": "This is the implementation of the SABR model (z-shift) under the normal volatility mode, with the parameters as follows:\nK_ : strike, fwd_ : forward, shift_ : z-shift, time_ : time-to-expiry, alpha : sabr alpha, beta : sabr beta, rho : sabr rho, volvol : sabr volvol\nmethod_ : internal mode for two modes of calibration. Default of 1\nret_ : set of 0, to return proper json format", "transfers_for_football_v2": "Get a list of transfers for the current season", "users_for_reqres_dont_change_": "Users", "video_search_for_quality_porn": "Search for quality porn and get a provider-subdivided list of the best matching videos.\n\n### Examples\n\nSearch only HD videos that have been rated best with the search term \"amateur\".\n`/search?quality=hd&filter=rating&query=amateur'`\n\nSearch for \"amateur\" only. Filters and quality are optional.\n`/search?query=amateur'`\n\nSearch for \"amateur\" on page 2.\n`/search?query=amateur&page=2'`\n\nSearch for \"amateur\" and set a timeout for 5 seconds for each site request.\n`/search?query=amateur&timeout=5000`\n\nFilter only by the page you need. Here for example by PornHub. It can be filtered by any name part or part URL. For example \"porn\", \".com\" or complete names \"pornhub\", \"youporn.com\".\n`/search?query=amateur&site=pornhub`", "zipcode_by_city_for_geosource_api": "Retrives the zip code/codes of the city ( must be in the supported countries list [ 44 countries ])."}, "aseqs": [{"api_name": "price_forecasts_for_marketci_analytics", "api_action": "\nAction: price_forecasts_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "peers_for_marketci_analytics", "api_action": "\nAction: peers_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "price_probability_for_marketci_analytics", "api_action": "\nAction: price_probability_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "peer_ratio_averages_for_marketci_analytics", "api_action": "\nAction: peer_ratio_averages_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "price_forecasts_for_marketci_analytics"}}, {"state": "generated_by_agent", "aseq": {"api_name": "peers_for_marketci_analytics"}}, {"state": "generated_by_agent", "aseq": {"api_name": "price_probability_for_marketci_analytics"}}, {"state": "generated_by_agent", "aseq": {"api_name": "peer_ratio_averages_for_marketci_analytics", "api_action": "{\"symbol\": \"AAPL\"}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "price_forecasts_for_marketci_analytics", "api_action": "\nAction: price_forecasts_for_marketci_analytics\nAction Input: {\n  \"symbol\": \"AAPL\"\n}", "api_reaction": null}}]}
{"URL": "22193", "query": "I'm a movie enthusiast and I want to explore the latest movie news articles. Can you provide me with trending movie news articles, along with their titles, authors, and publication dates? Additionally, I'm interested in searching for articles related to superheroes with a positive sentiment and published between January 1, 2022, and May 8, 2023. Please limit the results to 10 articles.", "api_names": ["advanced_search_for_kubric_the_comprehensive_movie_news_api", "trending_for_kubric_the_comprehensive_movie_news_api", "Finish", "fight_for_spectation_sports_events_api", "getmaptilewithspanishlabels_for_maptiles", "purgequeue_for_maytapi_whatsapp", "prime_loan_rates_for_u_s_economic_indicators", "tweet_retweeters_for_twitter_v4", "stock_institution_ownership_for_yahoo_finance_v2", "get_chat_user_like_user_from_chat_for_kick_com_api_kick_api", "read_guest_registration_for_ironwifi", "getorderbyid_for_apfd", "get_order_for__demo_project_v13", "get_bank_info_for_routing_number_bank_lookup", "formactionby_id_for_acopaer", "getsongs_for_musiczone", "blogs_copy_for_mgs", "track_info_for_shazam"], "api_descs": {"Finish": "No description available.", "advanced_search_for_kubric_the_comprehensive_movie_news_api": "The `/news/advanced/search` endpoint allows you to search for movie news articles by applying various filters such as date, source, type, and sentiment. It offers a versatile and customizable way to explore the latest news and updates in the movie industry.", "blogs_copy_for_mgs": "MGS Blogs", "fight_for_spectation_sports_events_api": "Get a single fight by ID", "formactionby_id_for_acopaer": "# Description GET Form Action By id\r\n\r\nThis url is to get a Form Action by id is type `GET`, the url is `BASE_URL/form-actions/id` and returns only an object.\r\n\r\nThe param is `id` must type there the id of Form Action to get details about this Form Action.", "get_bank_info_for_routing_number_bank_lookup": "This endpoint returns information about a bank by passing in the routing number.\n\nQuery Params:\n- **format:** defines the response type, currently XML and JSON are supported. Default value is JSON. Possible values: \"xml\", \"json\"\n- **paymentType:** choose to retrieve either the ACH or Wire Transfer information from the bank. Default value is ACH. Possible values: \"ach\", \"wire\"\n\n####Example:\nGET https://routing-number-bank-lookup.p.rapidapi.com/api/v1/121000248?paymentType=wire&format=json returns the wire transfer information for the bank corresponding to routing number 121000248 in json format.", "get_chat_user_like_user_from_chat_for_kick_com_api_kick_api": "Get Chat User (like user from chat)", "get_order_for__demo_project_v13": " ", "getmaptilewithspanishlabels_for_maptiles": "Raster Map Tiles with Spanish Labels. Please see [tutorial](https://rapidapi.com/MapTilesApi/api/maptiles/tutorials/openstreetmap-in-spanish---add-a-spanish-map-to-your-website-with-leaflet-js-and-maptiles-api) on how to use the Spanish world map.", "getorderbyid_for_apfd": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "getsongs_for_musiczone": "get song details", "prime_loan_rates_for_u_s_economic_indicators": "Get daily bank prime loan interest rates.", "purgequeue_for_maytapi_whatsapp": "Clears phone's send message queue.", "read_guest_registration_for_ironwifi": "READ - GUEST REGISTRATION", "stock_institution_ownership_for_yahoo_finance_v2": "Get stock institution ownership.", "track_info_for_shazam": "This endpoint will return info of any track from shazam.com", "trending_for_kubric_the_comprehensive_movie_news_api": "The `/trending` endpoint is a powerful feature of the Kubric Movie News API, designed to provide users with the most recent and popular movie news articles. This endpoint returns the top 50 trending movie articles, ensuring users stay up-to-date with the latest and most engaging content from the world of cinema.", "tweet_retweeters_for_twitter_v4": "Tweet Retweeters"}, "aseqs": [{"api_name": "trending_for_kubric_the_comprehensive_movie_news_api", "api_action": "\nAction: trending_for_kubric_the_comprehensive_movie_news_api\nAction Input: {}", "api_reaction": null}, {"api_name": "advanced_search_for_kubric_the_comprehensive_movie_news_api", "api_action": "\nAction: advanced_search_for_kubric_the_comprehensive_movie_news_api\nAction Input: {\n  \"q\": \"superheroes\",\n  \"sentiment\": \"positive\",\n  \"mindate\": \"2022-01-01\",\n  \"maxdate\": \"2023-05-08\",\n  \"limit\": 10\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "trending_for_kubric_the_comprehensive_movie_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "advanced_search_for_kubric_the_comprehensive_movie_news_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "trending_for_kubric_the_comprehensive_movie_news_api"}}]}
{"URL": "86310", "query": "I need to create a QR code for my company's website. Can you assist me in generating a QR code using the TVB QR Code tool? The URL is 'https://mycompanywebsite.com'", "api_names": ["get_qr_code_for_tvb_qr_code", "Finish", "latest_rates_for_exchanger_currency_rates_provider", "get_top_coins_by_followers_for_crowdsense", "users_favorite_get_for_songmeanings", "player_for_national_football_players", "playlist_details_for_youtube_data", "video_thumbnail_extractor_for_video_thumbnail_extractor", "getorderbyid_for_tes", "querykeywords_for_keyword_analysis"], "api_descs": {"Finish": "No description available.", "get_qr_code_for_tvb_qr_code": "/qr-code", "get_top_coins_by_followers_for_crowdsense": "Retrieve real time top 10 coins by Followers\n\n**Output:**\nEach item contains:\n- Rank number\n- Coin name\n- Coin ticker\n- Followers value\n\n**Definitions:**\n- Followers: Sum of followers reached by coin related mentions\n\n**Details:**\n- All results are in real time", "getorderbyid_for_tes": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions", "latest_rates_for_exchanger_currency_rates_provider": "This endpoint will return the exchange rate data updated every 60 minutes.", "player_for_national_football_players": "Returns player info of player specified (i.e. name, number, position, team). Use hyphenated name with capitals (i.e. Tom-Brady)", "playlist_details_for_youtube_data": "playlist-details", "querykeywords_for_keyword_analysis": "Get the **main keywords** for a given search query.", "users_favorite_get_for_songmeanings": "Get a user’s favorites by specified type.", "video_thumbnail_extractor_for_video_thumbnail_extractor": "Extractor thumbnail image from mp4 video"}, "aseqs": [{"api_name": "get_qr_code_for_tvb_qr_code", "api_action": "\nAction: get_qr_code_for_tvb_qr_code\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_qr_code_for_tvb_qr_code"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_qr_code_for_tvb_qr_code", "api_action": "{\"url\": \"https://mycompanywebsite.com\"}", "api_reaction": null}}]}
{"URL": "86617", "query": "I'm curious about a sentence and need your expertise. Can you assist me in finding the missing word in the sentence 'All [MASK] like to chase rats'? Your help would be greatly appreciated!", "api_names": ["wrt_transformer_for_walnut_word_completion", "Finish", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car", "getrandomwords_for_random_ukrainian_word", "get_states_by_census_division_for_us_states", "airportstatistics_for_flightera_flight_data", "v1_quotes_for_quotes_by_api_ninjas", "strongs_number_detail_api_for_complete_study_bible"], "api_descs": {"Finish": "No description available.", "airportstatistics_for_flightera_flight_data": "Returns detailed airport statistics for airports identified by the provided identifiers. In most cases the list should contain only one entry, unless the ident is ambiguous.\nIf searched by ident, only one airport is returned.\nOne of ident, iata, icao, localID must be provided.\nStatistics are calculated overnight and represent the current day's data.", "get_states_by_census_division_for_us_states": "Retrieve all fields for states matching the provided Census Division(s).  Multiple census divisions can be provided separated by commas.", "getrandomwords_for_random_ukrainian_word": "Get random Ukrainian words.", "pluses_and_minuses_of_the_car_for_pluses_and_minuses_of_the_car": "Pluses and minuses of the car", "strongs_number_detail_api_for_complete_study_bible": "Receives a Strongs Number or comma-separated list of Strong's Numbers (limit 3 at a time) and returns detailed information for each number, including Greek and Hebrew, phonetic pronunciation guide, root, Strong's Condordance, Mounce's Dictionary, Thayer's Greek Lexicon, and Brown-Driver-Brigg's (BDB) Lexicon (Hebrew only).\n\nThayer's and BDB are stored as html and should be displayed as raw html in the browser. Add CSS styling as desired.\nAll scripture references in the html are stored as <a> tags with the following href format: \"/Bible/{book}/{chapter}/{verse}\". If you want the links to work properly, you can program your front-end to recognize these links and do an API call to the Chapter and Verse api  and display the response in a pop-up window.", "v1_quotes_for_quotes_by_api_ninjas": "Returns one (or more) random quotes.", "wrt_transformer_for_walnut_word_completion": "Returns the hidden word in the sentence."}, "aseqs": [{"api_name": "wrt_transformer_for_walnut_word_completion", "api_action": "\nAction: wrt_transformer_for_walnut_word_completion\nAction Input: {\n  \"payload\": \"All [MASK] like to chase rats\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "wrt_transformer_for_walnut_word_completion"}}, {"state": "generated_by_agent", "aseq": {"api_name": "wrt_transformer_for_walnut_word_completion"}}]}
{"URL": "35908", "query": "I'm a soccer fan and I'm curious about the players. Can you provide me with the photo of the player with ID 177208? Additionally, I would like to explore different areas and get a list of areas.", "api_names": ["Finish", "players_photo_for_soccerway_feed", "explore_areas_for_soccerway_feed", "downloadtheattacheddriving_licensefromthedocument_for_cleardil", "basketballv3_for_v3rankings", "username_to_user_id_for_tiktok_private", "disciplina_2_for_colegiosantaana", "get_api_key_for_gigopost", "categories_list_for_kohls", "getpeoplebytopic_for_powerbi", "home_for_amazon_products_api", "photo_from_given_number_for_dimondevosint", "web_search_api_for_bing_search_apis", "data_breach_checker_endpoint_for_data_breach_checker", "get_the_yield_for_sundayfinance", "currencies_list_for_webull", "get_the_places_by_latitude_and_longitude_for_location", "feed_for_free_football_soccer_videos_v2"], "api_descs": {"Finish": "No description available.", "basketballv3_for_v3rankings": "Basketball rankings v3", "categories_list_for_kohls": "List all available categories", "currencies_list_for_webull": "List all global currencies and rates", "data_breach_checker_endpoint_for_data_breach_checker": "The Data Breach Checker API provides a simple endpoint for users to check if their email has been compromised in any known data breaches.", "disciplina_2_for_colegiosantaana": "Disciplina alumno 2", "downloadtheattacheddriving_licensefromthedocument_for_cleardil": " ", "explore_areas_for_soccerway_feed": "Get a list of areas", "feed_for_free_football_soccer_videos_v2": "You can retrieve the highlights and goals of the latest football matches in JSON format from this endpoint", "get_api_key_for_gigopost": "This will simply send you email with instruction. Complete signup process and then access url https://gigopost.com/dev_api to get the api key.", "get_the_places_by_latitude_and_longitude_for_location": "Get the places by latitude and longitude.", "get_the_yield_for_sundayfinance": "Feed in the ticker and get the yield", "getpeoplebytopic_for_powerbi": "Get Power BI influencers by topic.", "home_for_amazon_products_api": "Home Route to show usage message", "photo_from_given_number_for_dimondevosint": "It searches for a photo in the internet about the phone number, if it matches, it returns the photo in bytes.", "players_photo_for_soccerway_feed": "Get player photo", "username_to_user_id_for_tiktok_private": "Get User By Username", "web_search_api_for_bing_search_apis": "Search data and suggested keywords from Bing search engine."}, "aseqs": [{"api_name": "explore_areas_for_soccerway_feed", "api_action": "\nAction: explore_areas_for_soccerway_feed\nAction Input: {}", "api_reaction": null}, {"api_name": "players_photo_for_soccerway_feed", "api_action": "\nAction: players_photo_for_soccerway_feed\nAction Input: {\n  \"player_id\": 177208\n}", "api_reaction": null}, {"api_name": "players_photo_for_soccerway_feed", "api_action": "\nAction: players_photo_for_soccerway_feed\nAction Input: {\n  \"player_id\": 177208\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "players_photo_for_soccerway_feed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "players_photo_for_soccerway_feed"}}, {"state": "generated_by_agent", "aseq": {"api_name": "players_photo_for_soccerway_feed", "api_action": "\nAction: players_photo_for_soccerway_feed\nAction Input: {\n  \"player_id\": 177208\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "explore_areas_for_soccerway_feed"}}]}
{"URL": "16387", "query": "Give me the top liked music videos of all time on YouTube. Can you also provide me with the most viewed videos of 2019? Show me the most viewed music videos by content language type: English, Spanish, Asian, and Other.", "api_names": ["youtube_24h_type_for_musicdata_api", "youtube_toplikes_for_musicdata_api", "Finish", "upcoming_for_csgo_matches_and_tournaments", "traditionalhydrotocarbonfootprint_for_carbonfootprint", "prueb_for_deepsound", "get_by_state_for_cancer_rates_by_usa_state", "leaguelogo_for_americanfootballapi", "lmapi_for_lm_api", "countries_for_surebets_2", "last_year_summary_for_os_sports_perform", "us_license_plate_to_vin_for_vin_decoder"], "api_descs": {"Finish": "No description available.", "countries_for_surebets_2": "Available countries", "get_by_state_for_cancer_rates_by_usa_state": "Get by state", "last_year_summary_for_os_sports_perform": "Get last year summary of the player", "leaguelogo_for_americanfootballapi": "This operation retrieves the logo image for an American Football league, given its unique tournament ID. The image is returned in PNG format.", "lmapi_for_lm_api": "anything", "prueb_for_deepsound": "Prueb", "traditionalhydrotocarbonfootprint_for_carbonfootprint": "Calculate CO2e from the use of traditional hydro provider", "upcoming_for_csgo_matches_and_tournaments": "Last of upcoming cs:go matches", "us_license_plate_to_vin_for_vin_decoder": "Get the vin by license plate number.", "youtube_24h_type_for_musicdata_api": "Youtube most viewed music video by content language type: (English, Spanish, Asian or Other)", "youtube_toplikes_for_musicdata_api": "Top Youtube liked videos of all time"}, "aseqs": [{"api_name": "youtube_toplikes_for_musicdata_api", "api_action": "\nAction: youtube_toplikes_for_musicdata_api\nAction Input: {}", "api_reaction": null}, {"api_name": "youtube_24h_type_for_musicdata_api", "api_action": "\nAction: youtube_24h_type_for_musicdata_api\nAction Input: {\n  \"type\": \"English\"\n}", "api_reaction": null}, {"api_name": "youtube_24h_type_for_musicdata_api", "api_action": "\nAction: youtube_24h_type_for_musicdata_api\nAction Input: {\n  \"type\": \"Spanish\"\n}", "api_reaction": null}, {"api_name": "youtube_24h_type_for_musicdata_api", "api_action": "\nAction: youtube_24h_type_for_musicdata_api\nAction Input: {\n  \"type\": \"Other\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "youtube_toplikes_for_musicdata_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "youtube_toplikes_for_musicdata_api"}}, {"state": "generated_by_agent", "aseq": {"api_name": "youtube_24h_type_for_musicdata_api", "api_action": "\nAction: youtube_24h_type_for_musicdata_api\nAction Input: {\n  \"type\": \"Spanish\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "youtube_24h_type_for_musicdata_api", "api_action": "\nAction: youtube_24h_type_for_musicdata_api\nAction Input: {\n  \"type\": \"Other\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "youtube_24h_type_for_musicdata_api", "api_action": "\nAction: youtube_24h_type_for_musicdata_api\nAction Input: {\n  \"type\": \"Asian\"\n}", "api_reaction": null}}]}
{"URL": "48340", "query": "I want to retrieve the images posted by a specific user. Can you fetch the images for the user with the username 'user123'? Additionally, search for any videos posted by the same user and provide me with the video URLs. Also, suggest some users to follow based on the content posted by this user.", "api_names": ["search_videos_for_twttrapi", "search_suggestions_for_twttrapi", "user_media_for_twttrapi", "Finish", "get_contacts_by_tag_for_churchapp", "sending_sms_otp_auto_generated_otp_for_2factor_authentication_india", "video_data_for_youtube_v2", "get_worldwide_hashtags_for_twitter_hashtags", "get_stats_for_lost_ark", "get_latest_laptop_deals_for_latest_laptop_deals", "calculate_repayment_schedule_for_loan_amortization_calculator", "address_for_real_estate_records", "get_last_cryptocurrency_news_for_crypto_news_api", "geocode_for_senegal_api", "get_timezones_for_travel_hacking_tool", "fed_policy_rates_for_u_s_economic_indicators", "get_all_constants_for_physical_quantities_constants_and_equations_", "title_details_for_watchmode", "get_all_for_exerra_phishing_check", "daily_horoscope_for_horoscope_astrology"], "api_descs": {"Finish": "No description available.", "address_for_real_estate_records": "Get a high level of summary of property records given an address. Street number, name and zipcode are needed to match records. The street names are normalized using Here.com conventions. **This API is free to use.**\n\nIf it's an apartment building, it will return total records available for every property type. For instance,  for 220 Central Park S, New York, NY 10019,  it returns:\n  \"data\": [\n    {\n      \"_id\": {\n        \"STREET_NUMBER\": \"220\",\n        \"STREET\": \"Central Park S\",\n        \"PROPERTY_TYPE\": \"SINGLE RESIDENTIAL CONDO UNIT\",\n        \"ZIPCODE\": \"10019\",\n        \"STATE\": \"NY\"\n      },\n      \"Location\": {\n        \"coordinates\": [\n          -73.9802,\n          40.76719\n        ],\n        \"type\": \"Point\"\n      },\n      \"lastSalesDate\": \"2021-05-24T00:00:00.000Z\",\n      \"lastSalesAmount\": 59500000,\n      \"maxSalesAmount\": 239958219.15,\n      \"TotalRecords\": 100\n    },\n\nThe API is available for public records for New York City 5 boroughs, all New Jersey Counties and DC. \nSources of information are:\nNJ: http://tax1.co.monmouth.nj.us/cgi-bin/prc6.cgi?&ms_user=monm&passwd=&srch_type=0&adv=0&out_type=0&district=0200\nNYC Acris: https://a836-acris.nyc.gov/DS/DocumentSearch/Index", "calculate_repayment_schedule_for_loan_amortization_calculator": "This endpoint calculates repayment schedule.", "daily_horoscope_for_horoscope_astrology": "A daily horoscope is a personalized astrological prediction for an individual based on their birth date and zodiac sign. It provides insight and guidance on various aspects of life such as love, career, finances, and personal growth. The predictions take into account the current positions of the planets and other celestial bodies, offering a unique perspective on the individual's current astrological influences. Daily horoscopes are meant to be used as a tool for reflection and can provide helpful insights and advice for navigating life's challenges and opportunities. Whether you're looking to start your day off on the right foot or seeking guidance in a specific area of your life, a daily horoscope can be a valuable resource for gaining new insights and perspective.", "fed_policy_rates_for_u_s_economic_indicators": "Get daily interest rates paid by the Federal Reserve System on reserves.", "geocode_for_senegal_api": "This endpoint allows you to lookup locations in Senegal by providing an address query parameter. It returns the latitude, longitude and city name of the location.", "get_all_constants_for_physical_quantities_constants_and_equations_": "This endpoint return back data of physical constants formatted as JSON", "get_all_for_exerra_phishing_check": "Get all domains (or links) associated with phishing attempts. The response is very large (>≈13MB), so it is preferred to use \"Check a link\". \n\nDue to the large response size (and processing) this endpoint is paid.", "get_contacts_by_tag_for_churchapp": "This will return data for all contacts with the tag", "get_last_cryptocurrency_news_for_crypto_news_api": "This end point returns all the latest articles on cryptocurrency", "get_latest_laptop_deals_for_latest_laptop_deals": "Get Latest Laptop Deals available right now.", "get_stats_for_lost_ark": "Endpoint to get all possible stats", "get_timezones_for_travel_hacking_tool": "Get TimeZones in Olsen Format with UTC offset and Daylight Savings Time (DST).", "get_worldwide_hashtags_for_twitter_hashtags": "Returns a list of all recent hashtags worldwide", "search_suggestions_for_twttrapi": "Search suggestions", "search_videos_for_twttrapi": "Search videos", "sending_sms_otp_auto_generated_otp_for_2factor_authentication_india": "This endpoint is used to send Auto Generated SMS OTP to India", "title_details_for_watchmode": "Get the details for a specific title, using the Watchmode universal ID.", "user_media_for_twttrapi": "Get user's images", "video_data_for_youtube_v2": "Get downloadable links of the Video"}, "aseqs": [{"api_name": "user_media_for_twttrapi", "api_action": "\nAction: user_media_for_twttrapi\nAction Input: {}", "api_reaction": null}, {"api_name": "search_videos_for_twttrapi", "api_action": "\nAction: search_videos_for_twttrapi\nAction Input: {\n  \"query\": \"user123\"\n}", "api_reaction": null}, {"api_name": "search_suggestions_for_twttrapi", "api_action": "\nAction: search_suggestions_for_twttrapi\nAction Input: {\n  \"query\": \"user123\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "user_media_for_twttrapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "search_videos_for_twttrapi"}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_media_for_twttrapi", "api_action": "\nAction: user_media_for_twttrapi\nAction Input: {\n  \"username\": \"user123\",\n  \"media_type\": \"image\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "user_media_for_twttrapi", "api_action": "\nAction: user_media_for_twttrapi\nAction Input: {\n  \"username\": \"user123\"\n}", "api_reaction": null}}]}
{"URL": "32578", "query": "I'm a game enthusiast and I'm interested in the gaming scene. Can you show me the latest news from the Epic Games store? It would be great if I could also find out if there are any free games available in the US.", "api_names": ["get_free_games_for_epic_games_store", "get_news_for_epic_games_store", "Finish", "connectip_185_225_233_110_30015_for_vrising_server_query_api", "inverted_hammer_for_barpatterns", "leaguedetails_for_handballapi", "keywords_for_ai_writer", "route_information_for_bart", "get_us_states_in_geojson_format_for_us_states_and_postal_areas_in_geojson", "search_location_by_name_or_zip_code_for_weather_forecast_14_days", "get_all_the_latest_articles_for_dev_to_api", "stays_properties_list_by_url_for_booking_com_v2", "get_chest_item_recipes_for_lost_ark_simple", "get_company_quote_price_data_for_stoxx", "findallstates_for_india_pincode_api", "get_api_tag_for_aaaa", "codepoint_for_unicode_codepoints", "flight_api_for_flight_v2"], "api_descs": {"Finish": "No description available.", "codepoint_for_unicode_codepoints": "show detailed information about a single codepoint. You can specify fields of interest with the “property” parameter: codepoint/1234?property=age,uc,lc", "connectip_185_225_233_110_30015_for_vrising_server_query_api": "Get the connect IP from server - change `/IP/PORT`", "findallstates_for_india_pincode_api": "findallstates", "flight_api_for_flight_v2": "FlightsLogic Global Airfare APIs connect you to the finest information in the travel industry. You can now build, innovate and launch your web and Mobile applications with our Flight API. Inspirational search features combine our Global Airfare APIs with your existing travel offering to complement your product range.", "get_all_the_latest_articles_for_dev_to_api": "It returns all the latest articles present in the dev.to website.", "get_api_tag_for_aaaa": "Get Tag information for a specific API", "get_chest_item_recipes_for_lost_ark_simple": "Get List of **Lost Ark** Chest Item Recipes", "get_company_quote_price_data_for_stoxx": "Retrieve updated quote and pricing data for a given company. This endpoint provides you with:\n\n- Symbol\n- Company Name\n- Exchange\n- High\n- Low\n- Close\n- PE\n- Volume\n- Market Cap\n- Datetime", "get_free_games_for_epic_games_store": "List of present free games.", "get_news_for_epic_games_store": "Get list of all news on the platform.", "get_us_states_in_geojson_format_for_us_states_and_postal_areas_in_geojson": "Get US states in GeoJSON format", "inverted_hammer_for_barpatterns": "List of stocks having Inverted Hammer signal.", "keywords_for_ai_writer": "Quickly define keywords from a given text", "leaguedetails_for_handballapi": "Get details of a handball unique tournament by ID", "route_information_for_bart": "", "search_location_by_name_or_zip_code_for_weather_forecast_14_days": "Search location by Name or zip code and get the key for the forecast", "stays_properties_list_by_url_for_booking_com_v2": "Search by url"}, "aseqs": [{"api_name": "get_news_for_epic_games_store", "api_action": "\nAction: get_news_for_epic_games_store\nAction Input: {\n  \"limit\": 5,\n  \"locale\": \"en-US\"\n}", "api_reaction": null}, {"api_name": "get_free_games_for_epic_games_store", "api_action": "\nAction: get_free_games_for_epic_games_store\nAction Input: {\n  \"locale\": \"en-US\",\n  \"country\": \"US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_epic_games_store"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_free_games_for_epic_games_store", "api_action": "\nAction: get_free_games_for_epic_games_store\nAction Input: {\n  \"locale\": \"en-US\"\n}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_news_for_epic_games_store"}}]}
{"URL": "67466", "query": "I am planning a road trip across California and I would like to know the cities I should visit. Can you help me by providing a list of cities in California, along with their latitude and longitude coordinates? This will help me plan my route effectively. Thank you!", "api_names": ["Finish", "cities_in_a_state_for_referential_db", "states_for_referential_db", "get_all_routes_for_burning_series_api", "get_basic_details_dp_for_instagram_dp_download", "all_pageant_contests_for_pageantdb", "cnpj_for_dados_cnpj", "getformat_for_heywatch_video_encoding", "check_movie_status_for_magisto", "all_tags_for_rapid_porn", "bulkgenerateguids_for_guid_generator", "getpestsbycrop_for_agrofitdata"], "api_descs": {"Finish": "No description available.", "all_pageant_contests_for_pageantdb": "Get a list of all pageant contests.", "all_tags_for_rapid_porn": "", "bulkgenerateguids_for_guid_generator": " ", "check_movie_status_for_magisto": "Check the state of the movie session", "cities_in_a_state_for_referential_db": "Get the list of cities in a state.", "cnpj_for_dados_cnpj": "Buscar dados empresa pelo CNPJ", "get_all_routes_for_burning_series_api": "Get all available routes", "get_basic_details_dp_for_instagram_dp_download": "get basic details and Instagram DP download link", "getformat_for_heywatch_video_encoding": "Get a specific format", "getpestsbycrop_for_agrofitdata": " ", "states_for_referential_db": "Get the list of states within country"}, "aseqs": [{"api_name": "states_for_referential_db", "api_action": "\nAction: states_for_referential_db\nAction Input: {\n  \"countrycode\": \"US\"\n}", "api_reaction": null}, {"api_name": "cities_in_a_state_for_referential_db", "api_action": "\nAction: cities_in_a_state_for_referential_db\nAction Input: {\n  \"statecode\": \"CA\",\n  \"countrycode\": \"US\"\n}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "cities_in_a_state_for_referential_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "cities_in_a_state_for_referential_db"}}, {"state": "generated_by_agent", "aseq": {"api_name": "get_basic_details_dp_for_instagram_dp_download"}}]}
{"URL": "55805", "query": "I need to roll two regular dice and obtain the total. Furthermore, roll four custom dice with ten sides each and provide the individual results as well as the overall total. Can you help me with these dice rolls?", "api_names": ["Finish", "regular_dice_rolls_for_dice_roll_simulator", "custom_dice_rolls_for_dice_roll_simulator", "get_popular_links_for_geeklist", "referee_events_for_os_sports_perform", "net_worth_history_sparklines_for__all_in_one_crypto_swiss_knife_", "newsletter_for_ai_writer", "game_odds_by_category_schedule_for_sportsbook_odds", "get_planet_position_angles_for_yawin_indian_astrology", "fixture_tree_pregame_sport_sport_id_for_betbro_sportbook", "ping_for_stocks_archive", "v1_exchangerate_for_exchange_rate_by_api_ninjas", "get_daily_influencer_posts_by_coin_ticker_for_crowdsense", "fetch_full_metadata_for_phone_validator_api", "generate_for_payment_card_numbers_generator"], "api_descs": {"Finish": "No description available.", "custom_dice_rolls_for_dice_roll_simulator": "Roll any number of dice with any number of sides any number of times.", "fetch_full_metadata_for_phone_validator_api": "This endpoint will return the full metadata of the number included on the request.", "fixture_tree_pregame_sport_sport_id_for_betbro_sportbook": "Get a tree list of fixtures suitable for constructing a SportBook navigation side menu.\nResponse tree consists of sport, region, competition and fixtures.\n", "game_odds_by_category_schedule_for_sportsbook_odds": "If you query the category schedule and do not include a \"sport\" and \"category\" parameter it will return all possible values of sport and their respective categories. If you do include those parameters it will return a schedule of all sites for that sport and category. Remember that the categories are hashes, 0 is moneylines, 1 is spreads, 2 is over under, etc. There are a lot of categories, refer to the deconstruct ID code to determine which is which.", "generate_for_payment_card_numbers_generator": "# Generate payment card numbers\n\n## Default values\n\n**scheme**: \"visa\"\n**count**: 5", "get_daily_influencer_posts_by_coin_ticker_for_crowdsense": "Retrieve news and posts from Top Influencers in social media ordered by date by coin ticker\nThis endpoint contains results on a specific coin. To search for influencer posts on all coins coins check \"Get Daily Influencer Posts\"\n\n**Input:**\n\n- Coin Ticker (Required)\n\n**Output:**\n\n- EventId\n- EventType\n- Event Time\n- Publisher\n- Source\n- Related coins\n- Event Color\n- Number of followers\n- Event text\n\n**Definitions:**\n\n- Publisher: User name of the publisher of the event in social media\n- Source: Social media where the post was published\n- Related coins: Coins mentioned in the post\n- Event Color: Shows the magnitude of the event (From most important to less important: Red, Orange, Yellow, Gray and Black)\n- Number of followers: Influencer´s number of followers in social media\n\n**Details:**\n\n- Results are up to 100\n- All dates are UTC", "get_planet_position_angles_for_yawin_indian_astrology": "Find the Planet position angles on a birth date and time", "get_popular_links_for_geeklist": "", "net_worth_history_sparklines_for__all_in_one_crypto_swiss_knife_": "Get sparklines with address net worth for chart rendering.\nReturns array of objects with timestamp and USD value", "newsletter_for_ai_writer": "Write a compelling newsletter from a given text", "ping_for_stocks_archive": "Check that server is still alive", "referee_events_for_os_sports_perform": "Get events by referee ID", "regular_dice_rolls_for_dice_roll_simulator": "Roll any number of regular dice any number of times.", "v1_exchangerate_for_exchange_rate_by_api_ninjas": "API Ninjas Exchange Rate API endpoint."}, "aseqs": [{"api_name": "regular_dice_rolls_for_dice_roll_simulator", "api_action": "\nAction: regular_dice_rolls_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "custom_dice_rolls_for_dice_roll_simulator", "api_action": "\nAction: custom_dice_rolls_for_dice_roll_simulator\nAction Input: {}", "api_reaction": null}, {"api_name": "Finish", "api_action": null, "api_reaction": null}], "bseqs": [{"state": "generated_by_agent", "aseq": {"api_name": "regular_dice_rolls_for_dice_roll_simulator"}}, {"state": "generated_by_agent", "aseq": {"api_name": "custom_dice_rolls_for_dice_roll_simulator", "api_action": "{\"numberOfDiceRolls\": 2, \"diceSides\": 6}", "api_reaction": null}}, {"state": "generated_by_agent", "aseq": {"api_name": "regular_dice_rolls_for_dice_roll_simulator", "api_action": "\nAction: regular_dice_rolls_for_dice_roll_simulator\nAction Input: {}\n", "api_reaction": null}}]}
